commit e530dca584a9aa4aedf26adf0ed3c1c9b80e2767
Author: Dominik Brodowski <linux@dominikbrodowski.net>
Date:   Mon Mar 19 18:09:27 2018 +0100

    kernel: provide ksys_*() wrappers for syscalls called by kernel/uid16.c
    
    Using these helpers allows us to avoid the in-kernel calls to these
    syscalls: sys_setregid(), sys_setgid(), sys_setreuid(), sys_setuid(),
    sys_setresuid(), sys_setresgid(), sys_setfsuid(), and sys_setfsgid().
    
    The ksys_ prefix denotes that these function are meant as a drop-in
    replacement for the syscall. In particular, they use the same calling
    convention.
    
    This patch is part of a series which removes in-kernel calls to syscalls.
    On this basis, the syscall entry path can be streamlined. For details, see
    http://lkml.kernel.org/r/20180325162527.GA17492@light.dominikbrodowski.net
    
    Cc: Al Viro <viro@ZenIV.linux.org.uk>
    Cc: Eric W. Biederman <ebiederm@xmission.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>

diff --git a/kernel/uid16.h b/kernel/uid16.h
new file mode 100644
index 000000000000..cdca040f7602
--- /dev/null
+++ b/kernel/uid16.h
@@ -0,0 +1,14 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+#ifndef LINUX_UID16_H
+#define LINUX_UID16_H
+
+long __sys_setuid(uid_t uid);
+long __sys_setgid(gid_t gid);
+long __sys_setreuid(uid_t ruid, uid_t euid);
+long __sys_setregid(gid_t rgid, gid_t egid);
+long __sys_setresuid(uid_t ruid, uid_t euid, uid_t suid);
+long __sys_setresgid(gid_t rgid, gid_t egid, gid_t sgid);
+long __sys_setfsuid(uid_t uid);
+long __sys_setfsgid(gid_t gid);
+
+#endif /* LINUX_UID16_H */
