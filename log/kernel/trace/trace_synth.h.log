commit 726721a51838e3983023f906580722fc83f804ee
Author: Tom Zanussi <zanussi@kernel.org>
Date:   Thu May 28 14:32:37 2020 -0500

    tracing: Move synthetic events to a separate file
    
    With the addition of the in-kernel synthetic event API, synthetic
    events are no longer specifically tied to the histogram triggers.
    
    The synthetic event code is also making trace_event_hist.c very
    bloated, so for those reasons, move it to a separate file,
    trace_events_synth.c, along with a new trace_synth.h header file.
    
    Because synthetic events are now independent from hist triggers, add a
    new CONFIG_SYNTH_EVENTS config option, and have CONFIG_HIST_TRIGGERS
    select it, and have CONFIG_SYNTH_EVENT_GEN_TEST depend on it.
    
    Link: http://lkml.kernel.org/r/4d1fa1f85ed5982706ac44844ac92451dcb04715.1590693308.git.zanussi@kernel.org
    
    Signed-off-by: Tom Zanussi <zanussi@kernel.org>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>

diff --git a/kernel/trace/trace_synth.h b/kernel/trace/trace_synth.h
new file mode 100644
index 000000000000..ac35c45207c4
--- /dev/null
+++ b/kernel/trace/trace_synth.h
@@ -0,0 +1,36 @@
+// SPDX-License-Identifier: GPL-2.0
+#ifndef __TRACE_SYNTH_H
+#define __TRACE_SYNTH_H
+
+#include "trace_dynevent.h"
+
+#define SYNTH_SYSTEM		"synthetic"
+#define SYNTH_FIELDS_MAX	32
+
+#define STR_VAR_LEN_MAX		32 /* must be multiple of sizeof(u64) */
+
+struct synth_field {
+	char *type;
+	char *name;
+	size_t size;
+	unsigned int offset;
+	bool is_signed;
+	bool is_string;
+};
+
+struct synth_event {
+	struct dyn_event			devent;
+	int					ref;
+	char					*name;
+	struct synth_field			**fields;
+	unsigned int				n_fields;
+	unsigned int				n_u64;
+	struct trace_event_class		class;
+	struct trace_event_call			call;
+	struct tracepoint			*tp;
+	struct module				*mod;
+};
+
+extern struct synth_event *find_synth_event(const char *name);
+
+#endif /* __TRACE_SYNTH_H */
