commit 3b296633ae6b91bfff815eb005d220b6ad4a47b1
Author: Mathieu Xhonneux <m.xhonneux@gmail.com>
Date:   Sat May 26 15:44:08 2018 +0100

    selftests/bpf: missing headers test_lwt_seg6local
    
    Previous patch "selftests/bpf: test for seg6local End.BPF action" lacks
    some UAPI headers in tools/.
    
    clang -I. -I./include/uapi -I../../../include/uapi -idirafter
    /usr/local/include -idirafter
    /data/users/yhs/work/llvm/build/install/lib/clang/7.0.0/include
    -idirafter /usr/include -Wno-compare-distinct-pointer-types \
             -O2 -target bpf -emit-llvm -c test_lwt_seg6local.c -o - |      \
    llc -march=bpf -mcpu=generic  -filetype=obj -o
    [...]/net-next/tools/testing/selftests/bpf/test_lwt_seg6local.o
    test_lwt_seg6local.c:4:10: fatal error: 'linux/seg6_local.h' file not found
             ^~~~~~~~~~~~~~~~~~~~
    1 error generated.
    make: Leaving directory
    `/data/users/yhs/work/net-next/tools/testing/selftests/bpf'
    
    v2: moving the headers to tools/include/uapi/.
    
    Reported-by: Y Song <ys114321@gmail.com>
    Signed-off-by: Mathieu Xhonneux <m.xhonneux@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>

diff --git a/tools/include/uapi/linux/seg6.h b/tools/include/uapi/linux/seg6.h
new file mode 100644
index 000000000000..286e8d6a8e98
--- /dev/null
+++ b/tools/include/uapi/linux/seg6.h
@@ -0,0 +1,55 @@
+/* SPDX-License-Identifier: GPL-2.0+ WITH Linux-syscall-note */
+/*
+ *  SR-IPv6 implementation
+ *
+ *  Author:
+ *  David Lebrun <david.lebrun@uclouvain.be>
+ *
+ *
+ *  This program is free software; you can redistribute it and/or
+ *      modify it under the terms of the GNU General Public License
+ *      as published by the Free Software Foundation; either version
+ *      2 of the License, or (at your option) any later version.
+ */
+
+#ifndef _UAPI_LINUX_SEG6_H
+#define _UAPI_LINUX_SEG6_H
+
+#include <linux/types.h>
+#include <linux/in6.h>		/* For struct in6_addr. */
+
+/*
+ * SRH
+ */
+struct ipv6_sr_hdr {
+	__u8	nexthdr;
+	__u8	hdrlen;
+	__u8	type;
+	__u8	segments_left;
+	__u8	first_segment; /* Represents the last_entry field of SRH */
+	__u8	flags;
+	__u16	tag;
+
+	struct in6_addr segments[0];
+};
+
+#define SR6_FLAG1_PROTECTED	(1 << 6)
+#define SR6_FLAG1_OAM		(1 << 5)
+#define SR6_FLAG1_ALERT		(1 << 4)
+#define SR6_FLAG1_HMAC		(1 << 3)
+
+#define SR6_TLV_INGRESS		1
+#define SR6_TLV_EGRESS		2
+#define SR6_TLV_OPAQUE		3
+#define SR6_TLV_PADDING		4
+#define SR6_TLV_HMAC		5
+
+#define sr_has_hmac(srh) ((srh)->flags & SR6_FLAG1_HMAC)
+
+struct sr6_tlv {
+	__u8 type;
+	__u8 len;
+	__u8 data[0];
+};
+
+#endif
