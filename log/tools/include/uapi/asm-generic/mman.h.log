commit b830f94f7303a49d509d5b1bb34ecb2e648b23c4
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Fri Jul 26 12:49:00 2019 -0300

    tools headers UAPI: Update tools's copy of mman.h headers
    
    To pick up the changes from:
    
      8aa3c927ec10 ("mm/mmap: move common defines to mman-common.h")
      22fcea6f85f2 ("mm: move MAP_SYNC to asm-generic/mman-common.h")
      0bf5f9492389 ("mm: fix the MAP_UNINITIALIZED flag")
    
    To address the following perf build warnings:
    
      Warning: Kernel ABI header at 'tools/include/uapi/asm-generic/mman-common.h' differs from latest version at 'include/uapi/asm-generic/mman-common.h'
      diff -u tools/include/uapi/asm-generic/mman-common.h include/uapi/asm-generic/mman-common.h
      Warning: Kernel ABI header at 'tools/include/uapi/asm-generic/mman.h' differs from latest version at 'include/uapi/asm-generic/mman.h'
      diff -u tools/include/uapi/asm-generic/mman.h include/uapi/asm-generic/mman.h
    
    That ends up just moving a bit the auto-generated code->string tables:
    
      $ tools/perf/trace/beauty/mmap_flags.sh > before
      $ cp include/uapi/asm-generic/mman.h tools/include/uapi/asm-generic/mman.h
      $ cp include/uapi/asm-generic/mman-common.h tools/include/uapi/asm-generic/mman-common.h
      $ tools/perf/trace/beauty/mmap_flags.sh > after
      $ diff -u before after
      --- before 2019-07-26 12:45:02.948335904 -0300
      +++ after 2019-07-26 12:48:05.342893539 -0300
      @@ -4,15 +4,15 @@
              [ilog2(0x02) + 1] = "PRIVATE",
              [ilog2(0x10) + 1] = "FIXED",
              [ilog2(0x20) + 1] = "ANONYMOUS",
      +       [ilog2(0x008000) + 1] = "POPULATE",
      +       [ilog2(0x010000) + 1] = "NONBLOCK",
      +       [ilog2(0x020000) + 1] = "STACK",
      +       [ilog2(0x040000) + 1] = "HUGETLB",
      +       [ilog2(0x080000) + 1] = "SYNC",
              [ilog2(0x100000) + 1] = "FIXED_NOREPLACE",
              [ilog2(0x0100) + 1] = "GROWSDOWN",
              [ilog2(0x0800) + 1] = "DENYWRITE",
              [ilog2(0x1000) + 1] = "EXECUTABLE",
              [ilog2(0x2000) + 1] = "LOCKED",
              [ilog2(0x4000) + 1] = "NORESERVE",
      -       [ilog2(0x8000) + 1] = "POPULATE",
      -       [ilog2(0x10000) + 1] = "NONBLOCK",
      -       [ilog2(0x20000) + 1] = "STACK",
      -       [ilog2(0x40000) + 1] = "HUGETLB",
      -       [ilog2(0x80000) + 1] = "SYNC",
       };
      $
    
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Luis Cláudio Gonçalves <lclaudio@redhat.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Link: https://lkml.kernel.org/n/tip-fzqvzni9megaurmsp0k4vy27@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>

diff --git a/tools/include/uapi/asm-generic/mman.h b/tools/include/uapi/asm-generic/mman.h
index 36c197fc44a0..406f7718f9ad 100644
--- a/tools/include/uapi/asm-generic/mman.h
+++ b/tools/include/uapi/asm-generic/mman.h
@@ -9,13 +9,11 @@
 #define MAP_EXECUTABLE	0x1000		/* mark it as an executable */
 #define MAP_LOCKED	0x2000		/* pages are locked */
 #define MAP_NORESERVE	0x4000		/* don't check for reservations */
-#define MAP_POPULATE	0x8000		/* populate (prefault) pagetables */
-#define MAP_NONBLOCK	0x10000		/* do not block on IO */
-#define MAP_STACK	0x20000		/* give out an address that is best suited for process/thread stacks */
-#define MAP_HUGETLB	0x40000		/* create a huge page mapping */
-#define MAP_SYNC	0x80000		/* perform synchronous page faults for the mapping */
 
-/* Bits [26:31] are reserved, see mman-common.h for MAP_HUGETLB usage */
+/*
+ * Bits [26:31] are reserved, see asm-generic/hugetlb_encode.h
+ * for MAP_HUGETLB usage
+ */
 
 #define MCL_CURRENT	1		/* lock all current mappings */
 #define MCL_FUTURE	2		/* lock all future mappings */

commit be709d48329a500621d2a05835283150ae137b45
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Mon Mar 25 14:06:07 2019 -0300

    tools headers uapi: Sync asm-generic/mman-common.h and linux/mman.h
    
    To deal with the move of some defines from asm-generic/mmap-common.h to
    linux/mman.h done in:
    
      746c9398f5ac ("arch: move common mmap flags to linux/mman.h")
    
    The generated mmap_flags array stays the same:
    
      $ tools/perf/trace/beauty/mmap_flags.sh
      static const char *mmap_flags[] = {
            [ilog2(0x40) + 1] = "32BIT",
            [ilog2(0x01) + 1] = "SHARED",
            [ilog2(0x02) + 1] = "PRIVATE",
            [ilog2(0x10) + 1] = "FIXED",
            [ilog2(0x20) + 1] = "ANONYMOUS",
            [ilog2(0x100000) + 1] = "FIXED_NOREPLACE",
            [ilog2(0x0100) + 1] = "GROWSDOWN",
            [ilog2(0x0800) + 1] = "DENYWRITE",
            [ilog2(0x1000) + 1] = "EXECUTABLE",
            [ilog2(0x2000) + 1] = "LOCKED",
            [ilog2(0x4000) + 1] = "NORESERVE",
            [ilog2(0x8000) + 1] = "POPULATE",
            [ilog2(0x10000) + 1] = "NONBLOCK",
            [ilog2(0x20000) + 1] = "STACK",
            [ilog2(0x40000) + 1] = "HUGETLB",
            [ilog2(0x80000) + 1] = "SYNC",
      };
      $
    
    And to have the system's sys/mman.h find the definition of MAP_SHARED
    and MAP_PRIVATE, make sure they are defined in the tools/ mman-common.h
    in a way that keeps it the same as the kernel's, need for keeping the
    Android's NDK cross build working.
    
    This silences these perf build warnings:
    
      Warning: Kernel ABI header at 'tools/include/uapi/asm-generic/mman-common.h' differs from latest version at 'include/uapi/asm-generic/mman-common.h'
      diff -u tools/include/uapi/asm-generic/mman-common.h include/uapi/asm-generic/mman-common.h
      Warning: Kernel ABI header at 'tools/include/uapi/linux/mman.h' differs from latest version at 'include/uapi/linux/mman.h'
      diff -u tools/include/uapi/linux/mman.h include/uapi/linux/mman.h
    
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Michael S. Tsirkin <mst@redhat.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Link: https://lkml.kernel.org/n/tip-h80ycpc6pedg9s5z2rwpy6ws@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>

diff --git a/tools/include/uapi/asm-generic/mman.h b/tools/include/uapi/asm-generic/mman.h
index 653687d9771b..36c197fc44a0 100644
--- a/tools/include/uapi/asm-generic/mman.h
+++ b/tools/include/uapi/asm-generic/mman.h
@@ -2,7 +2,7 @@
 #ifndef __ASM_GENERIC_MMAN_H
 #define __ASM_GENERIC_MMAN_H
 
-#include <asm-generic/mman-common.h>
+#include <asm-generic/mman-common-tools.h>
 
 #define MAP_GROWSDOWN	0x0100		/* stack-like segment */
 #define MAP_DENYWRITE	0x0800		/* ETXTBSY */

commit 1b3b5219abfd6a214e99018747e9fe98514b43ca
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Mon Nov 27 12:18:23 2017 -0300

    tools headers: Syncronize mman.h ABI header
    
    To add support for the MAP_SYNC flag introduced in:
    
      b6fb293f2497 ("mm: Define MAP_SYNC and VM_SYNC flags")
    
    Update tools/perf/trace/beauty/mmap.c to support that flag.
    
    This silences this perf build warning:
    
      Warning: Kernel ABI header at 'tools/include/uapi/asm-generic/mman.h' differs from latest version at 'include/uapi/asm-generic/mman.h'
    
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: Jan Kara <jack@suse.cz>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Wang Nan <wangnan0@huawei.com>
    Link: https://lkml.kernel.org/n/tip-14zyk3iywrj37c7g1eagmzbo@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>

diff --git a/tools/include/uapi/asm-generic/mman.h b/tools/include/uapi/asm-generic/mman.h
index 2dffcbf705b3..653687d9771b 100644
--- a/tools/include/uapi/asm-generic/mman.h
+++ b/tools/include/uapi/asm-generic/mman.h
@@ -13,6 +13,7 @@
 #define MAP_NONBLOCK	0x10000		/* do not block on IO */
 #define MAP_STACK	0x20000		/* give out an address that is best suited for process/thread stacks */
 #define MAP_HUGETLB	0x40000		/* create a huge page mapping */
+#define MAP_SYNC	0x80000		/* perform synchronous page faults for the mapping */
 
 /* Bits [26:31] are reserved, see mman-common.h for MAP_HUGETLB usage */
 

commit fb7df12d645cfba6a76a45fdcc7e3f7fbbcda661
Author: Ingo Molnar <mingo@kernel.org>
Date:   Fri Nov 3 12:18:37 2017 +0100

    tools/headers: Synchronize kernel ABI headers
    
    After the SPDX license tags were added a number of tooling headers got out of
    sync with their kernel variants, generating lots of build warnings.
    
    Sync them:
    
     - tools/arch/x86/include/asm/disabled-features.h,
       tools/arch/x86/include/asm/required-features.h,
       tools/include/linux/hash.h:
    
         Remove the SPDX tag where the kernel version does not have it.
    
     - tools/include/asm-generic/bitops/__fls.h,
       tools/include/asm-generic/bitops/arch_hweight.h,
       tools/include/asm-generic/bitops/const_hweight.h,
       tools/include/asm-generic/bitops/fls.h,
       tools/include/asm-generic/bitops/fls64.h,
       tools/include/uapi/asm-generic/ioctls.h,
       tools/include/uapi/asm-generic/mman-common.h,
       tools/include/uapi/sound/asound.h,
       tools/include/uapi/linux/kvm.h,
       tools/include/uapi/linux/perf_event.h,
       tools/include/uapi/linux/sched.h,
       tools/include/uapi/linux/vhost.h,
       tools/include/uapi/sound/asound.h:
    
         Add the SPDX tag of the respective kernel header.
    
     - tools/include/uapi/linux/bpf_common.h,
       tools/include/uapi/linux/fcntl.h,
       tools/include/uapi/linux/hw_breakpoint.h,
       tools/include/uapi/linux/mman.h,
       tools/include/uapi/linux/stat.h,
    
         Change the tag to the kernel header version:
    
           -/* SPDX-License-Identifier: GPL-2.0 */
           +/* SPDX-License-Identifier: GPL-2.0 WITH Linux-syscall-note */
    
    Also sync other header details:
    
     - include/uapi/sound/asound.h:
    
         Fix pointless end of line whitespace noise the header grew in this cycle.
    
     - tools/arch/x86/lib/memcpy_64.S:
    
         Sync the code and add tools/include/asm/export.h with dummy wrappers
         to support building the kernel side code in a tooling header environment.
    
     - tools/include/uapi/asm-generic/mman.h,
       tools/include/uapi/linux/bpf.h:
    
         Sync other details that don't impact tooling's use of the ABIs.
    
    Acked-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: linux-kernel@vger.kernel.org
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Stephen Rothwell <sfr@canb.auug.org.au>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

diff --git a/tools/include/uapi/asm-generic/mman.h b/tools/include/uapi/asm-generic/mman.h
index f7c7b4355e56..2dffcbf705b3 100644
--- a/tools/include/uapi/asm-generic/mman.h
+++ b/tools/include/uapi/asm-generic/mman.h
@@ -1,8 +1,8 @@
-/* SPDX-License-Identifier: GPL-2.0 */
+/* SPDX-License-Identifier: GPL-2.0 WITH Linux-syscall-note */
 #ifndef __ASM_GENERIC_MMAN_H
 #define __ASM_GENERIC_MMAN_H
 
-#include <uapi/asm-generic/mman-common.h>
+#include <asm-generic/mman-common.h>
 
 #define MAP_GROWSDOWN	0x0100		/* stack-like segment */
 #define MAP_DENYWRITE	0x0800		/* ETXTBSY */

commit b24413180f5600bcb3bb70fbed5cf186b60864bd
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Nov 1 15:07:57 2017 +0100

    License cleanup: add SPDX GPL-2.0 license identifier to files with no license
    
    Many source files in the tree are missing licensing information, which
    makes it harder for compliance tools to determine the correct license.
    
    By default all files without license information are under the default
    license of the kernel, which is GPL version 2.
    
    Update the files which contain no license information with the 'GPL-2.0'
    SPDX license identifier.  The SPDX identifier is a legally binding
    shorthand, which can be used instead of the full boiler plate text.
    
    This patch is based on work done by Thomas Gleixner and Kate Stewart and
    Philippe Ombredanne.
    
    How this work was done:
    
    Patches were generated and checked against linux-4.14-rc6 for a subset of
    the use cases:
     - file had no licensing information it it.
     - file was a */uapi/* one with no licensing information in it,
     - file was a */uapi/* one with existing licensing information,
    
    Further patches will be generated in subsequent months to fix up cases
    where non-standard license headers were used, and references to license
    had to be inferred by heuristics based on keywords.
    
    The analysis to determine which SPDX License Identifier to be applied to
    a file was done in a spreadsheet of side by side results from of the
    output of two independent scanners (ScanCode & Windriver) producing SPDX
    tag:value files created by Philippe Ombredanne.  Philippe prepared the
    base worksheet, and did an initial spot review of a few 1000 files.
    
    The 4.13 kernel was the starting point of the analysis with 60,537 files
    assessed.  Kate Stewart did a file by file comparison of the scanner
    results in the spreadsheet to determine which SPDX license identifier(s)
    to be applied to the file. She confirmed any determination that was not
    immediately clear with lawyers working with the Linux Foundation.
    
    Criteria used to select files for SPDX license identifier tagging was:
     - Files considered eligible had to be source code files.
     - Make and config files were included as candidates if they contained >5
       lines of source
     - File already had some variant of a license header in it (even if <5
       lines).
    
    All documentation files were explicitly excluded.
    
    The following heuristics were used to determine which SPDX license
    identifiers to apply.
    
     - when both scanners couldn't find any license traces, file was
       considered to have no license information in it, and the top level
       COPYING file license applied.
    
       For non */uapi/* files that summary was:
    
       SPDX license identifier                            # files
       ---------------------------------------------------|-------
       GPL-2.0                                              11139
    
       and resulted in the first patch in this series.
    
       If that file was a */uapi/* path one, it was "GPL-2.0 WITH
       Linux-syscall-note" otherwise it was "GPL-2.0".  Results of that was:
    
       SPDX license identifier                            # files
       ---------------------------------------------------|-------
       GPL-2.0 WITH Linux-syscall-note                        930
    
       and resulted in the second patch in this series.
    
     - if a file had some form of licensing information in it, and was one
       of the */uapi/* ones, it was denoted with the Linux-syscall-note if
       any GPL family license was found in the file or had no licensing in
       it (per prior point).  Results summary:
    
       SPDX license identifier                            # files
       ---------------------------------------------------|------
       GPL-2.0 WITH Linux-syscall-note                       270
       GPL-2.0+ WITH Linux-syscall-note                      169
       ((GPL-2.0 WITH Linux-syscall-note) OR BSD-2-Clause)    21
       ((GPL-2.0 WITH Linux-syscall-note) OR BSD-3-Clause)    17
       LGPL-2.1+ WITH Linux-syscall-note                      15
       GPL-1.0+ WITH Linux-syscall-note                       14
       ((GPL-2.0+ WITH Linux-syscall-note) OR BSD-3-Clause)    5
       LGPL-2.0+ WITH Linux-syscall-note                       4
       LGPL-2.1 WITH Linux-syscall-note                        3
       ((GPL-2.0 WITH Linux-syscall-note) OR MIT)              3
       ((GPL-2.0 WITH Linux-syscall-note) AND MIT)             1
    
       and that resulted in the third patch in this series.
    
     - when the two scanners agreed on the detected license(s), that became
       the concluded license(s).
    
     - when there was disagreement between the two scanners (one detected a
       license but the other didn't, or they both detected different
       licenses) a manual inspection of the file occurred.
    
     - In most cases a manual inspection of the information in the file
       resulted in a clear resolution of the license that should apply (and
       which scanner probably needed to revisit its heuristics).
    
     - When it was not immediately clear, the license identifier was
       confirmed with lawyers working with the Linux Foundation.
    
     - If there was any question as to the appropriate license identifier,
       the file was flagged for further research and to be revisited later
       in time.
    
    In total, over 70 hours of logged manual review was done on the
    spreadsheet to determine the SPDX license identifiers to apply to the
    source files by Kate, Philippe, Thomas and, in some cases, confirmation
    by lawyers working with the Linux Foundation.
    
    Kate also obtained a third independent scan of the 4.13 code base from
    FOSSology, and compared selected files where the other two scanners
    disagreed against that SPDX file, to see if there was new insights.  The
    Windriver scanner is based on an older version of FOSSology in part, so
    they are related.
    
    Thomas did random spot checks in about 500 files from the spreadsheets
    for the uapi headers and agreed with SPDX license identifier in the
    files he inspected. For the non-uapi files Thomas did random spot checks
    in about 15000 files.
    
    In initial set of patches against 4.14-rc6, 3 files were found to have
    copy/paste license identifier errors, and have been fixed to reflect the
    correct identifier.
    
    Additionally Philippe spent 10 hours this week doing a detailed manual
    inspection and review of the 12,461 patched files from the initial patch
    version early this week with:
     - a full scancode scan run, collecting the matched texts, detected
       license ids and scores
     - reviewing anything where there was a license detected (about 500+
       files) to ensure that the applied SPDX license was correct
     - reviewing anything where there was no detection but the patch license
       was not GPL-2.0 WITH Linux-syscall-note to ensure that the applied
       SPDX license was correct
    
    This produced a worksheet with 20 files needing minor correction.  This
    worksheet was then exported into 3 different .csv files for the
    different types of files to be modified.
    
    These .csv files were then reviewed by Greg.  Thomas wrote a script to
    parse the csv files and add the proper SPDX tag to the file, in the
    format that the file expected.  This script was further refined by Greg
    based on the output to detect more types of files automatically and to
    distinguish between header and source .c files (which need different
    comment types.)  Finally Greg ran the script using the .csv files to
    generate the patches.
    
    Reviewed-by: Kate Stewart <kstewart@linuxfoundation.org>
    Reviewed-by: Philippe Ombredanne <pombredanne@nexb.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/tools/include/uapi/asm-generic/mman.h b/tools/include/uapi/asm-generic/mman.h
index 10fa7857777f..f7c7b4355e56 100644
--- a/tools/include/uapi/asm-generic/mman.h
+++ b/tools/include/uapi/asm-generic/mman.h
@@ -1,3 +1,4 @@
+/* SPDX-License-Identifier: GPL-2.0 */
 #ifndef __ASM_GENERIC_MMAN_H
 #define __ASM_GENERIC_MMAN_H
 

commit f3539c12d8196ce0a1993364d30b3a18908470d1
Author: Wang Nan <wangnan0@huawei.com>
Date:   Mon Sep 12 12:54:29 2016 +0000

    tools include: Add uapi mman.h for each architecture
    
    Some mmap related macros have different values for different
    architectures. This patch introduces uapi mman.h for each
    architectures.
    
    Three headers are cloned from kernel include to tools/include:
    
     tools/include/uapi/asm-generic/mman-common.h
     tools/include/uapi/asm-generic/mman.h
     tools/include/uapi/linux/mman.h
    
    The main part of this patch is generated by following script:
    
     macros=`cat $0 | awk 'V==1 {print}; /^# start macro list/ {V=1}'`
     for arch in `ls tools/arch`
     do
       [ -d tools/arch/$arch/include/uapi/asm ] || mkdir -p tools/arch/$arch/include/uapi/asm
       src=arch/$arch/include/uapi/asm/mman.h
       target=tools/arch/$arch/include/uapi/asm/mman.h
       guard="TOOLS_ARCH_"`echo $arch | awk '{print toupper($0)}'`_UAPI_ASM_MMAN_FIX_H
       echo '#ifndef '$guard > $target
       echo '#define '$guard >> $target
    
       [ -f $src ] &&
       for m in $macros
       do
         if grep '#define[ \t]*'$m $src > /dev/null 2>&1
         then
           grep -h '#define[ \t]*'$m $src | sed 's/[ \t]*\/\*.*$//g' >> $target
         fi
       done
    
       if [ -f $src ]
       then
          grep '#include <asm-generic' $src >> $target
       else
          echo "#include <asm-generic/mman.h>" >> $target
       fi
       echo '#endif' >> $target
       echo "$target"
     done
    
     exit 0
     # Following macros are extracted from:
     # tools/perf/trace/beauty/mmap.c
     #
     # start macro list
     MADV_DODUMP
     MADV_DOFORK
     MADV_DONTDUMP
     MADV_DONTFORK
     MADV_DONTNEED
     MADV_HUGEPAGE
     MADV_HWPOISON
     MADV_MERGEABLE
     MADV_NOHUGEPAGE
     MADV_NORMAL
     MADV_RANDOM
     MADV_REMOVE
     MADV_SEQUENTIAL
     MADV_SOFT_OFFLINE
     MADV_UNMERGEABLE
     MADV_WILLNEED
     MAP_32BIT
     MAP_ANONYMOUS
     MAP_DENYWRITE
     MAP_EXECUTABLE
     MAP_FILE
     MAP_FIXED
     MAP_GROWSDOWN
     MAP_HUGETLB
     MAP_LOCKED
     MAP_NONBLOCK
     MAP_NORESERVE
     MAP_POPULATE
     MAP_PRIVATE
     MAP_SHARED
     MAP_STACK
     MAP_UNINITIALIZED
     MREMAP_FIXED
     MREMAP_MAYMOVE
     PROT_EXEC
     PROT_GROWSDOWN
     PROT_GROWSUP
     PROT_NONE
     PROT_READ
     PROT_SEM
     PROT_WRITE
    
    Signed-off-by: Wang Nan <wangnan0@huawei.com>
    Cc: Zefan Li <lizefan@huawei.com>
    Cc: pi3orama@163.com
    Link: http://lkml.kernel.org/r/1473684871-209320-2-git-send-email-wangnan0@huawei.com
    [ Added new files to tools/perf/MANIFEST to fix the detached tarball build, add mman.h for ARC ]
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>

diff --git a/tools/include/uapi/asm-generic/mman.h b/tools/include/uapi/asm-generic/mman.h
new file mode 100644
index 000000000000..10fa7857777f
--- /dev/null
+++ b/tools/include/uapi/asm-generic/mman.h
@@ -0,0 +1,22 @@
+#ifndef __ASM_GENERIC_MMAN_H
+#define __ASM_GENERIC_MMAN_H
+
+#include <uapi/asm-generic/mman-common.h>
+
+#define MAP_GROWSDOWN	0x0100		/* stack-like segment */
+#define MAP_DENYWRITE	0x0800		/* ETXTBSY */
+#define MAP_EXECUTABLE	0x1000		/* mark it as an executable */
+#define MAP_LOCKED	0x2000		/* pages are locked */
+#define MAP_NORESERVE	0x4000		/* don't check for reservations */
+#define MAP_POPULATE	0x8000		/* populate (prefault) pagetables */
+#define MAP_NONBLOCK	0x10000		/* do not block on IO */
+#define MAP_STACK	0x20000		/* give out an address that is best suited for process/thread stacks */
+#define MAP_HUGETLB	0x40000		/* create a huge page mapping */
+
+/* Bits [26:31] are reserved, see mman-common.h for MAP_HUGETLB usage */
+
+#define MCL_CURRENT	1		/* lock all current mappings */
+#define MCL_FUTURE	2		/* lock all future mappings */
+#define MCL_ONFAULT	4		/* lock all pages that are faulted in */
+
+#endif /* __ASM_GENERIC_MMAN_H */
