commit 83d9bdeaedd8f7aa9749828364f0018cacd1dad3
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Mon Nov 19 12:31:45 2018 -0800

    tools uapi asm-generic: Synchronize ioctls.h
    
    To pick up the changes in:
    
      ad8c0eaa0a41 ("tty/serial_core: add ISO7816 infrastructure")
    
    That is a change that imply a change to be made in tools/perf/trace/beauty/ioctl.c to
    make 'perf trace' ioctl syscall argument beautifier to support these new
    commands:  TIOCGISO7816 and TIOCSISO7816.
    
    This is not yet done automatically by a script like is done for some
    other headers, for instance:
    
      $ tools/perf/trace/beauty/drm_ioctl.sh | head
      #ifndef DRM_COMMAND_BASE
      #define DRM_COMMAND_BASE                0x40
      #endif
      static const char *drm_ioctl_cmds[] = {
            [0x00] = "VERSION",
            [0x01] = "GET_UNIQUE",
            [0x02] = "GET_MAGIC",
            [0x03] = "IRQ_BUSID",
            [0x04] = "GET_MAP",
            [0x05] = "GET_CLIENT",
      $
    
    So we will need to change tools/perf/trace/beauty/ioctl.c in a follow up
    patch until we switch to a generator script.
    
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Nicolas Ferre <nicolas.ferre@microchip.com>
    Cc: Wang Nan <wangnan0@huawei.com>
    Link: https://lkml.kernel.org/n/tip-zin76fe6iykqsilvo6u47f9o@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>

diff --git a/tools/include/uapi/asm-generic/ioctls.h b/tools/include/uapi/asm-generic/ioctls.h
index 040651735662..cdc9f4ca8c27 100644
--- a/tools/include/uapi/asm-generic/ioctls.h
+++ b/tools/include/uapi/asm-generic/ioctls.h
@@ -79,6 +79,8 @@
 #define TIOCGPTLCK	_IOR('T', 0x39, int) /* Get Pty lock state */
 #define TIOCGEXCL	_IOR('T', 0x40, int) /* Get exclusive mode state */
 #define TIOCGPTPEER	_IO('T', 0x41) /* Safely open the slave */
+#define TIOCGISO7816	_IOR('T', 0x42, struct serial_iso7816)
+#define TIOCSISO7816	_IOWR('T', 0x43, struct serial_iso7816)
 
 #define FIONCLEX	0x5450
 #define FIOCLEX		0x5451

commit fb7df12d645cfba6a76a45fdcc7e3f7fbbcda661
Author: Ingo Molnar <mingo@kernel.org>
Date:   Fri Nov 3 12:18:37 2017 +0100

    tools/headers: Synchronize kernel ABI headers
    
    After the SPDX license tags were added a number of tooling headers got out of
    sync with their kernel variants, generating lots of build warnings.
    
    Sync them:
    
     - tools/arch/x86/include/asm/disabled-features.h,
       tools/arch/x86/include/asm/required-features.h,
       tools/include/linux/hash.h:
    
         Remove the SPDX tag where the kernel version does not have it.
    
     - tools/include/asm-generic/bitops/__fls.h,
       tools/include/asm-generic/bitops/arch_hweight.h,
       tools/include/asm-generic/bitops/const_hweight.h,
       tools/include/asm-generic/bitops/fls.h,
       tools/include/asm-generic/bitops/fls64.h,
       tools/include/uapi/asm-generic/ioctls.h,
       tools/include/uapi/asm-generic/mman-common.h,
       tools/include/uapi/sound/asound.h,
       tools/include/uapi/linux/kvm.h,
       tools/include/uapi/linux/perf_event.h,
       tools/include/uapi/linux/sched.h,
       tools/include/uapi/linux/vhost.h,
       tools/include/uapi/sound/asound.h:
    
         Add the SPDX tag of the respective kernel header.
    
     - tools/include/uapi/linux/bpf_common.h,
       tools/include/uapi/linux/fcntl.h,
       tools/include/uapi/linux/hw_breakpoint.h,
       tools/include/uapi/linux/mman.h,
       tools/include/uapi/linux/stat.h,
    
         Change the tag to the kernel header version:
    
           -/* SPDX-License-Identifier: GPL-2.0 */
           +/* SPDX-License-Identifier: GPL-2.0 WITH Linux-syscall-note */
    
    Also sync other header details:
    
     - include/uapi/sound/asound.h:
    
         Fix pointless end of line whitespace noise the header grew in this cycle.
    
     - tools/arch/x86/lib/memcpy_64.S:
    
         Sync the code and add tools/include/asm/export.h with dummy wrappers
         to support building the kernel side code in a tooling header environment.
    
     - tools/include/uapi/asm-generic/mman.h,
       tools/include/uapi/linux/bpf.h:
    
         Sync other details that don't impact tooling's use of the ABIs.
    
    Acked-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: linux-kernel@vger.kernel.org
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Stephen Rothwell <sfr@canb.auug.org.au>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

diff --git a/tools/include/uapi/asm-generic/ioctls.h b/tools/include/uapi/asm-generic/ioctls.h
index 14baf9f23a14..040651735662 100644
--- a/tools/include/uapi/asm-generic/ioctls.h
+++ b/tools/include/uapi/asm-generic/ioctls.h
@@ -1,3 +1,4 @@
+/* SPDX-License-Identifier: GPL-2.0 WITH Linux-syscall-note */
 #ifndef __ASM_GENERIC_IOCTLS_H
 #define __ASM_GENERIC_IOCTLS_H
 

commit 6375f0abeea886ec718d8b0aaf99818c7505de14
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Mon Jul 31 22:52:28 2017 -0300

    tools include uapi: Grab a copy of asm-generic/ioctls.h
    
    So that we can build on older systems where otherwise we would end up
    with:
    
        CC       /tmp/build/perf/trace/beauty/ioctl.o
      trace/beauty/ioctl.c: In function 'ioctl__scnprintf_tty_cmd':
      trace/beauty/ioctl.c:25:17: error: 'TIOCGEXCL' undeclared (first use in this function)
      trace/beauty/ioctl.c:25:17: note: each undeclared identifier is reported only once for each function it appears in
      trace/beauty/ioctl.c:25:2: error: array index in initializer not of integer type
      trace/beauty/ioctl.c:25:2: error: (near initialization for 'ioctl_tty_cmd')
    
    This way we can build a tool on an older system and it will still be
    capable of processing perf.data files generated on newer systems.
    
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Wang Nan <wangnan0@huawei.com>
    Link: http://lkml.kernel.org/n/tip-8qvkv6txwuzua6d0yvt65wl3@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>

diff --git a/tools/include/uapi/asm-generic/ioctls.h b/tools/include/uapi/asm-generic/ioctls.h
new file mode 100644
index 000000000000..14baf9f23a14
--- /dev/null
+++ b/tools/include/uapi/asm-generic/ioctls.h
@@ -0,0 +1,118 @@
+#ifndef __ASM_GENERIC_IOCTLS_H
+#define __ASM_GENERIC_IOCTLS_H
+
+#include <linux/ioctl.h>
+
+/*
+ * These are the most common definitions for tty ioctl numbers.
+ * Most of them do not use the recommended _IOC(), but there is
+ * probably some source code out there hardcoding the number,
+ * so we might as well use them for all new platforms.
+ *
+ * The architectures that use different values here typically
+ * try to be compatible with some Unix variants for the same
+ * architecture.
+ */
+
+/* 0x54 is just a magic number to make these relatively unique ('T') */
+
+#define TCGETS		0x5401
+#define TCSETS		0x5402
+#define TCSETSW		0x5403
+#define TCSETSF		0x5404
+#define TCGETA		0x5405
+#define TCSETA		0x5406
+#define TCSETAW		0x5407
+#define TCSETAF		0x5408
+#define TCSBRK		0x5409
+#define TCXONC		0x540A
+#define TCFLSH		0x540B
+#define TIOCEXCL	0x540C
+#define TIOCNXCL	0x540D
+#define TIOCSCTTY	0x540E
+#define TIOCGPGRP	0x540F
+#define TIOCSPGRP	0x5410
+#define TIOCOUTQ	0x5411
+#define TIOCSTI		0x5412
+#define TIOCGWINSZ	0x5413
+#define TIOCSWINSZ	0x5414
+#define TIOCMGET	0x5415
+#define TIOCMBIS	0x5416
+#define TIOCMBIC	0x5417
+#define TIOCMSET	0x5418
+#define TIOCGSOFTCAR	0x5419
+#define TIOCSSOFTCAR	0x541A
+#define FIONREAD	0x541B
+#define TIOCINQ		FIONREAD
+#define TIOCLINUX	0x541C
+#define TIOCCONS	0x541D
+#define TIOCGSERIAL	0x541E
+#define TIOCSSERIAL	0x541F
+#define TIOCPKT		0x5420
+#define FIONBIO		0x5421
+#define TIOCNOTTY	0x5422
+#define TIOCSETD	0x5423
+#define TIOCGETD	0x5424
+#define TCSBRKP		0x5425	/* Needed for POSIX tcsendbreak() */
+#define TIOCSBRK	0x5427  /* BSD compatibility */
+#define TIOCCBRK	0x5428  /* BSD compatibility */
+#define TIOCGSID	0x5429  /* Return the session ID of FD */
+#define TCGETS2		_IOR('T', 0x2A, struct termios2)
+#define TCSETS2		_IOW('T', 0x2B, struct termios2)
+#define TCSETSW2	_IOW('T', 0x2C, struct termios2)
+#define TCSETSF2	_IOW('T', 0x2D, struct termios2)
+#define TIOCGRS485	0x542E
+#ifndef TIOCSRS485
+#define TIOCSRS485	0x542F
+#endif
+#define TIOCGPTN	_IOR('T', 0x30, unsigned int) /* Get Pty Number (of pty-mux device) */
+#define TIOCSPTLCK	_IOW('T', 0x31, int)  /* Lock/unlock Pty */
+#define TIOCGDEV	_IOR('T', 0x32, unsigned int) /* Get primary device node of /dev/console */
+#define TCGETX		0x5432 /* SYS5 TCGETX compatibility */
+#define TCSETX		0x5433
+#define TCSETXF		0x5434
+#define TCSETXW		0x5435
+#define TIOCSIG		_IOW('T', 0x36, int)  /* pty: generate signal */
+#define TIOCVHANGUP	0x5437
+#define TIOCGPKT	_IOR('T', 0x38, int) /* Get packet mode state */
+#define TIOCGPTLCK	_IOR('T', 0x39, int) /* Get Pty lock state */
+#define TIOCGEXCL	_IOR('T', 0x40, int) /* Get exclusive mode state */
+#define TIOCGPTPEER	_IO('T', 0x41) /* Safely open the slave */
+
+#define FIONCLEX	0x5450
+#define FIOCLEX		0x5451
+#define FIOASYNC	0x5452
+#define TIOCSERCONFIG	0x5453
+#define TIOCSERGWILD	0x5454
+#define TIOCSERSWILD	0x5455
+#define TIOCGLCKTRMIOS	0x5456
+#define TIOCSLCKTRMIOS	0x5457
+#define TIOCSERGSTRUCT	0x5458 /* For debugging only */
+#define TIOCSERGETLSR   0x5459 /* Get line status register */
+#define TIOCSERGETMULTI 0x545A /* Get multiport config  */
+#define TIOCSERSETMULTI 0x545B /* Set multiport config */
+
+#define TIOCMIWAIT	0x545C	/* wait for a change on serial input line(s) */
+#define TIOCGICOUNT	0x545D	/* read serial port inline interrupt counts */
+
+/*
+ * Some arches already define FIOQSIZE due to a historical
+ * conflict with a Hayes modem-specific ioctl value.
+ */
+#ifndef FIOQSIZE
+# define FIOQSIZE	0x5460
+#endif
+
+/* Used for packet mode */
+#define TIOCPKT_DATA		 0
+#define TIOCPKT_FLUSHREAD	 1
+#define TIOCPKT_FLUSHWRITE	 2
+#define TIOCPKT_STOP		 4
+#define TIOCPKT_START		 8
+#define TIOCPKT_NOSTOP		16
+#define TIOCPKT_DOSTOP		32
+#define TIOCPKT_IOCTL		64
+
+#define TIOCSER_TEMT	0x01	/* Transmitter physically empty */
+
+#endif /* __ASM_GENERIC_IOCTLS_H */
