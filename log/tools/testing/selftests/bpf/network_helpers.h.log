commit 566fc3f5d1c641b510ec487cf274a047f8a1e849
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Tue May 19 00:45:48 2020 +0200

    bpf, testing: Add get{peer, sock}name selftests to test_progs
    
    Extend the existing connect_force_port test to assert get{peer,sock}name programs
    as well. The workflow for e.g. IPv4 is as follows: i) server binds to concrete
    port, ii) client calls getsockname() on server fd which exposes 1.2.3.4:60000 to
    client, iii) client connects to service address 1.2.3.4:60000 binds to concrete
    local address (127.0.0.1:22222) and remaps service address to a concrete backend
    address (127.0.0.1:60123), iv) client then calls getsockname() on its own fd to
    verify local address (127.0.0.1:22222) and getpeername() on its own fd which then
    publishes service address (1.2.3.4:60000) instead of actual backend. Same workflow
    is done for IPv6 just with different address/port tuples.
    
      # ./test_progs -t connect_force_port
      #14 connect_force_port:OK
      Summary: 1/0 PASSED, 0 SKIPPED, 0 FAILED
    
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Andrii Nakryiko <andriin@fb.com>
    Acked-by: Andrey Ignatov <rdna@fb.com>
    Link: https://lore.kernel.org/bpf/3343da6ad08df81af715a95d61a84fb4a960f2bf.1589841594.git.daniel@iogearbox.net

diff --git a/tools/testing/selftests/bpf/network_helpers.h b/tools/testing/selftests/bpf/network_helpers.h
index 86914e6e7b53..6a8009605670 100644
--- a/tools/testing/selftests/bpf/network_helpers.h
+++ b/tools/testing/selftests/bpf/network_helpers.h
@@ -34,6 +34,7 @@ struct ipv6_packet {
 extern struct ipv6_packet pkt_v6;
 
 int start_server(int family, int type);
+int start_server_with_port(int family, int type, __u16 port);
 int connect_to_fd(int family, int type, int server_fd);
 int connect_fd_to_fd(int client_fd, int server_fd);
 int connect_wait(int client_fd);

commit 383724e17ab02d8e440def7792c4e151b13ef4d4
Author: Andrey Ignatov <rdna@fb.com>
Date:   Thu May 14 13:03:48 2020 -0700

    selftests/bpf: Add connect_fd_to_fd, connect_wait net helpers
    
    Add two new network helpers.
    
    connect_fd_to_fd connects an already created client socket fd to address
    of server fd. Sometimes it's useful to separate client socket creation
    and connecting this socket to a server, e.g. if client socket has to be
    created in a cgroup different from that of server cgroup.
    
    Additionally connect_to_fd is now implemented using connect_fd_to_fd,
    both helpers don't treat EINPROGRESS as an error and let caller decide
    how to proceed with it.
    
    connect_wait is a helper to work with non-blocking client sockets so
    that if connect_to_fd or connect_fd_to_fd returned -1 with errno ==
    EINPROGRESS, caller can wait for connect to finish or for connection
    timeout. The helper returns -1 on error, 0 on timeout (1sec,
    hard-coded), and positive number on success.
    
    Signed-off-by: Andrey Ignatov <rdna@fb.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Yonghong Song <yhs@fb.com>
    Link: https://lore.kernel.org/bpf/1403fab72300f379ca97ead4820ae43eac4414ef.1589486450.git.rdna@fb.com

diff --git a/tools/testing/selftests/bpf/network_helpers.h b/tools/testing/selftests/bpf/network_helpers.h
index a0be7db4f67d..86914e6e7b53 100644
--- a/tools/testing/selftests/bpf/network_helpers.h
+++ b/tools/testing/selftests/bpf/network_helpers.h
@@ -35,5 +35,7 @@ extern struct ipv6_packet pkt_v6;
 
 int start_server(int family, int type);
 int connect_to_fd(int family, int type, int server_fd);
+int connect_fd_to_fd(int client_fd, int server_fd);
+int connect_wait(int client_fd);
 
 #endif

commit 488a23b89d175cc78f352417114f4f5a10470722
Author: Stanislav Fomichev <sdf@google.com>
Date:   Fri May 8 10:46:09 2020 -0700

    selftests/bpf: Move existing common networking parts into network_helpers
    
    1. Move pkt_v4 and pkt_v6 into network_helpers and adjust the users.
    2. Copy-paste spin_lock_thread into two tests that use it.
    
    Signed-off-by: Stanislav Fomichev <sdf@google.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Martin KaFai Lau <kafai@fb.com>
    Acked-by: Andrey Ignatov <rdna@fb.com>
    Link: https://lore.kernel.org/bpf/20200508174611.228805-3-sdf@google.com

diff --git a/tools/testing/selftests/bpf/network_helpers.h b/tools/testing/selftests/bpf/network_helpers.h
index 30068eacc1a2..a0be7db4f67d 100644
--- a/tools/testing/selftests/bpf/network_helpers.h
+++ b/tools/testing/selftests/bpf/network_helpers.h
@@ -3,6 +3,35 @@
 #define __NETWORK_HELPERS_H
 #include <sys/socket.h>
 #include <sys/types.h>
+#include <linux/types.h>
+typedef __u16 __sum16;
+#include <linux/if_ether.h>
+#include <linux/if_packet.h>
+#include <linux/ip.h>
+#include <linux/ipv6.h>
+#include <netinet/tcp.h>
+#include <bpf/bpf_endian.h>
+
+#define MAGIC_VAL 0x1234
+#define NUM_ITER 100000
+#define VIP_NUM 5
+#define MAGIC_BYTES 123
+
+/* ipv4 test vector */
+struct ipv4_packet {
+	struct ethhdr eth;
+	struct iphdr iph;
+	struct tcphdr tcp;
+} __packed;
+extern struct ipv4_packet pkt_v4;
+
+/* ipv6 test vector */
+struct ipv6_packet {
+	struct ethhdr eth;
+	struct ipv6hdr iph;
+	struct tcphdr tcp;
+} __packed;
+extern struct ipv6_packet pkt_v6;
 
 int start_server(int family, int type);
 int connect_to_fd(int family, int type, int server_fd);

commit 33181bb8e8fe947e1f8020a4b103601a4cac94d9
Author: Stanislav Fomichev <sdf@google.com>
Date:   Fri May 8 10:46:08 2020 -0700

    selftests/bpf: Generalize helpers to control background listener
    
    Move the following routines that let us start a background listener
    thread and connect to a server by fd to the test_prog:
    * start_server - socket+bind+listen
    * connect_to_fd - connect to the server identified by fd
    
    These will be used in the next commit.
    
    Also, extend these helpers to support AF_INET6 and accept the family
    as an argument.
    
    v5:
    * drop pthread.h (Martin KaFai Lau)
    * add SO_SNDTIMEO (Martin KaFai Lau)
    
    v4:
    * export extra helper to start server without a thread (Martin KaFai Lau)
    * tcp_rtt is no longer starting background thread (Martin KaFai Lau)
    
    v2:
    * put helpers into network_helpers.c (Andrii Nakryiko)
    
    Signed-off-by: Stanislav Fomichev <sdf@google.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Andrey Ignatov <rdna@fb.com>
    Acked-by: Martin KaFai Lau <kafai@fb.com>
    Link: https://lore.kernel.org/bpf/20200508174611.228805-2-sdf@google.com

diff --git a/tools/testing/selftests/bpf/network_helpers.h b/tools/testing/selftests/bpf/network_helpers.h
new file mode 100644
index 000000000000..30068eacc1a2
--- /dev/null
+++ b/tools/testing/selftests/bpf/network_helpers.h
@@ -0,0 +1,10 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+#ifndef __NETWORK_HELPERS_H
+#define __NETWORK_HELPERS_H
+#include <sys/socket.h>
+#include <sys/types.h>
+
+int start_server(int family, int type);
+int connect_to_fd(int family, int type, int server_fd);
+
+#endif
