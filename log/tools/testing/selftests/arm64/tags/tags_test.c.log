commit 313a4db7f3387608a3ab4531ac8c0509a3d7617f
Author: Cristian Marussi <cristian.marussi@arm.com>
Date:   Fri Oct 25 18:57:06 2019 +0100

    kselftest: arm64: extend toplevel skeleton Makefile
    
    Modify KSFT arm64 toplevel Makefile to maintain arm64 kselftests organized
    by subsystem, keeping them into distinct subdirectories under arm64 custom
    KSFT directory: tools/testing/selftests/arm64/
    
    Add to such toplevel Makefile a mechanism to guess the effective location
    of Kernel headers as installed by KSFT framework.
    
    Fit existing arm64 tags kselftest into this new schema moving them into
    their own subdirectory (arm64/tags).
    
    Reviewed-by: Dave Martin <Dave.Martin@arm.com>
    Signed-off-by: Cristian Marussi <cristian.marussi@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>

diff --git a/tools/testing/selftests/arm64/tags/tags_test.c b/tools/testing/selftests/arm64/tags/tags_test.c
new file mode 100644
index 000000000000..5701163460ef
--- /dev/null
+++ b/tools/testing/selftests/arm64/tags/tags_test.c
@@ -0,0 +1,31 @@
+// SPDX-License-Identifier: GPL-2.0
+
+#include <stdio.h>
+#include <stdlib.h>
+#include <unistd.h>
+#include <stdint.h>
+#include <sys/prctl.h>
+#include <sys/utsname.h>
+
+#define SHIFT_TAG(tag)		((uint64_t)(tag) << 56)
+#define SET_TAG(ptr, tag)	(((uint64_t)(ptr) & ~SHIFT_TAG(0xff)) | \
+					SHIFT_TAG(tag))
+
+int main(void)
+{
+	static int tbi_enabled = 0;
+	unsigned long tag = 0;
+	struct utsname *ptr;
+	int err;
+
+	if (prctl(PR_SET_TAGGED_ADDR_CTRL, PR_TAGGED_ADDR_ENABLE, 0, 0, 0) == 0)
+		tbi_enabled = 1;
+	ptr = (struct utsname *)malloc(sizeof(*ptr));
+	if (tbi_enabled)
+		tag = 0x42;
+	ptr = (struct utsname *)SET_TAG(ptr, tag);
+	err = uname(ptr);
+	free(ptr);
+
+	return err;
+}
