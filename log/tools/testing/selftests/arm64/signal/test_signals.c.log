commit 837387a2cbc719667822856beabac127921a36c4
Author: Cristian Marussi <cristian.marussi@arm.com>
Date:   Fri Oct 25 18:57:10 2019 +0100

    kselftest: arm64: extend test_init functionalities
    
    Extend signal testing framework to allow the definition of a custom per
    test initialization function to be run at the end of the common test_init
    after test setup phase has completed and before test-run routine.
    
    This custom per-test initialization function also enables the test writer
    to decide on its own when forcibly skip the test itself using standard KSFT
    mechanism.
    
    Reviewed-by: Dave Martin <Dave.Martin@arm.com>
    Signed-off-by: Cristian Marussi <cristian.marussi@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>

diff --git a/tools/testing/selftests/arm64/signal/test_signals.c b/tools/testing/selftests/arm64/signal/test_signals.c
index cb970346b280..416b1ff43199 100644
--- a/tools/testing/selftests/arm64/signal/test_signals.c
+++ b/tools/testing/selftests/arm64/signal/test_signals.c
@@ -19,11 +19,11 @@ int main(int argc, char *argv[])
 	current = &tde;
 
 	ksft_print_msg("%s :: %s\n", current->name, current->descr);
-	if (test_setup(current)) {
+	if (test_setup(current) && test_init(current)) {
 		test_run(current);
-		test_result(current);
 		test_cleanup(current);
 	}
+	test_result(current);
 
-	return current->pass ? KSFT_PASS : KSFT_FAIL;
+	return current->result;
 }

commit f96bf43403165e4478942b0998931b14621ec207
Author: Cristian Marussi <cristian.marussi@arm.com>
Date:   Fri Oct 25 18:57:07 2019 +0100

    kselftest: arm64: mangle_pstate_invalid_compat_toggle and common utils
    
    Add some arm64/signal specific boilerplate and utility code to help
    further testcases' development.
    
    Introduce also one simple testcase mangle_pstate_invalid_compat_toggle
    and some related helpers: it is a simple mangle testcase which messes
    with the ucontext_t from within the signal handler, trying to toggle
    PSTATE state bits to switch the system between 32bit/64bit execution
    state. Expects SIGSEGV on test PASS.
    
    Reviewed-by: Dave Martin <Dave.Martin@arm.com>
    Signed-off-by: Cristian Marussi <cristian.marussi@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>

diff --git a/tools/testing/selftests/arm64/signal/test_signals.c b/tools/testing/selftests/arm64/signal/test_signals.c
new file mode 100644
index 000000000000..cb970346b280
--- /dev/null
+++ b/tools/testing/selftests/arm64/signal/test_signals.c
@@ -0,0 +1,29 @@
+// SPDX-License-Identifier: GPL-2.0
+/*
+ * Copyright (C) 2019 ARM Limited
+ *
+ * Generic test wrapper for arm64 signal tests.
+ *
+ * Each test provides its own tde struct tdescr descriptor to link with
+ * this wrapper. Framework provides common helpers.
+ */
+#include <kselftest.h>
+
+#include "test_signals.h"
+#include "test_signals_utils.h"
+
+struct tdescr *current;
+
+int main(int argc, char *argv[])
+{
+	current = &tde;
+
+	ksft_print_msg("%s :: %s\n", current->name, current->descr);
+	if (test_setup(current)) {
+		test_run(current);
+		test_result(current);
+		test_cleanup(current);
+	}
+
+	return current->pass ? KSFT_PASS : KSFT_FAIL;
+}
