commit 3a08cd52c37c793ffc199f6fc2ecfc368e284b2d
Author: Matthew Wilcox <willy@infradead.org>
Date:   Sat Sep 22 16:14:30 2018 -0400

    radix tree: Remove multiorder support
    
    All users have now been converted to the XArray.  Removing the support
    reduces code size and ensures new users will use the XArray instead.
    
    Signed-off-by: Matthew Wilcox <willy@infradead.org>

diff --git a/tools/testing/radix-tree/generated/autoconf.h b/tools/testing/radix-tree/generated/autoconf.h
index ca8e03ad19ac..2218b3cc184e 100644
--- a/tools/testing/radix-tree/generated/autoconf.h
+++ b/tools/testing/radix-tree/generated/autoconf.h
@@ -1,2 +1 @@
-#define CONFIG_RADIX_TREE_MULTIORDER 1
 #define CONFIG_XARRAY_MULTI 1

commit 02c02bf12c5d838603eed44195d3e91f094e2ab2
Author: Matthew Wilcox <willy@infradead.org>
Date:   Fri Nov 3 23:09:45 2017 -0400

    xarray: Change definition of sibling entries
    
    Instead of storing a pointer to the slot containing the canonical entry,
    store the offset of the slot.  Produces slightly more efficient code
    (~300 bytes) and simplifies the implementation.
    
    Signed-off-by: Matthew Wilcox <willy@infradead.org>
    Reviewed-by: Josef Bacik <jbacik@fb.com>

diff --git a/tools/testing/radix-tree/generated/autoconf.h b/tools/testing/radix-tree/generated/autoconf.h
index cf88dc5b8832..ca8e03ad19ac 100644
--- a/tools/testing/radix-tree/generated/autoconf.h
+++ b/tools/testing/radix-tree/generated/autoconf.h
@@ -1 +1,2 @@
 #define CONFIG_RADIX_TREE_MULTIORDER 1
+#define CONFIG_XARRAY_MULTI 1

commit bfa11193c46d5ea8ef4d9a4f1c10221cdd985ab1
Author: Matthew Wilcox <mawilcox@microsoft.com>
Date:   Thu Dec 29 14:49:48 2016 -0500

    radix tree test suite: Remove obsolete CONFIG
    
    radix-tree.c doesn't use these CONFIG options any more.
    
    Signed-off-by: Matthew Wilcox <mawilcox@microsoft.com>
    Reviewed-by: Rehas Sachdeva <aquannie@gmail.com>

diff --git a/tools/testing/radix-tree/generated/autoconf.h b/tools/testing/radix-tree/generated/autoconf.h
index ad18cf5a2a3a..cf88dc5b8832 100644
--- a/tools/testing/radix-tree/generated/autoconf.h
+++ b/tools/testing/radix-tree/generated/autoconf.h
@@ -1,3 +1 @@
 #define CONFIG_RADIX_TREE_MULTIORDER 1
-#define CONFIG_SHMEM 1
-#define CONFIG_SWAP 1

commit 21ef533931f73a8e963a6107aa5ec51b192f28be
Author: Ross Zwisler <ross.zwisler@linux.intel.com>
Date:   Fri May 20 17:02:26 2016 -0700

    radix-tree: add support for multi-order iterating
    
    This enables the macros radix_tree_for_each_slot() and friends to be
    used with multi-order entries.
    
    The way that this works is that we treat all entries in a given slots[]
    array as a single chunk.  If the index given to radix_tree_next_chunk()
    happens to point us to a sibling entry, we will back up iter->index so
    that it points to the canonical entry, and that will be the place where
    we start our iteration.
    
    As we're processing a chunk in radix_tree_next_slot(), we process
    canonical entries, skip over sibling entries, and restart the chunk
    lookup if we find a non-sibling indirect pointer.  This drops back to
    the radix_tree_next_chunk() code, which will re-walk the tree and look
    for another chunk.
    
    This allows us to properly handle multi-order entries mixed with other
    entries that are at various heights in the radix tree.
    
    Signed-off-by: Ross Zwisler <ross.zwisler@linux.intel.com>
    Signed-off-by: Matthew Wilcox <willy@linux.intel.com>
    Cc: Konstantin Khlebnikov <koct9i@gmail.com>
    Cc: Kirill Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Jan Kara <jack@suse.com>
    Cc: Neil Brown <neilb@suse.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/tools/testing/radix-tree/generated/autoconf.h b/tools/testing/radix-tree/generated/autoconf.h
new file mode 100644
index 000000000000..ad18cf5a2a3a
--- /dev/null
+++ b/tools/testing/radix-tree/generated/autoconf.h
@@ -0,0 +1,3 @@
+#define CONFIG_RADIX_TREE_MULTIORDER 1
+#define CONFIG_SHMEM 1
+#define CONFIG_SWAP 1
