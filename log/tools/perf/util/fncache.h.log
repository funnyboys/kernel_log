commit d96645821e940bddff3fc5290656f83bf70d4c92
Author: Andi Kleen <ak@linux.intel.com>
Date:   Wed Nov 20 16:15:11 2019 -0800

    perf pmu: Use file system cache to optimize sysfs access
    
    pmu.c does a lot of redundant /sys accesses while parsing aliases
    and probing for PMUs. On large systems with a lot of PMUs this
    can get expensive (>2s):
    
      % time     seconds  usecs/call     calls    errors syscall
      ------ ----------- ----------- --------- --------- ----------------
       27.25    1.227847           8    160888     16976 openat
       26.42    1.190481           7    164224    164077 stat
    
    Add a cache to remember if specific file names exist or don't
    exist, which eliminates most of this overhead.
    
    Also optimize some stat() calls to be slightly cheaper access()
    
    Resulting in:
    
        0.18    0.004166           2      1851       305 open
        0.08    0.001970           2       829       622 access
    
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Acked-by: Jiri Olsa <jolsa@kernel.org>
    Link: http://lore.kernel.org/lkml/20191121001522.180827-2-andi@firstfloor.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>

diff --git a/tools/perf/util/fncache.h b/tools/perf/util/fncache.h
new file mode 100644
index 000000000000..fe020beaefb1
--- /dev/null
+++ b/tools/perf/util/fncache.h
@@ -0,0 +1,7 @@
+#ifndef _FCACHE_H
+#define _FCACHE_H 1
+
+unsigned shash(const unsigned char *s);
+bool file_available(const char *name);
+
+#endif
