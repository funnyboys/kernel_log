commit 521fe8bb5874963d5f6fd58d5c5ad80fbc9c6b1c
Author: Toke Høiland-Jørgensen <toke@redhat.com>
Date:   Mon Jan 20 14:06:48 2020 +0100

    perf: Use consistent include paths for libbpf
    
    Fix perf to include libbpf header files with the bpf/ prefix, to
    be consistent with external users of the library.
    
    Signed-off-by: Toke Høiland-Jørgensen <toke@redhat.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Andrii Nakryiko <andriin@fb.com>
    Link: https://lore.kernel.org/bpf/157952560797.1683545.7685921032671386301.stgit@toke.dk

diff --git a/tools/perf/examples/bpf/empty.c b/tools/perf/examples/bpf/empty.c
index 3776d26db9e7..7d7fb0c9fe76 100644
--- a/tools/perf/examples/bpf/empty.c
+++ b/tools/perf/examples/bpf/empty.c
@@ -1,3 +1,3 @@
-#include <bpf.h>
+#include <bpf/bpf.h>
 
 license(GPL);

commit 1f477305ab462e2fd1fa8a4c4fa425ad752b3175
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Fri May 4 15:18:31 2018 -0300

    perf bpf: Add license(NAME) helper
    
    To further reduce boilerplate.
    
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Wang Nan <wangnan0@huawei.com>
    Link: https://lkml.kernel.org/n/tip-vst6hj335s0ebxzqltes3nsc@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>

diff --git a/tools/perf/examples/bpf/empty.c b/tools/perf/examples/bpf/empty.c
index 86f97763355d..3776d26db9e7 100644
--- a/tools/perf/examples/bpf/empty.c
+++ b/tools/perf/examples/bpf/empty.c
@@ -1,4 +1,3 @@
 #include <bpf.h>
 
-char _license[] SEC("license") = "GPL";
-int _version SEC("version") = LINUX_VERSION_CODE;
+license(GPL);

commit dd8e4ead6e983acea959d10252688ef1471106fe
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Fri May 4 12:23:29 2018 -0300

    perf bpf: Add bpf.h to be used in eBPF proggies
    
    So, the first helper is the one shortening a variable/function section
    attribute, from, for instance:
    
      char _license[] __attribute__((section("license"), used)) = "GPL";
    
    to:
    
      char _license[] SEC("license") = "GPL";
    
    Convert empty.c to that and it becomes:
    
      # cat ~acme/lib/examples/perf/bpf/empty.c
      #include <bpf.h>
    
      char _license[] SEC("license") = "GPL";
      int _version SEC("version") = LINUX_VERSION_CODE;
      #
    
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Wang Nan <wangnan0@huawei.com>
    Link: https://lkml.kernel.org/n/tip-zmeg52dlvy51rdlhyumfl5yf@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>

diff --git a/tools/perf/examples/bpf/empty.c b/tools/perf/examples/bpf/empty.c
index 78754df53ac1..86f97763355d 100644
--- a/tools/perf/examples/bpf/empty.c
+++ b/tools/perf/examples/bpf/empty.c
@@ -1,2 +1,4 @@
-char _license[] __attribute__((section("license"), used)) = "GPL";
-int _version __attribute__((section("version"), used)) = LINUX_VERSION_CODE;
+#include <bpf.h>
+
+char _license[] SEC("license") = "GPL";
+int _version SEC("version") = LINUX_VERSION_CODE;

commit 8f12a2ff00e5e48ad5618167bac72cad7c9f214e
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Fri May 4 11:56:15 2018 -0300

    perf bpf: Add 'examples' directories
    
    The first one is the bare minimum that bpf infrastructure accepts before
    it expects actual events to be set up:
    
      $ cat tools/perf/examples/bpf/empty.c
      char _license[] __attribute__((section("license"), used)) = "GPL";
      int _version __attribute__((section("version"), used)) = LINUX_VERSION_CODE;
      $
    
    If you remove that "version" line, then it will be refused with:
    
      # perf trace -e tools/perf/examples/bpf/empty.c
      event syntax error: 'tools/perf/examples/bpf/empty.c'
                           \___ Failed to load tools/perf/examples/bpf/empty.c from source: 'version' section incorrect or lost
    
      (add -v to see detail)
      Run 'perf list' for a list of valid events
    
       Usage: perf trace [<options>] [<command>]
          or: perf trace [<options>] -- <command> [<options>]
          or: perf trace record [<options>] [<command>]
          or: perf trace record [<options>] -- <command> [<options>]
    
          -e, --event <event>   event/syscall selector. use 'perf list' to list available events
      #
    
    The next ones will, step by step, show simple filters, then the needs
    for headers will be made clear, it will be put in place and tested with
    new examples, rinse, repeat.
    
    Back to using this first one to test the perf+bpf infrastructure:
    
    If we run it will fail, as no functions are present connecting with,
    say, a tracepoint or a function using the kprobes or uprobes
    infrastructure:
    
      # perf trace -e tools/perf/examples/bpf/empty.c
      WARNING: event parser found nothing
      invalid or unsupported event: 'tools/perf/examples/bpf/empty.c'
      Run 'perf list' for a list of valid events
    
       Usage: perf trace [<options>] [<command>]
          or: perf trace [<options>] -- <command> [<options>]
          or: perf trace record [<options>] [<command>]
          or: perf trace record [<options>] -- <command> [<options>]
    
          -e, --event <event>   event/syscall selector. use 'perf list' to list available events
      #
    
    But, if we set things up to dump the generated object file to a file,
    and do this after having run 'make install', still on the developer's
    $HOME directory:
    
      # cat ~/.perfconfig
      [llvm]
    
            dump-obj = true
      #
      # perf trace -e ~acme/lib/examples/perf/bpf/empty.c
      LLVM: dumping /home/acme/lib/examples/perf/bpf/empty.o
      WARNING: event parser found nothing
      invalid or unsupported event: '/home/acme/lib/examples/perf/bpf/empty.c'
      <SNIP>
      #
    
    We can look at the dumped object file:
    
      # ls -la ~acme/lib/examples/perf/bpf/empty.o
      -rw-r--r--. 1 root root 576 May  4 12:10 /home/acme/lib/examples/perf/bpf/empty.o
      # file ~acme/lib/examples/perf/bpf/empty.o
      /home/acme/lib/examples/perf/bpf/empty.o: ELF 64-bit LSB relocatable, *unknown arch 0xf7* version 1 (SYSV), not stripped
      # readelf -sw ~acme/lib/examples/perf/bpf/empty.o
    
      Symbol table '.symtab' contains 3 entries:
         Num:    Value          Size Type    Bind   Vis      Ndx Name
           0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND
           1: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT    3 _license
           2: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT    4 _version
      #
      # tools/bpf/bpftool/bpftool --pretty ~acme/lib/examples/perf/bpf/empty.o
      null
      #
    
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Wang Nan <wangnan0@huawei.com>
    Link: https://lkml.kernel.org/n/tip-y7dkhakejz3013o0w21n98xd@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>

diff --git a/tools/perf/examples/bpf/empty.c b/tools/perf/examples/bpf/empty.c
new file mode 100644
index 000000000000..78754df53ac1
--- /dev/null
+++ b/tools/perf/examples/bpf/empty.c
@@ -0,0 +1,2 @@
+char _license[] __attribute__((section("license"), used)) = "GPL";
+int _version __attribute__((section("version"), used)) = LINUX_VERSION_CODE;
