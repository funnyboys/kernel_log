commit 521fe8bb5874963d5f6fd58d5c5ad80fbc9c6b1c
Author: Toke Høiland-Jørgensen <toke@redhat.com>
Date:   Mon Jan 20 14:06:48 2020 +0100

    perf: Use consistent include paths for libbpf
    
    Fix perf to include libbpf header files with the bpf/ prefix, to
    be consistent with external users of the library.
    
    Signed-off-by: Toke Høiland-Jørgensen <toke@redhat.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Andrii Nakryiko <andriin@fb.com>
    Link: https://lore.kernel.org/bpf/157952560797.1683545.7685921032671386301.stgit@toke.dk

diff --git a/tools/perf/examples/bpf/sys_enter_openat.c b/tools/perf/examples/bpf/sys_enter_openat.c
index 9cd124b09392..c4481c390d23 100644
--- a/tools/perf/examples/bpf/sys_enter_openat.c
+++ b/tools/perf/examples/bpf/sys_enter_openat.c
@@ -14,7 +14,7 @@
  * the return value.
  */
 
-#include <bpf.h>
+#include <bpf/bpf.h>
 
 struct syscall_enter_openat_args {
 	unsigned long long unused;

commit dda9ac966d39cec5a501b0b4d0210b3c2a167e6c
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Fri Aug 3 16:28:35 2018 -0300

    perf bpf: Add 'syscall_enter' probe helper for syscall enter tracepoints
    
    Allowing one to hook into the syscalls:sys_enter_NAME tracepoints,
    an example is provided that hooks into the 'openat' syscall.
    
    Using it with the probe:vfs_getname probe into getname_flags to get the
    filename args as it is copied from userspace:
    
      # perf probe -l
      probe:vfs_getname    (on getname_flags:73@acme/git/linux/fs/namei.c with pathname)
      # perf trace -e probe:*getname,tools/perf/examples/bpf/sys_enter_openat.c cat /etc/passwd > /dev/null
         0.000 probe:vfs_getname:(ffffffffbd2a8983) pathname="/etc/ld.so.preload"
         0.022 syscalls:sys_enter_openat:dfd: CWD, filename: 0xafbe8da8, flags: CLOEXEC
         0.027 probe:vfs_getname:(ffffffffbd2a8983) pathname="/etc/ld.so.cache"
         0.054 syscalls:sys_enter_openat:dfd: CWD, filename: 0xafdf0ce0, flags: CLOEXEC
         0.057 probe:vfs_getname:(ffffffffbd2a8983) pathname="/lib64/libc.so.6"
         0.316 probe:vfs_getname:(ffffffffbd2a8983) pathname="/usr/lib/locale/locale-archive"
         0.375 syscalls:sys_enter_openat:dfd: CWD, filename: 0xe2b2b0b4
         0.379 probe:vfs_getname:(ffffffffbd2a8983) pathname="/etc/passwd"
      #
    
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Wang Nan <wangnan0@huawei.com>
    Link: https://lkml.kernel.org/n/tip-2po9jcqv1qgj0koxlg8kkg30@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>

diff --git a/tools/perf/examples/bpf/sys_enter_openat.c b/tools/perf/examples/bpf/sys_enter_openat.c
new file mode 100644
index 000000000000..9cd124b09392
--- /dev/null
+++ b/tools/perf/examples/bpf/sys_enter_openat.c
@@ -0,0 +1,33 @@
+// SPDX-License-Identifier: GPL-2.0
+/*
+ * Hook into 'openat' syscall entry tracepoint
+ *
+ * Test it with:
+ *
+ * perf trace -e tools/perf/examples/bpf/sys_enter_openat.c cat /etc/passwd > /dev/null
+ *
+ * It'll catch some openat syscalls related to the dynamic linked and
+ * the last one should be the one for '/etc/passwd'.
+ *
+ * The syscall_enter_openat_args can be used to get the syscall fields
+ * and use them for filtering calls, i.e. use in expressions for
+ * the return value.
+ */
+
+#include <bpf.h>
+
+struct syscall_enter_openat_args {
+	unsigned long long unused;
+	long		   syscall_nr;
+	long		   dfd;
+	char		   *filename_ptr;
+	long		   flags;
+	long		   mode;
+};
+
+int syscall_enter(openat)(struct syscall_enter_openat_args *args)
+{
+	return 1;
+}
+
+license(GPL);
