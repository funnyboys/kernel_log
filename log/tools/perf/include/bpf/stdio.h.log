commit 3b573bf318d894b4290e194c4d7dbcba8c1f6ead
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Fri Feb 14 16:21:40 2020 -0300

    perf bpf: Remove bpf/ subdir from bpf.h headers used to build bpf events
    
    The bpf.h file needed gets installed in /usr/lib/include/perf/bpf/bpf.h,
    and /usr/lib/include/perf/ is added to the include path passed to clang
    to build the eBPF bytecode, so just remove "bpf/", its directly in the
    path passed already. This was working by accident, fix it.
    
    I.e. now this is back working:
    
      # cat /home/acme/git/perf/tools/perf/examples/bpf/hello.c
      #include <stdio.h>
    
      int syscall_enter(openat)(void *args)
      {
            puts("Hello, world\n");
            return 0;
      }
    
      license(GPL);
      # perf trace -e /home/acme/git/perf/tools/perf/examples/bpf/hello.c
           0.000 pickup/21493 __bpf_stdout__(Hello, world)
          56.462 sh/13539 __bpf_stdout__(Hello, world)
          56.536 sh/13539 __bpf_stdout__(Hello, world)
          56.673 sh/13539 __bpf_stdout__(Hello, world)
          56.781 sh/13539 __bpf_stdout__(Hello, world)
          56.707 perf/13182 __bpf_stdout__(Hello, world)
          56.849 perf/13182 __bpf_stdout__(Hello, world)
      ^C
      #
    
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Link: https://lkml.kernel.org/n/tip-d9myswhgo8gfi3vmehdqpxa7@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>

diff --git a/tools/perf/include/bpf/stdio.h b/tools/perf/include/bpf/stdio.h
index 7ca6fa5463ee..316af5b2ff35 100644
--- a/tools/perf/include/bpf/stdio.h
+++ b/tools/perf/include/bpf/stdio.h
@@ -1,6 +1,6 @@
 // SPDX-License-Identifier: GPL-2.0
 
-#include <bpf/bpf.h>
+#include <bpf.h>
 
 struct bpf_map SEC("maps") __bpf_stdout__ = {
        .type = BPF_MAP_TYPE_PERF_EVENT_ARRAY,

commit 521fe8bb5874963d5f6fd58d5c5ad80fbc9c6b1c
Author: Toke Høiland-Jørgensen <toke@redhat.com>
Date:   Mon Jan 20 14:06:48 2020 +0100

    perf: Use consistent include paths for libbpf
    
    Fix perf to include libbpf header files with the bpf/ prefix, to
    be consistent with external users of the library.
    
    Signed-off-by: Toke Høiland-Jørgensen <toke@redhat.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Andrii Nakryiko <andriin@fb.com>
    Link: https://lore.kernel.org/bpf/157952560797.1683545.7685921032671386301.stgit@toke.dk

diff --git a/tools/perf/include/bpf/stdio.h b/tools/perf/include/bpf/stdio.h
index 316af5b2ff35..7ca6fa5463ee 100644
--- a/tools/perf/include/bpf/stdio.h
+++ b/tools/perf/include/bpf/stdio.h
@@ -1,6 +1,6 @@
 // SPDX-License-Identifier: GPL-2.0
 
-#include <bpf.h>
+#include <bpf/bpf.h>
 
 struct bpf_map SEC("maps") __bpf_stdout__ = {
        .type = BPF_MAP_TYPE_PERF_EVENT_ARRAY,

commit 61d007138a44dc69265cf948eadd1759edbd3875
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Wed Dec 12 15:31:28 2018 -0300

    perf bpf: Move perf_event_output() from stdio.h to bpf.h
    
    So that we don't always carry that __bpf_output__ map, leaving that to
    the scripts wanting to use that facility.
    
    'perf trace' will be changed to look if that map is present and only
    setup the bpf-output events if so.
    
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Wang Nan <wangnan0@huawei.com>
    Link: https://lkml.kernel.org/n/tip-azwys8irxqx9053vpajr0k5h@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>

diff --git a/tools/perf/include/bpf/stdio.h b/tools/perf/include/bpf/stdio.h
index 2899cb7bfed8..316af5b2ff35 100644
--- a/tools/perf/include/bpf/stdio.h
+++ b/tools/perf/include/bpf/stdio.h
@@ -9,9 +9,6 @@ struct bpf_map SEC("maps") __bpf_stdout__ = {
        .max_entries = __NR_CPUS__,
 };
 
-static int (*perf_event_output)(void *, struct bpf_map *, int, void *, unsigned long) =
-	(void *)BPF_FUNC_perf_event_output;
-
 #define puts(from) \
 	({ const int __len = sizeof(from); \
 	   char __from[__len] = from; \

commit 53a5d7b80032fcf48cdc5a6c96c8dc8a120b64ef
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Mon Aug 6 09:15:18 2018 -0300

    perf bpf: Add bpf/stdio.h wrapper to bpf_perf_event_output function
    
    That, together with the map __bpf_output__ that is already handled by
    'perf trace' to print that event's contents as strings provides a
    debugging facility, to show it in use, print a simple string everytime
    the syscalls:sys_enter_openat() syscall tracepoint is hit:
    
      # cat tools/perf/examples/bpf/hello.c
      #include <stdio.h>
    
      int syscall_enter(openat)(void *args)
      {
              puts("Hello, world\n");
              return 0;
      }
    
      license(GPL);
      #
      # perf trace -e openat,tools/perf/examples/bpf/hello.c cat /etc/passwd > /dev/null
         0.016 (         ): __bpf_stdout__:Hello, world
         0.018 ( 0.010 ms): cat/9079 openat(dfd: CWD, filename: /etc/ld.so.cache, flags: CLOEXEC) = 3
         0.057 (         ): __bpf_stdout__:Hello, world
         0.059 ( 0.011 ms): cat/9079 openat(dfd: CWD, filename: /lib64/libc.so.6, flags: CLOEXEC) = 3
         0.417 (         ): __bpf_stdout__:Hello, world
         0.419 ( 0.009 ms): cat/9079 openat(dfd: CWD, filename: /etc/passwd) = 3
      #
    
    This is part of an ongoing experimentation on making eBPF scripts as
    consumed by perf to be as concise as possible and using familiar
    concepts such as stdio.h functions, that end up just wrapping the
    existing BPF functions, trying to hide as much boilerplate as possible
    while using just conventions and C preprocessor tricks.
    
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Wang Nan <wangnan0@huawei.com>
    Link: https://lkml.kernel.org/n/tip-4tiaqlx5crf0fwpe7a6j84x7@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>

diff --git a/tools/perf/include/bpf/stdio.h b/tools/perf/include/bpf/stdio.h
new file mode 100644
index 000000000000..2899cb7bfed8
--- /dev/null
+++ b/tools/perf/include/bpf/stdio.h
@@ -0,0 +1,19 @@
+// SPDX-License-Identifier: GPL-2.0
+
+#include <bpf.h>
+
+struct bpf_map SEC("maps") __bpf_stdout__ = {
+       .type = BPF_MAP_TYPE_PERF_EVENT_ARRAY,
+       .key_size = sizeof(int),
+       .value_size = sizeof(u32),
+       .max_entries = __NR_CPUS__,
+};
+
+static int (*perf_event_output)(void *, struct bpf_map *, int, void *, unsigned long) =
+	(void *)BPF_FUNC_perf_event_output;
+
+#define puts(from) \
+	({ const int __len = sizeof(from); \
+	   char __from[__len] = from; \
+	   perf_event_output(args, &__bpf_stdout__, BPF_F_CURRENT_CPU, \
+			  &__from, __len & (sizeof(from) - 1)); })
