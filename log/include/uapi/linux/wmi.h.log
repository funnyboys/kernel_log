commit d9c5252295218df4cfe64353aa860d7b5c8700ef
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Thu Jul 25 16:58:31 2019 +0900

    treewide: add "WITH Linux-syscall-note" to SPDX tag of uapi headers
    
    UAPI headers licensed under GPL are supposed to have exception
    "WITH Linux-syscall-note" so that they can be included into non-GPL
    user space application code.
    
    The exception note is missing in some UAPI headers.
    
    Some of them slipped in by the treewide conversion commit b24413180f56
    ("License cleanup: add SPDX GPL-2.0 license identifier to files with
    no license"). Just run:
    
      $ git show --oneline b24413180f56 -- arch/x86/include/uapi/asm/
    
    I believe they are not intentional, and should be fixed too.
    
    This patch was generated by the following script:
    
      git grep -l --not -e Linux-syscall-note --and -e SPDX-License-Identifier \
        -- :arch/*/include/uapi/asm/*.h :include/uapi/ :^*/Kbuild |
      while read file
      do
              sed -i -e '/[[:space:]]OR[[:space:]]/s/\(GPL-[^[:space:]]*\)/(\1 WITH Linux-syscall-note)/g' \
              -e '/[[:space:]]or[[:space:]]/s/\(GPL-[^[:space:]]*\)/(\1 WITH Linux-syscall-note)/g' \
              -e '/[[:space:]]OR[[:space:]]/!{/[[:space:]]or[[:space:]]/!s/\(GPL-[^[:space:]]*\)/\1 WITH Linux-syscall-note/g}' $file
      done
    
    After this patch is applied, there are 5 UAPI headers that do not contain
    "WITH Linux-syscall-note". They are kept untouched since this exception
    applies only to GPL variants.
    
      $ git grep --not -e Linux-syscall-note --and -e SPDX-License-Identifier \
        -- :arch/*/include/uapi/asm/*.h :include/uapi/ :^*/Kbuild
      include/uapi/drm/panfrost_drm.h:/* SPDX-License-Identifier: MIT */
      include/uapi/linux/batman_adv.h:/* SPDX-License-Identifier: MIT */
      include/uapi/linux/qemu_fw_cfg.h:/* SPDX-License-Identifier: BSD-3-Clause */
      include/uapi/linux/vbox_err.h:/* SPDX-License-Identifier: MIT */
      include/uapi/linux/virtio_iommu.h:/* SPDX-License-Identifier: BSD-3-Clause */
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/include/uapi/linux/wmi.h b/include/uapi/linux/wmi.h
index c36f2d7675a4..7085c5dca9fa 100644
--- a/include/uapi/linux/wmi.h
+++ b/include/uapi/linux/wmi.h
@@ -1,4 +1,4 @@
-/* SPDX-License-Identifier: GPL-2.0-only */
+/* SPDX-License-Identifier: GPL-2.0-only WITH Linux-syscall-note */
 /*
  *  User API methods for ACPI-WMI mapping driver
  *

commit d2912cb15bdda8ba4a5dd73396ad62641af2f520
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Tue Jun 4 10:11:33 2019 +0200

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 500
    
    Based on 2 normalized pattern(s):
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license version 2 as
      published by the free software foundation
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license version 2 as
      published by the free software foundation #
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-only
    
    has been chosen to replace the boilerplate/reference in 4122 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Enrico Weigelt <info@metux.net>
    Reviewed-by: Kate Stewart <kstewart@linuxfoundation.org>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190604081206.933168790@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/include/uapi/linux/wmi.h b/include/uapi/linux/wmi.h
index 7a92e9e3d1c0..c36f2d7675a4 100644
--- a/include/uapi/linux/wmi.h
+++ b/include/uapi/linux/wmi.h
@@ -1,11 +1,8 @@
+/* SPDX-License-Identifier: GPL-2.0-only */
 /*
  *  User API methods for ACPI-WMI mapping driver
  *
  *  Copyright (C) 2017 Dell, Inc.
- *
- *  This program is free software; you can redistribute it and/or modify
- *  it under the terms of the GNU General Public License version 2 as
- *  published by the Free Software Foundation.
  */
 #ifndef _UAPI_LINUX_WMI_H
 #define _UAPI_LINUX_WMI_H

commit f2645fa317b8905b8934f06a0601d5b7fa66aba0
Author: Mario Limonciello <mario.limonciello@dell.com>
Date:   Wed Nov 1 14:25:36 2017 -0500

    platform/x86: dell-smbios-wmi: introduce userspace interface
    
    It's important for the driver to provide a R/W ioctl to ensure that
    two competing userspace processes don't race to provide or read each
    others data.
    
    This userspace character device will be used to perform SMBIOS calls
    from any applications.
    
    It provides an ioctl that will allow passing the WMI calling
    interface buffer between userspace and kernel space.
    
    This character device is intended to deprecate the dcdbas kernel module
    and the interface that it provides to userspace.
    
    To perform an SMBIOS IOCTL call using the character device userspace will
    perform a read() on the the character device.  The WMI bus will provide
    a u64 variable containing the necessary size of the IOCTL buffer.
    
    The API for interacting with this interface is defined in documentation
    as well as the WMI uapi header provides the format of the structures.
    
    Not all userspace requests will be accepted.  The dell-smbios filtering
    functionality will be used to prevent access to certain tokens and calls.
    
    All whitelisted commands and tokens are now shared out to userspace so
    applications don't need to define them in their own headers.
    
    Signed-off-by: Mario Limonciello <mario.limonciello@dell.com>
    Reviewed-by: Edward O'Callaghan <quasisec@google.com>
    Signed-off-by: Darren Hart (VMware) <dvhart@infradead.org>

diff --git a/include/uapi/linux/wmi.h b/include/uapi/linux/wmi.h
index 7e52350ac9b3..7a92e9e3d1c0 100644
--- a/include/uapi/linux/wmi.h
+++ b/include/uapi/linux/wmi.h
@@ -10,6 +10,7 @@
 #ifndef _UAPI_LINUX_WMI_H
 #define _UAPI_LINUX_WMI_H
 
+#include <linux/ioctl.h>
 #include <linux/types.h>
 
 /* WMI bus will filter all WMI vendor driver requests through this IOC */
@@ -23,4 +24,50 @@ struct wmi_ioctl_buffer {
 	__u8	data[];
 };
 
+/* This structure may be modified by the firmware when we enter
+ * system management mode through SMM, hence the volatiles
+ */
+struct calling_interface_buffer {
+	__u16 cmd_class;
+	__u16 cmd_select;
+	volatile __u32 input[4];
+	volatile __u32 output[4];
+} __packed;
+
+struct dell_wmi_extensions {
+	__u32 argattrib;
+	__u32 blength;
+	__u8 data[];
+} __packed;
+
+struct dell_wmi_smbios_buffer {
+	__u64 length;
+	struct calling_interface_buffer std;
+	struct dell_wmi_extensions	ext;
+} __packed;
+
+/* Whitelisted smbios class/select commands */
+#define CLASS_TOKEN_READ	0
+#define CLASS_TOKEN_WRITE	1
+#define SELECT_TOKEN_STD	0
+#define SELECT_TOKEN_BAT	1
+#define SELECT_TOKEN_AC		2
+#define CLASS_FLASH_INTERFACE	7
+#define SELECT_FLASH_INTERFACE	3
+#define CLASS_ADMIN_PROP	10
+#define SELECT_ADMIN_PROP	3
+#define CLASS_INFO		17
+#define SELECT_RFKILL		11
+#define SELECT_APP_REGISTRATION	3
+#define SELECT_DOCK		22
+
+/* whitelisted tokens */
+#define CAPSULE_EN_TOKEN	0x0461
+#define CAPSULE_DIS_TOKEN	0x0462
+#define WSMT_EN_TOKEN		0x04EC
+#define WSMT_DIS_TOKEN		0x04ED
+
+/* Dell SMBIOS calling IOCTL command used by dell-smbios-wmi */
+#define DELL_WMI_SMBIOS_CMD	_IOWR(WMI_IOC, 0, struct dell_wmi_smbios_buffer)
+
 #endif

commit 44b6b7661132b1b0e5fd3147ded66f1e4a817ca9
Author: Mario Limonciello <mario.limonciello@dell.com>
Date:   Wed Nov 1 14:25:35 2017 -0500

    platform/x86: wmi: create userspace interface for drivers
    
    For WMI operations that are only Set or Query readable and writable sysfs
    attributes created by WMI vendor drivers or the bus driver makes sense.
    
    For other WMI operations that are run on Method, there needs to be a
    way to guarantee to userspace that the results from the method call
    belong to the data request to the method call.  Sysfs attributes don't
    work well in this scenario because two userspace processes may be
    competing at reading/writing an attribute and step on each other's
    data.
    
    When a WMI vendor driver declares a callback method in the wmi_driver
    the WMI bus driver will create a character device that maps to that
    function.  This callback method will be responsible for filtering
    invalid requests and performing the actual call.
    
    That character device will correspond to this path:
    /dev/wmi/$driver
    
    Performing read() on this character device will provide the size
    of the buffer that the character device needs to perform calls.
    This buffer size can be set by vendor drivers through a new symbol
    or when MOF parsing is available by the MOF.
    
    Performing ioctl() on this character device will be interpretd
    by the WMI bus driver. It will perform sanity tests for size of
    data, test them for a valid instance, copy the data from userspace
    and pass iton to the vendor driver to further process and run.
    
    This creates an implicit policy that each driver will only be allowed
    a single character device.  If a module matches multiple GUID's,
    the wmi_devices will need to be all handled by the same wmi_driver.
    
    The WMI vendor drivers will be responsible for managing inappropriate
    access to this character device and proper locking on data used by
    it.
    
    When a WMI vendor driver is unloaded the WMI bus driver will clean
    up the character device and any memory allocated for the call.
    
    Signed-off-by: Mario Limonciello <mario.limonciello@dell.com>
    Reviewed-by: Edward O'Callaghan <quasisec@google.com>
    Signed-off-by: Darren Hart (VMware) <dvhart@infradead.org>

diff --git a/include/uapi/linux/wmi.h b/include/uapi/linux/wmi.h
new file mode 100644
index 000000000000..7e52350ac9b3
--- /dev/null
+++ b/include/uapi/linux/wmi.h
@@ -0,0 +1,26 @@
+/*
+ *  User API methods for ACPI-WMI mapping driver
+ *
+ *  Copyright (C) 2017 Dell, Inc.
+ *
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License version 2 as
+ *  published by the Free Software Foundation.
+ */
+#ifndef _UAPI_LINUX_WMI_H
+#define _UAPI_LINUX_WMI_H
+
+#include <linux/types.h>
+
+/* WMI bus will filter all WMI vendor driver requests through this IOC */
+#define WMI_IOC 'W'
+
+/* All ioctl requests through WMI should declare their size followed by
+ * relevant data objects
+ */
+struct wmi_ioctl_buffer {
+	__u64	length;
+	__u8	data[];
+};
+
+#endif
