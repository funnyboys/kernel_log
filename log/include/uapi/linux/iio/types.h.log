commit b170f7d48443d1ea3e4ffbf409025b5e5b1146fe
Author: Andreas Brauchli <a.brauchli@elementarea.net>
Date:   Thu Dec 13 15:43:22 2018 +0100

    iio: Add modifiers for ethanol and H2 gases
    
    Add ethanol and H2 gas modifiers:
    * IIO_MOD_ETHANOL
    * IIO_MOD_H2
    
    Signed-off-by: Andreas Brauchli <andreas.brauchli@sensirion.com>
    Acked-by: Matt Ranostay <matt.ranostay@konsulko.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>

diff --git a/include/uapi/linux/iio/types.h b/include/uapi/linux/iio/types.h
index c59adac24b1c..fdd81affca4b 100644
--- a/include/uapi/linux/iio/types.h
+++ b/include/uapi/linux/iio/types.h
@@ -92,6 +92,8 @@ enum iio_modifier {
 	IIO_MOD_PM2P5,
 	IIO_MOD_PM4,
 	IIO_MOD_PM10,
+	IIO_MOD_ETHANOL,
+	IIO_MOD_H2,
 };
 
 enum iio_event_type {

commit 17abc9ec68b73ddeb262a507a62421016b9c54d5
Author: Tomasz Duszynski <tduszyns@gmail.com>
Date:   Fri Dec 14 19:28:01 2018 +0100

    iio: add IIO_MASSCONCENTRATION channel type
    
    Measuring particulate matter in ug / m3 (micro-grams per cubic meter)
    is de facto standard. Existing air quality sensors usually follow
    this convention and are capable of returning measurements using
    this unit.
    
    IIO currently does not offer suitable channel type for this
    type of measurements hence this patch adds this.
    
    In addition, extra modifiers are introduced used for distinguishing
    between fine pm1, pm2p5 and coarse pm4, pm10 particle measurements, i.e
    IIO_MOD_PM1, IIO_MOD_PM25 and IIO_MOD_PM4, IIO_MOD_PM10.
    
    pmX consists of particles with aerodynamic diameter less or equal to
    X micrometers.
    
    Signed-off-by: Tomasz Duszynski <tduszyns@gmail.com>
    Acked-by: Matt Ranostay <matt.ranostay@konsulko.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>

diff --git a/include/uapi/linux/iio/types.h b/include/uapi/linux/iio/types.h
index 92baabc103ac..c59adac24b1c 100644
--- a/include/uapi/linux/iio/types.h
+++ b/include/uapi/linux/iio/types.h
@@ -46,6 +46,7 @@ enum iio_chan_type {
 	IIO_GRAVITY,
 	IIO_POSITIONRELATIVE,
 	IIO_PHASE,
+	IIO_MASSCONCENTRATION,
 };
 
 enum iio_modifier {
@@ -87,6 +88,10 @@ enum iio_modifier {
 	IIO_MOD_VOC,
 	IIO_MOD_LIGHT_UV,
 	IIO_MOD_LIGHT_DUV,
+	IIO_MOD_PM1,
+	IIO_MOD_PM2P5,
+	IIO_MOD_PM4,
+	IIO_MOD_PM10,
 };
 
 enum iio_event_type {

commit c0e4e0fd952b73bf6aae67e92b9a496a52837eb9
Author: Maxime Roussin-Bélanger <maxime.roussinbelanger@gmail.com>
Date:   Thu Jul 19 16:26:24 2018 -0400

    iio: Add modifier for DUV light
    
    Signed-off-by: Maxime Roussin-Bélanger <maxime.roussinbelanger@gmail.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>

diff --git a/include/uapi/linux/iio/types.h b/include/uapi/linux/iio/types.h
index e4df3cc268db..92baabc103ac 100644
--- a/include/uapi/linux/iio/types.h
+++ b/include/uapi/linux/iio/types.h
@@ -86,6 +86,7 @@ enum iio_modifier {
 	IIO_MOD_CO2,
 	IIO_MOD_VOC,
 	IIO_MOD_LIGHT_UV,
+	IIO_MOD_LIGHT_DUV,
 };
 
 enum iio_event_type {

commit c73314e6ebb2651a70ca8a3ff08d4bd6b9f9ade1
Author: Mathieu Othacehe <m.othacehe@gmail.com>
Date:   Fri Jul 20 19:34:25 2018 +0200

    iio: Add channel for Phase
    
    Add new channel type support for phase.
    
    This channel may be used by Time-of-flight sensors to express the
    phase difference between emitted and received signals. Those sensor
    will then use the phase shift of return signals to approximate the
    distance to objects.
    
    Signed-off-by: Mathieu Othacehe <m.othacehe@gmail.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>

diff --git a/include/uapi/linux/iio/types.h b/include/uapi/linux/iio/types.h
index 033c7d28924e..e4df3cc268db 100644
--- a/include/uapi/linux/iio/types.h
+++ b/include/uapi/linux/iio/types.h
@@ -45,6 +45,7 @@ enum iio_chan_type {
 	IIO_INDEX,
 	IIO_GRAVITY,
 	IIO_POSITIONRELATIVE,
+	IIO_PHASE,
 };
 
 enum iio_modifier {

commit 3055a6cfa04ba4288589778925e8838261e56078
Author: Eugen Hristev <eugen.hristev@microchip.com>
Date:   Tue May 22 10:52:32 2018 +0300

    iio: Add channel for Position Relative
    
    Add new channel type for relative position on a pad.
    
    These type of analog sensor offers the position of a pen
    on a touchpad, and is represented as a voltage, which can be
    converted to a position on X and Y axis on the pad.
    The channel will hand the relative position on the pad in both directions.
    
    The channel can then be consumed by a touchscreen driver or
    read as-is for a raw indication of the touchpen on a touchpad.
    
    Signed-off-by: Eugen Hristev <eugen.hristev@microchip.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>

diff --git a/include/uapi/linux/iio/types.h b/include/uapi/linux/iio/types.h
index 4213cdf88e3c..033c7d28924e 100644
--- a/include/uapi/linux/iio/types.h
+++ b/include/uapi/linux/iio/types.h
@@ -44,6 +44,7 @@ enum iio_chan_type {
 	IIO_COUNT,
 	IIO_INDEX,
 	IIO_GRAVITY,
+	IIO_POSITIONRELATIVE,
 };
 
 enum iio_modifier {

commit e2be04c7f9958dde770eeb8b30e829ca969b37bb
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Nov 1 15:09:13 2017 +0100

    License cleanup: add SPDX license identifier to uapi header files with a license
    
    Many user space API headers have licensing information, which is either
    incomplete, badly formatted or just a shorthand for referring to the
    license under which the file is supposed to be.  This makes it hard for
    compliance tools to determine the correct license.
    
    Update these files with an SPDX license identifier.  The identifier was
    chosen based on the license information in the file.
    
    GPL/LGPL licensed headers get the matching GPL/LGPL SPDX license
    identifier with the added 'WITH Linux-syscall-note' exception, which is
    the officially assigned exception identifier for the kernel syscall
    exception:
    
       NOTE! This copyright does *not* cover user programs that use kernel
       services by normal system calls - this is merely considered normal use
       of the kernel, and does *not* fall under the heading of "derived work".
    
    This exception makes it possible to include GPL headers into non GPL
    code, without confusing license compliance tools.
    
    Headers which have either explicit dual licensing or are just licensed
    under a non GPL license are updated with the corresponding SPDX
    identifier and the GPLv2 with syscall exception identifier.  The format
    is:
            ((GPL-2.0 WITH Linux-syscall-note) OR SPDX-ID-OF-OTHER-LICENSE)
    
    SPDX license identifiers are a legally binding shorthand, which can be
    used instead of the full boiler plate text.  The update does not remove
    existing license information as this has to be done on a case by case
    basis and the copyright holders might have to be consulted. This will
    happen in a separate step.
    
    This patch is based on work done by Thomas Gleixner and Kate Stewart and
    Philippe Ombredanne.  See the previous patch in this series for the
    methodology of how this patch was researched.
    
    Reviewed-by: Kate Stewart <kstewart@linuxfoundation.org>
    Reviewed-by: Philippe Ombredanne <pombredanne@nexb.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/include/uapi/linux/iio/types.h b/include/uapi/linux/iio/types.h
index ffafd6c25a48..4213cdf88e3c 100644
--- a/include/uapi/linux/iio/types.h
+++ b/include/uapi/linux/iio/types.h
@@ -1,3 +1,4 @@
+/* SPDX-License-Identifier: GPL-2.0 WITH Linux-syscall-note */
 /* industrial I/O data types needed both in and out of kernel
  *
  * Copyright (c) 2008 Jonathan Cameron

commit 571299d099dcce0ff32c76e70e32e0ba01e55adc
Author: Song Hongyan <hongyan.song@intel.com>
Date:   Thu Jan 5 18:24:03 2017 +0800

    iio: Add channel for Gravity
    
    Add new channel types support for gravity sensor.
    
    Gravity sensor provides an application-level or physical collection that
    identifies a device that measures exclusively the force of Earth's
    gravity along any number of axes.
    
    More information can be found in:
    http://www.usb.org/developers/hidpage/HUTRR59_-_Usages_for_Wearables.pdf
    
    Signed-off-by: Song Hongyan <hongyan.song@intel.com>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>

diff --git a/include/uapi/linux/iio/types.h b/include/uapi/linux/iio/types.h
index e54d14a7f876..ffafd6c25a48 100644
--- a/include/uapi/linux/iio/types.h
+++ b/include/uapi/linux/iio/types.h
@@ -42,6 +42,7 @@ enum iio_chan_type {
 	IIO_ELECTRICALCONDUCTIVITY,
 	IIO_COUNT,
 	IIO_INDEX,
+	IIO_GRAVITY,
 };
 
 enum iio_modifier {

commit 1a8f324aa1f2237caef1c6633734785bbdcffeed
Author: William Breathitt Gray <vilhelm.gray@gmail.com>
Date:   Wed Sep 28 13:59:49 2016 -0400

    iio: Implement counter channel type and info constants
    
    Quadrature encoders, such as rotary encoders and linear encoders, are
    devices which are capable of encoding the relative position and
    direction of motion of a shaft. This patch introduces several IIO
    constants for supporting quadrature encoder counter devices.
    
      IIO_COUNT: Current count (main data provided by the counter device)
      IIO_INDEX: Counter device index value
    
    Signed-off-by: William Breathitt Gray <vilhelm.gray@gmail.com>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>

diff --git a/include/uapi/linux/iio/types.h b/include/uapi/linux/iio/types.h
index 22e5e589a274..e54d14a7f876 100644
--- a/include/uapi/linux/iio/types.h
+++ b/include/uapi/linux/iio/types.h
@@ -40,6 +40,8 @@ enum iio_chan_type {
 	IIO_PH,
 	IIO_UVINDEX,
 	IIO_ELECTRICALCONDUCTIVITY,
+	IIO_COUNT,
+	IIO_INDEX,
 };
 
 enum iio_modifier {

commit 4b9d2090a444d44f16788b9ad60180011d133f97
Author: Matt Ranostay <mranostay@gmail.com>
Date:   Tue May 24 21:29:19 2016 -0700

    iio: electricalconductivity: add IIO_ELECTRICALCONDUCTIVITY type
    
    Signed-off-by: Matt Ranostay <mranostay@gmail.com>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>

diff --git a/include/uapi/linux/iio/types.h b/include/uapi/linux/iio/types.h
index b0916fc72cce..22e5e589a274 100644
--- a/include/uapi/linux/iio/types.h
+++ b/include/uapi/linux/iio/types.h
@@ -39,6 +39,7 @@ enum iio_chan_type {
 	IIO_RESISTANCE,
 	IIO_PH,
 	IIO_UVINDEX,
+	IIO_ELECTRICALCONDUCTIVITY,
 };
 
 enum iio_modifier {

commit d409404cf6e201c2980c7148484c350f33a7912e
Author: Peter Meerwald-Stadler <pmeerw@pmeerw.net>
Date:   Sun Mar 20 16:20:23 2016 +0100

    iio: Add channel for UV index
    
    UV index indicating strength of sunburn-producing ultraviolet (UV) radiation
    
    Signed-off-by: Peter Meerwald-Stadler <pmeerw@pmeerw.net>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>

diff --git a/include/uapi/linux/iio/types.h b/include/uapi/linux/iio/types.h
index 9337eceb9f9d..b0916fc72cce 100644
--- a/include/uapi/linux/iio/types.h
+++ b/include/uapi/linux/iio/types.h
@@ -38,6 +38,7 @@ enum iio_chan_type {
 	IIO_CONCENTRATION,
 	IIO_RESISTANCE,
 	IIO_PH,
+	IIO_UVINDEX,
 };
 
 enum iio_modifier {

commit 2c5ff1f9a6240d7d2d0928021cb76e421d6aacaf
Author: Peter Meerwald-Stadler <pmeerw@pmeerw.net>
Date:   Sun Mar 20 16:20:22 2016 +0100

    iio: Add modifier for UV light
    
    Signed-off-by: Peter Meerwald-Stadler <pmeerw@pmeerw.net>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>

diff --git a/include/uapi/linux/iio/types.h b/include/uapi/linux/iio/types.h
index c077617f3304..9337eceb9f9d 100644
--- a/include/uapi/linux/iio/types.h
+++ b/include/uapi/linux/iio/types.h
@@ -77,6 +77,7 @@ enum iio_modifier {
 	IIO_MOD_Q,
 	IIO_MOD_CO2,
 	IIO_MOD_VOC,
+	IIO_MOD_LIGHT_UV,
 };
 
 enum iio_event_type {

commit ecb3a7ccc653fc8007edd0591d32d839386673f1
Author: Matt Ranostay <mranostay@gmail.com>
Date:   Tue Jan 26 18:34:30 2016 -0800

    iio: ph: add IIO_PH channel type
    
    Signed-off-by: Matt Ranostay <mranostay@gmail.com>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>

diff --git a/include/uapi/linux/iio/types.h b/include/uapi/linux/iio/types.h
index 7c63bd67c36e..c077617f3304 100644
--- a/include/uapi/linux/iio/types.h
+++ b/include/uapi/linux/iio/types.h
@@ -37,6 +37,7 @@ enum iio_chan_type {
 	IIO_VELOCITY,
 	IIO_CONCENTRATION,
 	IIO_RESISTANCE,
+	IIO_PH,
 };
 
 enum iio_modifier {

commit d38d54692d454e4dded125677e39f53514dc4277
Author: Matt Ranostay <mranostay@gmail.com>
Date:   Sun Sep 13 20:26:12 2015 -0700

    iio: resistance: add IIO_RESISTANCE channel type
    
    Signed-off-by: Matt Ranostay <mranostay@gmail.com>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>

diff --git a/include/uapi/linux/iio/types.h b/include/uapi/linux/iio/types.h
index 1e4c4e346ffb..7c63bd67c36e 100644
--- a/include/uapi/linux/iio/types.h
+++ b/include/uapi/linux/iio/types.h
@@ -36,6 +36,7 @@ enum iio_chan_type {
 	IIO_DISTANCE,
 	IIO_VELOCITY,
 	IIO_CONCENTRATION,
+	IIO_RESISTANCE,
 };
 
 enum iio_modifier {

commit 8ff6b3bc9493089247e012a9fcba7198e194b4a5
Author: Matt Ranostay <mranostay@gmail.com>
Date:   Sun Sep 13 20:26:11 2015 -0700

    iio: chemical: Add IIO_CONCENTRATION channel type
    
    There are air quality sensors that report data back in parts per million
    of VOC (Volatile Organic Compounds) which are usually indexed from CO2
    or another common pollutant.
    
    This patchset adds an IIO_CONCENTRATION type that returns a percentage
    of substance because no other channels types fit this use case.
    Modifiers for IIO_MOD_CO2 and IIO_MOD_VOC gas types are defined.
    
    Signed-off-by: Matt Ranostay <mranostay@gmail.com>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>

diff --git a/include/uapi/linux/iio/types.h b/include/uapi/linux/iio/types.h
index 2f8b11722204..1e4c4e346ffb 100644
--- a/include/uapi/linux/iio/types.h
+++ b/include/uapi/linux/iio/types.h
@@ -35,6 +35,7 @@ enum iio_chan_type {
 	IIO_ENERGY,
 	IIO_DISTANCE,
 	IIO_VELOCITY,
+	IIO_CONCENTRATION,
 };
 
 enum iio_modifier {
@@ -72,6 +73,8 @@ enum iio_modifier {
 	IIO_MOD_ROOT_SUM_SQUARED_X_Y_Z,
 	IIO_MOD_I,
 	IIO_MOD_Q,
+	IIO_MOD_CO2,
+	IIO_MOD_VOC,
 };
 
 enum iio_event_type {

commit 1ce87f21edf6a071a7cc6bc77d628d7c7650d0d8
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Fri May 22 18:17:38 2015 +0200

    iio: Add I/Q modifiers
    
    I/Q modifiers can be used to denote signals which are represented by a
    in-phase and a quadrature component.
    
    The ABI documentation describes the I and Q modifiers for current and
    voltage channels for now as those will be the most likely users.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>

diff --git a/include/uapi/linux/iio/types.h b/include/uapi/linux/iio/types.h
index 5c4601935005..2f8b11722204 100644
--- a/include/uapi/linux/iio/types.h
+++ b/include/uapi/linux/iio/types.h
@@ -70,6 +70,8 @@ enum iio_modifier {
 	IIO_MOD_WALKING,
 	IIO_MOD_STILL,
 	IIO_MOD_ROOT_SUM_SQUARED_X_Y_Z,
+	IIO_MOD_I,
+	IIO_MOD_Q,
 };
 
 enum iio_event_type {

commit 293487c8ecc1103f4625cea5e90e1ba0cc89660f
Author: Daniel Baluta <daniel.baluta@intel.com>
Date:   Tue Feb 10 18:33:51 2015 +0200

    iio: Export userspace IIO headers
    
    After UAPI header file split [1] all user-kernel interfaces were
    placed under include/uapi/.
    
    This patch moves IIO user specific API from:
            * include/linux/iio/events.h => include/uapi/linux/iio/events.h
            * include/linux/types.h => include/uapi/linux/types.h
    
    Now there is no need for nasty tricks to compile userspace programs
    (e.g iio_event_monitor). Just installing the kernel headers with
    make headers_install command does the job.
    
    [1] http://lwn.net/Articles/507794/
    
    Signed-off-by: Daniel Baluta <daniel.baluta@intel.com>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>

diff --git a/include/uapi/linux/iio/types.h b/include/uapi/linux/iio/types.h
new file mode 100644
index 000000000000..5c4601935005
--- /dev/null
+++ b/include/uapi/linux/iio/types.h
@@ -0,0 +1,92 @@
+/* industrial I/O data types needed both in and out of kernel
+ *
+ * Copyright (c) 2008 Jonathan Cameron
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License version 2 as published by
+ * the Free Software Foundation.
+ */
+
+#ifndef _UAPI_IIO_TYPES_H_
+#define _UAPI_IIO_TYPES_H_
+
+enum iio_chan_type {
+	IIO_VOLTAGE,
+	IIO_CURRENT,
+	IIO_POWER,
+	IIO_ACCEL,
+	IIO_ANGL_VEL,
+	IIO_MAGN,
+	IIO_LIGHT,
+	IIO_INTENSITY,
+	IIO_PROXIMITY,
+	IIO_TEMP,
+	IIO_INCLI,
+	IIO_ROT,
+	IIO_ANGL,
+	IIO_TIMESTAMP,
+	IIO_CAPACITANCE,
+	IIO_ALTVOLTAGE,
+	IIO_CCT,
+	IIO_PRESSURE,
+	IIO_HUMIDITYRELATIVE,
+	IIO_ACTIVITY,
+	IIO_STEPS,
+	IIO_ENERGY,
+	IIO_DISTANCE,
+	IIO_VELOCITY,
+};
+
+enum iio_modifier {
+	IIO_NO_MOD,
+	IIO_MOD_X,
+	IIO_MOD_Y,
+	IIO_MOD_Z,
+	IIO_MOD_X_AND_Y,
+	IIO_MOD_X_AND_Z,
+	IIO_MOD_Y_AND_Z,
+	IIO_MOD_X_AND_Y_AND_Z,
+	IIO_MOD_X_OR_Y,
+	IIO_MOD_X_OR_Z,
+	IIO_MOD_Y_OR_Z,
+	IIO_MOD_X_OR_Y_OR_Z,
+	IIO_MOD_LIGHT_BOTH,
+	IIO_MOD_LIGHT_IR,
+	IIO_MOD_ROOT_SUM_SQUARED_X_Y,
+	IIO_MOD_SUM_SQUARED_X_Y_Z,
+	IIO_MOD_LIGHT_CLEAR,
+	IIO_MOD_LIGHT_RED,
+	IIO_MOD_LIGHT_GREEN,
+	IIO_MOD_LIGHT_BLUE,
+	IIO_MOD_QUATERNION,
+	IIO_MOD_TEMP_AMBIENT,
+	IIO_MOD_TEMP_OBJECT,
+	IIO_MOD_NORTH_MAGN,
+	IIO_MOD_NORTH_TRUE,
+	IIO_MOD_NORTH_MAGN_TILT_COMP,
+	IIO_MOD_NORTH_TRUE_TILT_COMP,
+	IIO_MOD_RUNNING,
+	IIO_MOD_JOGGING,
+	IIO_MOD_WALKING,
+	IIO_MOD_STILL,
+	IIO_MOD_ROOT_SUM_SQUARED_X_Y_Z,
+};
+
+enum iio_event_type {
+	IIO_EV_TYPE_THRESH,
+	IIO_EV_TYPE_MAG,
+	IIO_EV_TYPE_ROC,
+	IIO_EV_TYPE_THRESH_ADAPTIVE,
+	IIO_EV_TYPE_MAG_ADAPTIVE,
+	IIO_EV_TYPE_CHANGE,
+};
+
+enum iio_event_direction {
+	IIO_EV_DIR_EITHER,
+	IIO_EV_DIR_RISING,
+	IIO_EV_DIR_FALLING,
+	IIO_EV_DIR_NONE,
+};
+
+#endif /* _UAPI_IIO_TYPES_H_ */
+
