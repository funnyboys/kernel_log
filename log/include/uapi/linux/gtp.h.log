commit 6f52b16c5b29b89d92c0e7236f4655dc8491ad70
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Nov 1 15:08:43 2017 +0100

    License cleanup: add SPDX license identifier to uapi header files with no license
    
    Many user space API headers are missing licensing information, which
    makes it hard for compliance tools to determine the correct license.
    
    By default are files without license information under the default
    license of the kernel, which is GPLV2.  Marking them GPLV2 would exclude
    them from being included in non GPLV2 code, which is obviously not
    intended. The user space API headers fall under the syscall exception
    which is in the kernels COPYING file:
    
       NOTE! This copyright does *not* cover user programs that use kernel
       services by normal system calls - this is merely considered normal use
       of the kernel, and does *not* fall under the heading of "derived work".
    
    otherwise syscall usage would not be possible.
    
    Update the files which contain no license information with an SPDX
    license identifier.  The chosen identifier is 'GPL-2.0 WITH
    Linux-syscall-note' which is the officially assigned identifier for the
    Linux syscall exception.  SPDX license identifiers are a legally binding
    shorthand, which can be used instead of the full boiler plate text.
    
    This patch is based on work done by Thomas Gleixner and Kate Stewart and
    Philippe Ombredanne.  See the previous patch in this series for the
    methodology of how this patch was researched.
    
    Reviewed-by: Kate Stewart <kstewart@linuxfoundation.org>
    Reviewed-by: Philippe Ombredanne <pombredanne@nexb.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/include/uapi/linux/gtp.h b/include/uapi/linux/gtp.h
index 57d1edb8efd9..c7d66755d212 100644
--- a/include/uapi/linux/gtp.h
+++ b/include/uapi/linux/gtp.h
@@ -1,3 +1,4 @@
+/* SPDX-License-Identifier: GPL-2.0 WITH Linux-syscall-note */
 #ifndef _UAPI_LINUX_GTP_H_
 #define _UAPI_LINUX_GTP_H_
 

commit ae6336b57ede8cdf801b04e6d943617bb945e3f9
Author: Jonas Bonn <jonas@southpole.se>
Date:   Fri Mar 24 23:23:20 2017 +0100

    gtp: rename SGSN netlink attribute
    
    This is a mostly cosmetic rename of the SGSN netlink attribute to
    the GTP link.  The justification for this is that we will be making
    the module support decapsulation of "downstream" SGSN packets, in
    which case the netlink parameter actually refers to the upstream GGSN
    peer.  Renaming the parameter makes the relationship clearer.
    
    The legacy name is maintained as a define in the header file in order
    to not break existing code.
    
    Signed-off-by: Jonas Bonn <jonas@southpole.se>
    Acked-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Acked-by: Harald Welte <laforge@gnumonks.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/include/uapi/linux/gtp.h b/include/uapi/linux/gtp.h
index 72a04a0e8cce..57d1edb8efd9 100644
--- a/include/uapi/linux/gtp.h
+++ b/include/uapi/linux/gtp.h
@@ -19,7 +19,8 @@ enum gtp_attrs {
 	GTPA_LINK,
 	GTPA_VERSION,
 	GTPA_TID,	/* for GTPv0 only */
-	GTPA_SGSN_ADDRESS,
+	GTPA_PEER_ADDRESS,	/* Remote GSN peer, either SGSN or GGSN */
+#define GTPA_SGSN_ADDRESS GTPA_PEER_ADDRESS /* maintain legacy attr name */
 	GTPA_MS_ADDRESS,
 	GTPA_FLOW,
 	GTPA_NET_NS_FD,

commit 7b01b8e847d00cf9cf0c2c3aa8fdfc4126dca024
Author: Colin Ian King <colin.king@canonical.com>
Date:   Mon Jun 6 16:08:41 2016 +0100

    gtp: #define _UAPI_LINUX_GTP_H_ and not _UAPI_LINUX_GTP_H__
    
    Fix clang build warning:
    
    ./include/uapi/linux/gtp.h:1:9: warning: '_UAPI_LINUX_GTP_H_' is
    used as a header guard here, followed by #define of a different
    macro [-Wheader-guard]
    
    fix by defining  _UAPI_LINUX_GTP_H_ and not _UAPI_LINUX_GTP_H__
    
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Acked-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/include/uapi/linux/gtp.h b/include/uapi/linux/gtp.h
index ca1054dd8249..72a04a0e8cce 100644
--- a/include/uapi/linux/gtp.h
+++ b/include/uapi/linux/gtp.h
@@ -1,5 +1,5 @@
 #ifndef _UAPI_LINUX_GTP_H_
-#define _UAPI_LINUX_GTP_H__
+#define _UAPI_LINUX_GTP_H_
 
 enum gtp_genl_cmds {
 	GTP_CMD_NEWPDP,

commit 459aa660eb1d8ce67080da1983bb81d716aa5a69
Author: Pablo Neira <pablo@netfilter.org>
Date:   Mon May 9 00:55:48 2016 +0200

    gtp: add initial driver for datapath of GPRS Tunneling Protocol (GTP-U)
    
    This is an initial implementation of a netdev driver for GTP datapath
    (GTP-U) v0 and v1, according to the GSM TS 09.60 and 3GPP TS 29.060
    standards. This tunneling protocol is used to prevent subscribers from
    accessing mobile carrier core network infrastructure.
    
    This implementation requires a GGSN userspace daemon that implements the
    signaling protocol (GTP-C), such as OpenGGSN [1]. This userspace daemon
    updates the PDP context database that represents active subscriber
    sessions through a genetlink interface.
    
    For more context on this tunneling protocol, you can check the slides
    that were presented during the NetDev 1.1 [2].
    
    Only IPv4 is supported at this time.
    
    [1] http://git.osmocom.org/openggsn/
    [2] http://www.netdevconf.org/1.1/proceedings/slides/schultz-welte-osmocom-gtp.pdf
    
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/include/uapi/linux/gtp.h b/include/uapi/linux/gtp.h
new file mode 100644
index 000000000000..ca1054dd8249
--- /dev/null
+++ b/include/uapi/linux/gtp.h
@@ -0,0 +1,33 @@
+#ifndef _UAPI_LINUX_GTP_H_
+#define _UAPI_LINUX_GTP_H__
+
+enum gtp_genl_cmds {
+	GTP_CMD_NEWPDP,
+	GTP_CMD_DELPDP,
+	GTP_CMD_GETPDP,
+
+	GTP_CMD_MAX,
+};
+
+enum gtp_version {
+	GTP_V0 = 0,
+	GTP_V1,
+};
+
+enum gtp_attrs {
+	GTPA_UNSPEC = 0,
+	GTPA_LINK,
+	GTPA_VERSION,
+	GTPA_TID,	/* for GTPv0 only */
+	GTPA_SGSN_ADDRESS,
+	GTPA_MS_ADDRESS,
+	GTPA_FLOW,
+	GTPA_NET_NS_FD,
+	GTPA_I_TEI,	/* for GTPv1 only */
+	GTPA_O_TEI,	/* for GTPv1 only */
+	GTPA_PAD,
+	__GTPA_MAX,
+};
+#define GTPA_MAX (__GTPA_MAX + 1)
+
+#endif /* _UAPI_LINUX_GTP_H_ */
