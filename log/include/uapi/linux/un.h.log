commit 6f52b16c5b29b89d92c0e7236f4655dc8491ad70
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Nov 1 15:08:43 2017 +0100

    License cleanup: add SPDX license identifier to uapi header files with no license
    
    Many user space API headers are missing licensing information, which
    makes it hard for compliance tools to determine the correct license.
    
    By default are files without license information under the default
    license of the kernel, which is GPLV2.  Marking them GPLV2 would exclude
    them from being included in non GPLV2 code, which is obviously not
    intended. The user space API headers fall under the syscall exception
    which is in the kernels COPYING file:
    
       NOTE! This copyright does *not* cover user programs that use kernel
       services by normal system calls - this is merely considered normal use
       of the kernel, and does *not* fall under the heading of "derived work".
    
    otherwise syscall usage would not be possible.
    
    Update the files which contain no license information with an SPDX
    license identifier.  The chosen identifier is 'GPL-2.0 WITH
    Linux-syscall-note' which is the officially assigned identifier for the
    Linux syscall exception.  SPDX license identifiers are a legally binding
    shorthand, which can be used instead of the full boiler plate text.
    
    This patch is based on work done by Thomas Gleixner and Kate Stewart and
    Philippe Ombredanne.  See the previous patch in this series for the
    methodology of how this patch was researched.
    
    Reviewed-by: Kate Stewart <kstewart@linuxfoundation.org>
    Reviewed-by: Philippe Ombredanne <pombredanne@nexb.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/include/uapi/linux/un.h b/include/uapi/linux/un.h
index 4f0ab3a548ad..0ad59dc8b686 100644
--- a/include/uapi/linux/un.h
+++ b/include/uapi/linux/un.h
@@ -1,3 +1,4 @@
+/* SPDX-License-Identifier: GPL-2.0 WITH Linux-syscall-note */
 #ifndef _LINUX_UN_H
 #define _LINUX_UN_H
 

commit ba94f3088b792b16ea576a256a6030feddc87f24
Author: Andrey Vagin <avagin@openvz.org>
Date:   Wed Feb 1 11:00:45 2017 -0800

    unix: add ioctl to open a unix socket file with O_PATH
    
    This ioctl opens a file to which a socket is bound and
    returns a file descriptor. The caller has to have CAP_NET_ADMIN
    in the socket network namespace.
    
    Currently it is impossible to get a path and a mount point
    for a socket file. socket_diag reports address, device ID and inode
    number for unix sockets. An address can contain a relative path or
    a file may be moved somewhere. And these properties say nothing about
    a mount namespace and a mount point of a socket file.
    
    With the introduced ioctl, we can get a path by reading
    /proc/self/fd/X and get mnt_id from /proc/self/fdinfo/X.
    
    In CRIU we are going to use this ioctl to dump and restore unix socket.
    
    Here is an example how it can be used:
    
    $ strace -e socket,bind,ioctl ./test /tmp/test_sock
    socket(AF_UNIX, SOCK_STREAM, 0)         = 3
    bind(3, {sa_family=AF_UNIX, sun_path="test_sock"}, 11) = 0
    ioctl(3, SIOCUNIXFILE, 0)           = 4
    ^Z
    
    $ ss -a | grep test_sock
    u_str  LISTEN     0      1      test_sock 17798                 * 0
    
    $ ls -l /proc/760/fd/{3,4}
    lrwx------ 1 root root 64 Feb  1 09:41 3 -> 'socket:[17798]'
    l--------- 1 root root 64 Feb  1 09:41 4 -> /tmp/test_sock
    
    $ cat /proc/760/fdinfo/4
    pos:    0
    flags:  012000000
    mnt_id: 40
    
    $ cat /proc/self/mountinfo | grep "^40\s"
    40 19 0:37 / /tmp rw shared:23 - tmpfs tmpfs rw
    
    Signed-off-by: Andrei Vagin <avagin@openvz.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/include/uapi/linux/un.h b/include/uapi/linux/un.h
index 3ed3e46c1b1f..4f0ab3a548ad 100644
--- a/include/uapi/linux/un.h
+++ b/include/uapi/linux/un.h
@@ -10,4 +10,6 @@ struct sockaddr_un {
 	char sun_path[UNIX_PATH_MAX];	/* pathname */
 };
 
+#define SIOCUNIXFILE (SIOCPROTOPRIVATE + 0) /* open a socket file with O_PATH */
+
 #endif /* _LINUX_UN_H */

commit 607ca46e97a1b6594b29647d98a32d545c24bdff
Author: David Howells <dhowells@redhat.com>
Date:   Sat Oct 13 10:46:48 2012 +0100

    UAPI: (Scripted) Disintegrate include/linux
    
    Signed-off-by: David Howells <dhowells@redhat.com>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Michael Kerrisk <mtk.manpages@gmail.com>
    Acked-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Acked-by: Dave Jones <davej@redhat.com>

diff --git a/include/uapi/linux/un.h b/include/uapi/linux/un.h
new file mode 100644
index 000000000000..3ed3e46c1b1f
--- /dev/null
+++ b/include/uapi/linux/un.h
@@ -0,0 +1,13 @@
+#ifndef _LINUX_UN_H
+#define _LINUX_UN_H
+
+#include <linux/socket.h>
+
+#define UNIX_PATH_MAX	108
+
+struct sockaddr_un {
+	__kernel_sa_family_t sun_family; /* AF_UNIX */
+	char sun_path[UNIX_PATH_MAX];	/* pathname */
+};
+
+#endif /* _LINUX_UN_H */
