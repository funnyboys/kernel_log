commit 015d239ac0142ad0e26567fd890ef8d171f13709
Author: Kenneth Lee <liguozhu@hisilicon.com>
Date:   Tue Feb 11 15:54:23 2020 +0800

    uacce: add uacce driver
    
    Uacce (Unified/User-space-access-intended Accelerator Framework) targets to
    provide Shared Virtual Addressing (SVA) between accelerators and processes.
    So accelerator can access any data structure of the main cpu.
    This differs from the data sharing between cpu and io device, which share
    only data content rather than address.
    Since unified address, hardware and user space of process can share the
    same virtual address in the communication.
    
    Uacce create a chrdev for every registration, the queue is allocated to
    the process when the chrdev is opened. Then the process can access the
    hardware resource by interact with the queue file. By mmap the queue
    file space to user space, the process can directly put requests to the
    hardware without syscall to the kernel space.
    
    The IOMMU core only tracks mm<->device bonds at the moment, because it
    only needs to handle IOTLB invalidation and PASID table entries. However
    uacce needs a finer granularity since multiple queues from the same
    device can be bound to an mm. When the mm exits, all bound queues must
    be stopped so that the IOMMU can safely clear the PASID table entry and
    reallocate the PASID.
    
    An intermediate struct uacce_mm links uacce devices and queues.
    Note that an mm may be bound to multiple devices but an uacce_mm
    structure only ever belongs to a single device, because we don't need
    anything more complex (if multiple devices are bound to one mm, then
    we'll create one uacce_mm for each bond).
    
            uacce_device --+-- uacce_mm --+-- uacce_queue
                           |              '-- uacce_queue
                           |
                           '-- uacce_mm --+-- uacce_queue
                                          +-- uacce_queue
                                          '-- uacce_queue
    
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Kenneth Lee <liguozhu@hisilicon.com>
    Signed-off-by: Zaibo Xu <xuzaibo@huawei.com>
    Signed-off-by: Zhou Wang <wangzhou1@hisilicon.com>
    Signed-off-by: Jean-Philippe Brucker <jean-philippe@linaro.org>
    Signed-off-by: Zhangfei Gao <zhangfei.gao@linaro.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>

diff --git a/include/uapi/misc/uacce/uacce.h b/include/uapi/misc/uacce/uacce.h
new file mode 100644
index 000000000000..cc7185678f47
--- /dev/null
+++ b/include/uapi/misc/uacce/uacce.h
@@ -0,0 +1,38 @@
+/* SPDX-License-Identifier: GPL-2.0+ WITH Linux-syscall-note */
+#ifndef _UAPIUUACCE_H
+#define _UAPIUUACCE_H
+
+#include <linux/types.h>
+#include <linux/ioctl.h>
+
+/*
+ * UACCE_CMD_START_Q: Start queue
+ */
+#define UACCE_CMD_START_Q	_IO('W', 0)
+
+/*
+ * UACCE_CMD_PUT_Q:
+ * User actively stop queue and free queue resource immediately
+ * Optimization method since close fd may delay
+ */
+#define UACCE_CMD_PUT_Q		_IO('W', 1)
+
+/*
+ * UACCE Device flags:
+ * UACCE_DEV_SVA: Shared Virtual Addresses
+ *		  Support PASID
+ *		  Support device page faults (PCI PRI or SMMU Stall)
+ */
+#define UACCE_DEV_SVA		BIT(0)
+
+/**
+ * enum uacce_qfrt: queue file region type
+ * @UACCE_QFRT_MMIO: device mmio region
+ * @UACCE_QFRT_DUS: device user share region
+ */
+enum uacce_qfrt {
+	UACCE_QFRT_MMIO = 0,
+	UACCE_QFRT_DUS = 1,
+};
+
+#endif
