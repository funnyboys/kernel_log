commit f1ff9be7652b716c7eea67c9ca795027d911f148
Author: Christina Quast <cquast@hanoverdisplays.com>
Date:   Mon Apr 8 10:01:51 2019 -0700

    ARM: dts: am33xx: Added AM33XX_PADCONF macro
    
    AM33XX_PADCONF takes three instead of two parameters, to make
    future changes to #pinctrl-cells easier.
    
    For old boards which are not mainlined, we left the AM33XX_IOPAD
    macro.
    
    Signed-off-by: Christina Quast <cquast@hanoverdisplays.com>
    Reviewed-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Tony Lindgren <tony@atomide.com>

diff --git a/include/dt-bindings/pinctrl/omap.h b/include/dt-bindings/pinctrl/omap.h
index 49b5dea2b388..625718042413 100644
--- a/include/dt-bindings/pinctrl/omap.h
+++ b/include/dt-bindings/pinctrl/omap.h
@@ -65,6 +65,7 @@
 #define DM814X_IOPAD(pa, val)		OMAP_IOPAD_OFFSET((pa), 0x0800) (val)
 #define DM816X_IOPAD(pa, val)		OMAP_IOPAD_OFFSET((pa), 0x0800) (val)
 #define AM33XX_IOPAD(pa, val)		OMAP_IOPAD_OFFSET((pa), 0x0800) (val)
+#define AM33XX_PADCONF(pa, dir, mux)	OMAP_IOPAD_OFFSET((pa), 0x0800) ((dir) | (mux))
 
 /*
  * Macros to allow using the offset from the padconf physical address

commit b24413180f5600bcb3bb70fbed5cf186b60864bd
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Nov 1 15:07:57 2017 +0100

    License cleanup: add SPDX GPL-2.0 license identifier to files with no license
    
    Many source files in the tree are missing licensing information, which
    makes it harder for compliance tools to determine the correct license.
    
    By default all files without license information are under the default
    license of the kernel, which is GPL version 2.
    
    Update the files which contain no license information with the 'GPL-2.0'
    SPDX license identifier.  The SPDX identifier is a legally binding
    shorthand, which can be used instead of the full boiler plate text.
    
    This patch is based on work done by Thomas Gleixner and Kate Stewart and
    Philippe Ombredanne.
    
    How this work was done:
    
    Patches were generated and checked against linux-4.14-rc6 for a subset of
    the use cases:
     - file had no licensing information it it.
     - file was a */uapi/* one with no licensing information in it,
     - file was a */uapi/* one with existing licensing information,
    
    Further patches will be generated in subsequent months to fix up cases
    where non-standard license headers were used, and references to license
    had to be inferred by heuristics based on keywords.
    
    The analysis to determine which SPDX License Identifier to be applied to
    a file was done in a spreadsheet of side by side results from of the
    output of two independent scanners (ScanCode & Windriver) producing SPDX
    tag:value files created by Philippe Ombredanne.  Philippe prepared the
    base worksheet, and did an initial spot review of a few 1000 files.
    
    The 4.13 kernel was the starting point of the analysis with 60,537 files
    assessed.  Kate Stewart did a file by file comparison of the scanner
    results in the spreadsheet to determine which SPDX license identifier(s)
    to be applied to the file. She confirmed any determination that was not
    immediately clear with lawyers working with the Linux Foundation.
    
    Criteria used to select files for SPDX license identifier tagging was:
     - Files considered eligible had to be source code files.
     - Make and config files were included as candidates if they contained >5
       lines of source
     - File already had some variant of a license header in it (even if <5
       lines).
    
    All documentation files were explicitly excluded.
    
    The following heuristics were used to determine which SPDX license
    identifiers to apply.
    
     - when both scanners couldn't find any license traces, file was
       considered to have no license information in it, and the top level
       COPYING file license applied.
    
       For non */uapi/* files that summary was:
    
       SPDX license identifier                            # files
       ---------------------------------------------------|-------
       GPL-2.0                                              11139
    
       and resulted in the first patch in this series.
    
       If that file was a */uapi/* path one, it was "GPL-2.0 WITH
       Linux-syscall-note" otherwise it was "GPL-2.0".  Results of that was:
    
       SPDX license identifier                            # files
       ---------------------------------------------------|-------
       GPL-2.0 WITH Linux-syscall-note                        930
    
       and resulted in the second patch in this series.
    
     - if a file had some form of licensing information in it, and was one
       of the */uapi/* ones, it was denoted with the Linux-syscall-note if
       any GPL family license was found in the file or had no licensing in
       it (per prior point).  Results summary:
    
       SPDX license identifier                            # files
       ---------------------------------------------------|------
       GPL-2.0 WITH Linux-syscall-note                       270
       GPL-2.0+ WITH Linux-syscall-note                      169
       ((GPL-2.0 WITH Linux-syscall-note) OR BSD-2-Clause)    21
       ((GPL-2.0 WITH Linux-syscall-note) OR BSD-3-Clause)    17
       LGPL-2.1+ WITH Linux-syscall-note                      15
       GPL-1.0+ WITH Linux-syscall-note                       14
       ((GPL-2.0+ WITH Linux-syscall-note) OR BSD-3-Clause)    5
       LGPL-2.0+ WITH Linux-syscall-note                       4
       LGPL-2.1 WITH Linux-syscall-note                        3
       ((GPL-2.0 WITH Linux-syscall-note) OR MIT)              3
       ((GPL-2.0 WITH Linux-syscall-note) AND MIT)             1
    
       and that resulted in the third patch in this series.
    
     - when the two scanners agreed on the detected license(s), that became
       the concluded license(s).
    
     - when there was disagreement between the two scanners (one detected a
       license but the other didn't, or they both detected different
       licenses) a manual inspection of the file occurred.
    
     - In most cases a manual inspection of the information in the file
       resulted in a clear resolution of the license that should apply (and
       which scanner probably needed to revisit its heuristics).
    
     - When it was not immediately clear, the license identifier was
       confirmed with lawyers working with the Linux Foundation.
    
     - If there was any question as to the appropriate license identifier,
       the file was flagged for further research and to be revisited later
       in time.
    
    In total, over 70 hours of logged manual review was done on the
    spreadsheet to determine the SPDX license identifiers to apply to the
    source files by Kate, Philippe, Thomas and, in some cases, confirmation
    by lawyers working with the Linux Foundation.
    
    Kate also obtained a third independent scan of the 4.13 code base from
    FOSSology, and compared selected files where the other two scanners
    disagreed against that SPDX file, to see if there was new insights.  The
    Windriver scanner is based on an older version of FOSSology in part, so
    they are related.
    
    Thomas did random spot checks in about 500 files from the spreadsheets
    for the uapi headers and agreed with SPDX license identifier in the
    files he inspected. For the non-uapi files Thomas did random spot checks
    in about 15000 files.
    
    In initial set of patches against 4.14-rc6, 3 files were found to have
    copy/paste license identifier errors, and have been fixed to reflect the
    correct identifier.
    
    Additionally Philippe spent 10 hours this week doing a detailed manual
    inspection and review of the 12,461 patched files from the initial patch
    version early this week with:
     - a full scancode scan run, collecting the matched texts, detected
       license ids and scores
     - reviewing anything where there was a license detected (about 500+
       files) to ensure that the applied SPDX license was correct
     - reviewing anything where there was no detection but the patch license
       was not GPL-2.0 WITH Linux-syscall-note to ensure that the applied
       SPDX license was correct
    
    This produced a worksheet with 20 files needing minor correction.  This
    worksheet was then exported into 3 different .csv files for the
    different types of files to be modified.
    
    These .csv files were then reviewed by Greg.  Thomas wrote a script to
    parse the csv files and add the proper SPDX tag to the file, in the
    format that the file expected.  This script was further refined by Greg
    based on the output to detect more types of files automatically and to
    distinguish between header and source .c files (which need different
    comment types.)  Finally Greg ran the script using the .csv files to
    generate the patches.
    
    Reviewed-by: Kate Stewart <kstewart@linuxfoundation.org>
    Reviewed-by: Philippe Ombredanne <pombredanne@nexb.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/include/dt-bindings/pinctrl/omap.h b/include/dt-bindings/pinctrl/omap.h
index fbd6f7202476..49b5dea2b388 100644
--- a/include/dt-bindings/pinctrl/omap.h
+++ b/include/dt-bindings/pinctrl/omap.h
@@ -1,3 +1,4 @@
+/* SPDX-License-Identifier: GPL-2.0 */
 /*
  * This header provides constants for OMAP pinctrl bindings.
  *

commit d97556c8012015901a3ce77f46960078139cd79d
Author: Tony Lindgren <tony@atomide.com>
Date:   Thu Jan 5 11:07:18 2017 -0800

    ARM: dts: Fix omap3 off mode pull defines
    
    We need to also have OFFPULLUDENABLE bit set to use the off mode pull values.
    Otherwise the line is pulled down internally if no external pull exists.
    
    This is has some documentation at:
    
    http://processors.wiki.ti.com/index.php/Optimizing_OMAP35x_and_AM/DM37x_OFF_mode_PAD_configuration
    
    Note that the value is still glitchy during off mode transitions as documented
    in spz319f.pdf "Advisory 1.45". It's best to use external pulls instead of
    relying on the internal ones for off mode and even then anything pulled up
    will get driven down momentarily on off mode restore for GPIO banks other
    than bank1.
    
    Signed-off-by: Tony Lindgren <tony@atomide.com>

diff --git a/include/dt-bindings/pinctrl/omap.h b/include/dt-bindings/pinctrl/omap.h
index effadd05695b..fbd6f7202476 100644
--- a/include/dt-bindings/pinctrl/omap.h
+++ b/include/dt-bindings/pinctrl/omap.h
@@ -45,8 +45,8 @@
 #define PIN_OFF_NONE		0
 #define PIN_OFF_OUTPUT_HIGH	(OFF_EN | OFFOUT_EN | OFFOUT_VAL)
 #define PIN_OFF_OUTPUT_LOW	(OFF_EN | OFFOUT_EN)
-#define PIN_OFF_INPUT_PULLUP	(OFF_EN | OFF_PULL_EN | OFF_PULL_UP)
-#define PIN_OFF_INPUT_PULLDOWN	(OFF_EN | OFF_PULL_EN)
+#define PIN_OFF_INPUT_PULLUP	(OFF_EN | OFFOUT_EN | OFF_PULL_EN | OFF_PULL_UP)
+#define PIN_OFF_INPUT_PULLDOWN	(OFF_EN | OFFOUT_EN | OFF_PULL_EN)
 #define PIN_OFF_WAKEUPENABLE	WAKEUP_EN
 
 /*

commit d4e68fa37f73b7f8ccfd5929002b621a75725bb9
Merge: cad008b8a77e 43fe6de38ea5
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Dec 31 16:25:22 2015 +0100

    Merge tag 'omap-for-v4.5/81xx-dts-signed' of git://git.kernel.org/pub/scm/linux/kernel/git/tmlind/linux-omap into next/dt
    
    Pull "reworked dts changes for ti81xx devices and minimal
    dra62x j5ec-evm support" from Tony Lindgren:
    
    Add minimal device tree support for dra62x also known j5eco. It is
    related to dm814x, just the clocks are a bit different and it has a
    different set of integrated devices. And let's get some basic dm814x
    and dra62x devices working as many of the devices are like on am33xx::
    
    - pinctrl using the pinctrl defines as for am33xx
    
    - Updated EDMA bindings with support for using exma_xbar
    
    - MMC support for dm814x-evm, t410 and dra62x-j5eco-evm
    
    - USB support for dm814x-evm, t410 and dra62x-j5eco-evm
    
    This branch depends on an earlier omap-for-v4.5/81xx-fixes-signed
    branch that has dm814x dts fixes interlaced with SoC related fixes to
    keep things booting. The interlaced SoC and dts fixes were needed
    because of issues with the device tree defined clocks that just
    happened to work on bootloader timings for t410 earlier.
    
    * tag 'omap-for-v4.5/81xx-dts-signed' of git://git.kernel.org/pub/scm/linux/kernel/git/tmlind/linux-omap: (21 commits)
      ARM: dts: Add usb support for j5-eco evm
      ARM: dts: Add usb support for hp t410
      ARM: dts: Add usb support for dm814x-evm
      ARM: dts: Add usb support for dm814x and dra62x
      ARM: dts: Enable emmc on hp t410
      ARM: dts: Add mmc support for dra62x j5-eco evm
      ARM: dts: Add mmc support for dm8148-evm
      ARM: dts: Add mmc device entries for dm814x
      ARM: dts: Update edma bindings on dm814x to use edma_xbar
      ARM: dts: Add pinctrl macros for dm814x
      ARM: dts: Add minimal dra62x j5-eco evm support
      ARM: dts: Add basic support for dra62x j5-eco SoC
      ARM: OMAP2+: Remove useless check for legacy booting for dm814x
      ARM: OMAP2+: Enable GPIO for dm814x
      ARM: dts: Fix dm814x pinctrl address and mask
      ARM: dts: Fix dm8148 control modules ranges
      ARM: OMAP2+: Fix timer entries for dm814x
      ARM: dts: Fix some mux and divider clocks to get dm814x-evm booting
      ARM: OMAP2+: Add DPPLS clock manager for dm814x
      clk: ti: Add few dm814x clock aliases
      ...

commit b4d6df2a2324dbf567592d7995738950b5c325a5
Author: Tony Lindgren <tony@atomide.com>
Date:   Tue Dec 22 16:00:33 2015 -0800

    ARM: dts: Add pinctrl macros for dm814x
    
    Let's add the DM814X_IOPAD macro the same way as we have for dm816x and
    am33xx as this allows comparing the registers with the documentation easily.
    The pinctrl bits are yet again different on dm814x.
    
    Cc: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Tony Lindgren <tony@atomide.com>

diff --git a/include/dt-bindings/pinctrl/omap.h b/include/dt-bindings/pinctrl/omap.h
index 13949259705a..d1e1512ac0f1 100644
--- a/include/dt-bindings/pinctrl/omap.h
+++ b/include/dt-bindings/pinctrl/omap.h
@@ -61,6 +61,7 @@
 #define OMAP3430_CORE2_IOPAD(pa, val)	OMAP_IOPAD_OFFSET((pa), 0x25d8) (val)
 #define OMAP3630_CORE2_IOPAD(pa, val)	OMAP_IOPAD_OFFSET((pa), 0x25a0) (val)
 #define OMAP3_WKUP_IOPAD(pa, val)	OMAP_IOPAD_OFFSET((pa), 0x2a00) (val)
+#define DM814X_IOPAD(pa, val)		OMAP_IOPAD_OFFSET((pa), 0x0800) (val)
 #define DM816X_IOPAD(pa, val)		OMAP_IOPAD_OFFSET((pa), 0x0800) (val)
 #define AM33XX_IOPAD(pa, val)		OMAP_IOPAD_OFFSET((pa), 0x0800) (val)
 #define AM4372_IOPAD(pa, val)		OMAP_IOPAD_OFFSET((pa), 0x0800) (val)

commit fc63efdf4bbcc23968bc71cfbc7dedf56c5ff01e
Author: Javier Martinez Canillas <javier@osg.samsung.com>
Date:   Fri Nov 13 01:53:39 2015 -0300

    pinctrl: Move am4372 and dra7 macros to the the SoC header files
    
    The <dt-bindings/pinctrl/omap.h> header file defines a set of macros
    for different SoCs families that falls under the OMAP sub-arch, that
    allow to define the padconf register physical address instead of the
    register offset from the padconf base.
    
    But the am43xx and dra7xx SoCs families have their own pinctrl header
    file so the DTS using these SoCs aren't able to use the AM4372_IOPAD()
    and DRA7XX_CORE_IOPAD() macros since <dt-bindings/pinctrl/omap.h> is
    not included.
    
    Move the macros to the correct header files so can be used by the DTS.
    
    Signed-off-by: Javier Martinez Canillas <javier@osg.samsung.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>

diff --git a/include/dt-bindings/pinctrl/omap.h b/include/dt-bindings/pinctrl/omap.h
index 13949259705a..8100de13851c 100644
--- a/include/dt-bindings/pinctrl/omap.h
+++ b/include/dt-bindings/pinctrl/omap.h
@@ -63,8 +63,6 @@
 #define OMAP3_WKUP_IOPAD(pa, val)	OMAP_IOPAD_OFFSET((pa), 0x2a00) (val)
 #define DM816X_IOPAD(pa, val)		OMAP_IOPAD_OFFSET((pa), 0x0800) (val)
 #define AM33XX_IOPAD(pa, val)		OMAP_IOPAD_OFFSET((pa), 0x0800) (val)
-#define AM4372_IOPAD(pa, val)		OMAP_IOPAD_OFFSET((pa), 0x0800) (val)
-#define DRA7XX_CORE_IOPAD(pa, val)	OMAP_IOPAD_OFFSET((pa), 0x3400) (val)
 
 /*
  * Macros to allow using the offset from the padconf physical address

commit ac7452cee7430ea507ddf70700de56482f15dae3
Author: Tony Lindgren <tony@atomide.com>
Date:   Mon Jan 19 11:47:35 2015 -0800

    ARM: dts: Add minimal support for dm8168-evm
    
    This allows booting the device with basic functionality.
    
    Note that at least on my revision c board the DDR3 does
    not seem to work properly and only some of the memory
    can be reliably used.
    
    Also, the mainline u-boot does not seem to properly
    initialize the ethernet, so I've been using the old TI
    u-boot at:
    
    http://arago-project.org/git/projects/?p=u-boot-omap3.git;a=summary
    
    Cc: Brian Hutchinson <b.hutchman@gmail.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>

diff --git a/include/dt-bindings/pinctrl/omap.h b/include/dt-bindings/pinctrl/omap.h
index 1c75b8ca5228..13949259705a 100644
--- a/include/dt-bindings/pinctrl/omap.h
+++ b/include/dt-bindings/pinctrl/omap.h
@@ -61,6 +61,7 @@
 #define OMAP3430_CORE2_IOPAD(pa, val)	OMAP_IOPAD_OFFSET((pa), 0x25d8) (val)
 #define OMAP3630_CORE2_IOPAD(pa, val)	OMAP_IOPAD_OFFSET((pa), 0x25a0) (val)
 #define OMAP3_WKUP_IOPAD(pa, val)	OMAP_IOPAD_OFFSET((pa), 0x2a00) (val)
+#define DM816X_IOPAD(pa, val)		OMAP_IOPAD_OFFSET((pa), 0x0800) (val)
 #define AM33XX_IOPAD(pa, val)		OMAP_IOPAD_OFFSET((pa), 0x0800) (val)
 #define AM4372_IOPAD(pa, val)		OMAP_IOPAD_OFFSET((pa), 0x0800) (val)
 #define DRA7XX_CORE_IOPAD(pa, val)	OMAP_IOPAD_OFFSET((pa), 0x3400) (val)

commit 755a9ba7bf24a45b6dbf8bb15a5a56c8ed12461a
Merge: 7477838f2e48 0f16aa3c24a2
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Jun 2 16:34:00 2014 -0700

    Merge tag 'dt-for-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc into next
    
    Pull ARM SoC devicetree updates from Olof Johansson:
     "As with previous release, this continues to be among the largest
      branches we merge, with lots of new contents.
    
      New things for this release are among other things:
    
       - DTSI contents for the new SoCs supported in 3.16 (see SoC pull request)
       - Qualcomm APQ8064 and APQ8084 SoCs and eval boards
       - Nvidia Jetson TK1 development board (Tegra T124-based)
    
      Two new SoCs that didn't need enough new platform code to stand out
      enough for me to notice when writing the SoC tag, but that adds new DT
      contents are:
    
       - TI DRA72
       - Marvell Berlin 2Q"
    
    * tag 'dt-for-3.16' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc: (500 commits)
      ARM: dts: add secure firmware support for exynos5420-arndale-octa
      ARM: dts: add pmu sysreg node to exynos3250
      ARM: dts: correct the usb phy node in exynos5800-peach-pi
      ARM: dts: correct the usb phy node in exynos5420-peach-pit
      ARM: dts: add dts files for exynos5410 and exynos5410-smdk5410
      ARM: dts: add dts files for exynos3250 SoC
      ARM: dts: add mfc node for exynos5800
      ARM: dts: add Vbus regulator for USB 3.0 on exynos5800-peach-pi
      ARM: dts: enable fimd for exynos5800-peach-pi
      ARM: dts: enable display controller for exynos5800-peach-pi
      ARM: dts: enable hdmi for exynos5800-peach-pi
      ARM: dts: add dts file for exynos5800-peach-pi board
      ARM: dts: add dts file for exynos5800 SoC
      ARM: dts: add dts file for exynos5260-xyref5260 board
      ARM: dts: add dts files for exynos5260 SoC
      ARM: dts: update watchdog node name in exynos5440
      ARM: dts: use key code macros on Origen and Arndale boards
      ARM: dts: enable RTC and WDT nodes on Origen boards
      ARM: dts: qcom: Add APQ8084-MTP board support
      ARM: dts: qcom: Add APQ8084 SoC support
      ...

commit 4b466297f08d01e6bb3d2815a919e7e0b2975d9e
Author: Joachim Eastwood <manabian@gmail.com>
Date:   Mon May 12 20:16:27 2014 +0200

    ARM: dts: Change IOPAD macro's for OMAP4/5
    
    The OMAP4/5 TRMs primarily list address offsets from the padconf
    physical address (which is not driver base address) and not
    always the absolute physical address for padconf registers like
    some other OMAP TRMs. So create a new macro to use this offset
    and to avoid confusion between different OMAP parts.
    
    For more information, see the tables in TRM for named something like
    "Device Core Control Module Pad Configuration Register Fields"
    and "Device Wake-Up Control Module Pad Configuration Register Fields"
    
    Note that we now also have to update cm-t54 for the fixed up
    offsets.
    
    Signed-off-by: Joachim Eastwood <manabian@gmail.com>
    [tony@atomide.com: updated comments, updated cm-t54]
    Signed-off-by: Tony Lindgren <tony@atomide.com>

diff --git a/include/dt-bindings/pinctrl/omap.h b/include/dt-bindings/pinctrl/omap.h
index b04528cd033c..827e80964a35 100644
--- a/include/dt-bindings/pinctrl/omap.h
+++ b/include/dt-bindings/pinctrl/omap.h
@@ -62,12 +62,17 @@
 #define OMAP3630_CORE2_IOPAD(pa, val)	OMAP_IOPAD_OFFSET((pa), 0x25a0) (val)
 #define OMAP3_WKUP_IOPAD(pa, val)	OMAP_IOPAD_OFFSET((pa), 0x2a00) (val)
 #define AM33XX_IOPAD(pa, val)		OMAP_IOPAD_OFFSET((pa), 0x0800) (val)
-#define OMAP4_CORE_IOPAD(pa, val)	OMAP_IOPAD_OFFSET((pa), 0x0040) (val)
-#define OMAP4_WKUP_IOPAD(pa, val)	OMAP_IOPAD_OFFSET((pa), 0xe040) (val)
 #define AM4372_IOPAD(pa, val)		OMAP_IOPAD_OFFSET((pa), 0x0800) (val)
-#define OMAP5_CORE_IOPAD(pa, val)	OMAP_IOPAD_OFFSET((pa), 0x2840) (val)
-#define OMAP5_WKUP_IOPAD(pa, val)	OMAP_IOPAD_OFFSET((pa), 0xc840) (val)
 #define DRA7XX_CORE_IOPAD(pa, val)	OMAP_IOPAD_OFFSET((pa), 0x3400) (val)
 
+/*
+ * Macros to allow using the offset from the padconf physical address
+ * instead  of the offset from padconf base.
+ */
+#define OMAP_PADCONF_OFFSET(offset, base_offset)	((offset) - (base_offset))
+
+#define OMAP4_IOPAD(offset, val)	OMAP_PADCONF_OFFSET((offset), 0x0040) (val)
+#define OMAP5_IOPAD(offset, val)	OMAP_PADCONF_OFFSET((offset), 0x0040) (val)
+
 #endif
 

commit 31f0820a6709fd9f4e4208081f949f9036972e06
Author: Tony Lindgren <tony@atomide.com>
Date:   Mon May 5 17:27:39 2014 -0700

    ARM: dts: Fix omap serial wake-up when booted with device tree
    
    We've had deeper idle states working on omaps for few years now,
    but only in the legacy mode. When booted with device tree, the
    wake-up events did not have a chance to work until commit
    3e6cee1786a1 (pinctrl: single: Add support for wake-up interrupts)
    that recently got merged. In addition to that we also needed commit
    79d9701559a9 (of/irq: create interrupts-extended property) and
    9ec36cafe43b (of/irq: do irq resolution in platform_get_irq) that
    are now also merged.
    
    So let's fix the wake-up events for some selected omaps so devices
    booted in device tree mode won't just hang if deeper power states
    are enabled, and so systems can wake up from suspend to the serial
    port event.
    
    Note that there's no longer need to specify the wake-up bit in
    the pinctrl settings, the request_irq on the wake-up pin takes
    care of that.
    
    Cc: devicetree@vger.kernel.org
    Cc: "Benoît Cousson" <bcousson@baylibre.com>
    Cc: Kevin Hilman <khilman@linaro.org>
    Cc: Nishanth Menon <nm@ti.com>
    Cc: Paul Walmsley <paul@pwsan.com>
    Cc: Tero Kristo <t-kristo@ti.com>
    [tony@atomide.com: updated comments, added board LDP]
    Signed-off-by: Tony Lindgren <tony@atomide.com>

diff --git a/include/dt-bindings/pinctrl/omap.h b/include/dt-bindings/pinctrl/omap.h
index b04528cd033c..404ba7ef7813 100644
--- a/include/dt-bindings/pinctrl/omap.h
+++ b/include/dt-bindings/pinctrl/omap.h
@@ -69,5 +69,17 @@
 #define OMAP5_WKUP_IOPAD(pa, val)	OMAP_IOPAD_OFFSET((pa), 0xc840) (val)
 #define DRA7XX_CORE_IOPAD(pa, val)	OMAP_IOPAD_OFFSET((pa), 0x3400) (val)
 
+/*
+ * Define some commonly used pins configured by the boards.
+ * Note that some boards use alternative pins, so check
+ * the schematics before using these.
+ */
+#define OMAP3_UART1_RX		0x152
+#define OMAP3_UART2_RX		0x14a
+#define OMAP3_UART3_RX		0x16e
+#define OMAP4_UART2_RX		0xdc
+#define OMAP4_UART3_RX		0x104
+#define OMAP4_UART4_RX		0x11c
+
 #endif
 

commit 43a348ea53eb5fd791c41612ab5db973dad3001f
Author: Tony Lindgren <tony@atomide.com>
Date:   Tue Jan 7 14:01:38 2014 -0800

    ARM: dts: Add omap specific pinctrl defines to use padconf addresses
    
    As we have one to three pinctrl-single instances for each SoC it is
    a bit confusing to configure the padconf register offset from the
    base of the padconf register base.
    
    Let's add macros that allow using the physical address of the
    padconf register directly, or in most cases, just the last 16-bits
    of the address as they are shown in the documentation.
    
    Note that most documentation shows two padconf registers for each
    32-bit address, so adding 2 to the documentation address is needed for
    the second padconf register as we treat them as 16-bit registers
    for omap3+.
    
    For example, omap36xx documentation shows sdmmc2_clk at 0x48002158,
    so we can just use the last 16-bits of that value:
    
            pinctrl-single,pins = <
                    OMAP3_CORE1_IOPAD(0x2158, PIN_INPUT_PULLUP | MUX_MODE0)
                    ...
            >;
    
    And we don't need to separately calculate the offset from the 0x2030
    base:
    
            pinctrl-single,pins = <
                    0x128 (PIN_INPUT_PULLUP | MUX_MODE0)
                    ...
            >;
    
    Naturally both ways of defining the registers can be used, and I'm
    not saying we should replace all the existing defines. But it may
    be handy to use these macros for new entries and when doing other
    related .dts file clean-up.
    
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    [tony@atomide.com: updated for 3430 vs 3630 core2 range]
    Signed-off-by: Tony Lindgren <tony@atomide.com>

diff --git a/include/dt-bindings/pinctrl/omap.h b/include/dt-bindings/pinctrl/omap.h
index bed35e36fd27..b04528cd033c 100644
--- a/include/dt-bindings/pinctrl/omap.h
+++ b/include/dt-bindings/pinctrl/omap.h
@@ -49,5 +49,25 @@
 #define PIN_OFF_INPUT_PULLDOWN	(OFF_EN | OFF_PULL_EN)
 #define PIN_OFF_WAKEUPENABLE	WAKEUP_EN
 
+/*
+ * Macros to allow using the absolute physical address instead of the
+ * padconf registers instead of the offset from padconf base.
+ */
+#define OMAP_IOPAD_OFFSET(pa, offset)	(((pa) & 0xffff) - (offset))
+
+#define OMAP2420_CORE_IOPAD(pa, val)	OMAP_IOPAD_OFFSET((pa), 0x0030) (val)
+#define OMAP2430_CORE_IOPAD(pa, val)	OMAP_IOPAD_OFFSET((pa), 0x2030) (val)
+#define OMAP3_CORE1_IOPAD(pa, val)	OMAP_IOPAD_OFFSET((pa), 0x2030) (val)
+#define OMAP3430_CORE2_IOPAD(pa, val)	OMAP_IOPAD_OFFSET((pa), 0x25d8) (val)
+#define OMAP3630_CORE2_IOPAD(pa, val)	OMAP_IOPAD_OFFSET((pa), 0x25a0) (val)
+#define OMAP3_WKUP_IOPAD(pa, val)	OMAP_IOPAD_OFFSET((pa), 0x2a00) (val)
+#define AM33XX_IOPAD(pa, val)		OMAP_IOPAD_OFFSET((pa), 0x0800) (val)
+#define OMAP4_CORE_IOPAD(pa, val)	OMAP_IOPAD_OFFSET((pa), 0x0040) (val)
+#define OMAP4_WKUP_IOPAD(pa, val)	OMAP_IOPAD_OFFSET((pa), 0xe040) (val)
+#define AM4372_IOPAD(pa, val)		OMAP_IOPAD_OFFSET((pa), 0x0800) (val)
+#define OMAP5_CORE_IOPAD(pa, val)	OMAP_IOPAD_OFFSET((pa), 0x2840) (val)
+#define OMAP5_WKUP_IOPAD(pa, val)	OMAP_IOPAD_OFFSET((pa), 0xc840) (val)
+#define DRA7XX_CORE_IOPAD(pa, val)	OMAP_IOPAD_OFFSET((pa), 0x3400) (val)
+
 #endif
 

commit d623a0e19dcbc4e44a8db047158815d7f8c2b839
Author: Tony Lindgren <tony@atomide.com>
Date:   Mon Oct 7 10:22:01 2013 -0700

    ARM: dts: Fix pinctrl mask for omap3
    
    The wake-up interrupt bit is available on omap3/4/5 processors
    unlike what we claim. Without fixing it we cannot use it on
    omap3 and the system configured for wake-up events will just
    hang on wake-up.
    
    Cc: Grygorii Strashko <grygorii.strashko@ti.com>
    Cc: Benoît Cousson <bcousson@baylibre.com>
    Cc: devicetree@vger.kernel.org
    Signed-off-by: Tony Lindgren <tony@atomide.com>

diff --git a/include/dt-bindings/pinctrl/omap.h b/include/dt-bindings/pinctrl/omap.h
index edbd250809cb..bed35e36fd27 100644
--- a/include/dt-bindings/pinctrl/omap.h
+++ b/include/dt-bindings/pinctrl/omap.h
@@ -23,7 +23,7 @@
 #define PULL_UP			(1 << 4)
 #define ALTELECTRICALSEL	(1 << 5)
 
-/* 34xx specific mux bit defines */
+/* omap3/4/5 specific mux bit defines */
 #define INPUT_EN		(1 << 8)
 #define OFF_EN			(1 << 9)
 #define OFFOUT_EN		(1 << 10)
@@ -31,8 +31,6 @@
 #define OFF_PULL_EN		(1 << 12)
 #define OFF_PULL_UP		(1 << 13)
 #define WAKEUP_EN		(1 << 14)
-
-/* 44xx specific mux bit defines */
 #define WAKEUP_EVENT		(1 << 15)
 
 /* Active pin states */

commit ac25da7f30a118b7021c5b49c2cc50ba832db962
Author: Florian Vaussard <florian.vaussard@epfl.ch>
Date:   Tue Jun 11 16:50:50 2013 +0200

    ARM: dts: Protect pinctrl headers against multiple inclusions
    
    Pinctrl headers were not protected with #ifndef.
    
    Signed-off-by: Florian Vaussard <florian.vaussard@epfl.ch>
    Acked-by: Grant Likely <grant.likely@secretlab.ca>
    Signed-off-by: Benoit Cousson <benoit.cousson@linaro.org>

diff --git a/include/dt-bindings/pinctrl/omap.h b/include/dt-bindings/pinctrl/omap.h
index 370df3f376cb..edbd250809cb 100644
--- a/include/dt-bindings/pinctrl/omap.h
+++ b/include/dt-bindings/pinctrl/omap.h
@@ -5,6 +5,9 @@
  * Copyright (C) 2009-2010 Texas Instruments
  */
 
+#ifndef _DT_BINDINGS_PINCTRL_OMAP_H
+#define _DT_BINDINGS_PINCTRL_OMAP_H
+
 /* 34xx mux mode options for each pin. See TRM for options */
 #define MUX_MODE0	0
 #define MUX_MODE1	1
@@ -48,3 +51,5 @@
 #define PIN_OFF_INPUT_PULLDOWN	(OFF_EN | OFF_PULL_EN)
 #define PIN_OFF_WAKEUPENABLE	WAKEUP_EN
 
+#endif
+

commit 10a3472a83d3be18495d18ed5612394bb6262f58
Author: Florian Vaussard <florian.vaussard@epfl.ch>
Date:   Fri May 31 14:32:58 2013 +0200

    ARM: dts: OMAP2+: Header file for pinctrl constants
    
    Most of the constants are taken from arch/arm/mach-omap2/mux.h.
    Define some others for the PIN_OUTPUT_* flavours.
    
    Signed-off-by: Florian Vaussard <florian.vaussard@epfl.ch>
    Acked-by: Santosh Shilimkar <santosh.shilimkar@ti.com>
    Reviewed-by: Stephen Warren <swarren@nvidia.com>
    Signed-off-by: Benoit Cousson <benoit.cousson@linaro.org>

diff --git a/include/dt-bindings/pinctrl/omap.h b/include/dt-bindings/pinctrl/omap.h
new file mode 100644
index 000000000000..370df3f376cb
--- /dev/null
+++ b/include/dt-bindings/pinctrl/omap.h
@@ -0,0 +1,50 @@
+/*
+ * This header provides constants for OMAP pinctrl bindings.
+ *
+ * Copyright (C) 2009 Nokia
+ * Copyright (C) 2009-2010 Texas Instruments
+ */
+
+/* 34xx mux mode options for each pin. See TRM for options */
+#define MUX_MODE0	0
+#define MUX_MODE1	1
+#define MUX_MODE2	2
+#define MUX_MODE3	3
+#define MUX_MODE4	4
+#define MUX_MODE5	5
+#define MUX_MODE6	6
+#define MUX_MODE7	7
+
+/* 24xx/34xx mux bit defines */
+#define PULL_ENA		(1 << 3)
+#define PULL_UP			(1 << 4)
+#define ALTELECTRICALSEL	(1 << 5)
+
+/* 34xx specific mux bit defines */
+#define INPUT_EN		(1 << 8)
+#define OFF_EN			(1 << 9)
+#define OFFOUT_EN		(1 << 10)
+#define OFFOUT_VAL		(1 << 11)
+#define OFF_PULL_EN		(1 << 12)
+#define OFF_PULL_UP		(1 << 13)
+#define WAKEUP_EN		(1 << 14)
+
+/* 44xx specific mux bit defines */
+#define WAKEUP_EVENT		(1 << 15)
+
+/* Active pin states */
+#define PIN_OUTPUT		0
+#define PIN_OUTPUT_PULLUP	(PIN_OUTPUT | PULL_ENA | PULL_UP)
+#define PIN_OUTPUT_PULLDOWN	(PIN_OUTPUT | PULL_ENA)
+#define PIN_INPUT		INPUT_EN
+#define PIN_INPUT_PULLUP	(PULL_ENA | INPUT_EN | PULL_UP)
+#define PIN_INPUT_PULLDOWN	(PULL_ENA | INPUT_EN)
+
+/* Off mode states */
+#define PIN_OFF_NONE		0
+#define PIN_OFF_OUTPUT_HIGH	(OFF_EN | OFFOUT_EN | OFFOUT_VAL)
+#define PIN_OFF_OUTPUT_LOW	(OFF_EN | OFFOUT_EN)
+#define PIN_OFF_INPUT_PULLUP	(OFF_EN | OFF_PULL_EN | OFF_PULL_UP)
+#define PIN_OFF_INPUT_PULLDOWN	(OFF_EN | OFF_PULL_EN)
+#define PIN_OFF_WAKEUPENABLE	WAKEUP_EN
+
