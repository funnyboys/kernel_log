commit 0bdab78ba69f057c99e72b9887a997888e7fce15
Author: Alex Elder <elder@linaro.org>
Date:   Mon Apr 21 16:26:23 2014 -0500

    clk: bcm281xx: move compatible string definitions
    
    The Broadcom 281xx clock code uses a #define for the compatible
    string for it's clock control units (CCUs).  Rather than defining
    those in the C source file, define them in the header file that's
    shared by both the code and the device tree source file (along with
    all the clock ids).
    
    Signed-off-by: Alex Elder <elder@linaro.org>
    Signed-off-by: Mike Turquette <mturquette@linaro.org>

diff --git a/include/dt-bindings/clock/bcm281xx.h b/include/dt-bindings/clock/bcm281xx.h
index e0096940886d..a763460cf1af 100644
--- a/include/dt-bindings/clock/bcm281xx.h
+++ b/include/dt-bindings/clock/bcm281xx.h
@@ -20,6 +20,18 @@
  * the clock control units (CCUs) on Broadcom BCM281XX family SoCs.
  */
 
+/*
+ * These are the bcm281xx CCU device tree "compatible" strings.
+ * We're stuck with using "bcm11351" in the string because wild
+ * cards aren't allowed, and that name was the first one defined
+ * in this family of devices.
+ */
+#define BCM281XX_DT_ROOT_CCU_COMPAT	"brcm,bcm11351-root-ccu"
+#define BCM281XX_DT_AON_CCU_COMPAT	"brcm,bcm11351-aon-ccu"
+#define BCM281XX_DT_HUB_CCU_COMPAT	"brcm,bcm11351-hub-ccu"
+#define BCM281XX_DT_MASTER_CCU_COMPAT	"brcm,bcm11351-master-ccu"
+#define BCM281XX_DT_SLAVE_CCU_COMPAT	"brcm,bcm11351-slave-ccu"
+
 /* root CCU clock ids */
 
 #define BCM281XX_ROOT_CCU_FRAC_1M		0

commit 1f27f15258bfee2ae85240e9505186dd959d2892
Author: Alex Elder <elder@linaro.org>
Date:   Fri Feb 14 12:29:18 2014 -0600

    clk: bcm281xx: add initial clock framework support
    
    Add code for device tree support of clocks in the BCM281xx family of
    SoCs.  Machines in this family use peripheral clocks implemented by
    "Kona" clock control units (CCUs).  (Other Broadcom SoC families use
    Kona style CCUs as well, but support for them is not yet upstream.)
    
    A BCM281xx SoC has multiple CCUs, each of which manages a set of
    clocks on the SoC.  A Kona peripheral clock is composite clock that
    may include a gate, a parent clock multiplexor, and zero, one
    or two dividers.  There is a variety of gate types, and many gates
    implement hardware-managed gating (often called "auto-gating").
    Most dividers divide their input clock signal by an integer value
    (one or more).  There are also "fractional" dividers which allow
    division by non-integer values.  To accomodate such dividers,
    clock rates and dividers are generally maintained by the code in
    "scaled" form, which allows integer and fractional dividers to
    be handled in a uniform way.
    
    If present, the gate for a Kona peripheral clock must be enabled
    when a change is made to its multiplexor or one of its dividers.
    Additionally, dividers and multiplexors have trigger registers which
    must be used whenever the divider value or selected parent clock is
    changed.  The same trigger is often used for a divider and
    multiplexor, and a BCM281xx peripheral clock occasionally has two
    triggers.
    
    The gate, dividers, and parent clock selector are treated in this
    code as "components" of a peripheral clock.  Their functionality is
    implemented directly--e.g. the common clock framework gate
    implementation is not used for a Kona peripheral clock gate.  (This
    has being considered though, and the intention is to evolve this
    code to leverage common code as much as possible.)
    
    The source code is divided into three general portions:
    
        drivers/clk/bcm/clk-kona.h
        drivers/clk/bcm/clk-kona.c
            These implement the basic Kona clock functionality,
            including the clk_ops methods and various routines to
            manipulate registers and interpret their values.  This
            includes some functions used to set clocks to a desired
            initial state (though this feature is only partially
            implemented here).
    
        drivers/clk/bcm/clk-kona-setup.c
            This contains generic run-time initialization code for
            data structures representing Kona CCUs and clocks.  This
            encapsulates the clock structure initialization that can't
            be done statically.  Note that there is a great deal of
            validity-checking code here, making explicit certain
            assumptions in the code.   This is mostly useful for adding
            new clock definitions and could possibly be disabled for
            production use.
    
        drivers/clk/bcm/clk-bcm281xx.c
            This file defines the specific CCUs used by BCM281XX family
            SoCs, as well as the specific clocks implemented by each.
            It declares a device tree clock match entry for each CCU
            defined.
    
        include/dt-bindings/clock/bcm281xx.h
            This file defines the selector (index) values used to
            identify a particular clock provided by a CCU.  It consists
            entirely of C preprocessor constants, to be used by both the
            C source and device tree source files.
    
    Signed-off-by: Alex Elder <elder@linaro.org>
    Reviewed-by: Tim Kryger <tim.kryger@linaro.org>
    Reviewed-by: Matt Porter <mporter@linaro.org>
    Acked-by: Mike Turquette <mturquette@linaro.org>
    Signed-off-by: Matt Porter <mporter@linaro.org>

diff --git a/include/dt-bindings/clock/bcm281xx.h b/include/dt-bindings/clock/bcm281xx.h
new file mode 100644
index 000000000000..e0096940886d
--- /dev/null
+++ b/include/dt-bindings/clock/bcm281xx.h
@@ -0,0 +1,65 @@
+/*
+ * Copyright (C) 2013 Broadcom Corporation
+ * Copyright 2013 Linaro Limited
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation version 2.
+ *
+ * This program is distributed "as is" WITHOUT ANY WARRANTY of any
+ * kind, whether express or implied; without even the implied warranty
+ * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+#ifndef _CLOCK_BCM281XX_H
+#define _CLOCK_BCM281XX_H
+
+/*
+ * This file defines the values used to specify clocks provided by
+ * the clock control units (CCUs) on Broadcom BCM281XX family SoCs.
+ */
+
+/* root CCU clock ids */
+
+#define BCM281XX_ROOT_CCU_FRAC_1M		0
+#define BCM281XX_ROOT_CCU_CLOCK_COUNT		1
+
+/* aon CCU clock ids */
+
+#define BCM281XX_AON_CCU_HUB_TIMER		0
+#define BCM281XX_AON_CCU_PMU_BSC		1
+#define BCM281XX_AON_CCU_PMU_BSC_VAR		2
+#define BCM281XX_AON_CCU_CLOCK_COUNT		3
+
+/* hub CCU clock ids */
+
+#define BCM281XX_HUB_CCU_TMON_1M		0
+#define BCM281XX_HUB_CCU_CLOCK_COUNT		1
+
+/* master CCU clock ids */
+
+#define BCM281XX_MASTER_CCU_SDIO1		0
+#define BCM281XX_MASTER_CCU_SDIO2		1
+#define BCM281XX_MASTER_CCU_SDIO3		2
+#define BCM281XX_MASTER_CCU_SDIO4		3
+#define BCM281XX_MASTER_CCU_USB_IC		4
+#define BCM281XX_MASTER_CCU_HSIC2_48M		5
+#define BCM281XX_MASTER_CCU_HSIC2_12M		6
+#define BCM281XX_MASTER_CCU_CLOCK_COUNT		7
+
+/* slave CCU clock ids */
+
+#define BCM281XX_SLAVE_CCU_UARTB		0
+#define BCM281XX_SLAVE_CCU_UARTB2		1
+#define BCM281XX_SLAVE_CCU_UARTB3		2
+#define BCM281XX_SLAVE_CCU_UARTB4		3
+#define BCM281XX_SLAVE_CCU_SSP0			4
+#define BCM281XX_SLAVE_CCU_SSP2			5
+#define BCM281XX_SLAVE_CCU_BSC1			6
+#define BCM281XX_SLAVE_CCU_BSC2			7
+#define BCM281XX_SLAVE_CCU_BSC3			8
+#define BCM281XX_SLAVE_CCU_PWM			9
+#define BCM281XX_SLAVE_CCU_CLOCK_COUNT		10
+
+#endif /* _CLOCK_BCM281XX_H */
