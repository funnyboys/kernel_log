commit d43600c01c4c69f9d0ac4626f03599196b845ce1
Author: Eli Cohen <eli@mellanox.com>
Date:   Sun Nov 17 14:35:42 2019 +0200

    net: Add netif_is_bareudp() API to identify bareudp devices
    
    Add netif_is_bareudp() so the device can be identified as a bareudp one.
    
    Signed-off-by: Eli Cohen <eli@mellanox.com>
    Reviewed-by: Roi Dayan <roid@mellanox.com>
    Reviewed-by: Eli Britstein <elibr@mellanox.com>
    Reviewed-by: Paul Blakey <paulb@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>

diff --git a/include/net/bareudp.h b/include/net/bareudp.h
index cb03f6f15956..dc65a0d71d9b 100644
--- a/include/net/bareudp.h
+++ b/include/net/bareudp.h
@@ -5,6 +5,7 @@
 
 #include <linux/types.h>
 #include <linux/skbuff.h>
+#include <net/rtnetlink.h>
 
 struct bareudp_conf {
 	__be16 ethertype;
@@ -17,4 +18,10 @@ struct net_device *bareudp_dev_create(struct net *net, const char *name,
 				      u8 name_assign_type,
 				      struct bareudp_conf *info);
 
+static inline bool netif_is_bareudp(const struct net_device *dev)
+{
+	return dev->rtnl_link_ops &&
+	       !strcmp(dev->rtnl_link_ops->kind, "bareudp");
+}
+
 #endif

commit 4b5f67232d956a5f837082578ba682410ccab498
Author: Martin Varghese <martin.varghese@nokia.com>
Date:   Mon Feb 24 10:58:35 2020 +0530

    net: Special handling for IP & MPLS.
    
    Special handling is needed in bareudp module for IP & MPLS as they
    support more than one ethertypes.
    
    MPLS has 2 ethertypes. 0x8847 for MPLS unicast and 0x8848 for MPLS multicast.
    While decapsulating MPLS packet from UDP packet the tunnel destination IP
    address is checked to determine the ethertype. The ethertype of the packet
    will be set to 0x8848 if the  tunnel destination IP address is a multicast
    IP address. The ethertype of the packet will be set to 0x8847 if the
    tunnel destination IP address is a unicast IP address.
    
    IP has 2 ethertypes.0x0800 for IPV4 and 0x86dd for IPv6. The version
    field of the IP header tunnelled will be checked to determine the ethertype.
    
    This special handling to tunnel additional ethertypes will be disabled
    by default and can be enabled using a flag called multiproto. This flag can
    be used only with ethertypes 0x8847 and 0x0800.
    
    Signed-off-by: Martin Varghese <martin.varghese@nokia.com>
    Acked-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/include/net/bareudp.h b/include/net/bareudp.h
index 513fae6f6ba1..cb03f6f15956 100644
--- a/include/net/bareudp.h
+++ b/include/net/bareudp.h
@@ -10,6 +10,7 @@ struct bareudp_conf {
 	__be16 ethertype;
 	__be16 port;
 	u16 sport_min;
+	bool multi_proto_mode;
 };
 
 struct net_device *bareudp_dev_create(struct net *net, const char *name,

commit 571912c69f0ed731bd1e071ade9dc7ca4aa52065
Author: Martin Varghese <martin.varghese@nokia.com>
Date:   Mon Feb 24 10:57:50 2020 +0530

    net: UDP tunnel encapsulation module for tunnelling different protocols like MPLS, IP, NSH etc.
    
    The Bareudp tunnel module provides a generic L3 encapsulation
    tunnelling module for tunnelling different protocols like MPLS,
    IP,NSH etc inside a UDP tunnel.
    
    Signed-off-by: Martin Varghese <martin.varghese@nokia.com>
    Acked-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/include/net/bareudp.h b/include/net/bareudp.h
new file mode 100644
index 000000000000..513fae6f6ba1
--- /dev/null
+++ b/include/net/bareudp.h
@@ -0,0 +1,19 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+
+#ifndef __NET_BAREUDP_H
+#define __NET_BAREUDP_H
+
+#include <linux/types.h>
+#include <linux/skbuff.h>
+
+struct bareudp_conf {
+	__be16 ethertype;
+	__be16 port;
+	u16 sport_min;
+};
+
+struct net_device *bareudp_dev_create(struct net *net, const char *name,
+				      u8 name_assign_type,
+				      struct bareudp_conf *info);
+
+#endif
