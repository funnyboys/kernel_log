commit 77512baaea9ae397ec36767b9cd3e3a3920bb6d3
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon Jun 3 07:44:53 2019 +0200

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 237
    
    Based on 1 normalized pattern(s):
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license as published by
      the free software foundation either version 2
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-only
    
    has been chosen to replace the boilerplate/reference in 8 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Enrico Weigelt <info@metux.net>
    Reviewed-by: Alexios Zavras <alexios.zavras@intel.com>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190602204654.096873163@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/include/media/videobuf-vmalloc.h b/include/media/videobuf-vmalloc.h
index 36c6a4ad3504..e930dbb9d7f4 100644
--- a/include/media/videobuf-vmalloc.h
+++ b/include/media/videobuf-vmalloc.h
@@ -1,3 +1,4 @@
+/* SPDX-License-Identifier: GPL-2.0-only */
 /*
  * helper functions for vmalloc capture buffers
  *
@@ -7,10 +8,6 @@
  * to touch the video data.
  *
  * (c) 2007 Mauro Carvalho Chehab, <mchehab@kernel.org>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2
  */
 #ifndef _VIDEOBUF_VMALLOC_H
 #define _VIDEOBUF_VMALLOC_H

commit 3259081991a9398434f6f49468b960f136ac0158
Author: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
Date:   Wed Apr 25 05:34:48 2018 -0400

    MAINTAINERS & files: Canonize the e-mails I use at files
    
    From now on, I'll start using my @kernel.org as my development e-mail.
    
    As such, let's remove the entries that point to the old
    mchehab@s-opensource.com at MAINTAINERS file.
    
    For the files written with a copyright with mchehab@s-opensource,
    let's keep Samsung on their names, using mchehab+samsung@kernel.org,
    in order to keep pointing to my employer, with sponsors the work.
    
    For the files written before I join Samsung (on July, 4 2013),
    let's just use mchehab@kernel.org.
    
    For bug reports, we can simply point to just kernel.org, as
    this will reach my mchehab+samsung inbox anyway.
    
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Brian Warner <brian.warner@samsung.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>

diff --git a/include/media/videobuf-vmalloc.h b/include/media/videobuf-vmalloc.h
index 486a97efdb56..36c6a4ad3504 100644
--- a/include/media/videobuf-vmalloc.h
+++ b/include/media/videobuf-vmalloc.h
@@ -6,7 +6,7 @@
  * into PAGE_SIZE chunks).  They also assume the driver does not need
  * to touch the video data.
  *
- * (c) 2007 Mauro Carvalho Chehab, <mchehab@infradead.org>
+ * (c) 2007 Mauro Carvalho Chehab, <mchehab@kernel.org>
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

commit 08bff03ed697a583612b62a6ac566bd5bce98012
Author: Hans Verkuil <hverkuil@xs4all.nl>
Date:   Mon Sep 20 17:39:46 2010 -0300

    V4L/DVB: videobuf: add ext_lock argument to the queue init functions
    
    Add an ext_lock argument to the videobuf init functions. This allows
    drivers to pass the vdev->lock pointer (or any other externally held lock)
    to videobuf. For now all drivers just pass NULL.
    
    Signed-off-by: Hans Verkuil <hverkuil@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>

diff --git a/include/media/videobuf-vmalloc.h b/include/media/videobuf-vmalloc.h
index e19403c18dae..486a97efdb56 100644
--- a/include/media/videobuf-vmalloc.h
+++ b/include/media/videobuf-vmalloc.h
@@ -36,7 +36,8 @@ void videobuf_queue_vmalloc_init(struct videobuf_queue *q,
 			 enum v4l2_buf_type type,
 			 enum v4l2_field field,
 			 unsigned int msize,
-			 void *priv);
+			 void *priv,
+			 struct mutex *ext_lock);
 
 void *videobuf_to_vmalloc(struct videobuf_buffer *buf);
 

commit bb6dbe74806a17bcec8396c57ca7fd9a889e3b27
Author: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date:   Tue May 11 10:36:34 2010 -0300

    V4L/DVB: videobuf: Rename vmalloc fields to vaddr
    
    The videobuf_dmabuf and videobuf_vmalloc_memory fields have a vmalloc
    field to store the kernel virtual address of vmalloc'ed buffers. Rename
    the field to vaddr.
    
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>

diff --git a/include/media/videobuf-vmalloc.h b/include/media/videobuf-vmalloc.h
index 851eb1a2ff2a..e19403c18dae 100644
--- a/include/media/videobuf-vmalloc.h
+++ b/include/media/videobuf-vmalloc.h
@@ -22,7 +22,7 @@
 struct videobuf_vmalloc_memory {
 	u32                 magic;
 
-	void                *vmalloc;
+	void                *vaddr;
 
 	/* remap_vmalloc_range seems to need to run
 	 * after mmap() on some cases */

commit 7a02264ca9ec5409e22b9d41f32b431d08eadbce
Author: Pawel Osciak <p.osciak@samsung.com>
Date:   Wed Mar 17 04:01:04 2010 -0300

    V4L/DVB: v4l: videobuf: code cleanup
    
    Make videobuf pass checkpatch; minor code cleanups.
    
    Signed-off-by: Pawel Osciak <p.osciak@samsung.com>
    Reviewed-by: Kyungmin Park <kyungmin.park@samsung.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>

diff --git a/include/media/videobuf-vmalloc.h b/include/media/videobuf-vmalloc.h
index 4b419a257a7d..851eb1a2ff2a 100644
--- a/include/media/videobuf-vmalloc.h
+++ b/include/media/videobuf-vmalloc.h
@@ -19,17 +19,17 @@
 
 /* --------------------------------------------------------------------- */
 
-struct videobuf_vmalloc_memory
-{
+struct videobuf_vmalloc_memory {
 	u32                 magic;
 
 	void                *vmalloc;
 
-	/* remap_vmalloc_range seems to need to run after mmap() on some cases */
+	/* remap_vmalloc_range seems to need to run
+	 * after mmap() on some cases */
 	struct vm_area_struct *vma;
 };
 
-void videobuf_queue_vmalloc_init(struct videobuf_queue* q,
+void videobuf_queue_vmalloc_init(struct videobuf_queue *q,
 			 const struct videobuf_queue_ops *ops,
 			 struct device *dev,
 			 spinlock_t *irqlock,
@@ -38,8 +38,8 @@ void videobuf_queue_vmalloc_init(struct videobuf_queue* q,
 			 unsigned int msize,
 			 void *priv);
 
-void *videobuf_to_vmalloc (struct videobuf_buffer *buf);
+void *videobuf_to_vmalloc(struct videobuf_buffer *buf);
 
-void videobuf_vmalloc_free (struct videobuf_buffer *buf);
+void videobuf_vmalloc_free(struct videobuf_buffer *buf);
 
 #endif

commit f8b0bca1a7ea8479490bcc06835ccbf590ba2c4e
Author: Jonathan Corbet <corbet@lwn.net>
Date:   Mon Nov 23 14:29:35 2009 -0300

    V4L/DVB (13417): Fix videobuf_queue_vmalloc_init() prototype
    
    For whatever reason, the device structure pointer to
    videobuf_queue_vmalloc_init is typed "void *", even though it's passed
    right through to videobuf_queue_core_init(), which expects a struct
    device pointer.  The other videobuf implementations use struct device *;
    I think vmalloc should too.
    
    Signed-off-by: Jonathan Corbet <corbet@lwn.net>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>

diff --git a/include/media/videobuf-vmalloc.h b/include/media/videobuf-vmalloc.h
index 1ffdb6624436..4b419a257a7d 100644
--- a/include/media/videobuf-vmalloc.h
+++ b/include/media/videobuf-vmalloc.h
@@ -31,7 +31,7 @@ struct videobuf_vmalloc_memory
 
 void videobuf_queue_vmalloc_init(struct videobuf_queue* q,
 			 const struct videobuf_queue_ops *ops,
-			 void *dev,
+			 struct device *dev,
 			 spinlock_t *irqlock,
 			 enum v4l2_buf_type type,
 			 enum v4l2_field field,

commit 38a54f35a0a90c0b62b111dd4de24248b22616b9
Author: Jonathan Corbet <corbet@lwn.net>
Date:   Tue Nov 17 19:43:41 2009 -0300

    V4L/DVB (13377): make struct videobuf_queue_ops constant
    
    The videobuf_queue_ops function vector is not declared constant, but
    there's no need for the videobuf layer to ever change it.  Make it const
    so that videobuf users can make their operations const without warnings.
    
    Signed-off-by: Jonathan Corbet <corbet@lwn.net>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>

diff --git a/include/media/videobuf-vmalloc.h b/include/media/videobuf-vmalloc.h
index e87222c6a125..1ffdb6624436 100644
--- a/include/media/videobuf-vmalloc.h
+++ b/include/media/videobuf-vmalloc.h
@@ -30,7 +30,7 @@ struct videobuf_vmalloc_memory
 };
 
 void videobuf_queue_vmalloc_init(struct videobuf_queue* q,
-			 struct videobuf_queue_ops *ops,
+			 const struct videobuf_queue_ops *ops,
 			 void *dev,
 			 spinlock_t *irqlock,
 			 enum v4l2_buf_type type,

commit 5d6aaf50e2986d3289d16fc2859c490c66a1be63
Author: Magnus Damm <magnus.damm@gmail.com>
Date:   Wed Jul 16 21:27:49 2008 -0300

    V4L/DVB (8340): videobuf: Fix gather spelling
    
    Use "scatter gather" instead of "scatter gatter".
    
    Signed-off-by: Magnus Damm <damm@igel.co.jp>
    Signed-off-by: Guennadi Liakhovetski <g.liakhovetski@pengutronix.de>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@infradead.org>

diff --git a/include/media/videobuf-vmalloc.h b/include/media/videobuf-vmalloc.h
index aed39460c154..e87222c6a125 100644
--- a/include/media/videobuf-vmalloc.h
+++ b/include/media/videobuf-vmalloc.h
@@ -1,7 +1,7 @@
 /*
  * helper functions for vmalloc capture buffers
  *
- * The functions expect the hardware being able to scatter gatter
+ * The functions expect the hardware being able to scatter gather
  * (i.e. the buffers are not linear in physical memory, but fragmented
  * into PAGE_SIZE chunks).  They also assume the driver does not need
  * to touch the video data.

commit 59d3448995a4c0ca98cbe82f6dac9460323377c1
Author: Mauro Carvalho Chehab <mchehab@infradead.org>
Date:   Sun Apr 13 15:10:00 2008 -0300

    V4L/DVB (7566): videobuf-dvb: allow its usage with videobuf-vmalloc
    
    videobuf-dvb were still using a function that were videobuf-dma-sg
    dependent. This patch creates a generic handler for this function. This
    way, videobuf-dvb can now work with all videobuf implementations.
    
    Signed-off-by: Mauro Carvalho Chehab <mchehab@infradead.org>

diff --git a/include/media/videobuf-vmalloc.h b/include/media/videobuf-vmalloc.h
index ec63ab0fab93..aed39460c154 100644
--- a/include/media/videobuf-vmalloc.h
+++ b/include/media/videobuf-vmalloc.h
@@ -12,6 +12,8 @@
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation; either version 2
  */
+#ifndef _VIDEOBUF_VMALLOC_H
+#define _VIDEOBUF_VMALLOC_H
 
 #include <media/videobuf-core.h>
 
@@ -39,3 +41,5 @@ void videobuf_queue_vmalloc_init(struct videobuf_queue* q,
 void *videobuf_to_vmalloc (struct videobuf_buffer *buf);
 
 void videobuf_vmalloc_free (struct videobuf_buffer *buf);
+
+#endif

commit 384b835aed8acf341d99969b58d27434685bdd3d
Author: Brandon Philips <bphilips@suse.de>
Date:   Mon Feb 4 20:52:21 2008 -0300

    V4L/DVB (7150): [v4l] convert videbuf_vmalloc_memory to videobuf_vmalloc_memory
    
    Signed-off-by: Brandon Philips <bphilips@suse.de>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@infradead.org>

diff --git a/include/media/videobuf-vmalloc.h b/include/media/videobuf-vmalloc.h
index 26a8958d23d1..ec63ab0fab93 100644
--- a/include/media/videobuf-vmalloc.h
+++ b/include/media/videobuf-vmalloc.h
@@ -17,7 +17,7 @@
 
 /* --------------------------------------------------------------------- */
 
-struct videbuf_vmalloc_memory
+struct videobuf_vmalloc_memory
 {
 	u32                 magic;
 

commit 851c0c96b2212f48fe51afc1589541b5eae3a544
Author: Mauro Carvalho Chehab <mchehab@infradead.org>
Date:   Thu Sep 27 18:25:44 2007 -0300

    V4L/DVB (6266): videobuf cleanup: mmap check is common to all videobuf. Make it at core
    
    Signed-off-by: Mauro Carvalho Chehab <mchehab@infradead.org>
    http://thread.gmane.org/gmane.comp.video.video4linux/34978/focus=34981
    Reviewed-by: Ricardo Cerqueira <v4l@cerqueira.org>

diff --git a/include/media/videobuf-vmalloc.h b/include/media/videobuf-vmalloc.h
index 5fff68df6689..26a8958d23d1 100644
--- a/include/media/videobuf-vmalloc.h
+++ b/include/media/videobuf-vmalloc.h
@@ -21,9 +21,6 @@ struct videbuf_vmalloc_memory
 {
 	u32                 magic;
 
-	/* for mmap'ed buffers */
-	struct videobuf_mapping *map;
-
 	void                *vmalloc;
 
 	/* remap_vmalloc_range seems to need to run after mmap() on some cases */

commit 87b9ad070cf76c0f1e8cf836f7eb86e9ac94e34a
Author: Mauro Carvalho Chehab <mchehab@infradead.org>
Date:   Thu Aug 2 23:31:33 2007 -0300

    V4L/DVB (6254): Add videobuf-vmalloc
    
    Adds a newer videobuf-vmalloc module. This module uses the same
    videobuf controls, but implements memory allocation based on vmalloc
    methods.
    
    With this method, an USB driver can use video-buf, without needing to
    request memory from the DMA-safe area.
    
    Signed-off-by: Mauro Carvalho Chehab <mchehab@infradead.org>

diff --git a/include/media/videobuf-vmalloc.h b/include/media/videobuf-vmalloc.h
new file mode 100644
index 000000000000..5fff68df6689
--- /dev/null
+++ b/include/media/videobuf-vmalloc.h
@@ -0,0 +1,44 @@
+/*
+ * helper functions for vmalloc capture buffers
+ *
+ * The functions expect the hardware being able to scatter gatter
+ * (i.e. the buffers are not linear in physical memory, but fragmented
+ * into PAGE_SIZE chunks).  They also assume the driver does not need
+ * to touch the video data.
+ *
+ * (c) 2007 Mauro Carvalho Chehab, <mchehab@infradead.org>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2
+ */
+
+#include <media/videobuf-core.h>
+
+/* --------------------------------------------------------------------- */
+
+struct videbuf_vmalloc_memory
+{
+	u32                 magic;
+
+	/* for mmap'ed buffers */
+	struct videobuf_mapping *map;
+
+	void                *vmalloc;
+
+	/* remap_vmalloc_range seems to need to run after mmap() on some cases */
+	struct vm_area_struct *vma;
+};
+
+void videobuf_queue_vmalloc_init(struct videobuf_queue* q,
+			 struct videobuf_queue_ops *ops,
+			 void *dev,
+			 spinlock_t *irqlock,
+			 enum v4l2_buf_type type,
+			 enum v4l2_field field,
+			 unsigned int msize,
+			 void *priv);
+
+void *videobuf_to_vmalloc (struct videobuf_buffer *buf);
+
+void videobuf_vmalloc_free (struct videobuf_buffer *buf);
