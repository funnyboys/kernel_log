commit 8030e774e209bca8504e7b73e186afe8e83e1532
Author: Mauro Carvalho Chehab <mchehab@s-opensource.com>
Date:   Thu Sep 21 09:36:54 2017 -0400

    media: tuner-types: add kernel-doc markups for struct tunertype
    
    This struct is lacking documentation. Add it.
    
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>

diff --git a/include/media/tuner-types.h b/include/media/tuner-types.h
index 78f0654d9c3d..df76ac8e658c 100644
--- a/include/media/tuner-types.h
+++ b/include/media/tuner-types.h
@@ -171,6 +171,21 @@ struct tuner_params {
 	struct tuner_range *ranges;
 };
 
+/**
+ * struct tunertype - describes the known tuners.
+ *
+ * @name:	string with the tuner's name.
+ * @count:	size of &struct tuner_params array.
+ * @params:	pointer to &struct tuner_params array.
+ *
+ * @min:	minimal tuner frequency, in 62.5 kHz step.
+ *		should be multiplied to 16 to convert to MHz.
+ * @max:	minimal tuner frequency, in 62.5 kHz step.
+ *		Should be multiplied to 16 to convert to MHz.
+ * @stepsize:	frequency step, in Hz.
+ * @initdata:	optional byte sequence to initialize the tuner.
+ * @sleepdata:	optional byte sequence to power down the tuner.
+ */
 struct tunertype {
 	char *name;
 	unsigned int count;

commit b24413180f5600bcb3bb70fbed5cf186b60864bd
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Nov 1 15:07:57 2017 +0100

    License cleanup: add SPDX GPL-2.0 license identifier to files with no license
    
    Many source files in the tree are missing licensing information, which
    makes it harder for compliance tools to determine the correct license.
    
    By default all files without license information are under the default
    license of the kernel, which is GPL version 2.
    
    Update the files which contain no license information with the 'GPL-2.0'
    SPDX license identifier.  The SPDX identifier is a legally binding
    shorthand, which can be used instead of the full boiler plate text.
    
    This patch is based on work done by Thomas Gleixner and Kate Stewart and
    Philippe Ombredanne.
    
    How this work was done:
    
    Patches were generated and checked against linux-4.14-rc6 for a subset of
    the use cases:
     - file had no licensing information it it.
     - file was a */uapi/* one with no licensing information in it,
     - file was a */uapi/* one with existing licensing information,
    
    Further patches will be generated in subsequent months to fix up cases
    where non-standard license headers were used, and references to license
    had to be inferred by heuristics based on keywords.
    
    The analysis to determine which SPDX License Identifier to be applied to
    a file was done in a spreadsheet of side by side results from of the
    output of two independent scanners (ScanCode & Windriver) producing SPDX
    tag:value files created by Philippe Ombredanne.  Philippe prepared the
    base worksheet, and did an initial spot review of a few 1000 files.
    
    The 4.13 kernel was the starting point of the analysis with 60,537 files
    assessed.  Kate Stewart did a file by file comparison of the scanner
    results in the spreadsheet to determine which SPDX license identifier(s)
    to be applied to the file. She confirmed any determination that was not
    immediately clear with lawyers working with the Linux Foundation.
    
    Criteria used to select files for SPDX license identifier tagging was:
     - Files considered eligible had to be source code files.
     - Make and config files were included as candidates if they contained >5
       lines of source
     - File already had some variant of a license header in it (even if <5
       lines).
    
    All documentation files were explicitly excluded.
    
    The following heuristics were used to determine which SPDX license
    identifiers to apply.
    
     - when both scanners couldn't find any license traces, file was
       considered to have no license information in it, and the top level
       COPYING file license applied.
    
       For non */uapi/* files that summary was:
    
       SPDX license identifier                            # files
       ---------------------------------------------------|-------
       GPL-2.0                                              11139
    
       and resulted in the first patch in this series.
    
       If that file was a */uapi/* path one, it was "GPL-2.0 WITH
       Linux-syscall-note" otherwise it was "GPL-2.0".  Results of that was:
    
       SPDX license identifier                            # files
       ---------------------------------------------------|-------
       GPL-2.0 WITH Linux-syscall-note                        930
    
       and resulted in the second patch in this series.
    
     - if a file had some form of licensing information in it, and was one
       of the */uapi/* ones, it was denoted with the Linux-syscall-note if
       any GPL family license was found in the file or had no licensing in
       it (per prior point).  Results summary:
    
       SPDX license identifier                            # files
       ---------------------------------------------------|------
       GPL-2.0 WITH Linux-syscall-note                       270
       GPL-2.0+ WITH Linux-syscall-note                      169
       ((GPL-2.0 WITH Linux-syscall-note) OR BSD-2-Clause)    21
       ((GPL-2.0 WITH Linux-syscall-note) OR BSD-3-Clause)    17
       LGPL-2.1+ WITH Linux-syscall-note                      15
       GPL-1.0+ WITH Linux-syscall-note                       14
       ((GPL-2.0+ WITH Linux-syscall-note) OR BSD-3-Clause)    5
       LGPL-2.0+ WITH Linux-syscall-note                       4
       LGPL-2.1 WITH Linux-syscall-note                        3
       ((GPL-2.0 WITH Linux-syscall-note) OR MIT)              3
       ((GPL-2.0 WITH Linux-syscall-note) AND MIT)             1
    
       and that resulted in the third patch in this series.
    
     - when the two scanners agreed on the detected license(s), that became
       the concluded license(s).
    
     - when there was disagreement between the two scanners (one detected a
       license but the other didn't, or they both detected different
       licenses) a manual inspection of the file occurred.
    
     - In most cases a manual inspection of the information in the file
       resulted in a clear resolution of the license that should apply (and
       which scanner probably needed to revisit its heuristics).
    
     - When it was not immediately clear, the license identifier was
       confirmed with lawyers working with the Linux Foundation.
    
     - If there was any question as to the appropriate license identifier,
       the file was flagged for further research and to be revisited later
       in time.
    
    In total, over 70 hours of logged manual review was done on the
    spreadsheet to determine the SPDX license identifiers to apply to the
    source files by Kate, Philippe, Thomas and, in some cases, confirmation
    by lawyers working with the Linux Foundation.
    
    Kate also obtained a third independent scan of the 4.13 code base from
    FOSSology, and compared selected files where the other two scanners
    disagreed against that SPDX file, to see if there was new insights.  The
    Windriver scanner is based on an older version of FOSSology in part, so
    they are related.
    
    Thomas did random spot checks in about 500 files from the spreadsheets
    for the uapi headers and agreed with SPDX license identifier in the
    files he inspected. For the non-uapi files Thomas did random spot checks
    in about 15000 files.
    
    In initial set of patches against 4.14-rc6, 3 files were found to have
    copy/paste license identifier errors, and have been fixed to reflect the
    correct identifier.
    
    Additionally Philippe spent 10 hours this week doing a detailed manual
    inspection and review of the 12,461 patched files from the initial patch
    version early this week with:
     - a full scancode scan run, collecting the matched texts, detected
       license ids and scores
     - reviewing anything where there was a license detected (about 500+
       files) to ensure that the applied SPDX license was correct
     - reviewing anything where there was no detection but the patch license
       was not GPL-2.0 WITH Linux-syscall-note to ensure that the applied
       SPDX license was correct
    
    This produced a worksheet with 20 files needing minor correction.  This
    worksheet was then exported into 3 different .csv files for the
    different types of files to be modified.
    
    These .csv files were then reviewed by Greg.  Thomas wrote a script to
    parse the csv files and add the proper SPDX tag to the file, in the
    format that the file expected.  This script was further refined by Greg
    based on the output to detect more types of files automatically and to
    distinguish between header and source .c files (which need different
    comment types.)  Finally Greg ran the script using the .csv files to
    generate the patches.
    
    Reviewed-by: Kate Stewart <kstewart@linuxfoundation.org>
    Reviewed-by: Philippe Ombredanne <pombredanne@nexb.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/include/media/tuner-types.h b/include/media/tuner-types.h
index aed539068d2d..78f0654d9c3d 100644
--- a/include/media/tuner-types.h
+++ b/include/media/tuner-types.h
@@ -1,3 +1,4 @@
+/* SPDX-License-Identifier: GPL-2.0 */
 /*
  * descriptions for simple tuners.
  */

commit 89cb3ddbe7cc5ce49ffa814f30fb019fc531865d
Author: Mauro Carvalho Chehab <mchehab@s-opensource.com>
Date:   Sun Jul 17 08:44:08 2016 -0300

    [media] doc-rst: Fix conversion for v4l2 core functions
    
    The conversion from DocBook lead into some conversion issues,
    basically due to the lack of proper support at kernel-doc.
    
    So, address them:
    
    - Now, the C files with the exported symbols also need to be
      added. So, all headers need to be included twice: one to
      get the structs/enums/.. and another one for the functions;
    
    - Notes should use the ReST tag, as kernel-doc doesn't
      recognizes it anymore;
    
    - Identation needs to be fixed, as ReST uses it to identify
      when a format "tag" ends.
    
    - kernel-doc doesn't escape things like *pointer, so we
      need to manually add a escape char before it.
    
    - On some cases, kernel-doc conversion requires violating
      the 80-cols, as otherwise it won't properly parse the
      source code.
    
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>

diff --git a/include/media/tuner-types.h b/include/media/tuner-types.h
index 094e112cc325..aed539068d2d 100644
--- a/include/media/tuner-types.h
+++ b/include/media/tuner-types.h
@@ -35,8 +35,12 @@ enum param_type {
  * those ranges, as they're defined inside the driver. This is used by
  * analog tuners that are compatible with the "Philips way" to setup the
  * tuners. On those devices, the tuner set is done via 4 bytes:
- *	divider byte1 (DB1), divider byte 2 (DB2), Control byte (CB) and
- *	band switch byte (BB).
+ *
+ *	#) divider byte1 (DB1)
+ *	#) divider byte 2 (DB2)
+ *	#) Control byte (CB)
+ *	#) band switch byte (BB)
+ *
  * Some tuners also have an additional optional Auxiliary byte (AB).
  */
 struct tuner_range {

commit 5057f3262c52434fea9eda17494716b9649f25bd
Author: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
Date:   Mon Oct 5 11:37:15 2015 -0300

    [media] DocBook: add documentation for tuner-types.h
    
    The tuner-types.h is part of the V4L2 core and should be
    touched for every new tuner added. So, it deserves to be
    documented at the device-drivers DocBook.
    
    Add it to device-drivers.tmpl and add descriptions for
    enum param_type and struct tuner_range.
    
    Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>

diff --git a/include/media/tuner-types.h b/include/media/tuner-types.h
index 011b4a20ee22..094e112cc325 100644
--- a/include/media/tuner-types.h
+++ b/include/media/tuner-types.h
@@ -5,6 +5,15 @@
 #ifndef __TUNER_TYPES_H__
 #define __TUNER_TYPES_H__
 
+/**
+ * enum param_type - type of the tuner pameters
+ *
+ * @TUNER_PARAM_TYPE_RADIO:	Tuner params are for FM and/or AM radio
+ * @TUNER_PARAM_TYPE_PAL:	Tuner params are for PAL color TV standard
+ * @TUNER_PARAM_TYPE_SECAM:	Tuner params are for SECAM color TV standard
+ * @TUNER_PARAM_TYPE_NTSC:	Tuner params are for NTSC color TV standard
+ * @TUNER_PARAM_TYPE_DIGITAL:	Tuner params are for digital TV
+ */
 enum param_type {
 	TUNER_PARAM_TYPE_RADIO,
 	TUNER_PARAM_TYPE_PAL,
@@ -13,6 +22,23 @@ enum param_type {
 	TUNER_PARAM_TYPE_DIGITAL,
 };
 
+/**
+ * struct tuner_range - define the frequencies supported by the tuner
+ *
+ * @limit:		Max frequency supported by that range, in 62.5 kHz
+ *			(TV) or 62.5 Hz (Radio), as defined by
+ *			V4L2_TUNER_CAP_LOW.
+ * @config:		Value of the band switch byte (BB) to setup this mode.
+ * @cb:			Value of the CB byte to setup this mode.
+ *
+ * Please notice that digital tuners like xc3028/xc4000/xc5000 don't use
+ * those ranges, as they're defined inside the driver. This is used by
+ * analog tuners that are compatible with the "Philips way" to setup the
+ * tuners. On those devices, the tuner set is done via 4 bytes:
+ *	divider byte1 (DB1), divider byte 2 (DB2), Control byte (CB) and
+ *	band switch byte (BB).
+ * Some tuners also have an additional optional Auxiliary byte (AB).
+ */
 struct tuner_range {
 	unsigned short limit;
 	unsigned char config;

commit 65fc64090ed3dc750d40474b07a6f8ad734440cc
Author: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
Date:   Mon Oct 5 10:24:59 2015 -0300

    [media] DocBook: convert struct tuner_parms to doc-nano format
    
    The struct tuner_params is almost fully documented, but
    using a non-standard way. Convert it to doc-nano format,
    and add descriptions for the parameters that aren't
    documented yet.
    
    Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>

diff --git a/include/media/tuner-types.h b/include/media/tuner-types.h
index ab03c5344209..011b4a20ee22 100644
--- a/include/media/tuner-types.h
+++ b/include/media/tuner-types.h
@@ -19,91 +19,119 @@ struct tuner_range {
 	unsigned char cb;
 };
 
+/**
+ * struct tuner_params - Parameters to be used to setup the tuner. Those
+ *			 are used by drivers/media/tuners/tuner-types.c in
+ *			 order to specify the tuner properties. Most of
+ *			 the parameters are for tuners based on tda9887 IF-PLL
+ *			 multi-standard analog TV/Radio demodulator, with is
+ *			 very common on legacy analog tuners.
+ *
+ * @type:			Type of the tuner parameters, as defined at
+ *				enum param_type. If the tuner supports multiple
+ *				standards, an array should be used, with one
+ *				row per different standard.
+ * @cb_first_if_lower_freq:	Many Philips-based tuners have a comment in
+ *				their datasheet like
+ *				"For channel selection involving band
+ *				switching, and to ensure smooth tuning to the
+ *				desired channel without causing unnecessary
+ *				charge pump action, it is recommended to
+ *				consider the difference between wanted channel
+ *				frequency and the current channel frequency.
+ *				Unnecessary charge pump action will result
+ *				in very low tuning voltage which may drive the
+ *				oscillator to extreme conditions".
+ *				Set cb_first_if_lower_freq to 1, if this check
+ *				is required for this tuner. I tested this for
+ *				PAL by first setting the TV frequency to
+ *				203 MHz and then switching to 96.6 MHz FM
+ *				radio. The result was static unless the
+ *				control byte was sent first.
+ * @has_tda9887:		Set to 1 if this tuner uses a tda9887
+ * @port1_fm_high_sensitivity:	Many Philips tuners use tda9887 PORT1 to select
+ *				the FM radio sensitivity. If this setting is 1,
+ *				then set PORT1 to 1 to get proper FM reception.
+ * @port2_fm_high_sensitivity:	Some Philips tuners use tda9887 PORT2 to select
+ *				the FM radio sensitivity. If this setting is 1,
+ *				then set PORT2 to 1 to get proper FM reception.
+ * @fm_gain_normal:		Some Philips tuners use tda9887 cGainNormal to
+ *				select the FM radio sensitivity. If this
+ *				setting is 1, e register will use cGainNormal
+ *				instead of cGainLow.
+ * @intercarrier_mode:		Most tuners with a tda9887 use QSS mode.
+ *				Some (cheaper) tuners use Intercarrier mode.
+ *				If this setting is 1, then the tuner needs to
+ *				be set to intercarrier mode.
+ * @port1_active:		This setting sets the default value for PORT1.
+ *				0 means inactive, 1 means active. Note: the
+ *				actual bit value written to the tda9887 is
+ *				inverted. So a 0 here means a 1 in the B6 bit.
+ * @port2_active:		This setting sets the default value for PORT2.
+ *				0 means inactive, 1 means active. Note: the
+ *				actual bit value written to the tda9887 is
+ *				inverted. So a 0 here means a 1 in the B7 bit.
+ * @port1_invert_for_secam_lc:	Sometimes PORT1 is inverted when the SECAM-L'
+ *				standard is selected. Set this bit to 1 if this
+ *				is needed.
+ * @port2_invert_for_secam_lc:	Sometimes PORT2 is inverted when the SECAM-L'
+ *				standard is selected. Set this bit to 1 if this
+ *				is needed.
+ * @port1_set_for_fm_mono:	Some cards require PORT1 to be 1 for mono Radio
+ *				FM and 0 for stereo.
+ * @default_pll_gating_18:	Select 18% (or according to datasheet 0%)
+ *				L standard PLL gating, vs the driver default
+ *				of 36%.
+ * @radio_if:			IF to use in radio mode.  Tuners with a
+ *				separate radio IF filter seem to use 10.7,
+ *				while those without use 33.3 for PAL/SECAM
+ *				tuners and 41.3 for NTSC tuners.
+ *				0 = 10.7, 1 = 33.3, 2 = 41.3
+ * @default_top_low:		Default tda9887 TOP value in dB for the low
+ *				band. Default is 0. Range: -16:+15
+ * @default_top_mid:		Default tda9887 TOP value in dB for the mid
+ *				band. Default is 0. Range: -16:+15
+ * @default_top_high:		Default tda9887 TOP value in dB for the high
+ *				band. Default is 0. Range: -16:+15
+ * @default_top_secam_low:	Default tda9887 TOP value in dB for SECAM-L/L'
+ *				for the low band. Default is 0. Several tuners
+ *				require a different TOP value for the
+ *				SECAM-L/L' standards. Range: -16:+15
+ * @default_top_secam_mid:	Default tda9887 TOP value in dB for SECAM-L/L'
+ *				for the mid band. Default is 0. Several tuners
+ *				require a different TOP value for the
+ *				SECAM-L/L' standards. Range: -16:+15
+ * @default_top_secam_high:	Default tda9887 TOP value in dB for SECAM-L/L'
+ *				for the high band. Default is 0. Several tuners
+ *				require a different TOP value for the
+ *				SECAM-L/L' standards. Range: -16:+15
+ * @iffreq:			Intermediate frequency (IF) used by the tuner
+ *				on digital mode.
+ * @count:			Size of the ranges array.
+ * @ranges:			Array with the frequency ranges supported by
+ *				the tuner.
+ */
 struct tuner_params {
 	enum param_type type;
 
-	/* Many Philips based tuners have a comment like this in their
-	 * datasheet:
-	 *
-	 *   For channel selection involving band switching, and to ensure
-	 *   smooth tuning to the desired channel without causing
-	 *   unnecessary charge pump action, it is recommended to consider
-	 *   the difference between wanted channel frequency and the
-	 *   current channel frequency.  Unnecessary charge pump action
-	 *   will result in very low tuning voltage which may drive the
-	 *   oscillator to extreme conditions.
-	 *
-	 * Set cb_first_if_lower_freq to 1, if this check is
-	 * required for this tuner.
-	 *
-	 * I tested this for PAL by first setting the TV frequency to
-	 * 203 MHz and then switching to 96.6 MHz FM radio. The result was
-	 * static unless the control byte was sent first.
-	 */
 	unsigned int cb_first_if_lower_freq:1;
-	/* Set to 1 if this tuner uses a tda9887 */
 	unsigned int has_tda9887:1;
-	/* Many Philips tuners use tda9887 PORT1 to select the FM radio
-	   sensitivity. If this setting is 1, then set PORT1 to 1 to
-	   get proper FM reception. */
 	unsigned int port1_fm_high_sensitivity:1;
-	/* Some Philips tuners use tda9887 PORT2 to select the FM radio
-	   sensitivity. If this setting is 1, then set PORT2 to 1 to
-	   get proper FM reception. */
 	unsigned int port2_fm_high_sensitivity:1;
-	/* Some Philips tuners use tda9887 cGainNormal to select the FM radio
-	   sensitivity. If this setting is 1, e register will use cGainNormal
-	   instead of cGainLow. */
 	unsigned int fm_gain_normal:1;
-	/* Most tuners with a tda9887 use QSS mode. Some (cheaper) tuners
-	   use Intercarrier mode. If this setting is 1, then the tuner
-	   needs to be set to intercarrier mode. */
 	unsigned int intercarrier_mode:1;
-	/* This setting sets the default value for PORT1.
-	   0 means inactive, 1 means active. Note: the actual bit
-	   value written to the tda9887 is inverted. So a 0 here
-	   means a 1 in the B6 bit. */
 	unsigned int port1_active:1;
-	/* This setting sets the default value for PORT2.
-	   0 means inactive, 1 means active. Note: the actual bit
-	   value written to the tda9887 is inverted. So a 0 here
-	   means a 1 in the B7 bit. */
 	unsigned int port2_active:1;
-	/* Sometimes PORT1 is inverted when the SECAM-L' standard is selected.
-	   Set this bit to 1 if this is needed. */
 	unsigned int port1_invert_for_secam_lc:1;
-	/* Sometimes PORT2 is inverted when the SECAM-L' standard is selected.
-	   Set this bit to 1 if this is needed. */
 	unsigned int port2_invert_for_secam_lc:1;
-	/* Some cards require PORT1 to be 1 for mono Radio FM and 0 for stereo. */
 	unsigned int port1_set_for_fm_mono:1;
-	/* Select 18% (or according to datasheet 0%) L standard PLL gating,
-	   vs the driver default of 36%. */
 	unsigned int default_pll_gating_18:1;
-	/* IF to use in radio mode.  Tuners with a separate radio IF filter
-	   seem to use 10.7, while those without use 33.3 for PAL/SECAM tuners
-	   and 41.3 for NTSC tuners. 0 = 10.7, 1 = 33.3, 2 = 41.3 */
 	unsigned int radio_if:2;
-	/* Default tda9887 TOP value in dB for the low band. Default is 0.
-	   Range: -16:+15 */
 	signed int default_top_low:5;
-	/* Default tda9887 TOP value in dB for the mid band. Default is 0.
-	   Range: -16:+15 */
 	signed int default_top_mid:5;
-	/* Default tda9887 TOP value in dB for the high band. Default is 0.
-	   Range: -16:+15 */
 	signed int default_top_high:5;
-	/* Default tda9887 TOP value in dB for SECAM-L/L' for the low band.
-	   Default is 0. Several tuners require a different TOP value for
-	   the SECAM-L/L' standards. Range: -16:+15 */
 	signed int default_top_secam_low:5;
-	/* Default tda9887 TOP value in dB for SECAM-L/L' for the mid band.
-	   Default is 0. Several tuners require a different TOP value for
-	   the SECAM-L/L' standards. Range: -16:+15 */
 	signed int default_top_secam_mid:5;
-	/* Default tda9887 TOP value in dB for SECAM-L/L' for the high band.
-	   Default is 0. Several tuners require a different TOP value for
-	   the SECAM-L/L' standards. Range: -16:+15 */
 	signed int default_top_secam_high:5;
 
 	u16 iffreq;

commit 23a88108cf6d5fa8073a3b2af804fff7305e86e3
Author: Michael Krufky <mkrufky@linuxtv.org>
Date:   Tue Apr 22 14:45:53 2008 -0300

    V4L/DVB (7352): tuner-simple: enable digital tuning support for Philips FMD1216ME
    
    Enable digital tuning support within tuner-simple. This will allow for a
    single tuner module to manage the hardware, without having dvb-pll loaded.
    
    Signed-off-by: Michael Krufky <mkrufky@linuxtv.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@infradead.org>

diff --git a/include/media/tuner-types.h b/include/media/tuner-types.h
index fda12093cab3..ab03c5344209 100644
--- a/include/media/tuner-types.h
+++ b/include/media/tuner-types.h
@@ -119,7 +119,7 @@ struct tunertype {
 
 	u16 min;
 	u16 max;
-	u16 stepsize;
+	u32 stepsize;
 
 	u8 *initdata;
 	u8 *sleepdata;

commit 6f4a57292f4f0a0fef5e4e39cb394fedcf2acf9f
Author: Michael Krufky <mkrufky@linuxtv.org>
Date:   Tue Apr 22 14:45:53 2008 -0300

    V4L/DVB (7351): tuner-simple: add init and sleep methods
    
    taken from dvb-pll
    
    Signed-off-by: Michael Krufky <mkrufky@linuxtv.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@infradead.org>

diff --git a/include/media/tuner-types.h b/include/media/tuner-types.h
index 4b5e5cf780c8..fda12093cab3 100644
--- a/include/media/tuner-types.h
+++ b/include/media/tuner-types.h
@@ -120,6 +120,9 @@ struct tunertype {
 	u16 min;
 	u16 max;
 	u16 stepsize;
+
+	u8 *initdata;
+	u8 *sleepdata;
 };
 
 extern struct tunertype tuners[];

commit 62325497db6ef3b13cae41d5038e2693997d7d3e
Author: Michael Krufky <mkrufky@linuxtv.org>
Date:   Tue Apr 22 14:45:52 2008 -0300

    V4L/DVB (7347): tuner-simple: add basic support for digital tuning of hybrid devices
    
    Add entry points used for digital tuning via the dvb_frontend.
    
    Share state data between multiple instances of the driver for hybrid
    tuners.
    
    Signed-off-by: Michael Krufky <mkrufky@linuxtv.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@infradead.org>

diff --git a/include/media/tuner-types.h b/include/media/tuner-types.h
index b201371416a0..4b5e5cf780c8 100644
--- a/include/media/tuner-types.h
+++ b/include/media/tuner-types.h
@@ -6,10 +6,11 @@
 #define __TUNER_TYPES_H__
 
 enum param_type {
-	TUNER_PARAM_TYPE_RADIO, \
-	TUNER_PARAM_TYPE_PAL, \
-	TUNER_PARAM_TYPE_SECAM, \
-	TUNER_PARAM_TYPE_NTSC
+	TUNER_PARAM_TYPE_RADIO,
+	TUNER_PARAM_TYPE_PAL,
+	TUNER_PARAM_TYPE_SECAM,
+	TUNER_PARAM_TYPE_NTSC,
+	TUNER_PARAM_TYPE_DIGITAL,
 };
 
 struct tuner_range {
@@ -105,6 +106,7 @@ struct tuner_params {
 	   the SECAM-L/L' standards. Range: -16:+15 */
 	signed int default_top_secam_high:5;
 
+	u16 iffreq;
 
 	unsigned int count;
 	struct tuner_range *ranges;
@@ -114,6 +116,10 @@ struct tunertype {
 	char *name;
 	unsigned int count;
 	struct tuner_params *params;
+
+	u16 min;
+	u16 max;
+	u16 stepsize;
 };
 
 extern struct tunertype tuners[];

commit 5e082f1521598a91c9194b2356b157cade9b6e87
Author: Trent Piepho <xyzzy@speakeasy.org>
Date:   Fri Aug 3 18:32:38 2007 -0300

    V4L/DVB (5978): tuner: Better tuner radio support
    
    Add radio support for the Thomson DTT7612 tuner.
    
    This tuner uses a different 1st intermediate frequency than the other radio
    tuners supported (a lot of NTSC radio tuners probably need this change too).
    
    Add a new tuner-simple parameter, radio_if.  It selects the 1st IF used for
    radio reception.  The radio frequency setting code in tuner-simple now uses
    this field, instead of a special case select() block for each tuner with radio
    support.
    
    The tuner parameters for tuners that used a 33.3 MHz RIF now set radio_if to 1
    in tuner-types.c.
    
    The Thomson DTT7612 gets radio_if = 2, also add has_tda9887 = 1 and
    fm_gain_normal = 1.
    
    Add some defines for tda9887 bits that control IF setting in radio mode.
    
    Add a new tda9887 config option, TDA9887_RIF_41_3, that selects a 41.3 MHz
    radio IF.
    
    Fix the way tda9887 radio options work.  The driver was modifying the default
    radio mode config templates based on the TDA9887_XXXX flags.  This means that
    _all_ tuners would get the same settings.  If you had a one tuner than used
    TDA9887_GAIN_NORMAL and one that didn't, both would get the setting.  Now the
    tda9987 driver just checks if tuner mode is radio and then applies the config
    settings directly to the data being sent, just like how all the TV mode
    settings already work.
    
    The PLL setting math is made a little more accurate.
    
    And a grammar error in a printk is fixed.
    
    Signed-off-by:  Trent Piepho <xyzzy@speakeasy.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@infradead.org>

diff --git a/include/media/tuner-types.h b/include/media/tuner-types.h
index e5ad3fcfe984..b201371416a0 100644
--- a/include/media/tuner-types.h
+++ b/include/media/tuner-types.h
@@ -79,6 +79,10 @@ struct tuner_params {
 	/* Select 18% (or according to datasheet 0%) L standard PLL gating,
 	   vs the driver default of 36%. */
 	unsigned int default_pll_gating_18:1;
+	/* IF to use in radio mode.  Tuners with a separate radio IF filter
+	   seem to use 10.7, while those without use 33.3 for PAL/SECAM tuners
+	   and 41.3 for NTSC tuners. 0 = 10.7, 1 = 33.3, 2 = 41.3 */
+	unsigned int radio_if:2;
 	/* Default tda9887 TOP value in dB for the low band. Default is 0.
 	   Range: -16:+15 */
 	signed int default_top_low:5;

commit 483deb0f2b38060c1f2de216c09f05b1869b0d52
Author: Mauro Carvalho Chehab <mchehab@infradead.org>
Date:   Mon Dec 4 08:31:38 2006 -0300

    V4L/DVB (4935): Added the capability of selecting fm gain by tuner
    
    Some tuners require using cGainNormal instead of cGainLow for
    high sensibility on FM reception.
    
    Signed-off-by: Mauro Carvalho Chehab <mchehab@infradead.org>

diff --git a/include/media/tuner-types.h b/include/media/tuner-types.h
index 37dad07a8439..e5ad3fcfe984 100644
--- a/include/media/tuner-types.h
+++ b/include/media/tuner-types.h
@@ -50,6 +50,10 @@ struct tuner_params {
 	   sensitivity. If this setting is 1, then set PORT2 to 1 to
 	   get proper FM reception. */
 	unsigned int port2_fm_high_sensitivity:1;
+	/* Some Philips tuners use tda9887 cGainNormal to select the FM radio
+	   sensitivity. If this setting is 1, e register will use cGainNormal
+	   instead of cGainLow. */
+	unsigned int fm_gain_normal:1;
 	/* Most tuners with a tda9887 use QSS mode. Some (cheaper) tuners
 	   use Intercarrier mode. If this setting is 1, then the tuner
 	   needs to be set to intercarrier mode. */

commit d7304dee3b7e29e801ba59bbf9a47440c196263d
Author: Trent Piepho <xyzzy@speakeasy.org>
Date:   Thu Aug 24 22:43:45 2006 -0300

    V4L/DVB (4533): Tda9887: add configuration setting for L standard PLL gating
    
    Add a tuner config parameter for TDA9887, default_pll_gating_18, that
    changes the L standard PLL gating value from 36% to 0% (datasheet says
    0%, tda9887 code says 18%).
    Turn this on for Microtune 4049FM5, as recomended by tuner datasheet.
    
    Signed-off-by: Trent Piepho <xyzzy@speakeasy.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@infradead.org>

diff --git a/include/media/tuner-types.h b/include/media/tuner-types.h
index 3c43b95f4c0d..37dad07a8439 100644
--- a/include/media/tuner-types.h
+++ b/include/media/tuner-types.h
@@ -72,6 +72,9 @@ struct tuner_params {
 	unsigned int port2_invert_for_secam_lc:1;
 	/* Some cards require PORT1 to be 1 for mono Radio FM and 0 for stereo. */
 	unsigned int port1_set_for_fm_mono:1;
+	/* Select 18% (or according to datasheet 0%) L standard PLL gating,
+	   vs the driver default of 36%. */
+	unsigned int default_pll_gating_18:1;
 	/* Default tda9887 TOP value in dB for the low band. Default is 0.
 	   Range: -16:+15 */
 	signed int default_top_low:5;

commit ba8fc39954bf3bc51f502e8a02f959d45edd096c
Author: Hans Verkuil <hverkuil@xs4all.nl>
Date:   Sun Jun 25 15:34:39 2006 -0300

    V4L/DVB (4270): Add tda9887-specific tuner configuration
    
    Many tda9887 settings depend on the chosen tuner. Expand the tuner parameters
    to include these tda9887 settings.
    
    Signed-off-by: Hans Verkuil <hverkuil@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@infradead.org>

diff --git a/include/media/tuner-types.h b/include/media/tuner-types.h
index ad9c171bfa07..3c43b95f4c0d 100644
--- a/include/media/tuner-types.h
+++ b/include/media/tuner-types.h
@@ -20,6 +20,7 @@ struct tuner_range {
 
 struct tuner_params {
 	enum param_type type;
+
 	/* Many Philips based tuners have a comment like this in their
 	 * datasheet:
 	 *
@@ -39,6 +40,60 @@ struct tuner_params {
 	 * static unless the control byte was sent first.
 	 */
 	unsigned int cb_first_if_lower_freq:1;
+	/* Set to 1 if this tuner uses a tda9887 */
+	unsigned int has_tda9887:1;
+	/* Many Philips tuners use tda9887 PORT1 to select the FM radio
+	   sensitivity. If this setting is 1, then set PORT1 to 1 to
+	   get proper FM reception. */
+	unsigned int port1_fm_high_sensitivity:1;
+	/* Some Philips tuners use tda9887 PORT2 to select the FM radio
+	   sensitivity. If this setting is 1, then set PORT2 to 1 to
+	   get proper FM reception. */
+	unsigned int port2_fm_high_sensitivity:1;
+	/* Most tuners with a tda9887 use QSS mode. Some (cheaper) tuners
+	   use Intercarrier mode. If this setting is 1, then the tuner
+	   needs to be set to intercarrier mode. */
+	unsigned int intercarrier_mode:1;
+	/* This setting sets the default value for PORT1.
+	   0 means inactive, 1 means active. Note: the actual bit
+	   value written to the tda9887 is inverted. So a 0 here
+	   means a 1 in the B6 bit. */
+	unsigned int port1_active:1;
+	/* This setting sets the default value for PORT2.
+	   0 means inactive, 1 means active. Note: the actual bit
+	   value written to the tda9887 is inverted. So a 0 here
+	   means a 1 in the B7 bit. */
+	unsigned int port2_active:1;
+	/* Sometimes PORT1 is inverted when the SECAM-L' standard is selected.
+	   Set this bit to 1 if this is needed. */
+	unsigned int port1_invert_for_secam_lc:1;
+	/* Sometimes PORT2 is inverted when the SECAM-L' standard is selected.
+	   Set this bit to 1 if this is needed. */
+	unsigned int port2_invert_for_secam_lc:1;
+	/* Some cards require PORT1 to be 1 for mono Radio FM and 0 for stereo. */
+	unsigned int port1_set_for_fm_mono:1;
+	/* Default tda9887 TOP value in dB for the low band. Default is 0.
+	   Range: -16:+15 */
+	signed int default_top_low:5;
+	/* Default tda9887 TOP value in dB for the mid band. Default is 0.
+	   Range: -16:+15 */
+	signed int default_top_mid:5;
+	/* Default tda9887 TOP value in dB for the high band. Default is 0.
+	   Range: -16:+15 */
+	signed int default_top_high:5;
+	/* Default tda9887 TOP value in dB for SECAM-L/L' for the low band.
+	   Default is 0. Several tuners require a different TOP value for
+	   the SECAM-L/L' standards. Range: -16:+15 */
+	signed int default_top_secam_low:5;
+	/* Default tda9887 TOP value in dB for SECAM-L/L' for the mid band.
+	   Default is 0. Several tuners require a different TOP value for
+	   the SECAM-L/L' standards. Range: -16:+15 */
+	signed int default_top_secam_mid:5;
+	/* Default tda9887 TOP value in dB for SECAM-L/L' for the high band.
+	   Default is 0. Several tuners require a different TOP value for
+	   the SECAM-L/L' standards. Range: -16:+15 */
+	signed int default_top_secam_high:5;
+
 
 	unsigned int count;
 	struct tuner_range *ranges;

commit bbab6fd81f26b210f0815d79064a3387c3a1ade3
Author: Michael Krufky <mkrufky@m1k.net>
Date:   Mon Feb 6 09:15:11 2006 -0200

    V4L/DVB (3265): Add count to tunertype struct
    
    The tuner_params element is an array of undefined length,
    with each array member being a set of parameters for each
    video standard type.
    The number of members in the tuner_params array
    will be stored in tuners[]->count
    
    Signed-off-by: Michael Krufky <mkrufky@m1k.net>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@infradead.org>

diff --git a/include/media/tuner-types.h b/include/media/tuner-types.h
index 53ac66e0114b..ad9c171bfa07 100644
--- a/include/media/tuner-types.h
+++ b/include/media/tuner-types.h
@@ -46,6 +46,7 @@ struct tuner_params {
 
 struct tunertype {
 	char *name;
+	unsigned int count;
 	struct tuner_params *params;
 };
 

commit 3fc46d35b30cfae018c4903228a270c9543f4d7a
Author: Michael Krufky <mkrufky@m1k.net>
Date:   Mon Jan 23 17:11:11 2006 -0200

    V4L/DVB (3436): move config byte from tuner_params to tuner_range struct.
    
    - Move config byte from tuner_params to tuner_range struct.
    - dvb tuners must be able to set different config byte for each range.
    
    Signed-off-by: Michael Krufky <mkrufky@m1k.net>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@infradead.org>

diff --git a/include/media/tuner-types.h b/include/media/tuner-types.h
index 15821ab14a9e..53ac66e0114b 100644
--- a/include/media/tuner-types.h
+++ b/include/media/tuner-types.h
@@ -14,6 +14,7 @@ enum param_type {
 
 struct tuner_range {
 	unsigned short limit;
+	unsigned char config;
 	unsigned char cb;
 };
 
@@ -38,7 +39,6 @@ struct tuner_params {
 	 * static unless the control byte was sent first.
 	 */
 	unsigned int cb_first_if_lower_freq:1;
-	unsigned char config; /* to be moved into struct tuner_range for dvb-pll merge */
 
 	unsigned int count;
 	struct tuner_range *ranges;

commit de03d21b908bd4c49f1fe7b0c4dc5876551cf819
Author: Michael Krufky <mkrufky@m1k.net>
Date:   Sun Jan 15 16:04:04 2006 -0200

    V4L/DVB (3388): tuner_params->tda988x is currently unused, so disable
    
    - Tuner_params->tda988x is unused right now, so let's disable it for 2.6.16
    - This is currently happening at the card level, but the plan
      is to move this configuration into the tuner_params configuration.
    
    Signed-off-by: Michael Krufky <mkrufky@m1k.net>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@infradead.org>

diff --git a/include/media/tuner-types.h b/include/media/tuner-types.h
index 9f0e9c1cb6ff..15821ab14a9e 100644
--- a/include/media/tuner-types.h
+++ b/include/media/tuner-types.h
@@ -19,7 +19,6 @@ struct tuner_range {
 
 struct tuner_params {
 	enum param_type type;
-	unsigned int tda988x;
 	/* Many Philips based tuners have a comment like this in their
 	 * datasheet:
 	 *
@@ -31,7 +30,7 @@ struct tuner_params {
 	 *   will result in very low tuning voltage which may drive the
 	 *   oscillator to extreme conditions.
 	 *
-	 * Set cb_first_if_lower_freq to 1, if this check is 
+	 * Set cb_first_if_lower_freq to 1, if this check is
 	 * required for this tuner.
 	 *
 	 * I tested this for PAL by first setting the TV frequency to

commit 01872c5d253298b9f360c7c9b9f33504b6ad5469
Author: Michael Krufky <mkrufky@m1k.net>
Date:   Sun Jan 15 15:47:02 2006 -0200

    V4L/DVB (3387): clean up some comments
    
    - clean up some comments
    
    Signed-off-by: Michael Krufky <mkrufky@m1k.net>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@infradead.org>

diff --git a/include/media/tuner-types.h b/include/media/tuner-types.h
index b37d59d5a103..9f0e9c1cb6ff 100644
--- a/include/media/tuner-types.h
+++ b/include/media/tuner-types.h
@@ -31,7 +31,8 @@ struct tuner_params {
 	 *   will result in very low tuning voltage which may drive the
 	 *   oscillator to extreme conditions.
 	 *
-	 * Set this flag to 1 if this tuner needs this check.
+	 * Set cb_first_if_lower_freq to 1, if this check is 
+	 * required for this tuner.
 	 *
 	 * I tested this for PAL by first setting the TV frequency to
 	 * 203 MHz and then switching to 96.6 MHz FM radio. The result was

commit 27487d44712aaa37710cc508d5bd6119f5e9f976
Author: Hans Verkuil <hverkuil@xs4all.nl>
Date:   Sun Jan 15 15:04:52 2006 -0200

    V4L/DVB (3384): Separate tv & radio freqs, fix cb/freq transmit order for tuners that need this.
    
    - Moved MSP_SET_MATRIX to v4l2-common.h
    - Fix typos and integer overflows in tea5767.c
    - Split old freq field into a tv_freq and a radio_freq. Prevents
      that a radio tuner is initialized with a tv frequency or vice versa.
    - When switching to radio mode initialize the tuner with the last
      used radio frequency (this was already done for the TV mode).
      As a result of these changes the tuner module now remembers the
      last set radio and TV frequencies, which is what you would expect
      to happen.
    - Move out of range frequencies to the closest valid frequency as per
      v4l2 API spec.
    - Fix incorrect initial radio frequency (multiplier is 16000, not 16)
    - Add boundary check for out of range frequencies.
    - Use new flag to check if the order of the CB and freq. depends on
      the last set frequency. That is needed for some tuners or you can
      get static as a result. The flag is added for those tuners where I know
      that the datasheet indicates that this is necessary.
    - For this new check use the last set div value, not the last frequency
      as radio frequencies are always much higher due to the 16000 multiplier.
    
    Signed-off-by: Hans Verkuil <hverkuil@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@infradead.org>

diff --git a/include/media/tuner-types.h b/include/media/tuner-types.h
index 756693188991..b37d59d5a103 100644
--- a/include/media/tuner-types.h
+++ b/include/media/tuner-types.h
@@ -20,6 +20,24 @@ struct tuner_range {
 struct tuner_params {
 	enum param_type type;
 	unsigned int tda988x;
+	/* Many Philips based tuners have a comment like this in their
+	 * datasheet:
+	 *
+	 *   For channel selection involving band switching, and to ensure
+	 *   smooth tuning to the desired channel without causing
+	 *   unnecessary charge pump action, it is recommended to consider
+	 *   the difference between wanted channel frequency and the
+	 *   current channel frequency.  Unnecessary charge pump action
+	 *   will result in very low tuning voltage which may drive the
+	 *   oscillator to extreme conditions.
+	 *
+	 * Set this flag to 1 if this tuner needs this check.
+	 *
+	 * I tested this for PAL by first setting the TV frequency to
+	 * 203 MHz and then switching to 96.6 MHz FM radio. The result was
+	 * static unless the control byte was sent first.
+	 */
+	unsigned int cb_first_if_lower_freq:1;
 	unsigned char config; /* to be moved into struct tuner_range for dvb-pll merge */
 
 	unsigned int count;

commit 8f0bb9c069fc487dadebe4cdd1e03f0df5ebf0e6
Author: Michael Krufky <mkrufky@m1k.net>
Date:   Sun Jan 15 12:46:18 2006 -0200

    V4L/DVB (3383): Move tda988x options into tuner_params struct.
    
    - Tda988x parameters should be defined per tuner_param_type,
    for each tuner_params array member.
    
    Signed-off-by: Michael Krufky <mkrufky@m1k.net>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@infradead.org>

diff --git a/include/media/tuner-types.h b/include/media/tuner-types.h
index 64b16b1f1926..756693188991 100644
--- a/include/media/tuner-types.h
+++ b/include/media/tuner-types.h
@@ -19,6 +19,7 @@ struct tuner_range {
 
 struct tuner_params {
 	enum param_type type;
+	unsigned int tda988x;
 	unsigned char config; /* to be moved into struct tuner_range for dvb-pll merge */
 
 	unsigned int count;
@@ -27,7 +28,6 @@ struct tuner_params {
 
 struct tunertype {
 	char *name;
-	unsigned int has_tda988x:1;
 	struct tuner_params *params;
 };
 

commit c943aa859c392eb4cc76d911daa1f261555075b2
Author: Michael Krufky <mkrufky@m1k.net>
Date:   Fri Jan 13 14:10:26 2006 -0200

    V4L/DVB (3364): disable all dvb tuner param_types until we need them
    
    - Add param_type dvbs2
    - disable all dvb param_types, which will not
      be needed until we merge dvb-pll.
    
    Signed-off-by: Michael Krufky <mkrufky@m1k.net>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@infradead.org>

diff --git a/include/media/tuner-types.h b/include/media/tuner-types.h
index 9f6e4a98c40a..64b16b1f1926 100644
--- a/include/media/tuner-types.h
+++ b/include/media/tuner-types.h
@@ -9,11 +9,7 @@ enum param_type {
 	TUNER_PARAM_TYPE_RADIO, \
 	TUNER_PARAM_TYPE_PAL, \
 	TUNER_PARAM_TYPE_SECAM, \
-	TUNER_PARAM_TYPE_NTSC, \
-	TUNER_PARAM_TYPE_ATSC, \
-	TUNER_PARAM_TYPE_DVBT, \
-	TUNER_PARAM_TYPE_DVBS, \
-	TUNER_PARAM_TYPE_DVBC
+	TUNER_PARAM_TYPE_NTSC
 };
 
 struct tuner_range {

commit 7b0ac9cdd42b254ae2ec0f6c1cc6389655e4ba96
Author: Michael Krufky <mkrufky@m1k.net>
Date:   Fri Jan 13 14:10:25 2006 -0200

    V4L/DVB (3359): Redesign tuners struct for maximum flexibility
    
    - Tunertype struct redefined to allow one or more tuner_params structs
      per tuner definition, one for each video standard.
    - Each tuner_params struct has an element containing an arbitrary
      amount of tuner_ranges.
      (this is needed for dvb tuners - to be handled later)
    - A tuner_range may be referenced by multiple tuner_params structs.
      There are many duplicates in here. Reusing tuner_range structs,
      rather than defining new ones for each tuner, will cut down on
      memory usage, and is preferred when possible.
    - tunertype struct contains an element, has_tda988x.
      We must set this for all tunertypes that contain a tda988x
      chip, and then we can remove this setting from the various
      card structs.
    - Improves tuners array memory usage efficiency.
    - Right now, all tuners are using the first tuner_params[] array element
      for analog mode. In the future, we will be merging similar tuner
      definitions together, such that each tuner definition will have a
      tuner_params struct for each available video standard. At that point,
      the tuner_params[] array element will be chosen based on the video
      standard in use.
    
    Signed-off-by: Michael Krufky <mkrufky@m1k.net>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@infradead.org>

diff --git a/include/media/tuner-types.h b/include/media/tuner-types.h
new file mode 100644
index 000000000000..9f6e4a98c40a
--- /dev/null
+++ b/include/media/tuner-types.h
@@ -0,0 +1,41 @@
+/*
+ * descriptions for simple tuners.
+ */
+
+#ifndef __TUNER_TYPES_H__
+#define __TUNER_TYPES_H__
+
+enum param_type {
+	TUNER_PARAM_TYPE_RADIO, \
+	TUNER_PARAM_TYPE_PAL, \
+	TUNER_PARAM_TYPE_SECAM, \
+	TUNER_PARAM_TYPE_NTSC, \
+	TUNER_PARAM_TYPE_ATSC, \
+	TUNER_PARAM_TYPE_DVBT, \
+	TUNER_PARAM_TYPE_DVBS, \
+	TUNER_PARAM_TYPE_DVBC
+};
+
+struct tuner_range {
+	unsigned short limit;
+	unsigned char cb;
+};
+
+struct tuner_params {
+	enum param_type type;
+	unsigned char config; /* to be moved into struct tuner_range for dvb-pll merge */
+
+	unsigned int count;
+	struct tuner_range *ranges;
+};
+
+struct tunertype {
+	char *name;
+	unsigned int has_tda988x:1;
+	struct tuner_params *params;
+};
+
+extern struct tunertype tuners[];
+extern unsigned const int tuner_count;
+
+#endif
