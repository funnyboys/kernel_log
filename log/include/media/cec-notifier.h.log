commit 4f39467e523e5fc8064dbabde8e927b1337e5b7e
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Sat Mar 28 13:03:02 2020 +0000

    Update rmk's email address in various drivers
    
    Globally update my email address in six files scattered through the
    tree.
    
    Acked-by: Sam Ravnborg <sam@ravnborg.org>
    Acked-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>

diff --git a/include/media/cec-notifier.h b/include/media/cec-notifier.h
index 38956969fd12..b1c839734124 100644
--- a/include/media/cec-notifier.h
+++ b/include/media/cec-notifier.h
@@ -2,7 +2,7 @@
 /*
  * cec-notifier.h - notify CEC drivers of physical address changes
  *
- * Copyright 2016 Russell King <rmk+kernel@arm.linux.org.uk>
+ * Copyright 2016 Russell King.
  * Copyright 2016-2017 Cisco Systems, Inc. and/or its affiliates. All rights reserved.
  */
 

commit 8082d0a33cbae16d268639586a38cf080777d791
Author: Hans Verkuil <hverkuil-cisco@xs4all.nl>
Date:   Mon Mar 16 10:36:48 2020 +0100

    media: cec-notifier: make cec_notifier_get_conn() static
    
    This function is no longer used by other drivers, so it can be
    made static.
    
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>

diff --git a/include/media/cec-notifier.h b/include/media/cec-notifier.h
index c4a7624c5f83..38956969fd12 100644
--- a/include/media/cec-notifier.h
+++ b/include/media/cec-notifier.h
@@ -19,23 +19,6 @@ struct cec_notifier;
 
 #if IS_REACHABLE(CONFIG_CEC_CORE) && IS_ENABLED(CONFIG_CEC_NOTIFIER)
 
-/**
- * cec_notifier_get_conn - find or create a new cec_notifier for the given
- * device and connector tuple.
- * @dev: device that sends the events.
- * @conn: the connector name from which the event occurs
- *
- * If a notifier for device @dev already exists, then increase the refcount
- * and return that notifier.
- *
- * If it doesn't exist, then allocate a new notifier struct and return a
- * pointer to that new struct.
- *
- * Return NULL if the memory could not be allocated.
- */
-struct cec_notifier *cec_notifier_get_conn(struct device *dev,
-					   const char *conn);
-
 /**
  * cec_notifier_conn_register - find or create a new cec_notifier for the given
  * HDMI device and connector tuple.
@@ -125,12 +108,6 @@ void cec_notifier_set_phys_addr_from_edid(struct cec_notifier *n,
 struct device *cec_notifier_parse_hdmi_phandle(struct device *dev);
 
 #else
-static inline struct cec_notifier *cec_notifier_get_conn(struct device *dev,
-							 const char *conn)
-{
-	/* A non-NULL pointer is expected on success */
-	return (struct cec_notifier *)0xdeadfeed;
-}
 
 static inline struct cec_notifier *
 cec_notifier_conn_register(struct device *hdmi_dev, const char *port_name,

commit 80f13a0823a3663792fbb585c12a11d7e53beb86
Author: Hans Verkuil <hverkuil-cisco@xs4all.nl>
Date:   Mon Mar 16 10:36:47 2020 +0100

    media: cec-notifier: rename conn_name to port_name
    
    This argument refers to a stable name for an HDMI port, mostly i915
    (ACPI) specific. Since we'll be introducing a more generic 'name' argument
    as well later, rename this now to avoid confusion.
    
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>

diff --git a/include/media/cec-notifier.h b/include/media/cec-notifier.h
index 139e93be13b0..c4a7624c5f83 100644
--- a/include/media/cec-notifier.h
+++ b/include/media/cec-notifier.h
@@ -40,11 +40,11 @@ struct cec_notifier *cec_notifier_get_conn(struct device *dev,
  * cec_notifier_conn_register - find or create a new cec_notifier for the given
  * HDMI device and connector tuple.
  * @hdmi_dev: HDMI device that sends the events.
- * @conn_name: the connector name from which the event occurs. May be NULL
+ * @port_name: the connector name from which the event occurs. May be NULL
  * if there is always only one HDMI connector created by the HDMI device.
  * @conn_info: the connector info from which the event occurs (may be NULL)
  *
- * If a notifier for device @dev and connector @conn_name already exists, then
+ * If a notifier for device @dev and connector @port_name already exists, then
  * increase the refcount and return that notifier.
  *
  * If it doesn't exist, then allocate a new notifier struct and return a
@@ -53,7 +53,7 @@ struct cec_notifier *cec_notifier_get_conn(struct device *dev,
  * Return NULL if the memory could not be allocated.
  */
 struct cec_notifier *
-cec_notifier_conn_register(struct device *hdmi_dev, const char *conn_name,
+cec_notifier_conn_register(struct device *hdmi_dev, const char *port_name,
 			   const struct cec_connector_info *conn_info);
 
 /**
@@ -67,11 +67,11 @@ void cec_notifier_conn_unregister(struct cec_notifier *n);
  * cec_notifier_cec_adap_register - find or create a new cec_notifier for the
  * given device.
  * @hdmi_dev: HDMI device that sends the events.
- * @conn_name: the connector name from which the event occurs. May be NULL
+ * @port_name: the connector name from which the event occurs. May be NULL
  * if there is always only one HDMI connector created by the HDMI device.
  * @adap: the cec adapter that registered this notifier.
  *
- * If a notifier for device @dev and connector @conn_name already exists, then
+ * If a notifier for device @dev and connector @port_name already exists, then
  * increase the refcount and return that notifier.
  *
  * If it doesn't exist, then allocate a new notifier struct and return a
@@ -80,7 +80,7 @@ void cec_notifier_conn_unregister(struct cec_notifier *n);
  * Return NULL if the memory could not be allocated.
  */
 struct cec_notifier *
-cec_notifier_cec_adap_register(struct device *hdmi_dev, const char *conn_name,
+cec_notifier_cec_adap_register(struct device *hdmi_dev, const char *port_name,
 			       struct cec_adapter *adap);
 
 /**
@@ -133,7 +133,7 @@ static inline struct cec_notifier *cec_notifier_get_conn(struct device *dev,
 }
 
 static inline struct cec_notifier *
-cec_notifier_conn_register(struct device *hdmi_dev, const char *conn_name,
+cec_notifier_conn_register(struct device *hdmi_dev, const char *port_name,
 			   const struct cec_connector_info *conn_info)
 {
 	/* A non-NULL pointer is expected on success */
@@ -145,7 +145,7 @@ static inline void cec_notifier_conn_unregister(struct cec_notifier *n)
 }
 
 static inline struct cec_notifier *
-cec_notifier_cec_adap_register(struct device *hdmi_dev, const char *conn_name,
+cec_notifier_cec_adap_register(struct device *hdmi_dev, const char *port_name,
 			       struct cec_adapter *adap)
 {
 	/* A non-NULL pointer is expected on success */

commit e6111647934562849ba052052ffbc673b935a9fe
Author: Hans Verkuil <hverkuil-cisco@xs4all.nl>
Date:   Mon Jan 6 12:04:17 2020 +0100

    media: cec: remove unused functions
    
    Remove several functions that are no longer used now that the
    conversion of cec drivers to cec_notifier_conn_(un)register() and
    cec_notifier_cec_adap_(un)register() is complete.
    
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>

diff --git a/include/media/cec-notifier.h b/include/media/cec-notifier.h
index 985afea1ee36..139e93be13b0 100644
--- a/include/media/cec-notifier.h
+++ b/include/media/cec-notifier.h
@@ -36,12 +36,6 @@ struct cec_notifier;
 struct cec_notifier *cec_notifier_get_conn(struct device *dev,
 					   const char *conn);
 
-/**
- * cec_notifier_put - decrease refcount and delete when the refcount reaches 0.
- * @n: notifier
- */
-void cec_notifier_put(struct cec_notifier *n);
-
 /**
  * cec_notifier_conn_register - find or create a new cec_notifier for the given
  * HDMI device and connector tuple.
@@ -138,10 +132,6 @@ static inline struct cec_notifier *cec_notifier_get_conn(struct device *dev,
 	return (struct cec_notifier *)0xdeadfeed;
 }
 
-static inline void cec_notifier_put(struct cec_notifier *n)
-{
-}
-
 static inline struct cec_notifier *
 cec_notifier_conn_register(struct device *hdmi_dev, const char *conn_name,
 			   const struct cec_connector_info *conn_info)
@@ -183,23 +173,6 @@ static inline struct device *cec_notifier_parse_hdmi_phandle(struct device *dev)
 
 #endif
 
-/**
- * cec_notifier_get - find or create a new cec_notifier for the given device.
- * @dev: device that sends the events.
- *
- * If a notifier for device @dev already exists, then increase the refcount
- * and return that notifier.
- *
- * If it doesn't exist, then allocate a new notifier struct and return a
- * pointer to that new struct.
- *
- * Return NULL if the memory could not be allocated.
- */
-static inline struct cec_notifier *cec_notifier_get(struct device *dev)
-{
-	return cec_notifier_get_conn(dev, NULL);
-}
-
 /**
  * cec_notifier_phys_addr_invalidate() - set the physical address to INVALID
  *

commit 10d8f308ba3e4d2c8753dd7a143af6f4a96cc29b
Author: Hans Verkuil <hverkuil-cisco@xs4all.nl>
Date:   Fri Oct 4 13:04:24 2019 +0200

    cec: add cec_adapter to cec_notifier_cec_adap_unregister()
    
    It is possible for one HDMI connector to have multiple CEC adapters. The
    typical real-world scenario is that where one adapter is used when the
    device is in standby, and one that's better/smarter when the device is
    powered up.
    
    The cec-notifier changes were made with that in mind, but I missed that in
    order to support this you need to tell cec_notifier_cec_adap_unregister()
    which adapter you are unregistering from the notifier.
    
    Add this additional argument. It is currently unused, but once all drivers
    use this, the CEC core will be adapted for these use-cases.
    
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Acked-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/e9fc8740-6be6-43a7-beee-ce2d7b54936e@xs4all.nl

diff --git a/include/media/cec-notifier.h b/include/media/cec-notifier.h
index f161f8a493ac..985afea1ee36 100644
--- a/include/media/cec-notifier.h
+++ b/include/media/cec-notifier.h
@@ -93,8 +93,10 @@ cec_notifier_cec_adap_register(struct device *hdmi_dev, const char *conn_name,
  * cec_notifier_cec_adap_unregister - decrease refcount and delete when the
  * refcount reaches 0.
  * @n: notifier. If NULL, then this function does nothing.
+ * @adap: the cec adapter that registered this notifier.
  */
-void cec_notifier_cec_adap_unregister(struct cec_notifier *n);
+void cec_notifier_cec_adap_unregister(struct cec_notifier *n,
+				      struct cec_adapter *adap);
 
 /**
  * cec_notifier_set_phys_addr - set a new physical address.
@@ -160,7 +162,8 @@ cec_notifier_cec_adap_register(struct device *hdmi_dev, const char *conn_name,
 	return (struct cec_notifier *)0xdeadfeed;
 }
 
-static inline void cec_notifier_cec_adap_unregister(struct cec_notifier *n)
+static inline void cec_notifier_cec_adap_unregister(struct cec_notifier *n,
+						    struct cec_adapter *adap)
 {
 }
 

commit b48cb35c6a7babdc317edb4c752ecf3da0691228
Author: Hans Verkuil <hverkuil-cisco@xs4all.nl>
Date:   Thu Jun 20 06:10:00 2019 -0400

    media: cec-notifier: add new notifier functions
    
    In order to support multiple CEC devices for an HDMI connector,
    and to support cec_connector_info, drivers should use either a
    cec_notifier_conn_(un)register pair of functions (HDMI drivers)
    or a cec_notifier_cec_adap_(un)register pair (CEC adapter drivers).
    
    This replaces cec_notifier_get_conn/cec_notifier_put.
    
    For CEC adapters it is also no longer needed to call cec_notifier_register,
    cec_register_cec_notifier and cec_notifier_unregister. This is now
    all handled internally by the new functions.
    
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>

diff --git a/include/media/cec-notifier.h b/include/media/cec-notifier.h
index 0e3bd3415724..f161f8a493ac 100644
--- a/include/media/cec-notifier.h
+++ b/include/media/cec-notifier.h
@@ -42,6 +42,60 @@ struct cec_notifier *cec_notifier_get_conn(struct device *dev,
  */
 void cec_notifier_put(struct cec_notifier *n);
 
+/**
+ * cec_notifier_conn_register - find or create a new cec_notifier for the given
+ * HDMI device and connector tuple.
+ * @hdmi_dev: HDMI device that sends the events.
+ * @conn_name: the connector name from which the event occurs. May be NULL
+ * if there is always only one HDMI connector created by the HDMI device.
+ * @conn_info: the connector info from which the event occurs (may be NULL)
+ *
+ * If a notifier for device @dev and connector @conn_name already exists, then
+ * increase the refcount and return that notifier.
+ *
+ * If it doesn't exist, then allocate a new notifier struct and return a
+ * pointer to that new struct.
+ *
+ * Return NULL if the memory could not be allocated.
+ */
+struct cec_notifier *
+cec_notifier_conn_register(struct device *hdmi_dev, const char *conn_name,
+			   const struct cec_connector_info *conn_info);
+
+/**
+ * cec_notifier_conn_unregister - decrease refcount and delete when the
+ * refcount reaches 0.
+ * @n: notifier. If NULL, then this function does nothing.
+ */
+void cec_notifier_conn_unregister(struct cec_notifier *n);
+
+/**
+ * cec_notifier_cec_adap_register - find or create a new cec_notifier for the
+ * given device.
+ * @hdmi_dev: HDMI device that sends the events.
+ * @conn_name: the connector name from which the event occurs. May be NULL
+ * if there is always only one HDMI connector created by the HDMI device.
+ * @adap: the cec adapter that registered this notifier.
+ *
+ * If a notifier for device @dev and connector @conn_name already exists, then
+ * increase the refcount and return that notifier.
+ *
+ * If it doesn't exist, then allocate a new notifier struct and return a
+ * pointer to that new struct.
+ *
+ * Return NULL if the memory could not be allocated.
+ */
+struct cec_notifier *
+cec_notifier_cec_adap_register(struct device *hdmi_dev, const char *conn_name,
+			       struct cec_adapter *adap);
+
+/**
+ * cec_notifier_cec_adap_unregister - decrease refcount and delete when the
+ * refcount reaches 0.
+ * @n: notifier. If NULL, then this function does nothing.
+ */
+void cec_notifier_cec_adap_unregister(struct cec_notifier *n);
+
 /**
  * cec_notifier_set_phys_addr - set a new physical address.
  * @n: the CEC notifier
@@ -86,6 +140,30 @@ static inline void cec_notifier_put(struct cec_notifier *n)
 {
 }
 
+static inline struct cec_notifier *
+cec_notifier_conn_register(struct device *hdmi_dev, const char *conn_name,
+			   const struct cec_connector_info *conn_info)
+{
+	/* A non-NULL pointer is expected on success */
+	return (struct cec_notifier *)0xdeadfeed;
+}
+
+static inline void cec_notifier_conn_unregister(struct cec_notifier *n)
+{
+}
+
+static inline struct cec_notifier *
+cec_notifier_cec_adap_register(struct device *hdmi_dev, const char *conn_name,
+			       struct cec_adapter *adap)
+{
+	/* A non-NULL pointer is expected on success */
+	return (struct cec_notifier *)0xdeadfeed;
+}
+
+static inline void cec_notifier_cec_adap_unregister(struct cec_notifier *n)
+{
+}
+
 static inline void cec_notifier_set_phys_addr(struct cec_notifier *n, u16 pa)
 {
 }

commit 32a847f9fa40ec1b03ead2c514862764983ff9ca
Author: Dariusz Marcinkiewicz <darekm@google.com>
Date:   Thu Jun 20 05:17:18 2019 -0400

    media: cec: add struct cec_connector_info support
    
    Define struct cec_connector_info in media/cec.h and define
    CEC_CAP_CONNECTOR_INFO. In a later patch this will be moved to
    uapi/linux/cec.h.
    
    The CEC_CAP_CONNECTOR_INFO capability can be set by drivers, but
    cec_allocate_adapter() will remove it again until the public API
    for this can be enabled once all drm drivers wire this up correctly.
    
    Also add the cec_fill_conn_info_from_drm and cec_s_conn_info functions,
    which are needed by drm drivers to fill in the cec_connector info
    based on a drm_connector.
    
    The cec_notifier_(un)register and cec_register_cec_notifier
    prototypes were moved from cec-notifier.h to cec.h since cec.h no longer
    includes cec-notifier.h. These headers included each other before,
    which caused various problems.
    
    Due to these changes the seco-cec driver was changed as well: it
    should include cec-notifier.h, not cec.h.
    
    Signed-off-by: Dariusz Marcinkiewicz <darekm@google.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>

diff --git a/include/media/cec-notifier.h b/include/media/cec-notifier.h
index 57b3a9f6ea1d..0e3bd3415724 100644
--- a/include/media/cec-notifier.h
+++ b/include/media/cec-notifier.h
@@ -63,30 +63,6 @@ void cec_notifier_set_phys_addr(struct cec_notifier *n, u16 pa);
 void cec_notifier_set_phys_addr_from_edid(struct cec_notifier *n,
 					  const struct edid *edid);
 
-/**
- * cec_notifier_register - register a callback with the notifier
- * @n: the CEC notifier
- * @adap: the CEC adapter, passed as argument to the callback function
- * @callback: the callback function
- */
-void cec_notifier_register(struct cec_notifier *n,
-			   struct cec_adapter *adap,
-			   void (*callback)(struct cec_adapter *adap, u16 pa));
-
-/**
- * cec_notifier_unregister - unregister the callback from the notifier.
- * @n: the CEC notifier
- */
-void cec_notifier_unregister(struct cec_notifier *n);
-
-/**
- * cec_register_cec_notifier - register the notifier with the cec adapter.
- * @adap: the CEC adapter
- * @notifier: the CEC notifier
- */
-void cec_register_cec_notifier(struct cec_adapter *adap,
-			       struct cec_notifier *notifier);
-
 /**
  * cec_notifier_parse_hdmi_phandle - find the hdmi device from "hdmi-phandle"
  * @dev: the device with the "hdmi-phandle" device tree property
@@ -119,21 +95,6 @@ static inline void cec_notifier_set_phys_addr_from_edid(struct cec_notifier *n,
 {
 }
 
-static inline void cec_notifier_register(struct cec_notifier *n,
-			 struct cec_adapter *adap,
-			 void (*callback)(struct cec_adapter *adap, u16 pa))
-{
-}
-
-static inline void cec_notifier_unregister(struct cec_notifier *n)
-{
-}
-
-static inline void cec_register_cec_notifier(struct cec_adapter *adap,
-					     struct cec_notifier *notifier)
-{
-}
-
 static inline struct device *cec_notifier_parse_hdmi_phandle(struct device *dev)
 {
 	return ERR_PTR(-ENODEV);

commit fbbd403b3286b4467f8b755efa0f10819cef9bba
Author: Hans Verkuil <hverkuil-cisco@xs4all.nl>
Date:   Wed Apr 10 05:13:28 2019 -0400

    media: cec-notifier: add cec_notifier_parse_hdmi_phandle helper
    
    Add helper function to parse the DT for the hdmi-phandle property
    and return the corresponding struct device pointer.
    
    It takes care to avoid increasing the device refcount since all
    we need is the device pointer. This pointer is used in the
    notifier list as a key, but it is never accessed by the CEC driver.
    
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Reported-by: Wen Yang <wen.yang99@zte.com.cn>
    Acked-by: Wen Yang <wen.yang99@zte.com.cn>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>

diff --git a/include/media/cec-notifier.h b/include/media/cec-notifier.h
index 814eeef35a5c..57b3a9f6ea1d 100644
--- a/include/media/cec-notifier.h
+++ b/include/media/cec-notifier.h
@@ -9,7 +9,7 @@
 #ifndef LINUX_CEC_NOTIFIER_H
 #define LINUX_CEC_NOTIFIER_H
 
-#include <linux/types.h>
+#include <linux/err.h>
 #include <media/cec.h>
 
 struct device;
@@ -87,6 +87,17 @@ void cec_notifier_unregister(struct cec_notifier *n);
 void cec_register_cec_notifier(struct cec_adapter *adap,
 			       struct cec_notifier *notifier);
 
+/**
+ * cec_notifier_parse_hdmi_phandle - find the hdmi device from "hdmi-phandle"
+ * @dev: the device with the "hdmi-phandle" device tree property
+ *
+ * Returns the device pointer referenced by the "hdmi-phandle" property.
+ * Note that the refcount of the returned device is not incremented.
+ * This device pointer is only used as a key value in the notifier
+ * list, but it is never accessed by the CEC driver.
+ */
+struct device *cec_notifier_parse_hdmi_phandle(struct device *dev);
+
 #else
 static inline struct cec_notifier *cec_notifier_get_conn(struct device *dev,
 							 const char *conn)
@@ -122,6 +133,12 @@ static inline void cec_register_cec_notifier(struct cec_adapter *adap,
 					     struct cec_notifier *notifier)
 {
 }
+
+static inline struct device *cec_notifier_parse_hdmi_phandle(struct device *dev)
+{
+	return ERR_PTR(-ENODEV);
+}
+
 #endif
 
 /**

commit 7a78c1e116d2a786fcd541c8828472d462c8821f
Author: Neil Armstrong <narmstrong@baylibre.com>
Date:   Wed Jul 4 17:08:16 2018 +0200

    media: cec-notifier: Get notifier by device and connector name
    
    In non device-tree world, we can need to get the notifier by the driver
    name directly and eventually defer probe if not yet created.
    
    This patch adds a variant of the get function by using the device name
    instead and will not create a notifier if not yet created.
    
    But the i915 driver exposes at least 2 HDMI connectors, this patch also
    adds the possibility to add a connector name tied to the notifier device
    to form a tuple and associate different CEC controllers for each HDMI
    connectors.
    
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Reviewed-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/media/cec-notifier.h b/include/media/cec-notifier.h
index cf0add70b0e7..814eeef35a5c 100644
--- a/include/media/cec-notifier.h
+++ b/include/media/cec-notifier.h
@@ -20,8 +20,10 @@ struct cec_notifier;
 #if IS_REACHABLE(CONFIG_CEC_CORE) && IS_ENABLED(CONFIG_CEC_NOTIFIER)
 
 /**
- * cec_notifier_get - find or create a new cec_notifier for the given device.
+ * cec_notifier_get_conn - find or create a new cec_notifier for the given
+ * device and connector tuple.
  * @dev: device that sends the events.
+ * @conn: the connector name from which the event occurs
  *
  * If a notifier for device @dev already exists, then increase the refcount
  * and return that notifier.
@@ -31,7 +33,8 @@ struct cec_notifier;
  *
  * Return NULL if the memory could not be allocated.
  */
-struct cec_notifier *cec_notifier_get(struct device *dev);
+struct cec_notifier *cec_notifier_get_conn(struct device *dev,
+					   const char *conn);
 
 /**
  * cec_notifier_put - decrease refcount and delete when the refcount reaches 0.
@@ -85,7 +88,8 @@ void cec_register_cec_notifier(struct cec_adapter *adap,
 			       struct cec_notifier *notifier);
 
 #else
-static inline struct cec_notifier *cec_notifier_get(struct device *dev)
+static inline struct cec_notifier *cec_notifier_get_conn(struct device *dev,
+							 const char *conn)
 {
 	/* A non-NULL pointer is expected on success */
 	return (struct cec_notifier *)0xdeadfeed;
@@ -120,6 +124,23 @@ static inline void cec_register_cec_notifier(struct cec_adapter *adap,
 }
 #endif
 
+/**
+ * cec_notifier_get - find or create a new cec_notifier for the given device.
+ * @dev: device that sends the events.
+ *
+ * If a notifier for device @dev already exists, then increase the refcount
+ * and return that notifier.
+ *
+ * If it doesn't exist, then allocate a new notifier struct and return a
+ * pointer to that new struct.
+ *
+ * Return NULL if the memory could not be allocated.
+ */
+static inline struct cec_notifier *cec_notifier_get(struct device *dev)
+{
+	return cec_notifier_get_conn(dev, NULL);
+}
+
 /**
  * cec_notifier_phys_addr_invalidate() - set the physical address to INVALID
  *

commit ab15d248cc96d12c928a69d3485a98d223c607ae
Author: Hans Verkuil <hansverk@cisco.com>
Date:   Wed Feb 7 09:05:46 2018 -0500

    media: include/(uapi/)media: add SPDX license info
    
    Replace the old license information with the corresponding SPDX
    license for those headers that I authored.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>

diff --git a/include/media/cec-notifier.h b/include/media/cec-notifier.h
index 57ec319a7f44..cf0add70b0e7 100644
--- a/include/media/cec-notifier.h
+++ b/include/media/cec-notifier.h
@@ -1,21 +1,9 @@
+/* SPDX-License-Identifier: GPL-2.0-only */
 /*
  * cec-notifier.h - notify CEC drivers of physical address changes
  *
  * Copyright 2016 Russell King <rmk+kernel@arm.linux.org.uk>
  * Copyright 2016-2017 Cisco Systems, Inc. and/or its affiliates. All rights reserved.
- *
- * This program is free software; you may redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; version 2 of the License.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
- * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
- * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
- * SOFTWARE.
  */
 
 #ifndef LINUX_CEC_NOTIFIER_H

commit 1d54267b236c503f4a6ffa501e4b129038ae9480
Merge: da48c948c263 aae4e7a8bc44
Author: Mauro Carvalho Chehab <mchehab@s-opensource.com>
Date:   Tue Aug 8 05:38:41 2017 -0400

    Merge tag 'v4.13-rc4' into patchwork
    
    Linux 4.13-rc4
    
    * tag 'v4.13-rc4': (863 commits)
      Linux 4.13-rc4
      Fix compat_sys_sigpending breakage
      ext4: fix copy paste error in ext4_swap_extents()
      ext4: fix overflow caused by missing cast in ext4_resize_fs()
      ext4, project: expand inode extra size if possible
      ext4: cleanup ext4_expand_extra_isize_ea()
      ext4: restructure ext4_expand_extra_isize
      ext4: fix forgetten xattr lock protection in ext4_expand_extra_isize
      ext4: make xattr inode reads faster
      ext4: inplace xattr block update fails to deduplicate blocks
      ext4: remove unused mode parameter
      ext4: fix warning about stack corruption
      ext4: fix dir_nlink behaviour
      ext4: silence array overflow warning
      ext4: fix SEEK_HOLE/SEEK_DATA for blocksize < pagesize
      platform/x86: intel-vbtn: match power button on press rather than release
      ext4: release discard bio after sending discard commands
      sparc64: Fix exception handling in UltraSPARC-III memcpy.
      arm64: avoid overflow in VA_START and PAGE_OFFSET
      arm64: Fix potential race with hardware DBM in ptep_set_access_flags()
      ...

commit fc1ff45a07abf240aa0c6586c11465c86c8cab8d
Author: Hans Verkuil <hverkuil@xs4all.nl>
Date:   Sat Jul 15 09:32:56 2017 -0300

    media: cec-notifier: small improvements
    
    Allow calling cec_notifier_set_phys_addr and
    cec_notifier_set_phys_addr_from_edid with a NULL notifier, in which
    case these functions do nothing.
    
    Add a cec_notifier_phys_addr_invalidate helper function (the notifier
    equivalent of cec_phys_addr_invalidate).
    
    These changes simplify drm CEC driver support.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>

diff --git a/include/media/cec-notifier.h b/include/media/cec-notifier.h
index 298f996969df..a4f7429c4ae5 100644
--- a/include/media/cec-notifier.h
+++ b/include/media/cec-notifier.h
@@ -57,6 +57,7 @@ void cec_notifier_put(struct cec_notifier *n);
  * @pa: the CEC physical address
  *
  * Set a new CEC physical address.
+ * Does nothing if @n == NULL.
  */
 void cec_notifier_set_phys_addr(struct cec_notifier *n, u16 pa);
 
@@ -66,6 +67,7 @@ void cec_notifier_set_phys_addr(struct cec_notifier *n, u16 pa);
  * @edid: the struct edid pointer
  *
  * Parses the EDID to obtain the new CEC physical address and set it.
+ * Does nothing if @n == NULL.
  */
 void cec_notifier_set_phys_addr_from_edid(struct cec_notifier *n,
 					  const struct edid *edid);
@@ -118,4 +120,17 @@ static inline void cec_notifier_unregister(struct cec_notifier *n)
 
 #endif
 
+/**
+ * cec_notifier_phys_addr_invalidate() - set the physical address to INVALID
+ *
+ * @n: the CEC notifier
+ *
+ * This is a simple helper function to invalidate the physical
+ * address. Does nothing if @n == NULL.
+ */
+static inline void cec_notifier_phys_addr_invalidate(struct cec_notifier *n)
+{
+	cec_notifier_set_phys_addr(n, CEC_PHYS_ADDR_INVALID);
+}
+
 #endif

commit 5150418593015d280dab321da1fe3cea4ed3b693
Author: Hans Verkuil <hverkuil@xs4all.nl>
Date:   Thu Jul 13 04:07:23 2017 -0300

    media: cec: move cec_register_cec_notifier to cec-notifier.h
    
    The cec_register_cec_notifier function was in media/cec.h, but it
    has to be in cec-notifier.h.
    
    While we are at it, also document it and add a stub function for when
    the notifier is disabled or the CEC core code is unreachable.
    
    Based on an earlier patch from Jose Abreu <Jose.Abreu@synopsys.com>.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>

diff --git a/include/media/cec-notifier.h b/include/media/cec-notifier.h
index 298f996969df..73bc98b90afc 100644
--- a/include/media/cec-notifier.h
+++ b/include/media/cec-notifier.h
@@ -86,6 +86,14 @@ void cec_notifier_register(struct cec_notifier *n,
  */
 void cec_notifier_unregister(struct cec_notifier *n);
 
+/**
+ * cec_register_cec_notifier - register the notifier with the cec adapter.
+ * @adap: the CEC adapter
+ * @notifier: the CEC notifier
+ */
+void cec_register_cec_notifier(struct cec_adapter *adap,
+			       struct cec_notifier *notifier);
+
 #else
 static inline struct cec_notifier *cec_notifier_get(struct device *dev)
 {
@@ -116,6 +124,10 @@ static inline void cec_notifier_unregister(struct cec_notifier *n)
 {
 }
 
+static inline void cec_register_cec_notifier(struct cec_adapter *adap,
+					     struct cec_notifier *notifier)
+{
+}
 #endif
 
 #endif

commit 42654ebad0c7f54768068e5daa7a6a44ba43c738
Merge: 6fb05e0dd32e 963761a0b2e8
Author: Mauro Carvalho Chehab <mchehab@s-opensource.com>
Date:   Wed Jun 7 07:50:43 2017 -0300

    Merge tag 'media/v4.12-2' into patchwork
    
    media fixes for v4.12-rc4
    
    * tag 'media/v4.12-2': (598 commits)
      [media] rc-core: race condition during ir_raw_event_register()
      [media] cec: drop MEDIA_CEC_DEBUG
      [media] cec: rename MEDIA_CEC_NOTIFIER to CEC_NOTIFIER
      [media] cec: select CEC_CORE instead of depend on it
      [media] rainshadow-cec: ensure exit_loop is intialized
      [media] atomisp: don't treat warnings as errors
      Linux 4.12-rc3
      x86/ftrace: Make sure that ftrace trampolines are not RWX
      x86/mm/ftrace: Do not bug in early boot on irqs_disabled in cpu_flush_range()
      selftests/ftrace: Add a testcase for many kprobe events
      kprobes/x86: Fix to set RWX bits correctly before releasing trampoline
      ftrace: Fix memory leak in ftrace_graph_release()
      ipv4: add reference counting to metrics
      net: ethernet: ax88796: don't call free_irq without request_irq first
      ip6_tunnel, ip6_gre: fix setting of DSCP on encapsulated packets
      sctp: fix ICMP processing if skb is non-linear
      net: llc: add lock_sock in llc_ui_bind to avoid a race condition
      PCI/msi: fix the pci_alloc_irq_vectors_affinity stub
      blk-mq: Only register debugfs attributes for blk-mq queues
      x86/timers: Move simple_udelay_calibration past init_hypervisor_platform
      ...
    
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>

commit e94c32818d865b620c9bbd2656ab3199259ef9ec
Author: Hans Verkuil <hans.verkuil@cisco.com>
Date:   Sun May 28 05:58:04 2017 -0300

    [media] cec: rename MEDIA_CEC_NOTIFIER to CEC_NOTIFIER
    
    This config option is strictly speaking independent of the
    media subsystem since it can be used by drm as well.
    
    Besides, it looks odd when drivers select CEC_CORE and
    MEDIA_CEC_NOTIFIER, that's inconsistent naming.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>

diff --git a/include/media/cec-notifier.h b/include/media/cec-notifier.h
index eb50ce54b759..413335c8cb52 100644
--- a/include/media/cec-notifier.h
+++ b/include/media/cec-notifier.h
@@ -29,7 +29,7 @@ struct edid;
 struct cec_adapter;
 struct cec_notifier;
 
-#ifdef CONFIG_MEDIA_CEC_NOTIFIER
+#if IS_REACHABLE(CONFIG_CEC_CORE) && IS_ENABLED(CONFIG_CEC_NOTIFIER)
 
 /**
  * cec_notifier_get - find or create a new cec_notifier for the given device.

commit 79eddc992ea45239d93930601f6c773dea51ac84
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Fri May 12 16:39:21 2017 -0300

    [media] cec-notifier.h: handle unreachable CONFIG_CEC_CORE
    
    Fix a link error in this specific combination of config options:
    
    CONFIG_MEDIA_CEC_SUPPORT=y
    CONFIG_CEC_CORE=m
    CONFIG_MEDIA_CEC_NOTIFIER=y
    CONFIG_VIDEO_STI_HDMI_CEC=m
    CONFIG_DRM_STI=y
    
    drivers/gpu/drm/sti/sti_hdmi.o: In function `sti_hdmi_remove':
    sti_hdmi.c:(.text.sti_hdmi_remove+0x10): undefined reference to
    `cec_notifier_set_phys_addr'
    sti_hdmi.c:(.text.sti_hdmi_remove+0x34): undefined reference to
    `cec_notifier_put'
    drivers/gpu/drm/sti/sti_hdmi.o: In function `sti_hdmi_connector_get_modes':
    sti_hdmi.c:(.text.sti_hdmi_connector_get_modes+0x4a): undefined
    reference to `cec_notifier_set_phys_addr_from_edid'
    drivers/gpu/drm/sti/sti_hdmi.o: In function `sti_hdmi_probe':
    sti_hdmi.c:(.text.sti_hdmi_probe+0x204): undefined reference to
    `cec_notifier_get'
    drivers/gpu/drm/sti/sti_hdmi.o: In function `sti_hdmi_connector_detect':
    sti_hdmi.c:(.text.sti_hdmi_connector_detect+0x36): undefined reference
    to `cec_notifier_set_phys_addr'
    drivers/gpu/drm/sti/sti_hdmi.o: In function `sti_hdmi_disable':
    sti_hdmi.c:(.text.sti_hdmi_disable+0xc0): undefined reference to
    `cec_notifier_set_phys_addr'
    
    The version below seems to work, though I don't particularly
    like the IS_REACHABLE() addition since that can be confusing
    to users.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>

diff --git a/include/media/cec-notifier.h b/include/media/cec-notifier.h
index eb50ce54b759..71d7ced2c09e 100644
--- a/include/media/cec-notifier.h
+++ b/include/media/cec-notifier.h
@@ -29,7 +29,7 @@ struct edid;
 struct cec_adapter;
 struct cec_notifier;
 
-#ifdef CONFIG_MEDIA_CEC_NOTIFIER
+#if IS_REACHABLE(CONFIG_CEC_CORE) && IS_ENABLED(CONFIG_MEDIA_CEC_NOTIFIER)
 
 /**
  * cec_notifier_get - find or create a new cec_notifier for the given device.
@@ -106,6 +106,16 @@ static inline void cec_notifier_set_phys_addr_from_edid(struct cec_notifier *n,
 {
 }
 
+static inline void cec_notifier_register(struct cec_notifier *n,
+			 struct cec_adapter *adap,
+			 void (*callback)(struct cec_adapter *adap, u16 pa))
+{
+}
+
+static inline void cec_notifier_unregister(struct cec_notifier *n)
+{
+}
+
 #endif
 
 #endif

commit ee7e987133c381dceea3acab27f1350936f5ec1f
Author: Hans Verkuil <hans.verkuil@cisco.com>
Date:   Mon Apr 17 07:54:37 2017 -0300

    [media] cec.h: merge cec-edid.h into cec.h
    
    Drop the separate cec-edid.h header and merge it into cec.h.
    
    There was really no need to have a separate header for this.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>

diff --git a/include/media/cec-notifier.h b/include/media/cec-notifier.h
index 035712e0993d..eb50ce54b759 100644
--- a/include/media/cec-notifier.h
+++ b/include/media/cec-notifier.h
@@ -22,7 +22,7 @@
 #define LINUX_CEC_NOTIFIER_H
 
 #include <linux/types.h>
-#include <media/cec-edid.h>
+#include <media/cec.h>
 
 struct device;
 struct edid;

commit 6917a7b774133d60e0cfd8f9ac8bb62ae6ba10aa
Author: Hans Verkuil <hans.verkuil@cisco.com>
Date:   Mon Nov 14 11:55:20 2016 -0200

    [media] media: add CEC notifier support
    
    Add support for CEC notifiers, which is used to convey CEC physical address
    information from video drivers to their CEC counterpart driver(s).
    
    Based on an earlier version from Russell King:
    
    https://patchwork.kernel.org/patch/9277043/
    
    The cec_notifier is a reference counted object containing the CEC physical address
    state of a video device.
    
    When a new notifier is registered the current state will be reported to
    that notifier at registration time.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Tested-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Tested-by: Benjamin Gaignard <benjamin.gaignard@linaro.org>
    Acked-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>

diff --git a/include/media/cec-notifier.h b/include/media/cec-notifier.h
new file mode 100644
index 000000000000..035712e0993d
--- /dev/null
+++ b/include/media/cec-notifier.h
@@ -0,0 +1,111 @@
+/*
+ * cec-notifier.h - notify CEC drivers of physical address changes
+ *
+ * Copyright 2016 Russell King <rmk+kernel@arm.linux.org.uk>
+ * Copyright 2016-2017 Cisco Systems, Inc. and/or its affiliates. All rights reserved.
+ *
+ * This program is free software; you may redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; version 2 of the License.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+ * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+ * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+ * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
+ * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
+ * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+ * SOFTWARE.
+ */
+
+#ifndef LINUX_CEC_NOTIFIER_H
+#define LINUX_CEC_NOTIFIER_H
+
+#include <linux/types.h>
+#include <media/cec-edid.h>
+
+struct device;
+struct edid;
+struct cec_adapter;
+struct cec_notifier;
+
+#ifdef CONFIG_MEDIA_CEC_NOTIFIER
+
+/**
+ * cec_notifier_get - find or create a new cec_notifier for the given device.
+ * @dev: device that sends the events.
+ *
+ * If a notifier for device @dev already exists, then increase the refcount
+ * and return that notifier.
+ *
+ * If it doesn't exist, then allocate a new notifier struct and return a
+ * pointer to that new struct.
+ *
+ * Return NULL if the memory could not be allocated.
+ */
+struct cec_notifier *cec_notifier_get(struct device *dev);
+
+/**
+ * cec_notifier_put - decrease refcount and delete when the refcount reaches 0.
+ * @n: notifier
+ */
+void cec_notifier_put(struct cec_notifier *n);
+
+/**
+ * cec_notifier_set_phys_addr - set a new physical address.
+ * @n: the CEC notifier
+ * @pa: the CEC physical address
+ *
+ * Set a new CEC physical address.
+ */
+void cec_notifier_set_phys_addr(struct cec_notifier *n, u16 pa);
+
+/**
+ * cec_notifier_set_phys_addr_from_edid - set parse the PA from the EDID.
+ * @n: the CEC notifier
+ * @edid: the struct edid pointer
+ *
+ * Parses the EDID to obtain the new CEC physical address and set it.
+ */
+void cec_notifier_set_phys_addr_from_edid(struct cec_notifier *n,
+					  const struct edid *edid);
+
+/**
+ * cec_notifier_register - register a callback with the notifier
+ * @n: the CEC notifier
+ * @adap: the CEC adapter, passed as argument to the callback function
+ * @callback: the callback function
+ */
+void cec_notifier_register(struct cec_notifier *n,
+			   struct cec_adapter *adap,
+			   void (*callback)(struct cec_adapter *adap, u16 pa));
+
+/**
+ * cec_notifier_unregister - unregister the callback from the notifier.
+ * @n: the CEC notifier
+ */
+void cec_notifier_unregister(struct cec_notifier *n);
+
+#else
+static inline struct cec_notifier *cec_notifier_get(struct device *dev)
+{
+	/* A non-NULL pointer is expected on success */
+	return (struct cec_notifier *)0xdeadfeed;
+}
+
+static inline void cec_notifier_put(struct cec_notifier *n)
+{
+}
+
+static inline void cec_notifier_set_phys_addr(struct cec_notifier *n, u16 pa)
+{
+}
+
+static inline void cec_notifier_set_phys_addr_from_edid(struct cec_notifier *n,
+							const struct edid *edid)
+{
+}
+
+#endif
+
+#endif
