commit a58946c158a040068e7c94dc1d58bbd273258068
Author: David Howells <dhowells@redhat.com>
Date:   Wed Jun 26 21:02:33 2019 +0100

    keys: Pass the network namespace into request_key mechanism
    
    Create a request_key_net() function and use it to pass the network
    namespace domain tag into DNS revolver keys and rxrpc/AFS keys so that keys
    for different domains can coexist in the same keyring.
    
    Signed-off-by: David Howells <dhowells@redhat.com>
    cc: netdev@vger.kernel.org
    cc: linux-nfs@vger.kernel.org
    cc: linux-cifs@vger.kernel.org
    cc: linux-afs@lists.infradead.org

diff --git a/include/linux/dns_resolver.h b/include/linux/dns_resolver.h
index f2b3ae22e6b7..976cbbdb2832 100644
--- a/include/linux/dns_resolver.h
+++ b/include/linux/dns_resolver.h
@@ -26,7 +26,8 @@
 
 #include <uapi/linux/dns_resolver.h>
 
-extern int dns_query(const char *type, const char *name, size_t namelen,
+struct net;
+extern int dns_query(struct net *net, const char *type, const char *name, size_t namelen,
 		     const char *options, char **_result, time64_t *_expiry,
 		     bool invalidate);
 

commit d0660f0b3b7d1760d1ab60ec8e9d0de52e885207
Author: David Howells <dhowells@redhat.com>
Date:   Fri May 3 18:26:55 2019 +0100

    dns_resolver: Allow used keys to be invalidated
    
    Allow used DNS resolver keys to be invalidated after use if the caller is
    doing its own caching of the results.  This reduces the amount of resources
    required.
    
    Fix AFS to invalidate DNS results to kill off permanent failure records
    that get lodged in the resolver keyring and prevent future lookups from
    happening.
    
    Fixes: 0a5143f2f89c ("afs: Implement VL server rotation")
    Signed-off-by: David Howells <dhowells@redhat.com>

diff --git a/include/linux/dns_resolver.h b/include/linux/dns_resolver.h
index 34a744a1bafc..f2b3ae22e6b7 100644
--- a/include/linux/dns_resolver.h
+++ b/include/linux/dns_resolver.h
@@ -27,6 +27,7 @@
 #include <uapi/linux/dns_resolver.h>
 
 extern int dns_query(const char *type, const char *name, size_t namelen,
-		     const char *options, char **_result, time64_t *_expiry);
+		     const char *options, char **_result, time64_t *_expiry,
+		     bool invalidate);
 
 #endif /* _LINUX_DNS_RESOLVER_H */

commit bbb4c4323a4d9cb5ca04db904aa3050a7586839a
Author: David Howells <dhowells@redhat.com>
Date:   Thu Oct 4 14:27:55 2018 +0100

    dns: Allow the dns resolver to retrieve a server set
    
    Allow the DNS resolver to retrieve a set of servers and their associated
    addresses, ports, preference and weight ratings.
    
    In terms of communication with userspace, "srv=1" is added to the callout
    string (the '1' indicating the maximum data version supported by the
    kernel) to ask the userspace side for this.
    
    If the userspace side doesn't recognise it, it will ignore the option and
    return the usual text address list.
    
    If the userspace side does recognise it, it will return some binary data
    that begins with a zero byte that would cause the string parsers to give an
    error.  The second byte contains the version of the data in the blob (this
    may be between 1 and the version specified in the callout data).  The
    remainder of the payload is version-specific.
    
    In version 1, the payload looks like (note that this is packed):
    
            u8      Non-string marker (ie. 0)
            u8      Content (0 => Server list)
            u8      Version (ie. 1)
            u8      Source (eg. DNS_RECORD_FROM_DNS_SRV)
            u8      Status (eg. DNS_LOOKUP_GOOD)
            u8      Number of servers
            foreach-server {
                    u16     Name length (LE)
                    u16     Priority (as per SRV record) (LE)
                    u16     Weight (as per SRV record) (LE)
                    u16     Port (LE)
                    u8      Source (eg. DNS_RECORD_FROM_NSS)
                    u8      Status (eg. DNS_LOOKUP_GOT_NOT_FOUND)
                    u8      Protocol (eg. DNS_SERVER_PROTOCOL_UDP)
                    u8      Number of addresses
                    char[]  Name (not NUL-terminated)
                    foreach-address {
                            u8              Family (AF_INET{,6})
                            union {
                                    u8[4]   ipv4_addr
                                    u8[16]  ipv6_addr
                            }
                    }
            }
    
    This can then be used to fetch a whole cell's VL-server configuration for
    AFS, for example.
    
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/include/linux/dns_resolver.h b/include/linux/dns_resolver.h
index 6ac3cad9aef1..34a744a1bafc 100644
--- a/include/linux/dns_resolver.h
+++ b/include/linux/dns_resolver.h
@@ -24,11 +24,9 @@
 #ifndef _LINUX_DNS_RESOLVER_H
 #define _LINUX_DNS_RESOLVER_H
 
-#ifdef __KERNEL__
+#include <uapi/linux/dns_resolver.h>
 
 extern int dns_query(const char *type, const char *name, size_t namelen,
 		     const char *options, char **_result, time64_t *_expiry);
 
-#endif /* KERNEL */
-
 #endif /* _LINUX_DNS_RESOLVER_H */

commit 451c2b5caf37b526ae34a1081b71115e1de2d063
Author: Aya Mahfouz <mahfouz.saif.elyazal@gmail.com>
Date:   Wed Nov 18 08:36:44 2015 +0200

    net: dns_resolver: convert time_t to time64_t
    
    Changes the definition of the pointer _expiry from time_t to
    time64_t. This is to handle the Y2038 problem where time_t
    will overflow in the year 2038. The change is safe because
    the kernel subsystems that call dns_query pass NULL.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Aya Mahfouz <mahfouz.saif.elyazal@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/include/linux/dns_resolver.h b/include/linux/dns_resolver.h
index cc92268af89a..6ac3cad9aef1 100644
--- a/include/linux/dns_resolver.h
+++ b/include/linux/dns_resolver.h
@@ -27,7 +27,7 @@
 #ifdef __KERNEL__
 
 extern int dns_query(const char *type, const char *name, size_t namelen,
-		     const char *options, char **_result, time_t *_expiry);
+		     const char *options, char **_result, time64_t *_expiry);
 
 #endif /* KERNEL */
 

commit 1a4240f4764ac78adbf4b0ebb49b3bd8c72ffa11
Author: Wang Lei <wang840925@gmail.com>
Date:   Wed Aug 4 15:16:33 2010 +0100

    DNS: Separate out CIFS DNS Resolver code
    
    Separate out the DNS resolver key type from the CIFS filesystem into its own
    module so that it can be made available for general use, including the AFS
    filesystem module.
    
    This facility makes it possible for the kernel to upcall to userspace to have
    it issue DNS requests, package up the replies and present them to the kernel
    in a useful form.  The kernel is then able to cache the DNS replies as keys
    can be retained in keyrings.
    
    Resolver keys are of type "dns_resolver" and have a case-insensitive
    description that is of the form "[<type>:]<domain_name>".  The optional <type>
    indicates the particular DNS lookup and packaging that's required.  The
    <domain_name> is the query to be made.
    
    If <type> isn't given, a basic hostname to IP address lookup is made, and the
    result is stored in the key in the form of a printable string consisting of a
    comma-separated list of IPv4 and IPv6 addresses.
    
    This key type is supported by userspace helpers driven from /sbin/request-key
    and configured through /etc/request-key.conf.  The cifs.upcall utility is
    invoked for UNC path server name to IP address resolution.
    
    The CIFS functionality is encapsulated by the dns_resolve_unc_to_ip() function,
    which is used to resolve a UNC path to an IP address for CIFS filesystem.  This
    part remains in the CIFS module for now.
    
    See the added Documentation/networking/dns_resolver.txt for more information.
    
    Signed-off-by: Wang Lei <wang840925@gmail.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Acked-by: Jeff Layton <jlayton@redhat.com>
    Signed-off-by: Steve French <sfrench@us.ibm.com>

diff --git a/include/linux/dns_resolver.h b/include/linux/dns_resolver.h
new file mode 100644
index 000000000000..cc92268af89a
--- /dev/null
+++ b/include/linux/dns_resolver.h
@@ -0,0 +1,34 @@
+/*
+ *   DNS Resolver upcall management for CIFS DFS and AFS
+ *   Handles host name to IP address resolution and DNS query for AFSDB RR.
+ *
+ *   Copyright (c) International Business Machines  Corp., 2008
+ *   Author(s): Steve French (sfrench@us.ibm.com)
+ *              Wang Lei (wang840925@gmail.com)
+ *
+ *   This library is free software; you can redistribute it and/or modify
+ *   it under the terms of the GNU Lesser General Public License as published
+ *   by the Free Software Foundation; either version 2.1 of the License, or
+ *   (at your option) any later version.
+ *
+ *   This library is distributed in the hope that it will be useful,
+ *   but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See
+ *   the GNU Lesser General Public License for more details.
+ *
+ *   You should have received a copy of the GNU Lesser General Public License
+ *   along with this library; if not, write to the Free Software
+ *   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+
+#ifndef _LINUX_DNS_RESOLVER_H
+#define _LINUX_DNS_RESOLVER_H
+
+#ifdef __KERNEL__
+
+extern int dns_query(const char *type, const char *name, size_t namelen,
+		     const char *options, char **_result, time_t *_expiry);
+
+#endif /* KERNEL */
+
+#endif /* _LINUX_DNS_RESOLVER_H */
