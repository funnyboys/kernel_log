commit 9c1f2a5dc2948b9f1170d4202c84745f0b0ff0c9
Author: Suman Anna <s-anna@ti.com>
Date:   Tue Jun 4 12:01:46 2019 -0500

    mailbox: omap: Add support for TI K3 SoCs
    
    The TI K3 AM65x and J721E family of SoCs have a new Mailbox IP that
    is based on the existing Mailbox IP present in OMAP architecture based
    SoCs. Each instance of the legacy OMAP Mailbox IP is now a single cluster
    within the newer Mailbox IP instance on K3 architecture based SoCs. A
    single K3 Mailbox IP instance has multiple clusters with each cluster
    providing the same functionality as the existing OMAP Mailbox IP.
    
    Reuse the existing OMAP Mailbox driver to extend the support for this
    newer IP present within the Main NavSS block on K3 SoCs. The K3 family
    of SoCs use 64-bit ARMv8 processors for running Linux, so the driver is
    also enhanced to deal with the differences between the 32-bit message
    payloads and the 64-bit pointers used by the client drivers.
    
    Signed-off-by: Suman Anna <s-anna@ti.com>
    Signed-off-by: Jassi Brar <jaswinder.singh@linaro.org>

diff --git a/include/linux/omap-mailbox.h b/include/linux/omap-mailbox.h
index 6dbcd2da0332..8aa984ec1f38 100644
--- a/include/linux/omap-mailbox.h
+++ b/include/linux/omap-mailbox.h
@@ -6,7 +6,9 @@
 #ifndef OMAP_MAILBOX_H
 #define OMAP_MAILBOX_H
 
-typedef u32 mbox_msg_t;
+typedef uintptr_t mbox_msg_t;
+
+#define omap_mbox_message(data) (u32)(mbox_msg_t)(data)
 
 typedef int __bitwise omap_mbox_irq_t;
 #define IRQ_TX ((__force omap_mbox_irq_t) 1)

commit 2ad5157650b446f14a719280ba3670303bc4f439
Author: Suman Anna <s-anna@ti.com>
Date:   Wed Jul 11 18:42:11 2018 -0500

    mailbox/omap: switch to SPDX license identifier
    
    Use the appropriate SPDX license identifier in the OMAP Mailbox
    driver source files and drop the previous boilerplate license text.
    
    Signed-off-by: Suman Anna <s-anna@ti.com>
    Signed-off-by: Jassi Brar <jaswinder.singh@linaro.org>

diff --git a/include/linux/omap-mailbox.h b/include/linux/omap-mailbox.h
index c726bd833761..6dbcd2da0332 100644
--- a/include/linux/omap-mailbox.h
+++ b/include/linux/omap-mailbox.h
@@ -1,9 +1,6 @@
+/* SPDX-License-Identifier: GPL-2.0 */
 /*
  * omap-mailbox: interprocessor communication module for OMAP
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License version 2 as
- * published by the Free Software Foundation.
  */
 
 #ifndef OMAP_MAILBOX_H

commit dd28216528cf67339cd4f5854166fbd4eefd7fa8
Author: Suman Anna <s-anna@ti.com>
Date:   Wed Apr 6 18:37:20 2016 -0500

    mailbox/omap: kill omap_mbox_{save/restore}_ctx() functions
    
    The omap_mbox_save_ctx() and omap_mbox_restore_ctx() API were
    previously provided to OMAP mailbox clients to save and restore
    the mailbox context during system suspend/resume. The save and
    restore functionality is now implemented through System PM driver
    callbacks, and there is no need for these functions, so kill these
    API.
    
    Signed-off-by: Suman Anna <s-anna@ti.com>
    Signed-off-by: Jassi Brar <jaswinder.singh@linaro.org>

diff --git a/include/linux/omap-mailbox.h b/include/linux/omap-mailbox.h
index 587bbdd31f5a..c726bd833761 100644
--- a/include/linux/omap-mailbox.h
+++ b/include/linux/omap-mailbox.h
@@ -21,8 +21,6 @@ struct mbox_client;
 struct mbox_chan *omap_mbox_request_channel(struct mbox_client *cl,
 					    const char *chan_name);
 
-void omap_mbox_save_ctx(struct mbox_chan *chan);
-void omap_mbox_restore_ctx(struct mbox_chan *chan);
 void omap_mbox_enable_irq(struct mbox_chan *chan, omap_mbox_irq_t irq);
 void omap_mbox_disable_irq(struct mbox_chan *chan, omap_mbox_irq_t irq);
 

commit 8841a66aaa7c3b1dfeeb4192d05f2ca86df58f00
Author: Suman Anna <s-anna@ti.com>
Date:   Mon Nov 3 17:05:50 2014 -0600

    mailbox/omap: adapt to the new mailbox framework
    
    The OMAP mailbox driver and its existing clients (remoteproc
    for OMAP4+) are adapted to use the generic mailbox framework.
    
    The main changes for the adaptation are:
      - The tasklet used for Tx is replaced with the state machine from
        the generic mailbox framework. The workqueue used for processing
        the received messages stays intact for minimizing the effects on
        the OMAP mailbox clients.
      - The existing exported client API, omap_mbox_get, omap_mbox_put and
        omap_mbox_send_msg are deleted, as the framework provides equivalent
        functionality. A OMAP-specific omap_mbox_request_channel is added
        though to support non-DT way of requesting mailboxes.
      - The OMAP mailbox driver is integrated with the mailbox framework
        through the proper implementations of mbox_chan_ops, except for
        .last_tx_done and .peek_data. The OMAP mailbox driver does not need
        these ops, as it is completely interrupt driven.
      - The OMAP mailbox driver uses a custom of_xlate controller ops that
        allows phandles for the pargs specifier instead of indexing to avoid
        any channel registration order dependencies.
      - The new framework does not support multiple clients operating on a
        single channel, so the reference counting logic is simplified.
      - The remoteproc driver (current client) is adapted to use the new API.
        The notifier callbacks used within this client is replaced with the
        regular callbacks from the newer framework.
      - The exported OMAP mailbox API are limited to omap_mbox_save_ctx,
        omap_mbox_restore_ctx, omap_mbox_enable_irq & omap_mbox_disable_irq,
        with the signature modified to take in the new mbox_chan handle instead
        of the OMAP specific omap_mbox handle. The first 2 will be removed when
        the OMAP mailbox driver is adapted to runtime_pm. The other exported
        API omap_mbox_request_channel will be removed once existing legacy
        users are converted to DT.
    
    Signed-off-by: Suman Anna <s-anna@ti.com>
    Cc: Ohad Ben-Cohen <ohad@wizery.com>
    Signed-off-by: Jassi Brar <jaswinder.singh@linaro.org>

diff --git a/include/linux/omap-mailbox.h b/include/linux/omap-mailbox.h
index f8322d9cd235..587bbdd31f5a 100644
--- a/include/linux/omap-mailbox.h
+++ b/include/linux/omap-mailbox.h
@@ -10,20 +10,20 @@
 #define OMAP_MAILBOX_H
 
 typedef u32 mbox_msg_t;
-struct omap_mbox;
 
 typedef int __bitwise omap_mbox_irq_t;
 #define IRQ_TX ((__force omap_mbox_irq_t) 1)
 #define IRQ_RX ((__force omap_mbox_irq_t) 2)
 
-int omap_mbox_msg_send(struct omap_mbox *, mbox_msg_t msg);
+struct mbox_chan;
+struct mbox_client;
 
-struct omap_mbox *omap_mbox_get(const char *, struct notifier_block *nb);
-void omap_mbox_put(struct omap_mbox *mbox, struct notifier_block *nb);
+struct mbox_chan *omap_mbox_request_channel(struct mbox_client *cl,
+					    const char *chan_name);
 
-void omap_mbox_save_ctx(struct omap_mbox *mbox);
-void omap_mbox_restore_ctx(struct omap_mbox *mbox);
-void omap_mbox_enable_irq(struct omap_mbox *mbox, omap_mbox_irq_t irq);
-void omap_mbox_disable_irq(struct omap_mbox *mbox, omap_mbox_irq_t irq);
+void omap_mbox_save_ctx(struct mbox_chan *chan);
+void omap_mbox_restore_ctx(struct mbox_chan *chan);
+void omap_mbox_enable_irq(struct mbox_chan *chan, omap_mbox_irq_t irq);
+void omap_mbox_disable_irq(struct mbox_chan *chan, omap_mbox_irq_t irq);
 
 #endif /* OMAP_MAILBOX_H */

commit c869c75c16b3d1ffcf64fb2fd63ba0c4a369071c
Author: Suman Anna <s-anna@ti.com>
Date:   Tue Mar 12 17:55:29 2013 -0500

    mailbox/omap: move the OMAP mailbox framework to drivers
    
    The mailbox hardware (in OMAP) uses a queued mailbox interrupt
    mechanism that provides a communication channel between processors
    through a set of registers and their associated interrupt signals
    by sending and receiving messages.
    
    The OMAP mailbox framework/driver code is moved to be under
    drivers/mailbox, in preparation for adapting to a common mailbox
    driver framework. This allows the build for OMAP mailbox to be
    enabled (it was disabled during the multi-platform support).
    
    As part of the migration from plat and mach code:
    - Kconfig symbols have been renamed to build OMAP1 or OMAP2+ drivers.
    - mailbox.h under plat-omap/plat/include has been split into a public
      and private header files. The public header has only the API related
      functions and types.
    - The module name mailbox.ko from plat-omap is changed to
      omap-mailbox.ko
    - The module name mailbox_mach.ko from mach-omapX is changed as
        mailbox_omap1.ko for OMAP1
        mailbox_omap2.ko for OMAP2+
    
    Cc: Tony Lindgren <tony@atomide.com>
    [gregkh@linuxfoundation.org: ack for staging part]
    Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Omar Ramirez Luna <omar.ramirez@copitl.com>
    Signed-off-by: Suman Anna <s-anna@ti.com>

diff --git a/include/linux/omap-mailbox.h b/include/linux/omap-mailbox.h
new file mode 100644
index 000000000000..f8322d9cd235
--- /dev/null
+++ b/include/linux/omap-mailbox.h
@@ -0,0 +1,29 @@
+/*
+ * omap-mailbox: interprocessor communication module for OMAP
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+
+#ifndef OMAP_MAILBOX_H
+#define OMAP_MAILBOX_H
+
+typedef u32 mbox_msg_t;
+struct omap_mbox;
+
+typedef int __bitwise omap_mbox_irq_t;
+#define IRQ_TX ((__force omap_mbox_irq_t) 1)
+#define IRQ_RX ((__force omap_mbox_irq_t) 2)
+
+int omap_mbox_msg_send(struct omap_mbox *, mbox_msg_t msg);
+
+struct omap_mbox *omap_mbox_get(const char *, struct notifier_block *nb);
+void omap_mbox_put(struct omap_mbox *mbox, struct notifier_block *nb);
+
+void omap_mbox_save_ctx(struct omap_mbox *mbox);
+void omap_mbox_restore_ctx(struct omap_mbox *mbox);
+void omap_mbox_enable_irq(struct omap_mbox *mbox, omap_mbox_irq_t irq);
+void omap_mbox_disable_irq(struct omap_mbox *mbox, omap_mbox_irq_t irq);
+
+#endif /* OMAP_MAILBOX_H */
