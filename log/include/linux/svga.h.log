commit b24413180f5600bcb3bb70fbed5cf186b60864bd
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Nov 1 15:07:57 2017 +0100

    License cleanup: add SPDX GPL-2.0 license identifier to files with no license
    
    Many source files in the tree are missing licensing information, which
    makes it harder for compliance tools to determine the correct license.
    
    By default all files without license information are under the default
    license of the kernel, which is GPL version 2.
    
    Update the files which contain no license information with the 'GPL-2.0'
    SPDX license identifier.  The SPDX identifier is a legally binding
    shorthand, which can be used instead of the full boiler plate text.
    
    This patch is based on work done by Thomas Gleixner and Kate Stewart and
    Philippe Ombredanne.
    
    How this work was done:
    
    Patches were generated and checked against linux-4.14-rc6 for a subset of
    the use cases:
     - file had no licensing information it it.
     - file was a */uapi/* one with no licensing information in it,
     - file was a */uapi/* one with existing licensing information,
    
    Further patches will be generated in subsequent months to fix up cases
    where non-standard license headers were used, and references to license
    had to be inferred by heuristics based on keywords.
    
    The analysis to determine which SPDX License Identifier to be applied to
    a file was done in a spreadsheet of side by side results from of the
    output of two independent scanners (ScanCode & Windriver) producing SPDX
    tag:value files created by Philippe Ombredanne.  Philippe prepared the
    base worksheet, and did an initial spot review of a few 1000 files.
    
    The 4.13 kernel was the starting point of the analysis with 60,537 files
    assessed.  Kate Stewart did a file by file comparison of the scanner
    results in the spreadsheet to determine which SPDX license identifier(s)
    to be applied to the file. She confirmed any determination that was not
    immediately clear with lawyers working with the Linux Foundation.
    
    Criteria used to select files for SPDX license identifier tagging was:
     - Files considered eligible had to be source code files.
     - Make and config files were included as candidates if they contained >5
       lines of source
     - File already had some variant of a license header in it (even if <5
       lines).
    
    All documentation files were explicitly excluded.
    
    The following heuristics were used to determine which SPDX license
    identifiers to apply.
    
     - when both scanners couldn't find any license traces, file was
       considered to have no license information in it, and the top level
       COPYING file license applied.
    
       For non */uapi/* files that summary was:
    
       SPDX license identifier                            # files
       ---------------------------------------------------|-------
       GPL-2.0                                              11139
    
       and resulted in the first patch in this series.
    
       If that file was a */uapi/* path one, it was "GPL-2.0 WITH
       Linux-syscall-note" otherwise it was "GPL-2.0".  Results of that was:
    
       SPDX license identifier                            # files
       ---------------------------------------------------|-------
       GPL-2.0 WITH Linux-syscall-note                        930
    
       and resulted in the second patch in this series.
    
     - if a file had some form of licensing information in it, and was one
       of the */uapi/* ones, it was denoted with the Linux-syscall-note if
       any GPL family license was found in the file or had no licensing in
       it (per prior point).  Results summary:
    
       SPDX license identifier                            # files
       ---------------------------------------------------|------
       GPL-2.0 WITH Linux-syscall-note                       270
       GPL-2.0+ WITH Linux-syscall-note                      169
       ((GPL-2.0 WITH Linux-syscall-note) OR BSD-2-Clause)    21
       ((GPL-2.0 WITH Linux-syscall-note) OR BSD-3-Clause)    17
       LGPL-2.1+ WITH Linux-syscall-note                      15
       GPL-1.0+ WITH Linux-syscall-note                       14
       ((GPL-2.0+ WITH Linux-syscall-note) OR BSD-3-Clause)    5
       LGPL-2.0+ WITH Linux-syscall-note                       4
       LGPL-2.1 WITH Linux-syscall-note                        3
       ((GPL-2.0 WITH Linux-syscall-note) OR MIT)              3
       ((GPL-2.0 WITH Linux-syscall-note) AND MIT)             1
    
       and that resulted in the third patch in this series.
    
     - when the two scanners agreed on the detected license(s), that became
       the concluded license(s).
    
     - when there was disagreement between the two scanners (one detected a
       license but the other didn't, or they both detected different
       licenses) a manual inspection of the file occurred.
    
     - In most cases a manual inspection of the information in the file
       resulted in a clear resolution of the license that should apply (and
       which scanner probably needed to revisit its heuristics).
    
     - When it was not immediately clear, the license identifier was
       confirmed with lawyers working with the Linux Foundation.
    
     - If there was any question as to the appropriate license identifier,
       the file was flagged for further research and to be revisited later
       in time.
    
    In total, over 70 hours of logged manual review was done on the
    spreadsheet to determine the SPDX license identifiers to apply to the
    source files by Kate, Philippe, Thomas and, in some cases, confirmation
    by lawyers working with the Linux Foundation.
    
    Kate also obtained a third independent scan of the 4.13 code base from
    FOSSology, and compared selected files where the other two scanners
    disagreed against that SPDX file, to see if there was new insights.  The
    Windriver scanner is based on an older version of FOSSology in part, so
    they are related.
    
    Thomas did random spot checks in about 500 files from the spreadsheets
    for the uapi headers and agreed with SPDX license identifier in the
    files he inspected. For the non-uapi files Thomas did random spot checks
    in about 15000 files.
    
    In initial set of patches against 4.14-rc6, 3 files were found to have
    copy/paste license identifier errors, and have been fixed to reflect the
    correct identifier.
    
    Additionally Philippe spent 10 hours this week doing a detailed manual
    inspection and review of the 12,461 patched files from the initial patch
    version early this week with:
     - a full scancode scan run, collecting the matched texts, detected
       license ids and scores
     - reviewing anything where there was a license detected (about 500+
       files) to ensure that the applied SPDX license was correct
     - reviewing anything where there was no detection but the patch license
       was not GPL-2.0 WITH Linux-syscall-note to ensure that the applied
       SPDX license was correct
    
    This produced a worksheet with 20 files needing minor correction.  This
    worksheet was then exported into 3 different .csv files for the
    different types of files to be modified.
    
    These .csv files were then reviewed by Greg.  Thomas wrote a script to
    parse the csv files and add the proper SPDX tag to the file, in the
    format that the file expected.  This script was further refined by Greg
    based on the output to detect more types of files automatically and to
    distinguish between header and source .c files (which need different
    comment types.)  Finally Greg ran the script using the .csv files to
    generate the patches.
    
    Reviewed-by: Kate Stewart <kstewart@linuxfoundation.org>
    Reviewed-by: Philippe Ombredanne <pombredanne@nexb.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/include/linux/svga.h b/include/linux/svga.h
index bfa68e837d6a..3bfe4626953d 100644
--- a/include/linux/svga.h
+++ b/include/linux/svga.h
@@ -1,3 +1,4 @@
+/* SPDX-License-Identifier: GPL-2.0 */
 #ifndef _LINUX_SVGA_H
 #define _LINUX_SVGA_H
 

commit 38d2620ea40c2f9a5f17d6488bf004973570279c
Author: David Miller <davem@davemloft.net>
Date:   Tue Jan 11 23:52:25 2011 +0000

    svga: Make svga_set_timings() take an iomem regbase pointer.
    
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Paul Mundt <lethal@linux-sh.org>

diff --git a/include/linux/svga.h b/include/linux/svga.h
index 87879500f75b..bfa68e837d6a 100644
--- a/include/linux/svga.h
+++ b/include/linux/svga.h
@@ -116,7 +116,7 @@ void svga_get_caps(struct fb_info *info, struct fb_blit_caps *caps,
 
 int svga_compute_pll(const struct svga_pll *pll, u32 f_wanted, u16 *m, u16 *n, u16 *r, int node);
 int svga_check_timings(const struct svga_timing_regs *tm, struct fb_var_screeninfo *var, int node);
-void svga_set_timings(const struct svga_timing_regs *tm, struct fb_var_screeninfo *var, u32 hmul, u32 hdiv, u32 vmul, u32 vdiv, u32 hborder, int node);
+void svga_set_timings(void __iomem *regbase, const struct svga_timing_regs *tm, struct fb_var_screeninfo *var, u32 hmul, u32 hdiv, u32 vmul, u32 vdiv, u32 hborder, int node);
 
 int svga_match_format(const struct svga_fb_format *frm, struct fb_var_screeninfo *var, struct fb_fix_screeninfo *fix);
 

commit 55db092388455457791cf00216b6b3965a8071f8
Author: David Miller <davem@davemloft.net>
Date:   Tue Jan 11 23:52:11 2011 +0000

    svga: Make svga_tilecursor() take an iomem regbase pointer.
    
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Paul Mundt <lethal@linux-sh.org>

diff --git a/include/linux/svga.h b/include/linux/svga.h
index 767937d362d1..87879500f75b 100644
--- a/include/linux/svga.h
+++ b/include/linux/svga.h
@@ -109,7 +109,7 @@ void svga_settile(struct fb_info *info, struct fb_tilemap *map);
 void svga_tilecopy(struct fb_info *info, struct fb_tilearea *area);
 void svga_tilefill(struct fb_info *info, struct fb_tilerect *rect);
 void svga_tileblit(struct fb_info *info, struct fb_tileblit *blit);
-void svga_tilecursor(struct fb_info *info, struct fb_tilecursor *cursor);
+void svga_tilecursor(void __iomem *regbase, struct fb_info *info, struct fb_tilecursor *cursor);
 int svga_get_tilemax(struct fb_info *info);
 void svga_get_caps(struct fb_info *info, struct fb_blit_caps *caps,
 		   struct fb_var_screeninfo *var);

commit 9c96394bb90f855d265116f37897294fa1bdb072
Author: David Miller <davem@davemloft.net>
Date:   Tue Jan 11 23:51:56 2011 +0000

    svga: Make svga_set_textmode_vga_regs() take an iomem regbase pointer.
    
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Paul Mundt <lethal@linux-sh.org>

diff --git a/include/linux/svga.h b/include/linux/svga.h
index 2a32dd55d1a0..767937d362d1 100644
--- a/include/linux/svga.h
+++ b/include/linux/svga.h
@@ -103,7 +103,7 @@ void svga_set_default_gfx_regs(void __iomem *regbase);
 void svga_set_default_atc_regs(void __iomem *regbase);
 void svga_set_default_seq_regs(void __iomem *regbase);
 void svga_set_default_crt_regs(void __iomem *regbase);
-void svga_set_textmode_vga_regs(void);
+void svga_set_textmode_vga_regs(void __iomem *regbase);
 
 void svga_settile(struct fb_info *info, struct fb_tilemap *map);
 void svga_tilecopy(struct fb_info *info, struct fb_tilearea *area);

commit 1d28fcadb0e277844ebffb528cdfd25d44591035
Author: David Miller <davem@davemloft.net>
Date:   Tue Jan 11 23:51:41 2011 +0000

    svga: Make svga_set_default_crt_regs() take an iomem regbase pointer.
    
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Paul Mundt <lethal@linux-sh.org>

diff --git a/include/linux/svga.h b/include/linux/svga.h
index 5c5b41bddee4..2a32dd55d1a0 100644
--- a/include/linux/svga.h
+++ b/include/linux/svga.h
@@ -102,7 +102,7 @@ void svga_wseq_multi(void __iomem *regbase, const struct vga_regset *regset, u32
 void svga_set_default_gfx_regs(void __iomem *regbase);
 void svga_set_default_atc_regs(void __iomem *regbase);
 void svga_set_default_seq_regs(void __iomem *regbase);
-void svga_set_default_crt_regs(void);
+void svga_set_default_crt_regs(void __iomem *regbase);
 void svga_set_textmode_vga_regs(void);
 
 void svga_settile(struct fb_info *info, struct fb_tilemap *map);

commit ea770789dce2d27afab39c3891a475624acbd82f
Author: David Miller <davem@davemloft.net>
Date:   Tue Jan 11 23:51:26 2011 +0000

    svga: Make svga_wcrt_mask() take an iomem regbase pointer.
    
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Paul Mundt <lethal@linux-sh.org>

diff --git a/include/linux/svga.h b/include/linux/svga.h
index 93f7777b268a..5c5b41bddee4 100644
--- a/include/linux/svga.h
+++ b/include/linux/svga.h
@@ -83,9 +83,9 @@ static inline void svga_wseq_mask(void __iomem *regbase, u8 index, u8 data, u8 m
 
 /* Write a value to a CRT register with a mask */
 
-static inline void svga_wcrt_mask(u8 index, u8 data, u8 mask)
+static inline void svga_wcrt_mask(void __iomem *regbase, u8 index, u8 data, u8 mask)
 {
-	vga_wcrt(NULL, index, (data & mask) | (vga_rcrt(NULL, index) & ~mask));
+	vga_wcrt(regbase, index, (data & mask) | (vga_rcrt(regbase, index) & ~mask));
 }
 
 static inline int svga_primary_device(struct pci_dev *dev)

commit d907ec04cc498e11e039e0fff8eb58cf01e885da
Author: David Miller <davem@davemloft.net>
Date:   Tue Jan 11 23:51:08 2011 +0000

    svga: Make svga_wseq_mask() take an iomem regbase pointer.
    
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Paul Mundt <lethal@linux-sh.org>

diff --git a/include/linux/svga.h b/include/linux/svga.h
index d31a39844019..93f7777b268a 100644
--- a/include/linux/svga.h
+++ b/include/linux/svga.h
@@ -76,9 +76,9 @@ static inline void svga_wattr(void __iomem *regbase, u8 index, u8 data)
 
 /* Write a value to a sequence register with a mask */
 
-static inline void svga_wseq_mask(u8 index, u8 data, u8 mask)
+static inline void svga_wseq_mask(void __iomem *regbase, u8 index, u8 data, u8 mask)
 {
-	vga_wseq(NULL, index, (data & mask) | (vga_rseq(NULL, index) & ~mask));
+	vga_wseq(regbase, index, (data & mask) | (vga_rseq(regbase, index) & ~mask));
 }
 
 /* Write a value to a CRT register with a mask */

commit a4ade83948e0ffc317b8227d92107271a0acdda5
Author: David Miller <davem@davemloft.net>
Date:   Tue Jan 11 23:50:54 2011 +0000

    svga: Make svga_set_default_seq_regs take an iomem regbase pointer.
    
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Paul Mundt <lethal@linux-sh.org>

diff --git a/include/linux/svga.h b/include/linux/svga.h
index 87a41641caeb..d31a39844019 100644
--- a/include/linux/svga.h
+++ b/include/linux/svga.h
@@ -101,7 +101,7 @@ void svga_wseq_multi(void __iomem *regbase, const struct vga_regset *regset, u32
 
 void svga_set_default_gfx_regs(void __iomem *regbase);
 void svga_set_default_atc_regs(void __iomem *regbase);
-void svga_set_default_seq_regs(void);
+void svga_set_default_seq_regs(void __iomem *regbase);
 void svga_set_default_crt_regs(void);
 void svga_set_textmode_vga_regs(void);
 

commit f51a14dded14457e45b1f026a6af5ca6a51e4502
Author: David Miller <davem@davemloft.net>
Date:   Tue Jan 11 23:50:36 2011 +0000

    svga: Make svga_set_default_atc_regs take an iomem regbase pointer.
    
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Paul Mundt <lethal@linux-sh.org>

diff --git a/include/linux/svga.h b/include/linux/svga.h
index 4591032247f2..87a41641caeb 100644
--- a/include/linux/svga.h
+++ b/include/linux/svga.h
@@ -100,7 +100,7 @@ void svga_wcrt_multi(void __iomem *regbase, const struct vga_regset *regset, u32
 void svga_wseq_multi(void __iomem *regbase, const struct vga_regset *regset, u32 value);
 
 void svga_set_default_gfx_regs(void __iomem *regbase);
-void svga_set_default_atc_regs(void);
+void svga_set_default_atc_regs(void __iomem *regbase);
 void svga_set_default_seq_regs(void);
 void svga_set_default_crt_regs(void);
 void svga_set_textmode_vga_regs(void);

commit e2fade2c146ec718796049104b45267ddbfdf7a1
Author: David Miller <davem@davemloft.net>
Date:   Tue Jan 11 23:50:04 2011 +0000

    svga: Make svga_set_default_gfx_regs take an iomem regbase pointer.
    
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Paul Mundt <lethal@linux-sh.org>

diff --git a/include/linux/svga.h b/include/linux/svga.h
index 357e2bdac9aa..4591032247f2 100644
--- a/include/linux/svga.h
+++ b/include/linux/svga.h
@@ -99,7 +99,7 @@ static inline int svga_primary_device(struct pci_dev *dev)
 void svga_wcrt_multi(void __iomem *regbase, const struct vga_regset *regset, u32 value);
 void svga_wseq_multi(void __iomem *regbase, const struct vga_regset *regset, u32 value);
 
-void svga_set_default_gfx_regs(void);
+void svga_set_default_gfx_regs(void __iomem *regbase);
 void svga_set_default_atc_regs(void);
 void svga_set_default_seq_regs(void);
 void svga_set_default_crt_regs(void);

commit dc6aff3a5d3e4f565cb07cd5f3b6983850971da7
Author: David Miller <davem@davemloft.net>
Date:   Tue Jan 11 23:49:49 2011 +0000

    svga: Make svga_wseq_multi take an iomem regbase pointer.
    
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Paul Mundt <lethal@linux-sh.org>

diff --git a/include/linux/svga.h b/include/linux/svga.h
index 8ca81e0b0a6c..357e2bdac9aa 100644
--- a/include/linux/svga.h
+++ b/include/linux/svga.h
@@ -97,7 +97,7 @@ static inline int svga_primary_device(struct pci_dev *dev)
 
 
 void svga_wcrt_multi(void __iomem *regbase, const struct vga_regset *regset, u32 value);
-void svga_wseq_multi(const struct vga_regset *regset, u32 value);
+void svga_wseq_multi(void __iomem *regbase, const struct vga_regset *regset, u32 value);
 
 void svga_set_default_gfx_regs(void);
 void svga_set_default_atc_regs(void);

commit 21da386d0e4c55f6f7482b4637532b942e22b70a
Author: David Miller <davem@davemloft.net>
Date:   Tue Jan 11 23:49:34 2011 +0000

    svga: Make svga_wcrt_multi take an iomem regbase pointer.
    
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Paul Mundt <lethal@linux-sh.org>

diff --git a/include/linux/svga.h b/include/linux/svga.h
index 95d39412a3c2..8ca81e0b0a6c 100644
--- a/include/linux/svga.h
+++ b/include/linux/svga.h
@@ -96,7 +96,7 @@ static inline int svga_primary_device(struct pci_dev *dev)
 }
 
 
-void svga_wcrt_multi(const struct vga_regset *regset, u32 value);
+void svga_wcrt_multi(void __iomem *regbase, const struct vga_regset *regset, u32 value);
 void svga_wseq_multi(const struct vga_regset *regset, u32 value);
 
 void svga_set_default_gfx_regs(void);

commit f6b0cc477de99fe715f1071b13ab822daed9a34f
Author: David Miller <davem@davemloft.net>
Date:   Tue Jan 11 23:49:18 2011 +0000

    svga: Make svga_wattr take an iomem regbase pointer.
    
    And use vga_{r,w}().
    
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Paul Mundt <lethal@linux-sh.org>

diff --git a/include/linux/svga.h b/include/linux/svga.h
index 3fc52cb0bcb4..95d39412a3c2 100644
--- a/include/linux/svga.h
+++ b/include/linux/svga.h
@@ -67,11 +67,11 @@ struct svga_pll {
 
 /* Write a value to the attribute register */
 
-static inline void svga_wattr(u8 index, u8 data)
+static inline void svga_wattr(void __iomem *regbase, u8 index, u8 data)
 {
-	inb(VGA_IS1_RC);
-	outb(index, VGA_ATT_IW);
-	outb(data, VGA_ATT_W);
+	vga_r(regbase, VGA_IS1_RC);
+	vga_w(regbase, VGA_ATT_IW, index);
+	vga_w(regbase, VGA_ATT_W, data);
 }
 
 /* Write a value to a sequence register with a mask */

commit 1284e49cf186eaa19056e85a76a443d4eca8995d
Author: David Miller <davem@davemloft.net>
Date:   Tue Jan 11 23:49:03 2011 +0000

    svga: Use proper VGA register name macros in svga_wattr.
    
    Instead of magic register location constants.
    
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Paul Mundt <lethal@linux-sh.org>

diff --git a/include/linux/svga.h b/include/linux/svga.h
index c59a51a2b0e7..3fc52cb0bcb4 100644
--- a/include/linux/svga.h
+++ b/include/linux/svga.h
@@ -69,9 +69,9 @@ struct svga_pll {
 
 static inline void svga_wattr(u8 index, u8 data)
 {
-	inb(0x3DA);
-	outb(index, 0x3C0);
-	outb(data, 0x3C0);
+	inb(VGA_IS1_RC);
+	outb(index, VGA_ATT_IW);
+	outb(data, VGA_ATT_W);
 }
 
 /* Write a value to a sequence register with a mask */

commit 735643ee6cc5249bfac07fcad0946a5e7aff4423
Author: Robert P. J. Day <rpjday@crashcourse.ca>
Date:   Wed Apr 30 00:55:12 2008 -0700

    Remove "#ifdef __KERNEL__" checks from unexported headers
    
    Remove the "#ifdef __KERNEL__" tests from unexported header files in
    linux/include whose entire contents are wrapped in that preprocessor
    test.
    
    Signed-off-by: Robert P. J. Day <rpjday@crashcourse.ca>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Sam Ravnborg <sam@ravnborg.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/include/linux/svga.h b/include/linux/svga.h
index 13ad0b82ac28..c59a51a2b0e7 100644
--- a/include/linux/svga.h
+++ b/include/linux/svga.h
@@ -1,8 +1,6 @@
 #ifndef _LINUX_SVGA_H
 #define _LINUX_SVGA_H
 
-#ifdef __KERNEL__
-
 #include <linux/pci.h>
 #include <video/vga.h>
 
@@ -122,6 +120,5 @@ void svga_set_timings(const struct svga_timing_regs *tm, struct fb_var_screeninf
 
 int svga_match_format(const struct svga_fb_format *frm, struct fb_var_screeninfo *var, struct fb_fix_screeninfo *fix);
 
-#endif /* __KERNEL__  */
 #endif /* _LINUX_SVGA_H */
 

commit 5a87ede94595f58934000e26e8b13398e63868b5
Author: Antonino A. Daplas <adaplas@gmail.com>
Date:   Wed May 9 02:35:32 2007 -0700

    svgalib: move fb_get_caps to svgalib
    
    Move fb_get_caps() method to svgalib.c as svga_get_caps() so it can be used by
    s3fb, arkfb and vt8623fb.
    
    Signed-off-by: Antonino Daplas <adaplas@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/include/linux/svga.h b/include/linux/svga.h
index e1cc552e04fe..13ad0b82ac28 100644
--- a/include/linux/svga.h
+++ b/include/linux/svga.h
@@ -113,6 +113,8 @@ void svga_tilefill(struct fb_info *info, struct fb_tilerect *rect);
 void svga_tileblit(struct fb_info *info, struct fb_tileblit *blit);
 void svga_tilecursor(struct fb_info *info, struct fb_tilecursor *cursor);
 int svga_get_tilemax(struct fb_info *info);
+void svga_get_caps(struct fb_info *info, struct fb_blit_caps *caps,
+		   struct fb_var_screeninfo *var);
 
 int svga_compute_pll(const struct svga_pll *pll, u32 f_wanted, u16 *m, u16 *n, u16 *r, int node);
 int svga_check_timings(const struct svga_timing_regs *tm, struct fb_var_screeninfo *var, int node);

commit 34ed25f50b347c7e1ff78f9308e025ddd57c2f20
Author: Ondrej Zajicek <santiago@crfreenet.org>
Date:   Tue May 8 00:40:00 2007 -0700

    s3fb: updates
    
    Move s3fb_get_tilemax to svgalib.c as svga_get_tilemax, because it reports
    limitation of other code from svgalib (svga_settile, svga_tilecopy, ...)
    
    Limit font width to 8 pixels in 4 bpp mode.
    
    Signed-off-by: Ondrej Zajicek <santiago@crfreenet.org>
    Signed-off-by: Antonino Daplas <adaplas@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/include/linux/svga.h b/include/linux/svga.h
index eadb981bb37c..e1cc552e04fe 100644
--- a/include/linux/svga.h
+++ b/include/linux/svga.h
@@ -112,6 +112,7 @@ void svga_tilecopy(struct fb_info *info, struct fb_tilearea *area);
 void svga_tilefill(struct fb_info *info, struct fb_tilerect *rect);
 void svga_tileblit(struct fb_info *info, struct fb_tileblit *blit);
 void svga_tilecursor(struct fb_info *info, struct fb_tilecursor *cursor);
+int svga_get_tilemax(struct fb_info *info);
 
 int svga_compute_pll(const struct svga_pll *pll, u32 f_wanted, u16 *m, u16 *n, u16 *r, int node);
 int svga_check_timings(const struct svga_timing_regs *tm, struct fb_var_screeninfo *var, int node);

commit a268422de8bf1b4c0cb97987b6c329c9f6a3da4b
Author: Ondrej Zajicek <santiago@crfreenet.org>
Date:   Mon Feb 12 00:54:49 2007 -0800

    [PATCH] fbdev driver for S3 Trio/Virge
    
    Add a driver for S3 Trio / S3 Virge.  Driver is tested with most versions
    of S3 Trio and with S3 Virge/DX, on i386.
    
    (akpm: We kind-of have support for this hardware already, but...
    
    virgefb.c
      - amiga/zorro specific,
      - broken (according to Kconfig),
      - uses obsolete/nonexistent interface (struct display_switch)
      - recent Adrian Bunk's patch removes this driver
    
    S3triofb.c
      - ppc/openfirmware specific
      - minimal functionality
      - broken (according to Kconfig),
      - uses obsolete/nonexistent interface (struct display_switch)
    )
    
    Signed-off-by: Ondrej Zajicek <santiago@crfreenet.org>
    Cc: James Simmons <jsimmons@infradead.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/include/linux/svga.h b/include/linux/svga.h
new file mode 100644
index 000000000000..eadb981bb37c
--- /dev/null
+++ b/include/linux/svga.h
@@ -0,0 +1,124 @@
+#ifndef _LINUX_SVGA_H
+#define _LINUX_SVGA_H
+
+#ifdef __KERNEL__
+
+#include <linux/pci.h>
+#include <video/vga.h>
+
+/* Terminator for register set */
+
+#define VGA_REGSET_END_VAL	0xFF
+#define VGA_REGSET_END		{VGA_REGSET_END_VAL, 0, 0}
+
+struct vga_regset {
+	u8 regnum;
+	u8 lowbit;
+	u8 highbit;
+};
+
+/* ------------------------------------------------------------------------- */
+
+#define SVGA_FORMAT_END_VAL	0xFFFF
+#define SVGA_FORMAT_END		{SVGA_FORMAT_END_VAL, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, 0, 0, 0, 0, 0, 0}
+
+struct svga_fb_format {
+	/* var part */
+	u32 bits_per_pixel;
+	struct fb_bitfield red;
+	struct fb_bitfield green;
+	struct fb_bitfield blue;
+	struct fb_bitfield transp;
+	u32 nonstd;
+	/* fix part */
+	u32 type;
+	u32 type_aux;
+	u32 visual;
+	u32 xpanstep;
+	u32 xresstep;
+};
+
+struct svga_timing_regs {
+	const struct vga_regset *h_total_regs;
+	const struct vga_regset *h_display_regs;
+	const struct vga_regset *h_blank_start_regs;
+	const struct vga_regset *h_blank_end_regs;
+	const struct vga_regset *h_sync_start_regs;
+	const struct vga_regset *h_sync_end_regs;
+
+	const struct vga_regset *v_total_regs;
+	const struct vga_regset *v_display_regs;
+	const struct vga_regset *v_blank_start_regs;
+	const struct vga_regset *v_blank_end_regs;
+	const struct vga_regset *v_sync_start_regs;
+	const struct vga_regset *v_sync_end_regs;
+};
+
+struct svga_pll {
+	u16 m_min;
+	u16 m_max;
+	u16 n_min;
+	u16 n_max;
+	u16 r_min;
+	u16 r_max;  /* r_max < 32 */
+	u32 f_vco_min;
+	u32 f_vco_max;
+	u32 f_base;
+};
+
+
+/* Write a value to the attribute register */
+
+static inline void svga_wattr(u8 index, u8 data)
+{
+	inb(0x3DA);
+	outb(index, 0x3C0);
+	outb(data, 0x3C0);
+}
+
+/* Write a value to a sequence register with a mask */
+
+static inline void svga_wseq_mask(u8 index, u8 data, u8 mask)
+{
+	vga_wseq(NULL, index, (data & mask) | (vga_rseq(NULL, index) & ~mask));
+}
+
+/* Write a value to a CRT register with a mask */
+
+static inline void svga_wcrt_mask(u8 index, u8 data, u8 mask)
+{
+	vga_wcrt(NULL, index, (data & mask) | (vga_rcrt(NULL, index) & ~mask));
+}
+
+static inline int svga_primary_device(struct pci_dev *dev)
+{
+	u16 flags;
+	pci_read_config_word(dev, PCI_COMMAND, &flags);
+	return (flags & PCI_COMMAND_IO);
+}
+
+
+void svga_wcrt_multi(const struct vga_regset *regset, u32 value);
+void svga_wseq_multi(const struct vga_regset *regset, u32 value);
+
+void svga_set_default_gfx_regs(void);
+void svga_set_default_atc_regs(void);
+void svga_set_default_seq_regs(void);
+void svga_set_default_crt_regs(void);
+void svga_set_textmode_vga_regs(void);
+
+void svga_settile(struct fb_info *info, struct fb_tilemap *map);
+void svga_tilecopy(struct fb_info *info, struct fb_tilearea *area);
+void svga_tilefill(struct fb_info *info, struct fb_tilerect *rect);
+void svga_tileblit(struct fb_info *info, struct fb_tileblit *blit);
+void svga_tilecursor(struct fb_info *info, struct fb_tilecursor *cursor);
+
+int svga_compute_pll(const struct svga_pll *pll, u32 f_wanted, u16 *m, u16 *n, u16 *r, int node);
+int svga_check_timings(const struct svga_timing_regs *tm, struct fb_var_screeninfo *var, int node);
+void svga_set_timings(const struct svga_timing_regs *tm, struct fb_var_screeninfo *var, u32 hmul, u32 hdiv, u32 vmul, u32 vdiv, u32 hborder, int node);
+
+int svga_match_format(const struct svga_fb_format *frm, struct fb_var_screeninfo *var, struct fb_fix_screeninfo *fix);
+
+#endif /* __KERNEL__  */
+#endif /* _LINUX_SVGA_H */
+
