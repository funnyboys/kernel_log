commit 1a59d1b8e05ea6ab45f7e18897de1ef0e6bc3da6
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon May 27 08:55:05 2019 +0200

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 156
    
    Based on 1 normalized pattern(s):
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license as published by
      the free software foundation either version 2 of the license or at
      your option any later version this program is distributed in the
      hope that it will be useful but without any warranty without even
      the implied warranty of merchantability or fitness for a particular
      purpose see the gnu general public license for more details you
      should have received a copy of the gnu general public license along
      with this program if not write to the free software foundation inc
      59 temple place suite 330 boston ma 02111 1307 usa
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-or-later
    
    has been chosen to replace the boilerplate/reference in 1334 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Reviewed-by: Richard Fontana <rfontana@redhat.com>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190527070033.113240726@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/include/linux/smsc911x.h b/include/linux/smsc911x.h
index eec3efd19beb..868348f7ea06 100644
--- a/include/linux/smsc911x.h
+++ b/include/linux/smsc911x.h
@@ -1,22 +1,9 @@
+/* SPDX-License-Identifier: GPL-2.0-or-later */
 /***************************************************************************
  *
  * Copyright (C) 2004-2008 SMSC
  * Copyright (C) 2005-2008 ARM
  *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation; either version 2
- * of the License, or (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
- *
  ***************************************************************************/
 #ifndef __LINUX_SMSC911X_H__
 #define __LINUX_SMSC911X_H__

commit 574e2af7c0af3273836def5e66f236521bb433c9
Author: Joe Perches <joe@perches.com>
Date:   Thu Aug 1 16:17:48 2013 -0700

    include: Convert ethernet mac address declarations to use ETH_ALEN
    
    It's convenient to have ethernet mac addresses use
    ETH_ALEN to be able to grep for them a bit easier and
    also to ensure that the addresses are __aligned(2).
    
    Add #include <linux/if_ether.h> as necessary.
    
    Signed-off-by: Joe Perches <joe@perches.com>
    Acked-by: Mauro Carvalho Chehab <m.chehab@samsung.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/include/linux/smsc911x.h b/include/linux/smsc911x.h
index 4dde70e74822..eec3efd19beb 100644
--- a/include/linux/smsc911x.h
+++ b/include/linux/smsc911x.h
@@ -22,6 +22,7 @@
 #define __LINUX_SMSC911X_H__
 
 #include <linux/phy.h>
+#include <linux/if_ether.h>
 
 /* platform_device configuration data, should be assigned to
  * the platform_device's dev.platform_data */
@@ -31,7 +32,7 @@ struct smsc911x_platform_config {
 	unsigned int flags;
 	unsigned int shift;
 	phy_interface_t phy_interface;
-	unsigned char mac[6];
+	unsigned char mac[ETH_ALEN];
 };
 
 /* Constants for platform_device irq polarity configuration */

commit c326de88b8ac7ed1cd1027017ba6079dbe91be49
Author: Mathieu J. Poirier <mathieu.poirier@linaro.org>
Date:   Wed Apr 13 17:13:00 2011 -0700

    net: allow shifted access in smsc911x V2
    
    This is a revised patch that permits a shifted access to the
    LAN9221 registers.  More specifically:
    
     It adds a shift parameter in the platform_data.
     It introduces an ops in smsc911x_data.
     A choice of access function to use at run-time.
     Four new shifted access function.
    
    Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Signed-off-by: Alessandro Rubini <rubini@gnudd.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/include/linux/smsc911x.h b/include/linux/smsc911x.h
index 7144e8aa1e41..4dde70e74822 100644
--- a/include/linux/smsc911x.h
+++ b/include/linux/smsc911x.h
@@ -29,6 +29,7 @@ struct smsc911x_platform_config {
 	unsigned int irq_polarity;
 	unsigned int irq_type;
 	unsigned int flags;
+	unsigned int shift;
 	phy_interface_t phy_interface;
 	unsigned char mac[6];
 };

commit aace495933a981274b6491d71b915165a61defdc
Author: Manuel Lauss <manuel.lauss@googlemail.com>
Date:   Tue Oct 13 07:25:49 2009 +0000

    net: smsc911x: allow platform_data to specify mac address
    
    Extend the driver to accept a MAC address specified in platform_data.
    
    Signed-off-by: Manuel Lauss <manuel.lauss@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/include/linux/smsc911x.h b/include/linux/smsc911x.h
index 5241e4fb4eca..7144e8aa1e41 100644
--- a/include/linux/smsc911x.h
+++ b/include/linux/smsc911x.h
@@ -30,6 +30,7 @@ struct smsc911x_platform_config {
 	unsigned int irq_type;
 	unsigned int flags;
 	phy_interface_t phy_interface;
+	unsigned char mac[6];
 };
 
 /* Constants for platform_device irq polarity configuration */

commit 833cc67c7722e35863c6aaee9df56b442ef957ae
Author: Magnus Damm <damm@igel.co.jp>
Date:   Mon Apr 27 21:32:16 2009 +0000

    smsc911x: add fifo byteswap support V2
    
    This is V2 of the smsc911x fifo byteswap patch.
    
    The smsc911x hardware supports both big and little and endian
    hardware configurations, and the linux smsc911x driver currently
    detects word order.
    
    For correct operation on big endian platforms lacking swapped
    byte lanes the following patch is needed. Only fifo data is
    swapped, register data does not require any swapping.
    
    Signed-off-by: Magnus Damm <damm@igel.co.jp>
    Acked-by: Steve Glendinning <steve.glendinning@smsc.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/include/linux/smsc911x.h b/include/linux/smsc911x.h
index b32725075d71..5241e4fb4eca 100644
--- a/include/linux/smsc911x.h
+++ b/include/linux/smsc911x.h
@@ -47,4 +47,14 @@ struct smsc911x_platform_config {
 #define SMSC911X_FORCE_EXTERNAL_PHY 		(BIT(3))
 #define SMSC911X_SAVE_MAC_ADDRESS		(BIT(4))
 
+/*
+ * SMSC911X_SWAP_FIFO:
+ * Enables software byte swap for fifo data. Should only be used as a
+ * "last resort" in the case of big endian mode on boards with incorrectly
+ * routed data bus to older devices such as LAN9118. Newer devices such as
+ * LAN9221 can handle this in hardware, there are registers to control
+ * this swapping but the driver doesn't currently use them.
+ */
+#define SMSC911X_SWAP_FIFO			(BIT(5))
+
 #endif /* __LINUX_SMSC911X_H__ */

commit 31f4574774e98aa275aeeee94f41ce042285ed8e
Author: Steve Glendinning <steve.glendinning@smsc.com>
Date:   Tue Jan 27 06:51:12 2009 +0000

    smsc911x: allow mac address to be saved before device reset
    
    Some platforms (for example pcm037) do not have an EEPROM fitted,
    instead storing their mac address somewhere else.  The bootloader
    fetches this and configures the ethernet adapter before the kernel is
    started.
    
    This patch allows a platform to indicate to the driver via the
    SMSC911X_SAVE_MAC_ADDRESS flag that the mac address has already been
    configured via such a mechanism, and should be saved before resetting
    the chip.
    
    Signed-off-by: Steve Glendinning <steve.glendinning@smsc.com>
    Acked-by: Sascha Hauer <s.hauer@pengutronix.de>
    Tested-by: Sascha Hauer <s.hauer@pengutronix.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/include/linux/smsc911x.h b/include/linux/smsc911x.h
index 170c76b8f7a6..b32725075d71 100644
--- a/include/linux/smsc911x.h
+++ b/include/linux/smsc911x.h
@@ -45,5 +45,6 @@ struct smsc911x_platform_config {
 #define SMSC911X_USE_32BIT 			(BIT(1))
 #define SMSC911X_FORCE_INTERNAL_PHY		(BIT(2))
 #define SMSC911X_FORCE_EXTERNAL_PHY 		(BIT(3))
+#define SMSC911X_SAVE_MAC_ADDRESS		(BIT(4))
 
 #endif /* __LINUX_SMSC911X_H__ */

commit d23f028a4ddce8b783c212bfe911d1d307ff3617
Author: Steve Glendinning <steve.glendinning@smsc.com>
Date:   Tue Jan 27 06:51:11 2009 +0000

    smsc911x: add external phy detection overrides
    
    On LAN9115/LAN9117/LAN9215/LAN9217, external phys are supported.  These
    are usually indicated by a hardware strap which sets an "external PHY
    detected" bit in the HW_CFG register.
    
    In some cases it is desirable to override this hardware strap and force
    use of either the internal phy or an external PHY.  This patch adds
    SMSC911X_FORCE_INTERNAL_PHY and SMSC911X_FORCE_EXTERNAL_PHY flags so a
    platform can indicate this preference via its platform_data.
    
    Signed-off-by: Steve Glendinning <steve.glendinning@smsc.com>
    Acked-by: Sascha Hauer <s.hauer@pengutronix.de>
    Tested-by: Sascha Hauer <s.hauer@pengutronix.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/include/linux/smsc911x.h b/include/linux/smsc911x.h
index 1cbf0313adde..170c76b8f7a6 100644
--- a/include/linux/smsc911x.h
+++ b/include/linux/smsc911x.h
@@ -43,5 +43,7 @@ struct smsc911x_platform_config {
 /* Constants for flags */
 #define SMSC911X_USE_16BIT 			(BIT(0))
 #define SMSC911X_USE_32BIT 			(BIT(1))
+#define SMSC911X_FORCE_INTERNAL_PHY		(BIT(2))
+#define SMSC911X_FORCE_EXTERNAL_PHY 		(BIT(3))
 
 #endif /* __LINUX_SMSC911X_H__ */

commit 2107fb8b5bf018be691afdd4c6ffaecf0c3307be
Author: Steve Glendinning <steve.glendinning@smsc.com>
Date:   Wed Nov 5 00:35:38 2008 +0000

    smsc911x: add dynamic bus configuration
    
    Convert the driver to select 16-bit or 32-bit bus access at runtime,
    at a small performance cost.
    
    Signed-off-by: Steve Glendinning <steve.glendinning@smsc.com>
    Acked-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/include/linux/smsc911x.h b/include/linux/smsc911x.h
index 47c4ffd10dbb..1cbf0313adde 100644
--- a/include/linux/smsc911x.h
+++ b/include/linux/smsc911x.h
@@ -28,6 +28,7 @@
 struct smsc911x_platform_config {
 	unsigned int irq_polarity;
 	unsigned int irq_type;
+	unsigned int flags;
 	phy_interface_t phy_interface;
 };
 
@@ -39,4 +40,8 @@ struct smsc911x_platform_config {
 #define SMSC911X_IRQ_TYPE_OPEN_DRAIN		0
 #define SMSC911X_IRQ_TYPE_PUSH_PULL		1
 
+/* Constants for flags */
+#define SMSC911X_USE_16BIT 			(BIT(0))
+#define SMSC911X_USE_32BIT 			(BIT(1))
+
 #endif /* __LINUX_SMSC911X_H__ */

commit fd9abb3d97c2ab883e4732ec1214fe64190236e7
Author: Steve Glendinning <steve.glendinning@smsc.com>
Date:   Wed Nov 5 00:35:37 2008 +0000

    SMSC LAN911x and LAN921x vendor driver
    
    Attached is a driver for SMSC's LAN911x and LAN921x families of embedded
    ethernet controllers.
    
    There is an existing smc911x driver in the tree; this is intended to
    replace it.  Dustin McIntire (the author of the smc911x driver) has
    expressed his support for switching to this driver.
    
    This driver contains workarounds for all known hardware issues, and has
    been tested on all flavours of the chip on multiple architectures.
    
    This driver now uses phylib, so this patch also adds support for the
    device's internal phy
    
    Signed-off-by: Steve Glendinning <steve.glendinning@smsc.com>
    Signed-off-by: Bahadir Balban <Bahadir.Balban@arm.com>
    Signed-off-by: Dustin Mcintire <dustin@sensoria.com>
    Signed-off-by: Bill Gatliff <bgat@billgatliff.com>
    Signed-off-by: Jeff Garzik <jgarzik@redhat.com>

diff --git a/include/linux/smsc911x.h b/include/linux/smsc911x.h
new file mode 100644
index 000000000000..47c4ffd10dbb
--- /dev/null
+++ b/include/linux/smsc911x.h
@@ -0,0 +1,42 @@
+/***************************************************************************
+ *
+ * Copyright (C) 2004-2008 SMSC
+ * Copyright (C) 2005-2008 ARM
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
+ *
+ ***************************************************************************/
+#ifndef __LINUX_SMSC911X_H__
+#define __LINUX_SMSC911X_H__
+
+#include <linux/phy.h>
+
+/* platform_device configuration data, should be assigned to
+ * the platform_device's dev.platform_data */
+struct smsc911x_platform_config {
+	unsigned int irq_polarity;
+	unsigned int irq_type;
+	phy_interface_t phy_interface;
+};
+
+/* Constants for platform_device irq polarity configuration */
+#define SMSC911X_IRQ_POLARITY_ACTIVE_LOW	0
+#define SMSC911X_IRQ_POLARITY_ACTIVE_HIGH	1
+
+/* Constants for platform_device irq type configuration */
+#define SMSC911X_IRQ_TYPE_OPEN_DRAIN		0
+#define SMSC911X_IRQ_TYPE_PUSH_PULL		1
+
+#endif /* __LINUX_SMSC911X_H__ */
