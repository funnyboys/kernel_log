commit 24c9d423e86b17b25b4b510e81f10aa232fdaa60
Author: Luck, Tony <tony.luck@intel.com>
Date:   Tue Nov 6 10:39:15 2018 -0800

    EDAC, skx: Fix randconfig builds in a better way
    
    It was previously noted that Kconfig complained about unmet dependencies
    when trying to configure skx_edac together with CONFIG_ACPI=n. First fix
    for this checked for ACPI when doing
    
      select ACPI_ADXL
    
    but this required stub functions for the case where ACPI wasn't
    selected. It also allowed building a driver that didn't actually work
    for a system that has non-volatile DIMMs.
    
    Arnd Bergmann pointed out that the right fix is to make EDAC_SKX
    "depend on ACPI".
    
    Fixes: a324e9396ca3 ("EDAC, skx: Fix randconfig builds")
    Signed-off-by: Tony Luck <tony.luck@intel.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    CC: "Rafael J. Wysocki" <rafael.j.wysocki@intel.com>
    CC: Arnd Bergmann <arnd@arndb.de>
    CC: Mauro Carvalho Chehab <mchehab@kernel.org>
    CC: linux-edac <linux-edac@vger.kernel.org>
    CC: qiuxu.zhuo@intel.com
    Link: http://lkml.kernel.org/r/20181106183914.GA26731@agluck-desk

diff --git a/include/linux/adxl.h b/include/linux/adxl.h
index 2d29f55923e3..2a629acb4c3f 100644
--- a/include/linux/adxl.h
+++ b/include/linux/adxl.h
@@ -7,12 +7,7 @@
 #ifndef _LINUX_ADXL_H
 #define _LINUX_ADXL_H
 
-#ifdef CONFIG_ACPI_ADXL
 const char * const *adxl_get_component_names(void);
 int adxl_decode(u64 addr, u64 component_values[]);
-#else
-static inline const char * const *adxl_get_component_names(void)  { return NULL; }
-static inline int adxl_decode(u64 addr, u64 component_values[])   { return  -EOPNOTSUPP; }
-#endif
 
 #endif /* _LINUX_ADXL_H */

commit a324e9396ca3d00e1101476ba067b412e0aba232
Author: Borislav Petkov <bp@suse.de>
Date:   Wed Oct 31 19:20:20 2018 +0100

    EDAC, skx: Fix randconfig builds
    
    The driver depends on the ADXL component glue and selects it. However,
    ADXL itself implicitly depends on ACPI and in nonsensical randconfig
    builds like this:
    
      # CONFIG_ACPI is not set
      CONFIG_ACPI_ADXL=y
    
    where ACPI is not enabled, the build fails with:
    
      drivers/edac/skx_edac.o: In function `skx_mce_check_error':
      skx_edac.c:(.text+0xab): undefined reference to `adxl_decode'
      drivers/edac/skx_edac.o: In function `skx_init':
      skx_edac.c:(.init.text+0x8bf): undefined reference to `adxl_get_component_names'
      make: *** [vmlinux] Error 1
    
    Add stubs for that case so that the build succeeds. CONFIG_ACPI=n
    doesn't make any sense for real configurations but this fix will at
    least silence randconfig builds.
    
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Acked-by: Tony Luck <tony.luck@intel.com>
    Cc: "Rafael J. Wysocki" <rafael@kernel.org>

diff --git a/include/linux/adxl.h b/include/linux/adxl.h
index 2a629acb4c3f..2d29f55923e3 100644
--- a/include/linux/adxl.h
+++ b/include/linux/adxl.h
@@ -7,7 +7,12 @@
 #ifndef _LINUX_ADXL_H
 #define _LINUX_ADXL_H
 
+#ifdef CONFIG_ACPI_ADXL
 const char * const *adxl_get_component_names(void);
 int adxl_decode(u64 addr, u64 component_values[]);
+#else
+static inline const char * const *adxl_get_component_names(void)  { return NULL; }
+static inline int adxl_decode(u64 addr, u64 component_values[])   { return  -EOPNOTSUPP; }
+#endif
 
 #endif /* _LINUX_ADXL_H */

commit 4cf841e398503990df640f7a7c5b2ea56f11c08c
Author: Tony Luck <tony.luck@intel.com>
Date:   Mon Oct 15 16:11:31 2018 -0700

    ACPI/ADXL: Add address translation interface using an ACPI DSM
    
    Some new Intel servers provide an interface so that the OS can ask the
    BIOS to translate a system physical address to a memory address (socket,
    memory controller, channel, rank, dimm, etc.). This is useful for EDAC
    drivers that want to take the address of an error reported in a machine
    check bank and let the user know which DIMM may need to be replaced.
    
    Specification for this interface is available at:
    
      https://cdrdv2.intel.com/v1/dl/getContent/603354
    
     [ Based on earlier code by Qiuxu Zhuo <qiuxu.zhuo@intel.com>. ]
    
     [ bp: Make the first pr_info() in adxl_init() pr_debug() so that it
       doesn't pollute every dmesg. ]
    
    Signed-off-by: Tony Luck <tony.luck@intel.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Acked-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Tested-by: Qiuxu Zhuo <qiuxu.zhuo@intel.com>
    CC: Len Brown <lenb@kernel.org>
    CC: linux-acpi@vger.kernel.org
    CC: linux-edac@vger.kernel.org
    Link: http://lkml.kernel.org/r/20181015202620.23610-1-tony.luck@intel.com

diff --git a/include/linux/adxl.h b/include/linux/adxl.h
new file mode 100644
index 000000000000..2a629acb4c3f
--- /dev/null
+++ b/include/linux/adxl.h
@@ -0,0 +1,13 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+/*
+ * Address translation interface via ACPI DSM.
+ * Copyright (C) 2018 Intel Corporation
+ */
+
+#ifndef _LINUX_ADXL_H
+#define _LINUX_ADXL_H
+
+const char * const *adxl_get_component_names(void);
+int adxl_decode(u64 addr, u64 component_values[]);
+
+#endif /* _LINUX_ADXL_H */
