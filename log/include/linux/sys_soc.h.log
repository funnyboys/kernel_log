commit c31e73121f4c1ec45a3e523ac6ce3ce6dafdcec1
Author: Murali Nalajala <mnalajal@codeaurora.org>
Date:   Mon Oct 7 13:37:42 2019 -0700

    base: soc: Handle custom soc information sysfs entries
    
    Soc framework exposed sysfs entries are not sufficient for some
    of the h/w platforms. Currently there is no interface where soc
    drivers can expose further information about their SoCs via soc
    framework. This change address this limitation where clients can
    pass their custom entries as attribute group and soc framework
    would expose them as sysfs properties.
    
    Signed-off-by: Murali Nalajala <mnalajal@codeaurora.org>
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Reviewed-by: Stephen Boyd <swboyd@chromium.org>
    Link: https://lore.kernel.org/r/1570480662-25252-1-git-send-email-mnalajal@codeaurora.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/include/linux/sys_soc.h b/include/linux/sys_soc.h
index 48ceea867dd6..d9b3cf0f410c 100644
--- a/include/linux/sys_soc.h
+++ b/include/linux/sys_soc.h
@@ -15,6 +15,7 @@ struct soc_device_attribute {
 	const char *serial_number;
 	const char *soc_id;
 	const void *data;
+	const struct attribute_group *custom_attr_group;
 };
 
 /**

commit 9aebf4de220344e2f03ae6386272bf98f80fd295
Author: Bjorn Andersson <bjorn.andersson@linaro.org>
Date:   Wed Jul 24 04:05:11 2019 +0530

    base: soc: Add serial_number attribute to soc
    
    Add new attribute named "serial_number" as a standard interface for
    user space to acquire the serial number of the device.
    
    For ST-Ericsson SoCs this is exposed by the cryptically named "soc_id"
    attribute, but this provides a human readable standardized name for this
    property.
    
    Tested-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Vaishali Thakkar <vaishali.thakkar@linaro.org>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Reviewed-by: Stephen Boyd <swboyd@chromium.org>
    Reviewed-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>

diff --git a/include/linux/sys_soc.h b/include/linux/sys_soc.h
index b7c70c3e953f..48ceea867dd6 100644
--- a/include/linux/sys_soc.h
+++ b/include/linux/sys_soc.h
@@ -12,6 +12,7 @@ struct soc_device_attribute {
 	const char *machine;
 	const char *family;
 	const char *revision;
+	const char *serial_number;
 	const char *soc_id;
 	const void *data;
 };

commit af873fcecef567abf8a3468b06dd4e4aab46da6d
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Tue May 28 09:57:21 2019 -0700

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 194
    
    Based on 1 normalized pattern(s):
    
      license terms gnu general public license gpl version 2
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-only
    
    has been chosen to replace the boilerplate/reference in 161 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Reviewed-by: Alexios Zavras <alexios.zavras@intel.com>
    Reviewed-by: Steve Winslow <swinslow@gmail.com>
    Reviewed-by: Richard Fontana <rfontana@redhat.com>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190528170027.447718015@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/include/linux/sys_soc.h b/include/linux/sys_soc.h
index bed223b70217..b7c70c3e953f 100644
--- a/include/linux/sys_soc.h
+++ b/include/linux/sys_soc.h
@@ -1,7 +1,7 @@
+/* SPDX-License-Identifier: GPL-2.0-only */
 /*
  * Copyright (C) ST-Ericsson SA 2011
  * Author: Lee Jones <lee.jones@linaro.org> for ST-Ericsson.
- * License terms:  GNU General Public License (GPL), version 2
  */
 #ifndef __SOC_BUS_H
 #define __SOC_BUS_H

commit da65a1589dacc7ec44ea0557a14d70a39d991f32
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Wed Oct 26 15:13:15 2016 +0200

    base: soc: Provide a dummy implementation of soc_device_match()
    
    Provide a dummy implementation of soc_device_match(), to allow compiling
    drivers that may be used on SoCs both with and without CONFIG_SOC_BUS,
    and for compile testing.
    
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>

diff --git a/include/linux/sys_soc.h b/include/linux/sys_soc.h
index 9f5eb06f9fd8..bed223b70217 100644
--- a/include/linux/sys_soc.h
+++ b/include/linux/sys_soc.h
@@ -35,6 +35,12 @@ void soc_device_unregister(struct soc_device *soc_dev);
  */
 struct device *soc_device_to_device(struct soc_device *soc);
 
+#ifdef CONFIG_SOC_BUS
 const struct soc_device_attribute *soc_device_match(
 	const struct soc_device_attribute *matches);
+#else
+static inline const struct soc_device_attribute *soc_device_match(
+	const struct soc_device_attribute *matches) { return NULL; }
+#endif
+
 #endif /* __SOC_BUS_H */

commit c97db7cc7778e34a53b42d58c766f0ec0e30d580
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Sep 21 14:57:19 2016 +0800

    base: soc: Introduce soc_device_match() interface
    
    We keep running into cases where device drivers want to know the exact
    version of the a SoC they are currently running on. In the past, this has
    usually been done through a vendor specific API that can be called by a
    driver, or by directly accessing some kind of version register that is
    not part of the device itself but that belongs to a global register area
    of the chip.
    
    Common reasons for doing this include:
    
    - A machine is not using devicetree or similar for passing data about
      on-chip devices, but just announces their presence using boot-time
      platform devices, and the machine code itself does not care about the
      revision.
    
    - There is existing firmware or boot loaders with existing DT binaries
      with generic compatible strings that do not identify the particular
      revision of each device, but the driver knows which SoC revisions
      include which part.
    
    - A prerelease version of a chip has some quirks and we are using the same
      version of the bootloader and the DT blob on both the prerelease and the
      final version. An update of the DT binding seems inappropriate because
      that would involve maintaining multiple copies of the dts and/or
      bootloader.
    
    This patch introduces the soc_device_match() interface that is meant to
    work like of_match_node() but instead of identifying the version of a
    device, it identifies the SoC itself using a vendor-agnostic interface.
    
    Unlike of_match_node(), we do not do an exact string compare but instead
    use glob_match() to allow wildcards in strings.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Yangbo Lu <yangbo.lu@nxp.com>
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/include/linux/sys_soc.h b/include/linux/sys_soc.h
index 2739ccb69571..9f5eb06f9fd8 100644
--- a/include/linux/sys_soc.h
+++ b/include/linux/sys_soc.h
@@ -13,6 +13,7 @@ struct soc_device_attribute {
 	const char *family;
 	const char *revision;
 	const char *soc_id;
+	const void *data;
 };
 
 /**
@@ -34,4 +35,6 @@ void soc_device_unregister(struct soc_device *soc_dev);
  */
 struct device *soc_device_to_device(struct soc_device *soc);
 
+const struct soc_device_attribute *soc_device_match(
+	const struct soc_device_attribute *matches);
 #endif /* __SOC_BUS_H */

commit 74d1d82cdaaec727f5072eb1c9f49b7e920e076f
Author: Lee Jones <lee.jones@linaro.org>
Date:   Mon Feb 6 11:22:22 2012 -0800

    drivers/base: add bus for System-on-Chip devices
    
    Traditionally, any System-on-Chip based platform creates a flat list
    of platform_devices directly under /sys/devices/platform.
    
    In order to give these some better structure, this introduces a new
    bus type for soc_devices that are registered with the new
    soc_device_register() function.  All devices that are on the same
    chip should then be registered as child devices of the soc device.
    
    The soc bus also exports a few standardised device attributes which
    allow user space to query the specific type of soc.
    
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/include/linux/sys_soc.h b/include/linux/sys_soc.h
new file mode 100644
index 000000000000..2739ccb69571
--- /dev/null
+++ b/include/linux/sys_soc.h
@@ -0,0 +1,37 @@
+/*
+ * Copyright (C) ST-Ericsson SA 2011
+ * Author: Lee Jones <lee.jones@linaro.org> for ST-Ericsson.
+ * License terms:  GNU General Public License (GPL), version 2
+ */
+#ifndef __SOC_BUS_H
+#define __SOC_BUS_H
+
+#include <linux/device.h>
+
+struct soc_device_attribute {
+	const char *machine;
+	const char *family;
+	const char *revision;
+	const char *soc_id;
+};
+
+/**
+ * soc_device_register - register SoC as a device
+ * @soc_plat_dev_attr: Attributes passed from platform to be attributed to a SoC
+ */
+struct soc_device *soc_device_register(
+	struct soc_device_attribute *soc_plat_dev_attr);
+
+/**
+ * soc_device_unregister - unregister SoC device
+ * @dev: SoC device to be unregistered
+ */
+void soc_device_unregister(struct soc_device *soc_dev);
+
+/**
+ * soc_device_to_device - helper function to fetch struct device
+ * @soc: Previously registered SoC device container
+ */
+struct device *soc_device_to_device(struct soc_device *soc);
+
+#endif /* __SOC_BUS_H */
