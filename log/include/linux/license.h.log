commit bf49d9dd6fef688733e2ddbd55f7bcb57df194e4
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Fri Oct 18 13:50:53 2019 +0900

    export,module: add SPDX GPL-2.0 license identifier to headers with no license
    
    Commit b24413180f56 ("License cleanup: add SPDX GPL-2.0 license
    identifier to files with no license") took care of a lot of files
    without any license information.
    
    These headers were not processed by the tool perhaps because they
    contain "GPL" in the code.
    
    I do not see any license boilerplate in them, so they fall back to
    GPL version 2 only, which is the project default.
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Link: https://lore.kernel.org/r/20191018045053.8424-1-yamada.masahiro@socionext.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/include/linux/license.h b/include/linux/license.h
index decdbf43cb5c..7cce390f120b 100644
--- a/include/linux/license.h
+++ b/include/linux/license.h
@@ -1,3 +1,4 @@
+/* SPDX-License-Identifier: GPL-2.0-only */
 #ifndef __LICENSE_H
 #define __LICENSE_H
 

commit b817f6feff4a565b08f0e699a5790b4008b8f494
Author: Sam Ravnborg <sam@mars.ravnborg.org>
Date:   Fri Jun 9 21:53:55 2006 +0200

    kbuild: check license compatibility when building modules
    
    Modules that uses GPL symbols can no longer be build with kbuild,
    the build will fail during the modpost step.
    When a GPL-incompatible module uses a EXPORT_SYMBOL_GPL_FUTURE symbol
    then warn during modpost so author are actually notified.
    
    The actual license compatibility check is shared with the kernel
    to make sure it is in sync.
    
    Patch originally from: Andreas Gruenbacher <agruen@suse.de> and
    Ram Pai <linuxram@us.ibm.com>
    
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>

diff --git a/include/linux/license.h b/include/linux/license.h
new file mode 100644
index 000000000000..decdbf43cb5c
--- /dev/null
+++ b/include/linux/license.h
@@ -0,0 +1,14 @@
+#ifndef __LICENSE_H
+#define __LICENSE_H
+
+static inline int license_is_gpl_compatible(const char *license)
+{
+	return (strcmp(license, "GPL") == 0
+		|| strcmp(license, "GPL v2") == 0
+		|| strcmp(license, "GPL and additional rights") == 0
+		|| strcmp(license, "Dual BSD/GPL") == 0
+		|| strcmp(license, "Dual MIT/GPL") == 0
+		|| strcmp(license, "Dual MPL/GPL") == 0);
+}
+
+#endif
