commit b24413180f5600bcb3bb70fbed5cf186b60864bd
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Nov 1 15:07:57 2017 +0100

    License cleanup: add SPDX GPL-2.0 license identifier to files with no license
    
    Many source files in the tree are missing licensing information, which
    makes it harder for compliance tools to determine the correct license.
    
    By default all files without license information are under the default
    license of the kernel, which is GPL version 2.
    
    Update the files which contain no license information with the 'GPL-2.0'
    SPDX license identifier.  The SPDX identifier is a legally binding
    shorthand, which can be used instead of the full boiler plate text.
    
    This patch is based on work done by Thomas Gleixner and Kate Stewart and
    Philippe Ombredanne.
    
    How this work was done:
    
    Patches were generated and checked against linux-4.14-rc6 for a subset of
    the use cases:
     - file had no licensing information it it.
     - file was a */uapi/* one with no licensing information in it,
     - file was a */uapi/* one with existing licensing information,
    
    Further patches will be generated in subsequent months to fix up cases
    where non-standard license headers were used, and references to license
    had to be inferred by heuristics based on keywords.
    
    The analysis to determine which SPDX License Identifier to be applied to
    a file was done in a spreadsheet of side by side results from of the
    output of two independent scanners (ScanCode & Windriver) producing SPDX
    tag:value files created by Philippe Ombredanne.  Philippe prepared the
    base worksheet, and did an initial spot review of a few 1000 files.
    
    The 4.13 kernel was the starting point of the analysis with 60,537 files
    assessed.  Kate Stewart did a file by file comparison of the scanner
    results in the spreadsheet to determine which SPDX license identifier(s)
    to be applied to the file. She confirmed any determination that was not
    immediately clear with lawyers working with the Linux Foundation.
    
    Criteria used to select files for SPDX license identifier tagging was:
     - Files considered eligible had to be source code files.
     - Make and config files were included as candidates if they contained >5
       lines of source
     - File already had some variant of a license header in it (even if <5
       lines).
    
    All documentation files were explicitly excluded.
    
    The following heuristics were used to determine which SPDX license
    identifiers to apply.
    
     - when both scanners couldn't find any license traces, file was
       considered to have no license information in it, and the top level
       COPYING file license applied.
    
       For non */uapi/* files that summary was:
    
       SPDX license identifier                            # files
       ---------------------------------------------------|-------
       GPL-2.0                                              11139
    
       and resulted in the first patch in this series.
    
       If that file was a */uapi/* path one, it was "GPL-2.0 WITH
       Linux-syscall-note" otherwise it was "GPL-2.0".  Results of that was:
    
       SPDX license identifier                            # files
       ---------------------------------------------------|-------
       GPL-2.0 WITH Linux-syscall-note                        930
    
       and resulted in the second patch in this series.
    
     - if a file had some form of licensing information in it, and was one
       of the */uapi/* ones, it was denoted with the Linux-syscall-note if
       any GPL family license was found in the file or had no licensing in
       it (per prior point).  Results summary:
    
       SPDX license identifier                            # files
       ---------------------------------------------------|------
       GPL-2.0 WITH Linux-syscall-note                       270
       GPL-2.0+ WITH Linux-syscall-note                      169
       ((GPL-2.0 WITH Linux-syscall-note) OR BSD-2-Clause)    21
       ((GPL-2.0 WITH Linux-syscall-note) OR BSD-3-Clause)    17
       LGPL-2.1+ WITH Linux-syscall-note                      15
       GPL-1.0+ WITH Linux-syscall-note                       14
       ((GPL-2.0+ WITH Linux-syscall-note) OR BSD-3-Clause)    5
       LGPL-2.0+ WITH Linux-syscall-note                       4
       LGPL-2.1 WITH Linux-syscall-note                        3
       ((GPL-2.0 WITH Linux-syscall-note) OR MIT)              3
       ((GPL-2.0 WITH Linux-syscall-note) AND MIT)             1
    
       and that resulted in the third patch in this series.
    
     - when the two scanners agreed on the detected license(s), that became
       the concluded license(s).
    
     - when there was disagreement between the two scanners (one detected a
       license but the other didn't, or they both detected different
       licenses) a manual inspection of the file occurred.
    
     - In most cases a manual inspection of the information in the file
       resulted in a clear resolution of the license that should apply (and
       which scanner probably needed to revisit its heuristics).
    
     - When it was not immediately clear, the license identifier was
       confirmed with lawyers working with the Linux Foundation.
    
     - If there was any question as to the appropriate license identifier,
       the file was flagged for further research and to be revisited later
       in time.
    
    In total, over 70 hours of logged manual review was done on the
    spreadsheet to determine the SPDX license identifiers to apply to the
    source files by Kate, Philippe, Thomas and, in some cases, confirmation
    by lawyers working with the Linux Foundation.
    
    Kate also obtained a third independent scan of the 4.13 code base from
    FOSSology, and compared selected files where the other two scanners
    disagreed against that SPDX file, to see if there was new insights.  The
    Windriver scanner is based on an older version of FOSSology in part, so
    they are related.
    
    Thomas did random spot checks in about 500 files from the spreadsheets
    for the uapi headers and agreed with SPDX license identifier in the
    files he inspected. For the non-uapi files Thomas did random spot checks
    in about 15000 files.
    
    In initial set of patches against 4.14-rc6, 3 files were found to have
    copy/paste license identifier errors, and have been fixed to reflect the
    correct identifier.
    
    Additionally Philippe spent 10 hours this week doing a detailed manual
    inspection and review of the 12,461 patched files from the initial patch
    version early this week with:
     - a full scancode scan run, collecting the matched texts, detected
       license ids and scores
     - reviewing anything where there was a license detected (about 500+
       files) to ensure that the applied SPDX license was correct
     - reviewing anything where there was no detection but the patch license
       was not GPL-2.0 WITH Linux-syscall-note to ensure that the applied
       SPDX license was correct
    
    This produced a worksheet with 20 files needing minor correction.  This
    worksheet was then exported into 3 different .csv files for the
    different types of files to be modified.
    
    These .csv files were then reviewed by Greg.  Thomas wrote a script to
    parse the csv files and add the proper SPDX tag to the file, in the
    format that the file expected.  This script was further refined by Greg
    based on the output to detect more types of files automatically and to
    distinguish between header and source .c files (which need different
    comment types.)  Finally Greg ran the script using the .csv files to
    generate the patches.
    
    Reviewed-by: Kate Stewart <kstewart@linuxfoundation.org>
    Reviewed-by: Philippe Ombredanne <pombredanne@nexb.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/include/linux/scx200.h b/include/linux/scx200.h
index de466e11e271..652ec1a45f7c 100644
--- a/include/linux/scx200.h
+++ b/include/linux/scx200.h
@@ -1,3 +1,4 @@
+/* SPDX-License-Identifier: GPL-2.0 */
 /* linux/include/linux/scx200.h
 
    Copyright (c) 2001,2002 Christer Weinigel <wingel@nano-system.com>

commit 856fe98f168e5b80b053979769af2514aab96d6b
Author: Jim Cromie <jim.cromie@gmail.com>
Date:   Wed Oct 4 02:15:35 2006 -0700

    [PATCH] scx200_hrt: fix precedence bug manifesting as 27x clock in 1 MHz mode
    
    Fix paren-placement / precedence bug breaking initialization for 1 MHz
    clock mode.
    
    Also fix comment spelling error, and fence-post (off-by-one) error on
    symbol used in request_region.
    
    Addresses http://bugzilla.kernel.org/show_bug.cgi?id=7242
    
    Thanks alexander.krause@erazor-zone.de, dzpost@dedekind.net, for the
    reports and patch test, and phelps@mantara.com for the independent patch
    and verification.
    
    Signed-off-by:  Jim Cromie <jim.cromie@gmail.com>
    Cc: <alexander.krause@erazor-zone.de>
    Cc: <dzpost@dedekind.net>
    Cc: <phelps@mantara.com>
    Acked-by: John Stultz <johnstul@us.ibm.com>
    Cc: <stable@kernel.org>
    Signed-off-by: Andrew Morton <akpm@osdl.org>
    Signed-off-by: Linus Torvalds <torvalds@osdl.org>

diff --git a/include/linux/scx200.h b/include/linux/scx200.h
index 693c0557e70b..de466e11e271 100644
--- a/include/linux/scx200.h
+++ b/include/linux/scx200.h
@@ -32,7 +32,7 @@ extern unsigned scx200_cb_base;
 
 /* High Resolution Timer */
 #define SCx200_TIMER_OFFSET 0x08
-#define SCx200_TIMER_SIZE 0x05
+#define SCx200_TIMER_SIZE 0x06
 
 /* Clock Generators */
 #define SCx200_CLOCKGEN_OFFSET 0x10

commit 62c83cde9282a9580994a12b3063e677181b5ebe
Author: Jim Cromie <jim.cromie@gmail.com>
Date:   Tue Jun 27 02:54:13 2006 -0700

    [PATCH] chardev: GPIO for SCx200 & PC-8736x: whitespace pre-clean
    
    GPIO SUPPORT FOR SCx200 & PC8736x
    
    The patch-set reworks the 2.4 vintage scx200_gpio driver for modern 2.6, and
    refactors GPIO support to reuse it in a new driver for the GPIO on PC-8736x
    chips.  Its handy for the Soekris.com net-4801, which has both chips.
    
    These patches have been seen recently on Kernel-Mentors, and then
    Kernel-Newbies ML, where Jesper Juhl kindly reviewed it.  His feedback has
    been incorporated.  Thanks Jesper !
    
    Its also gone to soekris-tech@soekris.com for possible testing by linux folks,
    I've gotten 1 promise so far.  Theyre mostly BSD folk over there, but we'll
    see..
    
    Device-file & Sysfs
    
    The driver preserves the existing device-file interface, including the
    write/cmd set, but adds v to 'view' the pin-settings & configs by inducing,
    via gpio_dump(), a dev_info() call.  Its a fairly crappy way to get status,
    but it sticks to the syslog approach, conservatively.
    
    Allowing users to voluntarily trigger logging is good, it gives them a
    familiar way to confirm their app's control & use of the pins, and I've thus
    reduced the pin-mode-updates from dev_info to dev_dbg.
    
    I've recently bolted on a proto sysfs interface for both new drivers.  Im not
    including those patches here; they (the patch + doc-pre-patch) are still quite
    raw (and unreviewed on KNML), and since they 'invent' a convention for GPIO, a
    proper vetting is needed.  Since this patchset is much bigger than my previous
    ones, Id like to keep things simpler, and address it 1st, before bolting on
    more stuff.
    
    The driver-split
    
    The Geode CPU and the PC-87366 Super-IO chip have GPIO units which share a
    common pin-architecture (same pin features, with same bits controlling), but
    with different addressing mechanics and port organizations.
    
    The vintage driver expresses the pin capabilities with pin-mode commands
    [OoPpTt],etc that change the pin configurations, and since the 2 chips share
    pin-arch, we can reuse the read(), write() commands, once the implementation
    is suitably adjusted.
    
    The patchset adds a vtable: struct nsc_gpio_ops, to abstract the existing gpio
    operations, then adjusts fileops.write() code to invoke operations via that
    vtable.  Driver specific open()s set private_data to the vtable so its
    available for use by write().
    
    The vtable gets the gpio_dump() too, since its user-friendly, and (could be
    construed as) part of the current device-file interface.  To support use of
    dev_dbg() in write() & _dump(), the vtable gets a dev ptr too, set by both
    scx200 & pc8736x _gpio drivers.
    
    heres how the pins are presented in syslog:
    
    [ 1890.176223]  scx200_gpio.0: io00: 0x0044 TS OD PUE  EDGE LO DEBOUNCE
    [ 1890.287223]  scx200_gpio.0: io01: 0x0003 OE PP PUD  EDGE LO
    
    nsc_gpio.c: new file is new home of several file-ops methods, which are
    modified to get their vtable from filp->private_data, and use it where needed.
    
    scx200_gpio.c: keeps some of its existing gpio routines, but now wires them up
    via the vtable (they're invoked by nsc_gpio.c:nsc_gpio_write() thru this
    vtable).  A driver-spcific open() initializes filp->private_data with the
    vtable.
    
    Once the split is clean, and the scx200_gpio driver is working, we copy and
    modify the function and variable names, and rework the access-method bodies
    for the different addressing scheme.
    
    Heres a working overview of the patchset:
    
    # series file for GPIO
    
    # Spring Cleaning
    gpio-scx/patch.preclean        # scripts/Lindent fixes, editor-ctrl comments
    
    # API Modernization
    
    gpio-scx/patch.api26        # what I learned from LDD3
    gpio-scx/patch.platform-dev-2    # get pdev, support for dev_dbg()
    gpio-scx/patch.unsigned-minor    # fix to match std practice
    
    # Debuggability
    
    gpio-scx/patch.dump-diet    # shrink gpio_dump()
    gpio-scx/patch.viewpins        # add new 'command' to call dump()
    gpio-scx/patch.init-refactor    # pull shadow-register init to sub
    
    # Access-Abstraction (add vtable)
    
    gpio-scx/patch.access-vtable    # introduce nsg_gpio_ops vtable, w dump
    gpio-scx/patch.vtable-calls    # add & use the vtable in scx200_gpio
    gpio-scx/patch.nscgpio-shell    # add empty driver for common-fops
    
    # move code under abstraction
    gpio-scx/patch.migrate-fops    # move file-ops methods from scx200_gpio
    gpio-scx/patch.common-dump    # mv scx200.c:scx200_gpio_dump() to nsc_gpio.c
    gpio-scx/patch.add-pc8736x-gpio    # add new driver, like old, w chip adapt
    # gpio-scx/patch.add-DEBUG    # enable all dev_dbg()s
    
    # Cleanups
    
    # finish printk -> dev_dbg() etc
    gpio-scx/patch.pdev-pc8736x    # new drvr needs pdev too,
    gpio-scx/patch.devdbg-nscgpio    # add device to 'vtable', use in dev_dbg()
    
    # gpio-scx/patch.pin-config-view    # another 'c' 'command'
    # gpio-scx/quiet-getset        # take out excess dbg stuff (pretty quiet
    now)
    gpio-scx/patch.shadow-current    # imitate scx200_gpio's shadow regs in
    pc87*
    
    # post KMentors-post patches ..
    
    gpio-scx/patch.mutexes        # use mutexes for config-locks
    gpio-scx/patch.viewpins-values    # extend dump to obsolete separate 'c' cmd
    
    gpio-scx/patch.kconfig        # add stuff for kbuild
    
    # TBC
    # combine api26 with pdev, which is just one step.
    # merge c&v commands to single do-all-fn
    # delay viewpins, dump-diet should also un-ifdef it too.
    
    diff.sys-gpio-rollup-1
    
    This patch:
    
    Removed editor format-control comments, and used scripts/Lindent to clean up
    whitespace, then deleted the bogus chunks :-(
    
    Signed-off-by: Jim Cromie <jim.cromie@gmail.com>
    Signed-off-by: Andrew Morton <akpm@osdl.org>
    Signed-off-by: Linus Torvalds <torvalds@osdl.org>

diff --git a/include/linux/scx200.h b/include/linux/scx200.h
index a22f9e173ad2..693c0557e70b 100644
--- a/include/linux/scx200.h
+++ b/include/linux/scx200.h
@@ -49,10 +49,3 @@ extern unsigned scx200_cb_base;
 #define SCx200_REV 0x3d		/* Revision Register */
 #define SCx200_CBA 0x3e		/* Configuration Base Address Register */
 #define SCx200_CBA_SCRATCH 0x64	/* Configuration Base Address Scratchpad */
-
-/*
-    Local variables:
-        compile-command: "make -C ../.. bzImage modules"
-        c-basic-offset: 8
-    End:
-*/

commit 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2
Author: Linus Torvalds <torvalds@ppc970.osdl.org>
Date:   Sat Apr 16 15:20:36 2005 -0700

    Linux-2.6.12-rc2
    
    Initial git repository build. I'm not bothering with the full history,
    even though we have it. We can create a separate "historical" git
    archive of that later if we want to, and in the meantime it's about
    3.2GB when imported into git - space that would just make the early
    git days unnecessarily complicated, when we don't have a lot of good
    infrastructure for it.
    
    Let it rip!

diff --git a/include/linux/scx200.h b/include/linux/scx200.h
new file mode 100644
index 000000000000..a22f9e173ad2
--- /dev/null
+++ b/include/linux/scx200.h
@@ -0,0 +1,58 @@
+/* linux/include/linux/scx200.h
+
+   Copyright (c) 2001,2002 Christer Weinigel <wingel@nano-system.com>
+
+   Defines for the National Semiconductor SCx200 Processors
+*/
+
+/* Interesting stuff for the National Semiconductor SCx200 CPU */
+
+extern unsigned scx200_cb_base;
+
+#define scx200_cb_present() (scx200_cb_base!=0)
+
+/* F0 PCI Header/Bridge Configuration Registers */
+#define SCx200_DOCCS_BASE 0x78	/* DOCCS Base Address Register */
+#define SCx200_DOCCS_CTRL 0x7c	/* DOCCS Control Register */
+
+/* GPIO Register Block */
+#define SCx200_GPIO_SIZE 0x2c	/* Size of GPIO register block */
+
+/* General Configuration Block */
+#define SCx200_CB_BASE_FIXED 0x9000	/* Base fixed at 0x9000 according to errata? */
+
+/* Watchdog Timer */
+#define SCx200_WDT_OFFSET 0x00	/* offset within configuration block */
+#define SCx200_WDT_SIZE 0x05	/* size */
+
+#define SCx200_WDT_WDTO 0x00	/* Time-Out Register */
+#define SCx200_WDT_WDCNFG 0x02	/* Configuration Register */
+#define SCx200_WDT_WDSTS 0x04	/* Status Register */
+#define SCx200_WDT_WDSTS_WDOVF (1<<0) /* Overflow bit */
+
+/* High Resolution Timer */
+#define SCx200_TIMER_OFFSET 0x08
+#define SCx200_TIMER_SIZE 0x05
+
+/* Clock Generators */
+#define SCx200_CLOCKGEN_OFFSET 0x10
+#define SCx200_CLOCKGEN_SIZE 0x10
+
+/* Pin Multiplexing and Miscellaneous Configuration Registers */
+#define SCx200_MISC_OFFSET 0x30
+#define SCx200_MISC_SIZE 0x10
+
+#define SCx200_PMR 0x30		/* Pin Multiplexing Register */
+#define SCx200_MCR 0x34		/* Miscellaneous Configuration Register */
+#define SCx200_INTSEL 0x38	/* Interrupt Selection Register */
+#define SCx200_IID 0x3c		/* IA On a Chip Identification Number Reg */
+#define SCx200_REV 0x3d		/* Revision Register */
+#define SCx200_CBA 0x3e		/* Configuration Base Address Register */
+#define SCx200_CBA_SCRATCH 0x64	/* Configuration Base Address Scratchpad */
+
+/*
+    Local variables:
+        compile-command: "make -C ../.. bzImage modules"
+        c-basic-offset: 8
+    End:
+*/
