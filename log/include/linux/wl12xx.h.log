commit 2b27bdcc20958d644d04f9f12d683e52b37a5427
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed May 29 16:57:50 2019 -0700

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 336
    
    Based on 1 normalized pattern(s):
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license version 2 as
      published by the free software foundation this program is
      distributed in the hope that it will be useful but without any
      warranty without even the implied warranty of merchantability or
      fitness for a particular purpose see the gnu general public license
      for more details you should have received a copy of the gnu general
      public license along with this program if not write to the free
      software foundation inc 51 franklin st fifth floor boston ma 02110
      1301 usa
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-only
    
    has been chosen to replace the boilerplate/reference in 246 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Alexios Zavras <alexios.zavras@intel.com>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190530000436.674189849@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/include/linux/wl12xx.h b/include/linux/wl12xx.h
index 95704cd4cfab..03d61f1d23ab 100644
--- a/include/linux/wl12xx.h
+++ b/include/linux/wl12xx.h
@@ -1,24 +1,10 @@
+/* SPDX-License-Identifier: GPL-2.0-only */
 /*
  * This file is part of wl12xx
  *
  * Copyright (C) 2009 Nokia Corporation
  *
  * Contact: Luciano Coelho <luciano.coelho@nokia.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * version 2 as published by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful, but
- * WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- * General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
- * 02110-1301 USA
- *
  */
 
 #ifndef _LINUX_WL12XX_H

commit 83c3a7d4ac7fdc29a64bf9a5467a36b4c72a1eed
Author: Eliad Peller <eliad@wizery.com>
Date:   Wed Mar 18 18:38:30 2015 +0200

    wlcore: remove wl12xx_platform_data
    
    Now that we have wlcore device-tree bindings in place
    (for both wl12xx and wl18xx), remove the legacy
    wl12xx_platform_data struct, and move its members
    into the platform device data (that is passed to wlcore)
    
    Davinci 850 is the only platform that still set
    the platform data in the legacy way (and doesn't
    have DT bindings), so remove the relevant
    code/Kconfig option from the board file (as suggested
    by Sekhar Nori)
    
    Since no one currently uses wlcore_spi, simply remove its
    platform data support (DT bindings will have to be added
    if someone actually needs it)
    
    Signed-off-by: Luciano Coelho <luca@coelho.fi>
    Signed-off-by: Eliad Peller <eliad@wizery.com>
    Tested-by: Nikita Kiryanov <nikita@compulab.co.il>
    Acked-by: Kalle Valo <kvalo@codeaurora.org>
    Acked-by: Sekhar Nori <nsekhar@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>

diff --git a/include/linux/wl12xx.h b/include/linux/wl12xx.h
index eea1e6dac4be..95704cd4cfab 100644
--- a/include/linux/wl12xx.h
+++ b/include/linux/wl12xx.h
@@ -33,39 +33,14 @@ struct wl1251_platform_data {
 	bool use_eeprom;
 };
 
-struct wl12xx_platform_data {
-	int irq;
-	u32 irq_trigger;
-	bool ref_clock_xtal;	/* specify whether the clock is XTAL or not */
-	u32 ref_clock_freq;	/* in Hertz */
-	u32 tcxo_clock_freq;	/* in Hertz, tcxo is always XTAL */
-	bool pwr_in_suspend;
-};
-
 #ifdef CONFIG_WILINK_PLATFORM_DATA
 
-int wl12xx_set_platform_data(const struct wl12xx_platform_data *data);
-
-struct wl12xx_platform_data *wl12xx_get_platform_data(void);
-
 int wl1251_set_platform_data(const struct wl1251_platform_data *data);
 
 struct wl1251_platform_data *wl1251_get_platform_data(void);
 
 #else
 
-static inline
-int wl12xx_set_platform_data(const struct wl12xx_platform_data *data)
-{
-	return -ENOSYS;
-}
-
-static inline
-struct wl12xx_platform_data *wl12xx_get_platform_data(void)
-{
-	return ERR_PTR(-ENODATA);
-}
-
 static inline
 int wl1251_set_platform_data(const struct wl1251_platform_data *data)
 {

commit 44486b48b066330e0ed0a66478cc49f5975ec6c1
Author: Luciano Coelho <luca@coelho.fi>
Date:   Wed Mar 18 18:38:26 2015 +0200

    wl12xx: use frequency instead of enumerations for pdata clocks
    
    Instead of defining an enumeration with the FW specific values for the
    different clock rates, use the actual frequency instead.  Also add a
    boolean to specify whether the clock is XTAL or not.
    
    Change all board files to reflect this.
    
    Signed-off-by: Luciano Coelho <luca@coelho.fi>
    [Eliad - small fixes, update board file changes]
    Signed-off-by: Eliad Peller <eliad@wizery.com>
    Tested-by: Nikita Kiryanov <nikita@compulab.co.il>
    Acked-by: Kalle Valo <kvalo@codeaurora.org>
    Acked-by: Sekhar Nori <nsekhar@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>

diff --git a/include/linux/wl12xx.h b/include/linux/wl12xx.h
index 3876b67dbcbc..eea1e6dac4be 100644
--- a/include/linux/wl12xx.h
+++ b/include/linux/wl12xx.h
@@ -26,28 +26,6 @@
 
 #include <linux/err.h>
 
-/* Reference clock values */
-enum {
-	WL12XX_REFCLOCK_19	= 0, /* 19.2 MHz */
-	WL12XX_REFCLOCK_26	= 1, /* 26 MHz */
-	WL12XX_REFCLOCK_38	= 2, /* 38.4 MHz */
-	WL12XX_REFCLOCK_52	= 3, /* 52 MHz */
-	WL12XX_REFCLOCK_38_XTAL = 4, /* 38.4 MHz, XTAL */
-	WL12XX_REFCLOCK_26_XTAL = 5, /* 26 MHz, XTAL */
-};
-
-/* TCXO clock values */
-enum {
-	WL12XX_TCXOCLOCK_19_2	= 0, /* 19.2MHz */
-	WL12XX_TCXOCLOCK_26	= 1, /* 26 MHz */
-	WL12XX_TCXOCLOCK_38_4	= 2, /* 38.4MHz */
-	WL12XX_TCXOCLOCK_52	= 3, /* 52 MHz */
-	WL12XX_TCXOCLOCK_16_368	= 4, /* 16.368 MHz */
-	WL12XX_TCXOCLOCK_32_736	= 5, /* 32.736 MHz */
-	WL12XX_TCXOCLOCK_16_8	= 6, /* 16.8 MHz */
-	WL12XX_TCXOCLOCK_33_6	= 7, /* 33.6 MHz */
-};
-
 struct wl1251_platform_data {
 	int power_gpio;
 	/* SDIO only: IRQ number if WLAN_IRQ line is used, 0 for SDIO IRQs */
@@ -58,8 +36,9 @@ struct wl1251_platform_data {
 struct wl12xx_platform_data {
 	int irq;
 	u32 irq_trigger;
-	int board_ref_clock;
-	int board_tcxo_clock;
+	bool ref_clock_xtal;	/* specify whether the clock is XTAL or not */
+	u32 ref_clock_freq;	/* in Hertz */
+	u32 tcxo_clock_freq;	/* in Hertz, tcxo is always XTAL */
 	bool pwr_in_suspend;
 };
 

commit 6f921fab5844941f7605b7f1a265f5fc7fe969a7
Author: Luciano Coelho <luca@coelho.fi>
Date:   Wed Mar 18 18:38:25 2015 +0200

    wlcore: set irq_trigger in board files instead of hiding behind a quirk
    
    The platform_quirk element in the platform data was used
    to change the way the IRQ is triggered.  When set,
    the EDGE_IRQ quirk would change the irqflags used
    and treat edge trigger differently from the rest.
    
    Instead of hiding this irq flag setting behind the quirk,
    have the board files set the irq_trigger explicitly.
    
    This will allow us to use standard irq DT definitions
    later on.
    
    Signed-off-by: Luciano Coelho <luca@coelho.fi>
    [Eliad - rebase, add irq_trigger field and pass it,
    update board file changes]
    Signed-off-by: Eliad Peller <eliad@wizery.com>
    Tested-by: Nikita Kiryanov <nikita@compulab.co.il>
    Acked-by: Kalle Valo <kvalo@codeaurora.org>
    Acked-by: Sekhar Nori <nsekhar@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>

diff --git a/include/linux/wl12xx.h b/include/linux/wl12xx.h
index a9c723be1acf..3876b67dbcbc 100644
--- a/include/linux/wl12xx.h
+++ b/include/linux/wl12xx.h
@@ -57,15 +57,12 @@ struct wl1251_platform_data {
 
 struct wl12xx_platform_data {
 	int irq;
+	u32 irq_trigger;
 	int board_ref_clock;
 	int board_tcxo_clock;
-	unsigned long platform_quirks;
 	bool pwr_in_suspend;
 };
 
-/* Platform does not support level trigger interrupts */
-#define WL12XX_PLATFORM_QUIRK_EDGE_IRQ	BIT(0)
-
 #ifdef CONFIG_WILINK_PLATFORM_DATA
 
 int wl12xx_set_platform_data(const struct wl12xx_platform_data *data);

commit 1d207cd30b65fdd60d952cb9e100b6f776564f06
Author: Sebastian Reichel <sre@debian.org>
Date:   Sat Feb 15 00:05:53 2014 +0100

    wl1251: move power GPIO handling into the driver
    
    Move the power GPIO handling from the board code into
    the driver. This is a dependency for device tree support.
    
    Signed-off-by: Sebastian Reichel <sre@debian.org>
    Reviewed-by: Pavel Machek <pavel@ucw.cz>
    Acked-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>

diff --git a/include/linux/wl12xx.h b/include/linux/wl12xx.h
index b516b4fa22de..a9c723be1acf 100644
--- a/include/linux/wl12xx.h
+++ b/include/linux/wl12xx.h
@@ -49,7 +49,7 @@ enum {
 };
 
 struct wl1251_platform_data {
-	void (*set_power)(bool enable);
+	int power_gpio;
 	/* SDIO only: IRQ number if WLAN_IRQ line is used, 0 for SDIO IRQs */
 	int irq;
 	bool use_eeprom;

commit 946651cba26779864bcdbd7e12502f5a36c2de37
Author: Luciano Coelho <coelho@ti.com>
Date:   Sat Feb 15 00:05:52 2014 +0100

    wl1251: split wl251 platform data to a separate structure
    
    Move the wl1251 part of the wl12xx platform data structure into a new
    structure specifically for wl1251.  Change the platform data built-in
    block and board files accordingly.
    
    Signed-off-by: Luciano Coelho <coelho@ti.com>
    Acked-by: Tony Lindgren <tony@atomide.com>
    Reviewed-by: Felipe Balbi <balbi@ti.com>
    Reviewed-by: Sebastian Reichel <sre@debian.org>
    Reviewed-by: Pavel Machek <pavel@ucw.cz>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>

diff --git a/include/linux/wl12xx.h b/include/linux/wl12xx.h
index a54fe82e704b..b516b4fa22de 100644
--- a/include/linux/wl12xx.h
+++ b/include/linux/wl12xx.h
@@ -48,11 +48,15 @@ enum {
 	WL12XX_TCXOCLOCK_33_6	= 7, /* 33.6 MHz */
 };
 
-struct wl12xx_platform_data {
+struct wl1251_platform_data {
 	void (*set_power)(bool enable);
 	/* SDIO only: IRQ number if WLAN_IRQ line is used, 0 for SDIO IRQs */
 	int irq;
 	bool use_eeprom;
+};
+
+struct wl12xx_platform_data {
+	int irq;
 	int board_ref_clock;
 	int board_tcxo_clock;
 	unsigned long platform_quirks;
@@ -68,6 +72,10 @@ int wl12xx_set_platform_data(const struct wl12xx_platform_data *data);
 
 struct wl12xx_platform_data *wl12xx_get_platform_data(void);
 
+int wl1251_set_platform_data(const struct wl1251_platform_data *data);
+
+struct wl1251_platform_data *wl1251_get_platform_data(void);
+
 #else
 
 static inline
@@ -82,6 +90,18 @@ struct wl12xx_platform_data *wl12xx_get_platform_data(void)
 	return ERR_PTR(-ENODATA);
 }
 
+static inline
+int wl1251_set_platform_data(const struct wl1251_platform_data *data)
+{
+	return -ENOSYS;
+}
+
+static inline
+struct wl1251_platform_data *wl1251_get_platform_data(void)
+{
+	return ERR_PTR(-ENODATA);
+}
+
 #endif
 
 #endif

commit 6cc9efed707c575a9e5880ea68f8b9d36b235f1f
Author: Luciano Coelho <coelho@ti.com>
Date:   Fri Jan 25 12:05:34 2013 +0200

    wlcore: move wl12xx_platform_data up and make it truly optional
    
    The platform data is used not only by wlcore-based drivers, but also
    by wl1251.  Move it up in the directory hierarchy to reflect this.
    
    Additionally, make it truly optional.  At the moment, disabling
    platform data while wl1251_sdio or wlcore_sdio are enabled doesn't
    work, but it will be necessary when device tree support is
    implemented.
    
    Signed-off-by: Luciano Coelho <coelho@ti.com>
    Reviewed-by: Felipe Balbi <balbi@ti.com>

diff --git a/include/linux/wl12xx.h b/include/linux/wl12xx.h
index 360c9bce665c..a54fe82e704b 100644
--- a/include/linux/wl12xx.h
+++ b/include/linux/wl12xx.h
@@ -24,6 +24,8 @@
 #ifndef _LINUX_WL12XX_H
 #define _LINUX_WL12XX_H
 
+#include <linux/err.h>
+
 /* Reference clock values */
 enum {
 	WL12XX_REFCLOCK_19	= 0, /* 19.2 MHz */
@@ -60,10 +62,12 @@ struct wl12xx_platform_data {
 /* Platform does not support level trigger interrupts */
 #define WL12XX_PLATFORM_QUIRK_EDGE_IRQ	BIT(0)
 
-#ifdef CONFIG_WL12XX_PLATFORM_DATA
+#ifdef CONFIG_WILINK_PLATFORM_DATA
 
 int wl12xx_set_platform_data(const struct wl12xx_platform_data *data);
 
+struct wl12xx_platform_data *wl12xx_get_platform_data(void);
+
 #else
 
 static inline
@@ -72,8 +76,12 @@ int wl12xx_set_platform_data(const struct wl12xx_platform_data *data)
 	return -ENOSYS;
 }
 
-#endif
+static inline
+struct wl12xx_platform_data *wl12xx_get_platform_data(void)
+{
+	return ERR_PTR(-ENODATA);
+}
 
-struct wl12xx_platform_data *wl12xx_get_platform_data(void);
+#endif
 
 #endif

commit afb43e6d88e587441c960a5d214d2c698d076c9c
Author: Luciano Coelho <coelho@ti.com>
Date:   Fri Jan 25 11:57:48 2013 +0200

    wlcore: remove if_ops from platform_data
    
    We can't pass pointers from the platform data to the modules, because
    with DT it cannot be done.  Those pointers are not set by the board
    files anyway.  It's the bus modules that set them, so they can be
    safely removed from the platform data without changing any board
    files.
    
    Create a new structure that the bus modules pass to wlcore.  This
    structure contains the if_ops pointers and a pointer to the actual
    platform data.
    
    Signed-off-by: Luciano Coelho <coelho@ti.com>
    Reviewed-by: Felipe Balbi <balbi@ti.com>

diff --git a/include/linux/wl12xx.h b/include/linux/wl12xx.h
index 0d6373195d32..360c9bce665c 100644
--- a/include/linux/wl12xx.h
+++ b/include/linux/wl12xx.h
@@ -55,8 +55,6 @@ struct wl12xx_platform_data {
 	int board_tcxo_clock;
 	unsigned long platform_quirks;
 	bool pwr_in_suspend;
-
-	struct wl1271_if_operations *ops;
 };
 
 /* Platform does not support level trigger interrupts */

commit a390e85cfe91c346ff4745bcd45ad0a7e7101aa2
Author: Felipe Balbi <balbi@ti.com>
Date:   Thu Oct 6 10:07:44 2011 +0300

    wl12xx: move common init code from bus modules to main
    
    Move all common parts from sdio.c and spi.c to main.c, since they now
    can be handled as part of the platform driver.
    
    Signed-off-by: Felipe Balbi <balbi@ti.com>
    [forward-ported, cleaned-up and rephrased commit message]
    [added a bunch of fixes and a new pdata element]
    [moved some new code into main.c as well]
    Signed-off-by: Luciano Coelho <coelho@ti.com>

diff --git a/include/linux/wl12xx.h b/include/linux/wl12xx.h
index 4b697395326e..0d6373195d32 100644
--- a/include/linux/wl12xx.h
+++ b/include/linux/wl12xx.h
@@ -54,6 +54,9 @@ struct wl12xx_platform_data {
 	int board_ref_clock;
 	int board_tcxo_clock;
 	unsigned long platform_quirks;
+	bool pwr_in_suspend;
+
+	struct wl1271_if_operations *ops;
 };
 
 /* Platform does not support level trigger interrupts */
@@ -73,6 +76,6 @@ int wl12xx_set_platform_data(const struct wl12xx_platform_data *data)
 
 #endif
 
-const struct wl12xx_platform_data *wl12xx_get_platform_data(void);
+struct wl12xx_platform_data *wl12xx_get_platform_data(void);
 
 #endif

commit 341b7cde6ccc60672fcd7fc84dd24a1b7c0b8d94
Author: Ido Yariv <ido@wizery.com>
Date:   Thu Mar 31 10:07:01 2011 +0200

    wl12xx: Handle platforms without level trigger interrupts
    
    Some platforms are incapable of triggering on level interrupts. Add a
    platform quirks member in the platform data structure, as well as an
    edge interrupt quirk which can be set on such platforms.
    
    When the interrupt is requested with IRQF_TRIGGER_RISING, IRQF_ONESHOT
    cannot be used, as we might miss interrupts that occur after the FW
    status is cleared and before the threaded interrupt handler exits.
    
    Moreover, when IRQF_ONESHOT is not set, iterating more than once in the
    threaded interrupt handler introduces a few race conditions between this
    handler and the hardirq handler. Currently this is worked around by
    limiting the loop to one iteration only. This workaround has an impact
    on performance. To remove to this restriction, the race conditions will
    need to be addressed.
    
    Signed-off-by: Ido Yariv <ido@wizery.com>
    Signed-off-by: Luciano Coelho <coelho@ti.com>

diff --git a/include/linux/wl12xx.h b/include/linux/wl12xx.h
index c1a743ea7470..4b697395326e 100644
--- a/include/linux/wl12xx.h
+++ b/include/linux/wl12xx.h
@@ -53,8 +53,12 @@ struct wl12xx_platform_data {
 	bool use_eeprom;
 	int board_ref_clock;
 	int board_tcxo_clock;
+	unsigned long platform_quirks;
 };
 
+/* Platform does not support level trigger interrupts */
+#define WL12XX_PLATFORM_QUIRK_EDGE_IRQ	BIT(0)
+
 #ifdef CONFIG_WL12XX_PLATFORM_DATA
 
 int wl12xx_set_platform_data(const struct wl12xx_platform_data *data);

commit d29633b40e6afc6b4276a4e381bc532cc84be104
Author: Ido Yariv <ido@wizery.com>
Date:   Thu Mar 31 10:06:57 2011 +0200

    wl12xx: Clean up and fix the 128x boot sequence
    
    Clean up the boot sequence code & fix the following issues:
    1. Always read the registers' values and set the relevant bits instead of
       zeroing all other bits
    2. Handle cases where wl1271_top_reg_read returns an error
    3. Verify that the HW can detect the selected clock source
    4. Remove 128x PG10 initialization code
    5. Configure the MCS PLL to work in HP mode
    
    Signed-off-by: Ido Yariv <ido@wizery.com>
    Reviewed-by: Luciano Coelho <coelho@ti.com>
    Signed-off-by: Luciano Coelho <coelho@ti.com>

diff --git a/include/linux/wl12xx.h b/include/linux/wl12xx.h
index eb8aacab8d4e..c1a743ea7470 100644
--- a/include/linux/wl12xx.h
+++ b/include/linux/wl12xx.h
@@ -26,10 +26,12 @@
 
 /* Reference clock values */
 enum {
-	WL12XX_REFCLOCK_19 = 0,	/* 19.2 MHz */
-	WL12XX_REFCLOCK_26 = 1,	/* 26 MHz */
-	WL12XX_REFCLOCK_38 = 2,	/* 38.4 MHz */
-	WL12XX_REFCLOCK_54 = 3,	/* 54 MHz */
+	WL12XX_REFCLOCK_19	= 0, /* 19.2 MHz */
+	WL12XX_REFCLOCK_26	= 1, /* 26 MHz */
+	WL12XX_REFCLOCK_38	= 2, /* 38.4 MHz */
+	WL12XX_REFCLOCK_52	= 3, /* 52 MHz */
+	WL12XX_REFCLOCK_38_XTAL = 4, /* 38.4 MHz, XTAL */
+	WL12XX_REFCLOCK_26_XTAL = 5, /* 26 MHz, XTAL */
 };
 
 /* TCXO clock values */

commit 62c7d085e1f2a1f2b4d89560551eff18d703b3b1
Author: Luciano Coelho <coelho@ti.com>
Date:   Thu Mar 10 16:42:47 2011 +0200

    wl12xx: add new board_tcxo_clock element to the platform data
    
    This new value is a new type of clock setting that is used by wl128x
    chipsets.
    
    Signed-off-by: Luciano Coelho <coelho@ti.com>

diff --git a/include/linux/wl12xx.h b/include/linux/wl12xx.h
index bebb8efea0a6..eb8aacab8d4e 100644
--- a/include/linux/wl12xx.h
+++ b/include/linux/wl12xx.h
@@ -24,7 +24,7 @@
 #ifndef _LINUX_WL12XX_H
 #define _LINUX_WL12XX_H
 
-/* The board reference clock values */
+/* Reference clock values */
 enum {
 	WL12XX_REFCLOCK_19 = 0,	/* 19.2 MHz */
 	WL12XX_REFCLOCK_26 = 1,	/* 26 MHz */
@@ -32,12 +32,25 @@ enum {
 	WL12XX_REFCLOCK_54 = 3,	/* 54 MHz */
 };
 
+/* TCXO clock values */
+enum {
+	WL12XX_TCXOCLOCK_19_2	= 0, /* 19.2MHz */
+	WL12XX_TCXOCLOCK_26	= 1, /* 26 MHz */
+	WL12XX_TCXOCLOCK_38_4	= 2, /* 38.4MHz */
+	WL12XX_TCXOCLOCK_52	= 3, /* 52 MHz */
+	WL12XX_TCXOCLOCK_16_368	= 4, /* 16.368 MHz */
+	WL12XX_TCXOCLOCK_32_736	= 5, /* 32.736 MHz */
+	WL12XX_TCXOCLOCK_16_8	= 6, /* 16.8 MHz */
+	WL12XX_TCXOCLOCK_33_6	= 7, /* 33.6 MHz */
+};
+
 struct wl12xx_platform_data {
 	void (*set_power)(bool enable);
 	/* SDIO only: IRQ number if WLAN_IRQ line is used, 0 for SDIO IRQs */
 	int irq;
 	bool use_eeprom;
 	int board_ref_clock;
+	int board_tcxo_clock;
 };
 
 #ifdef CONFIG_WL12XX_PLATFORM_DATA

commit c8aea565e8f715d9f10064b1cbfbc15bf75df501
Author: Gery Kahn <geryk@ti.com>
Date:   Tue Oct 5 16:09:05 2010 +0200

    wl1271: ref_clock cosmetic changes
    
    Cosmetic cleanup for ref_clock code while configured by board.
    
    Signed-off-by: Gery Kahn <geryk@ti.com>
    Signed-off-by: Luciano Coelho <luciano.coelho@nokia.com>

diff --git a/include/linux/wl12xx.h b/include/linux/wl12xx.h
index 4f902e1908aa..bebb8efea0a6 100644
--- a/include/linux/wl12xx.h
+++ b/include/linux/wl12xx.h
@@ -24,6 +24,14 @@
 #ifndef _LINUX_WL12XX_H
 #define _LINUX_WL12XX_H
 
+/* The board reference clock values */
+enum {
+	WL12XX_REFCLOCK_19 = 0,	/* 19.2 MHz */
+	WL12XX_REFCLOCK_26 = 1,	/* 26 MHz */
+	WL12XX_REFCLOCK_38 = 2,	/* 38.4 MHz */
+	WL12XX_REFCLOCK_54 = 3,	/* 54 MHz */
+};
+
 struct wl12xx_platform_data {
 	void (*set_power)(bool enable);
 	/* SDIO only: IRQ number if WLAN_IRQ line is used, 0 for SDIO IRQs */

commit 65836112fc24bdf009554481b36b6ba0a690b855
Author: Ohad Ben-Cohen <ohad@wizery.com>
Date:   Tue Sep 28 20:20:28 2010 +0200

    wl12xx: fix non-wl12xx build scenarios
    
    Support building wl1271-equipped boards without building the
    wl1271 driver itself, e.g.:
    
    CONFIG_MACH_OMAP_ZOOM3=y
    CONFIG_WL12XX is not set
    
    Reported-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Ohad Ben-Cohen <ohad@wizery.com>
    Signed-off-by: Luciano Coelho <luciano.coelho@nokia.com>

diff --git a/include/linux/wl12xx.h b/include/linux/wl12xx.h
index 95deae3968f4..4f902e1908aa 100644
--- a/include/linux/wl12xx.h
+++ b/include/linux/wl12xx.h
@@ -32,7 +32,20 @@ struct wl12xx_platform_data {
 	int board_ref_clock;
 };
 
+#ifdef CONFIG_WL12XX_PLATFORM_DATA
+
 int wl12xx_set_platform_data(const struct wl12xx_platform_data *data);
+
+#else
+
+static inline
+int wl12xx_set_platform_data(const struct wl12xx_platform_data *data)
+{
+	return -ENOSYS;
+}
+
+#endif
+
 const struct wl12xx_platform_data *wl12xx_get_platform_data(void);
 
 #endif

commit 15cea99306ae14ce5f7c3d3989bcc17202e2b0be
Author: Ohad Ben-Cohen <ohad@wizery.com>
Date:   Thu Sep 16 01:31:51 2010 +0200

    wl1271: make ref_clock configurable by board
    
    The wl1271 device is using a reference clock that may change
    between board to board.
    
    Make the ref_clock parameter configurable by board settings
    instead of having a hard coded value in the sources.
    
    Signed-off-by: Ohad Ben-Cohen <ohad@wizery.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>

diff --git a/include/linux/wl12xx.h b/include/linux/wl12xx.h
index bd70563107fa..95deae3968f4 100644
--- a/include/linux/wl12xx.h
+++ b/include/linux/wl12xx.h
@@ -29,6 +29,7 @@ struct wl12xx_platform_data {
 	/* SDIO only: IRQ number if WLAN_IRQ line is used, 0 for SDIO IRQs */
 	int irq;
 	bool use_eeprom;
+	int board_ref_clock;
 };
 
 int wl12xx_set_platform_data(const struct wl12xx_platform_data *data);

commit 61ee7007a5d61aa066076da578e8e8084e122d7d
Author: Ohad Ben-Cohen <ohad@wizery.com>
Date:   Thu Sep 16 01:31:12 2010 +0200

    wl12xx: add platform data passing support
    
    Add a simple mechanism to pass platform data to the
    SDIO instances of wl12xx.
    
    This way there is no confusion over who owns the 'embedded data',
    typechecking is preserved, and no possibility for the wrong driver to
    pick up the data.
    
    Originally proposed by Russell King.
    
    Signed-off-by: Ohad Ben-Cohen <ohad@wizery.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>

diff --git a/include/linux/wl12xx.h b/include/linux/wl12xx.h
index 015687a1776d..bd70563107fa 100644
--- a/include/linux/wl12xx.h
+++ b/include/linux/wl12xx.h
@@ -31,4 +31,7 @@ struct wl12xx_platform_data {
 	bool use_eeprom;
 };
 
+int wl12xx_set_platform_data(const struct wl12xx_platform_data *data);
+const struct wl12xx_platform_data *wl12xx_get_platform_data(void);
+
 #endif

commit c1f9a095600e07fefe64eb94eb711f410100824a
Author: Ohad Ben-Cohen <ohad@wizery.com>
Date:   Thu Sep 16 13:16:02 2010 +0200

    wl12xx: make wl12xx.h common to both spi and sdio
    
    Move wl12xx.h outside of the spi-specific location,
    so it can be shared with both spi and sdio solutions.
    
    Update all users of spi/wl12xx.h accordingly
    
    Signed-off-by: Ohad Ben-Cohen <ohad@wizery.com>
    Acked-by: Luciano Coelho <luciano.coelho@nokia.com>
    Acked-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>

diff --git a/include/linux/wl12xx.h b/include/linux/wl12xx.h
new file mode 100644
index 000000000000..015687a1776d
--- /dev/null
+++ b/include/linux/wl12xx.h
@@ -0,0 +1,34 @@
+/*
+ * This file is part of wl12xx
+ *
+ * Copyright (C) 2009 Nokia Corporation
+ *
+ * Contact: Luciano Coelho <luciano.coelho@nokia.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * version 2 as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA
+ *
+ */
+
+#ifndef _LINUX_WL12XX_H
+#define _LINUX_WL12XX_H
+
+struct wl12xx_platform_data {
+	void (*set_power)(bool enable);
+	/* SDIO only: IRQ number if WLAN_IRQ line is used, 0 for SDIO IRQs */
+	int irq;
+	bool use_eeprom;
+};
+
+#endif
