commit dc9d38cec71c508963b8f41c9d6d9cfd7e4ee393
Author: Andrew Lunn <andrew@lunn.ch>
Date:   Sat Dec 8 16:12:13 2018 +0100

    net: phy: mdio-gpio: Add phy_ignore_ta_mask to platform data
    
    The Marvell 6390 Ethernet switch family does not perform MDIO
    turnaround correctly. Many hardware MDIO bus masters don't care about
    this, but the bitbangging implementation in Linux does by default. Add
    phy_ignore_ta_mask to the platform data so that the bitbangging code
    can be told which devices are known to get TA wrong.
    
    v2
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/include/linux/platform_data/mdio-gpio.h b/include/linux/platform_data/mdio-gpio.h
index a5d5ff5e174c..13874fa6e767 100644
--- a/include/linux/platform_data/mdio-gpio.h
+++ b/include/linux/platform_data/mdio-gpio.h
@@ -8,6 +8,7 @@
 
 struct mdio_gpio_platform_data {
 	u32 phy_mask;
+	u32 phy_ignore_ta_mask;
 };
 
 #endif /* __LINUX_MDIO_GPIO_PDATA_H */

commit 04fa26bab06d9335f15a5d529c4bba25cd507a34
Author: Andrew Lunn <andrew@lunn.ch>
Date:   Sat Dec 8 16:12:12 2018 +0100

    net: phy: mdio-gpio: Add platform_data support for phy_mask
    
    It is sometimes necessary to instantiate a bit-banging MDIO bus as a
    platform device, without the aid of device tree.
    
    When device tree is being used, the bus is not scanned for devices,
    only those devices which are in device tree are probed. Without device
    tree, by default, all addresses on the bus are scanned. This may then
    find a device which is not a PHY, e.g. a switch. And the switch may
    have registers containing values which look like a PHY. So during the
    scan, a PHY device is wrongly created.
    
    After the bus has been registered, a search is made for
    mdio_board_info structures which indicates devices on the bus, and the
    driver which should be used for them. This is typically used to
    instantiate Ethernet switches from platform drivers.  However, if the
    scanning of the bus has created a PHY device at the same location as
    indicated into the board info for a switch, the switch device is not
    created, since the address is already busy.
    
    This can be avoided by setting the phy_mask of the mdio bus. This mask
    prevents addresses on the bus being scanned.
    
    v2
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/include/linux/platform_data/mdio-gpio.h b/include/linux/platform_data/mdio-gpio.h
new file mode 100644
index 000000000000..a5d5ff5e174c
--- /dev/null
+++ b/include/linux/platform_data/mdio-gpio.h
@@ -0,0 +1,13 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+/*
+ * MDIO-GPIO bus platform data structure
+ */
+
+#ifndef __LINUX_MDIO_GPIO_PDATA_H
+#define __LINUX_MDIO_GPIO_PDATA_H
+
+struct mdio_gpio_platform_data {
+	u32 phy_mask;
+};
+
+#endif /* __LINUX_MDIO_GPIO_PDATA_H */

commit 0207dd1173fe31c153ffd439c4bb33d1341829b1
Author: Andrew Lunn <andrew@lunn.ch>
Date:   Thu Apr 19 01:02:59 2018 +0200

    net: phy: mdio-gpio: Remove redundant platform data header
    
    The platform data header file is now unused. Remove it, but add
    an extra include which it brought in.
    
    Signed-off-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/include/linux/platform_data/mdio-gpio.h b/include/linux/platform_data/mdio-gpio.h
deleted file mode 100644
index bd91fa98a3aa..000000000000
--- a/include/linux/platform_data/mdio-gpio.h
+++ /dev/null
@@ -1,23 +0,0 @@
-/*
- * MDIO-GPIO bus platform data structures
- *
- * Copyright (C) 2008, Paulius Zaleckas <paulius.zaleckas@teltonika.lt>
- *
- * This file is licensed under the terms of the GNU General Public License
- * version 2. This program is licensed "as is" without any warranty of any
- * kind, whether express or implied.
- */
-
-#ifndef __LINUX_MDIO_GPIO_H
-#define __LINUX_MDIO_GPIO_H
-
-#include <linux/mdio-bitbang.h>
-
-struct mdio_gpio_platform_data {
-	/* GPIO numbers for bus pins */
-	struct gpio_desc *mdc;
-	struct gpio_desc *mdio;
-	struct gpio_desc *mdo;
-};
-
-#endif /* __LINUX_MDIO_GPIO_H */

commit c82fc4814a93f36c9b536b5af8dd617e4ee1380f
Author: Andrew Lunn <andrew@lunn.ch>
Date:   Thu Apr 19 01:02:55 2018 +0200

    net: phy: mdio-gpio: Swap to using gpio descriptors
    
    This simplifies the code, removing the need to handle active low
    flags, etc.
    
    Signed-off-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/include/linux/platform_data/mdio-gpio.h b/include/linux/platform_data/mdio-gpio.h
index af3be0c4ff9b..bd91fa98a3aa 100644
--- a/include/linux/platform_data/mdio-gpio.h
+++ b/include/linux/platform_data/mdio-gpio.h
@@ -15,13 +15,9 @@
 
 struct mdio_gpio_platform_data {
 	/* GPIO numbers for bus pins */
-	unsigned int mdc;
-	unsigned int mdio;
-	unsigned int mdo;
-
-	bool mdc_active_low;
-	bool mdio_active_low;
-	bool mdo_active_low;
+	struct gpio_desc *mdc;
+	struct gpio_desc *mdio;
+	struct gpio_desc *mdo;
 };
 
 #endif /* __LINUX_MDIO_GPIO_H */

commit 68abb4f25d7eaf4d5f40108aa748621ddab68209
Author: Andrew Lunn <andrew@lunn.ch>
Date:   Thu Apr 19 01:02:54 2018 +0200

    net: phy: mdio-gpio: Remove support for IRQs in platform data
    
    No current devices use IRQs in platform data, so remove support for
    it. The MDIO core will also initialise the new bus such that all
    addresses are polled, so remove the unneeded re-initialisation.
    
    Signed-off-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/include/linux/platform_data/mdio-gpio.h b/include/linux/platform_data/mdio-gpio.h
index 7d55dfef56dc..af3be0c4ff9b 100644
--- a/include/linux/platform_data/mdio-gpio.h
+++ b/include/linux/platform_data/mdio-gpio.h
@@ -22,8 +22,6 @@ struct mdio_gpio_platform_data {
 	bool mdc_active_low;
 	bool mdio_active_low;
 	bool mdo_active_low;
-
-	int irqs[PHY_MAX_ADDR];
 };
 
 #endif /* __LINUX_MDIO_GPIO_H */

commit 185a16b60a239f9db3fe8b8ce931a2fd61330853
Author: Andrew Lunn <andrew@lunn.ch>
Date:   Thu Apr 19 01:02:53 2018 +0200

    net: phy: mdio-gpio: remove support for phy mask
    
    This is not needed any more by devices using platform data, so remove
    it.
    
    Signed-off-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/include/linux/platform_data/mdio-gpio.h b/include/linux/platform_data/mdio-gpio.h
index b8f914a30126..7d55dfef56dc 100644
--- a/include/linux/platform_data/mdio-gpio.h
+++ b/include/linux/platform_data/mdio-gpio.h
@@ -23,7 +23,6 @@ struct mdio_gpio_platform_data {
 	bool mdio_active_low;
 	bool mdo_active_low;
 
-	u32 phy_mask;
 	int irqs[PHY_MAX_ADDR];
 };
 

commit c1b3eb04682f80af74572aa25601dbb555c6bc6e
Author: Andrew Lunn <andrew@lunn.ch>
Date:   Thu Apr 19 01:02:52 2018 +0200

    net: phy: mdio-gpio: remove support for ignoring turn around
    
    This is not needed any more by devices using platform data, so remove
    it.
    
    Signed-off-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/include/linux/platform_data/mdio-gpio.h b/include/linux/platform_data/mdio-gpio.h
index 6e8f01a570f2..b8f914a30126 100644
--- a/include/linux/platform_data/mdio-gpio.h
+++ b/include/linux/platform_data/mdio-gpio.h
@@ -24,7 +24,6 @@ struct mdio_gpio_platform_data {
 	bool mdo_active_low;
 
 	u32 phy_mask;
-	u32 phy_ignore_ta_mask;
 	int irqs[PHY_MAX_ADDR];
 };
 

commit 9e4d60938a2b2aae3c2c213c923d9eb8d0a87ba2
Author: Andrew Lunn <andrew@lunn.ch>
Date:   Thu Apr 19 01:02:50 2018 +0200

    net: phy: mdio-gpio: Remove reset function
    
    The platform data can contain a function to call to reset
    the bit banging interface. It is not used, so remove it.
    
    Signed-off-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/include/linux/platform_data/mdio-gpio.h b/include/linux/platform_data/mdio-gpio.h
index 11f00cdabe3d..6e8f01a570f2 100644
--- a/include/linux/platform_data/mdio-gpio.h
+++ b/include/linux/platform_data/mdio-gpio.h
@@ -26,8 +26,6 @@ struct mdio_gpio_platform_data {
 	u32 phy_mask;
 	u32 phy_ignore_ta_mask;
 	int irqs[PHY_MAX_ADDR];
-	/* reset callback */
-	int (*reset)(struct mii_bus *bus);
 };
 
 #endif /* __LINUX_MDIO_GPIO_H */

commit e2aacd963a06fc558a809ecb62f5833e6c340b28
Author: Vivien Didelot <vivien.didelot@savoirfairelinux.com>
Date:   Tue Oct 20 10:08:59 2015 -0400

    net: mdio-gpio: move platform data header
    
    This header file only contains the platform data structure definition,
    so move it to the include/linux/platform_data/ directory.
    
    Signed-off-by: Vivien Didelot <vivien.didelot@savoirfairelinux.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/include/linux/platform_data/mdio-gpio.h b/include/linux/platform_data/mdio-gpio.h
new file mode 100644
index 000000000000..11f00cdabe3d
--- /dev/null
+++ b/include/linux/platform_data/mdio-gpio.h
@@ -0,0 +1,33 @@
+/*
+ * MDIO-GPIO bus platform data structures
+ *
+ * Copyright (C) 2008, Paulius Zaleckas <paulius.zaleckas@teltonika.lt>
+ *
+ * This file is licensed under the terms of the GNU General Public License
+ * version 2. This program is licensed "as is" without any warranty of any
+ * kind, whether express or implied.
+ */
+
+#ifndef __LINUX_MDIO_GPIO_H
+#define __LINUX_MDIO_GPIO_H
+
+#include <linux/mdio-bitbang.h>
+
+struct mdio_gpio_platform_data {
+	/* GPIO numbers for bus pins */
+	unsigned int mdc;
+	unsigned int mdio;
+	unsigned int mdo;
+
+	bool mdc_active_low;
+	bool mdio_active_low;
+	bool mdo_active_low;
+
+	u32 phy_mask;
+	u32 phy_ignore_ta_mask;
+	int irqs[PHY_MAX_ADDR];
+	/* reset callback */
+	int (*reset)(struct mii_bus *bus);
+};
+
+#endif /* __LINUX_MDIO_GPIO_H */
