commit d2912cb15bdda8ba4a5dd73396ad62641af2f520
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Tue Jun 4 10:11:33 2019 +0200

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 500
    
    Based on 2 normalized pattern(s):
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license version 2 as
      published by the free software foundation
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license version 2 as
      published by the free software foundation #
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-only
    
    has been chosen to replace the boilerplate/reference in 4122 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Enrico Weigelt <info@metux.net>
    Reviewed-by: Kate Stewart <kstewart@linuxfoundation.org>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190604081206.933168790@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/include/linux/platform_data/mmp_dma.h b/include/linux/platform_data/mmp_dma.h
index 6397b9c8149a..030241cb9cc1 100644
--- a/include/linux/platform_data/mmp_dma.h
+++ b/include/linux/platform_data/mmp_dma.h
@@ -1,12 +1,8 @@
+/* SPDX-License-Identifier: GPL-2.0-only */
 /*
  *  MMP Platform DMA Management
  *
  *  Copyright (c) 2011 Marvell Semiconductors Inc.
- *
- *  This program is free software; you can redistribute it and/or modify
- *  it under the terms of the GNU General Public License version 2 as
- *  published by the Free Software Foundation.
- *
  */
 
 #ifndef MMP_DMA_H

commit 420c0117db25db38b72b6230223f7a976d3070ea
Author: Robert Jarzmik <robert.jarzmik@free.fr>
Date:   Sun Jun 17 19:02:04 2018 +0200

    dmaengine: pxa: use a dma slave map
    
    In order to remove the specific knowledge of the dma mapping from PXA
    drivers, add a default slave map for pxa architectures.
    
    This won't impact MMP architecture, but is aimed only at all PXA boards.
    
    This is the first step, and once all drivers are converted,
    pxad_filter_fn() will be made static, and the DMA resources removed from
    device.c.
    
    Signed-off-by: Robert Jarzmik <robert.jarzmik@free.fr>
    Reported-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Vinod Koul <vkoul@kernel.org>

diff --git a/include/linux/platform_data/mmp_dma.h b/include/linux/platform_data/mmp_dma.h
index d1397c8ed94e..6397b9c8149a 100644
--- a/include/linux/platform_data/mmp_dma.h
+++ b/include/linux/platform_data/mmp_dma.h
@@ -12,9 +12,13 @@
 #ifndef MMP_DMA_H
 #define MMP_DMA_H
 
+struct dma_slave_map;
+
 struct mmp_dma_platdata {
 	int dma_channels;
 	int nb_requestors;
+	int slave_map_cnt;
+	const struct dma_slave_map *slave_map;
 };
 
 #endif /* MMP_DMA_H */

commit c283e41ef32442f41e7180f9bb1c5aedf9255bfe
Author: Robert Jarzmik <robert.jarzmik@free.fr>
Date:   Mon Feb 15 21:57:46 2016 +0100

    dmaengine: mmp-pdma: add number of requestors
    
    The DMA chip has a fixed number of requestor lines used for flow
    control. This number is platform dependent. The pxa_dma dma driver will
    use this value to activate or not the flow control.
    
    There won't be any impact on mmp_pdma driver.
    
    Signed-off-by: Robert Jarzmik <robert.jarzmik@free.fr>

diff --git a/include/linux/platform_data/mmp_dma.h b/include/linux/platform_data/mmp_dma.h
index 2a330ec9e2af..d1397c8ed94e 100644
--- a/include/linux/platform_data/mmp_dma.h
+++ b/include/linux/platform_data/mmp_dma.h
@@ -14,6 +14,7 @@
 
 struct mmp_dma_platdata {
 	int dma_channels;
+	int nb_requestors;
 };
 
 #endif /* MMP_DMA_H */

commit c8acd6aa6bed3c0fd7898202f4ebc534db9085f2
Author: Zhangfei Gao <zhangfei.gao@marvell.com>
Date:   Mon Sep 3 11:03:45 2012 +0800

    dmaengine: mmp-pdma support
    
    1. virtual channel vs. physical channel
    Virtual channel is managed by dmaengine
    Physical channel handling resource, such as irq
    Physical channel is alloced dynamically as descending priority,
    freed immediately when irq done.
    The availble highest priority physically channel will alwayes be alloced
    
    Issue pending list -> alloc highest dma physically channel available -> dma done -> free physically channel
    
    2. list: running list & pending list
    submit: desc list -> pending list
    issue_pending_list: if (IDLE) pending list -> running list; free pending list (RUN)
    irq: free running list (IDLE)
         check pendlist -> pending list -> running list; free pending list (RUN)
    
    3. irq:
    Each list generate one irq, calling callback
    One list may contain several desc chain, in such case, make sure only the last desc list generate irq.
    
    4. async
    Submit will add desc chain to pending list, which can be multi-called
    If multi desc chain is submitted, only the last desc would generate irq -> call back
    If IDLE, issue_pending_list start pending_list, transforming pendlist to running list
    If RUN, irq will start pending list
    
    5. test
    5.1 pxa3xx_nand on pxa910
    5.2 insmod dmatest.ko (threads_per_chan=y)
    By default drivers/dma/dmatest.c test every channel and test memcpy with 1 threads per channel
    
    Signed-off-by: Zhangfei Gao <zhangfei.gao@marvell.com>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Vinod Koul <vinod.koul@linux.intel.com>

diff --git a/include/linux/platform_data/mmp_dma.h b/include/linux/platform_data/mmp_dma.h
new file mode 100644
index 000000000000..2a330ec9e2af
--- /dev/null
+++ b/include/linux/platform_data/mmp_dma.h
@@ -0,0 +1,19 @@
+/*
+ *  MMP Platform DMA Management
+ *
+ *  Copyright (c) 2011 Marvell Semiconductors Inc.
+ *
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License version 2 as
+ *  published by the Free Software Foundation.
+ *
+ */
+
+#ifndef MMP_DMA_H
+#define MMP_DMA_H
+
+struct mmp_dma_platdata {
+	int dma_channels;
+};
+
+#endif /* MMP_DMA_H */
