commit d2912cb15bdda8ba4a5dd73396ad62641af2f520
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Tue Jun 4 10:11:33 2019 +0200

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 500
    
    Based on 2 normalized pattern(s):
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license version 2 as
      published by the free software foundation
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license version 2 as
      published by the free software foundation #
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-only
    
    has been chosen to replace the boilerplate/reference in 4122 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Enrico Weigelt <info@metux.net>
    Reviewed-by: Kate Stewart <kstewart@linuxfoundation.org>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190604081206.933168790@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/include/linux/platform_data/leds-lp55xx.h b/include/linux/platform_data/leds-lp55xx.h
index 624ff9edad6f..96a787100fda 100644
--- a/include/linux/platform_data/leds-lp55xx.h
+++ b/include/linux/platform_data/leds-lp55xx.h
@@ -1,3 +1,4 @@
+/* SPDX-License-Identifier: GPL-2.0-only */
 /*
  * LP55XX Platform Data Header
  *
@@ -5,10 +6,6 @@
  *
  * Author: Milo(Woogyom) Kim <milo.kim@ti.com>
  *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * version 2 as published by the Free Software Foundation.
- *
  * Derived from leds-lp5521.h, leds-lp5523.h
  */
 

commit 30dae2f98612d7c8cd855861b9de205ebd9ef4fa
Author: Sebastian Reichel <sre@debian.org>
Date:   Tue Oct 22 11:02:56 2013 -0700

    leds: lp55xx: handle enable pin in driver
    
    This patch moves the handling of the chip's enable pin from the board
    code into the driver. It also updates all board-code files using the
    driver to incorporate this change.
    
    This is needed for device tree support of the enable pin.
    
    Signed-off-by: Sebastian Reichel <sre@debian.org>
    Acked-by: Linus Walleij <linus.walleij@linaro.org>
    Acked-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Bryan Wu <cooloney@gmail.com>

diff --git a/include/linux/platform_data/leds-lp55xx.h b/include/linux/platform_data/leds-lp55xx.h
index c32de4dcec54..624ff9edad6f 100644
--- a/include/linux/platform_data/leds-lp55xx.h
+++ b/include/linux/platform_data/leds-lp55xx.h
@@ -67,10 +67,8 @@ struct lp55xx_platform_data {
 	/* Clock configuration */
 	u8 clock_mode;
 
-	/* Platform specific functions */
-	int (*setup_resources)(void);
-	void (*release_resources)(void);
-	void (*enable)(bool state);
+	/* optional enable GPIO */
+	int enable_gpio;
 
 	/* Predefined pattern data */
 	struct lp55xx_predef_pattern *patterns;

commit f65f0a1a9836abbfbe5c9b8fa0452e4d8eb7bf00
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Sun Sep 15 03:50:17 2013 -0700

    leds: lp55xx: enable setting default trigger
    
    This enables setting a default trigger on an LP55xx channel,
    either from platform data or device tree. This mechanism is
    identical to the mechanism for GPIO LEDs and references the
    common LEDs device tree bindings.
    
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Tested-by: Milo Kim <milo.kim@ti.com>
    Acked-by: Milo Kim <milo.kim@ti.com>
    Signed-off-by: Bryan Wu <cooloney@gmail.com>

diff --git a/include/linux/platform_data/leds-lp55xx.h b/include/linux/platform_data/leds-lp55xx.h
index 51a2ff579d60..c32de4dcec54 100644
--- a/include/linux/platform_data/leds-lp55xx.h
+++ b/include/linux/platform_data/leds-lp55xx.h
@@ -22,6 +22,7 @@
 
 struct lp55xx_led_config {
 	const char *name;
+	const char *default_trigger;
 	u8 chan_nr;
 	u8 led_current; /* mA x10, 0 if led is not connected */
 	u8 max_current;

commit 33b3a561f417ec3e1013999ce8bdb6c055abb1ce
Author: Kim, Milo <Milo.Kim@ti.com>
Date:   Tue Jul 9 02:11:37 2013 -0700

    leds: support new LP8501 device - another LP55xx common
    
    LP8501 can drive up to 9 channels like LP5523.
    LEDs can be controlled directly via the I2C and programmable engines are
    supported.
    
    LP55xx common driver
     LP8501 is one of LP55xx family device, so LP55xx common code are used.
     Chip specific data is defined in the structure, 'lp55xx_device_config'.
    
    Differences between LP8501 and LP5523
     Different register layout for LED output control and others.
     LP8501 specific feature for separate output power selection.
     LP8501 doesn't support external clock detection.
     Different programming engine data.
    
    LP8501 specific feature - output power selection
     Output channels are selected by power selection - Vout or Vdd.
     Separate power for VDD1-6 and VDD7-9 are available.
     It is configurable in the platform data.
     To support this feature, LP55xx DT structure and header are changed.
     Device tree binding is updated as well.
    
    LED pattern data
     Example pattern data is updated in the driver documentation.
    
    Signed-off-by: Milo Kim <milo.kim@ti.com>
    Signed-off-by: Bryan Wu <cooloney@gmail.com>

diff --git a/include/linux/platform_data/leds-lp55xx.h b/include/linux/platform_data/leds-lp55xx.h
index 202e290faea8..51a2ff579d60 100644
--- a/include/linux/platform_data/leds-lp55xx.h
+++ b/include/linux/platform_data/leds-lp55xx.h
@@ -36,6 +36,13 @@ struct lp55xx_predef_pattern {
 	u8 size_b;
 };
 
+enum lp8501_pwr_sel {
+	LP8501_ALL_VDD,		/* D1~9 are connected to VDD */
+	LP8501_6VDD_3VOUT,	/* D1~6 with VDD, D7~9 with VOUT */
+	LP8501_3VDD_6VOUT,	/* D1~6 with VOUT, D7~9 with VDD */
+	LP8501_ALL_VOUT,	/* D1~9 are connected to VOUT */
+};
+
 /*
  * struct lp55xx_platform_data
  * @led_config        : Configurable led class device
@@ -67,6 +74,9 @@ struct lp55xx_platform_data {
 	/* Predefined pattern data */
 	struct lp55xx_predef_pattern *patterns;
 	unsigned int num_patterns;
+
+	/* LP8501 specific */
+	enum lp8501_pwr_sel pwr_sel;
 };
 
 #endif /* _LEDS_LP55XX_H */

commit 81f2a5b4a0570a662efd629c176fc1d67e56f7e3
Author: Kim, Milo <Milo.Kim@ti.com>
Date:   Wed Mar 20 17:37:04 2013 -0700

    leds: lp55xx: configure the clock detection
    
    Now LP55xx provides automatic clock detection API, lp55xx_is_extclk_used().
    The clock configuration can be done by the driver itself.
    
    (a) Concept
    The default value is set by each driver with clock selection.
    The internal clock selection bit is updated in case that the external clock
    is not detected or clock rate is not 32KHz.
    
    (b) Change on LP55xx platform data
    The clock configuration is done automatically, so no need to define
    'update_config' in the platform side.
    Correlated information are removed in the documentations and header.
    
    (c) Definitions moved from header to driver files
    CONFIG register values are moved each driver, LP5521 and LP5562.
    Not necessary definitions are removed also.
    
    Signed-off-by: Milo(Woogyom) Kim <milo.kim@ti.com>
    Signed-off-by: Bryan Wu <cooloney@gmail.com>

diff --git a/include/linux/platform_data/leds-lp55xx.h b/include/linux/platform_data/leds-lp55xx.h
index 1f1041e8b4fc..202e290faea8 100644
--- a/include/linux/platform_data/leds-lp55xx.h
+++ b/include/linux/platform_data/leds-lp55xx.h
@@ -20,25 +20,6 @@
 #define LP55XX_CLOCK_INT	1
 #define LP55XX_CLOCK_EXT	2
 
-/* Bits in LP5521 CONFIG register. 'update_config' in lp55xx_platform_data */
-#define LP5521_PWM_HF			0x40	/* PWM: 0 = 256Hz, 1 = 558Hz */
-#define LP5521_PWRSAVE_EN		0x20	/* 1 = Power save mode */
-#define LP5521_CP_MODE_OFF		0	/* Charge pump (CP) off */
-#define LP5521_CP_MODE_BYPASS		8	/* CP forced to bypass mode */
-#define LP5521_CP_MODE_1X5		0x10	/* CP forced to 1.5x mode */
-#define LP5521_CP_MODE_AUTO		0x18	/* Automatic mode selection */
-#define LP5521_R_TO_BATT		4	/* R out: 0 = CP, 1 = Vbat */
-#define LP5521_CLK_SRC_EXT		0	/* Ext-clk source (CLK_32K) */
-#define LP5521_CLK_INT			1	/* Internal clock */
-#define LP5521_CLK_AUTO			2	/* Automatic clock selection */
-
-/* Bits in LP5562 CONFIG register */
-#define LP5562_PWM_HF			LP5521_PWM_HF
-#define LP5562_PWRSAVE_EN		LP5521_PWRSAVE_EN
-#define LP5562_CLK_SRC_EXT		LP5521_CLK_SRC_EXT
-#define LP5562_CLK_INT			LP5521_CLK_INT
-#define LP5562_CLK_AUTO			LP5521_CLK_AUTO
-
 struct lp55xx_led_config {
 	const char *name;
 	u8 chan_nr;
@@ -86,9 +67,6 @@ struct lp55xx_platform_data {
 	/* Predefined pattern data */
 	struct lp55xx_predef_pattern *patterns;
 	unsigned int num_patterns;
-
-	/* _CONFIG register */
-	u8 update_config;
 };
 
 #endif /* _LEDS_LP55XX_H */

commit ff45262a85dbf1bc74463c5dcea1d71a406d4d8e
Author: Kim, Milo <Milo.Kim@ti.com>
Date:   Mon Feb 18 21:10:14 2013 -0800

    leds: add new LP5562 LED driver
    
    LP5562 can drive up to 4 channels, RGB and White.
    LEDs can be controlled directly via the led class control interface.
    
     LP55xx common driver
      LP5562 is one of LP55xx family device, so LP55xx common code are used.
      On the other hand, chip specific configuration is defined in the structure
      'lp55xx_device_config'
    
     LED pattern data
      LP5562 has also internal program memory which is used for running various LED
      patterns. LP5562 driver supports the firmware interface and the predefined
      pattern data as well.
    
     LP5562 device attributes: 'led_pattern' and 'engine_mux'
      A 'led_pattern' is an index code which runs the predefined pattern data.
      And 'engine_mux' is updated with the firmware interface is activated.
      Detailed description has been updated in the documentation files,
      'leds-lp55xx.txt' and 'leds-lp5562.txt'.
    
     Changes on the header file
      LP5562 configurable definitions are added.
      Pattern RGB data is fixed as constant value.
      (No side effect on other devices, LP5521 or LP5523.)
    
    (cooloney@gmail.com: remove redundant mutex_unlock(). Reported by Dan
    Carpenter <dan.carpenter@oracle.com>)
    
    Signed-off-by: Milo(Woogyom) Kim <milo.kim@ti.com>
    Signed-off-by: Bryan Wu <cooloney@gmail.com>

diff --git a/include/linux/platform_data/leds-lp55xx.h b/include/linux/platform_data/leds-lp55xx.h
index 1509570d5a3f..1f1041e8b4fc 100644
--- a/include/linux/platform_data/leds-lp55xx.h
+++ b/include/linux/platform_data/leds-lp55xx.h
@@ -32,6 +32,13 @@
 #define LP5521_CLK_INT			1	/* Internal clock */
 #define LP5521_CLK_AUTO			2	/* Automatic clock selection */
 
+/* Bits in LP5562 CONFIG register */
+#define LP5562_PWM_HF			LP5521_PWM_HF
+#define LP5562_PWRSAVE_EN		LP5521_PWRSAVE_EN
+#define LP5562_CLK_SRC_EXT		LP5521_CLK_SRC_EXT
+#define LP5562_CLK_INT			LP5521_CLK_INT
+#define LP5562_CLK_AUTO			LP5521_CLK_AUTO
+
 struct lp55xx_led_config {
 	const char *name;
 	u8 chan_nr;
@@ -40,9 +47,9 @@ struct lp55xx_led_config {
 };
 
 struct lp55xx_predef_pattern {
-	u8 *r;
-	u8 *g;
-	u8 *b;
+	const u8 *r;
+	const u8 *g;
+	const u8 *b;
 	u8 size_r;
 	u8 size_g;
 	u8 size_b;

commit c93d08fa75020835741c7b1d0523ff854e8acde1
Author: Milo(Woogyom) Kim <milo.kim@ti.com>
Date:   Tue Feb 5 18:01:23 2013 +0900

    leds-lp55xx: add new common driver for lp5521/5523
    
     This patch supports basic common driver code for LP5521, LP5523/55231 devices.
    
     ( Driver Structure Data )
    
     lp55xx_led and lp55xx_chip
     In lp55xx common driver, two different data structure is used.
     o lp55xx_led
       control multi output LED channels such as led current, channel index.
     o lp55xx_chip
       general chip control such like the I2C and platform data.
    
     For example, LP5521 has maximum 3 LED channels.
     LP5523/55231 has 9 output channels.
    
     lp55xx_chip for LP5521 ... lp55xx_led #1
                                lp55xx_led #2
                                lp55xx_led #3
    
     lp55xx_chip for LP5523 ... lp55xx_led #1
                                lp55xx_led #2
                                .
                                .
                                lp55xx_led #9
    
     ( Platform Data )
    
     LP5521 and LP5523/55231 have own specific platform data.
     However, this data can be handled with just one platform data structure.
     The lp55xx platform data is declared in the header.
     This structure is derived from leds-lp5521.h and leds-lp5523.h
    
    Signed-off-by: Milo(Woogyom) Kim <milo.kim@ti.com>
    Signed-off-by: Bryan Wu <cooloney@gmail.com>

diff --git a/include/linux/platform_data/leds-lp55xx.h b/include/linux/platform_data/leds-lp55xx.h
new file mode 100644
index 000000000000..1509570d5a3f
--- /dev/null
+++ b/include/linux/platform_data/leds-lp55xx.h
@@ -0,0 +1,87 @@
+/*
+ * LP55XX Platform Data Header
+ *
+ * Copyright (C) 2012 Texas Instruments
+ *
+ * Author: Milo(Woogyom) Kim <milo.kim@ti.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * version 2 as published by the Free Software Foundation.
+ *
+ * Derived from leds-lp5521.h, leds-lp5523.h
+ */
+
+#ifndef _LEDS_LP55XX_H
+#define _LEDS_LP55XX_H
+
+/* Clock configuration */
+#define LP55XX_CLOCK_AUTO	0
+#define LP55XX_CLOCK_INT	1
+#define LP55XX_CLOCK_EXT	2
+
+/* Bits in LP5521 CONFIG register. 'update_config' in lp55xx_platform_data */
+#define LP5521_PWM_HF			0x40	/* PWM: 0 = 256Hz, 1 = 558Hz */
+#define LP5521_PWRSAVE_EN		0x20	/* 1 = Power save mode */
+#define LP5521_CP_MODE_OFF		0	/* Charge pump (CP) off */
+#define LP5521_CP_MODE_BYPASS		8	/* CP forced to bypass mode */
+#define LP5521_CP_MODE_1X5		0x10	/* CP forced to 1.5x mode */
+#define LP5521_CP_MODE_AUTO		0x18	/* Automatic mode selection */
+#define LP5521_R_TO_BATT		4	/* R out: 0 = CP, 1 = Vbat */
+#define LP5521_CLK_SRC_EXT		0	/* Ext-clk source (CLK_32K) */
+#define LP5521_CLK_INT			1	/* Internal clock */
+#define LP5521_CLK_AUTO			2	/* Automatic clock selection */
+
+struct lp55xx_led_config {
+	const char *name;
+	u8 chan_nr;
+	u8 led_current; /* mA x10, 0 if led is not connected */
+	u8 max_current;
+};
+
+struct lp55xx_predef_pattern {
+	u8 *r;
+	u8 *g;
+	u8 *b;
+	u8 size_r;
+	u8 size_g;
+	u8 size_b;
+};
+
+/*
+ * struct lp55xx_platform_data
+ * @led_config        : Configurable led class device
+ * @num_channels      : Number of LED channels
+ * @label             : Used for naming LEDs
+ * @clock_mode        : Input clock mode. LP55XX_CLOCK_AUTO or _INT or _EXT
+ * @setup_resources   : Platform specific function before enabling the chip
+ * @release_resources : Platform specific function after  disabling the chip
+ * @enable            : EN pin control by platform side
+ * @patterns          : Predefined pattern data for RGB channels
+ * @num_patterns      : Number of patterns
+ * @update_config     : Value of CONFIG register
+ */
+struct lp55xx_platform_data {
+
+	/* LED channel configuration */
+	struct lp55xx_led_config *led_config;
+	u8 num_channels;
+	const char *label;
+
+	/* Clock configuration */
+	u8 clock_mode;
+
+	/* Platform specific functions */
+	int (*setup_resources)(void);
+	void (*release_resources)(void);
+	void (*enable)(bool state);
+
+	/* Predefined pattern data */
+	struct lp55xx_predef_pattern *patterns;
+	unsigned int num_patterns;
+
+	/* _CONFIG register */
+	u8 update_config;
+};
+
+#endif /* _LEDS_LP55XX_H */
