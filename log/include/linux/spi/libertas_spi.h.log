commit 2874c5fd284268364ece81a7bd936f3c8168e567
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon May 27 08:55:01 2019 +0200

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 152
    
    Based on 1 normalized pattern(s):
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license as published by
      the free software foundation either version 2 of the license or at
      your option any later version
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-or-later
    
    has been chosen to replace the boilerplate/reference in 3029 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190527070032.746973796@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/include/linux/spi/libertas_spi.h b/include/linux/spi/libertas_spi.h
index 1b5d5384fcd3..156326d9b5cd 100644
--- a/include/linux/spi/libertas_spi.h
+++ b/include/linux/spi/libertas_spi.h
@@ -1,12 +1,8 @@
+/* SPDX-License-Identifier: GPL-2.0-or-later */
 /*
  * board-specific data for the libertas_spi driver.
  *
  * Copyright 2008 Analog Devices Inc.
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or (at
- * your option) any later version.
  */
 #ifndef _LIBERTAS_SPI_H_
 #define _LIBERTAS_SPI_H_

commit 4d1d49858c0a5a4fb1be4bc7972754cd640245ba
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Thu Jun 4 21:57:03 2009 +0200

    net/libertas: remove GPIO-CS handling in SPI interface code
    
    This removes the dependency on GPIO framework and lets the SPI host
    driver handle the chip select. The SPI host driver is required to keep
    the CS active for the entire message unless cs_change says otherwise.
    This patch collects the two/three single SPI transfers into a message.
    Also the delay in read path in case use_dummy_writes are not used is
    moved into the SPI host driver.
    
    Tested-by: Mike Rapoport <mike@compulab.co.il>
    Tested-by: Andrey Yurovsky <andrey@cozybit.com>
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Acked-by: Dan Williams <dcbw@redhat.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>

diff --git a/include/linux/spi/libertas_spi.h b/include/linux/spi/libertas_spi.h
index 79506f5f9e67..1b5d5384fcd3 100644
--- a/include/linux/spi/libertas_spi.h
+++ b/include/linux/spi/libertas_spi.h
@@ -22,9 +22,6 @@ struct libertas_spi_platform_data {
 	 * speed, you may want to use 0 here. */
 	u16 use_dummy_writes;
 
-	/* GPIO number to use as chip select */
-	u16 gpio_cs;
-
 	/* Board specific setup/teardown */
 	int (*setup)(struct spi_device *spi);
 	int (*teardown)(struct spi_device *spi);

commit 0c2bec96945ccfc4a58a88d73531e392972ba6c5
Author: Mike Rapoport <mike@compulab.co.il>
Date:   Tue Feb 3 09:04:20 2009 +0200

    libertas: if_spi: add ability to call board specific setup/teardown methods
    
    In certain cases it is required to perform board specific actions
    before activating libertas G-SPI interface. These actions may include
    power up of the chip, GPIOs setup, proper pin-strapping and SPI
    controller config.
    This patch adds ability to call board specific setup/teardown methods
    
    Signed-off-by: Mike Rapoport <mike@compulab.co.il>
    Acked-by: Andrey Yurovsky <andrey@cozybit.com>
    Acked-by: Dan Williams <dcbw@redhat.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>

diff --git a/include/linux/spi/libertas_spi.h b/include/linux/spi/libertas_spi.h
index ada71b4f3788..79506f5f9e67 100644
--- a/include/linux/spi/libertas_spi.h
+++ b/include/linux/spi/libertas_spi.h
@@ -10,6 +10,9 @@
  */
 #ifndef _LIBERTAS_SPI_H_
 #define _LIBERTAS_SPI_H_
+
+struct spi_device;
+
 struct libertas_spi_platform_data {
 	/* There are two ways to read data from the WLAN module's SPI
 	 * interface. Setting 0 or 1 here controls which one is used.
@@ -21,5 +24,9 @@ struct libertas_spi_platform_data {
 
 	/* GPIO number to use as chip select */
 	u16 gpio_cs;
+
+	/* Board specific setup/teardown */
+	int (*setup)(struct spi_device *spi);
+	int (*teardown)(struct spi_device *spi);
 };
 #endif

commit d2b21f191753abd12c4063776cb1a3d635397509
Author: Colin McCabe <colin@cozybit.com>
Date:   Fri Jan 9 14:58:09 2009 -0800

    libertas: if_spi, driver for libertas GSPI devices
    
    Add initial support for libertas devices using a GSPI interface.  This has
    been tested with the 8686.
    
    GSPI is intended to be used on embedded systems. Board-specific parameters are
    required (see libertas_spi.h).
    
    Thanks to everyone who took a look at the earlier versions of the patch.
    
    Signed-off-by: Colin McCabe <colin@cozybit.com>
    Signed-off-by: Andrey Yurovsky <andrey@cozybit.com>
    Acked-by: Dan Williams <dcbw@redhat.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>

diff --git a/include/linux/spi/libertas_spi.h b/include/linux/spi/libertas_spi.h
new file mode 100644
index 000000000000..ada71b4f3788
--- /dev/null
+++ b/include/linux/spi/libertas_spi.h
@@ -0,0 +1,25 @@
+/*
+ * board-specific data for the libertas_spi driver.
+ *
+ * Copyright 2008 Analog Devices Inc.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or (at
+ * your option) any later version.
+ */
+#ifndef _LIBERTAS_SPI_H_
+#define _LIBERTAS_SPI_H_
+struct libertas_spi_platform_data {
+	/* There are two ways to read data from the WLAN module's SPI
+	 * interface. Setting 0 or 1 here controls which one is used.
+	 *
+	 * Usually you want to set use_dummy_writes = 1.
+	 * However, if that doesn't work or if you are using a slow SPI clock
+	 * speed, you may want to use 0 here. */
+	u16 use_dummy_writes;
+
+	/* GPIO number to use as chip select */
+	u16 gpio_cs;
+};
+#endif
