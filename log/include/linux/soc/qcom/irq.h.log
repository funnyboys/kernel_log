commit e35a6ae0eb3a7cc451e8d8db55e9b938a95de416
Author: Lina Iyer <ilina@codeaurora.org>
Date:   Fri Nov 15 15:11:51 2019 -0700

    pinctrl/msm: Setup GPIO chip in hierarchy
    
    Some GPIOs are marked as wakeup capable and are routed to another
    interrupt controller that is an always-domain and can detect interrupts
    even when most of the SoC is powered off. The wakeup interrupt
    controller wakes up the GIC and replays the interrupt at the GIC.
    
    Setup the TLMM irqchip in hierarchy with the wakeup interrupt controller
    and ensure the wakeup GPIOs are handled correctly.
    
    Co-developed-by: Maulik Shah <mkshah@codeaurora.org>
    
    Signed-off-by: Lina Iyer <ilina@codeaurora.org>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Reviewed-by: Stephen Boyd <swboyd@chromium.org>
    Link: https://lore.kernel.org/r/1573855915-9841-9-git-send-email-ilina@codeaurora.org
    
    ----
    Changes in v2:
            - Address review comments
            - Fix Co-developed-by tag
    Changes in v1:
            - Address minor review comments
            - Remove redundant call to set irq handler
            - Move irq_domain_qcom_handle_wakeup() to this patch
    Changes in RFC v2:
            - Rebase on top of GPIO hierarchy support in linux-next
            - Set the chained irq handler for summary line

diff --git a/include/linux/soc/qcom/irq.h b/include/linux/soc/qcom/irq.h
index 637c0bfa89e7..9e1ece58e55b 100644
--- a/include/linux/soc/qcom/irq.h
+++ b/include/linux/soc/qcom/irq.h
@@ -18,4 +18,17 @@
 #define IRQ_DOMAIN_FLAG_QCOM_PDC_WAKEUP		(IRQ_DOMAIN_FLAG_NONCORE << 0)
 #define IRQ_DOMAIN_FLAG_QCOM_MPM_WAKEUP		(IRQ_DOMAIN_FLAG_NONCORE << 1)
 
+/**
+ * irq_domain_qcom_handle_wakeup: Return if the domain handles interrupt
+ *                                configuration
+ * @d: irq domain
+ *
+ * This QCOM specific irq domain call returns if the interrupt controller
+ * requires the interrupt be masked at the child interrupt controller.
+ */
+static inline bool irq_domain_qcom_handle_wakeup(const struct irq_domain *d)
+{
+	return (d->flags & IRQ_DOMAIN_FLAG_QCOM_PDC_WAKEUP);
+}
+
 #endif

commit 81ef8bf88065b07d597c723ca5b0f1f10a808de4
Author: Lina Iyer <ilina@codeaurora.org>
Date:   Fri Nov 15 15:11:47 2019 -0700

    irqchip/qcom-pdc: Add irqdomain for wakeup capable GPIOs
    
    Introduce a new domain for wakeup capable GPIOs. The domain can be
    requested using the bus token DOMAIN_BUS_WAKEUP. In the following
    patches, we will specify PDC as the wakeup-parent for the TLMM GPIO
    irqchip. Requesting a wakeup GPIO will setup the GPIO and the
    corresponding PDC interrupt as its parent.
    
    Co-developed-by: Stephen Boyd <swboyd@chromium.org>
    
    Signed-off-by: Stephen Boyd <swboyd@chromium.org>
    Signed-off-by: Lina Iyer <ilina@codeaurora.org>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Reviewed-by: Stephen Boyd <swboyd@chromium.org>
    Link: https://lore.kernel.org/r/1573855915-9841-5-git-send-email-ilina@codeaurora.org

diff --git a/include/linux/soc/qcom/irq.h b/include/linux/soc/qcom/irq.h
new file mode 100644
index 000000000000..637c0bfa89e7
--- /dev/null
+++ b/include/linux/soc/qcom/irq.h
@@ -0,0 +1,21 @@
+/* SPDX-License-Identifier: GPL-2.0-only */
+
+#ifndef __QCOM_IRQ_H
+#define __QCOM_IRQ_H
+
+#include <linux/irqdomain.h>
+
+#define GPIO_NO_WAKE_IRQ	~0U
+
+/**
+ * QCOM specific IRQ domain flags that distinguishes the handling of wakeup
+ * capable interrupts by different interrupt controllers.
+ *
+ * IRQ_DOMAIN_FLAG_QCOM_PDC_WAKEUP: Line must be masked at TLMM and the
+ *                                  interrupt configuration is done at PDC
+ * IRQ_DOMAIN_FLAG_QCOM_MPM_WAKEUP: Interrupt configuration is handled at TLMM
+ */
+#define IRQ_DOMAIN_FLAG_QCOM_PDC_WAKEUP		(IRQ_DOMAIN_FLAG_NONCORE << 0)
+#define IRQ_DOMAIN_FLAG_QCOM_MPM_WAKEUP		(IRQ_DOMAIN_FLAG_NONCORE << 1)
+
+#endif
