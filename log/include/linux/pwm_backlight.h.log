commit 2644f912b41012c1ce5ff9be99efeec721491b86
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Mon Feb 10 11:15:46 2020 +0100

    backlight: pwm_bl: Switch to full GPIO descriptor
    
    The PWM backlight still supports passing a enable GPIO line as
    platform data using the legacy <linux/gpio.h> API.
    
    It turns out that ever board using this mechanism except one
    is pass .enable_gpio = -1. So we drop all these cargo-culted -1's
    from all instances of this platform data in the kernel.
    
    The remaning board, Palm TC, is converted to pass a machine
    descriptior table with the "enable" GPIO instead, and delete the
    platform data entry for enable_gpio and the code handling it
    and things should work smoothly with the new API.
    
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Acked-by: Robert Jarzmik <robert.jarzmik@free.fr>
    Acked-by: Krzysztof Kozlowski <krzk@kernel.org
    Reviewed-by: Bartosz Golaszewski <bgolaszewski@baylibre.com>
    Reviewed-by: Daniel Thompson <daniel.thompson@linaro.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/pwm_backlight.h b/include/linux/pwm_backlight.h
index 8ea265a022fd..06086cb93b6f 100644
--- a/include/linux/pwm_backlight.h
+++ b/include/linux/pwm_backlight.h
@@ -16,8 +16,6 @@ struct platform_pwm_backlight_data {
 	unsigned int *levels;
 	unsigned int post_pwm_on_delay;
 	unsigned int pwm_off_delay;
-	/* TODO remove once all users are switched to gpiod_* API */
-	int enable_gpio;
 	int (*init)(struct device *dev);
 	int (*notify)(struct device *dev, int brightness);
 	void (*notify_after)(struct device *dev, int brightness);

commit 3157694d8c7fed9046dece8b63434cafef21cbf6
Author: Enric Balletbo i Serra <enric.balletbo@collabora.com>
Date:   Wed Mar 28 19:03:25 2018 +0200

    pwm-backlight: Add support for PWM delays proprieties.
    
    Some panels (i.e. N116BGE-L41), in their power sequence specifications,
    request a delay between set the PWM signal and enable the backlight and
    between clear the PWM signal and disable the backlight. Add support for
    the new post-pwm-on-delay-ms and pwm-off-delay-ms proprieties to meet
    the timings.
    
    Signed-off-by: Enric Balletbo i Serra <enric.balletbo@collabora.com>
    Acked-by: Pavel Machek <pavel@ucw.cz>
    Acked-by: Daniel Thompson <daniel.thompson@linaro.org>
    Acked-by: Jingoo Han <jingoohan1@gmail.com>
    Acked-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/pwm_backlight.h b/include/linux/pwm_backlight.h
index e8afbd71a140..8ea265a022fd 100644
--- a/include/linux/pwm_backlight.h
+++ b/include/linux/pwm_backlight.h
@@ -14,6 +14,8 @@ struct platform_pwm_backlight_data {
 	unsigned int lth_brightness;
 	unsigned int pwm_period_ns;
 	unsigned int *levels;
+	unsigned int post_pwm_on_delay;
+	unsigned int pwm_off_delay;
 	/* TODO remove once all users are switched to gpiod_* API */
 	int enable_gpio;
 	int (*init)(struct device *dev);

commit b24413180f5600bcb3bb70fbed5cf186b60864bd
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Nov 1 15:07:57 2017 +0100

    License cleanup: add SPDX GPL-2.0 license identifier to files with no license
    
    Many source files in the tree are missing licensing information, which
    makes it harder for compliance tools to determine the correct license.
    
    By default all files without license information are under the default
    license of the kernel, which is GPL version 2.
    
    Update the files which contain no license information with the 'GPL-2.0'
    SPDX license identifier.  The SPDX identifier is a legally binding
    shorthand, which can be used instead of the full boiler plate text.
    
    This patch is based on work done by Thomas Gleixner and Kate Stewart and
    Philippe Ombredanne.
    
    How this work was done:
    
    Patches were generated and checked against linux-4.14-rc6 for a subset of
    the use cases:
     - file had no licensing information it it.
     - file was a */uapi/* one with no licensing information in it,
     - file was a */uapi/* one with existing licensing information,
    
    Further patches will be generated in subsequent months to fix up cases
    where non-standard license headers were used, and references to license
    had to be inferred by heuristics based on keywords.
    
    The analysis to determine which SPDX License Identifier to be applied to
    a file was done in a spreadsheet of side by side results from of the
    output of two independent scanners (ScanCode & Windriver) producing SPDX
    tag:value files created by Philippe Ombredanne.  Philippe prepared the
    base worksheet, and did an initial spot review of a few 1000 files.
    
    The 4.13 kernel was the starting point of the analysis with 60,537 files
    assessed.  Kate Stewart did a file by file comparison of the scanner
    results in the spreadsheet to determine which SPDX license identifier(s)
    to be applied to the file. She confirmed any determination that was not
    immediately clear with lawyers working with the Linux Foundation.
    
    Criteria used to select files for SPDX license identifier tagging was:
     - Files considered eligible had to be source code files.
     - Make and config files were included as candidates if they contained >5
       lines of source
     - File already had some variant of a license header in it (even if <5
       lines).
    
    All documentation files were explicitly excluded.
    
    The following heuristics were used to determine which SPDX license
    identifiers to apply.
    
     - when both scanners couldn't find any license traces, file was
       considered to have no license information in it, and the top level
       COPYING file license applied.
    
       For non */uapi/* files that summary was:
    
       SPDX license identifier                            # files
       ---------------------------------------------------|-------
       GPL-2.0                                              11139
    
       and resulted in the first patch in this series.
    
       If that file was a */uapi/* path one, it was "GPL-2.0 WITH
       Linux-syscall-note" otherwise it was "GPL-2.0".  Results of that was:
    
       SPDX license identifier                            # files
       ---------------------------------------------------|-------
       GPL-2.0 WITH Linux-syscall-note                        930
    
       and resulted in the second patch in this series.
    
     - if a file had some form of licensing information in it, and was one
       of the */uapi/* ones, it was denoted with the Linux-syscall-note if
       any GPL family license was found in the file or had no licensing in
       it (per prior point).  Results summary:
    
       SPDX license identifier                            # files
       ---------------------------------------------------|------
       GPL-2.0 WITH Linux-syscall-note                       270
       GPL-2.0+ WITH Linux-syscall-note                      169
       ((GPL-2.0 WITH Linux-syscall-note) OR BSD-2-Clause)    21
       ((GPL-2.0 WITH Linux-syscall-note) OR BSD-3-Clause)    17
       LGPL-2.1+ WITH Linux-syscall-note                      15
       GPL-1.0+ WITH Linux-syscall-note                       14
       ((GPL-2.0+ WITH Linux-syscall-note) OR BSD-3-Clause)    5
       LGPL-2.0+ WITH Linux-syscall-note                       4
       LGPL-2.1 WITH Linux-syscall-note                        3
       ((GPL-2.0 WITH Linux-syscall-note) OR MIT)              3
       ((GPL-2.0 WITH Linux-syscall-note) AND MIT)             1
    
       and that resulted in the third patch in this series.
    
     - when the two scanners agreed on the detected license(s), that became
       the concluded license(s).
    
     - when there was disagreement between the two scanners (one detected a
       license but the other didn't, or they both detected different
       licenses) a manual inspection of the file occurred.
    
     - In most cases a manual inspection of the information in the file
       resulted in a clear resolution of the license that should apply (and
       which scanner probably needed to revisit its heuristics).
    
     - When it was not immediately clear, the license identifier was
       confirmed with lawyers working with the Linux Foundation.
    
     - If there was any question as to the appropriate license identifier,
       the file was flagged for further research and to be revisited later
       in time.
    
    In total, over 70 hours of logged manual review was done on the
    spreadsheet to determine the SPDX license identifiers to apply to the
    source files by Kate, Philippe, Thomas and, in some cases, confirmation
    by lawyers working with the Linux Foundation.
    
    Kate also obtained a third independent scan of the 4.13 code base from
    FOSSology, and compared selected files where the other two scanners
    disagreed against that SPDX file, to see if there was new insights.  The
    Windriver scanner is based on an older version of FOSSology in part, so
    they are related.
    
    Thomas did random spot checks in about 500 files from the spreadsheets
    for the uapi headers and agreed with SPDX license identifier in the
    files he inspected. For the non-uapi files Thomas did random spot checks
    in about 15000 files.
    
    In initial set of patches against 4.14-rc6, 3 files were found to have
    copy/paste license identifier errors, and have been fixed to reflect the
    correct identifier.
    
    Additionally Philippe spent 10 hours this week doing a detailed manual
    inspection and review of the 12,461 patched files from the initial patch
    version early this week with:
     - a full scancode scan run, collecting the matched texts, detected
       license ids and scores
     - reviewing anything where there was a license detected (about 500+
       files) to ensure that the applied SPDX license was correct
     - reviewing anything where there was no detection but the patch license
       was not GPL-2.0 WITH Linux-syscall-note to ensure that the applied
       SPDX license was correct
    
    This produced a worksheet with 20 files needing minor correction.  This
    worksheet was then exported into 3 different .csv files for the
    different types of files to be modified.
    
    These .csv files were then reviewed by Greg.  Thomas wrote a script to
    parse the csv files and add the proper SPDX tag to the file, in the
    format that the file expected.  This script was further refined by Greg
    based on the output to detect more types of files automatically and to
    distinguish between header and source .c files (which need different
    comment types.)  Finally Greg ran the script using the .csv files to
    generate the patches.
    
    Reviewed-by: Kate Stewart <kstewart@linuxfoundation.org>
    Reviewed-by: Philippe Ombredanne <pombredanne@nexb.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/include/linux/pwm_backlight.h b/include/linux/pwm_backlight.h
index efdd9227a49c..e8afbd71a140 100644
--- a/include/linux/pwm_backlight.h
+++ b/include/linux/pwm_backlight.h
@@ -1,3 +1,4 @@
+/* SPDX-License-Identifier: GPL-2.0 */
 /*
  * Generic PWM backlight driver data - see drivers/video/backlight/pwm_bl.c
  */

commit 257462dbf3ed233de0dc2e489dcc58579535b33f
Author: Alexandre Courbot <acourbot@nvidia.com>
Date:   Thu Feb 27 14:53:34 2014 +0900

    pwm-backlight: switch to gpiod interface
    
    Switch to the new gpiod interface, which allows to handle GPIO
    properties such as active low transparently and removes a whole bunch of
    code.
    
    There are still a couple of users of this driver that rely on passing
    the enable GPIO number through platform data, so a fallback mechanism
    using a GPIO number is still available to avoid breaking them. It will
    be removed once current users have switched to the GPIO lookup tables
    provided by the gpiod interface.
    
    Signed-off-by: Alexandre Courbot <acourbot@nvidia.com>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>

diff --git a/include/linux/pwm_backlight.h b/include/linux/pwm_backlight.h
index 2de2e275b2cb..efdd9227a49c 100644
--- a/include/linux/pwm_backlight.h
+++ b/include/linux/pwm_backlight.h
@@ -6,9 +6,6 @@
 
 #include <linux/backlight.h>
 
-/* TODO: convert to gpiod_*() API once it has been merged */
-#define PWM_BACKLIGHT_GPIO_ACTIVE_LOW	(1 << 0)
-
 struct platform_pwm_backlight_data {
 	int pwm_id;
 	unsigned int max_brightness;
@@ -16,8 +13,8 @@ struct platform_pwm_backlight_data {
 	unsigned int lth_brightness;
 	unsigned int pwm_period_ns;
 	unsigned int *levels;
+	/* TODO remove once all users are switched to gpiod_* API */
 	int enable_gpio;
-	unsigned long enable_gpio_flags;
 	int (*init)(struct device *dev);
 	int (*notify)(struct device *dev, int brightness);
 	void (*notify_after)(struct device *dev, int brightness);

commit 2b9b1620349e325f184c68cddf3b484499c163c0
Author: Thierry Reding <treding@nvidia.com>
Date:   Fri Aug 30 11:51:22 2013 +0200

    pwm-backlight: Add optional enable GPIO
    
    To support a wider variety of backlight setups, introduce an optional
    enable GPIO. Legacy users of the platform data already have a means of
    supporting GPIOs by using the .init(), .exit() and .notify() hooks. DT
    users however cannot use those, so an alternative method is required.
    
    In order to ease the introduction of the optional enable GPIO, make it
    available in the platform data first, so that existing users can be
    converted. Once that has happened a second patch will add code to make
    use of it in the driver.
    
    Signed-off-by: Thierry Reding <treding@nvidia.com>

diff --git a/include/linux/pwm_backlight.h b/include/linux/pwm_backlight.h
index 56f4a866539a..2de2e275b2cb 100644
--- a/include/linux/pwm_backlight.h
+++ b/include/linux/pwm_backlight.h
@@ -6,6 +6,9 @@
 
 #include <linux/backlight.h>
 
+/* TODO: convert to gpiod_*() API once it has been merged */
+#define PWM_BACKLIGHT_GPIO_ACTIVE_LOW	(1 << 0)
+
 struct platform_pwm_backlight_data {
 	int pwm_id;
 	unsigned int max_brightness;
@@ -13,6 +16,8 @@ struct platform_pwm_backlight_data {
 	unsigned int lth_brightness;
 	unsigned int pwm_period_ns;
 	unsigned int *levels;
+	int enable_gpio;
+	unsigned long enable_gpio_flags;
 	int (*init)(struct device *dev);
 	int (*notify)(struct device *dev, int brightness);
 	void (*notify_after)(struct device *dev, int brightness);

commit 3e3ed6cdc49d758719c148a78c8b04c243ef74d0
Author: Thierry Reding <thierry.reding@avionic-design.de>
Date:   Fri Dec 16 21:25:29 2011 +0100

    pwm-backlight: Add rudimentary device tree support
    
    This commit adds very basic support for device tree probing. Currently,
    only a PWM and a list of distinct brightness levels can be specified.
    Enabling or disabling backlight power via GPIOs is not yet supported.
    
    Reviewed-by: Shawn Guo <shawn.guo@linaro.org>
    Reviewed-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Thierry Reding <thierry.reding@avionic-design.de>

diff --git a/include/linux/pwm_backlight.h b/include/linux/pwm_backlight.h
index 63d2df43e61a..56f4a866539a 100644
--- a/include/linux/pwm_backlight.h
+++ b/include/linux/pwm_backlight.h
@@ -12,6 +12,7 @@ struct platform_pwm_backlight_data {
 	unsigned int dft_brightness;
 	unsigned int lth_brightness;
 	unsigned int pwm_period_ns;
+	unsigned int *levels;
 	int (*init)(struct device *dev);
 	int (*notify)(struct device *dev, int brightness);
 	void (*notify_after)(struct device *dev, int brightness);

commit cc7993f6439b49909a8792660c4d0741fec9d584
Author: Dilan Lee <dilee@nvidia.com>
Date:   Thu Aug 25 15:59:17 2011 -0700

    backlight: add a callback 'notify_after' for backlight control
    
    We need a callback to do some things after pwm_enable, pwm_disable
    and pwm_config.
    
    Signed-off-by: Dilan Lee <dilee@nvidia.com>
    Reviewed-by: Robert Morell <rmorell@nvidia.com>
    Reviewed-by: Arun Murthy <arun.murthy@stericsson.com>
    Cc: Richard Purdie <rpurdie@rpsys.net>
    Cc: Paul Mundt <lethal@linux-sh.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/include/linux/pwm_backlight.h b/include/linux/pwm_backlight.h
index 5e3e25a3c9c3..63d2df43e61a 100644
--- a/include/linux/pwm_backlight.h
+++ b/include/linux/pwm_backlight.h
@@ -14,6 +14,7 @@ struct platform_pwm_backlight_data {
 	unsigned int pwm_period_ns;
 	int (*init)(struct device *dev);
 	int (*notify)(struct device *dev, int brightness);
+	void (*notify_after)(struct device *dev, int brightness);
 	void (*exit)(struct device *dev);
 	int (*check_fb)(struct device *dev, struct fb_info *info);
 };

commit ef0a5e80f56f6409e957e7117da9551c3d3ff239
Author: Robert Morell <rmorell@nvidia.com>
Date:   Tue Mar 22 16:30:31 2011 -0700

    pwm_backlight: add check_fb() hook
    
    In systems with multiple framebuffer devices, one of the devices might be
    blanked while another is unblanked.  In order for the backlight blanking
    logic to know whether to turn off the backlight for a particular
    framebuffer's blanking notification, it needs to be able to check if a
    given framebuffer device corresponds to the backlight.
    
    This plumbs the check_fb hook from core backlight through the
    pwm_backlight helper to allow platform code to plug in a check_fb hook.
    
    Signed-off-by: Robert Morell <rmorell@nvidia.com>
    Cc: Richard Purdie <rpurdie@rpsys.net>
    Cc: Arun Murthy <arun.murthy@stericsson.com>
    Cc: Linus Walleij <linus.walleij@stericsson.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/include/linux/pwm_backlight.h b/include/linux/pwm_backlight.h
index e031e1a486d9..5e3e25a3c9c3 100644
--- a/include/linux/pwm_backlight.h
+++ b/include/linux/pwm_backlight.h
@@ -4,6 +4,8 @@
 #ifndef __LINUX_PWM_BACKLIGHT_H
 #define __LINUX_PWM_BACKLIGHT_H
 
+#include <linux/backlight.h>
+
 struct platform_pwm_backlight_data {
 	int pwm_id;
 	unsigned int max_brightness;
@@ -13,6 +15,7 @@ struct platform_pwm_backlight_data {
 	int (*init)(struct device *dev);
 	int (*notify)(struct device *dev, int brightness);
 	void (*exit)(struct device *dev);
+	int (*check_fb)(struct device *dev, struct fb_info *info);
 };
 
 #endif

commit fef7764f8bca9d603a8a51dcb522db97739a33c2
Author: Arun Murthy <arun.murthy@stericsson.com>
Date:   Thu Nov 11 14:05:28 2010 -0800

    backlight: add low threshold to pwm backlight
    
    The intensity of the backlight can be varied from a range of
    max_brightness to zero.  Though most, if not all the pwm based backlight
    devices start flickering at lower brightness value.  And also for each
    device there exists a brightness value below which the backlight appears
    to be turned off though the value is not equal to zero.
    
    If the range of brightness for a device is from zero to max_brightness.  A
    graph is plotted for brightness Vs intensity for the pwm based backlight
    device has to be a linear graph.
    
    intensity
              |   /
              |  /
              | /
              |/
              ---------
             0      max_brightness
    
    But pratically on measuring the above we note that the intensity of
    backlight goes to zero(OFF) when the value in not zero almost nearing to
    zero(some x%).  so the graph looks like
    
    intensity
              |    /
              |   /
              |  /
              |  |
              ------------
             0   x   max_brightness
    
    In order to overcome this drawback knowing this x% i.e nothing but the low
    threshold beyond which the backlight is off and will have no effect, the
    brightness value is being offset by the low threshold value(retaining the
    linearity of the graph).  Now the graph becomes
    
    intensity
              |     /
              |    /
              |   /
              |  /
              -------------
               0      max_brightness
    
    With this for each and every digit increment in the brightness from zero
    there is a change in the intensity of backlight.  Devices having this
    behaviour can set the low threshold brightness(lth_brightness) and pass
    the same as platform data else can have it as zero.
    
    [akpm@linux-foundation.org: coding-style fixes]
    Signed-off-by: Arun Murthy <arun.murthy@stericsson.com>
    Acked-by: Linus Walleij <linus.walleij@stericsson.com>
    Acked-by: Richard Purdie <rpurdie@linux.intel.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/include/linux/pwm_backlight.h b/include/linux/pwm_backlight.h
index 01b3d759f1fc..e031e1a486d9 100644
--- a/include/linux/pwm_backlight.h
+++ b/include/linux/pwm_backlight.h
@@ -8,6 +8,7 @@ struct platform_pwm_backlight_data {
 	int pwm_id;
 	unsigned int max_brightness;
 	unsigned int dft_brightness;
+	unsigned int lth_brightness;
 	unsigned int pwm_period_ns;
 	int (*init)(struct device *dev);
 	int (*notify)(struct device *dev, int brightness);

commit cfc3899fcd0b3b990b29d3d33f75f4edf715e7d1
Author: Ben Dooks <ben@simtec.co.uk>
Date:   Tue Nov 10 17:20:40 2009 +0000

    backlight: Pass device through notify callback in the pwm driver
    
    Add the device to the notify callback's arguments in the PWM backlight
    driver. This brings the notify callback into line with the other
    callbacks defined by this driver.
    
    Signed-off-by: Ben Dooks <ben@simtec.co.uk>
    Signed-off-by: Simtec Linux Team <linux@simtec.co.uk>
    Signed-off-by: Richard Purdie <rpurdie@linux.intel.com>

diff --git a/include/linux/pwm_backlight.h b/include/linux/pwm_backlight.h
index 7a9754c96775..01b3d759f1fc 100644
--- a/include/linux/pwm_backlight.h
+++ b/include/linux/pwm_backlight.h
@@ -10,7 +10,7 @@ struct platform_pwm_backlight_data {
 	unsigned int dft_brightness;
 	unsigned int pwm_period_ns;
 	int (*init)(struct device *dev);
-	int (*notify)(int brightness);
+	int (*notify)(struct device *dev, int brightness);
 	void (*exit)(struct device *dev);
 };
 

commit 3b73125af69f93972625f4b655675f42ca4274eb
Author: Philipp Zabel <philipp.zabel@gmail.com>
Date:   Thu May 22 14:18:40 2008 +0100

    [ARM] 5044/1: pwm_bl: add init/notify/exit callbacks
    
    This allows platform code to manipulate GPIOs and brightness level as
    needed.
    
    Signed-off-by: Philipp Zabel <philipp.zabel@gmail.com>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>

diff --git a/include/linux/pwm_backlight.h b/include/linux/pwm_backlight.h
index aeeffedbe822..7a9754c96775 100644
--- a/include/linux/pwm_backlight.h
+++ b/include/linux/pwm_backlight.h
@@ -9,6 +9,9 @@ struct platform_pwm_backlight_data {
 	unsigned int max_brightness;
 	unsigned int dft_brightness;
 	unsigned int pwm_period_ns;
+	int (*init)(struct device *dev);
+	int (*notify)(int brightness);
+	void (*exit)(struct device *dev);
 };
 
 #endif

commit 42796d37da6ef4fd851dc6d5d0387baf7e2b0c3c
Author: eric miao <eric.miao@marvell.com>
Date:   Mon Apr 14 09:35:08 2008 +0100

    [ARM] pxa: add generic PWM backlight driver
    
    Patch mostly from Eric Miao, with minor edits by rmk to convert
    Eric's driver to a generic PWM-based backlight driver.
    
    Signed-off-by: eric miao <eric.miao@marvell.com>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>

diff --git a/include/linux/pwm_backlight.h b/include/linux/pwm_backlight.h
new file mode 100644
index 000000000000..aeeffedbe822
--- /dev/null
+++ b/include/linux/pwm_backlight.h
@@ -0,0 +1,14 @@
+/*
+ * Generic PWM backlight driver data - see drivers/video/backlight/pwm_bl.c
+ */
+#ifndef __LINUX_PWM_BACKLIGHT_H
+#define __LINUX_PWM_BACKLIGHT_H
+
+struct platform_pwm_backlight_data {
+	int pwm_id;
+	unsigned int max_brightness;
+	unsigned int dft_brightness;
+	unsigned int pwm_period_ns;
+};
+
+#endif
