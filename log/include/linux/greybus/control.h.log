commit c10bf3921e743dadb11a6cf59ffaf38cdbeb281b
Author: Rui Miguel Silva <rui.silva@linaro.org>
Date:   Tue Aug 27 16:53:02 2019 +0100

    staging: greybus: add missing includes
    
    Before moving greybus core out of staging and moving header files to
    include/linux some greybus header files were missing the necessary
    includes. This would trigger compilation faillures with some example
    errors logged bellow for with CONFIG_KERNEL_HEADER_TEST=y.
    
    So, add the necessary headers to compile clean before relocating the
    header files.
    
    ./include/linux/greybus/hd.h:23:50: error: unknown type name 'u16'
      int (*cport_disable)(struct gb_host_device *hd, u16 cport_id); ^~~
    ./include/linux/greybus/greybus_protocols.h:1314:2: error: unknown type name '__u8'
      __u8 data[0];
      ^~~~
    ./include/linux/greybus/hd.h:24:52: error: unknown type name 'u16'
      int (*cport_connected)(struct gb_host_device *hd, u16 cport_id); ^~~
    ./include/linux/greybus/hd.h:25:48: error: unknown type name 'u16'
      int (*cport_flush)(struct gb_host_device *hd, u16 cport_id); ^~~
    ./include/linux/greybus/hd.h:26:51: error: unknown type name 'u16'
      int (*cport_shutdown)(struct gb_host_device *hd, u16 cport_id, ^~~
    ./include/linux/greybus/hd.h:27:5: error: unknown type name 'u8'
    u8 phase, unsigned int timeout);
         ^~
    ./include/linux/greybus/hd.h:28:50: error: unknown type name 'u16'
      int (*cport_quiesce)(struct gb_host_device *hd, u16 cport_id, ^~~
    ./include/linux/greybus/hd.h:29:5: error: unknown type name 'size_t'
         size_t peer_space, unsigned int timeout);
         ^~~~~~
    ./include/linux/greybus/hd.h:29:5: note: 'size_t' is defined in header '<stddef.h>'; did you forget to '#include <stddef.h>'?
    ./include/linux/greybus/hd.h:1:1:
    +#include <stddef.h>
     /* SPDX-License-Identifier: GPL-2.0 */
    ./include/linux/greybus/hd.h:29:5:
         size_t peer_space, unsigned int timeout);
         ^~~~~~
    ./include/linux/greybus/hd.h:30:48: error: unknown type name 'u16'
      int (*cport_clear)(struct gb_host_device *hd, u16 cport_id); ^~~
    ./include/linux/greybus/hd.h:32:49: error: unknown type name 'u16'
      int (*message_send)(struct gb_host_device *hd, u16 dest_cport_id, ^~~
    ./include/linux/greybus/hd.h:33:32: error: unknown type name 'gfp_t'
    struct gb_message *message, gfp_t gfp_mask); ^~~~~
    ./include/linux/greybus/hd.h:35:55: error: unknown type name 'u16'
      int (*latency_tag_enable)(struct gb_host_device *hd, u16 cport_id);
    
    Reported-by: kbuild test robot <lkp@intel.com>
    Reported-by: Gao Xiang <hsiangkao@aol.com>
    Signed-off-by: Rui Miguel Silva <rmfrfs@gmail.com>
    Signed-off-by: Rui Miguel Silva <rui.silva@linaro.org>
    Link: https://lore.kernel.org/r/20190827155302.25704-1-rui.silva@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/include/linux/greybus/control.h b/include/linux/greybus/control.h
index 3a29ec05f631..da11fe871653 100644
--- a/include/linux/greybus/control.h
+++ b/include/linux/greybus/control.h
@@ -9,6 +9,9 @@
 #ifndef __CONTROL_H
 #define __CONTROL_H
 
+#include <linux/types.h>
+#include <linux/device.h>
+
 struct gb_control {
 	struct device dev;
 	struct gb_interface *intf;

commit ec0ad868173da8a75121f9dc116a5d5478ff614d
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sun Aug 25 07:54:27 2019 +0200

    staging: greybus: move core include files to include/linux/greybus/
    
    With the goal of moving the core of the greybus code out of staging, the
    include files need to be moved to include/linux/greybus.h and
    include/linux/greybus/
    
    Cc: Vaibhav Hiremath <hvaibhav.linux@gmail.com>
    Cc: Johan Hovold <johan@kernel.org>
    Cc: Vaibhav Agarwal <vaibhav.sr@gmail.com>
    Cc: Rui Miguel Silva <rmfrfs@gmail.com>
    Cc: David Lin <dtwlin@gmail.com>
    Cc: "Bryan O'Donoghue" <pure.logic@nexus-software.ie>
    Cc: greybus-dev@lists.linaro.org
    Cc: devel@driverdev.osuosl.org
    Acked-by: Mark Greer <mgreer@animalcreek.com>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Acked-by: Alex Elder <elder@kernel.org>
    Link: https://lore.kernel.org/r/20190825055429.18547-8-gregkh@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/include/linux/greybus/control.h b/include/linux/greybus/control.h
new file mode 100644
index 000000000000..3a29ec05f631
--- /dev/null
+++ b/include/linux/greybus/control.h
@@ -0,0 +1,57 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+/*
+ * Greybus CPort control protocol
+ *
+ * Copyright 2015 Google Inc.
+ * Copyright 2015 Linaro Ltd.
+ */
+
+#ifndef __CONTROL_H
+#define __CONTROL_H
+
+struct gb_control {
+	struct device dev;
+	struct gb_interface *intf;
+
+	struct gb_connection *connection;
+
+	u8 protocol_major;
+	u8 protocol_minor;
+
+	bool has_bundle_activate;
+	bool has_bundle_version;
+
+	char *vendor_string;
+	char *product_string;
+};
+#define to_gb_control(d) container_of(d, struct gb_control, dev)
+
+struct gb_control *gb_control_create(struct gb_interface *intf);
+int gb_control_enable(struct gb_control *control);
+void gb_control_disable(struct gb_control *control);
+int gb_control_suspend(struct gb_control *control);
+int gb_control_resume(struct gb_control *control);
+int gb_control_add(struct gb_control *control);
+void gb_control_del(struct gb_control *control);
+struct gb_control *gb_control_get(struct gb_control *control);
+void gb_control_put(struct gb_control *control);
+
+int gb_control_get_bundle_versions(struct gb_control *control);
+int gb_control_connected_operation(struct gb_control *control, u16 cport_id);
+int gb_control_disconnected_operation(struct gb_control *control, u16 cport_id);
+int gb_control_disconnecting_operation(struct gb_control *control,
+				       u16 cport_id);
+int gb_control_mode_switch_operation(struct gb_control *control);
+void gb_control_mode_switch_prepare(struct gb_control *control);
+void gb_control_mode_switch_complete(struct gb_control *control);
+int gb_control_get_manifest_size_operation(struct gb_interface *intf);
+int gb_control_get_manifest_operation(struct gb_interface *intf, void *manifest,
+				      size_t size);
+int gb_control_bundle_suspend(struct gb_control *control, u8 bundle_id);
+int gb_control_bundle_resume(struct gb_control *control, u8 bundle_id);
+int gb_control_bundle_deactivate(struct gb_control *control, u8 bundle_id);
+int gb_control_bundle_activate(struct gb_control *control, u8 bundle_id);
+int gb_control_interface_suspend_prepare(struct gb_control *control);
+int gb_control_interface_deactivate_prepare(struct gb_control *control);
+int gb_control_interface_hibernate_abort(struct gb_control *control);
+#endif /* __CONTROL_H */
