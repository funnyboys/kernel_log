commit c10bf3921e743dadb11a6cf59ffaf38cdbeb281b
Author: Rui Miguel Silva <rui.silva@linaro.org>
Date:   Tue Aug 27 16:53:02 2019 +0100

    staging: greybus: add missing includes
    
    Before moving greybus core out of staging and moving header files to
    include/linux some greybus header files were missing the necessary
    includes. This would trigger compilation faillures with some example
    errors logged bellow for with CONFIG_KERNEL_HEADER_TEST=y.
    
    So, add the necessary headers to compile clean before relocating the
    header files.
    
    ./include/linux/greybus/hd.h:23:50: error: unknown type name 'u16'
      int (*cport_disable)(struct gb_host_device *hd, u16 cport_id); ^~~
    ./include/linux/greybus/greybus_protocols.h:1314:2: error: unknown type name '__u8'
      __u8 data[0];
      ^~~~
    ./include/linux/greybus/hd.h:24:52: error: unknown type name 'u16'
      int (*cport_connected)(struct gb_host_device *hd, u16 cport_id); ^~~
    ./include/linux/greybus/hd.h:25:48: error: unknown type name 'u16'
      int (*cport_flush)(struct gb_host_device *hd, u16 cport_id); ^~~
    ./include/linux/greybus/hd.h:26:51: error: unknown type name 'u16'
      int (*cport_shutdown)(struct gb_host_device *hd, u16 cport_id, ^~~
    ./include/linux/greybus/hd.h:27:5: error: unknown type name 'u8'
    u8 phase, unsigned int timeout);
         ^~
    ./include/linux/greybus/hd.h:28:50: error: unknown type name 'u16'
      int (*cport_quiesce)(struct gb_host_device *hd, u16 cport_id, ^~~
    ./include/linux/greybus/hd.h:29:5: error: unknown type name 'size_t'
         size_t peer_space, unsigned int timeout);
         ^~~~~~
    ./include/linux/greybus/hd.h:29:5: note: 'size_t' is defined in header '<stddef.h>'; did you forget to '#include <stddef.h>'?
    ./include/linux/greybus/hd.h:1:1:
    +#include <stddef.h>
     /* SPDX-License-Identifier: GPL-2.0 */
    ./include/linux/greybus/hd.h:29:5:
         size_t peer_space, unsigned int timeout);
         ^~~~~~
    ./include/linux/greybus/hd.h:30:48: error: unknown type name 'u16'
      int (*cport_clear)(struct gb_host_device *hd, u16 cport_id); ^~~
    ./include/linux/greybus/hd.h:32:49: error: unknown type name 'u16'
      int (*message_send)(struct gb_host_device *hd, u16 dest_cport_id, ^~~
    ./include/linux/greybus/hd.h:33:32: error: unknown type name 'gfp_t'
    struct gb_message *message, gfp_t gfp_mask); ^~~~~
    ./include/linux/greybus/hd.h:35:55: error: unknown type name 'u16'
      int (*latency_tag_enable)(struct gb_host_device *hd, u16 cport_id);
    
    Reported-by: kbuild test robot <lkp@intel.com>
    Reported-by: Gao Xiang <hsiangkao@aol.com>
    Signed-off-by: Rui Miguel Silva <rmfrfs@gmail.com>
    Signed-off-by: Rui Miguel Silva <rui.silva@linaro.org>
    Link: https://lore.kernel.org/r/20190827155302.25704-1-rui.silva@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/include/linux/greybus/hd.h b/include/linux/greybus/hd.h
index 348b76fabc9a..d3faf0c1a569 100644
--- a/include/linux/greybus/hd.h
+++ b/include/linux/greybus/hd.h
@@ -9,6 +9,9 @@
 #ifndef __HD_H
 #define __HD_H
 
+#include <linux/types.h>
+#include <linux/device.h>
+
 struct gb_host_device;
 struct gb_message;
 

commit ec0ad868173da8a75121f9dc116a5d5478ff614d
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sun Aug 25 07:54:27 2019 +0200

    staging: greybus: move core include files to include/linux/greybus/
    
    With the goal of moving the core of the greybus code out of staging, the
    include files need to be moved to include/linux/greybus.h and
    include/linux/greybus/
    
    Cc: Vaibhav Hiremath <hvaibhav.linux@gmail.com>
    Cc: Johan Hovold <johan@kernel.org>
    Cc: Vaibhav Agarwal <vaibhav.sr@gmail.com>
    Cc: Rui Miguel Silva <rmfrfs@gmail.com>
    Cc: David Lin <dtwlin@gmail.com>
    Cc: "Bryan O'Donoghue" <pure.logic@nexus-software.ie>
    Cc: greybus-dev@lists.linaro.org
    Cc: devel@driverdev.osuosl.org
    Acked-by: Mark Greer <mgreer@animalcreek.com>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Acked-by: Alex Elder <elder@kernel.org>
    Link: https://lore.kernel.org/r/20190825055429.18547-8-gregkh@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/include/linux/greybus/hd.h b/include/linux/greybus/hd.h
new file mode 100644
index 000000000000..348b76fabc9a
--- /dev/null
+++ b/include/linux/greybus/hd.h
@@ -0,0 +1,82 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+/*
+ * Greybus Host Device
+ *
+ * Copyright 2014-2015 Google Inc.
+ * Copyright 2014-2015 Linaro Ltd.
+ */
+
+#ifndef __HD_H
+#define __HD_H
+
+struct gb_host_device;
+struct gb_message;
+
+struct gb_hd_driver {
+	size_t	hd_priv_size;
+
+	int (*cport_allocate)(struct gb_host_device *hd, int cport_id,
+				unsigned long flags);
+	void (*cport_release)(struct gb_host_device *hd, u16 cport_id);
+	int (*cport_enable)(struct gb_host_device *hd, u16 cport_id,
+				unsigned long flags);
+	int (*cport_disable)(struct gb_host_device *hd, u16 cport_id);
+	int (*cport_connected)(struct gb_host_device *hd, u16 cport_id);
+	int (*cport_flush)(struct gb_host_device *hd, u16 cport_id);
+	int (*cport_shutdown)(struct gb_host_device *hd, u16 cport_id,
+				u8 phase, unsigned int timeout);
+	int (*cport_quiesce)(struct gb_host_device *hd, u16 cport_id,
+				size_t peer_space, unsigned int timeout);
+	int (*cport_clear)(struct gb_host_device *hd, u16 cport_id);
+
+	int (*message_send)(struct gb_host_device *hd, u16 dest_cport_id,
+			struct gb_message *message, gfp_t gfp_mask);
+	void (*message_cancel)(struct gb_message *message);
+	int (*latency_tag_enable)(struct gb_host_device *hd, u16 cport_id);
+	int (*latency_tag_disable)(struct gb_host_device *hd, u16 cport_id);
+	int (*output)(struct gb_host_device *hd, void *req, u16 size, u8 cmd,
+		      bool async);
+};
+
+struct gb_host_device {
+	struct device dev;
+	int bus_id;
+	const struct gb_hd_driver *driver;
+
+	struct list_head modules;
+	struct list_head connections;
+	struct ida cport_id_map;
+
+	/* Number of CPorts supported by the UniPro IP */
+	size_t num_cports;
+
+	/* Host device buffer constraints */
+	size_t buffer_size_max;
+
+	struct gb_svc *svc;
+	/* Private data for the host driver */
+	unsigned long hd_priv[0] __aligned(sizeof(s64));
+};
+#define to_gb_host_device(d) container_of(d, struct gb_host_device, dev)
+
+int gb_hd_cport_reserve(struct gb_host_device *hd, u16 cport_id);
+void gb_hd_cport_release_reserved(struct gb_host_device *hd, u16 cport_id);
+int gb_hd_cport_allocate(struct gb_host_device *hd, int cport_id,
+					unsigned long flags);
+void gb_hd_cport_release(struct gb_host_device *hd, u16 cport_id);
+
+struct gb_host_device *gb_hd_create(struct gb_hd_driver *driver,
+					struct device *parent,
+					size_t buffer_size_max,
+					size_t num_cports);
+int gb_hd_add(struct gb_host_device *hd);
+void gb_hd_del(struct gb_host_device *hd);
+void gb_hd_shutdown(struct gb_host_device *hd);
+void gb_hd_put(struct gb_host_device *hd);
+int gb_hd_output(struct gb_host_device *hd, void *req, u16 size, u8 cmd,
+		 bool in_irq);
+
+int gb_hd_init(void);
+void gb_hd_exit(void);
+
+#endif	/* __HD_H */
