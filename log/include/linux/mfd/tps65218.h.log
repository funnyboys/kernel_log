commit cf2e8c544cd3b33e9e403b7b72404c221bf888d1
Merge: 04e0361848af d2d833e0bf2b
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Mar 8 10:02:58 2019 -0800

    Merge tag 'mfd-next-5.1' of git://git.kernel.org/pub/scm/linux/kernel/git/lee/mfd
    
    Pull MFD updates from Lee Jones:
     "New Drivers:
       - Add STMPE ADC Input driver
       - Add STMicroelectronics STPMIC1 Parent driver
       - Add STMicroelectronics STPMIC1 OnKey Misc driver
       - Add STMicroelectronics STPMIC1 Watchdog driver
       - Add Cirrus Logic Lochnagar Parent driver
       - Add TQ-Systems TQMX86 Parent driver
    
      New Device Support:
       - Add support for ADC to STMPE
    
      New (or moved) Functionality:
       - Move Lightbar functionality to its own driver; cros_ec_lightbar
       - Move VBC functionality to its own driver; cros_ec_vbc
       - Move VBC functionality to its own driver; cros_ec_vbc
       - Move DebugFS functionality to its own driver; cros_ec_debugfs
       - Move SYSFS functionality to its own driver; cros_ec_sysfs
       - Add support for input voltage options; tps65218
    
      Fixes:
       - Use devm_* managed resources; cros_ec
       - Device Tree documentation; stmpe, aspeed-lpc, lochnagar
       - Trivial Clean-ups; stmpe
       - Rip out broken modular code; aat2870-core, adp5520, as3711,
             db8500-prcmu, htc-i2cpld, max8925-core, rc5t583, sta2x11-mfd,
             syscon, tps65090, tps65910, tps68470 tps80031, wm831x-spi,
             wm831x-i2c, wm831x-core, wm8350-i2c, wm8350-core, wm8400-core
       - Kconfig fixups; INTEL_SOC_PMIC
       - Improve error path; sm501, sec-core
       - Use struct_size() helper; sm501
       - Constify; at91-usart
       - Use pointers instead of copying data; at91-usart
       - Deliver proper return value; cros_ec_dev
       - Trivial formatting/whitespace; sec-core"
    
    * tag 'mfd-next-5.1' of git://git.kernel.org/pub/scm/linux/kernel/git/lee/mfd: (53 commits)
      mfd: mxs-lradc: Mark expected switch fall-through
      mfd: sec-core: Cleanup formatting to a consistent style
      mfd: tqmx86: IO controller with I2C, Wachdog and GPIO
      mfd: intel-lpss: Move linux/pm.h to the local header
      mfd: cros_ec_dev: Return number of bytes read with CROS_EC_DEV_IOCRDMEM
      mfd: tps68470: Drop unused MODULE_DEVICE_TABLE
      mfd: at91-usart: No need to copy mfd_cell in probe
      mfd: at91-usart: Constify at91_usart_spi_subdev and at91_usart_serial_subdev
      mfd: lochnagar: Add support for the Cirrus Logic Lochnagar
      mfd: lochnagar: Add initial binding documentation
      dt-bindings: mfd: aspeed-lpc: Make parameter optional
      mfd: sec-core: Return gracefully instead of BUG() if device cannot match
      mfd: sm501: Use struct_size() in devm_kzalloc()
      mfd: sm501: Fix potential NULL pointer dereference
      mfd: Kconfig: Fix I2C_DESIGNWARE_PLATFORM dependencies
      mfd: tps65218.c: Add input voltage options
      mfd: wm8400-core: Make it explicitly non-modular
      mfd: wm8350-core: Drop unused module infrastructure from non-modular code
      mfd: wm8350-i2c: Make it explicitly non-modular
      mfd: wm831x-core: Drop unused module infrastructure from non-modular code
      ...

commit e5c8ba0635a81f90f51efd3d9a4c0c404e463d0f
Author: Christian Hohnstaedt <Christian.Hohnstaedt@wago.com>
Date:   Fri Feb 22 09:38:54 2019 +0100

    regulator: tps65218: Add support for LS2
    
    Re-use the "tps65218_pmic_*_current_limit()" functions of LS3
    and calculate the different required bit-shift by counting the
    trailing 0s in "struct regulator_desc.csel_mask"
    
    Signed-off-by: Christian Hohnstaedt <Christian.Hohnstaedt@wago.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/linux/mfd/tps65218.h b/include/linux/mfd/tps65218.h
index c204d9a79436..45cdcd0fee53 100644
--- a/include/linux/mfd/tps65218.h
+++ b/include/linux/mfd/tps65218.h
@@ -208,6 +208,7 @@ enum tps65218_regulator_id {
 	/* LDOs */
 	TPS65218_LDO_1,
 	/* LS's */
+	TPS65218_LS_2,
 	TPS65218_LS_3,
 };
 
@@ -218,7 +219,7 @@ enum tps65218_regulator_id {
 /* Number of LDO voltage regulators available */
 #define TPS65218_NUM_LDO		1
 /* Number of total LS current regulators available */
-#define TPS65218_NUM_LS			1
+#define TPS65218_NUM_LS			2
 /* Number of total regulators available */
 #define TPS65218_NUM_REGULATOR		(TPS65218_NUM_DCDC + TPS65218_NUM_LDO \
 					 + TPS65218_NUM_LS)

commit d57f72875eed3f26afaca176c0f425f209bc99d7
Author: Christian Hohnstaedt <Christian.Hohnstaedt@wago.com>
Date:   Mon Jan 14 09:16:34 2019 +0100

    mfd: tps65218.c: Add input voltage options
    
    These options apply to all regulators in this chip.
    
    ti,strict-supply-voltage-supervision:
      Set STRICT flag in CONFIG1
    ti,under-voltage-limit-microvolt:
      Select 2.75, 2.95, 3.25 or 3.35 V UVLO in CONFIG1
    ti,under-voltage-hyst-microvolt:
      Select 200mV or 400mV UVLOHYS in CONFIG2
    
    Signed-off-by: Christian Hohnstaedt <Christian.Hohnstaedt@wago.com>
    Tested-by: Keerthy <j-keerthy@ti.com>
    Reviewed-by: Keerthy <j-keerthy@ti.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/tps65218.h b/include/linux/mfd/tps65218.h
index c204d9a79436..3cbe103495ab 100644
--- a/include/linux/mfd/tps65218.h
+++ b/include/linux/mfd/tps65218.h
@@ -137,6 +137,10 @@
 #define TPS65218_CONFIG1_PGDLY_MASK	0x18
 #define TPS65218_CONFIG1_STRICT		BIT(2)
 #define TPS65218_CONFIG1_UVLO_MASK	0x3
+#define TPS65218_CONFIG1_UVLO_2750000	0x0
+#define TPS65218_CONFIG1_UVLO_2950000	0x1
+#define TPS65218_CONFIG1_UVLO_3250000	0x2
+#define TPS65218_CONFIG1_UVLO_3350000	0x3
 
 #define TPS65218_CONFIG2_DC12_RST	BIT(7)
 #define TPS65218_CONFIG2_UVLOHYS	BIT(6)

commit efc9b2048c7f6bb52f70cc84b8b8b8dcc685a0d6
Author: Dave Gerlach <d-gerlach@ti.com>
Date:   Thu Feb 15 22:17:05 2018 -0600

    mfd: tps65218: Reorder tps65218_regulator_id enum
    
    Commit 2dc4940360d4 ("regulator: tps65218: Remove all the compatibles")
    changes the probe function of drivers/regulator/tps65218-regulator.c so
    that it iterates through all available regulators and assumes that the
    regulator IDs are sequential and match the order present in the enum
    tps65218_regulator_id. However, for some reason the much older commit
    c0ea88b890d6 ("regulator: tps65218: add support for LS3 current
    regulator") updated all arrays with LS3 at the end but added it second
    to last for the enum.
    
    Because of this long standing mismatch in order between the
    tps65218_regulator_id enum and the regulator_desc array in the tps65218
    regulator driver, the new probe function causes the strobe values to be
    associated with the wrong regulator ID. This causes LDO1 to fail to
    suspend in tps65218_pmic_set_suspend_disable due to not having anything
    probes for its strobe value. Fix the order in the enum so the probe
    function works as the update intended.
    
    Fixes: 2dc4940360d4 ("regulator: tps65218: Remove all the compatibles")
    Signed-off-by: Dave Gerlach <d-gerlach@ti.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/tps65218.h b/include/linux/mfd/tps65218.h
index f069c518c0ed..c204d9a79436 100644
--- a/include/linux/mfd/tps65218.h
+++ b/include/linux/mfd/tps65218.h
@@ -205,10 +205,10 @@ enum tps65218_regulator_id {
 	TPS65218_DCDC_4,
 	TPS65218_DCDC_5,
 	TPS65218_DCDC_6,
-	/* LS's */
-	TPS65218_LS_3,
 	/* LDOs */
 	TPS65218_LDO_1,
+	/* LS's */
+	TPS65218_LS_3,
 };
 
 #define TPS65218_MAX_REG_ID		TPS65218_LDO_1

commit 125b1192bd48544d9429e240c8f8e64d1533b2c1
Author: Keerthy <j-keerthy@ti.com>
Date:   Fri Nov 10 17:22:44 2017 +0530

    regulator: tps65218: remove unused tps_info structure
    
    remove unused tps_info structure.
    
    Signed-off-by: Keerthy <j-keerthy@ti.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/linux/mfd/tps65218.h b/include/linux/mfd/tps65218.h
index bccd2d68b1e3..f069c518c0ed 100644
--- a/include/linux/mfd/tps65218.h
+++ b/include/linux/mfd/tps65218.h
@@ -245,24 +245,6 @@ enum tps65218_irqs {
 	TPS65218_INVALID4_IRQ,
 };
 
-/**
- * struct tps_info - packages regulator constraints
- * @id:			Id of the regulator
- * @name:		Voltage regulator name
- * @min_uV:		minimum micro volts
- * @max_uV:		minimum micro volts
- * @strobe:		sequencing strobe value for the regulator
- *
- * This data is used to check the regualtor voltage limits while setting.
- */
-struct tps_info {
-	int id;
-	const char *name;
-	int min_uV;
-	int max_uV;
-	int strobe;
-};
-
 /**
  * struct tps65218 - tps65218 sub-driver chip access routines
  *
@@ -280,7 +262,6 @@ struct tps65218 {
 	u32 irq_mask;
 	struct regmap_irq_chip_data *irq_data;
 	struct regulator_desc desc[TPS65218_NUM_REGULATOR];
-	struct tps_info *info[TPS65218_NUM_REGULATOR];
 	struct regmap *regmap;
 	u8 *strobes;
 };

commit 2dc4940360d4c0c38aa9275532c7c0d7542f6258
Author: Keerthy <j-keerthy@ti.com>
Date:   Mon Sep 19 13:09:06 2016 +0530

    regulator: tps65218: Remove all the compatibles
    
    Remove all the individual compatibles for all the regulators
    and introduce id_table and update the driver accordingly
    to parse device tree nodes using the regulator framework.
    
    Signed-off-by: Keerthy <j-keerthy@ti.com>
    Acked-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/tps65218.h b/include/linux/mfd/tps65218.h
index 51bef539091c..bccd2d68b1e3 100644
--- a/include/linux/mfd/tps65218.h
+++ b/include/linux/mfd/tps65218.h
@@ -282,6 +282,7 @@ struct tps65218 {
 	struct regulator_desc desc[TPS65218_NUM_REGULATOR];
 	struct tps_info *info[TPS65218_NUM_REGULATOR];
 	struct regmap *regmap;
+	u8 *strobes;
 };
 
 int tps65218_reg_write(struct tps65218 *tps, unsigned int reg,

commit 0aced355757ddc150f78a6bf4f8d885bd4eaf0e2
Author: Keerthy <j-keerthy@ti.com>
Date:   Mon Sep 19 13:09:02 2016 +0530

    mfd: tps65218: Remove redundant read wrapper
    
    Currently read directly calls the repmap read function. Hence
    remove the redundant wrapper and use regmap read wherever
    needed.
    
    Signed-off-by: Keerthy <j-keerthy@ti.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/tps65218.h b/include/linux/mfd/tps65218.h
index d1db9527fab5..51bef539091c 100644
--- a/include/linux/mfd/tps65218.h
+++ b/include/linux/mfd/tps65218.h
@@ -284,8 +284,6 @@ struct tps65218 {
 	struct regmap *regmap;
 };
 
-int tps65218_reg_read(struct tps65218 *tps, unsigned int reg,
-					unsigned int *val);
 int tps65218_reg_write(struct tps65218 *tps, unsigned int reg,
 			unsigned int val, unsigned int level);
 int tps65218_set_bits(struct tps65218 *tps, unsigned int reg,

commit 23a34f9d03a5d40a6234855bc069da370708cc9e
Author: Tero Kristo <t-kristo@ti.com>
Date:   Wed Aug 10 17:53:55 2016 +0530

    regulator: tps65218: do not disable DCDC3 during poweroff on broken PMICs
    
    Some versions of tps65218 do not seem to support poweroff modes properly
    if DCDC3 regulator is shut-down. Thus, keep it enabled even during
    poweroff if the version info matches the broken silicon revision.
    
    Signed-off-by: Tero Kristo <t-kristo@ti.com>
    Signed-off-by: Dave Gerlach <d-gerlach@ti.com>
    Signed-off-by: Keerthy <j-keerthy@ti.com>
    Acked-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/linux/mfd/tps65218.h b/include/linux/mfd/tps65218.h
index 85e464e32c43..d1db9527fab5 100644
--- a/include/linux/mfd/tps65218.h
+++ b/include/linux/mfd/tps65218.h
@@ -63,6 +63,11 @@
 #define TPS65218_CHIPID_CHIP_MASK	0xF8
 #define TPS65218_CHIPID_REV_MASK	0x07
 
+#define TPS65218_REV_1_0		0x0
+#define TPS65218_REV_1_1		0x1
+#define TPS65218_REV_2_0		0x2
+#define TPS65218_REV_2_1		0x3
+
 #define TPS65218_INT1_VPRG		BIT(5)
 #define TPS65218_INT1_AC		BIT(4)
 #define TPS65218_INT1_PB		BIT(3)

commit f11fa1796a4b4f8c6d4ced37e8824276ec57057d
Author: Tero Kristo <t-kristo@ti.com>
Date:   Wed Aug 10 17:53:54 2016 +0530

    mfd: tps65218: add version check to the PMIC probe
    
    Version information will be needed to handle some error cases under the
    regulator driver, so store the information once during MFD probe.
    
    Signed-off-by: Tero Kristo <t-kristo@ti.com>
    Signed-off-by: Dave Gerlach <d-gerlach@ti.com>
    Signed-off-by: Keerthy <j-keerthy@ti.com>
    Acked-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/linux/mfd/tps65218.h b/include/linux/mfd/tps65218.h
index 7fdf5326f34e..85e464e32c43 100644
--- a/include/linux/mfd/tps65218.h
+++ b/include/linux/mfd/tps65218.h
@@ -267,6 +267,7 @@ struct tps_info {
 struct tps65218 {
 	struct device *dev;
 	unsigned int id;
+	u8 rev;
 
 	struct mutex tps_lock;		/* lock guarding the data structure */
 	/* IRQ Data */

commit b9a0d359413d7f4e078d81cd59f9d851a6febb7a
Author: Tero Kristo <t-kristo@ti.com>
Date:   Fri Jun 24 13:58:08 2016 +0530

    regulator: tps65218: Enable suspend configuration
    
    TPS65218 has a pre-defined power-up / power-down sequence which in
    a typical application does not need to be changed. However, it is possible
    to define custom sequences under I2C control. The power-up sequence is
    defined by strobes and delay times. Each output rail is assigned to a
    strobe to determine the order in which the rails are enabled.
    
    Every regulator has sequence registers and every regulator has a default
    strobe value and gets disabled when a particular power down sequence
    occurs.
    
    To keep a regulator on during suspend we write value 0 to strobe so
    that the regulator is out of all sequencers and is not impacted by any
    power down sequence. Hence saving the default strobe value during probe
    so that when we want to regulator to be enabled during suspend we write 0
    to strobe and when we want it to get disabled during suspend we write
    the default saved strobe value.
    This allows platform data to specify which power rails should be on or off
    during RTC only suspend. This is necessary to keep DDR state while in RTC
    only suspend.
    
    Signed-off-by: Tero Kristo <t-kristo@ti.com>
    Signed-off-by: Keerthy <j-keerthy@ti.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/linux/mfd/tps65218.h b/include/linux/mfd/tps65218.h
index d58f3b5f585a..7fdf5326f34e 100644
--- a/include/linux/mfd/tps65218.h
+++ b/include/linux/mfd/tps65218.h
@@ -246,6 +246,7 @@ enum tps65218_irqs {
  * @name:		Voltage regulator name
  * @min_uV:		minimum micro volts
  * @max_uV:		minimum micro volts
+ * @strobe:		sequencing strobe value for the regulator
  *
  * This data is used to check the regualtor voltage limits while setting.
  */
@@ -254,6 +255,7 @@ struct tps_info {
 	const char *name;
 	int min_uV;
 	int max_uV;
+	int strobe;
 };
 
 /**

commit c0ea88b890d67cff2667188f14189d8346e89a0f
Author: Nikita Kiryanov <nikita@compulab.co.il>
Date:   Wed Nov 25 13:59:04 2015 +0200

    regulator: tps65218: add support for LS3 current regulator
    
    Add support for TPS65218 LS3 current regulator, which is capable of 4
    current input limit modes: 100, 200, 500, and 1000 uA.
    
    Signed-off-by: Nikita Kiryanov <nikita@compulab.co.il>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/linux/mfd/tps65218.h b/include/linux/mfd/tps65218.h
index 2f9b593246ee..d58f3b5f585a 100644
--- a/include/linux/mfd/tps65218.h
+++ b/include/linux/mfd/tps65218.h
@@ -200,6 +200,8 @@ enum tps65218_regulator_id {
 	TPS65218_DCDC_4,
 	TPS65218_DCDC_5,
 	TPS65218_DCDC_6,
+	/* LS's */
+	TPS65218_LS_3,
 	/* LDOs */
 	TPS65218_LDO_1,
 };
@@ -210,8 +212,11 @@ enum tps65218_regulator_id {
 #define TPS65218_NUM_DCDC		6
 /* Number of LDO voltage regulators available */
 #define TPS65218_NUM_LDO		1
+/* Number of total LS current regulators available */
+#define TPS65218_NUM_LS			1
 /* Number of total regulators available */
-#define TPS65218_NUM_REGULATOR		(TPS65218_NUM_DCDC + TPS65218_NUM_LDO)
+#define TPS65218_NUM_REGULATOR		(TPS65218_NUM_DCDC + TPS65218_NUM_LDO \
+					 + TPS65218_NUM_LS)
 
 /* Define the TPS65218 IRQ numbers */
 enum tps65218_irqs {

commit 3176a521922b8ebcf7a593063cc55344486d2cd7
Author: Axel Lin <axel.lin@ingics.com>
Date:   Tue Apr 15 19:40:09 2014 +0800

    mfd: tps65218: Remove unused *rdev[] from struct tps65218
    
    The *rdev[] is not used since commit 413be59e2f333
    "regulator: tps65218: Remove unnecessary regulator_unregister call".
    
    Signed-off-by: Axel Lin <axel.lin@ingics.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/tps65218.h b/include/linux/mfd/tps65218.h
index d2e357df5a0e..2f9b593246ee 100644
--- a/include/linux/mfd/tps65218.h
+++ b/include/linux/mfd/tps65218.h
@@ -267,7 +267,6 @@ struct tps65218 {
 	u32 irq_mask;
 	struct regmap_irq_chip_data *irq_data;
 	struct regulator_desc desc[TPS65218_NUM_REGULATOR];
-	struct regulator_dev *rdev[TPS65218_NUM_REGULATOR];
 	struct tps_info *info[TPS65218_NUM_REGULATOR];
 	struct regmap *regmap;
 };

commit 44b4dc616365d7897808555d415099330e3af9df
Author: Keerthy <j-keerthy@ti.com>
Date:   Thu Feb 6 11:20:12 2014 +0530

    mfd: tps65218: Add driver for the TPS65218 PMIC
    
    The TPS65218 chip is a power management IC for Portable Navigation Systems
    and Tablet Computing devices. It contains the following components:
    
     - Regulators.
     - Over Temperature warning and Shut down.
    
    This patch adds support for tps65218 mfd device. At this time only
    the regulator functionality is made available.
    
    Signed-off-by: Keerthy <j-keerthy@ti.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/tps65218.h b/include/linux/mfd/tps65218.h
new file mode 100644
index 000000000000..d2e357df5a0e
--- /dev/null
+++ b/include/linux/mfd/tps65218.h
@@ -0,0 +1,284 @@
+/*
+ * linux/mfd/tps65218.h
+ *
+ * Functions to access TPS65219 power management chip.
+ *
+ * Copyright (C) 2014 Texas Instruments Incorporated - http://www.ti.com/
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ *
+ * This program is distributed "as is" WITHOUT ANY WARRANTY of any
+ * kind, whether expressed or implied; without even the implied warranty
+ * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License version 2 for more details.
+ */
+
+#ifndef __LINUX_MFD_TPS65218_H
+#define __LINUX_MFD_TPS65218_H
+
+#include <linux/i2c.h>
+#include <linux/regulator/driver.h>
+#include <linux/regulator/machine.h>
+#include <linux/bitops.h>
+
+/* TPS chip id list */
+#define TPS65218			0xF0
+
+/* I2C ID for TPS65218 part */
+#define TPS65218_I2C_ID			0x24
+
+/* All register addresses */
+#define TPS65218_REG_CHIPID		0x00
+#define TPS65218_REG_INT1		0x01
+#define TPS65218_REG_INT2		0x02
+#define TPS65218_REG_INT_MASK1		0x03
+#define TPS65218_REG_INT_MASK2		0x04
+#define TPS65218_REG_STATUS		0x05
+#define TPS65218_REG_CONTROL		0x06
+#define TPS65218_REG_FLAG		0x07
+
+#define TPS65218_REG_PASSWORD		0x10
+#define TPS65218_REG_ENABLE1		0x11
+#define TPS65218_REG_ENABLE2		0x12
+#define TPS65218_REG_CONFIG1		0x13
+#define TPS65218_REG_CONFIG2		0x14
+#define TPS65218_REG_CONFIG3		0x15
+#define TPS65218_REG_CONTROL_DCDC1	0x16
+#define TPS65218_REG_CONTROL_DCDC2	0x17
+#define TPS65218_REG_CONTROL_DCDC3	0x18
+#define TPS65218_REG_CONTROL_DCDC4	0x19
+#define TPS65218_REG_CONTRL_SLEW_RATE	0x1A
+#define TPS65218_REG_CONTROL_LDO1	0x1B
+#define TPS65218_REG_SEQ1		0x20
+#define TPS65218_REG_SEQ2		0x21
+#define TPS65218_REG_SEQ3		0x22
+#define TPS65218_REG_SEQ4		0x23
+#define TPS65218_REG_SEQ5		0x24
+#define TPS65218_REG_SEQ6		0x25
+#define TPS65218_REG_SEQ7		0x26
+
+/* Register field definitions */
+#define TPS65218_CHIPID_CHIP_MASK	0xF8
+#define TPS65218_CHIPID_REV_MASK	0x07
+
+#define TPS65218_INT1_VPRG		BIT(5)
+#define TPS65218_INT1_AC		BIT(4)
+#define TPS65218_INT1_PB		BIT(3)
+#define TPS65218_INT1_HOT		BIT(2)
+#define TPS65218_INT1_CC_AQC		BIT(1)
+#define TPS65218_INT1_PRGC		BIT(0)
+
+#define TPS65218_INT2_LS3_F		BIT(5)
+#define TPS65218_INT2_LS2_F		BIT(4)
+#define TPS65218_INT2_LS1_F		BIT(3)
+#define TPS65218_INT2_LS3_I		BIT(2)
+#define TPS65218_INT2_LS2_I		BIT(1)
+#define TPS65218_INT2_LS1_I		BIT(0)
+
+#define TPS65218_INT_MASK1_VPRG		BIT(5)
+#define TPS65218_INT_MASK1_AC		BIT(4)
+#define TPS65218_INT_MASK1_PB		BIT(3)
+#define TPS65218_INT_MASK1_HOT		BIT(2)
+#define TPS65218_INT_MASK1_CC_AQC	BIT(1)
+#define TPS65218_INT_MASK1_PRGC		BIT(0)
+
+#define TPS65218_INT_MASK2_LS3_F	BIT(5)
+#define TPS65218_INT_MASK2_LS2_F	BIT(4)
+#define TPS65218_INT_MASK2_LS1_F	BIT(3)
+#define TPS65218_INT_MASK2_LS3_I	BIT(2)
+#define TPS65218_INT_MASK2_LS2_I	BIT(1)
+#define TPS65218_INT_MASK2_LS1_I	BIT(0)
+
+#define TPS65218_STATUS_FSEAL		BIT(7)
+#define TPS65218_STATUS_EE		BIT(6)
+#define TPS65218_STATUS_AC_STATE	BIT(5)
+#define TPS65218_STATUS_PB_STATE	BIT(4)
+#define TPS65218_STATUS_STATE_MASK	0xC
+#define TPS65218_STATUS_CC_STAT		0x3
+
+#define TPS65218_CONTROL_OFFNPFO	BIT(1)
+#define TPS65218_CONTROL_CC_AQ	BIT(0)
+
+#define TPS65218_FLAG_GPO3_FLG		BIT(7)
+#define TPS65218_FLAG_GPO2_FLG		BIT(6)
+#define TPS65218_FLAG_GPO1_FLG		BIT(5)
+#define TPS65218_FLAG_LDO1_FLG		BIT(4)
+#define TPS65218_FLAG_DC4_FLG		BIT(3)
+#define TPS65218_FLAG_DC3_FLG		BIT(2)
+#define TPS65218_FLAG_DC2_FLG		BIT(1)
+#define TPS65218_FLAG_DC1_FLG		BIT(0)
+
+#define TPS65218_ENABLE1_DC6_EN		BIT(5)
+#define TPS65218_ENABLE1_DC5_EN		BIT(4)
+#define TPS65218_ENABLE1_DC4_EN		BIT(3)
+#define TPS65218_ENABLE1_DC3_EN		BIT(2)
+#define TPS65218_ENABLE1_DC2_EN		BIT(1)
+#define TPS65218_ENABLE1_DC1_EN		BIT(0)
+
+#define TPS65218_ENABLE2_GPIO3		BIT(6)
+#define TPS65218_ENABLE2_GPIO2		BIT(5)
+#define TPS65218_ENABLE2_GPIO1		BIT(4)
+#define TPS65218_ENABLE2_LS3_EN		BIT(3)
+#define TPS65218_ENABLE2_LS2_EN		BIT(2)
+#define TPS65218_ENABLE2_LS1_EN		BIT(1)
+#define TPS65218_ENABLE2_LDO1_EN	BIT(0)
+
+
+#define TPS65218_CONFIG1_TRST		BIT(7)
+#define TPS65218_CONFIG1_GPO2_BUF	BIT(6)
+#define TPS65218_CONFIG1_IO1_SEL	BIT(5)
+#define TPS65218_CONFIG1_PGDLY_MASK	0x18
+#define TPS65218_CONFIG1_STRICT		BIT(2)
+#define TPS65218_CONFIG1_UVLO_MASK	0x3
+
+#define TPS65218_CONFIG2_DC12_RST	BIT(7)
+#define TPS65218_CONFIG2_UVLOHYS	BIT(6)
+#define TPS65218_CONFIG2_LS3ILIM_MASK	0xC
+#define TPS65218_CONFIG2_LS2ILIM_MASK	0x3
+
+#define TPS65218_CONFIG3_LS3NPFO	BIT(5)
+#define TPS65218_CONFIG3_LS2NPFO	BIT(4)
+#define TPS65218_CONFIG3_LS1NPFO	BIT(3)
+#define TPS65218_CONFIG3_LS3DCHRG	BIT(2)
+#define TPS65218_CONFIG3_LS2DCHRG	BIT(1)
+#define TPS65218_CONFIG3_LS1DCHRG	BIT(0)
+
+#define TPS65218_CONTROL_DCDC1_PFM	BIT(7)
+#define TPS65218_CONTROL_DCDC1_MASK	0x7F
+
+#define TPS65218_CONTROL_DCDC2_PFM	BIT(7)
+#define TPS65218_CONTROL_DCDC2_MASK	0x3F
+
+#define TPS65218_CONTROL_DCDC3_PFM	BIT(7)
+#define TPS65218_CONTROL_DCDC3_MASK	0x3F
+
+#define TPS65218_CONTROL_DCDC4_PFM	BIT(7)
+#define TPS65218_CONTROL_DCDC4_MASK	0x3F
+
+#define TPS65218_SLEW_RATE_GO		BIT(7)
+#define TPS65218_SLEW_RATE_GODSBL	BIT(6)
+#define TPS65218_SLEW_RATE_SLEW_MASK	0x7
+
+#define TPS65218_CONTROL_LDO1_MASK	0x3F
+
+#define TPS65218_SEQ1_DLY8		BIT(7)
+#define TPS65218_SEQ1_DLY7		BIT(6)
+#define TPS65218_SEQ1_DLY6		BIT(5)
+#define TPS65218_SEQ1_DLY5		BIT(4)
+#define TPS65218_SEQ1_DLY4		BIT(3)
+#define TPS65218_SEQ1_DLY3		BIT(2)
+#define TPS65218_SEQ1_DLY2		BIT(1)
+#define TPS65218_SEQ1_DLY1		BIT(0)
+
+#define TPS65218_SEQ2_DLYFCTR		BIT(7)
+#define TPS65218_SEQ2_DLY9		BIT(0)
+
+#define TPS65218_SEQ3_DC2_SEQ_MASK	0xF0
+#define TPS65218_SEQ3_DC1_SEQ_MASK	0xF
+
+#define TPS65218_SEQ4_DC4_SEQ_MASK	0xF0
+#define TPS65218_SEQ4_DC3_SEQ_MASK	0xF
+
+#define TPS65218_SEQ5_DC6_SEQ_MASK	0xF0
+#define TPS65218_SEQ5_DC5_SEQ_MASK	0xF
+
+#define TPS65218_SEQ6_LS1_SEQ_MASK	0xF0
+#define TPS65218_SEQ6_LDO1_SEQ_MASK	0xF
+
+#define TPS65218_SEQ7_GPO3_SEQ_MASK	0xF0
+#define TPS65218_SEQ7_GPO1_SEQ_MASK	0xF
+#define TPS65218_PROTECT_NONE		0
+#define TPS65218_PROTECT_L1		1
+
+enum tps65218_regulator_id {
+	/* DCDC's */
+	TPS65218_DCDC_1,
+	TPS65218_DCDC_2,
+	TPS65218_DCDC_3,
+	TPS65218_DCDC_4,
+	TPS65218_DCDC_5,
+	TPS65218_DCDC_6,
+	/* LDOs */
+	TPS65218_LDO_1,
+};
+
+#define TPS65218_MAX_REG_ID		TPS65218_LDO_1
+
+/* Number of step-down converters available */
+#define TPS65218_NUM_DCDC		6
+/* Number of LDO voltage regulators available */
+#define TPS65218_NUM_LDO		1
+/* Number of total regulators available */
+#define TPS65218_NUM_REGULATOR		(TPS65218_NUM_DCDC + TPS65218_NUM_LDO)
+
+/* Define the TPS65218 IRQ numbers */
+enum tps65218_irqs {
+	/* INT1 registers */
+	TPS65218_PRGC_IRQ,
+	TPS65218_CC_AQC_IRQ,
+	TPS65218_HOT_IRQ,
+	TPS65218_PB_IRQ,
+	TPS65218_AC_IRQ,
+	TPS65218_VPRG_IRQ,
+	TPS65218_INVALID1_IRQ,
+	TPS65218_INVALID2_IRQ,
+	/* INT2 registers */
+	TPS65218_LS1_I_IRQ,
+	TPS65218_LS2_I_IRQ,
+	TPS65218_LS3_I_IRQ,
+	TPS65218_LS1_F_IRQ,
+	TPS65218_LS2_F_IRQ,
+	TPS65218_LS3_F_IRQ,
+	TPS65218_INVALID3_IRQ,
+	TPS65218_INVALID4_IRQ,
+};
+
+/**
+ * struct tps_info - packages regulator constraints
+ * @id:			Id of the regulator
+ * @name:		Voltage regulator name
+ * @min_uV:		minimum micro volts
+ * @max_uV:		minimum micro volts
+ *
+ * This data is used to check the regualtor voltage limits while setting.
+ */
+struct tps_info {
+	int id;
+	const char *name;
+	int min_uV;
+	int max_uV;
+};
+
+/**
+ * struct tps65218 - tps65218 sub-driver chip access routines
+ *
+ * Device data may be used to access the TPS65218 chip
+ */
+
+struct tps65218 {
+	struct device *dev;
+	unsigned int id;
+
+	struct mutex tps_lock;		/* lock guarding the data structure */
+	/* IRQ Data */
+	int irq;
+	u32 irq_mask;
+	struct regmap_irq_chip_data *irq_data;
+	struct regulator_desc desc[TPS65218_NUM_REGULATOR];
+	struct regulator_dev *rdev[TPS65218_NUM_REGULATOR];
+	struct tps_info *info[TPS65218_NUM_REGULATOR];
+	struct regmap *regmap;
+};
+
+int tps65218_reg_read(struct tps65218 *tps, unsigned int reg,
+					unsigned int *val);
+int tps65218_reg_write(struct tps65218 *tps, unsigned int reg,
+			unsigned int val, unsigned int level);
+int tps65218_set_bits(struct tps65218 *tps, unsigned int reg,
+		unsigned int mask, unsigned int val, unsigned int level);
+int tps65218_clear_bits(struct tps65218 *tps, unsigned int reg,
+		unsigned int mask, unsigned int level);
+
+#endif /*  __LINUX_MFD_TPS65218_H */
