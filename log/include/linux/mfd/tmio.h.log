commit 12e3c55d236b18fae00daa4ff54195b15cd741c3
Author: Wolfram Sang <wsa+renesas@sang-engineering.com>
Date:   Tue Dec 3 21:05:12 2019 +0100

    mmc: renesas_sdhi: remove 4taps as a TMIO flag
    
    Now that the quirks structure is accessible, we can remove the TMIO flag
    for HS400 using only 4 taps. This is Renesas specific anyhow.
    
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Link: https://lore.kernel.org/r/20191203200513.1758-5-wsa+renesas@sang-engineering.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 739b7bf37eaa..8ba042430d8e 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -79,9 +79,6 @@
 /* Some controllers have a CBSY bit */
 #define TMIO_MMC_HAVE_CBSY		BIT(11)
 
-/* Some controllers that support HS400 use 4 taps while others use 8. */
-#define TMIO_MMC_HAVE_4TAP_HS400	BIT(13)
-
 int tmio_core_mmc_enable(void __iomem *cnf, int shift, unsigned long base);
 int tmio_core_mmc_resume(void __iomem *cnf, int shift, unsigned long base);
 void tmio_core_mmc_pwr(void __iomem *cnf, int shift, int state);

commit 9deb9e1637761cc4e6df5104a34197ef0bae1358
Merge: 3a73e73a10a7 3f2d347e851e
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Jan 15 06:24:36 2019 +1200

    Merge tag 'mfd-next-4.21' of git://git.kernel.org/pub/scm/linux/kernel/git/lee/mfd
    
    Pull MFD updates from Lee Jones:
     "New Device Support
       - Add support for Power Supply to AXP813
       - Add support for GPIO, ADC, AC and Battery Power Supply to AXP803
       - Add support for UART to Exynos LPASS
    
      Fix-ups:
       - Use supplied MACROS; ti_am335x_tscadc
       - Trivial spelling/whitespace/alignment; tmio, axp20x, rave-sp
       - Regmap changes; bd9571mwv, wm5110-tables
       - Kconfig dependencies; MFD_AT91_USART
       - Supply shared data for child-devices; madera-core
       - Use new of_node_name_eq() API call; max77620, stmpe
       - Use managed resources (devm_*); tps65218
       - Comment descriptions; ingenic-tcu
       - Coding style; madera-core
    
      Bug Fixes:
       - Fix section mismatches; twl-core, db8500-prcmu
       - Correct error path related issues; mt6397-core, ab8500-core, mc13xxx-core
       - IRQ related fixes; tps6586x
       - Ensure proper initialisation sequence; qcom_rpm
       - Repair potential memory leak; cros_ec_dev"
    
    * tag 'mfd-next-4.21' of git://git.kernel.org/pub/scm/linux/kernel/git/lee/mfd: (25 commits)
      mfd: exynos-lpass: Enable UART module support
      mfd: mc13xxx: Fix a missing check of a register-read failure
      mfd: cros_ec: Add commands to control codec
      mfd: madera: Remove spurious semicolon in while loop
      mfd: rave-sp: Fix typo in rave_sp_checksum comment
      mfd: ingenic-tcu: Fix bit field description in header
      mfd: tps65218: Use devm_regmap_add_irq_chip and clean up error path in probe()
      mfd: Use of_node_name_eq() for node name comparisons
      mfd: cros_ec_dev: Add missing mfd_remove_devices() call in remove
      mfd: axp20x: Add supported cells for AXP803
      mfd: axp20x: Re-align MFD cell entries
      mfd: axp20x: Add AC power supply cell for AXP813
      mfd: wm5110: Add missing ASRC rate register
      mfd: qcom_rpm: write fw_version to CTRL_REG
      mfd: tps6586x: Handle interrupts on suspend
      mfd: madera: Add shared data for accessory detection
      mfd: at91-usart: Add platform dependency
      mfd: bd9571mwv: Add volatile register to make DVFS work
      mfd: ab8500-core: Return zero in get_register_interruptible()
      mfd: tmio: Typo s/use use/use/
      ...

commit a54e950fdec3cde98caa04bc601cbdc95d0d319c
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Wed Nov 7 14:50:01 2018 +0100

    mfd: tmio: Typo s/use use/use/
    
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Reviewed-by: Simon Horman <horms+renesas@verge.net.au>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 1e70060c92ce..aa696bcb1d12 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -83,7 +83,7 @@
 /* Some controllers have a CBSY bit */
 #define TMIO_MMC_HAVE_CBSY		BIT(11)
 
-/* Some controllers that support HS400 use use 4 taps while others use 8. */
+/* Some controllers that support HS400 use 4 taps while others use 8. */
 #define TMIO_MMC_HAVE_4TAP_HS400	BIT(13)
 
 int tmio_core_mmc_enable(void __iomem *cnf, int shift, unsigned long base);

commit faed9303067a0bd9d8ddb09c0de3bc742334773a
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Sun Dec 2 09:43:19 2018 +0100

    mmc: host: tmio: Use GPIO descriptors
    
    The TMIO MMC driver was passing global GPIO numbers around for
    card detect. It turns out only one single board in the kernel
    was actually making use of this feature so it is pretty easy
    to convert the driver to use only GPIO descriptors.
    
    The lines are flagged as GPIO_ACTIVE_[LOW|HIGH] as that is
    what they are, and since we can now rely on the descriptors
    to have the right polarity, we set the
    "override_active_level" to false in mmc_gpiod_request_cd()
    and mmc_gpiod_request_ro().
    
    Reviewed-by: Laurent Pinchart <laurent.pinchart+renesas@ideasonboard.com>
    Acked-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 1e70060c92ce..e2687a30e5a1 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -54,12 +54,8 @@
  * idle before writing to some registers.
  */
 #define TMIO_MMC_HAS_IDLE_WAIT		BIT(4)
-/*
- * A GPIO is used for card hotplug detection. We need an extra flag for this,
- * because 0 is a valid GPIO number too, and requiring users to specify
- * cd_gpio < 0 to disable GPIO hotplug would break backwards compatibility.
- */
-#define TMIO_MMC_USE_GPIO_CD		BIT(5)
+
+/* BIT(5) is unused */
 
 /*
  * Some controllers have CMD12 automatically
@@ -104,7 +100,6 @@ struct tmio_mmc_data {
 	unsigned long			capabilities2;
 	unsigned long			flags;
 	u32				ocr_mask;	/* available voltages */
-	unsigned int			cd_gpio;
 	int				alignment_shift;
 	dma_addr_t			dma_rx_offset;
 	unsigned int			max_blk_count;

commit 722fb61e2ed39473297157839ec7230b77fd6940
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Wed Oct 10 12:51:32 2018 +0900

    mmc: tmio: remove TMIO_MMC_HAVE_HIGH_REG flag
    
    TMIO_MMC_HAVE_HIGH_REG is confusing due to its counter-intuitive name.
    
    All the TMIO MMC variants (TMIO MMC, Renesas SDHI, UniPhier SD) actually
    have high registers. It is just that each of them implements its own
    registers there. The original IP from Panasonic only defines registers
    0x00-0xff in the bus_shift=1 review. The register area above them is
    platform-dependent.
    
    In fact, TMIO_MMC_HAVE_HIGH_REG is set only by tmio-mmc.c and used to
    test the accessibility of CTL_SDIO_REGS. Because it is specific to
    the TMIO MFD variant, the right thing to do is to move such registers
    to tmio_mmc.c and delete the TMIO_MMC_HAVE_HIGH_REG flag.
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Reviewed-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Tested-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 77866214ab51..1e70060c92ce 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -61,13 +61,6 @@
  */
 #define TMIO_MMC_USE_GPIO_CD		BIT(5)
 
-/*
- * Some controllers doesn't have over 0x100 register.
- * it is used to checking accessibility of
- * CTL_SD_CARD_CLK_CTL / CTL_CLK_AND_WAIT_CTL
- */
-#define TMIO_MMC_HAVE_HIGH_REG		BIT(6)
-
 /*
  * Some controllers have CMD12 automatically
  * issue/non-issue register

commit db924bba47c8031188545c84bf943f4058b659d0
Author: Masaharu Hayakawa <masaharu.hayakawa.ry@renesas.com>
Date:   Mon Jun 18 14:57:50 2018 +0200

    mmc: tmio: add eMMC HS400 mode support
    
    This patch adds processing for selecting HS400 mode.
    
    Signed-off-by: Masaharu Hayakawa <masaharu.hayakawa.ry@renesas.com>
    Signed-off-by: Simon Horman <horms+renesas@verge.net.au>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 91f92215ca74..77866214ab51 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -90,6 +90,9 @@
 /* Some controllers have a CBSY bit */
 #define TMIO_MMC_HAVE_CBSY		BIT(11)
 
+/* Some controllers that support HS400 use use 4 taps while others use 8. */
+#define TMIO_MMC_HAVE_4TAP_HS400	BIT(13)
+
 int tmio_core_mmc_enable(void __iomem *cnf, int shift, unsigned long base);
 int tmio_core_mmc_resume(void __iomem *cnf, int shift, unsigned long base);
 void tmio_core_mmc_pwr(void __iomem *cnf, int shift, int state);

commit 218f6024abec04ec78e56b6761f70d404bab8637
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Thu Jan 18 01:28:10 2018 +0900

    mmc: tmio: remove TMIO_MMC_WRPROTECT_DISABLE
    
    The use of this flag has been replaced with MMC_CAP2_NO_WRITE_PROTECT.
    No platform defines this flag any more.  Remove.
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Acked-by: Lee Jones <lee.jones@linaro.org>
    Reviewed-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Tested-by: Wolfram Sang <wsa+renesas@sang-engineering.com>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 396a103c8bc6..91f92215ca74 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -36,7 +36,6 @@
 	} while (0)
 
 /* tmio MMC platform flags */
-#define TMIO_MMC_WRPROTECT_DISABLE	BIT(0)
 /*
  * Some controllers can support a 2-byte block size when the bus width
  * is configured in 4-bit mode.

commit 299fad6b9b6e4b50929861c701af64a36cde0f31
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Tue Nov 7 17:14:12 2017 +0900

    mfd: tmio: Move register macros to tmio_core.c
    
    These registers are only used in drivers/mfd/tmio_core.c
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Acked-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index e1cfe9194129..396a103c8bc6 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -25,26 +25,6 @@
 		writew((val) >> 16, (addr) + 2); \
 	} while (0)
 
-#define CNF_CMD     0x04
-#define CNF_CTL_BASE   0x10
-#define CNF_INT_PIN  0x3d
-#define CNF_STOP_CLK_CTL 0x40
-#define CNF_GCLK_CTL 0x41
-#define CNF_SD_CLK_MODE 0x42
-#define CNF_PIN_STATUS 0x44
-#define CNF_PWR_CTL_1 0x48
-#define CNF_PWR_CTL_2 0x49
-#define CNF_PWR_CTL_3 0x4a
-#define CNF_CARD_DETECT_MODE 0x4c
-#define CNF_SD_SLOT 0x50
-#define CNF_EXT_GCLK_CTL_1 0xf0
-#define CNF_EXT_GCLK_CTL_2 0xf1
-#define CNF_EXT_GCLK_CTL_3 0xf9
-#define CNF_SD_LED_EN_1 0xfa
-#define CNF_SD_LED_EN_2 0xfe
-
-#define   SDCREN 0x2   /* Enable access to MMC CTL regs. (flag in COMMAND_REG)*/
-
 #define sd_config_write8(base, shift, reg, val) \
 	tmio_iowrite8((val), (base) + ((reg) << (shift)))
 #define sd_config_write16(base, shift, reg, val) \

commit b24413180f5600bcb3bb70fbed5cf186b60864bd
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Nov 1 15:07:57 2017 +0100

    License cleanup: add SPDX GPL-2.0 license identifier to files with no license
    
    Many source files in the tree are missing licensing information, which
    makes it harder for compliance tools to determine the correct license.
    
    By default all files without license information are under the default
    license of the kernel, which is GPL version 2.
    
    Update the files which contain no license information with the 'GPL-2.0'
    SPDX license identifier.  The SPDX identifier is a legally binding
    shorthand, which can be used instead of the full boiler plate text.
    
    This patch is based on work done by Thomas Gleixner and Kate Stewart and
    Philippe Ombredanne.
    
    How this work was done:
    
    Patches were generated and checked against linux-4.14-rc6 for a subset of
    the use cases:
     - file had no licensing information it it.
     - file was a */uapi/* one with no licensing information in it,
     - file was a */uapi/* one with existing licensing information,
    
    Further patches will be generated in subsequent months to fix up cases
    where non-standard license headers were used, and references to license
    had to be inferred by heuristics based on keywords.
    
    The analysis to determine which SPDX License Identifier to be applied to
    a file was done in a spreadsheet of side by side results from of the
    output of two independent scanners (ScanCode & Windriver) producing SPDX
    tag:value files created by Philippe Ombredanne.  Philippe prepared the
    base worksheet, and did an initial spot review of a few 1000 files.
    
    The 4.13 kernel was the starting point of the analysis with 60,537 files
    assessed.  Kate Stewart did a file by file comparison of the scanner
    results in the spreadsheet to determine which SPDX license identifier(s)
    to be applied to the file. She confirmed any determination that was not
    immediately clear with lawyers working with the Linux Foundation.
    
    Criteria used to select files for SPDX license identifier tagging was:
     - Files considered eligible had to be source code files.
     - Make and config files were included as candidates if they contained >5
       lines of source
     - File already had some variant of a license header in it (even if <5
       lines).
    
    All documentation files were explicitly excluded.
    
    The following heuristics were used to determine which SPDX license
    identifiers to apply.
    
     - when both scanners couldn't find any license traces, file was
       considered to have no license information in it, and the top level
       COPYING file license applied.
    
       For non */uapi/* files that summary was:
    
       SPDX license identifier                            # files
       ---------------------------------------------------|-------
       GPL-2.0                                              11139
    
       and resulted in the first patch in this series.
    
       If that file was a */uapi/* path one, it was "GPL-2.0 WITH
       Linux-syscall-note" otherwise it was "GPL-2.0".  Results of that was:
    
       SPDX license identifier                            # files
       ---------------------------------------------------|-------
       GPL-2.0 WITH Linux-syscall-note                        930
    
       and resulted in the second patch in this series.
    
     - if a file had some form of licensing information in it, and was one
       of the */uapi/* ones, it was denoted with the Linux-syscall-note if
       any GPL family license was found in the file or had no licensing in
       it (per prior point).  Results summary:
    
       SPDX license identifier                            # files
       ---------------------------------------------------|------
       GPL-2.0 WITH Linux-syscall-note                       270
       GPL-2.0+ WITH Linux-syscall-note                      169
       ((GPL-2.0 WITH Linux-syscall-note) OR BSD-2-Clause)    21
       ((GPL-2.0 WITH Linux-syscall-note) OR BSD-3-Clause)    17
       LGPL-2.1+ WITH Linux-syscall-note                      15
       GPL-1.0+ WITH Linux-syscall-note                       14
       ((GPL-2.0+ WITH Linux-syscall-note) OR BSD-3-Clause)    5
       LGPL-2.0+ WITH Linux-syscall-note                       4
       LGPL-2.1 WITH Linux-syscall-note                        3
       ((GPL-2.0 WITH Linux-syscall-note) OR MIT)              3
       ((GPL-2.0 WITH Linux-syscall-note) AND MIT)             1
    
       and that resulted in the third patch in this series.
    
     - when the two scanners agreed on the detected license(s), that became
       the concluded license(s).
    
     - when there was disagreement between the two scanners (one detected a
       license but the other didn't, or they both detected different
       licenses) a manual inspection of the file occurred.
    
     - In most cases a manual inspection of the information in the file
       resulted in a clear resolution of the license that should apply (and
       which scanner probably needed to revisit its heuristics).
    
     - When it was not immediately clear, the license identifier was
       confirmed with lawyers working with the Linux Foundation.
    
     - If there was any question as to the appropriate license identifier,
       the file was flagged for further research and to be revisited later
       in time.
    
    In total, over 70 hours of logged manual review was done on the
    spreadsheet to determine the SPDX license identifiers to apply to the
    source files by Kate, Philippe, Thomas and, in some cases, confirmation
    by lawyers working with the Linux Foundation.
    
    Kate also obtained a third independent scan of the 4.13 code base from
    FOSSology, and compared selected files where the other two scanners
    disagreed against that SPDX file, to see if there was new insights.  The
    Windriver scanner is based on an older version of FOSSology in part, so
    they are related.
    
    Thomas did random spot checks in about 500 files from the spreadsheets
    for the uapi headers and agreed with SPDX license identifier in the
    files he inspected. For the non-uapi files Thomas did random spot checks
    in about 15000 files.
    
    In initial set of patches against 4.14-rc6, 3 files were found to have
    copy/paste license identifier errors, and have been fixed to reflect the
    correct identifier.
    
    Additionally Philippe spent 10 hours this week doing a detailed manual
    inspection and review of the 12,461 patched files from the initial patch
    version early this week with:
     - a full scancode scan run, collecting the matched texts, detected
       license ids and scores
     - reviewing anything where there was a license detected (about 500+
       files) to ensure that the applied SPDX license was correct
     - reviewing anything where there was no detection but the patch license
       was not GPL-2.0 WITH Linux-syscall-note to ensure that the applied
       SPDX license was correct
    
    This produced a worksheet with 20 files needing minor correction.  This
    worksheet was then exported into 3 different .csv files for the
    different types of files to be modified.
    
    These .csv files were then reviewed by Greg.  Thomas wrote a script to
    parse the csv files and add the proper SPDX tag to the file, in the
    format that the file expected.  This script was further refined by Greg
    based on the output to detect more types of files automatically and to
    distinguish between header and source .c files (which need different
    comment types.)  Finally Greg ran the script using the .csv files to
    generate the patches.
    
    Reviewed-by: Kate Stewart <kstewart@linuxfoundation.org>
    Reviewed-by: Philippe Ombredanne <pombredanne@nexb.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 15646740e2a8..e1cfe9194129 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -1,3 +1,4 @@
+/* SPDX-License-Identifier: GPL-2.0 */
 #ifndef MFD_TMIO_H
 #define MFD_TMIO_H
 

commit a59e57da49f7c3f3de8cf4b7568a0c6c82f5b242
Merge: 0ce5c79f384b d1f936d73683
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Sep 9 14:48:21 2017 -0700

    Merge tag 'for-linus-20170904' of git://git.infradead.org/linux-mtd
    
    Pull MTD updates from Boris Brezillon:
     "General updates:
       - Constify pci_device_id in various drivers
       - Constify device_type
       - Remove pad control code from the Gemini driver
       - Use %pOF to print OF node full_name
       - Various fixes in the physmap_of driver
       - Remove unused vars in mtdswap
       - Check devm_kzalloc() return value in the spear_smi driver
       - Check clk_prepare_enable() return code in the st_spi_fsm driver
       - Create per MTD device debugfs enties
    
      NAND updates, from Boris Brezillon:
       - Fix memory leaks in the core
       - Remove unused NAND locking support
       - Rename nand.h into rawnand.h (preparing support for spi NANDs)
       - Use NAND_MAX_ID_LEN where appropriate
       - Fix support for 20nm Hynix chips
       - Fix support for Samsung and Hynix SLC NANDs
       - Various cleanup, improvements and fixes in the qcom driver
       - Fixes for bugs detected by various static code analysis tools
       - Fix mxc ooblayout definition
       - Add a new part_parsers to tmio and sharpsl platform data in order
         to define a custom list of partition parsers
       - Request the reset line in exclusive mode in the sunxi driver
       - Fix a build error in the orion-nand driver when compiled for ARMv4
       - Allow 64-bit mvebu platforms to select the PXA3XX driver
    
      SPI NOR updates, from Cyrille Pitchen and Marek Vasut:
       - add support to the JEDEC JESD216B specification (SFDP tables).
       - add support to the Intel Denverton SPI flash controller.
       - fix error recovery for Spansion/Cypress SPI NOR memories.
       - fix 4-byte address management for the Aspeed SPI controller.
       - add support to some Microchip SST26 memory parts
       - remove unneeded pinctrl header Write a message for tag:"
    
    * tag 'for-linus-20170904' of git://git.infradead.org/linux-mtd: (74 commits)
      mtd: nand: complain loudly when chip->bits_per_cell is not correctly initialized
      mtd: nand: make Samsung SLC NAND usable again
      mtd: nand: tmio: Register partitions using the parsers
      mfd: tmio: Add partition parsers platform data
      mtd: nand: sharpsl: Register partitions using the parsers
      mtd: nand: sharpsl: Add partition parsers platform data
      mtd: nand: qcom: Support for IPQ8074 QPIC NAND controller
      mtd: nand: qcom: support for IPQ4019 QPIC NAND controller
      dt-bindings: qcom_nandc: IPQ8074 QPIC NAND documentation
      dt-bindings: qcom_nandc: IPQ4019 QPIC NAND documentation
      dt-bindings: qcom_nandc: fix the ipq806x device tree example
      mtd: nand: qcom: support for different DEV_CMD register offsets
      mtd: nand: qcom: QPIC data descriptors handling
      mtd: nand: qcom: enable BAM or ADM mode
      mtd: nand: qcom: erased codeword detection configuration
      mtd: nand: qcom: support for read location registers
      mtd: nand: qcom: support for passing flags in DMA helper functions
      mtd: nand: qcom: add BAM DMA descriptor handling
      mtd: nand: qcom: allocate BAM transaction
      mtd: nand: qcom: DMA mapping support for register read buffer
      ...

commit 5124b59202eb3118eba5ac2222dc00f3390549a8
Author: Wolfram Sang <wsa+renesas@sang-engineering.com>
Date:   Wed Aug 9 21:00:41 2017 +0200

    mmc: renesas_sdhi: use extra flag for CBSY usage
    
    There is one SDHI instance on Gen2 which does not have the CBSY bit.
    So, turn CBSY usage into an extra flag and set it accordingly. This has
    the additional advantage that we can also set it for other incarnations
    later.
    
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Tested-by: Chris Brandt <Chris.Brandt@renesas.com>
    Reviewed-by: Simon Horman <horms+renesas@verge.net.au>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 18b17a39d465..b572955e6de6 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -107,6 +107,9 @@
  */
 #define TMIO_MMC_CLK_ACTUAL		BIT(10)
 
+/* Some controllers have a CBSY bit */
+#define TMIO_MMC_HAVE_CBSY		BIT(11)
+
 int tmio_core_mmc_enable(void __iomem *cnf, int shift, unsigned long base);
 int tmio_core_mmc_resume(void __iomem *cnf, int shift, unsigned long base);
 void tmio_core_mmc_pwr(void __iomem *cnf, int shift, int state);

commit 603aa14d3daaa7073bab4c472025c4963030e0cc
Author: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
Date:   Wed Jun 21 16:00:27 2017 +0200

    mmc: tmio, renesas-sdhi: add max_{segs, blk_count} to tmio_mmc_data
    
    Allow TMIO and SDHI driver implementations to provide values for
    max_segs and max_blk_count.
    
    A follow-up patch will set these values for Renesas Gen3 SoCs
    the using an SDHI driver.
    
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Signed-off-by: Ai Kyuse <ai.kyuse.uw@renesas.com>
    Signed-off-by: Simon Horman <horms+renesas@verge.net.au>
    Reviewed-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 26e8f8c0a6db..18b17a39d465 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -128,6 +128,8 @@ struct tmio_mmc_data {
 	unsigned int			cd_gpio;
 	int				alignment_shift;
 	dma_addr_t			dma_rx_offset;
+	unsigned int			max_blk_count;
+	unsigned short			max_segs;
 	void (*set_pwr)(struct platform_device *host, int state);
 	void (*set_clk_div)(struct platform_device *host, int state);
 };

commit 827dba9d626325a65727c4074913b2d3c7e7ea4d
Author: Andrea Adami <andrea.adami@gmail.com>
Date:   Mon Aug 14 22:48:34 2017 +0200

    mfd: tmio: Add partition parsers platform data
    
    With the introduction of sharpslpart partition parser we can now read the
    offsets from NAND: we specify the list of the parsers as platform data, with
    cmdlinepart and ofpart parsers first allowing to override the part. table
    written in NAND. This is done in the board files using this driver.
    
    Thus, we need to extend tmio_nand_data to consider the partition parsers.
    
    Signed-off-by: Andrea Adami <andrea.adami@gmail.com>
    Acked-by: Lee Jones <lee.jones@linaro.org>
    Acked-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 26e8f8c0a6db..357b6cfdf34a 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -139,6 +139,7 @@ struct tmio_nand_data {
 	struct nand_bbt_descr	*badblock_pattern;
 	struct mtd_partition	*partition;
 	unsigned int		num_partitions;
+	const char *const	*part_parsers;
 };
 
 #define FBIO_TMIO_ACC_WRITE	0x7C639300

commit f2218db81548544bf7349911546a94bfaabbd697
Author: Simon Horman <horms+renesas@verge.net.au>
Date:   Fri Jun 16 18:11:03 2017 +0200

    mmc: tmio: improve checkpatch cleanness
    
    Trivial updates to improve checkpatch cleanness.
    
    Signed-off-by: Simon Horman <horms+renesas@verge.net.au>
    Reviewed-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Tested-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index c83c16b931a8..26e8f8c0a6db 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -13,15 +13,15 @@
 #define tmio_ioread16(addr) readw(addr)
 #define tmio_ioread16_rep(r, b, l) readsw(r, b, l)
 #define tmio_ioread32(addr) \
-	(((u32) readw((addr))) | (((u32) readw((addr) + 2)) << 16))
+	(((u32)readw((addr))) | (((u32)readw((addr) + 2)) << 16))
 
 #define tmio_iowrite8(val, addr) writeb((val), (addr))
 #define tmio_iowrite16(val, addr) writew((val), (addr))
 #define tmio_iowrite16_rep(r, b, l) writesw(r, b, l)
 #define tmio_iowrite32(val, addr) \
 	do { \
-	writew((val),       (addr)); \
-	writew((val) >> 16, (addr) + 2); \
+		writew((val),       (addr)); \
+		writew((val) >> 16, (addr) + 2); \
 	} while (0)
 
 #define CNF_CMD     0x04
@@ -55,57 +55,57 @@
 	} while (0)
 
 /* tmio MMC platform flags */
-#define TMIO_MMC_WRPROTECT_DISABLE	(1 << 0)
+#define TMIO_MMC_WRPROTECT_DISABLE	BIT(0)
 /*
  * Some controllers can support a 2-byte block size when the bus width
  * is configured in 4-bit mode.
  */
-#define TMIO_MMC_BLKSZ_2BYTES		(1 << 1)
+#define TMIO_MMC_BLKSZ_2BYTES		BIT(1)
 /*
  * Some controllers can support SDIO IRQ signalling.
  */
-#define TMIO_MMC_SDIO_IRQ		(1 << 2)
+#define TMIO_MMC_SDIO_IRQ		BIT(2)
 
 /* Some features are only available or tested on R-Car Gen2 or later */
-#define TMIO_MMC_MIN_RCAR2		(1 << 3)
+#define TMIO_MMC_MIN_RCAR2		BIT(3)
 
 /*
  * Some controllers require waiting for the SD bus to become
  * idle before writing to some registers.
  */
-#define TMIO_MMC_HAS_IDLE_WAIT		(1 << 4)
+#define TMIO_MMC_HAS_IDLE_WAIT		BIT(4)
 /*
  * A GPIO is used for card hotplug detection. We need an extra flag for this,
  * because 0 is a valid GPIO number too, and requiring users to specify
  * cd_gpio < 0 to disable GPIO hotplug would break backwards compatibility.
  */
-#define TMIO_MMC_USE_GPIO_CD		(1 << 5)
+#define TMIO_MMC_USE_GPIO_CD		BIT(5)
 
 /*
  * Some controllers doesn't have over 0x100 register.
  * it is used to checking accessibility of
  * CTL_SD_CARD_CLK_CTL / CTL_CLK_AND_WAIT_CTL
  */
-#define TMIO_MMC_HAVE_HIGH_REG		(1 << 6)
+#define TMIO_MMC_HAVE_HIGH_REG		BIT(6)
 
 /*
  * Some controllers have CMD12 automatically
  * issue/non-issue register
  */
-#define TMIO_MMC_HAVE_CMD12_CTRL	(1 << 7)
+#define TMIO_MMC_HAVE_CMD12_CTRL	BIT(7)
 
 /* Controller has some SDIO status bits which must be 1 */
-#define TMIO_MMC_SDIO_STATUS_SETBITS	(1 << 8)
+#define TMIO_MMC_SDIO_STATUS_SETBITS	BIT(8)
 
 /*
  * Some controllers have a 32-bit wide data port register
  */
-#define TMIO_MMC_32BIT_DATA_PORT	(1 << 9)
+#define TMIO_MMC_32BIT_DATA_PORT	BIT(9)
 
 /*
  * Some controllers allows to set SDx actual clock
  */
-#define TMIO_MMC_CLK_ACTUAL		(1 << 10)
+#define TMIO_MMC_CLK_ACTUAL		BIT(10)
 
 int tmio_core_mmc_enable(void __iomem *cnf, int shift, unsigned long base);
 int tmio_core_mmc_resume(void __iomem *cnf, int shift, unsigned long base);
@@ -146,9 +146,9 @@ struct tmio_nand_data {
 
 struct tmio_fb_data {
 	int			(*lcd_set_power)(struct platform_device *fb_dev,
-								bool on);
+						 bool on);
 	int			(*lcd_mode)(struct platform_device *fb_dev,
-					const struct fb_videomode *mode);
+					    const struct fb_videomode *mode);
 	int			num_modes;
 	struct fb_videomode	*modes;
 
@@ -157,5 +157,4 @@ struct tmio_fb_data {
 	int			width;
 };
 
-
 #endif

commit d63c2bf49c0de83e88153da3af9970f68c633257
Author: Wolfram Sang <wsa+renesas@sang-engineering.com>
Date:   Sun May 28 11:30:47 2017 +0200

    mmc: use proper name for the R-Car SoC
    
    It is 'R-Car', not 'RCar'. No code or binding changes, only descriptive text.
    
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Acked-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index a1520d88ebf3..c83c16b931a8 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -66,7 +66,7 @@
  */
 #define TMIO_MMC_SDIO_IRQ		(1 << 2)
 
-/* Some features are only available or tested on RCar Gen2 or later */
+/* Some features are only available or tested on R-Car Gen2 or later */
 #define TMIO_MMC_MIN_RCAR2		(1 << 3)
 
 /*

commit 20dd03734cac41a0545dd24f5e81d8ff0c80874b
Author: Wolfram Sang <wsa+renesas@sang-engineering.com>
Date:   Thu Jan 19 21:07:17 2017 +0100

    mmc: host: tmio: SDIO_STATUS_QUIRK is rather SDIO_STATUS_SETBITS
    
    QUIRK sounds like there is something wrong, but actually there are just
    some bits which need to be 1. Rename it to be more clear.
    
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index fba44abd05ba..a1520d88ebf3 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -94,10 +94,8 @@
  */
 #define TMIO_MMC_HAVE_CMD12_CTRL	(1 << 7)
 
-/*
- * Some controllers needs to set 1 on SDIO status reserved bits
- */
-#define TMIO_MMC_SDIO_STATUS_QUIRK	(1 << 8)
+/* Controller has some SDIO status bits which must be 1 */
+#define TMIO_MMC_SDIO_STATUS_SETBITS	(1 << 8)
 
 /*
  * Some controllers have a 32-bit wide data port register

commit 8185e51f358a8dd4801b67e8c66f03eb9eeaba75
Author: Chris Brandt <chris.brandt@renesas.com>
Date:   Mon Sep 12 10:15:06 2016 -0400

    mmc: tmio-mmc: add support for 32bit data port
    
    For the r7s72100 SOC, the DATA_PORT register was changed to 32-bits wide.
    Therefore a new flag has been created that will allow 32-bit reads/writes
    to the DATA_PORT register instead of 16-bit (because 16-bits accesses are
    not supported).
    
    Signed-off-by: Chris Brandt <chris.brandt@renesas.com>
    Reviewed-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 7a26286db895..fba44abd05ba 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -99,6 +99,11 @@
  */
 #define TMIO_MMC_SDIO_STATUS_QUIRK	(1 << 8)
 
+/*
+ * Some controllers have a 32-bit wide data port register
+ */
+#define TMIO_MMC_32BIT_DATA_PORT	(1 << 9)
+
 /*
  * Some controllers allows to set SDx actual clock
  */

commit 3d376fb2ea907f0c1bbccf87125456439feb4ed4
Author: Wolfram Sang <wsa+renesas@sang-engineering.com>
Date:   Mon May 2 22:25:40 2016 +0200

    mmc: tmio/sdhi: introduce flag for RCar 2+ specific features
    
    RCar Gen2 and later implementations of TMIO/SDHI have their own set of
    features and additions. FAST_CLK_CHG is just one of them and I see a few
    others being added soon. Some may work on older chipsets but this needs
    to be tested case by case. Instead of adding a bunch of flags for each
    feature, add a global RCar2+ one for now. We can still break out
    features if the need arises.
    
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Tested-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 05d58ee5e6a7..7a26286db895 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -66,8 +66,8 @@
  */
 #define TMIO_MMC_SDIO_IRQ		(1 << 2)
 
-/* Some controllers don't need to wait 10ms for clock changes */
-#define TMIO_MMC_FAST_CLK_CHG		(1 << 3)
+/* Some features are only available or tested on RCar Gen2 or later */
+#define TMIO_MMC_MIN_RCAR2		(1 << 3)
 
 /*
  * Some controllers require waiting for the SD bus to become

commit 04e24b80a3ddf4cdf85e49a99d33aec27c9432ad
Author: Wolfram Sang <wsa+renesas@sang-engineering.com>
Date:   Tue Jan 19 12:28:31 2016 +0100

    mmc: tmio: add flag to reduce delay after changing clock status
    
    The docs for RCar Gen2 & 3 I have access to, mention delays of 5ms after
    stop and 1ms after start. Make it possible to apply these values.
    
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 24b86d538e88..05d58ee5e6a7 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -65,6 +65,10 @@
  * Some controllers can support SDIO IRQ signalling.
  */
 #define TMIO_MMC_SDIO_IRQ		(1 << 2)
+
+/* Some controllers don't need to wait 10ms for clock changes */
+#define TMIO_MMC_FAST_CLK_CHG		(1 << 3)
+
 /*
  * Some controllers require waiting for the SD bus to become
  * idle before writing to some registers.

commit f33c9d655893d8632460696bbbdee737cb315711
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Feb 24 02:06:43 2015 +0000

    mmc: tmio: mmc: tmio: tmio_mmc_data has .chan_priv_?x
    
    dma_request_slave_channel_compat() in tmio_mmc_dma
    needs .chan_priv_tx/.chan_priv_rx. But these are copied from
    sh_mobile_sdhi only, and sh_mobile_sdhi_info is now almost
    same as tmio_mmc_data except .chan_priv_?x.
    sh_mobile_sdhi_info can be replaced to tmio_mmc_data, but it is
    used from ${LINUX}/arch/arm/mach-shmobile, ${LINUX}/arch/sh.
    So, this patch adds .chan_priv_?x into tmio_mmc_data as 1st step,
    and sh_mobile_sdhi driver has dummy operation for now.
    It will be replaced/removed together with platform data replace.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Ulf Hansson <ulf.hansson@linaro.org>
    Acked-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 605812820e48..24b86d538e88 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -111,6 +111,8 @@ struct dma_chan;
  * data for the MMC controller
  */
 struct tmio_mmc_data {
+	void				*chan_priv_tx;
+	void				*chan_priv_rx;
 	unsigned int			hclk;
 	unsigned long			capabilities;
 	unsigned long			capabilities2;

commit de122cb1745313f331dc7c7923b484343d455e64
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Jan 13 05:00:39 2015 +0000

    mmc: tmio: remove TMIO_MMC_HAVE_CTL_DMA_REG flag
    
    tmio_mmc_host has .enable_dma callback now.
    We don't need TMIO_MMC_HAVE_CTL_DMA_REG anymore.
    Let's remove it
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Acked-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 807ecfb162d7..605812820e48 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -95,11 +95,6 @@
  */
 #define TMIO_MMC_SDIO_STATUS_QUIRK	(1 << 8)
 
-/*
- * Some controllers have DMA enable/disable register
- */
-#define TMIO_MMC_HAVE_CTL_DMA_REG	(1 << 9)
-
 /*
  * Some controllers allows to set SDx actual clock
  */

commit 8b4c8f32da91681c0dcd321c9e3cd14f866c5517
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Jan 13 04:58:56 2015 +0000

    mmc: tmio: tmio_mmc_data has .dma_rx_offset
    
    Current .dma_rx_offset is implemented under tmio_mmc_dma.
    It goes to tmio_mmc_data by this patch.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Acked-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 28a12d10e509..807ecfb162d7 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -123,6 +123,7 @@ struct tmio_mmc_data {
 	u32				ocr_mask;	/* available voltages */
 	unsigned int			cd_gpio;
 	int				alignment_shift;
+	dma_addr_t			dma_rx_offset;
 	void (*set_pwr)(struct platform_device *host, int state);
 	void (*set_clk_div)(struct platform_device *host, int state);
 };

commit e471df0bcaa137f1bbe7c5f75db6ce7566caa292
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Jan 13 04:58:46 2015 +0000

    mmc: tmio: tmio_mmc_data has .alignment_shift
    
    Current .alignment_shift is implemented under tmio_mmc_dma.
    It goes to tmio_mmc_data by this patch.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Acked-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 7a5c27948315..28a12d10e509 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -122,6 +122,7 @@ struct tmio_mmc_data {
 	unsigned long			flags;
 	u32				ocr_mask;	/* available voltages */
 	unsigned int			cd_gpio;
+	int				alignment_shift;
 	void (*set_pwr)(struct platform_device *host, int state);
 	void (*set_clk_div)(struct platform_device *host, int state);
 };

commit 7445bf9e6f4e5d7755e22c7c9b06f4ae0d6160c6
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Jan 13 04:58:20 2015 +0000

    mmc: tmio: tmio_mmc_host has .bus_shift
    
    Current .bus_shift is implemented under tmio_mmc_data.
    It goes to tmio_mmc_host by this patch.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Acked-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 3edaa17d1ccd..7a5c27948315 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -120,7 +120,6 @@ struct tmio_mmc_data {
 	unsigned long			capabilities;
 	unsigned long			capabilities2;
 	unsigned long			flags;
-	unsigned long			bus_shift;
 	u32				ocr_mask;	/* available voltages */
 	unsigned int			cd_gpio;
 	void (*set_pwr)(struct platform_device *host, int state);

commit 85c02ddd591e5252eb1cbe8743a839638d7415fd
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Jan 13 04:58:10 2015 +0000

    mmc: tmio: tmio_mmc_host has .multi_io_quirk
    
    Current .multi_io_quirk is implemented under tmio_mmc_data.
    It goes to tmio_mmc_host by this patch.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Acked-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index a3f78da70af7..3edaa17d1ccd 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -125,9 +125,6 @@ struct tmio_mmc_data {
 	unsigned int			cd_gpio;
 	void (*set_pwr)(struct platform_device *host, int state);
 	void (*set_clk_div)(struct platform_device *host, int state);
-
-	int (*multi_io_quirk)(struct mmc_card *card,
-			      unsigned int direction, int blk_size);
 };
 
 /*

commit 00452c11ea0e4e5822edf0ac46853933860d0f53
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Jan 13 04:58:01 2015 +0000

    mmc: tmio: tmio_mmc_host has .clk_disable
    
    Current .clk_disable is implemented under tmio_mmc_data.
    It goes to tmio_mmc_host by this patch.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Acked-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 472587a02a42..a3f78da70af7 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -125,8 +125,7 @@ struct tmio_mmc_data {
 	unsigned int			cd_gpio;
 	void (*set_pwr)(struct platform_device *host, int state);
 	void (*set_clk_div)(struct platform_device *host, int state);
-	/* clock management callbacks */
-	void (*clk_disable)(struct platform_device *pdev);
+
 	int (*multi_io_quirk)(struct mmc_card *card,
 			      unsigned int direction, int blk_size);
 };

commit 4fe2ec57a15f98c232536cf04e7c139d830955d4
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Jan 13 04:57:52 2015 +0000

    mmc: tmio: tmio_mmc_host has .clk_enable
    
    Current .clk_enable is implemented under tmio_mmc_data.
    It goes to tmio_mmc_host by this patch.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Acked-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 0872ca1e5dc2..472587a02a42 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -126,7 +126,6 @@ struct tmio_mmc_data {
 	void (*set_pwr)(struct platform_device *host, int state);
 	void (*set_clk_div)(struct platform_device *host, int state);
 	/* clock management callbacks */
-	int (*clk_enable)(struct platform_device *pdev, unsigned int *f);
 	void (*clk_disable)(struct platform_device *pdev);
 	int (*multi_io_quirk)(struct mmc_card *card,
 			      unsigned int direction, int blk_size);

commit dfe9a229e0a66b6a00439cea2885ad3b5d3e0840
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Jan 13 04:57:42 2015 +0000

    mmc: tmio: tmio_mmc_host has .write16_hook
    
    Current .write16_hook is implemented under tmio_mmc_data.
    It goes to tmio_mmc_host by this patch.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Acked-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 8d708c7cf681..0872ca1e5dc2 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -112,8 +112,6 @@ void tmio_core_mmc_clk_div(void __iomem *cnf, int shift, int state);
 
 struct dma_chan;
 
-struct tmio_mmc_host;
-
 /*
  * data for the MMC controller
  */
@@ -127,7 +125,6 @@ struct tmio_mmc_data {
 	unsigned int			cd_gpio;
 	void (*set_pwr)(struct platform_device *host, int state);
 	void (*set_clk_div)(struct platform_device *host, int state);
-	int (*write16_hook)(struct tmio_mmc_host *host, int addr);
 	/* clock management callbacks */
 	int (*clk_enable)(struct platform_device *pdev, unsigned int *f);
 	void (*clk_disable)(struct platform_device *pdev);

commit 7ecc09bab1e856e6730a4dd8a3bc1c28bb6ab3be
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Jan 13 04:57:33 2015 +0000

    mmc: tmio: tmio_mmc_host has .dma
    
    Current .dma is implemented under tmio_mmc_data.
    It goes to tmio_mmc_host by this patch.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Acked-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index c7d9af042d09..8d708c7cf681 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -112,16 +112,6 @@ void tmio_core_mmc_clk_div(void __iomem *cnf, int shift, int state);
 
 struct dma_chan;
 
-struct tmio_mmc_dma {
-	void *chan_priv_tx;
-	void *chan_priv_rx;
-	int slave_id_tx;
-	int slave_id_rx;
-	int alignment_shift;
-	dma_addr_t dma_rx_offset;
-	bool (*filter)(struct dma_chan *chan, void *arg);
-};
-
 struct tmio_mmc_host;
 
 /*
@@ -134,7 +124,6 @@ struct tmio_mmc_data {
 	unsigned long			flags;
 	unsigned long			bus_shift;
 	u32				ocr_mask;	/* available voltages */
-	struct tmio_mmc_dma		*dma;
 	unsigned int			cd_gpio;
 	void (*set_pwr)(struct platform_device *host, int state);
 	void (*set_clk_div)(struct platform_device *host, int state);

commit 94b110aff8679b14f46fd6653ea87b42fe1555be
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Jan 13 04:57:22 2015 +0000

    mmc: tmio: add tmio_mmc_host_alloc/free()
    
    Current tmio_mmc driver is using tmio_mmc_data for driver/platform
    specific data/callback, and it is needed for tmio_mmc_host_probe()
    function. Because of this style, include/linux/mfd/tmio.h header has
    tmio driver/framework specific data which is not needed from platform.
    
    This patch adds new tmio_mmc_host_alloc/free() as cleanup preparation.
    tmio driver specific data/callback will be implemented in tmio_mmc_host,
    and platform specific data/callback will be implemented in tmio_mmc_data
    in this cleanup.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Acked-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 57388171610d..c7d9af042d09 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -135,7 +135,6 @@ struct tmio_mmc_data {
 	unsigned long			bus_shift;
 	u32				ocr_mask;	/* available voltages */
 	struct tmio_mmc_dma		*dma;
-	struct device			*dev;
 	unsigned int			cd_gpio;
 	void (*set_pwr)(struct platform_device *host, int state);
 	void (*set_clk_div)(struct platform_device *host, int state);

commit bbf0208d39121bd8873b032459cb2b5f35e14593
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Sep 8 23:45:25 2014 -0700

    mmc: use .multi_io_quirk on tmio_mmc
    
    Now, tmio_mmc can use .multi_io_quirk callback
    instead of MMC_CAP2_NO_MULTI_READ flags.
    let's use it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Acked-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 90436d523e5e..57388171610d 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -5,6 +5,7 @@
 #include <linux/fb.h>
 #include <linux/io.h>
 #include <linux/jiffies.h>
+#include <linux/mmc/card.h>
 #include <linux/platform_device.h>
 #include <linux/pm_runtime.h>
 
@@ -142,6 +143,8 @@ struct tmio_mmc_data {
 	/* clock management callbacks */
 	int (*clk_enable)(struct platform_device *pdev, unsigned int *f);
 	void (*clk_disable)(struct platform_device *pdev);
+	int (*multi_io_quirk)(struct mmc_card *card,
+			      unsigned int direction, int blk_size);
 };
 
 /*

commit da29fe2bf573f0ae56fdc2e790387cb73fc8c6f8
Author: Shinobu Uehara <shinobu.uehara.xc@renesas.com>
Date:   Sun Aug 24 20:03:00 2014 -0700

    mmc: tmio: add actual clock support as option
    
    Some controller is supporting actual clock on SD_CLK_CTRL :: DIV[7:0].
    Renesas SH-Mobile SDHI doesn't support,
    but, Renesas R-Car SDHI supports it.
    This patch adds new TMIO_MMC_CLK_ACTUAL flag for it.
    
    [Kuninori Morimoto: tidyuped for upstreaming]
    
    Tested-by: Nguyen Xuan Nui <nx-nui@jinso.co.jp>
    Tested-by: Hiep Cao Minh <cm-hiep@jinso.co.jp>
    Signed-off-by: Shinobu Uehara <shinobu.uehara.xc@renesas.com>
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index adcb0cdb2fdb..90436d523e5e 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -99,6 +99,11 @@
  */
 #define TMIO_MMC_HAVE_CTL_DMA_REG	(1 << 9)
 
+/*
+ * Some controllers allows to set SDx actual clock
+ */
+#define TMIO_MMC_CLK_ACTUAL		(1 << 10)
+
 int tmio_core_mmc_enable(void __iomem *cnf, int shift, unsigned long base);
 int tmio_core_mmc_resume(void __iomem *cnf, int shift, unsigned long base);
 void tmio_core_mmc_pwr(void __iomem *cnf, int shift, int state);

commit e85dd04ea8c8d32ba8eae278959d28df34338e9d
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Sun Aug 24 20:01:54 2014 -0700

    mmc: tmio: remove Renesas specific #ifdef
    
    This patch adds new TMIO_MMC_HAVE_CTL_DMA_REG flag,
    and remove Renesas specific #ifdef from tmio driver
    
    Tested-by: Nguyen Xuan Nui <nx-nui@jinso.co.jp>
    Tested-by: Hiep Cao Minh <cm-hiep@jinso.co.jp>
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index a7493ae01b58..adcb0cdb2fdb 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -94,6 +94,11 @@
  */
 #define TMIO_MMC_SDIO_STATUS_QUIRK	(1 << 8)
 
+/*
+ * Some controllers have DMA enable/disable register
+ */
+#define TMIO_MMC_HAVE_CTL_DMA_REG	(1 << 9)
+
 int tmio_core_mmc_enable(void __iomem *cnf, int shift, unsigned long base);
 int tmio_core_mmc_resume(void __iomem *cnf, int shift, unsigned long base);
 void tmio_core_mmc_pwr(void __iomem *cnf, int shift, int state);

commit 6b98757e53cb0e93b02db4067c14afcb32c90615
Author: Shinobu Uehara <shinobu.uehara.xc@renesas.com>
Date:   Sun Aug 24 20:00:52 2014 -0700

    mmc: tmio: add TMIO_MMC_SDIO_STATUS_QUIRK
    
    Renesas R-Car SDHI should set reserved bits
    on CTL_SDIO_STATUS register when writing.
    This patch adds new TMIO_MMC_SDIO_STATUS_QUIRK flags
    for this purpose
    
    [Kuninori Morimoto: tidyuped for upstreaming
                        enabled this flags for all SH-Mobile/R-Car]
    
    Tested-by: Nguyen Xuan Nui <nx-nui@jinso.co.jp>
    Tested-by: Hiep Cao Minh <cm-hiep@jinso.co.jp>
    Signed-off-by: Shinobu Uehara <shinobu.uehara.xc@renesas.com>
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 7432d95b08e2..a7493ae01b58 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -89,6 +89,11 @@
  */
 #define TMIO_MMC_HAVE_CMD12_CTRL	(1 << 7)
 
+/*
+ * Some controllers needs to set 1 on SDIO status reserved bits
+ */
+#define TMIO_MMC_SDIO_STATUS_QUIRK	(1 << 8)
+
 int tmio_core_mmc_enable(void __iomem *cnf, int shift, unsigned long base);
 int tmio_core_mmc_resume(void __iomem *cnf, int shift, unsigned long base);
 void tmio_core_mmc_pwr(void __iomem *cnf, int shift, int state);

commit b8d11962c2d83c984d5afd091e5b725ad2fd5607
Author: Shinobu Uehara <shinobu.uehara.xc@renesas.com>
Date:   Sun Aug 24 20:00:25 2014 -0700

    mmc: tmio: control multiple block transfer mode
    
    Renesas SDHI has "Multiple Block Transfer Mode" settings
    on SD_CMD register which controls CMD12 automatically.
    
    This patch cares it, because
    CMD12 is not needed when CMD53 (= SD_IO_RW_EXTENDED)
    
    [Kuninori Morimoto: tidyuped for upstreaming
                        enabled this flags for all SH-Mobile/R-Car]
    
    Tested-by: Nguyen Xuan Nui <nx-nui@jinso.co.jp>
    Tested-by: Hiep Cao Minh <cm-hiep@jinso.co.jp>
    Signed-off-by: Shinobu Uehara <shinobu.uehara.xc@renesas.com>
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 777e29b1ad0f..7432d95b08e2 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -83,6 +83,12 @@
  */
 #define TMIO_MMC_HAVE_HIGH_REG		(1 << 6)
 
+/*
+ * Some controllers have CMD12 automatically
+ * issue/non-issue register
+ */
+#define TMIO_MMC_HAVE_CMD12_CTRL	(1 << 7)
+
 int tmio_core_mmc_enable(void __iomem *cnf, int shift, unsigned long base);
 int tmio_core_mmc_resume(void __iomem *cnf, int shift, unsigned long base);
 void tmio_core_mmc_pwr(void __iomem *cnf, int shift, int state);

commit 384b2cbd56a02efb16358ed7c0c039e4afca5ed0
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Sun Aug 24 19:58:48 2014 -0700

    mmc: tmio: care about DMA tx/rx addr offset
    
    Basically, SD_BUF0 Tx/Rx addresses are same
    in normal TMIO controller,
    but, it is different on Renesas R-Car SDHI controller
    if it uses DMAC
    (Rx address needs to add 0x2000 to Tx address)
    
    This patch adds new .dma_rx_offset and cares it
    
    Tested-by: Nguyen Xuan Nui <nx-nui@jinso.co.jp>
    Tested-by: Hiep Cao Minh <cm-hiep@jinso.co.jp>
    Acked-by: Laurent Pinchart <laurent.pinchart+renesas@ideasonboard.com>
    Acked-by: Ben Dooks <ben-linux@fluff.org>
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 8f6f2e91e7ae..777e29b1ad0f 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -96,6 +96,7 @@ struct tmio_mmc_dma {
 	int slave_id_tx;
 	int slave_id_rx;
 	int alignment_shift;
+	dma_addr_t dma_rx_offset;
 	bool (*filter)(struct dma_chan *chan, void *arg);
 };
 

commit 5d60e500541ed154112809627f12d86056ac5f09
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Wed Nov 20 00:31:06 2013 -0800

    mmc: tmio: add new TMIO_MMC_HAVE_HIGH_REG flags
    
    The accessibility checking method to the higher register was added by
    69d1fe18e92afb (mmc: tmio: only access registers above 0xff, if available)
    But, it doesn't care 32bit register.  It is impossible to calculate it
    from the resource size, since there is 16/32 bit register IP (e.g. VERSION
    is located on 0xe2 if 16bit register, but it is located on 0x1c4 if 32bit
    register).
    
    This patch adds new TMIO_MMC_HAVE_HIGH_REG flags, tmio_mmc driver has it,
    and sh_mobile_sdhi doesn't have it today.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Chris Ball <cjb@laptop.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 92f72cf5311f..8f6f2e91e7ae 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -76,6 +76,13 @@
  */
 #define TMIO_MMC_USE_GPIO_CD		(1 << 5)
 
+/*
+ * Some controllers doesn't have over 0x100 register.
+ * it is used to checking accessibility of
+ * CTL_SD_CARD_CLK_CTL / CTL_CLK_AND_WAIT_CTL
+ */
+#define TMIO_MMC_HAVE_HIGH_REG		(1 << 6)
+
 int tmio_core_mmc_enable(void __iomem *cnf, int shift, unsigned long base);
 int tmio_core_mmc_resume(void __iomem *cnf, int shift, unsigned long base);
 void tmio_core_mmc_pwr(void __iomem *cnf, int shift, int state);

commit 3b159a6e955c8d468f4ffa212c8b5d68d8323a8d
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Wed Nov 20 00:30:55 2013 -0800

    mmc: tmio: bus_shift become tmio_mmc_data member
    
    .bus_shift is used to 16/32bit register access offset calculation on
    tmio driver.  tmio_mmc_xxx is used from Toshiba/Renesas now, but this
    bus_shift value depends on HW IP.  This patch moves .bus_shift to
    tmio_mmc_data member and sets it on each driver.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Chris Ball <cjb@laptop.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index b22883d60500..92f72cf5311f 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -102,6 +102,7 @@ struct tmio_mmc_data {
 	unsigned long			capabilities;
 	unsigned long			capabilities2;
 	unsigned long			flags;
+	unsigned long			bus_shift;
 	u32				ocr_mask;	/* available voltages */
 	struct tmio_mmc_dma		*dma;
 	struct device			*dev;

commit 9d731e7539713acc0ec7b67a5a91357c455d2334
Author: Chris Ball <cjb@laptop.org>
Date:   Fri Sep 6 07:29:05 2013 -0400

    Revert "mmc: tmio-mmc: Remove .set_pwr() callback from platform data"
    
    This reverts commit 3af9d15c719017feb63fa99f89ac6009a5a3d467, which
    causes a build failure:
    
    drivers/mfd/asic3.c:724:2: error: unknown field 'set_pwr' specified in initializer

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index baa23464a1e6..b22883d60500 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -106,6 +106,7 @@ struct tmio_mmc_data {
 	struct tmio_mmc_dma		*dma;
 	struct device			*dev;
 	unsigned int			cd_gpio;
+	void (*set_pwr)(struct platform_device *host, int state);
 	void (*set_clk_div)(struct platform_device *host, int state);
 	int (*write16_hook)(struct tmio_mmc_host *host, int addr);
 	/* clock management callbacks */

commit 3af9d15c719017feb63fa99f89ac6009a5a3d467
Author: Laurent Pinchart <laurent.pinchart+renesas@ideasonboard.com>
Date:   Thu Aug 8 12:38:44 2013 +0200

    mmc: tmio-mmc: Remove .set_pwr() callback from platform data
    
    The .set_pwr() callback isn't used anymore as all platforms register
    GPIO-controlled regulators. Remove it.
    
    Signed-off-by: Laurent Pinchart <laurent.pinchart+renesas@ideasonboard.com>
    Acked-by: Guennadi Liakhovetski <g.liakhovetski@gmx.de>
    Signed-off-by: Chris Ball <cjb@laptop.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index b22883d60500..baa23464a1e6 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -106,7 +106,6 @@ struct tmio_mmc_data {
 	struct tmio_mmc_dma		*dma;
 	struct device			*dev;
 	unsigned int			cd_gpio;
-	void (*set_pwr)(struct platform_device *host, int state);
 	void (*set_clk_div)(struct platform_device *host, int state);
 	int (*write16_hook)(struct tmio_mmc_host *host, int addr);
 	/* clock management callbacks */

commit 2b63b341d42cd64ff40062447320d46cf3e7f0bb
Author: Laurent Pinchart <laurent.pinchart+renesas@ideasonboard.com>
Date:   Thu Aug 8 12:38:43 2013 +0200

    mmc: tmio-mmc: Remove .get_cd() callback from platform data
    
    All platforms pass the CD GPIO number to the driver in the .cd_gpio
    field. The .get_cd() callback isn't used anymore, remove it
    
    Signed-off-by: Laurent Pinchart <laurent.pinchart+renesas@ideasonboard.com>
    Acked-by: Guennadi Liakhovetski <g.liakhovetski@gmx.de>
    Signed-off-by: Chris Ball <cjb@laptop.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index ce3511326f80..b22883d60500 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -108,7 +108,6 @@ struct tmio_mmc_data {
 	unsigned int			cd_gpio;
 	void (*set_pwr)(struct platform_device *host, int state);
 	void (*set_clk_div)(struct platform_device *host, int state);
-	int (*get_cd)(struct platform_device *host);
 	int (*write16_hook)(struct tmio_mmc_host *host, int addr);
 	/* clock management callbacks */
 	int (*clk_enable)(struct platform_device *pdev, unsigned int *f);

commit eec95ee22611f2207bd991d63a07884de28e6f56
Author: Guennadi Liakhovetski <g.liakhovetski@gmx.de>
Date:   Fri Apr 26 17:47:18 2013 +0200

    mmc: sdhi/tmio: switch to using dmaengine_slave_config()
    
    This removes the deprecated use of the .private member of struct dma_chan
    and switches the sdhi / tmio mmc driver to using the
    dmaengine_slave_config() channel configuration method.
    
    Signed-off-by: Guennadi Liakhovetski <g.liakhovetski+renesas@gmail.com>
    Acked-by: Samuel Ortiz <sameo@linux.intel.com>
    Signed-off-by: Chris Ball <cjb@laptop.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 0990d8a2dbd7..ce3511326f80 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -86,6 +86,8 @@ struct dma_chan;
 struct tmio_mmc_dma {
 	void *chan_priv_tx;
 	void *chan_priv_rx;
+	int slave_id_tx;
+	int slave_id_rx;
 	int alignment_shift;
 	bool (*filter)(struct dma_chan *chan, void *arg);
 };

commit 03a0675b2a112038a8a5078d8815e3f7356c7064
Author: Guennadi Liakhovetski <g.liakhovetski@gmx.de>
Date:   Fri Apr 26 17:47:17 2013 +0200

    mmc: sdhi/tmio: make DMA filter implementation specific
    
    So far only the SDHI implementation uses TMIO MMC with DMA. That way a DMA
    channel filter function, defined in the TMIO driver wasn't a problem.
    However, such a filter function is DMA controller specific. Since the SDHI
    glue is only running on systems with the SHDMA DMA controller, the filter
    function can safely be provided by it. Move it into SDHI.
    
    Signed-off-by: Guennadi Liakhovetski <g.liakhovetski+renesas@gmail.com>
    Acked-by: Samuel Ortiz <sameo@linux.intel.com>
    Signed-off-by: Chris Ball <cjb@laptop.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 99bf3e665997..0990d8a2dbd7 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -81,10 +81,13 @@ int tmio_core_mmc_resume(void __iomem *cnf, int shift, unsigned long base);
 void tmio_core_mmc_pwr(void __iomem *cnf, int shift, int state);
 void tmio_core_mmc_clk_div(void __iomem *cnf, int shift, int state);
 
+struct dma_chan;
+
 struct tmio_mmc_dma {
 	void *chan_priv_tx;
 	void *chan_priv_rx;
 	int alignment_shift;
+	bool (*filter)(struct dma_chan *chan, void *arg);
 };
 
 struct tmio_mmc_host;

commit 27902c14aa2376d53755b6c02e3be671fd890e30
Author: Guennadi Liakhovetski <g.liakhovetski@gmx.de>
Date:   Fri Feb 15 16:13:59 2013 +0100

    mmc: tmio: remove unused and deprecated symbols
    
    The tmio_mmc_cd_wakeup() inline function has been deprecated since 3.4 and
    is unused since 3.4 too. Remove them.
    
    Signed-off-by: Guennadi Liakhovetski <g.liakhovetski@gmx.de>
    Signed-off-by: Chris Ball <cjb@laptop.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index d83af39815ab..99bf3e665997 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -64,12 +64,6 @@
  * Some controllers can support SDIO IRQ signalling.
  */
 #define TMIO_MMC_SDIO_IRQ		(1 << 2)
-/*
- * Some platforms can detect card insertion events with controller powered
- * down, using a GPIO IRQ, in which case they have to fill in cd_irq, cd_gpio,
- * and cd_flags fields of struct tmio_mmc_data.
- */
-#define TMIO_MMC_HAS_COLD_CD		(1 << 3)
 /*
  * Some controllers require waiting for the SD bus to become
  * idle before writing to some registers.
@@ -116,18 +110,6 @@ struct tmio_mmc_data {
 	void (*clk_disable)(struct platform_device *pdev);
 };
 
-/*
- * This function is deprecated and will be removed soon. Please, convert your
- * platform to use drivers/mmc/core/cd-gpio.c
- */
-#include <linux/mmc/host.h>
-static inline void tmio_mmc_cd_wakeup(struct tmio_mmc_data *pdata)
-{
-	if (pdata)
-		mmc_detect_change(dev_get_drvdata(pdata->dev),
-				  msecs_to_jiffies(100));
-}
-
 /*
  * data for the NAND controller
  */

commit 02cb3221d5bb351ad9f7469453dcca7594a0fabf
Author: Guennadi Liakhovetski <g.liakhovetski@gmx.de>
Date:   Wed May 23 10:44:37 2012 +0200

    mmc: tmio: support caps2 flags
    
    Allow tmio mmc glue drivers to pass mmc_host::caps2 flags down to
    the mmc layer.
    
    Signed-off-by: Guennadi Liakhovetski <g.liakhovetski@gmx.de>
    Signed-off-by: Chris Ball <cjb@laptop.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index b332c4c7857b..d83af39815ab 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -101,6 +101,7 @@ struct tmio_mmc_host;
 struct tmio_mmc_data {
 	unsigned int			hclk;
 	unsigned long			capabilities;
+	unsigned long			capabilities2;
 	unsigned long			flags;
 	u32				ocr_mask;	/* available voltages */
 	struct tmio_mmc_dma		*dma;

commit 8c102a964655b1a8df41b1f9e2355657471a45e3
Author: Guennadi Liakhovetski <g.liakhovetski@gmx.de>
Date:   Wed Jun 20 19:10:31 2012 +0200

    mmc: tmio: add callbacks to enable-update and disable the interface clock
    
    Every time the clock is enabled after possibly being disabled, we have
    to re-read its frequency and update our configuration.
    
    Signed-off-by: Guennadi Liakhovetski <g.liakhovetski@gmx.de>
    Signed-off-by: Chris Ball <cjb@laptop.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index f5171dbf8850..b332c4c7857b 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -110,6 +110,9 @@ struct tmio_mmc_data {
 	void (*set_clk_div)(struct platform_device *host, int state);
 	int (*get_cd)(struct platform_device *host);
 	int (*write16_hook)(struct tmio_mmc_host *host, int addr);
+	/* clock management callbacks */
+	int (*clk_enable)(struct platform_device *pdev, unsigned int *f);
+	void (*clk_disable)(struct platform_device *pdev);
 };
 
 /*

commit c391e1b9ebfe31514fa95a0cdd30c2cbc9652c89
Author: Guennadi Liakhovetski <g.liakhovetski@gmx.de>
Date:   Thu Feb 9 22:57:13 2012 +0100

    mmc: tmio_mmc: power status flag doesn't have to be exposed in platform data
    
    The controller power status flag does not have to be accessed from the
    hot-plug detection code any more, it can now be removed from the platform
    data and put in the controller private struct.
    
    Signed-off-by: Guennadi Liakhovetski <g.liakhovetski@gmx.de>
    Signed-off-by: Chris Ball <cjb@laptop.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 5a197de4aac9..f5171dbf8850 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -105,7 +105,6 @@ struct tmio_mmc_data {
 	u32				ocr_mask;	/* available voltages */
 	struct tmio_mmc_dma		*dma;
 	struct device			*dev;
-	bool				power;
 	unsigned int			cd_gpio;
 	void (*set_pwr)(struct platform_device *host, int state);
 	void (*set_clk_div)(struct platform_device *host, int state);

commit c8be24c2afd3ed2445bbf8f542af35a9787fc0e8
Author: Guennadi Liakhovetski <g.liakhovetski@gmx.de>
Date:   Thu Feb 9 22:57:09 2012 +0100

    mmc: tmio_mmc: support the generic MMC GPIO card hotplug helper
    
    If the platform specifies the TMIO_MMC_HAS_COLD_CD flag, use the generic
    MMC GPIO card hotplug helper.
    
    Signed-off-by: Guennadi Liakhovetski <g.liakhovetski@gmx.de>
    Signed-off-by: Chris Ball <cjb@laptop.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 0dc98044d8b7..5a197de4aac9 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -1,8 +1,10 @@
 #ifndef MFD_TMIO_H
 #define MFD_TMIO_H
 
+#include <linux/device.h>
 #include <linux/fb.h>
 #include <linux/io.h>
+#include <linux/jiffies.h>
 #include <linux/platform_device.h>
 #include <linux/pm_runtime.h>
 
@@ -64,8 +66,8 @@
 #define TMIO_MMC_SDIO_IRQ		(1 << 2)
 /*
  * Some platforms can detect card insertion events with controller powered
- * down, in which case they have to call tmio_mmc_cd_wakeup() to power up the
- * controller and report the event to the driver.
+ * down, using a GPIO IRQ, in which case they have to fill in cd_irq, cd_gpio,
+ * and cd_flags fields of struct tmio_mmc_data.
  */
 #define TMIO_MMC_HAS_COLD_CD		(1 << 3)
 /*
@@ -73,6 +75,12 @@
  * idle before writing to some registers.
  */
 #define TMIO_MMC_HAS_IDLE_WAIT		(1 << 4)
+/*
+ * A GPIO is used for card hotplug detection. We need an extra flag for this,
+ * because 0 is a valid GPIO number too, and requiring users to specify
+ * cd_gpio < 0 to disable GPIO hotplug would break backwards compatibility.
+ */
+#define TMIO_MMC_USE_GPIO_CD		(1 << 5)
 
 int tmio_core_mmc_enable(void __iomem *cnf, int shift, unsigned long base);
 int tmio_core_mmc_resume(void __iomem *cnf, int shift, unsigned long base);
@@ -98,18 +106,23 @@ struct tmio_mmc_data {
 	struct tmio_mmc_dma		*dma;
 	struct device			*dev;
 	bool				power;
+	unsigned int			cd_gpio;
 	void (*set_pwr)(struct platform_device *host, int state);
 	void (*set_clk_div)(struct platform_device *host, int state);
 	int (*get_cd)(struct platform_device *host);
 	int (*write16_hook)(struct tmio_mmc_host *host, int addr);
 };
 
+/*
+ * This function is deprecated and will be removed soon. Please, convert your
+ * platform to use drivers/mmc/core/cd-gpio.c
+ */
+#include <linux/mmc/host.h>
 static inline void tmio_mmc_cd_wakeup(struct tmio_mmc_data *pdata)
 {
-	if (pdata && !pdata->power) {
-		pdata->power = true;
-		pm_runtime_get(pdata->dev);
-	}
+	if (pdata)
+		mmc_detect_change(dev_get_drvdata(pdata->dev),
+				  msecs_to_jiffies(100));
 }
 
 /*

commit 973ed3af1a570612771ed10dec6506c757767668
Author: Simon Horman <horms@verge.net.au>
Date:   Tue Jun 21 08:00:10 2011 +0900

    mmc: sdhi: Add write16_hook
    
    Some controllers require waiting for the bus to become idle
    before writing to some registers. I have implemented this
    by adding a hook to sd_ctrl_write16() and implementing
    a hook for SDHI which waits for the bus to become idle.
    
    Cc: Guennadi Liakhovetski <g.liakhovetski@gmx.de>
    Cc: Magnus Damm <magnus.damm@gmail.com>
    Signed-off-by: Simon Horman <horms@verge.net.au>
    Signed-off-by: Chris Ball <cjb@laptop.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 5a90266c3a5a..0dc98044d8b7 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -68,6 +68,11 @@
  * controller and report the event to the driver.
  */
 #define TMIO_MMC_HAS_COLD_CD		(1 << 3)
+/*
+ * Some controllers require waiting for the SD bus to become
+ * idle before writing to some registers.
+ */
+#define TMIO_MMC_HAS_IDLE_WAIT		(1 << 4)
 
 int tmio_core_mmc_enable(void __iomem *cnf, int shift, unsigned long base);
 int tmio_core_mmc_resume(void __iomem *cnf, int shift, unsigned long base);
@@ -80,6 +85,8 @@ struct tmio_mmc_dma {
 	int alignment_shift;
 };
 
+struct tmio_mmc_host;
+
 /*
  * data for the MMC controller
  */
@@ -94,6 +101,7 @@ struct tmio_mmc_data {
 	void (*set_pwr)(struct platform_device *host, int state);
 	void (*set_clk_div)(struct platform_device *host, int state);
 	int (*get_cd)(struct platform_device *host);
+	int (*write16_hook)(struct tmio_mmc_host *host, int addr);
 };
 
 static inline void tmio_mmc_cd_wakeup(struct tmio_mmc_data *pdata)

commit 7311bef0697bcfbbcb898c3c22e61e23f203ae9d
Author: Guennadi Liakhovetski <g.liakhovetski@gmx.de>
Date:   Wed May 11 16:51:11 2011 +0000

    mmc: tmio: runtime suspend the controller, where possible
    
    The TMIO MMC controller cannot be powered off to save power, when no
    card is plugged in, because then it will not be able to detect a new
    card-insertion event. On some implementations, however, it is
    possible to switch to using another source to detect card insertion.
    This patch adds support for such implementations.
    
    Signed-off-by: Guennadi Liakhovetski <g.liakhovetski@gmx.de>
    Signed-off-by: Chris Ball <cjb@laptop.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 8e70310ee945..5a90266c3a5a 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -4,6 +4,7 @@
 #include <linux/fb.h>
 #include <linux/io.h>
 #include <linux/platform_device.h>
+#include <linux/pm_runtime.h>
 
 #define tmio_ioread8(addr) readb(addr)
 #define tmio_ioread16(addr) readw(addr)
@@ -61,6 +62,12 @@
  * Some controllers can support SDIO IRQ signalling.
  */
 #define TMIO_MMC_SDIO_IRQ		(1 << 2)
+/*
+ * Some platforms can detect card insertion events with controller powered
+ * down, in which case they have to call tmio_mmc_cd_wakeup() to power up the
+ * controller and report the event to the driver.
+ */
+#define TMIO_MMC_HAS_COLD_CD		(1 << 3)
 
 int tmio_core_mmc_enable(void __iomem *cnf, int shift, unsigned long base);
 int tmio_core_mmc_resume(void __iomem *cnf, int shift, unsigned long base);
@@ -82,11 +89,21 @@ struct tmio_mmc_data {
 	unsigned long			flags;
 	u32				ocr_mask;	/* available voltages */
 	struct tmio_mmc_dma		*dma;
+	struct device			*dev;
+	bool				power;
 	void (*set_pwr)(struct platform_device *host, int state);
 	void (*set_clk_div)(struct platform_device *host, int state);
 	int (*get_cd)(struct platform_device *host);
 };
 
+static inline void tmio_mmc_cd_wakeup(struct tmio_mmc_data *pdata)
+{
+	if (pdata && !pdata->power) {
+		pdata->power = true;
+		pm_runtime_get(pdata->dev);
+	}
+}
+
 /*
  * data for the NAND controller
  */

commit 845ecd20239c28e97e766ff54078a58be19f3a91
Author: Arnd Hannemann <arnd@arndnet.de>
Date:   Tue Dec 28 23:22:31 2010 +0100

    mmc: tmio_mmc: implement SDIO IRQ support
    
    This patch implements SDIO IRQ support for mfds which
    announce the TMIO_MMC_SDIO_IRQ flag for tmio_mmc.
    If MMC_CAP_SDIO_IRQ is also set SDIO IRQ signalling is activated.
    Tested with a b43-based wireless SDIO card and sh_mobile_sdhi.
    
    Signed-off-by: Arnd Hannemann <arnd@arndnet.de>
    Signed-off-by: Chris Ball <cjb@laptop.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index dbfc053b1f95..8e70310ee945 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -57,6 +57,10 @@
  * is configured in 4-bit mode.
  */
 #define TMIO_MMC_BLKSZ_2BYTES		(1 << 1)
+/*
+ * Some controllers can support SDIO IRQ signalling.
+ */
+#define TMIO_MMC_SDIO_IRQ		(1 << 2)
 
 int tmio_core_mmc_enable(void __iomem *cnf, int shift, unsigned long base);
 int tmio_core_mmc_resume(void __iomem *cnf, int shift, unsigned long base);

commit 93173054f2979de41b1912b19f0b57edfb35fcdc
Author: Guennadi Liakhovetski <g.liakhovetski@gmx.de>
Date:   Wed Dec 22 12:02:15 2010 +0100

    mmc: tmio_mmc: implement a bounce buffer for unaligned DMA
    
    For example, with SDIO WLAN cards, some transfers happen with buffers at
    odd addresses, whereas the SH-Mobile DMA engine requires even addresses
    for SDHI. This patch extends the tmio driver with a bounce buffer, that
    is used for single entry scatter-gather lists both for sending and
    receiving. If we ever encounter unaligned transfers with multi-element
    sg lists, this patch will have to be extended. For now it just falls
    back to PIO in this and other unsupported cases.
    
    Signed-off-by: Guennadi Liakhovetski <g.liakhovetski@gmx.de>
    Acked-by: Samuel Ortiz <sameo@linux.intel.com>
    Signed-off-by: Chris Ball <cjb@laptop.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 085f041197dc..dbfc053b1f95 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -66,6 +66,7 @@ void tmio_core_mmc_clk_div(void __iomem *cnf, int shift, int state);
 struct tmio_mmc_dma {
 	void *chan_priv_tx;
 	void *chan_priv_rx;
+	int alignment_shift;
 };
 
 /*

commit f1334fb3c3006ba109886158c0ad79512f928bc1
Author: Yusuke Goda <yusuke.goda.sx@renesas.com>
Date:   Mon Aug 30 11:50:19 2010 +0100

    mmc: Allow 2 byte requests in 4-bit mode for tmio_mmc
    
    Adjust the tmio_mmc block size check to accept 2-byte requests in 4-bit
    mode if the hardware supports it.
    
    Tested with the SDHI hardware block included in sh7724.
    
    Signed-off-by: Yusuke Goda <yusuke.goda.sx@renesas.com>
    Signed-off-by: Matt Fleming <matt@console-pimps.org>
    Acked-by: Magnus Damm <damm@opensource.se>
    Tested-by: Arnd Hannemann <arnd@arndnet.de>
    Signed-off-by: Samuel Ortiz <sameo@linux.intel.com>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 24c43bbad541..085f041197dc 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -52,6 +52,11 @@
 
 /* tmio MMC platform flags */
 #define TMIO_MMC_WRPROTECT_DISABLE	(1 << 0)
+/*
+ * Some controllers can support a 2-byte block size when the bus width
+ * is configured in 4-bit mode.
+ */
+#define TMIO_MMC_BLKSZ_2BYTES		(1 << 1)
 
 int tmio_core_mmc_enable(void __iomem *cnf, int shift, unsigned long base);
 int tmio_core_mmc_resume(void __iomem *cnf, int shift, unsigned long base);

commit 19ca7502c508595edfb963e5dbcf62854a926506
Author: Arnd Hannemann <arnd@arndnet.de>
Date:   Tue Aug 24 17:26:59 2010 +0200

    mmc: Allow the tmio_mmc mfd driver to specify get_cd handler
    
    Some controllers, supported by the tmio_mmc driver do not have the card
    detect pin of a slot connected, so that polling needs to be used and
    card detection is handled by other means.
    This patch exposes a get_cd hook for that purpose.
    
    Signed-off-by: Arnd Hannemann <arnd@arndnet.de>
    Signed-off-by: Samuel Ortiz <sameo@linux.intel.com>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index f07425bc3dcd..24c43bbad541 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -74,6 +74,7 @@ struct tmio_mmc_data {
 	struct tmio_mmc_dma		*dma;
 	void (*set_pwr)(struct platform_device *host, int state);
 	void (*set_clk_div)(struct platform_device *host, int state);
+	int (*get_cd)(struct platform_device *host);
 };
 
 /*

commit a2b14dc9615c215a8cf4f2041f6c0c3fff5fc486
Author: Guennadi Liakhovetski <g.liakhovetski@gmx.de>
Date:   Wed May 19 18:37:25 2010 +0000

    mmc: let MFD's provide supported Vdd card voltages to tmio_mmc
    
    Signed-off-by: Guennadi Liakhovetski <g.liakhovetski@gmx.de>
    Acked-by: Ian Molton <ian@mnementh.co.uk>
    Signed-off-by: Paul Mundt <lethal@linux-sh.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index feeed0b9ee70..f07425bc3dcd 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -70,6 +70,7 @@ struct tmio_mmc_data {
 	unsigned int			hclk;
 	unsigned long			capabilities;
 	unsigned long			flags;
+	u32				ocr_mask;	/* available voltages */
 	struct tmio_mmc_dma		*dma;
 	void (*set_pwr)(struct platform_device *host, int state);
 	void (*set_clk_div)(struct platform_device *host, int state);

commit ac8fb3e8627d5494f3d2221925a82be4c1778b0e
Author: Guennadi Liakhovetski <g.liakhovetski@gmx.de>
Date:   Wed May 19 18:36:02 2010 +0000

    tmio: add a platform flag to disable card write-protection detection
    
    Write-protection status is not always available, e.g., micro-SD cards do not
    have a write-protection switch at all. This patch adds a flag to let platforms
    force tmio_mmc to consider the card writable.
    
    Signed-off-by: Guennadi Liakhovetski <g.liakhovetski@gmx.de>
    Acked-by: Ian Molton <ian@mnementh.co.uk>
    Signed-off-by: Paul Mundt <lethal@linux-sh.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 360fc953d7bb..feeed0b9ee70 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -50,6 +50,9 @@
 		tmio_iowrite16((val) >> 16, (base) + ((reg + 2) << (shift))); \
 	} while (0)
 
+/* tmio MMC platform flags */
+#define TMIO_MMC_WRPROTECT_DISABLE	(1 << 0)
+
 int tmio_core_mmc_enable(void __iomem *cnf, int shift, unsigned long base);
 int tmio_core_mmc_resume(void __iomem *cnf, int shift, unsigned long base);
 void tmio_core_mmc_pwr(void __iomem *cnf, int shift, int state);
@@ -66,6 +69,7 @@ struct tmio_mmc_dma {
 struct tmio_mmc_data {
 	unsigned int			hclk;
 	unsigned long			capabilities;
+	unsigned long			flags;
 	struct tmio_mmc_dma		*dma;
 	void (*set_pwr)(struct platform_device *host, int state);
 	void (*set_clk_div)(struct platform_device *host, int state);

commit 42a4533976d922ff3272fad17dd52fe3682899dd
Author: Guennadi Liakhovetski <g.liakhovetski@gmx.de>
Date:   Wed May 19 18:34:11 2010 +0000

    mmc: prepare tmio_mmc for passing of DMA configuration from the MFD cell
    
    After this patch, if the "dma" pointer in struct tmio_mmc_data is not NULL, it
    points to a struct, containing two tokens, that have to be passed to the
    dmaengine driver for channel configuration.
    
    Signed-off-by: Guennadi Liakhovetski <g.liakhovetski@gmx.de>
    Acked-by: Samuel Ortiz <sameo@linux.intel.com>
    Signed-off-by: Paul Mundt <lethal@linux-sh.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index c3f7dff8effc..360fc953d7bb 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -55,12 +55,18 @@ int tmio_core_mmc_resume(void __iomem *cnf, int shift, unsigned long base);
 void tmio_core_mmc_pwr(void __iomem *cnf, int shift, int state);
 void tmio_core_mmc_clk_div(void __iomem *cnf, int shift, int state);
 
+struct tmio_mmc_dma {
+	void *chan_priv_tx;
+	void *chan_priv_rx;
+};
+
 /*
  * data for the MMC controller
  */
 struct tmio_mmc_data {
 	unsigned int			hclk;
 	unsigned long			capabilities;
+	struct tmio_mmc_dma		*dma;
 	void (*set_pwr)(struct platform_device *host, int state);
 	void (*set_clk_div)(struct platform_device *host, int state);
 };

commit 707f0b2fbc65876e8abd94d26d8d0620600c05d4
Author: Magnus Damm <damm@opensource.se>
Date:   Wed Feb 17 16:38:14 2010 +0900

    tmio_mmc: Remove const from platform data V3
    
    Remove const from the tmio-mmc platform data hclk V3.
    This change makes it possible to remove the type cast
    from the sh_mobile_sdhi driver which is using the clock
    framework to get the clock rate.
    
    Signed-off-by: Magnus Damm <damm@opensource.se>
    Signed-off-by: Samuel Ortiz <sameo@linux.intel.com>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 37d941420ce4..c3f7dff8effc 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -59,7 +59,7 @@ void tmio_core_mmc_clk_div(void __iomem *cnf, int shift, int state);
  * data for the MMC controller
  */
 struct tmio_mmc_data {
-	const unsigned int		hclk;
+	unsigned int			hclk;
 	unsigned long			capabilities;
 	void (*set_pwr)(struct platform_device *host, int state);
 	void (*set_clk_div)(struct platform_device *host, int state);

commit b741d440a97c376af309e902eeb2f3c5673d2c92
Author: Yusuke Goda <goda.yusuke@renesas.com>
Date:   Wed Feb 17 16:37:55 2010 +0900

    tmio_mmc: Add MMC_CAP_MMC_HIGHSPEED support V2
    
    Enable MMC_CAP_XX support in the tmio_mmc driver if
    pdata->capabilities is set.
    
    Signed-off-by: Yusuke Goda <goda.yusuke@renesas.com>
    Signed-off-by: Magnus Damm <damm@opensource.se>
    Signed-off-by: Samuel Ortiz <sameo@linux.intel.com>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 9cb1834deffa..37d941420ce4 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -60,6 +60,7 @@ void tmio_core_mmc_clk_div(void __iomem *cnf, int shift, int state);
  */
 struct tmio_mmc_data {
 	const unsigned int		hclk;
+	unsigned long			capabilities;
 	void (*set_pwr)(struct platform_device *host, int state);
 	void (*set_clk_div)(struct platform_device *host, int state);
 };

commit 64e8867ba8098b69889c1af94997a5ba2348fb26
Author: Ian Molton <ian@mnementh.co.uk>
Date:   Wed Jan 6 13:51:48 2010 +0100

    mfd: tmio_mmc hardware abstraction for CNF area
    
    This patch abstracts out the CNF area code from tmio_mmc which
    is not present in all hardware that can use this driver. This
    is required so that we can support non-toshiba based hardware.
    
    ASIC3 support by Philipp Zabel
    
    Signed-off-by: Ian Molton <ian@mnementh.co.uk>
    Signed-off-by: Magnus Damm <damm@opensource.se>
    Signed-off-by: Samuel Ortiz <sameo@linux.intel.com>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 6b9c5d06690c..9cb1834deffa 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -2,6 +2,8 @@
 #define MFD_TMIO_H
 
 #include <linux/fb.h>
+#include <linux/io.h>
+#include <linux/platform_device.h>
 
 #define tmio_ioread8(addr) readb(addr)
 #define tmio_ioread16(addr) readw(addr)
@@ -18,11 +20,48 @@
 	writew((val) >> 16, (addr) + 2); \
 	} while (0)
 
+#define CNF_CMD     0x04
+#define CNF_CTL_BASE   0x10
+#define CNF_INT_PIN  0x3d
+#define CNF_STOP_CLK_CTL 0x40
+#define CNF_GCLK_CTL 0x41
+#define CNF_SD_CLK_MODE 0x42
+#define CNF_PIN_STATUS 0x44
+#define CNF_PWR_CTL_1 0x48
+#define CNF_PWR_CTL_2 0x49
+#define CNF_PWR_CTL_3 0x4a
+#define CNF_CARD_DETECT_MODE 0x4c
+#define CNF_SD_SLOT 0x50
+#define CNF_EXT_GCLK_CTL_1 0xf0
+#define CNF_EXT_GCLK_CTL_2 0xf1
+#define CNF_EXT_GCLK_CTL_3 0xf9
+#define CNF_SD_LED_EN_1 0xfa
+#define CNF_SD_LED_EN_2 0xfe
+
+#define   SDCREN 0x2   /* Enable access to MMC CTL regs. (flag in COMMAND_REG)*/
+
+#define sd_config_write8(base, shift, reg, val) \
+	tmio_iowrite8((val), (base) + ((reg) << (shift)))
+#define sd_config_write16(base, shift, reg, val) \
+	tmio_iowrite16((val), (base) + ((reg) << (shift)))
+#define sd_config_write32(base, shift, reg, val) \
+	do { \
+		tmio_iowrite16((val), (base) + ((reg) << (shift)));   \
+		tmio_iowrite16((val) >> 16, (base) + ((reg + 2) << (shift))); \
+	} while (0)
+
+int tmio_core_mmc_enable(void __iomem *cnf, int shift, unsigned long base);
+int tmio_core_mmc_resume(void __iomem *cnf, int shift, unsigned long base);
+void tmio_core_mmc_pwr(void __iomem *cnf, int shift, int state);
+void tmio_core_mmc_clk_div(void __iomem *cnf, int shift, int state);
+
 /*
  * data for the MMC controller
  */
 struct tmio_mmc_data {
 	const unsigned int		hclk;
+	void (*set_pwr)(struct platform_device *host, int state);
+	void (*set_clk_div)(struct platform_device *host, int state);
 };
 
 /*

commit 4d3792e054f706f73837769a0e5607b3b7ad25a2
Author: Samuel Ortiz <sameo@linux.intel.com>
Date:   Mon Jun 15 15:43:31 2009 +0200

    mfd: fix tmio related warnings
    
    We can not have .driver_data as const since platform_set_drvdata() doesnt take
    a const.
    The hclk mmc_data field can be const though.
    
    Signed-off-by: Samuel Ortiz <sameo@linux.intel.com>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index c377118884e6..6b9c5d06690c 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -22,7 +22,7 @@
  * data for the MMC controller
  */
 struct tmio_mmc_data {
-	unsigned int		hclk;
+	const unsigned int		hclk;
 };
 
 /*

commit f0e46cc4971f6be96010d9248e0fc076b229d989
Author: Philipp Zabel <philipp.zabel@gmail.com>
Date:   Thu Jun 4 20:12:31 2009 +0200

    MFD,mmc: tmio_mmc: make HCLK configurable
    
    The Toshiba parts all have a 24 MHz HCLK, but HTC ASIC3 has a 24.576 MHz HCLK
    and AMD Imageon w228x's HCLK is 80 MHz. With this patch, the MFD driver
    provides the HCLK frequency to tmio_mmc via mfd_cell->driver_data.
    
    Signed-off-by: Philipp Zabel <philipp.zabel@gmail.com>
    Acked-by: Ian Molton <ian@mnementh.co.uk>
    Acked-by: Samuel Ortiz <sameo@openedhand.com>
    Signed-off-by: Pierre Ossman <pierre@ossman.eu>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 516d955ab8a1..c377118884e6 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -18,6 +18,13 @@
 	writew((val) >> 16, (addr) + 2); \
 	} while (0)
 
+/*
+ * data for the MMC controller
+ */
+struct tmio_mmc_data {
+	unsigned int		hclk;
+};
+
 /*
  * data for the NAND controller
  */

commit b53cde3557b8f97e6a635782875d442551a89bf1
Author: Dmitry Baryshkov <dbaryshkov@gmail.com>
Date:   Wed Oct 15 22:03:55 2008 -0700

    fbdev: add new TMIO framebuffer driver
    
    Add driver for TMIO framebuffer cells as found e.g. in Toshiba TC6393XB
    chips.
    
    Signed-off-by: Dmitry Baryshkov <dbaryshkov@gmail.com>
    Cc: Ian Molton <spyro@f2s.com>
    Acked-by: Samuel Ortiz <sameo@openedhand.com>
    Acked-by: Krzysztof Helt <krzysztof.h1@wp.pl>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index ec612e66391c..516d955ab8a1 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -1,6 +1,8 @@
 #ifndef MFD_TMIO_H
 #define MFD_TMIO_H
 
+#include <linux/fb.h>
+
 #define tmio_ioread8(addr) readb(addr)
 #define tmio_ioread16(addr) readw(addr)
 #define tmio_ioread16_rep(r, b, l) readsw(r, b, l)
@@ -25,4 +27,21 @@ struct tmio_nand_data {
 	unsigned int		num_partitions;
 };
 
+#define FBIO_TMIO_ACC_WRITE	0x7C639300
+#define FBIO_TMIO_ACC_SYNC	0x7C639301
+
+struct tmio_fb_data {
+	int			(*lcd_set_power)(struct platform_device *fb_dev,
+								bool on);
+	int			(*lcd_mode)(struct platform_device *fb_dev,
+					const struct fb_videomode *mode);
+	int			num_modes;
+	struct fb_videomode	*modes;
+
+	/* in mm: size of screen */
+	int			height;
+	int			width;
+};
+
+
 #endif

commit d3a2f71853ce543c5515d4982e202751e15b0b6d
Author: Ian Molton <spyro@f2s.com>
Date:   Thu Jul 31 20:44:28 2008 +0200

    mfd: TMIO MMC structures and accessors.
    
    Signed-off-by: Ian Molton <spyro@f2s.com>
    Signed-off-by: Samuel Ortiz <sameo@openedhand.com>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 9438d8c9ac1c..ec612e66391c 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -1,6 +1,21 @@
 #ifndef MFD_TMIO_H
 #define MFD_TMIO_H
 
+#define tmio_ioread8(addr) readb(addr)
+#define tmio_ioread16(addr) readw(addr)
+#define tmio_ioread16_rep(r, b, l) readsw(r, b, l)
+#define tmio_ioread32(addr) \
+	(((u32) readw((addr))) | (((u32) readw((addr) + 2)) << 16))
+
+#define tmio_iowrite8(val, addr) writeb((val), (addr))
+#define tmio_iowrite16(val, addr) writew((val), (addr))
+#define tmio_iowrite16_rep(r, b, l) writesw(r, b, l)
+#define tmio_iowrite32(val, addr) \
+	do { \
+	writew((val),       (addr)); \
+	writew((val) >> 16, (addr) + 2); \
+	} while (0)
+
 /*
  * data for the NAND controller
  */
@@ -10,8 +25,4 @@ struct tmio_nand_data {
 	unsigned int		num_partitions;
 };
 
-#define TMIO_NAND_CONFIG	"tmio-nand-config"
-#define TMIO_NAND_CONTROL	"tmio-nand-control"
-#define TMIO_NAND_IRQ		"tmio-nand"
-
 #endif

commit f024ff10b1ab13da4d626366019fd05c49721af7
Author: Dmitry Baryshkov <dbaryshkov@gmail.com>
Date:   Fri Jun 27 10:37:57 2008 +0100

    [ARM] 5128/1: tc6393xb: tmio-nand support
    
    Signed-off-by: Dmitry Baryshkov <dbaryshkov@gmail.com>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>

diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
new file mode 100644
index 000000000000..9438d8c9ac1c
--- /dev/null
+++ b/include/linux/mfd/tmio.h
@@ -0,0 +1,17 @@
+#ifndef MFD_TMIO_H
+#define MFD_TMIO_H
+
+/*
+ * data for the NAND controller
+ */
+struct tmio_nand_data {
+	struct nand_bbt_descr	*badblock_pattern;
+	struct mtd_partition	*partition;
+	unsigned int		num_partitions;
+};
+
+#define TMIO_NAND_CONFIG	"tmio-nand-config"
+#define TMIO_NAND_CONTROL	"tmio-nand-control"
+#define TMIO_NAND_IRQ		"tmio-nand"
+
+#endif
