commit 5312f321a67cfee1fe4de245bc558fa857dce33b
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Thu Jan 30 13:55:29 2020 +0100

    mfd: syscon: Fix syscon_regmap_lookup_by_phandle_args() dummy
    
    If CONFIG_MFD_SYSCON=n:
    
        include/linux/mfd/syscon.h:54:23: warning: ‘syscon_regmap_lookup_by_phandle_args’ defined but not used [-Wunused-function]
    
    Fix this by adding the missing inline keyword.
    
    Fixes: 6a24f567af4accef ("mfd: syscon: Add arguments support for syscon reference")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/syscon.h b/include/linux/mfd/syscon.h
index 714cab1e09d3..7f20e9b502a5 100644
--- a/include/linux/mfd/syscon.h
+++ b/include/linux/mfd/syscon.h
@@ -51,7 +51,7 @@ static inline struct regmap *syscon_regmap_lookup_by_phandle(
 	return ERR_PTR(-ENOTSUPP);
 }
 
-static struct regmap *syscon_regmap_lookup_by_phandle_args(
+static inline struct regmap *syscon_regmap_lookup_by_phandle_args(
 					struct device_node *np,
 					const char *property,
 					int arg_count,

commit 6a24f567af4accef6d73b0be407227c537b94a1f
Author: Orson Zhai <orson.zhai@unisoc.com>
Date:   Tue Jan 21 15:09:38 2020 +0800

    mfd: syscon: Add arguments support for syscon reference
    
    There are a lot of similar global registers being used across multiple SoCs
    from Unisoc. But most of these registers are assigned with different offset
    for different SoCs. It is hard to handle all of them in an all-in-one
    kernel image.
    
    Add a helper function to get regmap with arguments where we could put some
    extra information such as the offset value.
    
    Signed-off-by: Orson Zhai <orson.zhai@unisoc.com>
    Tested-by: Baolin Wang <baolin.wang@unisoc.com>
    Reviewed-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/syscon.h b/include/linux/mfd/syscon.h
index 112dc66262cc..714cab1e09d3 100644
--- a/include/linux/mfd/syscon.h
+++ b/include/linux/mfd/syscon.h
@@ -23,6 +23,11 @@ extern struct regmap *syscon_regmap_lookup_by_compatible(const char *s);
 extern struct regmap *syscon_regmap_lookup_by_phandle(
 					struct device_node *np,
 					const char *property);
+extern struct regmap *syscon_regmap_lookup_by_phandle_args(
+					struct device_node *np,
+					const char *property,
+					int arg_count,
+					unsigned int *out_args);
 #else
 static inline struct regmap *device_node_to_regmap(struct device_node *np)
 {
@@ -45,6 +50,15 @@ static inline struct regmap *syscon_regmap_lookup_by_phandle(
 {
 	return ERR_PTR(-ENOTSUPP);
 }
+
+static struct regmap *syscon_regmap_lookup_by_phandle_args(
+					struct device_node *np,
+					const char *property,
+					int arg_count,
+					unsigned int *out_args)
+{
+	return ERR_PTR(-ENOTSUPP);
+}
 #endif
 
 #endif /* __LINUX_MFD_SYSCON_H__ */

commit 39233b7c611248c0d05209b4854bc63e26485655
Author: Paul Cercueil <paul@crapouillou.net>
Date:   Wed Jul 24 13:16:06 2019 -0400

    mfd/syscon: Add device_node_to_regmap()
    
    device_node_to_regmap() is exactly like syscon_node_to_regmap(), but it
    does not check that the node is compatible with "syscon", and won't
    attach the first clock it finds to the regmap.
    
    The rationale behind this, is that one device node with a standard
    compatible string "foo,bar" can be covered by multiple drivers sharing a
    regmap, or by a single driver doing all the job without a regmap, but
    these are implementation details which shouldn't reflect on the
    devicetree.
    
    Signed-off-by: Paul Cercueil <paul@crapouillou.net>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: James Hogan <jhogan@kernel.org>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Lee Jones <lee.jones@linaro.org>
    Cc: Daniel Lezcano <daniel.lezcano@linaro.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Michael Turquette <mturquette@baylibre.com>
    Cc: Stephen Boyd <sboyd@kernel.org>
    Cc: Jason Cooper <jason@lakedaemon.net>
    Cc: Marc Zyngier <marc.zyngier@arm.com>
    Cc: Rob Herring <robh+dt@kernel.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: devicetree@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org
    Cc: linux-doc@vger.kernel.org
    Cc: linux-mips@vger.kernel.org
    Cc: linux-clk@vger.kernel.org
    Cc: od@zcrc.me
    Cc: Mathieu Malaterre <malat@debian.org>

diff --git a/include/linux/mfd/syscon.h b/include/linux/mfd/syscon.h
index 8cfda0554381..112dc66262cc 100644
--- a/include/linux/mfd/syscon.h
+++ b/include/linux/mfd/syscon.h
@@ -17,12 +17,18 @@
 struct device_node;
 
 #ifdef CONFIG_MFD_SYSCON
+extern struct regmap *device_node_to_regmap(struct device_node *np);
 extern struct regmap *syscon_node_to_regmap(struct device_node *np);
 extern struct regmap *syscon_regmap_lookup_by_compatible(const char *s);
 extern struct regmap *syscon_regmap_lookup_by_phandle(
 					struct device_node *np,
 					const char *property);
 #else
+static inline struct regmap *device_node_to_regmap(struct device_node *np)
+{
+	return ERR_PTR(-ENOTSUPP);
+}
+
 static inline struct regmap *syscon_node_to_regmap(struct device_node *np)
 {
 	return ERR_PTR(-ENOTSUPP);

commit 29d14b668d2f2e7b692525ee3f69bf12b06be0f0
Author: Suzuki K Poulose <suzuki.poulose@arm.com>
Date:   Fri Jun 14 18:53:57 2019 +0100

    mfd: Remove unused helper syscon_regmap_lookup_by_pdevname
    
    Nobody uses the exported helper syscon_regmap_lookup_by_pdevname,
    to lookup a device by name. Let us remove it.
    
    Suggested-by: Arnd Bergman <arnd@arnd.de>
    Cc: Arnd Bergman <arnd@arnd.de>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: "Rafael J. Wysocki" <rafael@kernel.org>
    Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/include/linux/mfd/syscon.h b/include/linux/mfd/syscon.h
index f0273c9e972b..8cfda0554381 100644
--- a/include/linux/mfd/syscon.h
+++ b/include/linux/mfd/syscon.h
@@ -19,7 +19,6 @@ struct device_node;
 #ifdef CONFIG_MFD_SYSCON
 extern struct regmap *syscon_node_to_regmap(struct device_node *np);
 extern struct regmap *syscon_regmap_lookup_by_compatible(const char *s);
-extern struct regmap *syscon_regmap_lookup_by_pdevname(const char *s);
 extern struct regmap *syscon_regmap_lookup_by_phandle(
 					struct device_node *np,
 					const char *property);
@@ -34,11 +33,6 @@ static inline struct regmap *syscon_regmap_lookup_by_compatible(const char *s)
 	return ERR_PTR(-ENOTSUPP);
 }
 
-static inline struct regmap *syscon_regmap_lookup_by_pdevname(const char *s)
-{
-	return ERR_PTR(-ENOTSUPP);
-}
-
 static inline struct regmap *syscon_regmap_lookup_by_phandle(
 					struct device_node *np,
 					const char *property)

commit 2874c5fd284268364ece81a7bd936f3c8168e567
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon May 27 08:55:01 2019 +0200

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 152
    
    Based on 1 normalized pattern(s):
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license as published by
      the free software foundation either version 2 of the license or at
      your option any later version
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-or-later
    
    has been chosen to replace the boilerplate/reference in 3029 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190527070032.746973796@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/include/linux/mfd/syscon.h b/include/linux/mfd/syscon.h
index 40a76b97b7ab..f0273c9e972b 100644
--- a/include/linux/mfd/syscon.h
+++ b/include/linux/mfd/syscon.h
@@ -1,3 +1,4 @@
+/* SPDX-License-Identifier: GPL-2.0-or-later */
 /*
  * System Control Driver
  *
@@ -5,11 +6,6 @@
  * Copyright (C) 2012 Linaro Ltd.
  *
  * Author: Dong Aisheng <dong.aisheng@linaro.org>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
  */
 
 #ifndef __LINUX_MFD_SYSCON_H__

commit adae28c59a6a71a971ffed713550911546df0e20
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Mar 23 11:36:53 2016 +0100

    mfd: syscon: Include errno.h from header
    
    The syscon header uses the ENOTSUPP error constant, but doesn't
    include the header that defines it. This causes a build error
    after the imx pinctrl driver started using syscon:
    
    include/linux/mfd/syscon.h: In function 'syscon_node_to_regmap':
    include/linux/mfd/syscon.h:32:18: error: 'ENOTSUPP' undeclared (first use in this function)
      return ERR_PTR(-ENOTSUPP);
                      ^~~~~~~~
    
    This adds the missing #include.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Fixes: 8626ada871f1 ("pinctrl: imx: attach iomuxc device to gpr syscon")
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/syscon.h b/include/linux/mfd/syscon.h
index 1088149be0c9..40a76b97b7ab 100644
--- a/include/linux/mfd/syscon.h
+++ b/include/linux/mfd/syscon.h
@@ -16,6 +16,7 @@
 #define __LINUX_MFD_SYSCON_H__
 
 #include <linux/err.h>
+#include <linux/errno.h>
 
 struct device_node;
 

commit 8c037e0c8eaa7dcb3a190b9be841ee81edb865ff
Author: Philipp Zabel <p.zabel@pengutronix.de>
Date:   Fri Jan 29 09:42:19 2016 +0100

    mfd: syscon: Return ENOTSUPP instead of ENOSYS when disabled
    
    When CONFIG_MFD_SYSCON is disabled, have the function stubs return
    ENOTSUPP to indicate the syscon functionality is not available.
    There are currently no callers that depend on the ENOSYS return value.
    
    This patchfixes a checkpatch warning:
        WARNING: ENOSYS means 'invalid syscall nr' and nothing else
    
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/syscon.h b/include/linux/mfd/syscon.h
index 75e543b78f53..1088149be0c9 100644
--- a/include/linux/mfd/syscon.h
+++ b/include/linux/mfd/syscon.h
@@ -29,24 +29,24 @@ extern struct regmap *syscon_regmap_lookup_by_phandle(
 #else
 static inline struct regmap *syscon_node_to_regmap(struct device_node *np)
 {
-	return ERR_PTR(-ENOSYS);
+	return ERR_PTR(-ENOTSUPP);
 }
 
 static inline struct regmap *syscon_regmap_lookup_by_compatible(const char *s)
 {
-	return ERR_PTR(-ENOSYS);
+	return ERR_PTR(-ENOTSUPP);
 }
 
 static inline struct regmap *syscon_regmap_lookup_by_pdevname(const char *s)
 {
-	return ERR_PTR(-ENOSYS);
+	return ERR_PTR(-ENOTSUPP);
 }
 
 static inline struct regmap *syscon_regmap_lookup_by_phandle(
 					struct device_node *np,
 					const char *property)
 {
-	return ERR_PTR(-ENOSYS);
+	return ERR_PTR(-ENOTSUPP);
 }
 #endif
 

commit 3d2379909374ef2de6bc57ed8966c7ca8c9dfb82
Author: Tushar Behera <tushar.behera@linaro.org>
Date:   Fri May 9 16:37:40 2014 +0530

    mfd: syscon: Include linux/err.h to fix build error
    
    commit df73de9b0d412 ("mfd: syscon: Return -ENOSYS if CONFIG_MFD_SYSCON
    is not enabled") introduced fallbacks for APIs, but missed out on adding
    the header file. This would work only if linux/err.h is also included
    in the source code from where this file is included. It would be better
    to include linux/err.h in file to remove possible build errors.
    
    Without this patch, we get following and similar build errors if this
    header file is included in some source file and CONFIG_MFD_SYSCON is
    not enabled.
    
    include/linux/mfd/syscon.h: In function ‘syscon_node_to_regmap’:
    include/linux/mfd/syscon.h:30:2: error: implicit declaration of function ‘ERR_PTR’ [-Werror=implicit-function-declaration]
      return ERR_PTR(-ENOSYS);
      ^
    include/linux/mfd/syscon.h:30:18: error: ‘ENOSYS’ undeclared (first use in this function)
      return ERR_PTR(-ENOSYS);
                      ^
    Signed-off-by: Tushar Behera <tushar.behera@linaro.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/syscon.h b/include/linux/mfd/syscon.h
index 8789fa3c7fd9..75e543b78f53 100644
--- a/include/linux/mfd/syscon.h
+++ b/include/linux/mfd/syscon.h
@@ -15,6 +15,8 @@
 #ifndef __LINUX_MFD_SYSCON_H__
 #define __LINUX_MFD_SYSCON_H__
 
+#include <linux/err.h>
+
 struct device_node;
 
 #ifdef CONFIG_MFD_SYSCON

commit df73de9b0d412915384396637bf67ef9208161e9
Author: Peter Chen <peter.chen@freescale.com>
Date:   Tue Oct 22 16:46:25 2013 +0800

    mfd: syscon: Return -ENOSYS if CONFIG_MFD_SYSCON is not enabled
    
    Some platforms may not define CONFIG_MFD_SYSCON (or haven't syscon),
    it can fix build error for these platforms.
    
    Signed-off-by: Peter Chen <peter.chen@freescale.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/syscon.h b/include/linux/mfd/syscon.h
index b473577f36db..8789fa3c7fd9 100644
--- a/include/linux/mfd/syscon.h
+++ b/include/linux/mfd/syscon.h
@@ -17,10 +17,35 @@
 
 struct device_node;
 
+#ifdef CONFIG_MFD_SYSCON
 extern struct regmap *syscon_node_to_regmap(struct device_node *np);
 extern struct regmap *syscon_regmap_lookup_by_compatible(const char *s);
 extern struct regmap *syscon_regmap_lookup_by_pdevname(const char *s);
 extern struct regmap *syscon_regmap_lookup_by_phandle(
 					struct device_node *np,
 					const char *property);
+#else
+static inline struct regmap *syscon_node_to_regmap(struct device_node *np)
+{
+	return ERR_PTR(-ENOSYS);
+}
+
+static inline struct regmap *syscon_regmap_lookup_by_compatible(const char *s)
+{
+	return ERR_PTR(-ENOSYS);
+}
+
+static inline struct regmap *syscon_regmap_lookup_by_pdevname(const char *s)
+{
+	return ERR_PTR(-ENOSYS);
+}
+
+static inline struct regmap *syscon_regmap_lookup_by_phandle(
+					struct device_node *np,
+					const char *property)
+{
+	return ERR_PTR(-ENOSYS);
+}
+#endif
+
 #endif /* __LINUX_MFD_SYSCON_H__ */

commit 5fb1c2dd8f9e9f3fd4ecbaefc75b83ab0ec40cfa
Author: Sylwester Nawrocki <s.nawrocki@samsung.com>
Date:   Mon Mar 25 17:56:23 2013 +0100

    mfd: syscon: Add missing struct device_node declaration
    
    syscon.h header uses struct device_node in functions' declarations
    without declaring it. This causes compilation warnings like:
    
    include/linux/mfd/syscon.h:20: warning: ‘struct device_node’
    declared inside parameter list
    include/linux/mfd/syscon.h:20: warning: its scope is only this
    definition or declaration, which is probably not what you want
    
    Fix it by adding a forward declaration of struct device_node.
    
    Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Kyungmin Park <kyungmin.park@samsung.com>
    Acked-by: Dong Aisheng <dong.aisheng@linaro.org>
    Signed-off-by: Samuel Ortiz <sameo@linux.intel.com>

diff --git a/include/linux/mfd/syscon.h b/include/linux/mfd/syscon.h
index 5c9ee6ee7960..b473577f36db 100644
--- a/include/linux/mfd/syscon.h
+++ b/include/linux/mfd/syscon.h
@@ -15,6 +15,8 @@
 #ifndef __LINUX_MFD_SYSCON_H__
 #define __LINUX_MFD_SYSCON_H__
 
+struct device_node;
+
 extern struct regmap *syscon_node_to_regmap(struct device_node *np);
 extern struct regmap *syscon_regmap_lookup_by_compatible(const char *s);
 extern struct regmap *syscon_regmap_lookup_by_pdevname(const char *s);

commit 5ab3a89a741fa4c331f42dec17fde59586dc59e6
Author: Alexander Shiyan <shc_work@mail.ru>
Date:   Wed Mar 13 21:34:20 2013 +0400

    mfd: syscon: Add non-DT support
    
    This patch allow using syscon driver from the platform data, i.e.
    possibility using driver on systems without oftree support.
    For search syscon device from the client drivers,
    "syscon_regmap_lookup_by_pdevname" function was added.
    
    Signed-off-by: Alexander Shiyan <shc_work@mail.ru>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Samuel Ortiz <sameo@linux.intel.com>

diff --git a/include/linux/mfd/syscon.h b/include/linux/mfd/syscon.h
index 6aeb6b8da64d..5c9ee6ee7960 100644
--- a/include/linux/mfd/syscon.h
+++ b/include/linux/mfd/syscon.h
@@ -17,6 +17,7 @@
 
 extern struct regmap *syscon_node_to_regmap(struct device_node *np);
 extern struct regmap *syscon_regmap_lookup_by_compatible(const char *s);
+extern struct regmap *syscon_regmap_lookup_by_pdevname(const char *s);
 extern struct regmap *syscon_regmap_lookup_by_phandle(
 					struct device_node *np,
 					const char *property);

commit 87d687301f380729ec320619f100f3ba39f3693d
Author: Dong Aisheng <dong.aisheng@linaro.org>
Date:   Wed Sep 5 10:57:13 2012 +0800

    mfd: Add syscon driver based on regmap
    
    Add regmap based syscon driver.
    This is usually used for access misc bits in registers which does not belong
    to a specific module, for example, IMX IOMUXC GPR and ANATOP.
    With this driver, client can use generic regmap API to access registers
    which are registered into syscon.
    
    Reviewed-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Stephen Warren <swarren@wwwdotorg.org>
    Signed-off-by: Dong Aisheng <dong.aisheng@linaro.org>
    Signed-off-by: Samuel Ortiz <sameo@linux.intel.com>

diff --git a/include/linux/mfd/syscon.h b/include/linux/mfd/syscon.h
new file mode 100644
index 000000000000..6aeb6b8da64d
--- /dev/null
+++ b/include/linux/mfd/syscon.h
@@ -0,0 +1,23 @@
+/*
+ * System Control Driver
+ *
+ * Copyright (C) 2012 Freescale Semiconductor, Inc.
+ * Copyright (C) 2012 Linaro Ltd.
+ *
+ * Author: Dong Aisheng <dong.aisheng@linaro.org>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ */
+
+#ifndef __LINUX_MFD_SYSCON_H__
+#define __LINUX_MFD_SYSCON_H__
+
+extern struct regmap *syscon_node_to_regmap(struct device_node *np);
+extern struct regmap *syscon_regmap_lookup_by_compatible(const char *s);
+extern struct regmap *syscon_regmap_lookup_by_phandle(
+					struct device_node *np,
+					const char *property);
+#endif /* __LINUX_MFD_SYSCON_H__ */
