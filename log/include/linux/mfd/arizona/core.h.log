commit d2912cb15bdda8ba4a5dd73396ad62641af2f520
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Tue Jun 4 10:11:33 2019 +0200

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 500
    
    Based on 2 normalized pattern(s):
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license version 2 as
      published by the free software foundation
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license version 2 as
      published by the free software foundation #
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-only
    
    has been chosen to replace the boilerplate/reference in 4122 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Enrico Weigelt <info@metux.net>
    Reviewed-by: Kate Stewart <kstewart@linuxfoundation.org>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190604081206.933168790@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/include/linux/mfd/arizona/core.h b/include/linux/mfd/arizona/core.h
index b31b3be7f8c9..6d6f96b2b29f 100644
--- a/include/linux/mfd/arizona/core.h
+++ b/include/linux/mfd/arizona/core.h
@@ -1,13 +1,10 @@
+/* SPDX-License-Identifier: GPL-2.0-only */
 /*
  * Arizona MFD internals
  *
  * Copyright 2012 Wolfson Microelectronics plc
  *
  * Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License version 2 as
- * published by the Free Software Foundation.
  */
 
 #ifndef _WM_ARIZONA_CORE_H

commit 1961531d1a0a011c77bfaafc8412e84a919d1747
Author: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date:   Tue Sep 20 16:30:13 2016 +0100

    mfd: arizona: Remove arizona_of_get_named_gpio helper function
    
    This function is only used in a single place and no new users will be
    added as all the devices other required GPIOs are already handled. As
    such just merge the code back into the calling function.
    
    Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>

diff --git a/include/linux/mfd/arizona/core.h b/include/linux/mfd/arizona/core.h
index b9909bb0642b..b31b3be7f8c9 100644
--- a/include/linux/mfd/arizona/core.h
+++ b/include/linux/mfd/arizona/core.h
@@ -191,7 +191,4 @@ int cs47l24_patch(struct arizona *arizona);
 int wm8997_patch(struct arizona *arizona);
 int wm8998_patch(struct arizona *arizona);
 
-extern int arizona_of_get_named_gpio(struct arizona *arizona, const char *prop,
-				     bool mandatory);
-
 #endif

commit cdd8da8cc66b3d205120560649e530978ccbc567
Author: Sylwester Nawrocki <s.nawrocki@samsung.com>
Date:   Fri Sep 2 16:52:46 2016 +0100

    mfd: arizona: Add gating of external MCLKn clocks
    
    This patch adds requesting of the clocks supplied on MCLK1, MCLK2 pins,
    gating of the 32k clock is added to the arizona_clk32k_enable(),
    arizona_clk32k_disable() helpers.
    
    It's a temporary change until the CODEC's clock controller gets exposed
    through the clk API and is helpful for board configurations where the
    MCLK clocks are not provided by always on oscillators.
    
    Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/arizona/core.h b/include/linux/mfd/arizona/core.h
index 58ab4c0fe761..b9909bb0642b 100644
--- a/include/linux/mfd/arizona/core.h
+++ b/include/linux/mfd/arizona/core.h
@@ -13,6 +13,7 @@
 #ifndef _WM_ARIZONA_CORE_H
 #define _WM_ARIZONA_CORE_H
 
+#include <linux/clk.h>
 #include <linux/interrupt.h>
 #include <linux/notifier.h>
 #include <linux/regmap.h>
@@ -21,6 +22,12 @@
 
 #define ARIZONA_MAX_CORE_SUPPLIES 2
 
+enum {
+	ARIZONA_MCLK1,
+	ARIZONA_MCLK2,
+	ARIZONA_NUM_MCLK
+};
+
 enum arizona_type {
 	WM5102 = 1,
 	WM5110 = 2,
@@ -139,6 +146,8 @@ struct arizona {
 	struct mutex clk_lock;
 	int clk32k_ref;
 
+	struct clk *mclk[ARIZONA_NUM_MCLK];
+
 	bool ctrlif_error;
 
 	struct snd_soc_dapm_context *dapm;

commit 2230c49f09b552454eac51b81e9e4e41060b5e70
Author: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date:   Fri May 13 16:45:18 2016 +0100

    ASoC: arizona: Add a notifier chain for CODEC events
    
    Add a notifier chain that can be used from the machine driver to catch
    events generated by the CODEC.
    
    Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/linux/mfd/arizona/core.h b/include/linux/mfd/arizona/core.h
index d55a42297d49..58ab4c0fe761 100644
--- a/include/linux/mfd/arizona/core.h
+++ b/include/linux/mfd/arizona/core.h
@@ -14,6 +14,7 @@
 #define _WM_ARIZONA_CORE_H
 
 #include <linux/interrupt.h>
+#include <linux/notifier.h>
 #include <linux/regmap.h>
 #include <linux/regulator/consumer.h>
 #include <linux/mfd/arizona/pdata.h>
@@ -148,8 +149,17 @@ struct arizona {
 	uint16_t dac_comp_coeff;
 	uint8_t dac_comp_enabled;
 	struct mutex dac_comp_lock;
+
+	struct blocking_notifier_head notifier;
 };
 
+static inline int arizona_call_notifiers(struct arizona *arizona,
+					 unsigned long event,
+					 void *data)
+{
+	return blocking_notifier_call_chain(&arizona->notifier, event, data);
+}
+
 int arizona_clk32k_enable(struct arizona *arizona);
 int arizona_clk32k_disable(struct arizona *arizona);
 

commit ea1f3339909d8973b41f09ef7275d7e49974b910
Author: Richard Fitzgerald <rf@opensource.wolfsonmicro.com>
Date:   Tue Nov 3 15:08:32 2015 +0000

    mfd: arizona: Support Cirrus Logic CS47L24 and WM1831
    
    This patch adds the regmap configuration tables and
    core MFD handling for the CS47L24 and WM1831 codecs.
    
    Note that compared to the other Arizona codecs, these devices
    do not have an LDO1 or micsupp regulators, extcon driver, or
    the DCVDD isolation control.
    
    Signed-off-by: Richard Fitzgerald <rf@opensource.wolfsonmicro.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/arizona/core.h b/include/linux/mfd/arizona/core.h
index 79e607e2f081..d55a42297d49 100644
--- a/include/linux/mfd/arizona/core.h
+++ b/include/linux/mfd/arizona/core.h
@@ -27,6 +27,8 @@ enum arizona_type {
 	WM8280 = 4,
 	WM8998 = 5,
 	WM1814 = 6,
+	WM1831 = 7,
+	CS47L24 = 8,
 };
 
 #define ARIZONA_IRQ_GP1                    0
@@ -166,6 +168,7 @@ static inline int wm5102_patch(struct arizona *arizona)
 #endif
 
 int wm5110_patch(struct arizona *arizona);
+int cs47l24_patch(struct arizona *arizona);
 int wm8997_patch(struct arizona *arizona);
 int wm8998_patch(struct arizona *arizona);
 

commit 6887b042c52ee05a405bae859f410c2f63b45339
Author: Richard Fitzgerald <rf@opensource.wolfsonmicro.com>
Date:   Fri Jul 3 16:16:35 2015 +0100

    mfd: arizona: Add support for WM8998 and WM1814
    
    Signed-off-by: Richard Fitzgerald <rf@opensource.wolfsonmicro.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/arizona/core.h b/include/linux/mfd/arizona/core.h
index 2f434f4f79a1..79e607e2f081 100644
--- a/include/linux/mfd/arizona/core.h
+++ b/include/linux/mfd/arizona/core.h
@@ -25,6 +25,8 @@ enum arizona_type {
 	WM5110 = 2,
 	WM8997 = 3,
 	WM8280 = 4,
+	WM8998 = 5,
+	WM1814 = 6,
 };
 
 #define ARIZONA_IRQ_GP1                    0
@@ -165,6 +167,7 @@ static inline int wm5102_patch(struct arizona *arizona)
 
 int wm5110_patch(struct arizona *arizona);
 int wm8997_patch(struct arizona *arizona);
+int wm8998_patch(struct arizona *arizona);
 
 extern int arizona_of_get_named_gpio(struct arizona *arizona, const char *prop,
 				     bool mandatory);

commit 7e2d67e94ab05f70d2a73d00283f46778386ca52
Author: Richard Fitzgerald <rf@opensource.wolfsonmicro.com>
Date:   Wed May 13 16:52:25 2015 +0100

    mfd: arizona: Add stub for wm5102_patch()
    
    For the WM5102 there is a dependency in the core code on wm5102_patch()
    which only exists when CONFIG_MFD_WM5102 is defined. To avoid having
    to sprinkle #ifdefs around the code it is given an alternative empty
    stub version when CONFIG_MFD_WM5102 is deselected
    
    Signed-off-by: Richard Fitzgerald <rf@opensource.wolfsonmicro.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/arizona/core.h b/include/linux/mfd/arizona/core.h
index 847bdaf47f1d..2f434f4f79a1 100644
--- a/include/linux/mfd/arizona/core.h
+++ b/include/linux/mfd/arizona/core.h
@@ -154,7 +154,15 @@ int arizona_request_irq(struct arizona *arizona, int irq, char *name,
 void arizona_free_irq(struct arizona *arizona, int irq, void *data);
 int arizona_set_irq_wake(struct arizona *arizona, int irq, int on);
 
+#ifdef CONFIG_MFD_WM5102
 int wm5102_patch(struct arizona *arizona);
+#else
+static inline int wm5102_patch(struct arizona *arizona)
+{
+	return 0;
+}
+#endif
+
 int wm5110_patch(struct arizona *arizona);
 int wm8997_patch(struct arizona *arizona);
 

commit e6cb73410a6db70eab266f15b7e25053a45b842d
Author: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date:   Mon May 11 13:58:09 2015 +0100

    mfd: arizona: Add better support for system suspend
    
    Allow the chip to completely power off if we enter runtime suspend and
    there is no jack detection active. This is helpful for systems where
    system suspend might remove the supplies to the CODEC, without informing
    us. Note the powering off is done in runtime suspend rather than system
    suspend, because we need to hold reset until the first time DCVDD is
    powered anyway (which would be in runtime resume), and we might as well
    save the extra power.
    
    Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/arizona/core.h b/include/linux/mfd/arizona/core.h
index 16a498f48169..847bdaf47f1d 100644
--- a/include/linux/mfd/arizona/core.h
+++ b/include/linux/mfd/arizona/core.h
@@ -117,6 +117,7 @@ struct arizona {
 	int num_core_supplies;
 	struct regulator_bulk_data core_supplies[ARIZONA_MAX_CORE_SUPPLIES];
 	struct regulator *dcvdd;
+	bool has_fully_powered_off;
 
 	struct arizona_pdata pdata;
 

commit 1fc149933fd49a5b0e7738dc0853dbfbac4ae0e1
Merge: 41d5e08ea86a ea5505fabd3b
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Apr 21 09:42:58 2015 -0700

    Merge tag 'char-misc-4.1-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc
    
    Pull char/misc driver updates from Greg KH:
     "Here's the big char/misc driver patchset for 4.1-rc1.
    
      Lots of different driver subsystem updates here, nothing major, full
      details are in the shortlog.
    
      All of this has been in linux-next for a while"
    
    * tag 'char-misc-4.1-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc: (133 commits)
      mei: trace: remove unused TRACE_SYSTEM_STRING
      DTS: ARM: OMAP3-N900: Add lis3lv02d support
      Documentation: DT: lis302: update wakeup binding
      lis3lv02d: DT: add wakeup unit 2 and wakeup threshold
      lis3lv02d: DT: use s32 to support negative values
      Drivers: hv: hv_balloon: correctly handle num_pages>INT_MAX case
      Drivers: hv: hv_balloon: correctly handle val.freeram<num_pages case
      mei: replace check for connection instead of transitioning
      mei: use mei_cl_is_connected consistently
      mei: fix mei_poll operation
      hv_vmbus: Add gradually increased delay for retries in vmbus_post_msg()
      Drivers: hv: hv_balloon: survive ballooning request with num_pages=0
      Drivers: hv: hv_balloon: eliminate jumps in piecewiese linear floor function
      Drivers: hv: hv_balloon: do not online pages in offline blocks
      hv: remove the per-channel workqueue
      hv: don't schedule new works in vmbus_onoffer()/vmbus_onoffer_rescind()
      hv: run non-blocking message handlers in the dispatch tasklet
      coresight: moving to new "hwtracing" directory
      coresight-tmc: Adding a status interface to sysfs
      coresight: remove the unnecessary configuration coresight-default-sink
      ...

commit 112bdfaa525fd5993e17885861342893f15290b0
Author: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date:   Mon Feb 16 15:41:02 2015 +0000

    extcon: arizona: Deobfuscate arizona_extcon_do_magic
    
    arizona_extcon_do_magic does not lend a lot of clarity to the purpose
    of the function, and as all the registers used are described in the
    datasheet there is no need to obfuscate the code. This patch renames the
    function to arizona_extcon_hp_clamp, as it controls clamping on the
    headphone output.
    
    Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Acked-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Chanwoo Choi <cw00.choi@samsung.com>

diff --git a/include/linux/mfd/arizona/core.h b/include/linux/mfd/arizona/core.h
index 910e3aa1e965..4863548faff7 100644
--- a/include/linux/mfd/arizona/core.h
+++ b/include/linux/mfd/arizona/core.h
@@ -126,7 +126,7 @@ struct arizona {
 	struct regmap_irq_chip_data *aod_irq_chip;
 	struct regmap_irq_chip_data *irq_chip;
 
-	bool hpdet_magic;
+	bool hpdet_clamp;
 	unsigned int hp_ena;
 
 	struct mutex clk_lock;

commit e5d4ef0d731664b3fe204f4e5e87f5756e848fb1
Author: Richard Fitzgerald <rf@opensource.wolfsonmicro.com>
Date:   Sat Jan 17 15:21:22 2015 +0000

    mfd: arizona: Add support for WM8280/WM8281
    
    This adds support for the Wolfson Microelectronics WM8280 and WM8281
    codecs.
    
    Signed-off-by: Richard Fitzgerald <rf@opensource.wolfsonmicro.com>
    Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    [Lee: Minor fixup to remove potentially uninitialised variable. ]
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/arizona/core.h b/include/linux/mfd/arizona/core.h
index 910e3aa1e965..f97010576f56 100644
--- a/include/linux/mfd/arizona/core.h
+++ b/include/linux/mfd/arizona/core.h
@@ -24,6 +24,7 @@ enum arizona_type {
 	WM5102 = 1,
 	WM5110 = 2,
 	WM8997 = 3,
+	WM8280 = 4,
 };
 
 #define ARIZONA_IRQ_GP1                    0

commit d74bcaaeb66826192c9e361cbfe8fd1ffaccf74e
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Sun Nov 9 17:00:59 2014 +0100

    ASoC: wm5102: Move ultrasonic response settings lock to the driver level
    
    The wm5102 driver currently uses the snd_soc_codec mutex to protect its
    ultrasonic response settings from concurrent access. This patch moves this
    lock to the driver level. This will allow us to eventually remove the
    snd_soc_codec mutex.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Acked-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/linux/mfd/arizona/core.h b/include/linux/mfd/arizona/core.h
index f34723f7663c..910e3aa1e965 100644
--- a/include/linux/mfd/arizona/core.h
+++ b/include/linux/mfd/arizona/core.h
@@ -141,6 +141,7 @@ struct arizona {
 
 	uint16_t dac_comp_coeff;
 	uint8_t dac_comp_enabled;
+	struct mutex dac_comp_lock;
 };
 
 int arizona_clk32k_enable(struct arizona *arizona);

commit 54c72d5987ff9f3cf59529d5d4f5cf19eae3f695
Merge: 66bb0aa07797 7caa79917ad4
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Aug 7 17:17:39 2014 -0700

    Merge tag 'mfd-for-linus-3.17' of git://git.kernel.org/pub/scm/linux/kernel/git/lee/mfd
    
    Pull MFD update from Lee Jones:
     "Changes to existing drivers:
       - checkpatch fixes throughout the subsystem
       - use Regmap to handle IRQs in max77686, extcon-max77693 and
         mc13xxx-core
       - use DMA in rtsx_pcr
       - restrict building on unsupported architectures on timberdale,
         cs5535
       - SPI hardening in cros_ec_spi
       - more robust error handing in asic3, cros_ec, ab8500-debugfs,
         max77686 and pcf50633-core
       - reorder PM runtime and regulator handing during shutdown in arizona
       - enable wakeup in cros_ec_spi
       - unused variable/code clean-up in pm8921-core, cros_ec, htc-i2cpld,
         tps65912-spi, wm5110-tables and ab8500-debugfs
       - add regulator handing into suspend() in sec-core
       - remove pointless wrapper functions in extcon-max77693 and
         i2c-cros-ec-tunnel
       - use cross-architecture friendly data sizes in stmpe-i2c, arizona,
         max77686 and tps65910
       - devicetree documentation updates throughout
       - provide power management support in max77686
       - few OF clean-ups in max77686
       - use manged resources in tps6105x
    
      New drivers/supported devices:
       - add support for s2mpu02 to sec-core
       - add support for Allwinner A32 to sun6i-prcm
       - add support for Maxim 77802 in max77686
       - add support for DA9063 AD in da9063
       - new driver for Intel PMICs (generic) and specifically Crystal Cove
    
      (Re-)moved drivers ==
       - move out keyboard functionality cros_ec ==> input/keyboard/cros_ec_keyb"
    
    * tag 'mfd-for-linus-3.17' of git://git.kernel.org/pub/scm/linux/kernel/git/lee/mfd: (101 commits)
      MAINTAINERS: Update MFD repo location
      mfd: omap-usb-host: Fix improper mask use.
      mfd: arizona: Only free the CTRLIF_ERR IRQ if we requested it
      mfd: arizona: Add missing handling for ISRC3 under/overclocked
      mfd: wm5110: Add new interrupt register definitions
      mfd: arizona: Rename thermal shutdown interrupt
      mfd: wm5110: Add in the output done interrupts
      mfd: wm5110: Remove non-existant interrupts
      mfd: tps65912-spi: Remove unused variable
      mfd: htc-i2cpld: Remove unused code
      mfd: da9063: Add support for AD silicon variant
      mfd: arizona: Map MICVDD from extcon device to the Arizona core
      mfd: arizona: Add MICVDD to mapped regulators for wm8997
      mfd: max77686: Ensure device type IDs are architecture agnostic
      mfd: max77686: Add Maxim 77802 PMIC support
      mfd: tps6105x: Use managed resources when allocating memory
      mfd: wm8997-tables: Suppress 'line over 80 chars' warnings
      mfd: kempld-core: Correct a variety of checkpatch warnings
      mfd: ipaq-micro: Fix coding style errors/warnings reported by checkpatch
      mfd: si476x-cmd: Remedy checkpatch style complains
      ...

commit a486f183daf1e6c56c41740d95815b9ee19fcb47
Merge: 2fd537346756 d8df26bb57d2 27204ca8b981 2ad76541026b bedd4b1993ec
Author: Mark Brown <broonie@linaro.org>
Date:   Mon Aug 4 16:31:23 2014 +0100

    Merge remote-tracking branches 'asoc/topic/adau1977', 'asoc/topic/ak4642', 'asoc/topic/ak5386' and 'asoc/topic/arizona' into asoc-next

commit 30a2af3a320d5c0598cde08ba6e5d22a724f82e4
Author: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date:   Tue Jul 15 11:21:50 2014 +0100

    mfd: arizona: Only free the CTRLIF_ERR IRQ if we requested it
    
    We only request the control interface error IRQ if we set ctrlif_error,
    as such we should only free it in that situation. Otherwise we will
    attempt to free an IRQ we never requested and get a warning from the IRQ
    core.
    
    This patch moves the ctrlif_error variable into the arizona structure
    and checks it in all cases we free the control interface error IRQ.
    
    Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/arizona/core.h b/include/linux/mfd/arizona/core.h
index 8bc7601cca68..fdd8b7b82db5 100644
--- a/include/linux/mfd/arizona/core.h
+++ b/include/linux/mfd/arizona/core.h
@@ -132,6 +132,8 @@ struct arizona {
 	struct mutex clk_lock;
 	int clk32k_ref;
 
+	bool ctrlif_error;
+
 	struct snd_soc_dapm_context *dapm;
 };
 

commit 3215501fc90e109c7b854423e02eb05bc638b555
Author: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date:   Tue Jul 15 11:21:48 2014 +0100

    mfd: wm5110: Add new interrupt register definitions
    
    Newer versions of the IP have a lot of new interrupts and move several
    existing interrupts. This patch adds the register definitions and regmap
    hookup for these interrupts.
    
    Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/arizona/core.h b/include/linux/mfd/arizona/core.h
index 819edf5d1edf..8bc7601cca68 100644
--- a/include/linux/mfd/arizona/core.h
+++ b/include/linux/mfd/arizona/core.h
@@ -84,8 +84,25 @@ enum arizona_type {
 #define ARIZONA_IRQ_HP2L_DONE             55
 #define ARIZONA_IRQ_HP1R_DONE             56
 #define ARIZONA_IRQ_HP1L_DONE             57
-
-#define ARIZONA_NUM_IRQ                   58
+#define ARIZONA_IRQ_ISRC3_CFG_ERR         58
+#define ARIZONA_IRQ_DSP_SHARED_WR_COLL    59
+#define ARIZONA_IRQ_SPK_SHUTDOWN          60
+#define ARIZONA_IRQ_SPK1R_SHORT           61
+#define ARIZONA_IRQ_SPK1L_SHORT           62
+#define ARIZONA_IRQ_HP3R_SC_NEG           63
+#define ARIZONA_IRQ_HP3R_SC_POS           64
+#define ARIZONA_IRQ_HP3L_SC_NEG           65
+#define ARIZONA_IRQ_HP3L_SC_POS           66
+#define ARIZONA_IRQ_HP2R_SC_NEG           67
+#define ARIZONA_IRQ_HP2R_SC_POS           68
+#define ARIZONA_IRQ_HP2L_SC_NEG           69
+#define ARIZONA_IRQ_HP2L_SC_POS           70
+#define ARIZONA_IRQ_HP1R_SC_NEG           71
+#define ARIZONA_IRQ_HP1R_SC_POS           72
+#define ARIZONA_IRQ_HP1L_SC_NEG           73
+#define ARIZONA_IRQ_HP1L_SC_POS           74
+
+#define ARIZONA_NUM_IRQ                   75
 
 struct snd_soc_dapm_context;
 

commit c0fe2c5b3f730e3d56d37f7b731a5b1191a4e8bf
Author: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date:   Tue Jul 15 11:21:47 2014 +0100

    mfd: arizona: Rename thermal shutdown interrupt
    
    Newer versions of the IP introduce short circuit protection which will
    also shutdown the speaker. Rename the interrupt and associated register
    bits associated with thermal events to better fit the function and avoid
    conflict with future interrupt additions.
    
    Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/arizona/core.h b/include/linux/mfd/arizona/core.h
index 6a62fc99f399..819edf5d1edf 100644
--- a/include/linux/mfd/arizona/core.h
+++ b/include/linux/mfd/arizona/core.h
@@ -46,8 +46,8 @@ enum arizona_type {
 #define ARIZONA_IRQ_DSP_IRQ6              17
 #define ARIZONA_IRQ_DSP_IRQ7              18
 #define ARIZONA_IRQ_DSP_IRQ8              19
-#define ARIZONA_IRQ_SPK_SHUTDOWN_WARN     20
-#define ARIZONA_IRQ_SPK_SHUTDOWN          21
+#define ARIZONA_IRQ_SPK_OVERHEAT_WARN     20
+#define ARIZONA_IRQ_SPK_OVERHEAT          21
 #define ARIZONA_IRQ_MICDET                22
 #define ARIZONA_IRQ_HPDET                 23
 #define ARIZONA_IRQ_WSEQ_DONE             24

commit 3d2108dae4e1768c06718cdce19f8f0089ce310e
Author: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date:   Tue Jul 15 11:21:46 2014 +0100

    mfd: wm5110: Add in the output done interrupts
    
    wm5110 has interrupts to signal that an output has fully enabled. This
    patch adds in these interrupts although use is not made of them yet.
    
    Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/arizona/core.h b/include/linux/mfd/arizona/core.h
index 70854d892760..6a62fc99f399 100644
--- a/include/linux/mfd/arizona/core.h
+++ b/include/linux/mfd/arizona/core.h
@@ -78,8 +78,14 @@ enum arizona_type {
 #define ARIZONA_IRQ_FLL1_CLOCK_OK         49
 #define ARIZONA_IRQ_MICD_CLAMP_RISE	  50
 #define ARIZONA_IRQ_MICD_CLAMP_FALL	  51
-
-#define ARIZONA_NUM_IRQ                   52
+#define ARIZONA_IRQ_HP3R_DONE             52
+#define ARIZONA_IRQ_HP3L_DONE             53
+#define ARIZONA_IRQ_HP2R_DONE             54
+#define ARIZONA_IRQ_HP2L_DONE             55
+#define ARIZONA_IRQ_HP1R_DONE             56
+#define ARIZONA_IRQ_HP1L_DONE             57
+
+#define ARIZONA_NUM_IRQ                   58
 
 struct snd_soc_dapm_context;
 

commit bdbc736da636956a40435f5f41d2be6af544c3fb
Author: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date:   Mon Jun 2 09:50:43 2014 +0100

    mfd: arizona: Lower ARIZONA_MAX_CORE_SUPPLIES to 2
    
    There are no Arizona devices with 3 core supplies but we define a fix
    array with space for 3 core supplies. Lower the ARIZONA_MAX_CORE_SUPPLIES
    define to 2, to save a few bytes.
    
    Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/arizona/core.h b/include/linux/mfd/arizona/core.h
index 6d9371f88875..70854d892760 100644
--- a/include/linux/mfd/arizona/core.h
+++ b/include/linux/mfd/arizona/core.h
@@ -18,7 +18,7 @@
 #include <linux/regulator/consumer.h>
 #include <linux/mfd/arizona/pdata.h>
 
-#define ARIZONA_MAX_CORE_SUPPLIES 3
+#define ARIZONA_MAX_CORE_SUPPLIES 2
 
 enum arizona_type {
 	WM5102 = 1,

commit cc9e92431ee9c7fe974266e0e6533a1a68e45539
Author: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date:   Fri Jun 6 14:14:05 2014 +0100

    ASoC: wm5102: Add controls to allow shaping of ultrasonic response
    
    Add controls to allow custom shaping of the ultrasonic response. This
    custom shaping can be turned on/off at runtime, although, it should be
    noted that settings will not affect a currently open audio stream,
    they will be applied when the next audio stream is started.
    
    Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/linux/mfd/arizona/core.h b/include/linux/mfd/arizona/core.h
index 11783b511b9a..55926517d50b 100644
--- a/include/linux/mfd/arizona/core.h
+++ b/include/linux/mfd/arizona/core.h
@@ -113,6 +113,9 @@ struct arizona {
 
 	int tdm_width[ARIZONA_MAX_AIF];
 	int tdm_slots[ARIZONA_MAX_AIF];
+
+	uint16_t dac_comp_coeff;
+	uint8_t dac_comp_enabled;
 };
 
 int arizona_clk32k_enable(struct arizona *arizona);

commit ed70f3a264e9f746eaf17c96ccc4c9b7eda742dc
Author: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date:   Wed Jun 4 10:11:06 2014 +0100

    ASoC: arizona: Implement TDM support for Arizona devices
    
    Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/linux/mfd/arizona/core.h b/include/linux/mfd/arizona/core.h
index 5cf8b91ce996..11783b511b9a 100644
--- a/include/linux/mfd/arizona/core.h
+++ b/include/linux/mfd/arizona/core.h
@@ -110,6 +110,9 @@ struct arizona {
 	int clk32k_ref;
 
 	struct snd_soc_dapm_context *dapm;
+
+	int tdm_width[ARIZONA_MAX_AIF];
+	int tdm_slots[ARIZONA_MAX_AIF];
 };
 
 int arizona_clk32k_enable(struct arizona *arizona);

commit e4fcb1d6148284a10c314fce2a488cf19ce886f6
Author: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date:   Wed Apr 16 10:01:37 2014 +0100

    mfd: arizona: Factor out read of device tree GPIOs
    
    This patch factors out the reading of GPIOs for the Arizona devices
    into a helper function.
    
    Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Acked-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/linux/mfd/arizona/core.h b/include/linux/mfd/arizona/core.h
index 5cf8b91ce996..6d9371f88875 100644
--- a/include/linux/mfd/arizona/core.h
+++ b/include/linux/mfd/arizona/core.h
@@ -124,4 +124,7 @@ int wm5102_patch(struct arizona *arizona);
 int wm5110_patch(struct arizona *arizona);
 int wm8997_patch(struct arizona *arizona);
 
+extern int arizona_of_get_named_gpio(struct arizona *arizona, const char *prop,
+				     bool mandatory);
+
 #endif

commit dc7d48635dd3c3fd5360238f7d2c697ff13abe7b
Author: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date:   Thu Jun 13 09:43:29 2013 +0100

    mfd: arizona: Integrate wm8997 into Arizona mfd
    
    The wm8997 is a compact, high-performance audio hub CODEC with SLIMbus
    interfacing, for smartphones, tablets and other portable audio devices
    based on the Arizona platform.
    
    This patch integrates the wm8997 into the Arizona mfd.
    
    Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Signed-off-by: Samuel Ortiz <sameo@linux.intel.com>

diff --git a/include/linux/mfd/arizona/core.h b/include/linux/mfd/arizona/core.h
index f797bb9b8b56..5cf8b91ce996 100644
--- a/include/linux/mfd/arizona/core.h
+++ b/include/linux/mfd/arizona/core.h
@@ -23,6 +23,7 @@
 enum arizona_type {
 	WM5102 = 1,
 	WM5110 = 2,
+	WM8997 = 3,
 };
 
 #define ARIZONA_IRQ_GP1                    0
@@ -121,5 +122,6 @@ int arizona_set_irq_wake(struct arizona *arizona, int irq, int on);
 
 int wm5102_patch(struct arizona *arizona);
 int wm5110_patch(struct arizona *arizona);
+int wm8997_patch(struct arizona *arizona);
 
 #endif

commit 5927467d0ca274bc3b8eed9fd5db964bbde56e1c
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Tue Apr 23 19:44:16 2013 +0100

    mfd: arizona: Support use of external DCVDD
    
    When the device is used with an external DCVDD supply instead of the
    internal LDO1 then an extra step is required when suspending and resuming
    the device.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/linux/mfd/arizona/core.h b/include/linux/mfd/arizona/core.h
index cc281368dc55..f797bb9b8b56 100644
--- a/include/linux/mfd/arizona/core.h
+++ b/include/linux/mfd/arizona/core.h
@@ -95,6 +95,8 @@ struct arizona {
 
 	struct arizona_pdata pdata;
 
+	unsigned int external_dcvdd:1;
+
 	int irq;
 	struct irq_domain *virq;
 	struct regmap_irq_chip_data *aod_irq_chip;

commit f607e31ce3963327f749b56c65dfec2642aa623c
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Fri Feb 22 18:36:53 2013 +0000

    ASoC: arizona: Fix interaction between headphone outputs and identification
    
    Running HPDET while the headphone outputs are enabled can disrupt the
    operation of HPDET. In order to avoid this HPDET needs to disable the
    headphone outputs and ASoC needs to not enable them while HPDET is
    running.
    
    Do the ASoC side of this by storing the enable state in the core driver
    structure and only writing to the device if a flag indicating that the
    accessory detection side is in a state where it can have the headphone
    output stage enabled.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/linux/mfd/arizona/core.h b/include/linux/mfd/arizona/core.h
index a710255528d7..cc281368dc55 100644
--- a/include/linux/mfd/arizona/core.h
+++ b/include/linux/mfd/arizona/core.h
@@ -100,6 +100,9 @@ struct arizona {
 	struct regmap_irq_chip_data *aod_irq_chip;
 	struct regmap_irq_chip_data *irq_chip;
 
+	bool hpdet_magic;
+	unsigned int hp_ena;
+
 	struct mutex clk_lock;
 	int clk32k_ref;
 

commit dab63eb25ced7539a51b8f4218f7b6b56d34df22
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Fri Jan 11 08:55:36 2013 +0900

    extcon: arizona: Use microphone clamp function if available
    
    Newer Arizona devices include a microphone clamp function which is tied to
    jack detect. Activate this feature when present in order to ensure best
    performance of the subsystem.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Myungjoo Ham <myungjoo.ham@samsung.com>

diff --git a/include/linux/mfd/arizona/core.h b/include/linux/mfd/arizona/core.h
index a580363a7d29..a710255528d7 100644
--- a/include/linux/mfd/arizona/core.h
+++ b/include/linux/mfd/arizona/core.h
@@ -75,8 +75,10 @@ enum arizona_type {
 #define ARIZONA_IRQ_DCS_HP_DONE           47
 #define ARIZONA_IRQ_FLL2_CLOCK_OK         48
 #define ARIZONA_IRQ_FLL1_CLOCK_OK         49
+#define ARIZONA_IRQ_MICD_CLAMP_RISE	  50
+#define ARIZONA_IRQ_MICD_CLAMP_FALL	  51
 
-#define ARIZONA_NUM_IRQ                   50
+#define ARIZONA_NUM_IRQ                   52
 
 struct snd_soc_dapm_context;
 

commit b951b523ea45d5717377ce2216afe98440001660
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon Nov 26 21:11:10 2012 +0000

    mfd: arizona: Allow the CODEC DAPM context to be accessed elsewhere
    
    Some other device functions need to integrate with signal sources in the
    audio portion (primarily for haptics) so allow CODEC to export the DAPM
    context by pointing to it from the core driver.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/linux/mfd/arizona/core.h b/include/linux/mfd/arizona/core.h
index dd231ac0bb1f..a580363a7d29 100644
--- a/include/linux/mfd/arizona/core.h
+++ b/include/linux/mfd/arizona/core.h
@@ -78,6 +78,8 @@ enum arizona_type {
 
 #define ARIZONA_NUM_IRQ                   50
 
+struct snd_soc_dapm_context;
+
 struct arizona {
 	struct regmap *regmap;
 	struct device *dev;
@@ -98,6 +100,8 @@ struct arizona {
 
 	struct mutex clk_lock;
 	int clk32k_ref;
+
+	struct snd_soc_dapm_context *dapm;
 };
 
 int arizona_clk32k_enable(struct arizona *arizona);

commit e102befe7a254f7b827fecc19eba0c5af03d1bf3
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Tue Jul 10 12:37:58 2012 +0100

    mfd: Initial support for the WM5110
    
    The WM5110 is a highly-integrated low-power audio system for smartphones,
    tablets and other portable audio devices. It combines an advanced DSP
    feature set with a flexible, high-performance audio hub CODEC.
    
    The support is based on the Arizona core driver.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Samuel Ortiz <sameo@linux.intel.com>

diff --git a/include/linux/mfd/arizona/core.h b/include/linux/mfd/arizona/core.h
index 3ef32b4c1136..dd231ac0bb1f 100644
--- a/include/linux/mfd/arizona/core.h
+++ b/include/linux/mfd/arizona/core.h
@@ -22,6 +22,7 @@
 
 enum arizona_type {
 	WM5102 = 1,
+	WM5110 = 2,
 };
 
 #define ARIZONA_IRQ_GP1                    0
@@ -33,40 +34,49 @@ enum arizona_type {
 #define ARIZONA_IRQ_JD_FALL                6
 #define ARIZONA_IRQ_JD_RISE                7
 #define ARIZONA_IRQ_DSP1_RAM_RDY           8
-#define ARIZONA_IRQ_DSP_IRQ1               9
-#define ARIZONA_IRQ_DSP_IRQ2              10
-#define ARIZONA_IRQ_SPK_SHUTDOWN_WARN     11
-#define ARIZONA_IRQ_SPK_SHUTDOWN          12
-#define ARIZONA_IRQ_MICDET                13
-#define ARIZONA_IRQ_HPDET                 14
-#define ARIZONA_IRQ_WSEQ_DONE             15
-#define ARIZONA_IRQ_DRC2_SIG_DET          16
-#define ARIZONA_IRQ_DRC1_SIG_DET          17
-#define ARIZONA_IRQ_ASRC2_LOCK            18
-#define ARIZONA_IRQ_ASRC1_LOCK            19
-#define ARIZONA_IRQ_UNDERCLOCKED          20
-#define ARIZONA_IRQ_OVERCLOCKED           21
-#define ARIZONA_IRQ_FLL2_LOCK             22
-#define ARIZONA_IRQ_FLL1_LOCK             23
-#define ARIZONA_IRQ_CLKGEN_ERR            24
-#define ARIZONA_IRQ_CLKGEN_ERR_ASYNC      25
-#define ARIZONA_IRQ_ASRC_CFG_ERR          26
-#define ARIZONA_IRQ_AIF3_ERR              27
-#define ARIZONA_IRQ_AIF2_ERR              28
-#define ARIZONA_IRQ_AIF1_ERR              29
-#define ARIZONA_IRQ_CTRLIF_ERR            30
-#define ARIZONA_IRQ_MIXER_DROPPED_SAMPLES 31
-#define ARIZONA_IRQ_ASYNC_CLK_ENA_LOW     32
-#define ARIZONA_IRQ_SYSCLK_ENA_LOW        33
-#define ARIZONA_IRQ_ISRC1_CFG_ERR         34
-#define ARIZONA_IRQ_ISRC2_CFG_ERR         35
-#define ARIZONA_IRQ_BOOT_DONE             36
-#define ARIZONA_IRQ_DCS_DAC_DONE          37
-#define ARIZONA_IRQ_DCS_HP_DONE           38
-#define ARIZONA_IRQ_FLL2_CLOCK_OK         39
-#define ARIZONA_IRQ_FLL1_CLOCK_OK         40
-
-#define ARIZONA_NUM_IRQ                   41
+#define ARIZONA_IRQ_DSP2_RAM_RDY           9
+#define ARIZONA_IRQ_DSP3_RAM_RDY          10
+#define ARIZONA_IRQ_DSP4_RAM_RDY          11
+#define ARIZONA_IRQ_DSP_IRQ1              12
+#define ARIZONA_IRQ_DSP_IRQ2              13
+#define ARIZONA_IRQ_DSP_IRQ3              14
+#define ARIZONA_IRQ_DSP_IRQ4              15
+#define ARIZONA_IRQ_DSP_IRQ5              16
+#define ARIZONA_IRQ_DSP_IRQ6              17
+#define ARIZONA_IRQ_DSP_IRQ7              18
+#define ARIZONA_IRQ_DSP_IRQ8              19
+#define ARIZONA_IRQ_SPK_SHUTDOWN_WARN     20
+#define ARIZONA_IRQ_SPK_SHUTDOWN          21
+#define ARIZONA_IRQ_MICDET                22
+#define ARIZONA_IRQ_HPDET                 23
+#define ARIZONA_IRQ_WSEQ_DONE             24
+#define ARIZONA_IRQ_DRC2_SIG_DET          25
+#define ARIZONA_IRQ_DRC1_SIG_DET          26
+#define ARIZONA_IRQ_ASRC2_LOCK            27
+#define ARIZONA_IRQ_ASRC1_LOCK            28
+#define ARIZONA_IRQ_UNDERCLOCKED          29
+#define ARIZONA_IRQ_OVERCLOCKED           30
+#define ARIZONA_IRQ_FLL2_LOCK             31
+#define ARIZONA_IRQ_FLL1_LOCK             32
+#define ARIZONA_IRQ_CLKGEN_ERR            33
+#define ARIZONA_IRQ_CLKGEN_ERR_ASYNC      34
+#define ARIZONA_IRQ_ASRC_CFG_ERR          35
+#define ARIZONA_IRQ_AIF3_ERR              36
+#define ARIZONA_IRQ_AIF2_ERR              37
+#define ARIZONA_IRQ_AIF1_ERR              38
+#define ARIZONA_IRQ_CTRLIF_ERR            39
+#define ARIZONA_IRQ_MIXER_DROPPED_SAMPLES 40
+#define ARIZONA_IRQ_ASYNC_CLK_ENA_LOW     41
+#define ARIZONA_IRQ_SYSCLK_ENA_LOW        42
+#define ARIZONA_IRQ_ISRC1_CFG_ERR         43
+#define ARIZONA_IRQ_ISRC2_CFG_ERR         44
+#define ARIZONA_IRQ_BOOT_DONE             45
+#define ARIZONA_IRQ_DCS_DAC_DONE          46
+#define ARIZONA_IRQ_DCS_HP_DONE           47
+#define ARIZONA_IRQ_FLL2_CLOCK_OK         48
+#define ARIZONA_IRQ_FLL1_CLOCK_OK         49
+
+#define ARIZONA_NUM_IRQ                   50
 
 struct arizona {
 	struct regmap *regmap;
@@ -99,5 +109,6 @@ void arizona_free_irq(struct arizona *arizona, int irq, void *data);
 int arizona_set_irq_wake(struct arizona *arizona, int irq, int on);
 
 int wm5102_patch(struct arizona *arizona);
+int wm5110_patch(struct arizona *arizona);
 
 #endif

commit 59db96913c9d94fe74002df494eb80e4a5ca4087
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon Jul 9 00:31:36 2012 +0200

    mfd: Move arizona digital core supply management to the regulator API
    
    Rather than open coding the enable GPIO control in the MFD core use the
    API to push the management on to the regulator driver. The immediate
    advantage is slight for most systems but this will in future allow device
    configurations where an external regulator is used for DCVDD.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Samuel Ortiz <sameo@linux.intel.com>

diff --git a/include/linux/mfd/arizona/core.h b/include/linux/mfd/arizona/core.h
index 0157d845c2ff..3ef32b4c1136 100644
--- a/include/linux/mfd/arizona/core.h
+++ b/include/linux/mfd/arizona/core.h
@@ -77,6 +77,7 @@ struct arizona {
 
 	int num_core_supplies;
 	struct regulator_bulk_data core_supplies[ARIZONA_MAX_CORE_SUPPLIES];
+	struct regulator *dcvdd;
 
 	struct arizona_pdata pdata;
 

commit 3cc72986947501a6a8fd12330e0963b59ed2f964
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Tue Jun 19 16:31:53 2012 +0100

    mfd: arizona: Core driver
    
    Several forthcoming Wolfson devices are based on a common platform
    known as Arizona allowing a great deal of reuse of driver code. This
    patch adds core support for these devices.
    
    In order to handle systems which do not use the generic clock API a
    simple wrapper for the 32kHz clock domain in the devices is provided.
    Once the generic clock API is widely available this code will be moved
    over to use that.
    
    For simplicity some WM5102 specific code is included in the core driver,
    the effort involved in splitting the device out isn't worth it.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/linux/mfd/arizona/core.h b/include/linux/mfd/arizona/core.h
new file mode 100644
index 000000000000..0157d845c2ff
--- /dev/null
+++ b/include/linux/mfd/arizona/core.h
@@ -0,0 +1,102 @@
+/*
+ * Arizona MFD internals
+ *
+ * Copyright 2012 Wolfson Microelectronics plc
+ *
+ * Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+
+#ifndef _WM_ARIZONA_CORE_H
+#define _WM_ARIZONA_CORE_H
+
+#include <linux/interrupt.h>
+#include <linux/regmap.h>
+#include <linux/regulator/consumer.h>
+#include <linux/mfd/arizona/pdata.h>
+
+#define ARIZONA_MAX_CORE_SUPPLIES 3
+
+enum arizona_type {
+	WM5102 = 1,
+};
+
+#define ARIZONA_IRQ_GP1                    0
+#define ARIZONA_IRQ_GP2                    1
+#define ARIZONA_IRQ_GP3                    2
+#define ARIZONA_IRQ_GP4                    3
+#define ARIZONA_IRQ_GP5_FALL               4
+#define ARIZONA_IRQ_GP5_RISE               5
+#define ARIZONA_IRQ_JD_FALL                6
+#define ARIZONA_IRQ_JD_RISE                7
+#define ARIZONA_IRQ_DSP1_RAM_RDY           8
+#define ARIZONA_IRQ_DSP_IRQ1               9
+#define ARIZONA_IRQ_DSP_IRQ2              10
+#define ARIZONA_IRQ_SPK_SHUTDOWN_WARN     11
+#define ARIZONA_IRQ_SPK_SHUTDOWN          12
+#define ARIZONA_IRQ_MICDET                13
+#define ARIZONA_IRQ_HPDET                 14
+#define ARIZONA_IRQ_WSEQ_DONE             15
+#define ARIZONA_IRQ_DRC2_SIG_DET          16
+#define ARIZONA_IRQ_DRC1_SIG_DET          17
+#define ARIZONA_IRQ_ASRC2_LOCK            18
+#define ARIZONA_IRQ_ASRC1_LOCK            19
+#define ARIZONA_IRQ_UNDERCLOCKED          20
+#define ARIZONA_IRQ_OVERCLOCKED           21
+#define ARIZONA_IRQ_FLL2_LOCK             22
+#define ARIZONA_IRQ_FLL1_LOCK             23
+#define ARIZONA_IRQ_CLKGEN_ERR            24
+#define ARIZONA_IRQ_CLKGEN_ERR_ASYNC      25
+#define ARIZONA_IRQ_ASRC_CFG_ERR          26
+#define ARIZONA_IRQ_AIF3_ERR              27
+#define ARIZONA_IRQ_AIF2_ERR              28
+#define ARIZONA_IRQ_AIF1_ERR              29
+#define ARIZONA_IRQ_CTRLIF_ERR            30
+#define ARIZONA_IRQ_MIXER_DROPPED_SAMPLES 31
+#define ARIZONA_IRQ_ASYNC_CLK_ENA_LOW     32
+#define ARIZONA_IRQ_SYSCLK_ENA_LOW        33
+#define ARIZONA_IRQ_ISRC1_CFG_ERR         34
+#define ARIZONA_IRQ_ISRC2_CFG_ERR         35
+#define ARIZONA_IRQ_BOOT_DONE             36
+#define ARIZONA_IRQ_DCS_DAC_DONE          37
+#define ARIZONA_IRQ_DCS_HP_DONE           38
+#define ARIZONA_IRQ_FLL2_CLOCK_OK         39
+#define ARIZONA_IRQ_FLL1_CLOCK_OK         40
+
+#define ARIZONA_NUM_IRQ                   41
+
+struct arizona {
+	struct regmap *regmap;
+	struct device *dev;
+
+	enum arizona_type type;
+	unsigned int rev;
+
+	int num_core_supplies;
+	struct regulator_bulk_data core_supplies[ARIZONA_MAX_CORE_SUPPLIES];
+
+	struct arizona_pdata pdata;
+
+	int irq;
+	struct irq_domain *virq;
+	struct regmap_irq_chip_data *aod_irq_chip;
+	struct regmap_irq_chip_data *irq_chip;
+
+	struct mutex clk_lock;
+	int clk32k_ref;
+};
+
+int arizona_clk32k_enable(struct arizona *arizona);
+int arizona_clk32k_disable(struct arizona *arizona);
+
+int arizona_request_irq(struct arizona *arizona, int irq, char *name,
+			irq_handler_t handler, void *data);
+void arizona_free_irq(struct arizona *arizona, int irq, void *data);
+int arizona_set_irq_wake(struct arizona *arizona, int irq, int on);
+
+int wm5102_patch(struct arizona *arizona);
+
+#endif
