commit d2912cb15bdda8ba4a5dd73396ad62641af2f520
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Tue Jun 4 10:11:33 2019 +0200

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 500
    
    Based on 2 normalized pattern(s):
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license version 2 as
      published by the free software foundation
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license version 2 as
      published by the free software foundation #
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-only
    
    has been chosen to replace the boilerplate/reference in 4122 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Enrico Weigelt <info@metux.net>
    Reviewed-by: Kate Stewart <kstewart@linuxfoundation.org>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190604081206.933168790@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/include/linux/mfd/arizona/pdata.h b/include/linux/mfd/arizona/pdata.h
index 0013075d4cda..2d13bbea4f3a 100644
--- a/include/linux/mfd/arizona/pdata.h
+++ b/include/linux/mfd/arizona/pdata.h
@@ -1,11 +1,8 @@
+/* SPDX-License-Identifier: GPL-2.0-only */
 /*
  * Platform data for Arizona devices
  *
  * Copyright 2012 Wolfson Microelectronics. PLC.
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License version 2 as
- * published by the Free Software Foundation.
  */
 
 #ifndef _ARIZONA_PDATA_H

commit c18604660ad02324dfc21de5dfd0c8d15e9070a5
Author: Charles Keepax <ckeepax@opensource.cirrus.com>
Date:   Mon Mar 12 15:52:00 2018 +0000

    mfd: arizona: Update reset pin to use GPIOD
    
    Now GPIOD has support for both pdata systems and for non-standard DT
    bindings the Arizona reset GPIO can be converted to use it. Worth
    noting gpiod_set_raw_value_cansleep is used to match the behaviour
    of the old GPIOs. This is because the part is fairly widely used and
    it is unknown how many DTs are correctly setting active low through
    device tree, so to avoid breaking any existing users it is best to
    match the previous behaviour.
    
    Signed-off-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/arizona/pdata.h b/include/linux/mfd/arizona/pdata.h
index f72dc53848d7..0013075d4cda 100644
--- a/include/linux/mfd/arizona/pdata.h
+++ b/include/linux/mfd/arizona/pdata.h
@@ -56,6 +56,7 @@
 #define ARIZONA_MAX_PDM_SPK 2
 
 struct regulator_init_data;
+struct gpio_desc;
 
 struct arizona_micbias {
 	int mV;                    /** Regulated voltage */
@@ -77,7 +78,7 @@ struct arizona_micd_range {
 };
 
 struct arizona_pdata {
-	int reset;      /** GPIO controlling /RESET, if any */
+	struct gpio_desc *reset;      /** GPIO controlling /RESET, if any */
 
 	/** Regulator configuration for MICVDD */
 	struct arizona_micsupp_pdata micvdd;

commit 85e7dd3f871b988702973c80d9ef128e10dd3dad
Author: Charles Keepax <ckeepax@opensource.cirrus.com>
Date:   Mon Sep 4 16:41:53 2017 +0100

    ASoC: arizona: Add support for setting the output volume limits
    
    The output volume limits allow signals to be limited to specific levels
    appropriate for the hardware attached. As this is a property of the
    hardware itself these will be configured through device tree.
    
    Signed-off-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Acked-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/linux/mfd/arizona/pdata.h b/include/linux/mfd/arizona/pdata.h
index bfeecf179895..f72dc53848d7 100644
--- a/include/linux/mfd/arizona/pdata.h
+++ b/include/linux/mfd/arizona/pdata.h
@@ -174,6 +174,9 @@ struct arizona_pdata {
 	/** Mode for outputs */
 	int out_mono[ARIZONA_MAX_OUTPUT];
 
+	/** Limit output volumes */
+	unsigned int out_vol_limit[2 * ARIZONA_MAX_OUTPUT];
+
 	/** PDM speaker mute setting */
 	unsigned int spk_mute[ARIZONA_MAX_PDM_SPK];
 

commit aaa84e6a0399df374634c42590e644a698fcc3ff
Author: Richard Fitzgerald <rf@opensource.wolfsonmicro.com>
Date:   Tue Apr 18 11:43:52 2017 +0100

    regulator: arizona-ldo1: Move pdata into a separate structure
    
    In preparation for sharing this driver with Madera, move the pdata
    for the LDO1 regulator out of struct arizona_pdata into a dedicated
    pdata struct for this driver. As a result the code in
    arizona_ldo1_of_get_pdata() can be made independent of struct arizona.
    
    This patch also updates the definition of struct arizona_pdata and
    the use of this pdata in mach-crag6410-module.c
    
    Signed-off-by: Richard Fitzgerald <rf@opensource.wolfsonmicro.com>
    Acked-by: Krzysztof Kozlowski <krzk@kernel.org>
    Acked-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/linux/mfd/arizona/pdata.h b/include/linux/mfd/arizona/pdata.h
index 43e875f9850c..bfeecf179895 100644
--- a/include/linux/mfd/arizona/pdata.h
+++ b/include/linux/mfd/arizona/pdata.h
@@ -12,6 +12,7 @@
 #define _ARIZONA_PDATA_H
 
 #include <dt-bindings/mfd/arizona.h>
+#include <linux/regulator/arizona-ldo1.h>
 #include <linux/regulator/arizona-micsupp.h>
 
 #define ARIZONA_GPN_DIR_MASK                     0x8000  /* GPN_DIR */
@@ -77,13 +78,12 @@ struct arizona_micd_range {
 
 struct arizona_pdata {
 	int reset;      /** GPIO controlling /RESET, if any */
-	int ldoena;     /** GPIO controlling LODENA, if any */
 
 	/** Regulator configuration for MICVDD */
 	struct arizona_micsupp_pdata micvdd;
 
 	/** Regulator configuration for LDO1 */
-	struct regulator_init_data *ldo1;
+	struct arizona_ldo1_pdata ldo1;
 
 	/** If a direct 32kHz clock is provided on an MCLK specify it here */
 	int clk32k_src;

commit 22161f3eb65dc29434325736c4d780908fe3bf6a
Author: Richard Fitzgerald <rf@opensource.wolfsonmicro.com>
Date:   Tue Apr 18 11:43:49 2017 +0100

    regulator: arizona-micsupp: Move pdata into a separate structure
    
    In preparation for sharing this driver with Madera, move the pdata
    for the micsupp regulator out of struct arizona_pdata into a dedicated
    pdata struct for this driver. As a result the code in
    arizona_micsupp_of_get_pdata() can be made independent of struct arizona.
    
    This patch also updates the definition of struct arizona_pdata and
    the use of this pdata in mach-crag6410-module.c
    
    Signed-off-by: Richard Fitzgerald <rf@opensource.wolfsonmicro.com>
    Acked-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/linux/mfd/arizona/pdata.h b/include/linux/mfd/arizona/pdata.h
index 64faeeff698c..43e875f9850c 100644
--- a/include/linux/mfd/arizona/pdata.h
+++ b/include/linux/mfd/arizona/pdata.h
@@ -12,6 +12,7 @@
 #define _ARIZONA_PDATA_H
 
 #include <dt-bindings/mfd/arizona.h>
+#include <linux/regulator/arizona-micsupp.h>
 
 #define ARIZONA_GPN_DIR_MASK                     0x8000  /* GPN_DIR */
 #define ARIZONA_GPN_DIR_SHIFT                        15  /* GPN_DIR */
@@ -79,7 +80,7 @@ struct arizona_pdata {
 	int ldoena;     /** GPIO controlling LODENA, if any */
 
 	/** Regulator configuration for MICVDD */
-	struct regulator_init_data *micvdd;
+	struct arizona_micsupp_pdata micvdd;
 
 	/** Regulator configuration for LDO1 */
 	struct regulator_init_data *ldo1;

commit f199d39349beabcb1a374cb02e0845a0ae84f3fd
Author: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date:   Mon Dec 14 10:19:11 2015 +0000

    mfd: arizona: Add device tree binding to specify mono outputs
    
    Add device tree bindings to support specifying outputs from the chip as
    mono outputs. Whilst we are doing it change the out_mono pdata from a
    bool to an int, because Sparse gets upset about using ARRAY_SIZE on
    bools.
    
    Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/arizona/pdata.h b/include/linux/mfd/arizona/pdata.h
index 57b45caaea80..64faeeff698c 100644
--- a/include/linux/mfd/arizona/pdata.h
+++ b/include/linux/mfd/arizona/pdata.h
@@ -171,7 +171,7 @@ struct arizona_pdata {
 	int inmode[ARIZONA_MAX_INPUT];
 
 	/** Mode for outputs */
-	bool out_mono[ARIZONA_MAX_OUTPUT];
+	int out_mono[ARIZONA_MAX_OUTPUT];
 
 	/** PDM speaker mute setting */
 	unsigned int spk_mute[ARIZONA_MAX_PDM_SPK];

commit 1ce376897e02e623ba357594604ca655df61053b
Author: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date:   Wed Sep 16 10:42:14 2015 +0100

    mfd: arizona: Add register bits for general purpose switch
    
    The switch is typically used in conjunction with the MICDET clamp in
    order to suppress pops and clicks associated with jack insertion.
    
    Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Acked-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Chanwoo Choi <cw00.choi@samsung.com>

diff --git a/include/linux/mfd/arizona/pdata.h b/include/linux/mfd/arizona/pdata.h
index 92f31ffaf866..57b45caaea80 100644
--- a/include/linux/mfd/arizona/pdata.h
+++ b/include/linux/mfd/arizona/pdata.h
@@ -184,6 +184,9 @@ struct arizona_pdata {
 
 	/** GPIO for primary IRQ (used for edge triggered emulation) */
 	int irq_gpio;
+
+	/** General purpose switch control */
+	unsigned int gpsw;
 };
 
 #endif

commit e76e397a7f99bffbd91fb21f96370cbb165b5bcd
Author: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date:   Wed Sep 16 10:42:13 2015 +0100

    mfd: arizona: Add registers for ADC microphone detection
    
    The newer devices support using a software comparison to determine
    whether a 3/4 pole jack is present. Add the registers necessary for
    this.
    
    Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Acked-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Chanwoo Choi <cw00.choi@samsung.com>

diff --git a/include/linux/mfd/arizona/pdata.h b/include/linux/mfd/arizona/pdata.h
index 1dc385850ba2..92f31ffaf866 100644
--- a/include/linux/mfd/arizona/pdata.h
+++ b/include/linux/mfd/arizona/pdata.h
@@ -124,6 +124,9 @@ struct arizona_pdata {
 	/** Channel to use for headphone detection */
 	unsigned int hpdet_channel;
 
+	/** Use software comparison to determine mic presence */
+	bool micd_software_compare;
+
 	/** Extra debounce timeout used during initial mic detection (ms) */
 	unsigned int micd_detect_debounce;
 

commit 6887b042c52ee05a405bae859f410c2f63b45339
Author: Richard Fitzgerald <rf@opensource.wolfsonmicro.com>
Date:   Fri Jul 3 16:16:35 2015 +0100

    mfd: arizona: Add support for WM8998 and WM1814
    
    Signed-off-by: Richard Fitzgerald <rf@opensource.wolfsonmicro.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/arizona/pdata.h b/include/linux/mfd/arizona/pdata.h
index dc3c81252de7..1dc385850ba2 100644
--- a/include/linux/mfd/arizona/pdata.h
+++ b/include/linux/mfd/arizona/pdata.h
@@ -162,6 +162,8 @@ struct arizona_pdata {
 	/**
 	 * Mode of input structures
 	 * One of the ARIZONA_INMODE_xxx values
+	 * wm5102/wm5110/wm8280/wm8997: [0]=IN1 [1]=IN2 [2]=IN3 [3]=IN4
+	 * wm8998: [0]=IN1A [1]=IN2A [2]=IN1B [3]=IN2B
 	 */
 	int inmode[ARIZONA_MAX_INPUT];
 

commit 00b6e9ff01a8f41816060b2f70752f66f100fecd
Author: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date:   Fri Jun 19 11:24:27 2015 +0100

    mfd: arizona: Update several pdata members to unsigned
    
    Device tree and ACPI primarily deal with unsigned ints, many of the
    pdata members in the Arizona driver are signed ints but are only ever
    assigned positive values. Changing these pdata fields to unsigned ints
    avoids us having to choose between overly verbose code and Sparse
    warnings.
    
    Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/arizona/pdata.h b/include/linux/mfd/arizona/pdata.h
index 43db4faad143..dc3c81252de7 100644
--- a/include/linux/mfd/arizona/pdata.h
+++ b/include/linux/mfd/arizona/pdata.h
@@ -101,7 +101,7 @@ struct arizona_pdata {
 	 * useful for systems where and I2S bus with multiple data
 	 * lines is mastered.
 	 */
-	int max_channels_clocked[ARIZONA_MAX_AIF];
+	unsigned int max_channels_clocked[ARIZONA_MAX_AIF];
 
 	/** GPIO5 is used for jack detection */
 	bool jd_gpio5;
@@ -125,22 +125,22 @@ struct arizona_pdata {
 	unsigned int hpdet_channel;
 
 	/** Extra debounce timeout used during initial mic detection (ms) */
-	int micd_detect_debounce;
+	unsigned int micd_detect_debounce;
 
 	/** GPIO for mic detection polarity */
 	int micd_pol_gpio;
 
 	/** Mic detect ramp rate */
-	int micd_bias_start_time;
+	unsigned int micd_bias_start_time;
 
 	/** Mic detect sample rate */
-	int micd_rate;
+	unsigned int micd_rate;
 
 	/** Mic detect debounce level */
-	int micd_dbtime;
+	unsigned int micd_dbtime;
 
 	/** Mic detect timeout (ms) */
-	int micd_timeout;
+	unsigned int micd_timeout;
 
 	/** Force MICBIAS on for mic detect */
 	bool micd_force_micbias;

commit d87823813fe498fdd47894bd28e460a9dee8d771
Merge: e382608254e0 3dc196eae1db
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Jun 26 14:51:15 2015 -0700

    Merge tag 'char-misc-4.2-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc
    
    Pull char/misc driver updates from Greg KH:
     "Here's the big char/misc driver pull request for 4.2-rc1.
    
      Lots of mei, extcon, coresight, uio, mic, and other driver updates in
      here.  Full details in the shortlog.  All of these have been in
      linux-next for some time with no reported problems"
    
    * tag 'char-misc-4.2-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc: (176 commits)
      mei: me: wait for power gating exit confirmation
      mei: reset flow control on the last client disconnection
      MAINTAINERS: mei: add mei_cl_bus.h to maintained file list
      misc: sram: sort and clean up included headers
      misc: sram: move reserved block logic out of probe function
      misc: sram: add private struct device and virt_base members
      misc: sram: report correct SRAM pool size
      misc: sram: bump error message level on unclean driver unbinding
      misc: sram: fix device node reference leak on error
      misc: sram: fix enabled clock leak on error path
      misc: mic: Fix reported static checker warning
      misc: mic: Fix randconfig build error by including errno.h
      uio: pruss: Drop depends on ARCH_DAVINCI_DA850 from config
      uio: pruss: Add CONFIG_HAS_IOMEM dependence
      uio: pruss: Include <linux/sizes.h>
      extcon: Redefine the unique id of supported external connectors without 'enum extcon' type
      char:xilinx_hwicap:buffer_icap - change 1/0 to true/false for bool type variable in function buffer_icap_set_configuration().
      Drivers: hv: vmbus: Allocate ring buffer memory in NUMA aware fashion
      parport: check exclusive access before register
      w1: use correct lock on error in w1_seq_show()
      ...

commit fc027d138b79537e5353f3d3bad2bcaac787cd17
Author: Richard Fitzgerald <rf@opensource.wolfsonmicro.com>
Date:   Fri May 1 16:15:12 2015 +0100

    mfd: arizona: Split INx_MODE into two fields
    
    Later arizona silicon has the single/differential selector
    in a different register, and IN1_MODE only selects between
    analogue or digital. Prepare for this by splitting the
    INx_MODE definition into two fields.
    
    Signed-off-by: Richard Fitzgerald <rf@opensource.wolfsonmicro.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/arizona/pdata.h b/include/linux/mfd/arizona/pdata.h
index 1789cb0f4f17..f6722677e6d0 100644
--- a/include/linux/mfd/arizona/pdata.h
+++ b/include/linux/mfd/arizona/pdata.h
@@ -156,7 +156,10 @@ struct arizona_pdata {
 	/** MICBIAS configurations */
 	struct arizona_micbias micbias[ARIZONA_MAX_MICBIAS];
 
-	/** Mode of input structures */
+	/**
+	 * Mode of input structures
+	 * One of the ARIZONA_INMODE_xxx values
+	 */
 	int inmode[ARIZONA_MAX_INPUT];
 
 	/** Mode for outputs */

commit 9e86b2ad4c11fd52ee8133abce7a29e0b32d29a7
Author: Inha Song <ideal.song@samsung.com>
Date:   Mon May 4 13:42:13 2015 +0900

    extcon: arizona: Add support for select accessory detect mode when headphone detection
    
    This patch add support for select accessory detect mode to HPDETL or HPDETR.
    Arizona provides a headphone detection circuit on the HPDETL and HPDETR pins
    to measure the impedance of an external load connected to the headphone.
    
    Depending on board design, headphone detect pins can change to HPDETR or HPDETL.
    
    Signed-off-by: Inha Song <ideal.song@samsung.com>
    Acked-by: Lee Jones <lee@kernel.org>
    Acked-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Signed-off-by: Chanwoo Choi <cw00.choi@samsung.com>

diff --git a/include/linux/mfd/arizona/pdata.h b/include/linux/mfd/arizona/pdata.h
index 1789cb0f4f17..aa5c48b06755 100644
--- a/include/linux/mfd/arizona/pdata.h
+++ b/include/linux/mfd/arizona/pdata.h
@@ -121,6 +121,9 @@ struct arizona_pdata {
 	/** GPIO used for mic isolation with HPDET */
 	int hpdet_id_gpio;
 
+	/** Channel to use for headphone detection */
+	unsigned int hpdet_channel;
+
 	/** Extra debounce timeout used during initial mic detection (ms) */
 	int micd_detect_debounce;
 

commit 6e00ff079354ee72fe95cb61a3993962074a2592
Author: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date:   Sun Mar 29 12:45:42 2015 +0100

    mfd: arizona: Correct type of gpio_defaults
    
    gpio_defaults needs to be specified as an unsigned int rather than an
    int, because the intention of the DT binding is that all out of range
    values for a 16-bit register will cause the defaults to be used,
    however, if gpio_defaults is an int then values that are larger than
    INT_MAX will become negative numbers and be written out directly to the
    hardware. As no where in the code replies on gpio_defaults being an int,
    the simplest fix is to just change it to unsigned.
    
    Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/arizona/pdata.h b/include/linux/mfd/arizona/pdata.h
index 48fe31356605..1789cb0f4f17 100644
--- a/include/linux/mfd/arizona/pdata.h
+++ b/include/linux/mfd/arizona/pdata.h
@@ -94,7 +94,7 @@ struct arizona_pdata {
 	int gpio_base;
 
 	/** Pin state for GPIO pins */
-	int gpio_defaults[ARIZONA_MAX_GPIO];
+	unsigned int gpio_defaults[ARIZONA_MAX_GPIO];
 
 	/**
 	 * Maximum number of channels clocks will be generated for,

commit 49010336290f4e3e4249c43bff1a1ff065c8f94e
Author: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date:   Wed Feb 25 15:37:13 2015 +0000

    mfd: arizona: Move useful defines into a dt-binding include
    
    Move parts of linux/mfd/arizona/pdata.h and gpio.h into a new file in
    the dt-binding directory for use by device tree bindings. This also
    makes gpio.h redundant so remove it in the process.
    
    Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Acked-by: Mark Brown <broonie@kernel.org>
    Acked-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/arizona/pdata.h b/include/linux/mfd/arizona/pdata.h
index 4578c72c9b86..48fe31356605 100644
--- a/include/linux/mfd/arizona/pdata.h
+++ b/include/linux/mfd/arizona/pdata.h
@@ -11,31 +11,26 @@
 #ifndef _ARIZONA_PDATA_H
 #define _ARIZONA_PDATA_H
 
-#define ARIZONA_GPN_DIR                          0x8000  /* GPN_DIR */
+#include <dt-bindings/mfd/arizona.h>
+
 #define ARIZONA_GPN_DIR_MASK                     0x8000  /* GPN_DIR */
 #define ARIZONA_GPN_DIR_SHIFT                        15  /* GPN_DIR */
 #define ARIZONA_GPN_DIR_WIDTH                         1  /* GPN_DIR */
-#define ARIZONA_GPN_PU                           0x4000  /* GPN_PU */
 #define ARIZONA_GPN_PU_MASK                      0x4000  /* GPN_PU */
 #define ARIZONA_GPN_PU_SHIFT                         14  /* GPN_PU */
 #define ARIZONA_GPN_PU_WIDTH                          1  /* GPN_PU */
-#define ARIZONA_GPN_PD                           0x2000  /* GPN_PD */
 #define ARIZONA_GPN_PD_MASK                      0x2000  /* GPN_PD */
 #define ARIZONA_GPN_PD_SHIFT                         13  /* GPN_PD */
 #define ARIZONA_GPN_PD_WIDTH                          1  /* GPN_PD */
-#define ARIZONA_GPN_LVL                          0x0800  /* GPN_LVL */
 #define ARIZONA_GPN_LVL_MASK                     0x0800  /* GPN_LVL */
 #define ARIZONA_GPN_LVL_SHIFT                        11  /* GPN_LVL */
 #define ARIZONA_GPN_LVL_WIDTH                         1  /* GPN_LVL */
-#define ARIZONA_GPN_POL                          0x0400  /* GPN_POL */
 #define ARIZONA_GPN_POL_MASK                     0x0400  /* GPN_POL */
 #define ARIZONA_GPN_POL_SHIFT                        10  /* GPN_POL */
 #define ARIZONA_GPN_POL_WIDTH                         1  /* GPN_POL */
-#define ARIZONA_GPN_OP_CFG                       0x0200  /* GPN_OP_CFG */
 #define ARIZONA_GPN_OP_CFG_MASK                  0x0200  /* GPN_OP_CFG */
 #define ARIZONA_GPN_OP_CFG_SHIFT                      9  /* GPN_OP_CFG */
 #define ARIZONA_GPN_OP_CFG_WIDTH                      1  /* GPN_OP_CFG */
-#define ARIZONA_GPN_DB                           0x0100  /* GPN_DB */
 #define ARIZONA_GPN_DB_MASK                      0x0100  /* GPN_DB */
 #define ARIZONA_GPN_DB_SHIFT                          8  /* GPN_DB */
 #define ARIZONA_GPN_DB_WIDTH                          1  /* GPN_DB */
@@ -45,23 +40,10 @@
 
 #define ARIZONA_MAX_GPIO 5
 
-#define ARIZONA_32KZ_MCLK1 1
-#define ARIZONA_32KZ_MCLK2 2
-#define ARIZONA_32KZ_NONE  3
-
 #define ARIZONA_MAX_INPUT 4
 
-#define ARIZONA_DMIC_MICVDD   0
-#define ARIZONA_DMIC_MICBIAS1 1
-#define ARIZONA_DMIC_MICBIAS2 2
-#define ARIZONA_DMIC_MICBIAS3 3
-
 #define ARIZONA_MAX_MICBIAS 3
 
-#define ARIZONA_INMODE_DIFF 0
-#define ARIZONA_INMODE_SE   1
-#define ARIZONA_INMODE_DMIC 2
-
 #define ARIZONA_MAX_OUTPUT 6
 
 #define ARIZONA_MAX_AIF 3

commit a288d648715bab6a1ab2b72cb1c1cc79cdc8cb43
Author: Richard Fitzgerald <rf@opensource.wolfsonmicro.com>
Date:   Fri May 23 12:54:57 2014 +0100

    extcon: arizona: support inverted jack detect switch
    
    Add config option for inverted jack detect switch that
    opens when jack is inserted.
    
    Signed-off-by: Richard Fitzgerald <rf@opensource.wolfsonmicro.com>
    [Acked by Lee Jones for MFD part]
    Acked-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Chanwoo Choi <cw00.choi@samsung.com>

diff --git a/include/linux/mfd/arizona/pdata.h b/include/linux/mfd/arizona/pdata.h
index 12a5c135c746..4578c72c9b86 100644
--- a/include/linux/mfd/arizona/pdata.h
+++ b/include/linux/mfd/arizona/pdata.h
@@ -127,6 +127,9 @@ struct arizona_pdata {
 	/** Internal pull on GPIO5 is disabled when used for jack detection */
 	bool jd_gpio5_nopull;
 
+	/** set to true if jackdet contact opens on insert */
+	bool jd_invert;
+
 	/** Use the headphone detect circuit to identify the accessory */
 	bool hpdet_acc_id;
 

commit f773fc6dca4619bdf8da767eaba101a83b766059
Author: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date:   Tue May 21 14:56:58 2013 +0100

    mfd: arizona: Change fast_start pdata name to better reflect functionality
    
    The bit in the register enables MICBIAS fast startup when clear not when
    set. This patch changes the name of this pdata option to soft_start to
    better match the functionality. We rename rather than invert the
    handling to keep the same default functionality, which is fast start
    active.
    
    Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/linux/mfd/arizona/pdata.h b/include/linux/mfd/arizona/pdata.h
index 80dead1f7100..12a5c135c746 100644
--- a/include/linux/mfd/arizona/pdata.h
+++ b/include/linux/mfd/arizona/pdata.h
@@ -77,7 +77,7 @@ struct arizona_micbias {
 	int mV;                    /** Regulated voltage */
 	unsigned int ext_cap:1;    /** External capacitor fitted */
 	unsigned int discharge:1;  /** Actively discharge */
-	unsigned int fast_start:1; /** Enable aggressive startup ramp rate */
+	unsigned int soft_start:1; /** Disable aggressive startup ramp rate */
 	unsigned int bypass:1;     /** Use bypass mode */
 };
 

commit d7ab7302f970a254997687a1cdede421a5635c68
Merge: 01227a889ed5 99f4c6b66a9a
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun May 5 17:36:20 2013 -0700

    Merge tag 'mfd-3.10-1' of git://git.kernel.org/pub/scm/linux/kernel/git/sameo/mfd-next
    
    Pull MFD update from Samuel Ortiz:
     "For 3.10 we have a few new MFD drivers for:
    
       - The ChromeOS embedded controller which provides keyboard, battery
         and power management services.  This controller is accessible
         through i2c or SPI.
    
       - Silicon Laboratories 476x controller, providing access to their FM
         chipset and their audio codec.
    
       - Realtek's RTS5249, a memory stick, MMC and SD/SDIO PCI based
         reader.
    
       - Nokia's Tahvo power button and watchdog device.  This device is
         very similar to Retu and is thus supported by the same code base.
    
       - STMicroelectronics STMPE1801, a keyboard and GPIO controller
         supported by the stmpe driver.
    
       - ST-Ericsson AB8540 and AB8505 power management and voltage
         converter controllers through the existing ab8500 code.
    
      Some other drivers got cleaned up or improved.  In particular:
    
       - The Linaro/STE guys got the ab8500 driver in sync with their
         internal code through a series of optimizations, fixes and
         improvements.
    
       - The AS3711 and OMAP USB drivers now have DT support.
    
       - The arizona clock and interrupt handling code got improved.
    
       - The wm5102 register patch and boot mechanism also got improved."
    
    * tag 'mfd-3.10-1' of git://git.kernel.org/pub/scm/linux/kernel/git/sameo/mfd-next: (104 commits)
      mfd: si476x: Don't use 0bNNN
      mfd: vexpress: Handle pending config transactions
      mfd: ab8500: Export ab8500_gpadc_sw_hw_convert properly
      mfd: si476x: Fix i2c warning
      mfd: si476x: Add header files and Kbuild plumbing
      mfd: si476x: Add chip properties handling code
      mfd: si476x: Add the bulk of the core driver
      mfd: si476x: Add commands abstraction layer
      mfd: rtsx: Support RTS5249
      mfd: retu: Add Tahvo support
      mfd: ucb1400: Pass ucb1400-gpio data through ac97 bus
      mfd: wm8994: Add some OF properties
      mfd: wm8994: Add device ID data to WM8994 OF device IDs
      input: Export matrix_keypad_parse_of_params()
      mfd: tps65090: Add compatible string for charger subnode
      mfd: db8500-prcmu: Support platform dependant device selection
      mfd: syscon: Fix warnings when printing resource_size_t
      of: Add stub of_get_parent for non-OF builds
      mfd: omap-usb-tll: Convert to devm_ioremap_resource()
      mfd: omap-usb-host: Convert to devm_ioremap_resource()
      ...

commit 544c7aadd7d4309ed01fcd787d393db67eb7eaea
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Tue Jan 29 18:44:41 2013 +0800

    mfd: arizona: Support configuring MICBIASes into bypass mode
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Samuel Ortiz <sameo@linux.intel.com>

diff --git a/include/linux/mfd/arizona/pdata.h b/include/linux/mfd/arizona/pdata.h
index 8755dd05ab78..554d903cdf41 100644
--- a/include/linux/mfd/arizona/pdata.h
+++ b/include/linux/mfd/arizona/pdata.h
@@ -78,6 +78,7 @@ struct arizona_micbias {
 	unsigned int ext_cap:1;    /** External capacitor fitted */
 	unsigned int discharge:1;  /** Actively discharge */
 	unsigned int fast_start:1; /** Enable aggressive startup ramp rate */
+	unsigned int bypass:1;     /** Use bypass mode */
 };
 
 struct arizona_micd_config {

commit 3092f8050eccce8463afe771f0910634a433e24b
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Sun Mar 24 23:05:58 2013 +0000

    mfd: arizona: Allow GPIO to be specified for IRQ line
    
    If a GPIO is specified for the chip IRQ line then request it. This
    improves support for systems that do not put pins into input mode when
    used as interrupts.
    
    Also use this GPIO when the primary IRQ is in edge triggered mode to
    detect if we have handled pending interrupts in order to improve
    robustness.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Samuel Ortiz <sameo@linux.intel.com>

diff --git a/include/linux/mfd/arizona/pdata.h b/include/linux/mfd/arizona/pdata.h
index 84fefede3a23..8755dd05ab78 100644
--- a/include/linux/mfd/arizona/pdata.h
+++ b/include/linux/mfd/arizona/pdata.h
@@ -163,6 +163,9 @@ struct arizona_pdata {
 
 	/** Haptic actuator type */
 	unsigned int hap_act;
+
+	/** GPIO for primary IRQ (used for edge triggered emulation) */
+	int irq_gpio;
 };
 
 #endif

commit f8a0941f1bbdbaa68441142675986501b48da8f5
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Fri Mar 22 12:59:33 2013 +0100

    mfd: arizona: Basic support for edge triggered IRQs
    
    Allow the user to configure edge triggered IRQs, though we do not yet
    fully handle new interrupts occurring while an interrupt is being handled.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Samuel Ortiz <sameo@linux.intel.com>

diff --git a/include/linux/mfd/arizona/pdata.h b/include/linux/mfd/arizona/pdata.h
index 455c51d22d6b..84fefede3a23 100644
--- a/include/linux/mfd/arizona/pdata.h
+++ b/include/linux/mfd/arizona/pdata.h
@@ -99,7 +99,8 @@ struct arizona_pdata {
 	/** If a direct 32kHz clock is provided on an MCLK specify it here */
 	int clk32k_src;
 
-	bool irq_active_high; /** IRQ polarity */
+	/** Mode for primary IRQ (defaults to active low) */
+	unsigned int irq_flags;
 
 	/* Base GPIO */
 	int gpio_base;

commit 7abd4e2a8f1c3e534da44c35e2d3d6353573e51f
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon Apr 1 19:25:55 2013 +0100

    extcon: arizona: Make mic detection timeout configurable
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/linux/mfd/arizona/pdata.h b/include/linux/mfd/arizona/pdata.h
index 3ef300baa2e6..a0f940987a3e 100644
--- a/include/linux/mfd/arizona/pdata.h
+++ b/include/linux/mfd/arizona/pdata.h
@@ -149,6 +149,9 @@ struct arizona_pdata {
 	/** Mic detect debounce level */
 	int micd_dbtime;
 
+	/** Mic detect timeout (ms) */
+	int micd_timeout;
+
 	/** Force MICBIAS on for mic detect */
 	bool micd_force_micbias;
 

commit cd59e79656f4e7137909166248a935d422b1245a
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon Apr 1 19:21:48 2013 +0100

    extcon: arizona: Allow additional debounce during microphone detection
    
    Help mitigate against mechanical bounce during the initial detection by
    allowing the configuration of an additional debounce on top of that the
    hardware does during the initial phase of microphone detection operation.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/linux/mfd/arizona/pdata.h b/include/linux/mfd/arizona/pdata.h
index 45c84777c624..3ef300baa2e6 100644
--- a/include/linux/mfd/arizona/pdata.h
+++ b/include/linux/mfd/arizona/pdata.h
@@ -134,6 +134,9 @@ struct arizona_pdata {
 	/** GPIO used for mic isolation with HPDET */
 	int hpdet_id_gpio;
 
+	/** Extra debounce timeout used during initial mic detection (ms) */
+	int micd_detect_debounce;
+
 	/** GPIO for mic detection polarity */
 	int micd_pol_gpio;
 

commit 9c2ba270eaa227c999af451e1c2c9bf0d24aa8e5
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon Feb 25 23:42:31 2013 +0000

    extcon: arizona: Simplify HPDET based identification
    
    Rather than measuring both HP channels we can simply directly measure the
    microphone impedance and then rely on MICDET for final confirmation of the
    presence of a suitable microphone. This improves the overall performance
    of the identification process.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/linux/mfd/arizona/pdata.h b/include/linux/mfd/arizona/pdata.h
index 008b8c40549f..45c84777c624 100644
--- a/include/linux/mfd/arizona/pdata.h
+++ b/include/linux/mfd/arizona/pdata.h
@@ -128,6 +128,9 @@ struct arizona_pdata {
 	/** Use the headphone detect circuit to identify the accessory */
 	bool hpdet_acc_id;
 
+	/** Check for line output with HPDET method */
+	bool hpdet_acc_id_line;
+
 	/** GPIO used for mic isolation with HPDET */
 	int hpdet_id_gpio;
 

commit e56a0a572be150c79cdbf62ff98f4a63419e1c0b
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon Apr 1 19:03:52 2013 +0100

    extcon: arizona: Allow pull to be disabled on GPIO5 when used for JACKET
    
    In some designs an external pull won't be needed.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/linux/mfd/arizona/pdata.h b/include/linux/mfd/arizona/pdata.h
index eb11a8ac6db2..008b8c40549f 100644
--- a/include/linux/mfd/arizona/pdata.h
+++ b/include/linux/mfd/arizona/pdata.h
@@ -122,6 +122,9 @@ struct arizona_pdata {
 	/** GPIO5 is used for jack detection */
 	bool jd_gpio5;
 
+	/** Internal pull on GPIO5 is disabled when used for jack detection */
+	bool jd_gpio5_nopull;
+
 	/** Use the headphone detect circuit to identify the accessory */
 	bool hpdet_acc_id;
 

commit 6fed4d869a11fdbb4c6a5e444dfb2c22f92c3e46
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon Apr 1 22:03:06 2013 +0100

    extcon: arizona: Allow configuration of button detection
    
    The Arizona button detection circuit is configurable, allowing the system
    integrator to program a range of thresholds for the buttons supported on
    the accessory but currently the driver uses the default button ranges and
    does not provide any flexibility in how this is exposed to the application
    layer.
    
    Provide platform data allowing the user to control this and to map
    the buttons to keys in the input subsystem.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/linux/mfd/arizona/pdata.h b/include/linux/mfd/arizona/pdata.h
index 455c51d22d6b..eb11a8ac6db2 100644
--- a/include/linux/mfd/arizona/pdata.h
+++ b/include/linux/mfd/arizona/pdata.h
@@ -86,6 +86,11 @@ struct arizona_micd_config {
 	bool gpio;
 };
 
+struct arizona_micd_range {
+	int max;  /** Ohms */
+	int key;  /** Key to report to input layer */
+};
+
 struct arizona_pdata {
 	int reset;      /** GPIO controlling /RESET, if any */
 	int ldoena;     /** GPIO controlling LODENA, if any */
@@ -138,6 +143,10 @@ struct arizona_pdata {
 	/** Force MICBIAS on for mic detect */
 	bool micd_force_micbias;
 
+	/** Mic detect level parameters */
+	const struct arizona_micd_range *micd_ranges;
+	int num_micd_ranges;
+
 	/** Headset polarity configurations */
 	struct arizona_micd_config *micd_configs;
 	int num_micd_configs;

commit ab7826595e9ec51a51f622c5fc91e2f59440481a
Merge: 21fbd5809ad1 ff7109fa6326
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Feb 24 20:00:58 2013 -0800

    Merge tag 'mfd-3.9-1' of git://git.kernel.org/pub/scm/linux/kernel/git/sameo/mfd-2.6
    
    Pull MFS updates from Samuel Ortiz:
     "This is the MFD pull request for the 3.9 merge window.
    
      No new drivers this time, but a bunch of fairly big cleanups:
    
       - Roger Quadros worked on a OMAP USBHS and TLL platform data
         consolidation, OMAP5 support and clock management code cleanup.
    
       - The first step of a major sync for the ab8500 driver from Lee
         Jones.  In particular, the debugfs and the sysct interfaces got
         extended and improved.
    
       - Peter Ujfalusi sent a nice patchset for cleaning and fixing the
         twl-core driver, with a much needed module id lookup code
         improvement.
    
       - The regular wm5102 and arizona cleanups and fixes from Mark Brown.
    
       - Laxman Dewangan extended the palmas APIs in order to implement the
         palmas GPIO and rt drivers.
    
       - Laxman also added DT support for the tps65090 driver.
    
       - The Intel SCH and ICH drivers got a couple fixes from Aaron Sierra
         and Darren Hart.
    
       - Linus Walleij patchset for the ab8500 driver allowed ab8500 and
         ab9540 based devices to switch to the new abx500 pin-ctrl driver.
    
       - The max8925 now has device tree and irqdomain support thanks to
         Qing Xu.
    
       - The recently added rtsx driver got a few cleanups and fixes for a
         better card detection code path and now also supports the RTS5227
         chipset, thanks to Wei Wang and Roger Tseng."
    
    * tag 'mfd-3.9-1' of git://git.kernel.org/pub/scm/linux/kernel/git/sameo/mfd-2.6: (109 commits)
      mfd: lpc_ich: Use devres API to allocate private data
      mfd: lpc_ich: Add Device IDs for Intel Wellsburg PCH
      mfd: lpc_sch: Accomodate partial population of the MFD devices
      mfd: da9052-i2c: Staticize da9052_i2c_fix()
      mfd: syscon: Fix sparse warning
      mfd: twl-core: Fix kernel panic on boot
      mfd: rtsx: Fix issue that booting OS with SD card inserted
      mfd: ab8500: Fix compile error
      mfd: Add missing GENERIC_HARDIRQS dependecies
      Documentation: Add docs for max8925 dt
      mfd: max8925: Add dts
      mfd: max8925: Support dt for backlight
      mfd: max8925: Fix onkey driver irq base
      mfd: max8925: Fix mfd device register failure
      mfd: max8925: Add irqdomain for dt
      mfd: vexpress: Allow vexpress-sysreg to self-initialise
      mfd: rtsx: Support RTS5227
      mfd: rtsx: Implement driving adjustment to device-dependent callbacks
      mfd: vexpress: Add pseudo-GPIO based LEDs
      mfd: ab8500: Rename ab8500 to abx500 for hwmon driver
      ...

commit 7ed214ac2095f561a94335ca672b6c42a1ea40ff
Merge: 21eaab6d19ed 29e5507ae4ab
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Feb 21 13:57:13 2013 -0800

    Merge tag 'char-misc-3.9-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc
    
    Pull char/misc driver patches from Greg Kroah-Hartman:
     "Here's the big char/misc driver patches for 3.9-rc1.
    
      Nothing major here, just lots of different driver updates (mei,
      hyperv, ipack, extcon, vmci, etc.).
    
      All of these have been in the linux-next tree for a while."
    
    * tag 'char-misc-3.9-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc: (209 commits)
      w1: w1_therm: Add force-pullup option for "broken" sensors
      w1: ds2482: Added 1-Wire pull-up support to the driver
      vme: add missing put_device() after device_register() fails
      extcon: max8997: Use workqueue to check cable state after completing boot of platform
      extcon: max8997: Set default UART/USB path on probe
      extcon: max8997: Consolidate duplicate code for checking ADC/CHG cable type
      extcon: max8997: Set default of ADC debounce time during initialization
      extcon: max8997: Remove duplicate code related to set H/W line path
      extcon: max8997: Move defined constant to header file
      extcon: max77693: Make max77693_extcon_cable static
      extcon: max8997: Remove unreachable code
      extcon: max8997: Make max8997_extcon_cable static
      extcon: max77693: Remove unnecessary goto statement to improve readability
      extcon: max77693: Convert to devm_input_allocate_device()
      extcon: gpio: Rename filename of extcon-gpio.c according to kernel naming style
      CREDITS: update email and address of Harald Hoyer
      extcon: arizona: Use MICDET for final microphone identification
      extcon: arizona: Always take the first HPDET reading as the final one
      extcon: arizona: Clear _trig_sts bits after jack detection
      extcon: arizona: Don't HPDET magic when headphones are enabled
      ...

commit 3d91f8282c66d9edafa3980385324ce6a48edcda
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Tue Jan 29 00:47:37 2013 +0800

    mfd: arizona: Provide platform data for MICBIAS configuration
    
    Allow the MICBIAS voltages and other attributes to be configured by the
    platform.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Samuel Ortiz <sameo@linux.intel.com>

diff --git a/include/linux/mfd/arizona/pdata.h b/include/linux/mfd/arizona/pdata.h
index 8b1d1daaae16..37894d6a4f6f 100644
--- a/include/linux/mfd/arizona/pdata.h
+++ b/include/linux/mfd/arizona/pdata.h
@@ -56,6 +56,8 @@
 #define ARIZONA_DMIC_MICBIAS2 2
 #define ARIZONA_DMIC_MICBIAS3 3
 
+#define ARIZONA_MAX_MICBIAS 3
+
 #define ARIZONA_INMODE_DIFF 0
 #define ARIZONA_INMODE_SE   1
 #define ARIZONA_INMODE_DMIC 2
@@ -69,6 +71,13 @@
 
 struct regulator_init_data;
 
+struct arizona_micbias {
+	int mV;                    /** Regulated voltage */
+	unsigned int ext_cap:1;    /** External capacitor fitted */
+	unsigned int discharge:1;  /** Actively discharge */
+	unsigned int fast_start:1; /** Enable aggressive startup ramp rate */
+};
+
 struct arizona_micd_config {
 	unsigned int src;
 	unsigned int bias;
@@ -106,6 +115,9 @@ struct arizona_pdata {
 	/** Reference voltage for DMIC inputs */
 	int dmic_ref[ARIZONA_MAX_INPUT];
 
+	/** MICBIAS configurations */
+	struct arizona_micbias micbias[ARIZONA_MAX_MICBIAS];
+
 	/** Mode of input structures */
 	int inmode[ARIZONA_MAX_INPUT];
 

commit bbbd46e3d7fcdf1c8362bf1c83bcc08a93676cc9
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Thu Jan 10 19:38:43 2013 +0000

    extcon: arizona: Use regulated mode for microphone supply when detecting
    
    When starting microphone detection some headsets should be exposed to
    the fully regulated microphone bias in order to ensure that they behave
    in an optimal fashion.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/linux/mfd/arizona/pdata.h b/include/linux/mfd/arizona/pdata.h
index 2f5f08e10b79..f8241753415c 100644
--- a/include/linux/mfd/arizona/pdata.h
+++ b/include/linux/mfd/arizona/pdata.h
@@ -117,6 +117,9 @@ struct arizona_pdata {
 	/** Mic detect debounce level */
 	int micd_dbtime;
 
+	/** Force MICBIAS on for mic detect */
+	bool micd_force_micbias;
+
 	/** Headset polarity configurations */
 	struct arizona_micd_config *micd_configs;
 	int num_micd_configs;

commit 2e033db5ddf299de2ae568919d78b0258a5a6423
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon Jan 21 17:36:33 2013 +0900

    extcon: arizona: Support additional configuration of microphone detection
    
    Allow systems to tune detection rate and debounce suitably for their
    mechanical parameters.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/linux/mfd/arizona/pdata.h b/include/linux/mfd/arizona/pdata.h
index bcbe4fda87cb..2f5f08e10b79 100644
--- a/include/linux/mfd/arizona/pdata.h
+++ b/include/linux/mfd/arizona/pdata.h
@@ -111,6 +111,12 @@ struct arizona_pdata {
 	/** Mic detect ramp rate */
 	int micd_bias_start_time;
 
+	/** Mic detect sample rate */
+	int micd_rate;
+
+	/** Mic detect debounce level */
+	int micd_dbtime;
+
 	/** Headset polarity configurations */
 	struct arizona_micd_config *micd_configs;
 	int num_micd_configs;

commit c94aa30edac4d328674e9c127918317009d30c1a
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Thu Jan 17 16:35:14 2013 +0900

    ASoC: arizona: Allow number of channels clocked to be restricted
    
    Place a cap on the number of channels clocks are generated for. This is
    intended for use with systems which have the WM5102 master an I2S bus with
    multiple data lines.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/linux/mfd/arizona/pdata.h b/include/linux/mfd/arizona/pdata.h
index 8b1d1daaae16..ec3e2a2a6d77 100644
--- a/include/linux/mfd/arizona/pdata.h
+++ b/include/linux/mfd/arizona/pdata.h
@@ -62,6 +62,8 @@
 
 #define ARIZONA_MAX_OUTPUT 6
 
+#define ARIZONA_MAX_AIF 3
+
 #define ARIZONA_HAP_ACT_ERM 0
 #define ARIZONA_HAP_ACT_LRA 2
 
@@ -96,6 +98,13 @@ struct arizona_pdata {
 	/** Pin state for GPIO pins */
 	int gpio_defaults[ARIZONA_MAX_GPIO];
 
+	/**
+	 * Maximum number of channels clocks will be generated for,
+	 * useful for systems where and I2S bus with multiple data
+	 * lines is mastered.
+	 */
+	int max_channels_clocked[ARIZONA_MAX_AIF];
+
 	/** GPIO for mic detection polarity */
 	int micd_pol_gpio;
 

commit 1eda6aa7ce101b59dfd91abef2c8b0e51e96e199
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Fri Jan 11 08:55:54 2013 +0900

    extcon: arizona: Support direct microphone measurement via HPDET
    
    With some GPIO control it is possible to detect microphones in a wider
    range of configurations by directly measuring the microphone impedance
    when the HPDET method cannot distinguish between the behaviour of the
    two grounds. Allow a GPIO to be provided in platform data and use it to
    implement this behaviour.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Myungjoo Ham <myungjoo.ham@samsung.com>

diff --git a/include/linux/mfd/arizona/pdata.h b/include/linux/mfd/arizona/pdata.h
index 7c0878778357..bcbe4fda87cb 100644
--- a/include/linux/mfd/arizona/pdata.h
+++ b/include/linux/mfd/arizona/pdata.h
@@ -102,6 +102,9 @@ struct arizona_pdata {
 	/** Use the headphone detect circuit to identify the accessory */
 	bool hpdet_acc_id;
 
+	/** GPIO used for mic isolation with HPDET */
+	int hpdet_id_gpio;
+
 	/** GPIO for mic detection polarity */
 	int micd_pol_gpio;
 

commit dd235eea4ed75b1599dd9a53bb618fe5befeb731
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Fri Jan 11 08:55:51 2013 +0900

    extcon: arizona: Support HPDET based accessory identification
    
    The accessory detection functionality in Arizona devices is flexible and
    supports several system designs in addition to the default one implemented
    by the existing driver. One such design uses the HPDET feature to determine
    what kind of accessory is present by comparing measurements taken with the
    two headphone grounds available on the device, implement that if selected
    by platform data.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Myungjoo Ham <myungjoo.ham@samsung.com>

diff --git a/include/linux/mfd/arizona/pdata.h b/include/linux/mfd/arizona/pdata.h
index 0fc26a480be3..7c0878778357 100644
--- a/include/linux/mfd/arizona/pdata.h
+++ b/include/linux/mfd/arizona/pdata.h
@@ -99,6 +99,9 @@ struct arizona_pdata {
 	/** GPIO5 is used for jack detection */
 	bool jd_gpio5;
 
+	/** Use the headphone detect circuit to identify the accessory */
+	bool hpdet_acc_id;
+
 	/** GPIO for mic detection polarity */
 	int micd_pol_gpio;
 

commit 92a49871b378b1e523a95da569cd38efdd06eee5
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Fri Jan 11 08:55:39 2013 +0900

    extcon: arizona: Support use of GPIO5 as an input to jack detection
    
    Some system designs provide an input on GPIO5 which in conjunction with
    the jack detection feature indicates the presence of an accessory.
    Support such systems, using the microphone clamp feature to minimise
    wakeups of the processor.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Myungjoo Ham <myungjoo.ham@samsung.com>

diff --git a/include/linux/mfd/arizona/pdata.h b/include/linux/mfd/arizona/pdata.h
index 5b0508853290..0fc26a480be3 100644
--- a/include/linux/mfd/arizona/pdata.h
+++ b/include/linux/mfd/arizona/pdata.h
@@ -96,6 +96,9 @@ struct arizona_pdata {
 	/** Pin state for GPIO pins */
 	int gpio_defaults[ARIZONA_MAX_GPIO];
 
+	/** GPIO5 is used for jack detection */
+	bool jd_gpio5;
+
 	/** GPIO for mic detection polarity */
 	int micd_pol_gpio;
 

commit b17e54625cff1b06aec9df505b46c9bcdcd4823d
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Fri Jan 11 08:55:24 2013 +0900

    extcon: arizona: Allow configuration of MICBIAS rise time
    
    Allow configuration of the rise time for MICBIAS via platform data, the
    delay required depends on things like the external component selection.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Chanwoo Choi <cw00.choi@samsung.com>
    Acked-by: MyungJoo Ham <myungjoo.ham@samsung.com>

diff --git a/include/linux/mfd/arizona/pdata.h b/include/linux/mfd/arizona/pdata.h
index 8b1d1daaae16..5b0508853290 100644
--- a/include/linux/mfd/arizona/pdata.h
+++ b/include/linux/mfd/arizona/pdata.h
@@ -99,6 +99,9 @@ struct arizona_pdata {
 	/** GPIO for mic detection polarity */
 	int micd_pol_gpio;
 
+	/** Mic detect ramp rate */
+	int micd_bias_start_time;
+
 	/** Headset polarity configurations */
 	struct arizona_micd_config *micd_configs;
 	int num_micd_configs;

commit 9dd555e2f4de1af1bb0f75cc84ed0708fcdb5987
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon Nov 26 21:17:21 2012 +0000

    Input - arizona-haptics: Add driver haptics module on Arizona CODECs
    
    The Arizona CODECs contain a haptics module providing vibration feedback
    support. Implement basic support for this, providing simple start/stop and
    signal magnitude control.
    
    Since the output path for haptics is routed through the CODEC audio routing
    it is modelled as a signal generator within ASoC, the haptics driver calls
    DAPM to start and stop the output drivers. An appropriate output path must
    be configured via ALSA to connect the haptics source to the correct output.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/linux/mfd/arizona/pdata.h b/include/linux/mfd/arizona/pdata.h
index 7ab442905a57..8b1d1daaae16 100644
--- a/include/linux/mfd/arizona/pdata.h
+++ b/include/linux/mfd/arizona/pdata.h
@@ -62,6 +62,9 @@
 
 #define ARIZONA_MAX_OUTPUT 6
 
+#define ARIZONA_HAP_ACT_ERM 0
+#define ARIZONA_HAP_ACT_LRA 2
+
 #define ARIZONA_MAX_PDM_SPK 2
 
 struct regulator_init_data;
@@ -114,6 +117,9 @@ struct arizona_pdata {
 
 	/** PDM speaker format */
 	unsigned int spk_fmt[ARIZONA_MAX_PDM_SPK];
+
+	/** Haptic actuator type */
+	unsigned int hap_act;
 };
 
 #endif

commit e102befe7a254f7b827fecc19eba0c5af03d1bf3
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Tue Jul 10 12:37:58 2012 +0100

    mfd: Initial support for the WM5110
    
    The WM5110 is a highly-integrated low-power audio system for smartphones,
    tablets and other portable audio devices. It combines an advanced DSP
    feature set with a flexible, high-performance audio hub CODEC.
    
    The support is based on the Arizona core driver.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Samuel Ortiz <sameo@linux.intel.com>

diff --git a/include/linux/mfd/arizona/pdata.h b/include/linux/mfd/arizona/pdata.h
index 68ff91aa3888..7ab442905a57 100644
--- a/include/linux/mfd/arizona/pdata.h
+++ b/include/linux/mfd/arizona/pdata.h
@@ -49,7 +49,7 @@
 #define ARIZONA_32KZ_MCLK2 2
 #define ARIZONA_32KZ_NONE  3
 
-#define ARIZONA_MAX_INPUT 3
+#define ARIZONA_MAX_INPUT 4
 
 #define ARIZONA_DMIC_MICVDD   0
 #define ARIZONA_DMIC_MICBIAS1 1
@@ -60,7 +60,7 @@
 #define ARIZONA_INMODE_SE   1
 #define ARIZONA_INMODE_DMIC 2
 
-#define ARIZONA_MAX_OUTPUT 5
+#define ARIZONA_MAX_OUTPUT 6
 
 #define ARIZONA_MAX_PDM_SPK 2
 

commit 2a51da04fef56ec83f790bf0746e90fe40215a92
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon Jul 9 19:33:14 2012 +0100

    mfd: Add support for multiple arizona PDM speaker outputs
    
    The registers have stride 2 so we can write the loop properly now.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Samuel Ortiz <sameo@linux.intel.com>

diff --git a/include/linux/mfd/arizona/pdata.h b/include/linux/mfd/arizona/pdata.h
index fa2cb9885d62..68ff91aa3888 100644
--- a/include/linux/mfd/arizona/pdata.h
+++ b/include/linux/mfd/arizona/pdata.h
@@ -62,7 +62,7 @@
 
 #define ARIZONA_MAX_OUTPUT 5
 
-#define ARIZONA_MAX_PDM_SPK 1
+#define ARIZONA_MAX_PDM_SPK 2
 
 struct regulator_init_data;
 

commit 3cc72986947501a6a8fd12330e0963b59ed2f964
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Tue Jun 19 16:31:53 2012 +0100

    mfd: arizona: Core driver
    
    Several forthcoming Wolfson devices are based on a common platform
    known as Arizona allowing a great deal of reuse of driver code. This
    patch adds core support for these devices.
    
    In order to handle systems which do not use the generic clock API a
    simple wrapper for the 32kHz clock domain in the devices is provided.
    Once the generic clock API is widely available this code will be moved
    over to use that.
    
    For simplicity some WM5102 specific code is included in the core driver,
    the effort involved in splitting the device out isn't worth it.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/linux/mfd/arizona/pdata.h b/include/linux/mfd/arizona/pdata.h
new file mode 100644
index 000000000000..fa2cb9885d62
--- /dev/null
+++ b/include/linux/mfd/arizona/pdata.h
@@ -0,0 +1,119 @@
+/*
+ * Platform data for Arizona devices
+ *
+ * Copyright 2012 Wolfson Microelectronics. PLC.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+
+#ifndef _ARIZONA_PDATA_H
+#define _ARIZONA_PDATA_H
+
+#define ARIZONA_GPN_DIR                          0x8000  /* GPN_DIR */
+#define ARIZONA_GPN_DIR_MASK                     0x8000  /* GPN_DIR */
+#define ARIZONA_GPN_DIR_SHIFT                        15  /* GPN_DIR */
+#define ARIZONA_GPN_DIR_WIDTH                         1  /* GPN_DIR */
+#define ARIZONA_GPN_PU                           0x4000  /* GPN_PU */
+#define ARIZONA_GPN_PU_MASK                      0x4000  /* GPN_PU */
+#define ARIZONA_GPN_PU_SHIFT                         14  /* GPN_PU */
+#define ARIZONA_GPN_PU_WIDTH                          1  /* GPN_PU */
+#define ARIZONA_GPN_PD                           0x2000  /* GPN_PD */
+#define ARIZONA_GPN_PD_MASK                      0x2000  /* GPN_PD */
+#define ARIZONA_GPN_PD_SHIFT                         13  /* GPN_PD */
+#define ARIZONA_GPN_PD_WIDTH                          1  /* GPN_PD */
+#define ARIZONA_GPN_LVL                          0x0800  /* GPN_LVL */
+#define ARIZONA_GPN_LVL_MASK                     0x0800  /* GPN_LVL */
+#define ARIZONA_GPN_LVL_SHIFT                        11  /* GPN_LVL */
+#define ARIZONA_GPN_LVL_WIDTH                         1  /* GPN_LVL */
+#define ARIZONA_GPN_POL                          0x0400  /* GPN_POL */
+#define ARIZONA_GPN_POL_MASK                     0x0400  /* GPN_POL */
+#define ARIZONA_GPN_POL_SHIFT                        10  /* GPN_POL */
+#define ARIZONA_GPN_POL_WIDTH                         1  /* GPN_POL */
+#define ARIZONA_GPN_OP_CFG                       0x0200  /* GPN_OP_CFG */
+#define ARIZONA_GPN_OP_CFG_MASK                  0x0200  /* GPN_OP_CFG */
+#define ARIZONA_GPN_OP_CFG_SHIFT                      9  /* GPN_OP_CFG */
+#define ARIZONA_GPN_OP_CFG_WIDTH                      1  /* GPN_OP_CFG */
+#define ARIZONA_GPN_DB                           0x0100  /* GPN_DB */
+#define ARIZONA_GPN_DB_MASK                      0x0100  /* GPN_DB */
+#define ARIZONA_GPN_DB_SHIFT                          8  /* GPN_DB */
+#define ARIZONA_GPN_DB_WIDTH                          1  /* GPN_DB */
+#define ARIZONA_GPN_FN_MASK                      0x007F  /* GPN_FN - [6:0] */
+#define ARIZONA_GPN_FN_SHIFT                          0  /* GPN_FN - [6:0] */
+#define ARIZONA_GPN_FN_WIDTH                          7  /* GPN_FN - [6:0] */
+
+#define ARIZONA_MAX_GPIO 5
+
+#define ARIZONA_32KZ_MCLK1 1
+#define ARIZONA_32KZ_MCLK2 2
+#define ARIZONA_32KZ_NONE  3
+
+#define ARIZONA_MAX_INPUT 3
+
+#define ARIZONA_DMIC_MICVDD   0
+#define ARIZONA_DMIC_MICBIAS1 1
+#define ARIZONA_DMIC_MICBIAS2 2
+#define ARIZONA_DMIC_MICBIAS3 3
+
+#define ARIZONA_INMODE_DIFF 0
+#define ARIZONA_INMODE_SE   1
+#define ARIZONA_INMODE_DMIC 2
+
+#define ARIZONA_MAX_OUTPUT 5
+
+#define ARIZONA_MAX_PDM_SPK 1
+
+struct regulator_init_data;
+
+struct arizona_micd_config {
+	unsigned int src;
+	unsigned int bias;
+	bool gpio;
+};
+
+struct arizona_pdata {
+	int reset;      /** GPIO controlling /RESET, if any */
+	int ldoena;     /** GPIO controlling LODENA, if any */
+
+	/** Regulator configuration for MICVDD */
+	struct regulator_init_data *micvdd;
+
+	/** Regulator configuration for LDO1 */
+	struct regulator_init_data *ldo1;
+
+	/** If a direct 32kHz clock is provided on an MCLK specify it here */
+	int clk32k_src;
+
+	bool irq_active_high; /** IRQ polarity */
+
+	/* Base GPIO */
+	int gpio_base;
+
+	/** Pin state for GPIO pins */
+	int gpio_defaults[ARIZONA_MAX_GPIO];
+
+	/** GPIO for mic detection polarity */
+	int micd_pol_gpio;
+
+	/** Headset polarity configurations */
+	struct arizona_micd_config *micd_configs;
+	int num_micd_configs;
+
+	/** Reference voltage for DMIC inputs */
+	int dmic_ref[ARIZONA_MAX_INPUT];
+
+	/** Mode of input structures */
+	int inmode[ARIZONA_MAX_INPUT];
+
+	/** Mode for outputs */
+	bool out_mono[ARIZONA_MAX_OUTPUT];
+
+	/** PDM speaker mute setting */
+	unsigned int spk_mute[ARIZONA_MAX_PDM_SPK];
+
+	/** PDM speaker format */
+	unsigned int spk_fmt[ARIZONA_MAX_PDM_SPK];
+};
+
+#endif
