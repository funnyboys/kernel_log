commit d2912cb15bdda8ba4a5dd73396ad62641af2f520
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Tue Jun 4 10:11:33 2019 +0200

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 500
    
    Based on 2 normalized pattern(s):
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license version 2 as
      published by the free software foundation
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license version 2 as
      published by the free software foundation #
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-only
    
    has been chosen to replace the boilerplate/reference in 4122 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Enrico Weigelt <info@metux.net>
    Reviewed-by: Kate Stewart <kstewart@linuxfoundation.org>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190604081206.933168790@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/include/linux/mfd/axp20x.h b/include/linux/mfd/axp20x.h
index a353cd22b388..fd5957c042da 100644
--- a/include/linux/mfd/axp20x.h
+++ b/include/linux/mfd/axp20x.h
@@ -1,11 +1,8 @@
+/* SPDX-License-Identifier: GPL-2.0-only */
 /*
  * Functions and registers to access AXP20X power management chip.
  *
  * Copyright (C) 2013, Carlo Caione <carlo@caione.org>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License version 2 as
- * published by the Free Software Foundation.
  */
 
 #ifndef __LINUX_MFD_AXP20X_H

commit 579a70035949b771a63a686db8becdd9b197d986
Merge: 030672aea826 958091396648
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Dec 28 20:22:45 2018 -0800

    Merge tag 'for-v4.21' of git://git.kernel.org/pub/scm/linux/kernel/git/sre/linux-power-supply
    
    Pull power supply and reset updates from Sebastian Reichel:
    
     - New core support:
        - battery internal resistance
        - battery OCV capacity lookup table
        - support for custom sysfs attributes
    
     - Convert all drivers to use power-supply core support for custom sysfs
       attributes
    
     - bq24190-charger: bq24196 support
    
     - axp20x-charger: AXP813 support
    
     - sc27xx-battery: new fuel gauge driver
    
     - gpio-poweroff: support for specific active and inactive delays
    
     - Misc fixes
    
    * tag 'for-v4.21' of git://git.kernel.org/pub/scm/linux/kernel/git/sre/linux-power-supply: (53 commits)
      power: supply: bq25890: fix BAT_COMP field definition
      power: supply: gpio-charger: Do not use deprecated POWER_SUPPLY_TYPE_USB_*
      power: supply: ds2781: switch to devm_power_supply_register
      power: supply: ds2780: switch to devm_power_supply_register
      power: supply: ds2781: fix race-condition in bin attribute registration
      power: supply: ds2780: fix race-condition in bin attribute registration
      power: supply: pcf50633: fix race-condition in sysfs registration
      power: supply: charger-manager: fix race-condition in sysfs registration
      power: supply: charger-manager: simplify generation of sysfs attribute group name
      power: supply: bq24257: fix race-condition in sysfs registration
      power: supply: bq24190_charger: fix race-condition in sysfs registration
      power: supply: lp8788: fix race-condition in sysfs registration
      power: supply: ds2781: fix race-condition in sysfs registration
      power: supply: ds2780: fix race-condition in sysfs registration
      power: supply: bq2415x: fix race-condition in sysfs registration
      power: supply: core: add support for custom sysfs attributes
      power: supply: sc27xx: Save last battery capacity
      power: reset: at91-poweroff: move shdwc related data to one structure
      power: supply: sc27xx: Add suspend/resume interfaces
      power: supply: sc27xx: Add fuel gauge low voltage alarm
      ...

commit 16aa70e95947e0870ec9e5bf7c7db33fcbacb957
Author: Olliver Schinagl <oliver@schinagl.nl>
Date:   Tue Dec 11 17:17:05 2018 +0200

    mfd: axp20x: name voltage ramping define properly
    
    The current axp20x names the ramping register 'scal' which probably
    means scaling. Since the register really has nothing to do with
    scaling, but really is the voltage ramp we rename it appropriately.
    
    Signed-off-by: Olliver Schinagl <oliver@schinagl.nl>
    Signed-off-by: Priit Laes <plaes@plaes.org>
    Acked-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/linux/mfd/axp20x.h b/include/linux/mfd/axp20x.h
index 517e60eecbcb..1293695245df 100644
--- a/include/linux/mfd/axp20x.h
+++ b/include/linux/mfd/axp20x.h
@@ -35,7 +35,7 @@ enum axp20x_variants {
 #define AXP152_ALDO_OP_MODE		0x13
 #define AXP152_LDO0_CTRL		0x15
 #define AXP152_DCDC2_V_OUT		0x23
-#define AXP152_DCDC2_V_SCAL		0x25
+#define AXP152_DCDC2_V_RAMP		0x25
 #define AXP152_DCDC1_V_OUT		0x26
 #define AXP152_DCDC3_V_OUT		0x27
 #define AXP152_ALDO12_V_OUT		0x28
@@ -53,7 +53,7 @@ enum axp20x_variants {
 #define AXP20X_USB_OTG_STATUS		0x02
 #define AXP20X_PWR_OUT_CTRL		0x12
 #define AXP20X_DCDC2_V_OUT		0x23
-#define AXP20X_DCDC2_LDO3_V_SCAL	0x25
+#define AXP20X_DCDC2_LDO3_V_RAMP	0x25
 #define AXP20X_DCDC3_V_OUT		0x27
 #define AXP20X_LDO24_V_OUT		0x28
 #define AXP20X_LDO3_V_OUT		0x29

commit 7693b5643fd2d682de90733b67fc8032b9646911
Author: Oskari Lemmela <oskari@lemmela.net>
Date:   Tue Nov 20 19:52:09 2018 +0200

    power: supply: add AC power supply driver for AXP813
    
    AXP813 and AXP803 PMICs can control input current and minimum voltage.
    
    Both of these values are configurable.
    
    Signed-off-by: Oskari Lemmela <oskari@lemmela.net>
    Reviewed-by: Quentin Schulz <quentin.schulz@bootlin.com>
    Reviewed-by: Chen-Yu Tsai <wens@csie.org>
    Acked-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>

diff --git a/include/linux/mfd/axp20x.h b/include/linux/mfd/axp20x.h
index 517e60eecbcb..2302b620d238 100644
--- a/include/linux/mfd/axp20x.h
+++ b/include/linux/mfd/axp20x.h
@@ -266,6 +266,7 @@ enum axp20x_variants {
 #define AXP288_RT_BATT_V_H		0xa0
 #define AXP288_RT_BATT_V_L		0xa1
 
+#define AXP813_ACIN_PATH_CTRL		0x3a
 #define AXP813_ADC_RATE			0x85
 
 /* Fuel Gauge */

commit eef2b53a3ec6b1919d32bd722d2f5d33769a1f48
Author: Chen-Yu Tsai <wens@csie.org>
Date:   Thu Mar 29 12:31:15 2018 +0800

    mfd: axp20x: Correct AXP806 POK interrupt prefix
    
    When AXP806 support was added, POK was incorrectly expanded to PWROK.
    However, the datasheet lists them as POK[LSNP], which is the same as
    on the AXP288. Furthermore, the registers associated with POK functions
    are the same as the PEK on the other AXP PMICs. This suggests that
    "POK" means "Power On Key", much like "PEK" means "Power Enable Key",
    instead of "Power OK".
    
    This patch changes the "PWROK" prefix to "POK" for these interrupts.
    
    Signed-off-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/axp20x.h b/include/linux/mfd/axp20x.h
index a2489363a998..517e60eecbcb 100644
--- a/include/linux/mfd/axp20x.h
+++ b/include/linux/mfd/axp20x.h
@@ -592,11 +592,11 @@ enum axp806_irqs {
 	AXP806_IRQ_DCDCC_V_LOW,
 	AXP806_IRQ_DCDCD_V_LOW,
 	AXP806_IRQ_DCDCE_V_LOW,
-	AXP806_IRQ_PWROK_LONG,
-	AXP806_IRQ_PWROK_SHORT,
+	AXP806_IRQ_POK_LONG,
+	AXP806_IRQ_POK_SHORT,
 	AXP806_IRQ_WAKEUP,
-	AXP806_IRQ_PWROK_FALL,
-	AXP806_IRQ_PWROK_RISE,
+	AXP806_IRQ_POK_FALL,
+	AXP806_IRQ_POK_RISE,
 };
 
 enum axp809_irqs {

commit 531a469ead6ad1e79e8c84ffd4787c0747336e5a
Author: Chen-Yu Tsai <wens@csie.org>
Date:   Thu Mar 29 12:31:13 2018 +0800

    mfd: axp20x: Constify struct mfd_cell and struct resource
    
    The axp20x driver has lots of mfd_cell and resource structs.
    These can all be const-ified.
    
    Signed-off-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/axp20x.h b/include/linux/mfd/axp20x.h
index 82bf7747b312..a2489363a998 100644
--- a/include/linux/mfd/axp20x.h
+++ b/include/linux/mfd/axp20x.h
@@ -642,7 +642,7 @@ struct axp20x_dev {
 	struct regmap_irq_chip_data	*regmap_irqc;
 	long				variant;
 	int                             nr_cells;
-	struct mfd_cell                 *cells;
+	const struct mfd_cell           *cells;
 	const struct regmap_config	*regmap_cfg;
 	const struct regmap_irq_chip	*regmap_irq_chip;
 };

commit 59142f808a5e8722e66ab1753532ed5d300a34dd
Merge: 54ef5b9db767 d6ad805844c5
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Feb 20 10:23:17 2018 +0100

    Merge tag 'iio-for-4.17a' of git://git.kernel.org/pub/scm/linux/kernel/git/jic23/iio into staging-next
    
    Jonathan writes:
    
    First round of new devices, features and cleanups for IIO in the 4.17 cycle.
    
    Outside of IIO
    * Strongly typed 64bit int_sqrt function needed by the mlx90632
    
    New device support
    * adc081s
      - New driver supporting adc081s, adc101s and adc121s TI ADCs.
    * ad5272
      - New driver supproting the ad5272 and ad5274 ADI digital potentiometers
        with DT bindings.
    * axp20x_adc
      - support the AXP813 ADC - includes rework patches to prepare for this.
    * mlx90632
      - New driver with dt bindings for this IR temperature sensor.
    
    Features
    * axp20x_adc
      - Add DT bindings and probing.
    * dht11
      - The sensor has a wider range than advertised in the datasheet - support it.
    * st_lsm6dsx
      - Add hardware timestamp su9pport.
    
    Cleanups
    * ABI docs
      - Update email contact for Matt Ranostay
    * SPDX changes
      - Matt Ranostay has moved his drivers over to SPDX.  Currently we are making
        this an author choice in IIO.
    * ad7192
      - Disable burnout current on misconfiguration.  No actually effect as
        they simply won't work otherwise.
    * ad7476
      - Drop a license definition that was replicating information in SPDX tag.
    * ade7758
      - Expand buf_lock to cover both buffer and state protection allowing
        unintented uses of mlock in the core to be removed.
    * ade7759
      - Align parameters to opening parenthesis.
    * at91_adc
      - Depend on sysfs instead of selecting it - for try wide consistency.
    * ccs811
      - trivial naming type for a define.
    * ep93xx
      - Drop a redundant return as a result checking platform_get_resource.
    * hts221
      - Regmap conversion which simplifies the driver somewhat.
      - Clean up some restricted endian cast warnings.
      - Drop a trailing whitespace from a comment
      - Drop an unnecessary get_unaligned by changing to the right 16bit data type.
    * ms5611
      - Fix coding style in the probe function (whitespace)
    * st_accel
      - Use strlcpy instead of strncpy to avoid potentially truncating a string.

commit 1a3f6755649dd419d9e01cbc38e116e2c70acb73
Author: Quentin Schulz <quentin.schulz@free-electrons.com>
Date:   Mon Jan 15 11:33:41 2018 +0100

    iio: adc: axp20x_adc: add support for AXP813 ADC
    
    The X-Powers AXP813 PMIC is really close to what is already done for
    AXP20X/AXP22X.
    
    There are two pairs of bits to set the rate (one for Voltage and Current
    measurements and one for TS/GPIO0 voltage measurements) instead of one.
    
    The register to set the ADC rates is different from the one for
    AXP20X/AXP22X.
    
    GPIO0 can be used as an ADC (measuring Volts) unlike for AXP22X.
    
    The scales to apply to the different inputs are unlike the ones from
    AXP20X and AXP22X.
    
    Signed-off-by: Quentin Schulz <quentin.schulz@free-electrons.com>
    Acked-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>

diff --git a/include/linux/mfd/axp20x.h b/include/linux/mfd/axp20x.h
index 78dc85365c4f..ff95414c8316 100644
--- a/include/linux/mfd/axp20x.h
+++ b/include/linux/mfd/axp20x.h
@@ -266,6 +266,8 @@ enum axp20x_variants {
 #define AXP288_RT_BATT_V_H		0xa0
 #define AXP288_RT_BATT_V_L		0xa1
 
+#define AXP813_ADC_RATE			0x85
+
 /* Fuel Gauge */
 #define AXP288_FG_RDC1_REG          0xba
 #define AXP288_FG_RDC0_REG          0xbb

commit 9bf317e900a19a857eb9921c9441a92e89f40415
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sun Dec 31 01:04:13 2017 +0900

    extcon: axp288: Remove unused platform data
    
    This is not used / set anywhere in the tree.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Reviewed-by: Chanwoo Choi <cw00.choi@samsung.com>
    Acked-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Chanwoo Choi <cw00.choi@samsung.com>

diff --git a/include/linux/mfd/axp20x.h b/include/linux/mfd/axp20x.h
index 78dc85365c4f..080798f17ece 100644
--- a/include/linux/mfd/axp20x.h
+++ b/include/linux/mfd/axp20x.h
@@ -645,11 +645,6 @@ struct axp20x_dev {
 	const struct regmap_irq_chip	*regmap_irq_chip;
 };
 
-struct axp288_extcon_pdata {
-	/* GPIO pin control to switch D+/D- lines b/w PMIC and SOC */
-	struct gpio_desc *gpio_mux_cntl;
-};
-
 /* generic helper function for reading 9-16 bit wide regs */
 static inline int axp20x_read_variable_width(struct regmap *regmap,
 	unsigned int reg, unsigned int width)

commit d81851c1764b26b46670c0b3bd6701308ddaab98
Author: Chen-Yu Tsai <wens@csie.org>
Date:   Fri Sep 29 11:25:09 2017 +0800

    regulator: axp20x: Add support for AXP813 regulators
    
    The AXP813 PMIC has 7 DC-DC buck regulators, 16 LDOs (including the
    fixed RTC LDO and 2 GPIO LDOs), and 1 switchable. The drive-vbus
    feature is also supported. All the hardware details are very similar
    to the AXP803, with the following exceptions:
    
      - Extra DCDC7 buck regulator, with the same range as DCDC6
    
      - SWitch now has a separate supply pin, instead of being chained
        internaly from DCDC1
    
      - RTC LDO output voltage is now 1.8V
    
      - FLDO3 is an LDO with switchable supplies, but unconfigurable output
        voltage. The voltage is always half that of its supply.
    
    Support for FLDO3 is currently unimplemented, as it requires runtime
    switching of its supplies, something the regulator subsystem does not
    support. It is not used in either the reference designs nor actually
    produced boards available.
    
    Signed-off-by: Chen-Yu Tsai <wens@csie.org>
    Tested-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Acked-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/linux/mfd/axp20x.h b/include/linux/mfd/axp20x.h
index e9c908c4fba8..78dc85365c4f 100644
--- a/include/linux/mfd/axp20x.h
+++ b/include/linux/mfd/axp20x.h
@@ -131,6 +131,9 @@ enum axp20x_variants {
 #define AXP803_DCDC6_V_OUT		0x25
 #define AXP803_DCDC_FREQ_CTRL		0x3b
 
+/* Other DCDC regulator control registers are the same as AXP803 */
+#define AXP813_DCDC7_V_OUT		0x26
+
 /* Interrupt */
 #define AXP152_IRQ1_EN			0x40
 #define AXP152_IRQ2_EN			0x41

commit 7303733a6ca2a68b210ebdc09cace8b0ffe8b179
Author: Chen-Yu Tsai <wens@csie.org>
Date:   Wed Jul 26 16:28:26 2017 +0800

    mfd: axp20x: Add support for AXP813 PMIC
    
    The X-Powers AXP813 PMIC is normally used with Allwinner's A83T SoC.
    It has the same range of functions as other X-Powers PMICs, such as
    DC-DC buck converter and linear regulator outputs, AC-IN and VBUS
    power supplies, power button trigger, GPIOs, ADCs, and a battery
    charger.
    
    Note that the IRQ table given in the datasheet is incorrect: in IRQ
    enable/status registers 1, there are separate IRQs for ACIN and VBUS,
    instead of bits [7:5] being the same as bits [4:2]. So it shares the
    same IRQs as the AXP803, rather than the AXP288.
    
    This patch adds basic mfd support for it, with only the power button
    enabled.
    
    Signed-off-by: Chen-Yu Tsai <wens@csie.org>
    Acked-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/axp20x.h b/include/linux/mfd/axp20x.h
index 965b027e31b3..e9c908c4fba8 100644
--- a/include/linux/mfd/axp20x.h
+++ b/include/linux/mfd/axp20x.h
@@ -23,6 +23,7 @@ enum axp20x_variants {
 	AXP803_ID,
 	AXP806_ID,
 	AXP809_ID,
+	AXP813_ID,
 	NR_AXP20X_VARIANTS,
 };
 
@@ -387,6 +388,34 @@ enum {
 	AXP803_REG_ID_MAX,
 };
 
+enum {
+	AXP813_DCDC1 = 0,
+	AXP813_DCDC2,
+	AXP813_DCDC3,
+	AXP813_DCDC4,
+	AXP813_DCDC5,
+	AXP813_DCDC6,
+	AXP813_DCDC7,
+	AXP813_ALDO1,
+	AXP813_ALDO2,
+	AXP813_ALDO3,
+	AXP813_DLDO1,
+	AXP813_DLDO2,
+	AXP813_DLDO3,
+	AXP813_DLDO4,
+	AXP813_ELDO1,
+	AXP813_ELDO2,
+	AXP813_ELDO3,
+	AXP813_FLDO1,
+	AXP813_FLDO2,
+	AXP813_FLDO3,
+	AXP813_RTC_LDO,
+	AXP813_LDO_IO0,
+	AXP813_LDO_IO1,
+	AXP813_SW,
+	AXP813_REG_ID_MAX,
+};
+
 /* IRQs */
 enum {
 	AXP152_IRQ_LDO0IN_CONNECT = 1,

commit 1dbe0ccb0631c4ed399261934fe16f07407b078d
Author: Icenowy Zheng <icenowy@aosc.io>
Date:   Thu May 18 15:16:49 2017 +0800

    regulator: axp20x-regulator: add support for AXP803
    
    AXP803 PMIC also have a series of regulators (DCDCs and LDOs)
    controllable via I2C/RSB bus.
    
    Add support for them.
    
    Signed-off-by: Icenowy Zheng <icenowy@aosc.io>
    Acked-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/linux/mfd/axp20x.h b/include/linux/mfd/axp20x.h
index cde56cfe8446..965b027e31b3 100644
--- a/include/linux/mfd/axp20x.h
+++ b/include/linux/mfd/axp20x.h
@@ -119,6 +119,17 @@ enum axp20x_variants {
 #define AXP806_BUS_ADDR_EXT		0xfe
 #define AXP806_REG_ADDR_EXT		0xff
 
+#define AXP803_POLYPHASE_CTRL		0x14
+#define AXP803_FLDO1_V_OUT		0x1c
+#define AXP803_FLDO2_V_OUT		0x1d
+#define AXP803_DCDC1_V_OUT		0x20
+#define AXP803_DCDC2_V_OUT		0x21
+#define AXP803_DCDC3_V_OUT		0x22
+#define AXP803_DCDC4_V_OUT		0x23
+#define AXP803_DCDC5_V_OUT		0x24
+#define AXP803_DCDC6_V_OUT		0x25
+#define AXP803_DCDC_FREQ_CTRL		0x3b
+
 /* Interrupt */
 #define AXP152_IRQ1_EN			0x40
 #define AXP152_IRQ2_EN			0x41
@@ -350,6 +361,32 @@ enum {
 	AXP809_REG_ID_MAX,
 };
 
+enum {
+	AXP803_DCDC1 = 0,
+	AXP803_DCDC2,
+	AXP803_DCDC3,
+	AXP803_DCDC4,
+	AXP803_DCDC5,
+	AXP803_DCDC6,
+	AXP803_DC1SW,
+	AXP803_ALDO1,
+	AXP803_ALDO2,
+	AXP803_ALDO3,
+	AXP803_DLDO1,
+	AXP803_DLDO2,
+	AXP803_DLDO3,
+	AXP803_DLDO4,
+	AXP803_ELDO1,
+	AXP803_ELDO2,
+	AXP803_ELDO3,
+	AXP803_FLDO1,
+	AXP803_FLDO2,
+	AXP803_RTC_LDO,
+	AXP803_LDO_IO0,
+	AXP803_LDO_IO1,
+	AXP803_REG_ID_MAX,
+};
+
 /* IRQs */
 enum {
 	AXP152_IRQ_LDO0IN_CONNECT = 1,

commit 1578353e05cd23b10a9e5e8d1626e5bd0849d873
Author: Icenowy Zheng <icenowy@aosc.io>
Date:   Mon Apr 17 19:57:40 2017 +0800

    mfd: axp20x: Support AXP803 variant
    
    AXP803 is a new PMIC chip produced by X-Powers, usually paired with A64
    via RSB bus. The PMIC itself is like AXP288, but with RSB support and
    dedicated VBUS and ACIN.
    
    Add support for it in the axp20x mfd driver.
    
    Currently only power key function is supported.
    
    Signed-off-by: Icenowy Zheng <icenowy@aosc.io>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/axp20x.h b/include/linux/mfd/axp20x.h
index dc8798cf2a24..cde56cfe8446 100644
--- a/include/linux/mfd/axp20x.h
+++ b/include/linux/mfd/axp20x.h
@@ -20,6 +20,7 @@ enum axp20x_variants {
 	AXP221_ID,
 	AXP223_ID,
 	AXP288_ID,
+	AXP803_ID,
 	AXP806_ID,
 	AXP809_ID,
 	NR_AXP20X_VARIANTS,
@@ -234,7 +235,7 @@ enum axp20x_variants {
 #define AXP22X_TS_ADC_L			0x59
 #define AXP22X_BATLOW_THRES1		0xe6
 
-/* AXP288 specific registers */
+/* AXP288/AXP803 specific registers */
 #define AXP288_POWER_REASON		0x02
 #define AXP288_BC_GLOBAL		0x2c
 #define AXP288_BC_VBUS_CNTL		0x2d
@@ -475,6 +476,43 @@ enum axp288_irqs {
 	AXP288_IRQ_BC_USB_CHNG,
 };
 
+enum axp803_irqs {
+	AXP803_IRQ_ACIN_OVER_V = 1,
+	AXP803_IRQ_ACIN_PLUGIN,
+	AXP803_IRQ_ACIN_REMOVAL,
+	AXP803_IRQ_VBUS_OVER_V,
+	AXP803_IRQ_VBUS_PLUGIN,
+	AXP803_IRQ_VBUS_REMOVAL,
+	AXP803_IRQ_BATT_PLUGIN,
+	AXP803_IRQ_BATT_REMOVAL,
+	AXP803_IRQ_BATT_ENT_ACT_MODE,
+	AXP803_IRQ_BATT_EXIT_ACT_MODE,
+	AXP803_IRQ_CHARG,
+	AXP803_IRQ_CHARG_DONE,
+	AXP803_IRQ_BATT_CHG_TEMP_HIGH,
+	AXP803_IRQ_BATT_CHG_TEMP_HIGH_END,
+	AXP803_IRQ_BATT_CHG_TEMP_LOW,
+	AXP803_IRQ_BATT_CHG_TEMP_LOW_END,
+	AXP803_IRQ_BATT_ACT_TEMP_HIGH,
+	AXP803_IRQ_BATT_ACT_TEMP_HIGH_END,
+	AXP803_IRQ_BATT_ACT_TEMP_LOW,
+	AXP803_IRQ_BATT_ACT_TEMP_LOW_END,
+	AXP803_IRQ_DIE_TEMP_HIGH,
+	AXP803_IRQ_GPADC,
+	AXP803_IRQ_LOW_PWR_LVL1,
+	AXP803_IRQ_LOW_PWR_LVL2,
+	AXP803_IRQ_TIMER,
+	AXP803_IRQ_PEK_RIS_EDGE,
+	AXP803_IRQ_PEK_FAL_EDGE,
+	AXP803_IRQ_PEK_SHORT,
+	AXP803_IRQ_PEK_LONG,
+	AXP803_IRQ_PEK_OVER_OFF,
+	AXP803_IRQ_GPIO1_INPUT,
+	AXP803_IRQ_GPIO0_INPUT,
+	AXP803_IRQ_BC_USB_CHNG,
+	AXP803_IRQ_MV_CHNG,
+};
+
 enum axp806_irqs {
 	AXP806_IRQ_DIE_TEMP_HIGH_LV1,
 	AXP806_IRQ_DIE_TEMP_HIGH_LV2,

commit ed7311f0d089553f39ff3e1e2d9f55f94324c42f
Author: Quentin Schulz <quentin.schulz@free-electrons.com>
Date:   Mon Mar 20 09:16:45 2017 +0100

    mfd: axp20x: Correct name of temperature data ADC registers
    
    The registers 0x56 and 0x57 of AXP22X PMIC store the value of the
    internal temperature of the PMIC.
    
    This patch modifies the name of these registers from AXP22X_PMIC_ADC_H/L
    to AXP22X_PMIC_TEMP_H/L so their purpose is clearer.
    
    Signed-off-by: Quentin Schulz <quentin.schulz@free-electrons.com>
    Acked-by: Chen-Yu Tsai <wens@csie.org>
    Acked-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/axp20x.h b/include/linux/mfd/axp20x.h
index 0d9a1ff38393..dc8798cf2a24 100644
--- a/include/linux/mfd/axp20x.h
+++ b/include/linux/mfd/axp20x.h
@@ -228,8 +228,8 @@ enum axp20x_variants {
 #define AXP20X_OCV_MAX			0xf
 
 /* AXP22X specific registers */
-#define AXP22X_PMIC_ADC_H		0x56
-#define AXP22X_PMIC_ADC_L		0x57
+#define AXP22X_PMIC_TEMP_H		0x56
+#define AXP22X_PMIC_TEMP_L		0x57
 #define AXP22X_TS_ADC_H			0x58
 #define AXP22X_TS_ADC_L			0x59
 #define AXP22X_BATLOW_THRES1		0xe6

commit df9cdc1727ed9debfce59c5f600d794a63fcbfeb
Merge: bc49a7831b11 e93c10211d03
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Feb 23 08:18:01 2017 -0800

    Merge tag 'mfd-for-linus-4.11' of git://git.kernel.org/pub/scm/linux/kernel/git/lee/mfd
    
    Pull MFD updates from Lee Jones:
     "Core Frameworks:
       - Add new !TOUCHSCREEN_SUN4I dependency for SUN4I_GPADC
       - List include/dt-bindings/mfd/* to files supported in MAINTAINERS
    
      New Drivers:
       - Intel Apollo Lake SPI NOR
       - ST STM32 Timers (Advanced, Basic and PWM)
       - Motorola 6556002 CPCAP (PMIC)
    
      New Device Support:
       - Add support for AXP221 to axp20x
       - Add support for Intel Gemini Lake to intel-lpss-pci
       - Add support for MT6323 LED to mt6397-core
       - Add support for COMe-bBD#, COMe-bSL6, COMe-bKL6, COMe-cAL6 and
         COMe-cKL6 to kempld-core
    
      New Functionality:
       - Add support for Analog CODAC to sun6i-prcm
       - Add support for Watchdog to lpc_ich
    
      Fix-ups:
       - Error handling improvements; axp288_charger, axp20x, ab8500-sysctrl
       - Adapt platform data handling; axp20x
       - IRQ handling improvements; arizona, axp20x
       - Remove superfluous code; arizona, axp20x, lpc_ich
       - Trivial coding style/spelling fixes; axp20x, abx500, mfd.txt
       - Regmap fix-ups; axp20x
       - DT changes; mfd.txt, aspeed-lpc, aspeed-gfx, ab8500-core, tps65912,
         mt6397
       - Use new I2C probing mechanism; max77686
       - Constification; rk808
    
      Bug Fixes:
       - Stop data transfer whilst suspended; cros_ec"
    
    * tag 'mfd-for-linus-4.11' of git://git.kernel.org/pub/scm/linux/kernel/git/lee/mfd: (43 commits)
      mfd: lpc_ich: Enable watchdog on Intel Apollo Lake PCH
      mfd: lpc_ich: Remove useless comments in core part
      mfd: Add support for several boards to Kontron PLD driver
      mfd: constify regmap_irq_chip structures
      MAINTAINERS: Add include/dt-bindings/mfd to MFD entry
      mfd: cpcap: Add minimal support
      mfd: mt6397: Add MT6323 LED support into MT6397 driver
      Documentation: devicetree: Add LED subnode binding for MT6323 PMIC
      mfd: tps65912: Export OF device ID table as module aliases
      mfd: ab8500-core: Rename clock device and compatible
      mfd: cros_ec: Send correct suspend/resume event to EC
      mfd: max77686: Remove I2C device ID table
      mfd: max77686: Use the struct i2c_driver .probe_new instead of .probe
      mfd: max77686: Use of_device_get_match_data() helper
      mfd: max77686: Don't attempt to get i2c_device_id .data
      mfd: ab8500-sysctrl: Handle probe deferral
      mfd: intel-lpss: Add Intel Gemini Lake PCI IDs
      mfd: axp20x: Fix AXP806 access errors on cold boot
      mfd: cros_ec: Send suspend state notification to EC
      mfd: cros_ec: Prevent data transfer while device is suspended
      ...

commit 178e8351cef3607821ec9a4e2fe3f414145fdf34
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Fri Dec 16 21:09:05 2016 +0100

    mfd: axp20x: Add a few missing defines for AXP288 specific registers
    
    Add defines for the AXP288_POWER_REASON and AXP288_RT_BATT_V_H and
    AXP288_RT_BATT_V_L and AXP288_BC_* registers. While at it also move the
    AXP288_TS_ADC_H-AXP288_GP_ADC_L defines, which for some reason where
    in a different place, together with the rest of the AXP288 specific
    defines.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/axp20x.h b/include/linux/mfd/axp20x.h
index 35418ccb3bb7..0aa4ef7157b8 100644
--- a/include/linux/mfd/axp20x.h
+++ b/include/linux/mfd/axp20x.h
@@ -235,9 +235,20 @@ enum {
 #define AXP22X_BATLOW_THRES1		0xe6
 
 /* AXP288 specific registers */
+#define AXP288_POWER_REASON		0x02
+#define AXP288_BC_GLOBAL		0x2c
+#define AXP288_BC_VBUS_CNTL		0x2d
+#define AXP288_BC_USB_STAT		0x2e
+#define AXP288_BC_DET_STAT		0x2f
 #define AXP288_PMIC_ADC_H               0x56
 #define AXP288_PMIC_ADC_L               0x57
+#define AXP288_TS_ADC_H			0x58
+#define AXP288_TS_ADC_L			0x59
+#define AXP288_GP_ADC_H			0x5a
+#define AXP288_GP_ADC_L			0x5b
 #define AXP288_ADC_TS_PIN_CTRL          0x84
+#define AXP288_RT_BATT_V_H		0xa0
+#define AXP288_RT_BATT_V_L		0xa1
 
 /* Fuel Gauge */
 #define AXP288_FG_RDC1_REG          0xba
@@ -514,11 +525,6 @@ enum axp809_irqs {
 	AXP809_IRQ_GPIO0_INPUT,
 };
 
-#define AXP288_TS_ADC_H		0x58
-#define AXP288_TS_ADC_L		0x59
-#define AXP288_GP_ADC_H		0x5a
-#define AXP288_GP_ADC_L		0x5b
-
 struct axp20x_dev {
 	struct device			*dev;
 	int				irq;

commit 59f10f7e62a28b9b664a9b2efbc5bd10d8d751f0
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Wed Dec 14 14:52:08 2016 +0100

    mfd: axp20x: Drop wrong AXP288_PMIC_ADC_EN define
    
    The adc-enable register for the axp288 is 0x82, not 0x84.
    0x82 is already defined as AXP20X_ADC_EN1 and that is what the
    axp288_adc driver is actually using, so simply drop the wrong
    AXP288_PMIC_ADC_EN define.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/axp20x.h b/include/linux/mfd/axp20x.h
index 6d5dd3f96d33..35418ccb3bb7 100644
--- a/include/linux/mfd/axp20x.h
+++ b/include/linux/mfd/axp20x.h
@@ -238,7 +238,6 @@ enum {
 #define AXP288_PMIC_ADC_H               0x56
 #define AXP288_PMIC_ADC_L               0x57
 #define AXP288_ADC_TS_PIN_CTRL          0x84
-#define AXP288_PMIC_ADC_EN              0x84
 
 /* Fuel Gauge */
 #define AXP288_FG_RDC1_REG          0xba

commit 0a5454c901aea0fef99f5ef7910c69c501817ae1
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Wed Dec 14 14:52:05 2016 +0100

    mfd: axp20x: Use IRQF_TRIGGER_LOW on the axp288
    
    The interrupt line of the entire family of axp2xx pmics is active-low,
    for devicetree enumerated irqs, this is dealt with in the devicetree.
    
    ACPI irq resources have a flag field for this too, I tried using this
    on my CUBE iwork8 Air tablet, but it does not contain the right data.
    
    The dstd shows the irq listed as either ActiveLow or ActiveHigh,
    depending on the OSID variable, which seems to be set by the
    "OS IMAGE ID" in the BIOS/EFI setup screen.
    
    Since the acpi-resource info is no good, simply pass in IRQF_TRIGGER_LOW
    on the axp288.
    
    Together with the other axp288 fixes in this series, this fixes the axp288
    irq contineously triggering.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/axp20x.h b/include/linux/mfd/axp20x.h
index 39f1da18c917..6d5dd3f96d33 100644
--- a/include/linux/mfd/axp20x.h
+++ b/include/linux/mfd/axp20x.h
@@ -523,6 +523,7 @@ enum axp809_irqs {
 struct axp20x_dev {
 	struct device			*dev;
 	int				irq;
+	unsigned long			irq_flags;
 	struct regmap			*regmap;
 	struct regmap_irq_chip_data	*regmap_irqc;
 	long				variant;

commit 34a23327697d558a582e356573d7d36773996fbb
Author: Corentin Labbe <clabbe.montjoie@gmail.com>
Date:   Mon Dec 5 13:15:28 2016 +0100

    mfd: axp20x: Correct a typo in axp20x_device_remove documentation
    
    The documentation of axp20x_device_remove() have a typo and use
    axp20x_device_probe() as name. This patch fix this typo.
    
    Signed-off-by: Corentin Labbe <clabbe.montjoie@gmail.com>
    Acked-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/axp20x.h b/include/linux/mfd/axp20x.h
index 812806d6319b..39f1da18c917 100644
--- a/include/linux/mfd/axp20x.h
+++ b/include/linux/mfd/axp20x.h
@@ -582,7 +582,7 @@ int axp20x_match_device(struct axp20x_dev *axp20x);
 int axp20x_device_probe(struct axp20x_dev *axp20x);
 
 /**
- * axp20x_device_probe(): Remove a axp20x device
+ * axp20x_device_remove(): Remove a axp20x device
  *
  * @axp20x: axp20x device to remove
  *

commit 15df6d98ec3b40775918fc6ef73d7f1c2d0cf870
Author: Michal Suchanek <msuchanek@suse.de>
Date:   Tue Jan 10 18:48:12 2017 +0100

    power: supply: axp20x_usb_power: fix warning on 64bit
    
    Casting of_device_get_match_data return value to int causes warning on 64bit
    architectures.
    
    ../drivers/power/supply/axp20x_usb_power.c: In function
    'axp20x_usb_power_probe':
    ../drivers/power/supply/axp20x_usb_power.c:297:21: warning: cast from
    pointer to integer of different size [-Wpointer-to-int-cast]
    
    Fixes: 0dcc70ca8644 ("power: supply: axp20x_usb_power: use of_device_id
        data field instead of device_is_compatible")
    Signed-off-by: Michal Suchanek <msuchanek@suse.de>
    Signed-off-by: Sebastian Reichel <sre@kernel.org>

diff --git a/include/linux/mfd/axp20x.h b/include/linux/mfd/axp20x.h
index 812806d6319b..f848ee86a339 100644
--- a/include/linux/mfd/axp20x.h
+++ b/include/linux/mfd/axp20x.h
@@ -13,7 +13,7 @@
 
 #include <linux/regmap.h>
 
-enum {
+enum axp20x_variants {
 	AXP152_ID = 0,
 	AXP202_ID,
 	AXP209_ID,

commit 888f97435a856c2c5c6ca0b3337b68d595b5639e
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Wed Dec 14 17:38:53 2016 +0100

    power: supply: axp288_fuel_gauge: Drop platform_data dependency
    
    When the axp288_faul_gauge driver was originally merged, it was
    merged with a dependency on some other driver providing platform
    data for it.
    
    However the battery-data-framework which should provide that data
    never got merged, resulting in x86 tablets / laptops with an axp288
    having no working battery monitor, as before this commit the driver
    would simply return -ENODEV if there is no platform data.
    
    This commit removes the dependency on the platform_data instead
    checking that the firmware has initialized the fuel-gauge and
    reading the info back from the pmic.
    
    What is missing from the read-back info is the table to map raw adc
    values to temperature, so this commit drops the temperature and
    temperature limits properties. The min voltage, charge design and
    model name info is also missing. Note that none of these are really
    important for userspace to have.
    
    All other functionality is preserved and actually made available
    by this commit.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=88471
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sebastian Reichel <sre@kernel.org>

diff --git a/include/linux/mfd/axp20x.h b/include/linux/mfd/axp20x.h
index e460fc42d63e..812806d6319b 100644
--- a/include/linux/mfd/axp20x.h
+++ b/include/linux/mfd/axp20x.h
@@ -532,28 +532,6 @@ struct axp20x_dev {
 	const struct regmap_irq_chip	*regmap_irq_chip;
 };
 
-#define BATTID_LEN				64
-#define OCV_CURVE_SIZE			32
-#define MAX_THERM_CURVE_SIZE	25
-#define PD_DEF_MIN_TEMP			0
-#define PD_DEF_MAX_TEMP			55
-
-struct axp20x_fg_pdata {
-	char battid[BATTID_LEN + 1];
-	int design_cap;
-	int min_volt;
-	int max_volt;
-	int max_temp;
-	int min_temp;
-	int cap1;
-	int cap0;
-	int rdc1;
-	int rdc0;
-	int ocv_curve[OCV_CURVE_SIZE];
-	int tcsz;
-	int thermistor_curve[MAX_THERM_CURVE_SIZE][2];
-};
-
 struct axp288_extcon_pdata {
 	/* GPIO pin control to switch D+/D- lines b/w PMIC and SOC */
 	struct gpio_desc *gpio_mux_cntl;

commit eac53b3664f592713655f5de59dc44bdd0cfc0bd
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Wed Dec 21 15:36:47 2016 +0100

    power: supply: axp288_charger: Drop platform_data dependency
    
    When the axp288_charger driver was originally merged, it was merged with
    a dependency on some other driver providing platform data for it.
    
    However the battery-data-framework which should provide that data never
    got merged, so the axp288_charger as merged upstream has never worked,
    its probe method simply always returns -ENODEV.
    
    This commit removes the dependency on the platform_data instead reading
    back the charging current and charging voltage that the firmware has set
    and using those values as the maximum values the user may set.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sebastian Reichel <sre@kernel.org>

diff --git a/include/linux/mfd/axp20x.h b/include/linux/mfd/axp20x.h
index a4860bc9b73d..e460fc42d63e 100644
--- a/include/linux/mfd/axp20x.h
+++ b/include/linux/mfd/axp20x.h
@@ -554,13 +554,6 @@ struct axp20x_fg_pdata {
 	int thermistor_curve[MAX_THERM_CURVE_SIZE][2];
 };
 
-struct axp20x_chrg_pdata {
-	int max_cc;
-	int max_cv;
-	int def_cc;
-	int def_cv;
-};
-
 struct axp288_extcon_pdata {
 	/* GPIO pin control to switch D+/D- lines b/w PMIC and SOC */
 	struct gpio_desc *gpio_mux_cntl;

commit 34d9030b5d06ec0072796b3ab6a3fa24e53ece3d
Author: Chen-Yu Tsai <wens@csie.org>
Date:   Fri Nov 11 11:29:52 2016 +0800

    mfd: axp20x: Add address extension registers for AXP806 regmap
    
    The AXP806 supports either master/standalone or slave mode.
    Slave mode allows sharing the serial bus, even with multiple
    AXP806 which all have the same hardware address.
    
    This is done with extra "serial interface address extension",
    or AXP806_BUS_ADDR_EXT, and "register address extension", or
    AXP806_REG_ADDR_EXT, registers. The former is read-only, with
    1 bit customizable at the factory, and 1 bit depending on the
    state of an external pin. The latter is writable. Only when
    the these device addressing bits (in the upper 4 bits of the
    registers) match, will the device respond to operations on
    its other registers.
    
    Add these 2 registers to the regmap so we can access them.
    
    Signed-off-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/axp20x.h b/include/linux/mfd/axp20x.h
index 6349496f09fc..a4860bc9b73d 100644
--- a/include/linux/mfd/axp20x.h
+++ b/include/linux/mfd/axp20x.h
@@ -115,6 +115,8 @@ enum {
 #define AXP806_CLDO2_V_CTRL		0x25
 #define AXP806_CLDO3_V_CTRL		0x26
 #define AXP806_VREF_TEMP_WARN_L		0xf3
+#define AXP806_BUS_ADDR_EXT		0xfe
+#define AXP806_REG_ADDR_EXT		0xff
 
 /* Interrupt */
 #define AXP152_IRQ1_EN			0x40

commit 3f89586bc1ce1434b15f78e62b555c0619852295
Author: Icenowy Zheng <icenowy@aosc.xyz>
Date:   Fri Jul 1 17:29:23 2016 +0800

    mfd: axp20x: Add adc volatile ranges for axp22x
    
    AXP22x has also some different register map than axp20x, they're also
    added here.
    
    Signed-off-by: Icenowy Zheng <icenowy@aosc.xyz>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/axp20x.h b/include/linux/mfd/axp20x.h
index fec597fb34cb..6349496f09fc 100644
--- a/include/linux/mfd/axp20x.h
+++ b/include/linux/mfd/axp20x.h
@@ -226,6 +226,10 @@ enum {
 #define AXP20X_OCV_MAX			0xf
 
 /* AXP22X specific registers */
+#define AXP22X_PMIC_ADC_H		0x56
+#define AXP22X_PMIC_ADC_L		0x57
+#define AXP22X_TS_ADC_H			0x58
+#define AXP22X_TS_ADC_L			0x59
 #define AXP22X_BATLOW_THRES1		0xe6
 
 /* AXP288 specific registers */

commit 8824ee8573483e1c91691b5be3d3730e75551dce
Author: Chen-Yu Tsai <wens@csie.org>
Date:   Sat Aug 27 15:55:38 2016 +0800

    mfd: axp20x: Add support for AXP806 PMIC
    
    The X-Powers AXP806 is a new PMIC that is paired with Allwinner's A80
    SoC, along with a master AXP809 PMIC.
    
    This PMIC has a new register layout, and supports some functions not
    seen in other X-Powers PMICs, such as master-slave mode, or having
    multiple AXP806 PMICs on the same bus with address space extension,
    or supporting both I2C and RSB mode. I2C has not been tested.
    
    This patch adds support for the interrupts of the PMIC. A regulator
    sub-device is enabled, but actual regulator support will come in a
    later patch.
    
    Signed-off-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/axp20x.h b/include/linux/mfd/axp20x.h
index 0be4982f08fe..fec597fb34cb 100644
--- a/include/linux/mfd/axp20x.h
+++ b/include/linux/mfd/axp20x.h
@@ -20,6 +20,7 @@ enum {
 	AXP221_ID,
 	AXP223_ID,
 	AXP288_ID,
+	AXP806_ID,
 	AXP809_ID,
 	NR_AXP20X_VARIANTS,
 };
@@ -91,6 +92,30 @@ enum {
 #define AXP22X_ALDO3_V_OUT		0x2a
 #define AXP22X_CHRG_CTRL3		0x35
 
+#define AXP806_STARTUP_SRC		0x00
+#define AXP806_CHIP_ID			0x03
+#define AXP806_PWR_OUT_CTRL1		0x10
+#define AXP806_PWR_OUT_CTRL2		0x11
+#define AXP806_DCDCA_V_CTRL		0x12
+#define AXP806_DCDCB_V_CTRL		0x13
+#define AXP806_DCDCC_V_CTRL		0x14
+#define AXP806_DCDCD_V_CTRL		0x15
+#define AXP806_DCDCE_V_CTRL		0x16
+#define AXP806_ALDO1_V_CTRL		0x17
+#define AXP806_ALDO2_V_CTRL		0x18
+#define AXP806_ALDO3_V_CTRL		0x19
+#define AXP806_DCDC_MODE_CTRL1		0x1a
+#define AXP806_DCDC_MODE_CTRL2		0x1b
+#define AXP806_DCDC_FREQ_CTRL		0x1c
+#define AXP806_BLDO1_V_CTRL		0x20
+#define AXP806_BLDO2_V_CTRL		0x21
+#define AXP806_BLDO3_V_CTRL		0x22
+#define AXP806_BLDO4_V_CTRL		0x23
+#define AXP806_CLDO1_V_CTRL		0x24
+#define AXP806_CLDO2_V_CTRL		0x25
+#define AXP806_CLDO3_V_CTRL		0x26
+#define AXP806_VREF_TEMP_WARN_L		0xf3
+
 /* Interrupt */
 #define AXP152_IRQ1_EN			0x40
 #define AXP152_IRQ2_EN			0x41
@@ -265,6 +290,26 @@ enum {
 	AXP22X_REG_ID_MAX,
 };
 
+enum {
+	AXP806_DCDCA = 0,
+	AXP806_DCDCB,
+	AXP806_DCDCC,
+	AXP806_DCDCD,
+	AXP806_DCDCE,
+	AXP806_ALDO1,
+	AXP806_ALDO2,
+	AXP806_ALDO3,
+	AXP806_BLDO1,
+	AXP806_BLDO2,
+	AXP806_BLDO3,
+	AXP806_BLDO4,
+	AXP806_CLDO1,
+	AXP806_CLDO2,
+	AXP806_CLDO3,
+	AXP806_SW,
+	AXP806_REG_ID_MAX,
+};
+
 enum {
 	AXP809_DCDC1 = 0,
 	AXP809_DCDC2,
@@ -414,6 +459,21 @@ enum axp288_irqs {
 	AXP288_IRQ_BC_USB_CHNG,
 };
 
+enum axp806_irqs {
+	AXP806_IRQ_DIE_TEMP_HIGH_LV1,
+	AXP806_IRQ_DIE_TEMP_HIGH_LV2,
+	AXP806_IRQ_DCDCA_V_LOW,
+	AXP806_IRQ_DCDCB_V_LOW,
+	AXP806_IRQ_DCDCC_V_LOW,
+	AXP806_IRQ_DCDCD_V_LOW,
+	AXP806_IRQ_DCDCE_V_LOW,
+	AXP806_IRQ_PWROK_LONG,
+	AXP806_IRQ_PWROK_SHORT,
+	AXP806_IRQ_WAKEUP,
+	AXP806_IRQ_PWROK_FALL,
+	AXP806_IRQ_PWROK_RISE,
+};
+
 enum axp809_irqs {
 	AXP809_IRQ_ACIN_OVER_V = 1,
 	AXP809_IRQ_ACIN_PLUGIN,

commit 20147f0d4f50f6f0d1fbe1815fe3d4d0a6444a70
Author: Chen-Yu Tsai <wens@csie.org>
Date:   Tue Mar 29 17:22:26 2016 +0800

    mfd: axp20x: Add support for AXP809 PMIC
    
    The X-Powers AXP809 is a new PMIC that is paired with Allwinner's A80
    SoC, along with a slave AXP806 PMIC.
    
    This PMIC is quite similar to the earlier AXP223, though the interrupts
    and regulator have changed a bit.
    
    This patch adds support for the interrupts and power button of the PMIC.
    
    Signed-off-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/axp20x.h b/include/linux/mfd/axp20x.h
index d82e7d51372b..0be4982f08fe 100644
--- a/include/linux/mfd/axp20x.h
+++ b/include/linux/mfd/axp20x.h
@@ -20,6 +20,7 @@ enum {
 	AXP221_ID,
 	AXP223_ID,
 	AXP288_ID,
+	AXP809_ID,
 	NR_AXP20X_VARIANTS,
 };
 
@@ -264,6 +265,29 @@ enum {
 	AXP22X_REG_ID_MAX,
 };
 
+enum {
+	AXP809_DCDC1 = 0,
+	AXP809_DCDC2,
+	AXP809_DCDC3,
+	AXP809_DCDC4,
+	AXP809_DCDC5,
+	AXP809_DC1SW,
+	AXP809_DC5LDO,
+	AXP809_ALDO1,
+	AXP809_ALDO2,
+	AXP809_ALDO3,
+	AXP809_ELDO1,
+	AXP809_ELDO2,
+	AXP809_ELDO3,
+	AXP809_DLDO1,
+	AXP809_DLDO2,
+	AXP809_RTC_LDO,
+	AXP809_LDO_IO0,
+	AXP809_LDO_IO1,
+	AXP809_SW,
+	AXP809_REG_ID_MAX,
+};
+
 /* IRQs */
 enum {
 	AXP152_IRQ_LDO0IN_CONNECT = 1,
@@ -390,6 +414,41 @@ enum axp288_irqs {
 	AXP288_IRQ_BC_USB_CHNG,
 };
 
+enum axp809_irqs {
+	AXP809_IRQ_ACIN_OVER_V = 1,
+	AXP809_IRQ_ACIN_PLUGIN,
+	AXP809_IRQ_ACIN_REMOVAL,
+	AXP809_IRQ_VBUS_OVER_V,
+	AXP809_IRQ_VBUS_PLUGIN,
+	AXP809_IRQ_VBUS_REMOVAL,
+	AXP809_IRQ_VBUS_V_LOW,
+	AXP809_IRQ_BATT_PLUGIN,
+	AXP809_IRQ_BATT_REMOVAL,
+	AXP809_IRQ_BATT_ENT_ACT_MODE,
+	AXP809_IRQ_BATT_EXIT_ACT_MODE,
+	AXP809_IRQ_CHARG,
+	AXP809_IRQ_CHARG_DONE,
+	AXP809_IRQ_BATT_CHG_TEMP_HIGH,
+	AXP809_IRQ_BATT_CHG_TEMP_HIGH_END,
+	AXP809_IRQ_BATT_CHG_TEMP_LOW,
+	AXP809_IRQ_BATT_CHG_TEMP_LOW_END,
+	AXP809_IRQ_BATT_ACT_TEMP_HIGH,
+	AXP809_IRQ_BATT_ACT_TEMP_HIGH_END,
+	AXP809_IRQ_BATT_ACT_TEMP_LOW,
+	AXP809_IRQ_BATT_ACT_TEMP_LOW_END,
+	AXP809_IRQ_DIE_TEMP_HIGH,
+	AXP809_IRQ_LOW_PWR_LVL1,
+	AXP809_IRQ_LOW_PWR_LVL2,
+	AXP809_IRQ_TIMER,
+	AXP809_IRQ_PEK_RIS_EDGE,
+	AXP809_IRQ_PEK_FAL_EDGE,
+	AXP809_IRQ_PEK_SHORT,
+	AXP809_IRQ_PEK_LONG,
+	AXP809_IRQ_PEK_OVER_OFF,
+	AXP809_IRQ_GPIO1_INPUT,
+	AXP809_IRQ_GPIO0_INPUT,
+};
+
 #define AXP288_TS_ADC_H		0x58
 #define AXP288_TS_ADC_L		0x59
 #define AXP288_GP_ADC_H		0x5a

commit 02071f0f797c989b342f46fbdf472ddb1c2cdee9
Author: Chen-Yu Tsai <wens@csie.org>
Date:   Fri Feb 12 10:02:44 2016 +0800

    mfd: axp20x: Add support for RSB based AXP223 PMIC
    
    The AXP223 is a new PMIC commonly paired with Allwinner A23/A33 SoCs.
    It is functionally identical to AXP221; only the regulator default
    voltage/status and the external host interface are different.
    
    Signed-off-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/axp20x.h b/include/linux/mfd/axp20x.h
index 00697c6ad8b0..d82e7d51372b 100644
--- a/include/linux/mfd/axp20x.h
+++ b/include/linux/mfd/axp20x.h
@@ -18,6 +18,7 @@ enum {
 	AXP202_ID,
 	AXP209_ID,
 	AXP221_ID,
+	AXP223_ID,
 	AXP288_ID,
 	NR_AXP20X_VARIANTS,
 };

commit 4fd411514291ae75053003e33a6a4a56f97467d0
Author: Chen-Yu Tsai <wens@csie.org>
Date:   Fri Feb 12 10:02:42 2016 +0800

    mfd: axp20x: Split the driver into core and i2c bits
    
    The axp20x driver assumes the device is i2c based. This is not the
    case with later chips, which use a proprietary 2 wire serial bus
    by Allwinner called "Reduced Serial Bus".
    
    This patch follows the example of mfd/wm831x and splits it into
    an interface independent core, and an i2c specific glue layer.
    MFD_AXP20X and the new MFD_AXP20X_I2C are changed to tristate
    symbols, allowing the driver to be built as modules.
    
    Whitespace and other style errors in the moved i2c specific code
    have been fixed. Included but unused header files are removed as
    well.
    
    Signed-off-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/axp20x.h b/include/linux/mfd/axp20x.h
index b24c771cebd5..00697c6ad8b0 100644
--- a/include/linux/mfd/axp20x.h
+++ b/include/linux/mfd/axp20x.h
@@ -396,7 +396,7 @@ enum axp288_irqs {
 
 struct axp20x_dev {
 	struct device			*dev;
-	struct i2c_client		*i2c_client;
+	int				irq;
 	struct regmap			*regmap;
 	struct regmap_irq_chip_data	*regmap_irqc;
 	long				variant;
@@ -462,4 +462,35 @@ static inline int axp20x_read_variable_width(struct regmap *regmap,
 	return result;
 }
 
+/**
+ * axp20x_match_device(): Setup axp20x variant related fields
+ *
+ * @axp20x: axp20x device to setup (.dev field must be set)
+ * @dev: device associated with this axp20x device
+ *
+ * This lets the axp20x core configure the mfd cells and register maps
+ * for later use.
+ */
+int axp20x_match_device(struct axp20x_dev *axp20x);
+
+/**
+ * axp20x_device_probe(): Probe a configured axp20x device
+ *
+ * @axp20x: axp20x device to probe (must be configured)
+ *
+ * This function lets the axp20x core register the axp20x mfd devices
+ * and irqchip. The axp20x device passed in must be fully configured
+ * with axp20x_match_device, its irq set, and regmap created.
+ */
+int axp20x_device_probe(struct axp20x_dev *axp20x);
+
+/**
+ * axp20x_device_probe(): Remove a axp20x device
+ *
+ * @axp20x: axp20x device to remove
+ *
+ * This tells the axp20x core to remove the associated mfd devices
+ */
+int axp20x_device_remove(struct axp20x_dev *axp20x);
+
 #endif /* __LINUX_MFD_AXP20X_H */

commit 69fb4dcada7704beeba86e3f401a66c726aa8504
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sat Aug 1 10:39:38 2015 +0200

    power: Add an axp20x-usb-power driver
    
    This adds a driver for the usb power_supply bits of the axp20x PMICs.
    
    I initially started writing my own driver, before coming aware of
    Bruno Prémont's excellent earlier RFC with a driver for this.
    
    My driver was lacking CURRENT_MAX and VOLTAGE_MIN support Bruno's
    drvier has, so I've copied the code for those from his driver.
    
    Note that the AC-power-supply and battery charger bits will need separate
    drivers. Each one needs its own devictree child-node so that other
    devicetree nodes can reference the right power-supply, and thus each one
    will get its own mfd-cell / platform_device and platform-driver.
    
    Cc: Bruno Prémont <bonbons@linux-vserver.org>
    Acked-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Bruno Prémont <bonbons@linux-vserver.org>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sebastian Reichel <sre@kernel.org>

diff --git a/include/linux/mfd/axp20x.h b/include/linux/mfd/axp20x.h
index cc8ad1e1a307..b24c771cebd5 100644
--- a/include/linux/mfd/axp20x.h
+++ b/include/linux/mfd/axp20x.h
@@ -11,6 +11,8 @@
 #ifndef __LINUX_MFD_AXP20X_H
 #define __LINUX_MFD_AXP20X_H
 
+#include <linux/regmap.h>
+
 enum {
 	AXP152_ID = 0,
 	AXP202_ID,
@@ -438,4 +440,26 @@ struct axp288_extcon_pdata {
 	struct gpio_desc *gpio_mux_cntl;
 };
 
+/* generic helper function for reading 9-16 bit wide regs */
+static inline int axp20x_read_variable_width(struct regmap *regmap,
+	unsigned int reg, unsigned int width)
+{
+	unsigned int reg_val, result;
+	int err;
+
+	err = regmap_read(regmap, reg, &reg_val);
+	if (err)
+		return err;
+
+	result = reg_val << (width - 8);
+
+	err = regmap_read(regmap, reg + 1, &reg_val);
+	if (err)
+		return err;
+
+	result |= reg_val;
+
+	return result;
+}
+
 #endif /* __LINUX_MFD_AXP20X_H */

commit 553ed4b5dff66dbb10c20599e493b72ec6af72ab
Author: Bruno Prémont <bonbons@linux-vserver.org>
Date:   Sat Aug 8 17:58:40 2015 +0200

    mfd: axp20x: Add missing registers, and mark more registers volatile
    
    Add an extra set of registers which is necessary tu support the PMICs
    battery charger function, and mark registers which contain status bits,
    gpio status, and adc readings as volatile.
    
    Signed-off-by: Bruno Prémont <bonbons@linux-vserver.org>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/axp20x.h b/include/linux/mfd/axp20x.h
index 52203d5f7984..cc8ad1e1a307 100644
--- a/include/linux/mfd/axp20x.h
+++ b/include/linux/mfd/axp20x.h
@@ -190,6 +190,12 @@ enum {
 #define AXP20X_CC_CTRL			0xb8
 #define AXP20X_FG_RES			0xb9
 
+/* OCV */
+#define AXP20X_RDC_H			0xba
+#define AXP20X_RDC_L			0xbb
+#define AXP20X_OCV(m)			(0xc0 + (m))
+#define AXP20X_OCV_MAX			0xf
+
 /* AXP22X specific registers */
 #define AXP22X_BATLOW_THRES1		0xe6
 

commit d8d79f8f60c4363a0fa490ff1626be4bd5e003a3
Author: Michal Suchanek <hramrach@gmail.com>
Date:   Sat Jul 11 14:59:56 2015 +0200

    mfd: axp20x: Add axp152 support
    
    The axp152 is a stripped down version of the axp202 pmic with the battery
    charging function removed as it is intended for top-set boxes.
    
    Signed-off-by: Michal Suchanek <hramrach@gmail.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/axp20x.h b/include/linux/mfd/axp20x.h
index c2aa853fb412..52203d5f7984 100644
--- a/include/linux/mfd/axp20x.h
+++ b/include/linux/mfd/axp20x.h
@@ -12,7 +12,8 @@
 #define __LINUX_MFD_AXP20X_H
 
 enum {
-	AXP202_ID = 0,
+	AXP152_ID = 0,
+	AXP202_ID,
 	AXP209_ID,
 	AXP221_ID,
 	AXP288_ID,
@@ -22,6 +23,24 @@ enum {
 #define AXP20X_DATACACHE(m)		(0x04 + (m))
 
 /* Power supply */
+#define AXP152_PWR_OP_MODE		0x01
+#define AXP152_LDO3456_DC1234_CTRL	0x12
+#define AXP152_ALDO_OP_MODE		0x13
+#define AXP152_LDO0_CTRL		0x15
+#define AXP152_DCDC2_V_OUT		0x23
+#define AXP152_DCDC2_V_SCAL		0x25
+#define AXP152_DCDC1_V_OUT		0x26
+#define AXP152_DCDC3_V_OUT		0x27
+#define AXP152_ALDO12_V_OUT		0x28
+#define AXP152_DLDO1_V_OUT		0x29
+#define AXP152_DLDO2_V_OUT		0x2a
+#define AXP152_DCDC4_V_OUT		0x2b
+#define AXP152_V_OFF			0x31
+#define AXP152_OFF_CTRL			0x32
+#define AXP152_PEK_KEY			0x36
+#define AXP152_DCDC_FREQ		0x37
+#define AXP152_DCDC_MODE		0x80
+
 #define AXP20X_PWR_INPUT_STATUS		0x00
 #define AXP20X_PWR_OP_MODE		0x01
 #define AXP20X_USB_OTG_STATUS		0x02
@@ -69,6 +88,13 @@ enum {
 #define AXP22X_CHRG_CTRL3		0x35
 
 /* Interrupt */
+#define AXP152_IRQ1_EN			0x40
+#define AXP152_IRQ2_EN			0x41
+#define AXP152_IRQ3_EN			0x42
+#define AXP152_IRQ1_STATE		0x48
+#define AXP152_IRQ2_STATE		0x49
+#define AXP152_IRQ3_STATE		0x4a
+
 #define AXP20X_IRQ1_EN			0x40
 #define AXP20X_IRQ2_EN			0x41
 #define AXP20X_IRQ3_EN			0x42
@@ -127,6 +153,19 @@ enum {
 #define AXP22X_PWREN_CTRL2		0x8d
 
 /* GPIO */
+#define AXP152_GPIO0_CTRL		0x90
+#define AXP152_GPIO1_CTRL		0x91
+#define AXP152_GPIO2_CTRL		0x92
+#define AXP152_GPIO3_CTRL		0x93
+#define AXP152_LDOGPIO2_V_OUT		0x96
+#define AXP152_GPIO_INPUT		0x97
+#define AXP152_PWM0_FREQ_X		0x98
+#define AXP152_PWM0_FREQ_Y		0x99
+#define AXP152_PWM0_DUTY_CYCLE		0x9a
+#define AXP152_PWM1_FREQ_X		0x9b
+#define AXP152_PWM1_FREQ_Y		0x9c
+#define AXP152_PWM1_DUTY_CYCLE		0x9d
+
 #define AXP20X_GPIO0_CTRL		0x90
 #define AXP20X_LDO5_V_OUT		0x91
 #define AXP20X_GPIO1_CTRL		0x92
@@ -217,6 +256,26 @@ enum {
 };
 
 /* IRQs */
+enum {
+	AXP152_IRQ_LDO0IN_CONNECT = 1,
+	AXP152_IRQ_LDO0IN_REMOVAL,
+	AXP152_IRQ_ALDO0IN_CONNECT,
+	AXP152_IRQ_ALDO0IN_REMOVAL,
+	AXP152_IRQ_DCDC1_V_LOW,
+	AXP152_IRQ_DCDC2_V_LOW,
+	AXP152_IRQ_DCDC3_V_LOW,
+	AXP152_IRQ_DCDC4_V_LOW,
+	AXP152_IRQ_PEK_SHORT,
+	AXP152_IRQ_PEK_LONG,
+	AXP152_IRQ_TIMER,
+	AXP152_IRQ_PEK_RIS_EDGE,
+	AXP152_IRQ_PEK_FAL_EDGE,
+	AXP152_IRQ_GPIO3_INPUT,
+	AXP152_IRQ_GPIO2_INPUT,
+	AXP152_IRQ_GPIO1_INPUT,
+	AXP152_IRQ_GPIO0_INPUT,
+};
+
 enum {
 	AXP20X_IRQ_ACIN_OVER_V = 1,
 	AXP20X_IRQ_ACIN_PLUGIN,

commit d87823813fe498fdd47894bd28e460a9dee8d771
Merge: e382608254e0 3dc196eae1db
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Jun 26 14:51:15 2015 -0700

    Merge tag 'char-misc-4.2-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc
    
    Pull char/misc driver updates from Greg KH:
     "Here's the big char/misc driver pull request for 4.2-rc1.
    
      Lots of mei, extcon, coresight, uio, mic, and other driver updates in
      here.  Full details in the shortlog.  All of these have been in
      linux-next for some time with no reported problems"
    
    * tag 'char-misc-4.2-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc: (176 commits)
      mei: me: wait for power gating exit confirmation
      mei: reset flow control on the last client disconnection
      MAINTAINERS: mei: add mei_cl_bus.h to maintained file list
      misc: sram: sort and clean up included headers
      misc: sram: move reserved block logic out of probe function
      misc: sram: add private struct device and virt_base members
      misc: sram: report correct SRAM pool size
      misc: sram: bump error message level on unclean driver unbinding
      misc: sram: fix device node reference leak on error
      misc: sram: fix enabled clock leak on error path
      misc: mic: Fix reported static checker warning
      misc: mic: Fix randconfig build error by including errno.h
      uio: pruss: Drop depends on ARCH_DAVINCI_DA850 from config
      uio: pruss: Add CONFIG_HAS_IOMEM dependence
      uio: pruss: Include <linux/sizes.h>
      extcon: Redefine the unique id of supported external connectors without 'enum extcon' type
      char:xilinx_hwicap:buffer_icap - change 1/0 to true/false for bool type variable in function buffer_icap_set_configuration().
      Drivers: hv: vmbus: Allocate ring buffer memory in NUMA aware fashion
      parport: check exclusive access before register
      w1: use correct lock on error in w1_seq_show()
      ...

commit 84e9c87e6ffc519fdf91949482a65672a7314c9a
Merge: 7fe0bf908d4f 1abf25a25b86
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Jun 23 17:31:27 2015 -0700

    Merge tag 'mfd-for-linus-4.2' of git://git.kernel.org/pub/scm/linux/kernel/git/lee/mfd
    
    Pull MFD updates from Lee Jones:
     "Changes to existing drivers:
       - Constify structures; throughout the subsystem
       - Move support to DT in; cros_ec
       - DT changes and documentation; cros-ec, max77693, max77686, arizona, da9063
       - ACPI changes and documentation; mfd-core
       - Use different platform specific API in; cros_ec_*, arizona-core
       - Remove unused parent field from; cros_ec_i2c
       - Add wake-up/reset delay in; cross_ec_spi, arizona-core
       - Staticise structures/functions in; cros_ec
       - Remove redundant code; arizona-core, max77686
       - Bugfix; twl4030-power
       - Allow compile test; aat2870, tps65910
       - MAINTAINERS adaptions; samsung, syscon
       - Resource Management (devm_*); arizona-core
       - Refactor Reset code; arizona-core
       - Insist on at least one full boot; arizona-core
       - Trivial formatting; arizona-core
       - Add low-power-sleep; arizona-core
       - IRQ ONESHOT changes; twl4030-irq, mc13xxx-core, wm831x-auxadc, htc-i2cpld,
                              wm8350-core, ab8500-debugfs, ab8500-gpadc, si476x-i2c
    
      (Re-)moved drivers:
       - Move protocol helpers out to drivers/platform; cros_ec
    
      New drivers/supported devices:
       - Add support for AXP22x into axp20x
       - Add support for OnKey into da9063-core
       - Add support for Pinctrl into mt6397-core
       - New STMicroelectronics LPC Watchdog driver
       - New STMicroelectronics LPC Real-Time Clock driver"
    
    * tag 'mfd-for-linus-4.2' of git://git.kernel.org/pub/scm/linux/kernel/git/lee/mfd: (59 commits)
      mfd: lpc_ich: Assign subdevice ids automatically
      mfd: si476x-i2c: Pass the IRQF_ONESHOT flag
      mfd: ab8500-gpadc: Pass the IRQF_ONESHOT flag
      mfd: ab8500-debugfs: Pass the IRQF_ONESHOT flag
      mfd: wm8350-core: Pass the IRQF_ONESHOT flag
      mfd: htc-i2cpld: Pass the IRQF_ONESHOT flag
      mfd: wm831x-auxadc: Pass the IRQF_ONESHOT flag
      mfd: mc13xxx-core: Pass the IRQF_ONESHOT flag
      mfd: twl4030-irq: Pass the IRQF_ONESHOT flag
      mfd: mt6397-core: Add GPIO sub-module support
      mfd: arizona: Add convience defines for micd_rate/micd_bias_starttime
      mfd: dt: Add bindings for DA9063 OnKey
      mfd: da9063: Add support for OnKey driver
      mfd: arizona: Fix incorrect Makefile conditionals
      mfd: arizona: Add stub for wm5102_patch()
      mfd: Check ACPI device companion before checking resources
      Documentation: Add WM8998/WM1814 device tree bindings
      mfd: arizona: Split INx_MODE into two fields
      mfd: wm5110: Add delay before releasing reset line
      mfd: arizona: Add better support for system suspend
      ...

commit 843735b788a4e49c453f4aefdae80e6dfbe9ee85
Author: Ramakrishna Pallala <ramakrishna.pallala@intel.com>
Date:   Mon May 4 22:16:07 2015 +0530

    power: axp288_charger: axp288 charger driver
    
    This patch adds new power supply charger driver support
    for X-Power AXP288 PMIC integrated charger.
    
    This driver interfaces with the axp20x mfd driver as a cell
    and listens to extcon cable events for setting up charging.
    
    Signed-off-by: Ramakrishna Pallala <ramakrishna.pallala@intel.com>
    Acked-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sebastian Reichel <sre@kernel.org>

diff --git a/include/linux/mfd/axp20x.h b/include/linux/mfd/axp20x.h
index dfabd6db7ddf..f9030df5acd1 100644
--- a/include/linux/mfd/axp20x.h
+++ b/include/linux/mfd/axp20x.h
@@ -275,4 +275,11 @@ struct axp20x_fg_pdata {
 	int thermistor_curve[MAX_THERM_CURVE_SIZE][2];
 };
 
+struct axp20x_chrg_pdata {
+	int max_cc;
+	int max_cv;
+	int def_cc;
+	int def_cv;
+};
+
 #endif /* __LINUX_MFD_AXP20X_H */

commit f03123783d4e43cd59df58e23e963136e04f8280
Author: Ramakrishna Pallala <ramakrishna.pallala@intel.com>
Date:   Thu Apr 30 20:44:45 2015 +0530

    extcon: axp288: Add axp288 extcon driver support
    
    This patch adds the extcon support for AXP288 PMIC which
    has the BC1.2 charger detection capability. Additionally
    it also adds the USB mux switching support b/w SOC and PMIC
    based on GPIO control.
    
    Signed-off-by: Ramakrishna Pallala <ramakrishna.pallala@intel.com>
    Acked-by: Lee Jones <lee.jones@linaro.org>
    [cw00.choi: Modify the log message to keep the consistent log message pattern]
    Signed-off-by: Chanwoo Choi <cw00.choi@samsung.com>

diff --git a/include/linux/mfd/axp20x.h b/include/linux/mfd/axp20x.h
index dfabd6db7ddf..4ed8071d062e 100644
--- a/include/linux/mfd/axp20x.h
+++ b/include/linux/mfd/axp20x.h
@@ -275,4 +275,9 @@ struct axp20x_fg_pdata {
 	int thermistor_curve[MAX_THERM_CURVE_SIZE][2];
 };
 
+struct axp288_extcon_pdata {
+	/* GPIO pin control to switch D+/D- lines b/w PMIC and SOC */
+	struct gpio_desc *gpio_mux_cntl;
+};
+
 #endif /* __LINUX_MFD_AXP20X_H */

commit f05be589ff32e87821b86845625ed3d402d37dc7
Author: Boris BREZILLON <boris.brezillon@free-electrons.com>
Date:   Fri Apr 10 12:09:01 2015 +0800

    mfd: axp20x: Add AXP22x PMIC support
    
    Add support for the AXP22x PMIC devices to the existing AXP20x driver.
    This includes the AXP221 and AXP223, which are identical except for
    the external data bus. Only AXP221 is added for now. AXP223 will be
    added after it's Reduced Serial Bus (RSB) interface is supported.
    
    AXP22x defines a new set of registers, power supplies and regulators,
    but most of the API is similar to the AXP20x ones.
    
    A new irq chip definition is used, even though the available interrupts
    on AXP22x is a subset of those on AXP20x. This is done so the interrupt
    numbers match those on the datasheet.
    
    This patch only enables the interrupts, system power-off function, and PEK
    sub-device. The regulator driver must first support different variants
    before we enable it from the mfd driver.
    
    Signed-off-by: Boris BREZILLON <boris.brezillon@free-electrons.com>
    [wens@csie.org: fix interrupts and move regulators to separate patch]
    Signed-off-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/axp20x.h b/include/linux/mfd/axp20x.h
index dfabd6db7ddf..95568eb798c3 100644
--- a/include/linux/mfd/axp20x.h
+++ b/include/linux/mfd/axp20x.h
@@ -14,6 +14,7 @@
 enum {
 	AXP202_ID = 0,
 	AXP209_ID,
+	AXP221_ID,
 	AXP288_ID,
 	NR_AXP20X_VARIANTS,
 };
@@ -45,6 +46,28 @@ enum {
 #define AXP20X_V_LTF_DISCHRG		0x3c
 #define AXP20X_V_HTF_DISCHRG		0x3d
 
+#define AXP22X_PWR_OUT_CTRL1		0x10
+#define AXP22X_PWR_OUT_CTRL2		0x12
+#define AXP22X_PWR_OUT_CTRL3		0x13
+#define AXP22X_DLDO1_V_OUT		0x15
+#define AXP22X_DLDO2_V_OUT		0x16
+#define AXP22X_DLDO3_V_OUT		0x17
+#define AXP22X_DLDO4_V_OUT		0x18
+#define AXP22X_ELDO1_V_OUT		0x19
+#define AXP22X_ELDO2_V_OUT		0x1a
+#define AXP22X_ELDO3_V_OUT		0x1b
+#define AXP22X_DC5LDO_V_OUT		0x1c
+#define AXP22X_DCDC1_V_OUT		0x21
+#define AXP22X_DCDC2_V_OUT		0x22
+#define AXP22X_DCDC3_V_OUT		0x23
+#define AXP22X_DCDC4_V_OUT		0x24
+#define AXP22X_DCDC5_V_OUT		0x25
+#define AXP22X_DCDC23_V_RAMP_CTRL	0x27
+#define AXP22X_ALDO1_V_OUT		0x28
+#define AXP22X_ALDO2_V_OUT		0x29
+#define AXP22X_ALDO3_V_OUT		0x2a
+#define AXP22X_CHRG_CTRL3		0x35
+
 /* Interrupt */
 #define AXP20X_IRQ1_EN			0x40
 #define AXP20X_IRQ2_EN			0x41
@@ -100,6 +123,9 @@ enum {
 #define AXP20X_VBUS_MON			0x8b
 #define AXP20X_OVER_TMP			0x8f
 
+#define AXP22X_PWREN_CTRL1		0x8c
+#define AXP22X_PWREN_CTRL2		0x8d
+
 /* GPIO */
 #define AXP20X_GPIO0_CTRL		0x90
 #define AXP20X_LDO5_V_OUT		0x91
@@ -108,6 +134,11 @@ enum {
 #define AXP20X_GPIO20_SS		0x94
 #define AXP20X_GPIO3_CTRL		0x95
 
+#define AXP22X_LDO_IO0_V_OUT		0x91
+#define AXP22X_LDO_IO1_V_OUT		0x93
+#define AXP22X_GPIO_STATE		0x94
+#define AXP22X_GPIO_PULL_DOWN		0x95
+
 /* Battery */
 #define AXP20X_CHRG_CC_31_24		0xb0
 #define AXP20X_CHRG_CC_23_16		0xb1
@@ -120,6 +151,9 @@ enum {
 #define AXP20X_CC_CTRL			0xb8
 #define AXP20X_FG_RES			0xb9
 
+/* AXP22X specific registers */
+#define AXP22X_BATLOW_THRES1		0xe6
+
 /* AXP288 specific registers */
 #define AXP288_PMIC_ADC_H               0x56
 #define AXP288_PMIC_ADC_L               0x57
@@ -158,6 +192,30 @@ enum {
 	AXP20X_REG_ID_MAX,
 };
 
+enum {
+	AXP22X_DCDC1 = 0,
+	AXP22X_DCDC2,
+	AXP22X_DCDC3,
+	AXP22X_DCDC4,
+	AXP22X_DCDC5,
+	AXP22X_DC1SW,
+	AXP22X_DC5LDO,
+	AXP22X_ALDO1,
+	AXP22X_ALDO2,
+	AXP22X_ALDO3,
+	AXP22X_ELDO1,
+	AXP22X_ELDO2,
+	AXP22X_ELDO3,
+	AXP22X_DLDO1,
+	AXP22X_DLDO2,
+	AXP22X_DLDO3,
+	AXP22X_DLDO4,
+	AXP22X_RTC_LDO,
+	AXP22X_LDO_IO0,
+	AXP22X_LDO_IO1,
+	AXP22X_REG_ID_MAX,
+};
+
 /* IRQs */
 enum {
 	AXP20X_IRQ_ACIN_OVER_V = 1,
@@ -199,6 +257,34 @@ enum {
 	AXP20X_IRQ_GPIO0_INPUT,
 };
 
+enum axp22x_irqs {
+	AXP22X_IRQ_ACIN_OVER_V = 1,
+	AXP22X_IRQ_ACIN_PLUGIN,
+	AXP22X_IRQ_ACIN_REMOVAL,
+	AXP22X_IRQ_VBUS_OVER_V,
+	AXP22X_IRQ_VBUS_PLUGIN,
+	AXP22X_IRQ_VBUS_REMOVAL,
+	AXP22X_IRQ_VBUS_V_LOW,
+	AXP22X_IRQ_BATT_PLUGIN,
+	AXP22X_IRQ_BATT_REMOVAL,
+	AXP22X_IRQ_BATT_ENT_ACT_MODE,
+	AXP22X_IRQ_BATT_EXIT_ACT_MODE,
+	AXP22X_IRQ_CHARG,
+	AXP22X_IRQ_CHARG_DONE,
+	AXP22X_IRQ_BATT_TEMP_HIGH,
+	AXP22X_IRQ_BATT_TEMP_LOW,
+	AXP22X_IRQ_DIE_TEMP_HIGH,
+	AXP22X_IRQ_PEK_SHORT,
+	AXP22X_IRQ_PEK_LONG,
+	AXP22X_IRQ_LOW_PWR_LVL1,
+	AXP22X_IRQ_LOW_PWR_LVL2,
+	AXP22X_IRQ_TIMER,
+	AXP22X_IRQ_PEK_RIS_EDGE,
+	AXP22X_IRQ_PEK_FAL_EDGE,
+	AXP22X_IRQ_GPIO1_INPUT,
+	AXP22X_IRQ_GPIO0_INPUT,
+};
+
 enum axp288_irqs {
 	AXP288_IRQ_VBUS_FALL     = 2,
 	AXP288_IRQ_VBUS_RISE,

commit 774e0b41d485e18e655247441b8ca8b8dbe217c4
Author: Todd E Brandt <todd.e.brandt@linux.intel.com>
Date:   Wed Jan 7 13:25:52 2015 -0800

    mfd: axp20x: Add support for fuel gauge cell driver
    
    mfd/axp20x: add support for fuel gauge cell
    
    Register definitions and platform data structure
    for fuel gauge cell devices.
    
    Signed-off-by: Todd Brandt <todd.e.brandt@intel.com>
    Acked-by: Jacob Pan <jacob.jun.pan@linux.intel.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/axp20x.h b/include/linux/mfd/axp20x.h
index 81589d176ae8..dfabd6db7ddf 100644
--- a/include/linux/mfd/axp20x.h
+++ b/include/linux/mfd/axp20x.h
@@ -124,10 +124,27 @@ enum {
 #define AXP288_PMIC_ADC_H               0x56
 #define AXP288_PMIC_ADC_L               0x57
 #define AXP288_ADC_TS_PIN_CTRL          0x84
-
 #define AXP288_PMIC_ADC_EN              0x84
-#define AXP288_FG_TUNE5			0xed
 
+/* Fuel Gauge */
+#define AXP288_FG_RDC1_REG          0xba
+#define AXP288_FG_RDC0_REG          0xbb
+#define AXP288_FG_OCVH_REG          0xbc
+#define AXP288_FG_OCVL_REG          0xbd
+#define AXP288_FG_OCV_CURVE_REG     0xc0
+#define AXP288_FG_DES_CAP1_REG      0xe0
+#define AXP288_FG_DES_CAP0_REG      0xe1
+#define AXP288_FG_CC_MTR1_REG       0xe2
+#define AXP288_FG_CC_MTR0_REG       0xe3
+#define AXP288_FG_OCV_CAP_REG       0xe4
+#define AXP288_FG_CC_CAP_REG        0xe5
+#define AXP288_FG_LOW_CAP_REG       0xe6
+#define AXP288_FG_TUNE0             0xe8
+#define AXP288_FG_TUNE1             0xe9
+#define AXP288_FG_TUNE2             0xea
+#define AXP288_FG_TUNE3             0xeb
+#define AXP288_FG_TUNE4             0xec
+#define AXP288_FG_TUNE5             0xed
 
 /* Regulators IDs */
 enum {
@@ -236,4 +253,26 @@ struct axp20x_dev {
 	const struct regmap_irq_chip	*regmap_irq_chip;
 };
 
+#define BATTID_LEN				64
+#define OCV_CURVE_SIZE			32
+#define MAX_THERM_CURVE_SIZE	25
+#define PD_DEF_MIN_TEMP			0
+#define PD_DEF_MAX_TEMP			55
+
+struct axp20x_fg_pdata {
+	char battid[BATTID_LEN + 1];
+	int design_cap;
+	int min_volt;
+	int max_volt;
+	int max_temp;
+	int min_temp;
+	int cap1;
+	int cap0;
+	int rdc1;
+	int rdc0;
+	int ocv_curve[OCV_CURVE_SIZE];
+	int tcsz;
+	int thermistor_curve[MAX_THERM_CURVE_SIZE][2];
+};
+
 #endif /* __LINUX_MFD_AXP20X_H */

commit af7e9069543aabd415d7c543f3f89b143ac1a932
Author: Jacob Pan <jacob.jun.pan@linux.intel.com>
Date:   Mon Oct 6 21:17:14 2014 -0700

    mfd: axp20x: Extend axp20x to support axp288 pmic
    
    X-Powers AXP288 is a customized PMIC for Intel Baytrail-CR platforms. Similar
    to AXP202/209, AXP288 comes with USB charger, more LDO and BUCK channels, and
    AD converters. It also provides extended status and interrupt reporting
    capabilities than the devices currently supported in axp20x.c.
    
    In addition to feature extension, this patch also adds ACPI binding for
    enumeration.
    
    This consolidated driver should support more X-Powers' PMICs in both device
    tree and ACPI enumerated platforms.
    
    Signed-off-by: Jacob Pan <jacob.jun.pan@linux.intel.com>
    Reviewed-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Reviewed-by: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/axp20x.h b/include/linux/mfd/axp20x.h
index d0e31a2287ac..81589d176ae8 100644
--- a/include/linux/mfd/axp20x.h
+++ b/include/linux/mfd/axp20x.h
@@ -14,6 +14,8 @@
 enum {
 	AXP202_ID = 0,
 	AXP209_ID,
+	AXP288_ID,
+	NR_AXP20X_VARIANTS,
 };
 
 #define AXP20X_DATACACHE(m)		(0x04 + (m))
@@ -49,11 +51,13 @@ enum {
 #define AXP20X_IRQ3_EN			0x42
 #define AXP20X_IRQ4_EN			0x43
 #define AXP20X_IRQ5_EN			0x44
+#define AXP20X_IRQ6_EN			0x45
 #define AXP20X_IRQ1_STATE		0x48
 #define AXP20X_IRQ2_STATE		0x49
 #define AXP20X_IRQ3_STATE		0x4a
 #define AXP20X_IRQ4_STATE		0x4b
 #define AXP20X_IRQ5_STATE		0x4c
+#define AXP20X_IRQ6_STATE		0x4d
 
 /* ADC */
 #define AXP20X_ACIN_V_ADC_H		0x56
@@ -116,6 +120,15 @@ enum {
 #define AXP20X_CC_CTRL			0xb8
 #define AXP20X_FG_RES			0xb9
 
+/* AXP288 specific registers */
+#define AXP288_PMIC_ADC_H               0x56
+#define AXP288_PMIC_ADC_L               0x57
+#define AXP288_ADC_TS_PIN_CTRL          0x84
+
+#define AXP288_PMIC_ADC_EN              0x84
+#define AXP288_FG_TUNE5			0xed
+
+
 /* Regulators IDs */
 enum {
 	AXP20X_LDO1 = 0,
@@ -169,12 +182,58 @@ enum {
 	AXP20X_IRQ_GPIO0_INPUT,
 };
 
+enum axp288_irqs {
+	AXP288_IRQ_VBUS_FALL     = 2,
+	AXP288_IRQ_VBUS_RISE,
+	AXP288_IRQ_OV,
+	AXP288_IRQ_FALLING_ALT,
+	AXP288_IRQ_RISING_ALT,
+	AXP288_IRQ_OV_ALT,
+	AXP288_IRQ_DONE          = 10,
+	AXP288_IRQ_CHARGING,
+	AXP288_IRQ_SAFE_QUIT,
+	AXP288_IRQ_SAFE_ENTER,
+	AXP288_IRQ_ABSENT,
+	AXP288_IRQ_APPEND,
+	AXP288_IRQ_QWBTU,
+	AXP288_IRQ_WBTU,
+	AXP288_IRQ_QWBTO,
+	AXP288_IRQ_WBTO,
+	AXP288_IRQ_QCBTU,
+	AXP288_IRQ_CBTU,
+	AXP288_IRQ_QCBTO,
+	AXP288_IRQ_CBTO,
+	AXP288_IRQ_WL2,
+	AXP288_IRQ_WL1,
+	AXP288_IRQ_GPADC,
+	AXP288_IRQ_OT            = 31,
+	AXP288_IRQ_GPIO0,
+	AXP288_IRQ_GPIO1,
+	AXP288_IRQ_POKO,
+	AXP288_IRQ_POKL,
+	AXP288_IRQ_POKS,
+	AXP288_IRQ_POKN,
+	AXP288_IRQ_POKP,
+	AXP288_IRQ_TIMER,
+	AXP288_IRQ_MV_CHNG,
+	AXP288_IRQ_BC_USB_CHNG,
+};
+
+#define AXP288_TS_ADC_H		0x58
+#define AXP288_TS_ADC_L		0x59
+#define AXP288_GP_ADC_H		0x5a
+#define AXP288_GP_ADC_L		0x5b
+
 struct axp20x_dev {
 	struct device			*dev;
 	struct i2c_client		*i2c_client;
 	struct regmap			*regmap;
 	struct regmap_irq_chip_data	*regmap_irqc;
 	long				variant;
+	int                             nr_cells;
+	struct mfd_cell                 *cells;
+	const struct regmap_config	*regmap_cfg;
+	const struct regmap_irq_chip	*regmap_irq_chip;
 };
 
 #endif /* __LINUX_MFD_AXP20X_H */

commit cfb61a419630a810033f2777aba724ab6b1272b3
Author: Carlo Caione <carlo@caione.org>
Date:   Thu May 1 14:29:27 2014 +0200

    mfd: AXP20x: Add mfd driver for AXP20x PMIC
    
    This patch introduces the preliminary support for PMICs X-Powers AXP202
    and AXP209. The AXP209 and AXP202 are the PMUs (Power Management Unit)
    used by A10, A13 and A20 SoCs and developed by X-Powers, a sister company
    of Allwinner.
    
    The core enables support for two subsystems:
    - PEK (Power Enable Key)
    - Regulators
    
    Signed-off-by: Carlo Caione <carlo@caione.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>

diff --git a/include/linux/mfd/axp20x.h b/include/linux/mfd/axp20x.h
new file mode 100644
index 000000000000..d0e31a2287ac
--- /dev/null
+++ b/include/linux/mfd/axp20x.h
@@ -0,0 +1,180 @@
+/*
+ * Functions and registers to access AXP20X power management chip.
+ *
+ * Copyright (C) 2013, Carlo Caione <carlo@caione.org>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+
+#ifndef __LINUX_MFD_AXP20X_H
+#define __LINUX_MFD_AXP20X_H
+
+enum {
+	AXP202_ID = 0,
+	AXP209_ID,
+};
+
+#define AXP20X_DATACACHE(m)		(0x04 + (m))
+
+/* Power supply */
+#define AXP20X_PWR_INPUT_STATUS		0x00
+#define AXP20X_PWR_OP_MODE		0x01
+#define AXP20X_USB_OTG_STATUS		0x02
+#define AXP20X_PWR_OUT_CTRL		0x12
+#define AXP20X_DCDC2_V_OUT		0x23
+#define AXP20X_DCDC2_LDO3_V_SCAL	0x25
+#define AXP20X_DCDC3_V_OUT		0x27
+#define AXP20X_LDO24_V_OUT		0x28
+#define AXP20X_LDO3_V_OUT		0x29
+#define AXP20X_VBUS_IPSOUT_MGMT		0x30
+#define AXP20X_V_OFF			0x31
+#define AXP20X_OFF_CTRL			0x32
+#define AXP20X_CHRG_CTRL1		0x33
+#define AXP20X_CHRG_CTRL2		0x34
+#define AXP20X_CHRG_BAK_CTRL		0x35
+#define AXP20X_PEK_KEY			0x36
+#define AXP20X_DCDC_FREQ		0x37
+#define AXP20X_V_LTF_CHRG		0x38
+#define AXP20X_V_HTF_CHRG		0x39
+#define AXP20X_APS_WARN_L1		0x3a
+#define AXP20X_APS_WARN_L2		0x3b
+#define AXP20X_V_LTF_DISCHRG		0x3c
+#define AXP20X_V_HTF_DISCHRG		0x3d
+
+/* Interrupt */
+#define AXP20X_IRQ1_EN			0x40
+#define AXP20X_IRQ2_EN			0x41
+#define AXP20X_IRQ3_EN			0x42
+#define AXP20X_IRQ4_EN			0x43
+#define AXP20X_IRQ5_EN			0x44
+#define AXP20X_IRQ1_STATE		0x48
+#define AXP20X_IRQ2_STATE		0x49
+#define AXP20X_IRQ3_STATE		0x4a
+#define AXP20X_IRQ4_STATE		0x4b
+#define AXP20X_IRQ5_STATE		0x4c
+
+/* ADC */
+#define AXP20X_ACIN_V_ADC_H		0x56
+#define AXP20X_ACIN_V_ADC_L		0x57
+#define AXP20X_ACIN_I_ADC_H		0x58
+#define AXP20X_ACIN_I_ADC_L		0x59
+#define AXP20X_VBUS_V_ADC_H		0x5a
+#define AXP20X_VBUS_V_ADC_L		0x5b
+#define AXP20X_VBUS_I_ADC_H		0x5c
+#define AXP20X_VBUS_I_ADC_L		0x5d
+#define AXP20X_TEMP_ADC_H		0x5e
+#define AXP20X_TEMP_ADC_L		0x5f
+#define AXP20X_TS_IN_H			0x62
+#define AXP20X_TS_IN_L			0x63
+#define AXP20X_GPIO0_V_ADC_H		0x64
+#define AXP20X_GPIO0_V_ADC_L		0x65
+#define AXP20X_GPIO1_V_ADC_H		0x66
+#define AXP20X_GPIO1_V_ADC_L		0x67
+#define AXP20X_PWR_BATT_H		0x70
+#define AXP20X_PWR_BATT_M		0x71
+#define AXP20X_PWR_BATT_L		0x72
+#define AXP20X_BATT_V_H			0x78
+#define AXP20X_BATT_V_L			0x79
+#define AXP20X_BATT_CHRG_I_H		0x7a
+#define AXP20X_BATT_CHRG_I_L		0x7b
+#define AXP20X_BATT_DISCHRG_I_H		0x7c
+#define AXP20X_BATT_DISCHRG_I_L		0x7d
+#define AXP20X_IPSOUT_V_HIGH_H		0x7e
+#define AXP20X_IPSOUT_V_HIGH_L		0x7f
+
+/* Power supply */
+#define AXP20X_DCDC_MODE		0x80
+#define AXP20X_ADC_EN1			0x82
+#define AXP20X_ADC_EN2			0x83
+#define AXP20X_ADC_RATE			0x84
+#define AXP20X_GPIO10_IN_RANGE		0x85
+#define AXP20X_GPIO1_ADC_IRQ_RIS	0x86
+#define AXP20X_GPIO1_ADC_IRQ_FAL	0x87
+#define AXP20X_TIMER_CTRL		0x8a
+#define AXP20X_VBUS_MON			0x8b
+#define AXP20X_OVER_TMP			0x8f
+
+/* GPIO */
+#define AXP20X_GPIO0_CTRL		0x90
+#define AXP20X_LDO5_V_OUT		0x91
+#define AXP20X_GPIO1_CTRL		0x92
+#define AXP20X_GPIO2_CTRL		0x93
+#define AXP20X_GPIO20_SS		0x94
+#define AXP20X_GPIO3_CTRL		0x95
+
+/* Battery */
+#define AXP20X_CHRG_CC_31_24		0xb0
+#define AXP20X_CHRG_CC_23_16		0xb1
+#define AXP20X_CHRG_CC_15_8		0xb2
+#define AXP20X_CHRG_CC_7_0		0xb3
+#define AXP20X_DISCHRG_CC_31_24		0xb4
+#define AXP20X_DISCHRG_CC_23_16		0xb5
+#define AXP20X_DISCHRG_CC_15_8		0xb6
+#define AXP20X_DISCHRG_CC_7_0		0xb7
+#define AXP20X_CC_CTRL			0xb8
+#define AXP20X_FG_RES			0xb9
+
+/* Regulators IDs */
+enum {
+	AXP20X_LDO1 = 0,
+	AXP20X_LDO2,
+	AXP20X_LDO3,
+	AXP20X_LDO4,
+	AXP20X_LDO5,
+	AXP20X_DCDC2,
+	AXP20X_DCDC3,
+	AXP20X_REG_ID_MAX,
+};
+
+/* IRQs */
+enum {
+	AXP20X_IRQ_ACIN_OVER_V = 1,
+	AXP20X_IRQ_ACIN_PLUGIN,
+	AXP20X_IRQ_ACIN_REMOVAL,
+	AXP20X_IRQ_VBUS_OVER_V,
+	AXP20X_IRQ_VBUS_PLUGIN,
+	AXP20X_IRQ_VBUS_REMOVAL,
+	AXP20X_IRQ_VBUS_V_LOW,
+	AXP20X_IRQ_BATT_PLUGIN,
+	AXP20X_IRQ_BATT_REMOVAL,
+	AXP20X_IRQ_BATT_ENT_ACT_MODE,
+	AXP20X_IRQ_BATT_EXIT_ACT_MODE,
+	AXP20X_IRQ_CHARG,
+	AXP20X_IRQ_CHARG_DONE,
+	AXP20X_IRQ_BATT_TEMP_HIGH,
+	AXP20X_IRQ_BATT_TEMP_LOW,
+	AXP20X_IRQ_DIE_TEMP_HIGH,
+	AXP20X_IRQ_CHARG_I_LOW,
+	AXP20X_IRQ_DCDC1_V_LONG,
+	AXP20X_IRQ_DCDC2_V_LONG,
+	AXP20X_IRQ_DCDC3_V_LONG,
+	AXP20X_IRQ_PEK_SHORT = 22,
+	AXP20X_IRQ_PEK_LONG,
+	AXP20X_IRQ_N_OE_PWR_ON,
+	AXP20X_IRQ_N_OE_PWR_OFF,
+	AXP20X_IRQ_VBUS_VALID,
+	AXP20X_IRQ_VBUS_NOT_VALID,
+	AXP20X_IRQ_VBUS_SESS_VALID,
+	AXP20X_IRQ_VBUS_SESS_END,
+	AXP20X_IRQ_LOW_PWR_LVL1,
+	AXP20X_IRQ_LOW_PWR_LVL2,
+	AXP20X_IRQ_TIMER,
+	AXP20X_IRQ_PEK_RIS_EDGE,
+	AXP20X_IRQ_PEK_FAL_EDGE,
+	AXP20X_IRQ_GPIO3_INPUT,
+	AXP20X_IRQ_GPIO2_INPUT,
+	AXP20X_IRQ_GPIO1_INPUT,
+	AXP20X_IRQ_GPIO0_INPUT,
+};
+
+struct axp20x_dev {
+	struct device			*dev;
+	struct i2c_client		*i2c_client;
+	struct regmap			*regmap;
+	struct regmap_irq_chip_data	*regmap_irqc;
+	long				variant;
+};
+
+#endif /* __LINUX_MFD_AXP20X_H */
