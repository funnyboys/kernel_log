commit 337cbeb2c13eb4cab84f576fd402d7ae4ed31ae1
Author: Bartosz Golaszewski <bgolaszewski@baylibre.com>
Date:   Thu May 14 10:39:01 2020 +0200

    genirq/irq_sim: Simplify the API
    
    The interrupt simulator API exposes a lot of custom data structures and
    functions and doesn't reuse the interfaces already exposed by the irq
    subsystem. This patch tries to address it.
    
    We hide all the simulator-related data structures from users and instead
    rely on the well-known irq domain. When creating the interrupt simulator
    the user receives a pointer to a newly created irq_domain and can use it
    to create mappings for simulated interrupts.
    
    It is also possible to pass a handle to fwnode when creating the simulator
    domain and retrieve it using irq_find_matching_fwnode().
    
    The irq_sim_fire() function is dropped as well. Instead we implement the
    irq_get/set_irqchip_state interface.
    
    We modify the two modules that use the simulator at the same time as
    adding these changes in order to reduce the intermediate bloat that would
    result when trying to migrate the drivers in separate patches.
    
    Signed-off-by: Bartosz Golaszewski <bgolaszewski@baylibre.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Acked-by: Jonathan Cameron <Jonathan.Cameron@huawei.com> #for IIO
    Link: https://lore.kernel.org/r/20200514083901.23445-3-brgl@bgdev.pl

diff --git a/include/linux/irq_sim.h b/include/linux/irq_sim.h
index 4500d453a63e..ab831e5ae748 100644
--- a/include/linux/irq_sim.h
+++ b/include/linux/irq_sim.h
@@ -1,41 +1,26 @@
 /* SPDX-License-Identifier: GPL-2.0+ */
 /*
  * Copyright (C) 2017-2018 Bartosz Golaszewski <brgl@bgdev.pl>
+ * Copyright (C) 2020 Bartosz Golaszewski <bgolaszewski@baylibre.com>
  */
 
 #ifndef _LINUX_IRQ_SIM_H
 #define _LINUX_IRQ_SIM_H
 
-#include <linux/irq_work.h>
 #include <linux/device.h>
+#include <linux/fwnode.h>
+#include <linux/irqdomain.h>
 
 /*
  * Provides a framework for allocating simulated interrupts which can be
  * requested like normal irqs and enqueued from process context.
  */
 
-struct irq_sim_work_ctx {
-	struct irq_work		work;
-	unsigned long		*pending;
-};
-
-struct irq_sim_irq_ctx {
-	int			irqnum;
-	bool			enabled;
-};
-
-struct irq_sim {
-	struct irq_sim_work_ctx	work_ctx;
-	int			irq_base;
-	unsigned int		irq_count;
-	struct irq_sim_irq_ctx	*irqs;
-};
-
-int irq_sim_init(struct irq_sim *sim, unsigned int num_irqs);
-int devm_irq_sim_init(struct device *dev, struct irq_sim *sim,
-		      unsigned int num_irqs);
-void irq_sim_fini(struct irq_sim *sim);
-void irq_sim_fire(struct irq_sim *sim, unsigned int offset);
-int irq_sim_irqnum(struct irq_sim *sim, unsigned int offset);
+struct irq_domain *irq_domain_create_sim(struct fwnode_handle *fwnode,
+					 unsigned int num_irqs);
+struct irq_domain *devm_irq_domain_create_sim(struct device *dev,
+					      struct fwnode_handle *fwnode,
+					      unsigned int num_irqs);
+void irq_domain_remove_sim(struct irq_domain *domain);
 
 #endif /* _LINUX_IRQ_SIM_H */

commit 06459901d55ee2f690b8e1fe084fb03061d617cf
Author: Bartosz Golaszewski <brgl@bgdev.pl>
Date:   Fri Nov 9 18:21:32 2018 +0100

    irq/irq_sim: Store multiple interrupt offsets in a bitmap
    
    Two threads can try to fire the irq_sim with different offsets and will
    end up fighting for the irq_work asignment. Thomas Gleixner suggested a
    solution based on a bitfield where we set a bit for every offset
    associated with an interrupt that should be fired and then iterate over
    all set bits in the interrupt handler.
    
    This is a slightly modified solution using a bitmap so that we don't
    impose a limit on the number of interrupts one can allocate with
    irq_sim.
    
    Suggested-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Bartosz Golaszewski <brgl@bgdev.pl>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>

diff --git a/include/linux/irq_sim.h b/include/linux/irq_sim.h
index 630a57e55db6..4500d453a63e 100644
--- a/include/linux/irq_sim.h
+++ b/include/linux/irq_sim.h
@@ -16,7 +16,7 @@
 
 struct irq_sim_work_ctx {
 	struct irq_work		work;
-	int			irq;
+	unsigned long		*pending;
 };
 
 struct irq_sim_irq_ctx {

commit b5c5f3959bb3c018a68f5659bcd6adf05e141a03
Author: Bartosz Golaszewski <brgl@bgdev.pl>
Date:   Thu Apr 26 22:07:47 2018 +0200

    genirq/irq_sim: Use the SPDX license identifier in the header
    
    Use C-style comment for the identifier as per
    Documentation/process/license-rules.rst and remove the license boilerplate.
    
    Signed-off-by: Bartosz Golaszewski <brgl@bgdev.pl>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Link: https://lkml.kernel.org/r/20180426200747.8344-2-brgl@bgdev.pl

diff --git a/include/linux/irq_sim.h b/include/linux/irq_sim.h
index 0380d899b955..630a57e55db6 100644
--- a/include/linux/irq_sim.h
+++ b/include/linux/irq_sim.h
@@ -1,14 +1,11 @@
-#ifndef _LINUX_IRQ_SIM_H
-#define _LINUX_IRQ_SIM_H
+/* SPDX-License-Identifier: GPL-2.0+ */
 /*
- * Copyright (C) 2017 Bartosz Golaszewski <brgl@bgdev.pl>
- *
- * This program is free software; you can redistribute  it and/or modify it
- * under  the terms of  the GNU General  Public License as published by the
- * Free Software Foundation;  either version 2 of the  License, or (at your
- * option) any later version.
+ * Copyright (C) 2017-2018 Bartosz Golaszewski <brgl@bgdev.pl>
  */
 
+#ifndef _LINUX_IRQ_SIM_H
+#define _LINUX_IRQ_SIM_H
+
 #include <linux/irq_work.h>
 #include <linux/device.h>
 

commit 44e72c7ebf294043cfe276f7328b8c0e6a3e50e9
Author: Bartosz Golaszewski <brgl@bgdev.pl>
Date:   Mon Aug 14 16:53:17 2017 +0200

    genirq/irq_sim: Add a devres variant of irq_sim_init()
    
    Add a resource managed version of irq_sim_init(). This can be
    conveniently used in device drivers.
    
    Signed-off-by: Bartosz Golaszewski <brgl@bgdev.pl>
    Acked-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Cc: Lars-Peter Clausen <lars@metafoo.de>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Marc Zyngier <marc.zyngier@arm.com>
    Cc: Linus Walleij <linus.walleij@linaro.org>
    Cc: linux-doc@vger.kernel.org
    Cc: linux-gpio@vger.kernel.org
    Cc: Bamvor Jian Zhang <bamvor.zhangjian@linaro.org>
    Cc: Jonathan Cameron <jic23@kernel.org>
    Link: http://lkml.kernel.org/r/20170814145318.6495-3-brgl@bgdev.pl
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

diff --git a/include/linux/irq_sim.h b/include/linux/irq_sim.h
index 39ce57bfa995..0380d899b955 100644
--- a/include/linux/irq_sim.h
+++ b/include/linux/irq_sim.h
@@ -10,6 +10,7 @@
  */
 
 #include <linux/irq_work.h>
+#include <linux/device.h>
 
 /*
  * Provides a framework for allocating simulated interrupts which can be
@@ -34,6 +35,8 @@ struct irq_sim {
 };
 
 int irq_sim_init(struct irq_sim *sim, unsigned int num_irqs);
+int devm_irq_sim_init(struct device *dev, struct irq_sim *sim,
+		      unsigned int num_irqs);
 void irq_sim_fini(struct irq_sim *sim);
 void irq_sim_fire(struct irq_sim *sim, unsigned int offset);
 int irq_sim_irqnum(struct irq_sim *sim, unsigned int offset);

commit b19af510e67e6ca696b8721f45c148119437307c
Author: Bartosz Golaszewski <brgl@bgdev.pl>
Date:   Mon Aug 14 16:53:16 2017 +0200

    genirq/irq_sim: Add a simple interrupt simulator framework
    
    Implement a simple, irq_work-based framework for simulating
    interrupts. Currently the API exposes routines for initializing and
    deinitializing the simulator object, enqueueing the interrupts and
    retrieving the allocated interrupt numbers based on the offset of the
    dummy interrupt in the simulator struct.
    
    Signed-off-by: Bartosz Golaszewski <brgl@bgdev.pl>
    Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Cc: Lars-Peter Clausen <lars@metafoo.de>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Marc Zyngier <marc.zyngier@arm.com>
    Cc: Linus Walleij <linus.walleij@linaro.org>
    Cc: linux-doc@vger.kernel.org
    Cc: linux-gpio@vger.kernel.org
    Cc: Bamvor Jian Zhang <bamvor.zhangjian@linaro.org>
    Cc: Jonathan Cameron <jic23@kernel.org>
    Link: http://lkml.kernel.org/r/20170814145318.6495-2-brgl@bgdev.pl
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

diff --git a/include/linux/irq_sim.h b/include/linux/irq_sim.h
new file mode 100644
index 000000000000..39ce57bfa995
--- /dev/null
+++ b/include/linux/irq_sim.h
@@ -0,0 +1,41 @@
+#ifndef _LINUX_IRQ_SIM_H
+#define _LINUX_IRQ_SIM_H
+/*
+ * Copyright (C) 2017 Bartosz Golaszewski <brgl@bgdev.pl>
+ *
+ * This program is free software; you can redistribute  it and/or modify it
+ * under  the terms of  the GNU General  Public License as published by the
+ * Free Software Foundation;  either version 2 of the  License, or (at your
+ * option) any later version.
+ */
+
+#include <linux/irq_work.h>
+
+/*
+ * Provides a framework for allocating simulated interrupts which can be
+ * requested like normal irqs and enqueued from process context.
+ */
+
+struct irq_sim_work_ctx {
+	struct irq_work		work;
+	int			irq;
+};
+
+struct irq_sim_irq_ctx {
+	int			irqnum;
+	bool			enabled;
+};
+
+struct irq_sim {
+	struct irq_sim_work_ctx	work_ctx;
+	int			irq_base;
+	unsigned int		irq_count;
+	struct irq_sim_irq_ctx	*irqs;
+};
+
+int irq_sim_init(struct irq_sim *sim, unsigned int num_irqs);
+void irq_sim_fini(struct irq_sim *sim);
+void irq_sim_fire(struct irq_sim *sim, unsigned int offset);
+int irq_sim_irqnum(struct irq_sim *sim, unsigned int offset);
+
+#endif /* _LINUX_IRQ_SIM_H */
