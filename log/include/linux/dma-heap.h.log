commit c02a81fba74fe3488ad6b08bfb5a1329005418f8
Author: Andrew F. Davis <afd@ti.com>
Date:   Tue Dec 3 17:26:37 2019 +0000

    dma-buf: Add dma-buf heaps framework
    
    This framework allows a unified userspace interface for dma-buf
    exporters, allowing userland to allocate specific types of memory
    for use in dma-buf sharing.
    
    Each heap is given its own device node, which a user can allocate
    a dma-buf fd from using the DMA_HEAP_IOC_ALLOC.
    
    This code is an evoluiton of the Android ION implementation,
    and a big thanks is due to its authors/maintainers over time
    for their effort:
      Rebecca Schultz Zavin, Colin Cross, Benjamin Gaignard,
      Laura Abbott, and many other contributors!
    
    Cc: Laura Abbott <labbott@redhat.com>
    Cc: Benjamin Gaignard <benjamin.gaignard@linaro.org>
    Cc: Sumit Semwal <sumit.semwal@linaro.org>
    Cc: Liam Mark <lmark@codeaurora.org>
    Cc: Pratik Patel <pratikp@codeaurora.org>
    Cc: Brian Starkey <Brian.Starkey@arm.com>
    Cc: Vincent Donnefort <Vincent.Donnefort@arm.com>
    Cc: Sudipto Paul <Sudipto.Paul@arm.com>
    Cc: Andrew F. Davis <afd@ti.com>
    Cc: Christoph Hellwig <hch@infradead.org>
    Cc: Chenbo Feng <fengc@google.com>
    Cc: Alistair Strachan <astrachan@google.com>
    Cc: Hridya Valsaraju <hridya@google.com>
    Cc: Sandeep Patil <sspatil@google.com>
    Cc: Hillf Danton <hdanton@sina.com>
    Cc: Dave Airlie <airlied@gmail.com>
    Cc: dri-devel@lists.freedesktop.org
    Reviewed-by: Brian Starkey <brian.starkey@arm.com>
    Acked-by: Sandeep Patil <sspatil@android.com>
    Signed-off-by: Andrew F. Davis <afd@ti.com>
    Signed-off-by: John Stultz <john.stultz@linaro.org>
    Signed-off-by: Sumit Semwal <sumit.semwal@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20191203172641.66642-2-john.stultz@linaro.org

diff --git a/include/linux/dma-heap.h b/include/linux/dma-heap.h
new file mode 100644
index 000000000000..454e354d1ffb
--- /dev/null
+++ b/include/linux/dma-heap.h
@@ -0,0 +1,59 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+/*
+ * DMABUF Heaps Allocation Infrastructure
+ *
+ * Copyright (C) 2011 Google, Inc.
+ * Copyright (C) 2019 Linaro Ltd.
+ */
+
+#ifndef _DMA_HEAPS_H
+#define _DMA_HEAPS_H
+
+#include <linux/cdev.h>
+#include <linux/types.h>
+
+struct dma_heap;
+
+/**
+ * struct dma_heap_ops - ops to operate on a given heap
+ * @allocate:		allocate dmabuf and return fd
+ *
+ * allocate returns dmabuf fd  on success, -errno on error.
+ */
+struct dma_heap_ops {
+	int (*allocate)(struct dma_heap *heap,
+			unsigned long len,
+			unsigned long fd_flags,
+			unsigned long heap_flags);
+};
+
+/**
+ * struct dma_heap_export_info - information needed to export a new dmabuf heap
+ * @name:	used for debugging/device-node name
+ * @ops:	ops struct for this heap
+ * @priv:	heap exporter private data
+ *
+ * Information needed to export a new dmabuf heap.
+ */
+struct dma_heap_export_info {
+	const char *name;
+	const struct dma_heap_ops *ops;
+	void *priv;
+};
+
+/**
+ * dma_heap_get_drvdata() - get per-heap driver data
+ * @heap: DMA-Heap to retrieve private data for
+ *
+ * Returns:
+ * The per-heap data for the heap.
+ */
+void *dma_heap_get_drvdata(struct dma_heap *heap);
+
+/**
+ * dma_heap_add - adds a heap to dmabuf heaps
+ * @exp_info:		information needed to register this heap
+ */
+struct dma_heap *dma_heap_add(const struct dma_heap_export_info *exp_info);
+
+#endif /* _DMA_HEAPS_H */

commit fae7d7d5f374eadbb0b5dd31b39162e7176e9c3d
Author: Sean Paul <seanpaul@chromium.org>
Date:   Wed Oct 30 16:29:54 2019 -0400

    Revert "dma-buf: Add dma-buf heaps framework"
    
    This reverts commit a69b0e855d3fd278ff6f09a23e1edf929538e304.
    
    This patchset doesn't meet the UAPI requirements set out in [1] for the DRM
    subsystem. Once the userspace component is reviewed and ready for merge
    we can try again.
    
    [1]- https://01.org/linuxgraphics/gfx-docs/drm/gpu/drm-uapi.html#open-source-userspace-requirements
    
    Fixes: a69b0e855d3f ("dma-buf: Add dma-buf heaps framework")
    Cc: Laura Abbott <labbott@redhat.com>
    Cc: Benjamin Gaignard <benjamin.gaignard@linaro.org>
    Cc: Sumit Semwal <sumit.semwal@linaro.org>
    Cc: Liam Mark <lmark@codeaurora.org>
    Cc: Pratik Patel <pratikp@codeaurora.org>
    Cc: Brian Starkey <Brian.Starkey@arm.com>
    Cc: Vincent Donnefort <Vincent.Donnefort@arm.com>
    Cc: Sudipto Paul <Sudipto.Paul@arm.com>
    Cc: Andrew F. Davis <afd@ti.com>
    Cc: Christoph Hellwig <hch@infradead.org>
    Cc: Chenbo Feng <fengc@google.com>
    Cc: Alistair Strachan <astrachan@google.com>
    Cc: Hridya Valsaraju <hridya@google.com>
    Cc: Hillf Danton <hdanton@sina.com>
    Cc: dri-devel@lists.freedesktop.org
    Cc: Brian Starkey <brian.starkey@arm.com>
    Cc: John Stultz <john.stultz@linaro.org>
    Cc: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Rob Herring <robh@kernel.org>
    Cc: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Cc: "Paul E. McKenney" <paulmck@linux.ibm.com>
    Cc: Sean Paul <seanpaul@chromium.org>
    Cc: "Andrew F. Davis" <afd@ti.com>
    Cc: linux-media@vger.kernel.org
    Cc: linaro-mm-sig@lists.linaro.org
    Acked-by: David Airlie <airlied@linux.ie>
    Signed-off-by: Sean Paul <sean@poorly.run>
    Link: https://patchwork.freedesktop.org/patch/msgid/20191030203003.101156-6-sean@poorly.run

diff --git a/include/linux/dma-heap.h b/include/linux/dma-heap.h
deleted file mode 100644
index 454e354d1ffb..000000000000
--- a/include/linux/dma-heap.h
+++ /dev/null
@@ -1,59 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0 */
-/*
- * DMABUF Heaps Allocation Infrastructure
- *
- * Copyright (C) 2011 Google, Inc.
- * Copyright (C) 2019 Linaro Ltd.
- */
-
-#ifndef _DMA_HEAPS_H
-#define _DMA_HEAPS_H
-
-#include <linux/cdev.h>
-#include <linux/types.h>
-
-struct dma_heap;
-
-/**
- * struct dma_heap_ops - ops to operate on a given heap
- * @allocate:		allocate dmabuf and return fd
- *
- * allocate returns dmabuf fd  on success, -errno on error.
- */
-struct dma_heap_ops {
-	int (*allocate)(struct dma_heap *heap,
-			unsigned long len,
-			unsigned long fd_flags,
-			unsigned long heap_flags);
-};
-
-/**
- * struct dma_heap_export_info - information needed to export a new dmabuf heap
- * @name:	used for debugging/device-node name
- * @ops:	ops struct for this heap
- * @priv:	heap exporter private data
- *
- * Information needed to export a new dmabuf heap.
- */
-struct dma_heap_export_info {
-	const char *name;
-	const struct dma_heap_ops *ops;
-	void *priv;
-};
-
-/**
- * dma_heap_get_drvdata() - get per-heap driver data
- * @heap: DMA-Heap to retrieve private data for
- *
- * Returns:
- * The per-heap data for the heap.
- */
-void *dma_heap_get_drvdata(struct dma_heap *heap);
-
-/**
- * dma_heap_add - adds a heap to dmabuf heaps
- * @exp_info:		information needed to register this heap
- */
-struct dma_heap *dma_heap_add(const struct dma_heap_export_info *exp_info);
-
-#endif /* _DMA_HEAPS_H */

commit a69b0e855d3fd278ff6f09a23e1edf929538e304
Author: Andrew F. Davis <afd@ti.com>
Date:   Mon Oct 21 19:03:06 2019 +0000

    dma-buf: Add dma-buf heaps framework
    
    This framework allows a unified userspace interface for dma-buf
    exporters, allowing userland to allocate specific types of memory
    for use in dma-buf sharing.
    
    Each heap is given its own device node, which a user can allocate
    a dma-buf fd from using the DMA_HEAP_IOC_ALLOC.
    
    This code is an evoluiton of the Android ION implementation,
    and a big thanks is due to its authors/maintainers over time
    for their effort:
      Rebecca Schultz Zavin, Colin Cross, Benjamin Gaignard,
      Laura Abbott, and many other contributors!
    
    Cc: Laura Abbott <labbott@redhat.com>
    Cc: Benjamin Gaignard <benjamin.gaignard@linaro.org>
    Cc: Sumit Semwal <sumit.semwal@linaro.org>
    Cc: Liam Mark <lmark@codeaurora.org>
    Cc: Pratik Patel <pratikp@codeaurora.org>
    Cc: Brian Starkey <Brian.Starkey@arm.com>
    Cc: Vincent Donnefort <Vincent.Donnefort@arm.com>
    Cc: Sudipto Paul <Sudipto.Paul@arm.com>
    Cc: Andrew F. Davis <afd@ti.com>
    Cc: Christoph Hellwig <hch@infradead.org>
    Cc: Chenbo Feng <fengc@google.com>
    Cc: Alistair Strachan <astrachan@google.com>
    Cc: Hridya Valsaraju <hridya@google.com>
    Cc: Hillf Danton <hdanton@sina.com>
    Cc: dri-devel@lists.freedesktop.org
    Reviewed-by: Benjamin Gaignard <benjamin.gaignard@linaro.org>
    Reviewed-by: Brian Starkey <brian.starkey@arm.com>
    Acked-by: Laura Abbott <labbott@redhat.com>
    Tested-by: Ayan Kumar Halder <ayan.halder@arm.com>
    Signed-off-by: Andrew F. Davis <afd@ti.com>
    Signed-off-by: John Stultz <john.stultz@linaro.org>
    Signed-off-by: Sumit Semwal <sumit.semwal@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20191021190310.85221-2-john.stultz@linaro.org

diff --git a/include/linux/dma-heap.h b/include/linux/dma-heap.h
new file mode 100644
index 000000000000..454e354d1ffb
--- /dev/null
+++ b/include/linux/dma-heap.h
@@ -0,0 +1,59 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+/*
+ * DMABUF Heaps Allocation Infrastructure
+ *
+ * Copyright (C) 2011 Google, Inc.
+ * Copyright (C) 2019 Linaro Ltd.
+ */
+
+#ifndef _DMA_HEAPS_H
+#define _DMA_HEAPS_H
+
+#include <linux/cdev.h>
+#include <linux/types.h>
+
+struct dma_heap;
+
+/**
+ * struct dma_heap_ops - ops to operate on a given heap
+ * @allocate:		allocate dmabuf and return fd
+ *
+ * allocate returns dmabuf fd  on success, -errno on error.
+ */
+struct dma_heap_ops {
+	int (*allocate)(struct dma_heap *heap,
+			unsigned long len,
+			unsigned long fd_flags,
+			unsigned long heap_flags);
+};
+
+/**
+ * struct dma_heap_export_info - information needed to export a new dmabuf heap
+ * @name:	used for debugging/device-node name
+ * @ops:	ops struct for this heap
+ * @priv:	heap exporter private data
+ *
+ * Information needed to export a new dmabuf heap.
+ */
+struct dma_heap_export_info {
+	const char *name;
+	const struct dma_heap_ops *ops;
+	void *priv;
+};
+
+/**
+ * dma_heap_get_drvdata() - get per-heap driver data
+ * @heap: DMA-Heap to retrieve private data for
+ *
+ * Returns:
+ * The per-heap data for the heap.
+ */
+void *dma_heap_get_drvdata(struct dma_heap *heap);
+
+/**
+ * dma_heap_add - adds a heap to dmabuf heaps
+ * @exp_info:		information needed to register this heap
+ */
+struct dma_heap *dma_heap_add(const struct dma_heap_export_info *exp_info);
+
+#endif /* _DMA_HEAPS_H */
