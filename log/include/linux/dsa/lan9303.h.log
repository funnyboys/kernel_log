commit b17c6b1f4538b66e9bac6710b57b343c2aafadea
Author: Egil Hjelmeland <privat@egil-hjelmeland.no>
Date:   Fri Dec 29 13:38:23 2017 +0100

    net: dsa: lan9303: phy_addr_sel_strap rename and retype
    
    chip->phy_addr_sel_strap is declared as a bool, but is also used as an
    integer address base.
    
    Rename 'phy_addr_sel_strap' to 'phy_addr_base', and change type to int.
    
    Signed-off-by: Egil Hjelmeland <privat@egil-hjelmeland.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/include/linux/dsa/lan9303.h b/include/linux/dsa/lan9303.h
index b6514c29563f..b4f22112ba75 100644
--- a/include/linux/dsa/lan9303.h
+++ b/include/linux/dsa/lan9303.h
@@ -23,7 +23,7 @@ struct lan9303 {
 	struct regmap_irq_chip_data *irq_data;
 	struct gpio_desc *reset_gpio;
 	u32 reset_duration; /* in [ms] */
-	bool phy_addr_sel_strap;
+	int phy_addr_base;
 	struct dsa_switch *ds;
 	struct mutex indirect_mutex; /* protect indexed register access */
 	struct mutex alr_mutex; /* protect ALR access */

commit 2e8d243e887c8802b373338ddff684aa0578be3b
Author: Egil Hjelmeland <privat@egil-hjelmeland.no>
Date:   Thu Dec 7 19:56:04 2017 +0100

    net: dsa: lan9303: Protect ALR operations with mutex
    
    ALR table operations are a sequence of related register operations which
    should be protected from concurrent access. The alr_cache should also be
    protected. Add alr_mutex doing that.
    
    Signed-off-by: Egil Hjelmeland <privat@egil-hjelmeland.no>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/include/linux/dsa/lan9303.h b/include/linux/dsa/lan9303.h
index f48a85c377de..b6514c29563f 100644
--- a/include/linux/dsa/lan9303.h
+++ b/include/linux/dsa/lan9303.h
@@ -26,6 +26,7 @@ struct lan9303 {
 	bool phy_addr_sel_strap;
 	struct dsa_switch *ds;
 	struct mutex indirect_mutex; /* protect indexed register access */
+	struct mutex alr_mutex; /* protect ALR access */
 	const struct lan9303_phy_ops *ops;
 	bool is_bridged; /* true if port 1 and 2 are bridged */
 

commit 620a5c860b774a81ce3f193eefb52bf4d128cca5
Author: Egil Hjelmeland <privat@egil-hjelmeland.no>
Date:   Mon Nov 6 12:42:01 2017 +0100

    net: dsa: lan9303: Correct register names in comments
    
    Two comments refer to registers, but lack the LAN9303_ prefix.
    Fix that.
    
    Signed-off-by: Egil Hjelmeland <privat@egil-hjelmeland.no>
    Reviewed-by: Vivien Didelot <vivien.didelot@savoirfairelinux.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/include/linux/dsa/lan9303.h b/include/linux/dsa/lan9303.h
index 05d8d136baab..f48a85c377de 100644
--- a/include/linux/dsa/lan9303.h
+++ b/include/linux/dsa/lan9303.h
@@ -13,8 +13,8 @@ struct lan9303_phy_ops {
 #define LAN9303_NUM_ALR_RECORDS 512
 struct lan9303_alr_cache_entry {
 	u8  mac_addr[ETH_ALEN];
-	u8  port_map;           /* Bitmap of ports. Zero if unused entry */
-	u8  stp_override;       /* non zero if set ALR_DAT1_AGE_OVERRID */
+	u8  port_map;         /* Bitmap of ports. Zero if unused entry */
+	u8  stp_override;     /* non zero if set LAN9303_ALR_DAT1_AGE_OVERRID */
 };
 
 struct lan9303 {
@@ -28,7 +28,9 @@ struct lan9303 {
 	struct mutex indirect_mutex; /* protect indexed register access */
 	const struct lan9303_phy_ops *ops;
 	bool is_bridged; /* true if port 1 and 2 are bridged */
-	u32 swe_port_state; /* remember SWE_PORT_STATE while not bridged */
+
+	/* remember LAN9303_SWE_PORT_STATE while not bridged */
+	u32 swe_port_state;
 	/* LAN9303 do not offer reading specific ALR entry. Cache all
 	 * static entries in a flat table
 	 **/

commit 054287295b1132c8742ea55f8e3af9cbd630c932
Author: Egil Hjelmeland <privat@egil-hjelmeland.no>
Date:   Thu Nov 2 10:36:48 2017 +0100

    net: Define eth_stp_addr in linux/etherdevice.h
    
    The lan9303 driver defines eth_stp_addr as a synonym to
    eth_reserved_addr_base to get the STP ethernet address 01:80:c2:00:00:00.
    
    eth_reserved_addr_base is also used to define the start of Bridge Reserved
    ethernet address range, which happen to be the STP address.
    
    br_dev_setup refer to eth_reserved_addr_base as a definition of STP
    address.
    
    Clean up by:
     - Move the eth_stp_addr definition to linux/etherdevice.h
     - Use eth_stp_addr instead of eth_reserved_addr_base in br_dev_setup.
    
    Signed-off-by: Egil Hjelmeland <privat@egil-hjelmeland.no>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/include/linux/dsa/lan9303.h b/include/linux/dsa/lan9303.h
index b2110e69630f..05d8d136baab 100644
--- a/include/linux/dsa/lan9303.h
+++ b/include/linux/dsa/lan9303.h
@@ -34,5 +34,3 @@ struct lan9303 {
 	 **/
 	struct lan9303_alr_cache_entry alr_cache[LAN9303_NUM_ALR_RECORDS];
 };
-
-#define eth_stp_addr eth_reserved_addr_base

commit e9292f2c03851ef81bef38579a0ee9c42140e586
Author: Egil Hjelmeland <privat@egil-hjelmeland.no>
Date:   Tue Oct 31 15:48:01 2017 +0100

    net: dsa: lan9303: Add STP ALR entry on port 0
    
    STP BPDUs arriving on user ports must sent to CPU port only,
    for processing by the SW bridge.
    
    Add an ALR entry with STP state override to fix that.
    
    Signed-off-by: Egil Hjelmeland <privat@egil-hjelmeland.no>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/include/linux/dsa/lan9303.h b/include/linux/dsa/lan9303.h
index 05d8d136baab..b2110e69630f 100644
--- a/include/linux/dsa/lan9303.h
+++ b/include/linux/dsa/lan9303.h
@@ -34,3 +34,5 @@ struct lan9303 {
 	 **/
 	struct lan9303_alr_cache_entry alr_cache[LAN9303_NUM_ALR_RECORDS];
 };
+
+#define eth_stp_addr eth_reserved_addr_base

commit 356c3e9afac0cc19c3d3b0cbc67106ce8efa0743
Author: Egil Hjelmeland <privat@egil-hjelmeland.no>
Date:   Thu Oct 26 11:00:48 2017 +0200

    net: dsa: lan9303: Move struct lan9303 to include/linux/dsa/lan9303.h
    
    The next patch require net/dsa/tag_lan9303.c to access struct lan9303.
    Therefore move struct lan9303 definitions from drivers/net/dsa/lan9303.h
    to new file include/linux/dsa/lan9303.h.
    
    Signed-off-by: Egil Hjelmeland <privat@egil-hjelmeland.no>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/include/linux/dsa/lan9303.h b/include/linux/dsa/lan9303.h
new file mode 100644
index 000000000000..05d8d136baab
--- /dev/null
+++ b/include/linux/dsa/lan9303.h
@@ -0,0 +1,36 @@
+/* Included by drivers/net/dsa/lan9303.h and net/dsa/tag_lan9303.c */
+#include <linux/if_ether.h>
+
+struct lan9303;
+
+struct lan9303_phy_ops {
+	/* PHY 1 and 2 access*/
+	int	(*phy_read)(struct lan9303 *chip, int port, int regnum);
+	int	(*phy_write)(struct lan9303 *chip, int port,
+			     int regnum, u16 val);
+};
+
+#define LAN9303_NUM_ALR_RECORDS 512
+struct lan9303_alr_cache_entry {
+	u8  mac_addr[ETH_ALEN];
+	u8  port_map;           /* Bitmap of ports. Zero if unused entry */
+	u8  stp_override;       /* non zero if set ALR_DAT1_AGE_OVERRID */
+};
+
+struct lan9303 {
+	struct device *dev;
+	struct regmap *regmap;
+	struct regmap_irq_chip_data *irq_data;
+	struct gpio_desc *reset_gpio;
+	u32 reset_duration; /* in [ms] */
+	bool phy_addr_sel_strap;
+	struct dsa_switch *ds;
+	struct mutex indirect_mutex; /* protect indexed register access */
+	const struct lan9303_phy_ops *ops;
+	bool is_bridged; /* true if port 1 and 2 are bridged */
+	u32 swe_port_state; /* remember SWE_PORT_STATE while not bridged */
+	/* LAN9303 do not offer reading specific ALR entry. Cache all
+	 * static entries in a flat table
+	 **/
+	struct lan9303_alr_cache_entry alr_cache[LAN9303_NUM_ALR_RECORDS];
+};
