commit af6074fc9aa4b29517375634189ada1869eea598
Author: Rob Herring <robh@kernel.org>
Date:   Wed Dec 27 12:55:14 2017 -0600

    of: Use SPDX license tag for DT files
    
    Convert remaining DT files to use SPDX-License-Identifier tags.
    
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Guennadi Liakhovetski <g.liakhovetski@gmx.de>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Pantelis Antoniou <pantelis.antoniou@konsulko.com>
    Reviewed-by: Frank Rowand <frank.rowand@sony.com>
    Reviewed-by: Philippe Ombredanne <pombredanne@nexb.com>
    Signed-off-by: Rob Herring <robh@kernel.org>

diff --git a/include/linux/of_graph.h b/include/linux/of_graph.h
index 3e058f05ab04..01038a6aade0 100644
--- a/include/linux/of_graph.h
+++ b/include/linux/of_graph.h
@@ -1,3 +1,4 @@
+/* SPDX-License-Identifier: GPL-2.0 */
 /*
  * OF graph binding parsing helpers
  *
@@ -6,10 +7,6 @@
  *
  * Copyright (C) 2012 Renesas Electronics Corp.
  * Author: Guennadi Liakhovetski <g.liakhovetski@gmx.de>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of version 2 of the GNU General Public License as
- * published by the Free Software Foundation.
  */
 #ifndef __LINUX_OF_GRAPH_H
 #define __LINUX_OF_GRAPH_H

commit ac1e6958d3be29a28889b09e4eec1798eccc1606
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Thu Apr 20 01:32:47 2017 +0000

    of_graph: add of_graph_get_endpoint_count()
    
    OF graph want to count its endpoint number, same as
    of_get_child_count(). This patch adds of_graph_get_endpoint_count()
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Acked-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/linux/of_graph.h b/include/linux/of_graph.h
index 9db632d16cbc..3e058f05ab04 100644
--- a/include/linux/of_graph.h
+++ b/include/linux/of_graph.h
@@ -43,6 +43,7 @@ struct of_endpoint {
 #ifdef CONFIG_OF
 int of_graph_parse_endpoint(const struct device_node *node,
 				struct of_endpoint *endpoint);
+int of_graph_get_endpoint_count(const struct device_node *np);
 struct device_node *of_graph_get_port_by_id(struct device_node *node, u32 id);
 struct device_node *of_graph_get_next_endpoint(const struct device_node *parent,
 					struct device_node *previous);
@@ -64,6 +65,11 @@ static inline int of_graph_parse_endpoint(const struct device_node *node,
 	return -ENOSYS;
 }
 
+static inline int of_graph_get_endpoint_count(const struct device_node *np)
+{
+	return 0;
+}
+
 static inline struct device_node *of_graph_get_port_by_id(
 					struct device_node *node, u32 id)
 {

commit 0ef472a973ebbfc20f2f12769e77a8cfd3612778
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Thu Apr 20 01:32:17 2017 +0000

    of_graph: add of_graph_get_port_parent()
    
    Linux kernel already has of_graph_get_remote_port_parent(),
    but, sometimes we want to get own port parent.
    This patch adds of_graph_get_port_parent()
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Acked-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/linux/of_graph.h b/include/linux/of_graph.h
index 0c9473a169dd..9db632d16cbc 100644
--- a/include/linux/of_graph.h
+++ b/include/linux/of_graph.h
@@ -50,6 +50,7 @@ struct device_node *of_graph_get_endpoint_by_regs(
 		const struct device_node *parent, int port_reg, int reg);
 struct device_node *of_graph_get_remote_endpoint(
 					const struct device_node *node);
+struct device_node *of_graph_get_port_parent(struct device_node *node);
 struct device_node *of_graph_get_remote_port_parent(
 					const struct device_node *node);
 struct device_node *of_graph_get_remote_port(const struct device_node *node);
@@ -88,6 +89,12 @@ static inline struct device_node *of_graph_get_remote_endpoint(
 	return NULL;
 }
 
+static inline struct device_node *of_graph_get_port_parent(
+	struct device_node *node)
+{
+	return NULL;
+}
+
 static inline struct device_node *of_graph_get_remote_port_parent(
 					const struct device_node *node)
 {

commit 4c9c3d595f1bad021cc126d20879df4016801736
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Thu Apr 20 01:31:42 2017 +0000

    of_graph: add of_graph_get_remote_endpoint()
    
    It should use same method to get same result.
    To getting remote-endpoint node,
    let's use of_graph_get_remote_endpoint()
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Acked-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/linux/of_graph.h b/include/linux/of_graph.h
index abdb02eaef06..0c9473a169dd 100644
--- a/include/linux/of_graph.h
+++ b/include/linux/of_graph.h
@@ -48,6 +48,8 @@ struct device_node *of_graph_get_next_endpoint(const struct device_node *parent,
 					struct device_node *previous);
 struct device_node *of_graph_get_endpoint_by_regs(
 		const struct device_node *parent, int port_reg, int reg);
+struct device_node *of_graph_get_remote_endpoint(
+					const struct device_node *node);
 struct device_node *of_graph_get_remote_port_parent(
 					const struct device_node *node);
 struct device_node *of_graph_get_remote_port(const struct device_node *node);
@@ -80,6 +82,12 @@ static inline struct device_node *of_graph_get_endpoint_by_regs(
 	return NULL;
 }
 
+static inline struct device_node *of_graph_get_remote_endpoint(
+					const struct device_node *node)
+{
+	return NULL;
+}
+
 static inline struct device_node *of_graph_get_remote_port_parent(
 					const struct device_node *node)
 {

commit b85ad494098bf881c3713218fbd74193e5d5c488
Author: Rob Herring <robh@kernel.org>
Date:   Fri Feb 3 12:39:03 2017 -0600

    of: introduce of_graph_get_remote_node
    
    The OF graph API leaves too much of the graph walking to clients when
    in many cases the driver doesn't care about accessing the port or
    endpoint nodes. The drivers typically just want the device connected via
    a particular graph connection. of_graph_get_remote_node provides this
    functionality.
    
    Signed-off-by: Rob Herring <robh@kernel.org>
    Acked-by: Philipp Zabel <p.zabel@pengutronix.de>

diff --git a/include/linux/of_graph.h b/include/linux/of_graph.h
index bb3a5a2cd570..abdb02eaef06 100644
--- a/include/linux/of_graph.h
+++ b/include/linux/of_graph.h
@@ -51,6 +51,8 @@ struct device_node *of_graph_get_endpoint_by_regs(
 struct device_node *of_graph_get_remote_port_parent(
 					const struct device_node *node);
 struct device_node *of_graph_get_remote_port(const struct device_node *node);
+struct device_node *of_graph_get_remote_node(const struct device_node *node,
+					     u32 port, u32 endpoint);
 #else
 
 static inline int of_graph_parse_endpoint(const struct device_node *node,
@@ -89,6 +91,12 @@ static inline struct device_node *of_graph_get_remote_port(
 {
 	return NULL;
 }
+static inline struct device_node *of_graph_get_remote_node(
+					const struct device_node *node,
+					u32 port, u32 endpoint)
+{
+	return NULL;
+}
 
 #endif /* CONFIG_OF */
 

commit 011d6f5c3e5f38a767c8f4c7e2de73dc91959cb0
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon May 2 12:59:19 2016 +0200

    of: include errno.h in of_graph.h
    
    When CONFIG_OF is disabled, we have to include linux/errno.h before
    including of_graph.h, or get build errors like in the newly added
    sun4i drm driver:
    
    In file included from ../drivers/gpu/drm/sun4i/sun4i_drv.c:14:0:
    include/linux/of_graph.h: In function 'of_graph_parse_endpoint':
    include/linux/of_graph.h:58:10: error: 'ENOSYS' undeclared (first use in this function)
    
    A better solution is to ensure that the header can be included
    by itself, so let's include linux/errno.h here to fix the error
    we just got, and any similar future error.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Fixes: 9026e0d122ac ("drm: Add Allwinner A10 Display Engine support")
    Signed-off-by: Rob Herring <robh@kernel.org>

diff --git a/include/linux/of_graph.h b/include/linux/of_graph.h
index f8bcd0e21a26..bb3a5a2cd570 100644
--- a/include/linux/of_graph.h
+++ b/include/linux/of_graph.h
@@ -15,6 +15,7 @@
 #define __LINUX_OF_GRAPH_H
 
 #include <linux/types.h>
+#include <linux/errno.h>
 
 /**
  * struct of_endpoint - the OF graph endpoint data structure

commit ce0bdb849ad46e4b4e4cae6913b447ae9938bdcf
Author: Inki Dae <inki.dae@samsung.com>
Date:   Tue Jun 23 16:06:44 2015 +0900

    of: fix a build error to of_graph_get_endpoint_by_regs function
    
    This patch fixes the below build error reported by Stephen,
    
         Stephen reported:
         After merging the drm-exynos tree, today's linux-next build (x86_64
         allmodconfig) failed like this:
    
         drivers/media/i2c/adv7604.o: In function `of_graph_get_endpoint_by_regs':
         adv7604.c:(.text+0x586c): multiple definition of `of_graph_get_endpoint_by_regs'
         drivers/media/i2c/adv7343.o:adv7343.c:(.text+0xa13): first defined here
         drivers/media/platform/soc_camera/atmel-isi.o: In function `of_graph_get_endpoint_by_regs':
         atmel-isi.c:(.text+0x1ec9): multiple definition of `of_graph_get_endpoint_by_regs'
         drivers/media/platform/soc_camera/soc_camera.o:soc_camera.c:(.text+0x2ce3): first defined here
         drivers/media/platform/soc_camera/rcar_vin.o: In function `of_graph_get_endpoint_by_regs':
         rcar_vin.c:(.text+0x307c): multiple definition of `of_graph_get_endpoint_by_regs'
         drivers/media/platform/soc_camera/soc_camera.o:soc_camera.c:(.text+0x2ce3): first defined here
    
         Caused by commit:
           a0f7001c18ca ("of: add helper for getting endpoint node of specific identifiers")
    
    To fix the error, this patch declares of_graph_get_endpoint_by_regs function
    with "static inline".
    
    Signed-off-by: Inki Dae <inki.dae@samsung.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>

diff --git a/include/linux/of_graph.h b/include/linux/of_graph.h
index 1c1d5b901a72..f8bcd0e21a26 100644
--- a/include/linux/of_graph.h
+++ b/include/linux/of_graph.h
@@ -71,7 +71,7 @@ static inline struct device_node *of_graph_get_next_endpoint(
 	return NULL;
 }
 
-struct device_node *of_graph_get_endpoint_by_regs(
+static inline struct device_node *of_graph_get_endpoint_by_regs(
 		const struct device_node *parent, int port_reg, int reg)
 {
 	return NULL;

commit 8ccd0d0ca04147e91890c373677f1e741dda2631
Author: Hyungwon Hwang <human.hwang@samsung.com>
Date:   Fri Jun 12 21:59:01 2015 +0900

    of: add helper for getting endpoint node of specific identifiers
    
    When there are multiple ports or multiple endpoints in a port, they have to be
    distinguished by the value of reg property. It is common. The drivers can get
    the specific endpoint in the specific port via this function. Now the drivers
    have to implement this code in themselves or have to force the order of dt nodes
    to get the right node.
    
    Signed-off-by: Hyungwon Hwang <human.hwang@samsung.com>
    Acked-by: Rob Herring <robh+dt@kernel.org>
    Signed-off-by: Inki Dae <inki.dae@samsung.com>

diff --git a/include/linux/of_graph.h b/include/linux/of_graph.h
index 7bc92e050608..1c1d5b901a72 100644
--- a/include/linux/of_graph.h
+++ b/include/linux/of_graph.h
@@ -45,6 +45,8 @@ int of_graph_parse_endpoint(const struct device_node *node,
 struct device_node *of_graph_get_port_by_id(struct device_node *node, u32 id);
 struct device_node *of_graph_get_next_endpoint(const struct device_node *parent,
 					struct device_node *previous);
+struct device_node *of_graph_get_endpoint_by_regs(
+		const struct device_node *parent, int port_reg, int reg);
 struct device_node *of_graph_get_remote_port_parent(
 					const struct device_node *node);
 struct device_node *of_graph_get_remote_port(const struct device_node *node);
@@ -69,6 +71,12 @@ static inline struct device_node *of_graph_get_next_endpoint(
 	return NULL;
 }
 
+struct device_node *of_graph_get_endpoint_by_regs(
+		const struct device_node *parent, int port_reg, int reg)
+{
+	return NULL;
+}
+
 static inline struct device_node *of_graph_get_remote_port_parent(
 					const struct device_node *node)
 {

commit 01218bf14ee60d4a2d6c667ebdbba3ae9a7a1d66
Author: Mark Brown <broonie@kernel.org>
Date:   Thu Mar 26 09:47:55 2015 -0700

    of: Explicitly include linux/types.h in of_graph.h
    
    In current -next of_graph.h fails to build due to it relying on
    linux/types.h without explicitly including it:
    
    ../include/linux/of_graph.h:43:71: error: unknown type name 'u32'
    
    caused by bfe446e37c4e (of: Add of_graph_get_port_by_id function).  Add
    an explicit inclusion to fix this.
    
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Acked-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Acked-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Rob Herring <robh@kernel.org>

diff --git a/include/linux/of_graph.h b/include/linux/of_graph.h
index 3c1c95a39e0c..7bc92e050608 100644
--- a/include/linux/of_graph.h
+++ b/include/linux/of_graph.h
@@ -14,6 +14,8 @@
 #ifndef __LINUX_OF_GRAPH_H
 #define __LINUX_OF_GRAPH_H
 
+#include <linux/types.h>
+
 /**
  * struct of_endpoint - the OF graph endpoint data structure
  * @port: identifier (value of reg property) of a port this endpoint belongs to

commit bfe446e37c4efd8ade454911e8f80414bcbfc10d
Author: Philipp Zabel <p.zabel@pengutronix.de>
Date:   Tue Mar 11 11:21:11 2014 +0100

    of: Add of_graph_get_port_by_id function
    
    This patch adds a function to get a port device tree node by port id,
    or reg property value.
    
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    Acked-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>

diff --git a/include/linux/of_graph.h b/include/linux/of_graph.h
index e43442efcbe5..3c1c95a39e0c 100644
--- a/include/linux/of_graph.h
+++ b/include/linux/of_graph.h
@@ -40,6 +40,7 @@ struct of_endpoint {
 #ifdef CONFIG_OF
 int of_graph_parse_endpoint(const struct device_node *node,
 				struct of_endpoint *endpoint);
+struct device_node *of_graph_get_port_by_id(struct device_node *node, u32 id);
 struct device_node *of_graph_get_next_endpoint(const struct device_node *parent,
 					struct device_node *previous);
 struct device_node *of_graph_get_remote_port_parent(
@@ -53,6 +54,12 @@ static inline int of_graph_parse_endpoint(const struct device_node *node,
 	return -ENOSYS;
 }
 
+static inline struct device_node *of_graph_get_port_by_id(
+					struct device_node *node, u32 id)
+{
+	return NULL;
+}
+
 static inline struct device_node *of_graph_get_next_endpoint(
 					const struct device_node *parent,
 					struct device_node *previous)

commit ee8905963ed0bc9dfc0952dc35e16e233c10e212
Author: Philipp Zabel <p.zabel@pengutronix.de>
Date:   Mon Apr 14 17:53:25 2014 +0200

    of: Add for_each_endpoint_of_node helper macro
    
    Note that while of_graph_get_next_endpoint decrements the reference count
    of the child node passed to it, of_node_put(child) still has to be called
    manually when breaking out of the loop.
    
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    Acked-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>

diff --git a/include/linux/of_graph.h b/include/linux/of_graph.h
index befef42e015b..e43442efcbe5 100644
--- a/include/linux/of_graph.h
+++ b/include/linux/of_graph.h
@@ -26,6 +26,17 @@ struct of_endpoint {
 	const struct device_node *local_node;
 };
 
+/**
+ * for_each_endpoint_of_node - iterate over every endpoint in a device node
+ * @parent: parent device node containing ports and endpoints
+ * @child: loop variable pointing to the current endpoint node
+ *
+ * When breaking out of the loop, of_node_put(child) has to be called manually.
+ */
+#define for_each_endpoint_of_node(parent, child) \
+	for (child = of_graph_get_next_endpoint(parent, NULL); child != NULL; \
+	     child = of_graph_get_next_endpoint(parent, child))
+
 #ifdef CONFIG_OF
 int of_graph_parse_endpoint(const struct device_node *node,
 				struct of_endpoint *endpoint);

commit 00fd9619120db1d6a19be2f9e3df6f76234b311b
Author: Philipp Zabel <p.zabel@pengutronix.de>
Date:   Fri Mar 7 15:49:54 2014 +0100

    of: Fix of_graph_parse_endpoint stub for !CONFIG_OF builds
    
    This patch fixes the following build error:
    
       In file included from drivers/media/i2c/adv7343.c:29:0:
    >> include/linux/of_graph.h:41:1: error: expected identifier or '(' before '{' token
        {
        ^
       include/linux/of_graph.h:39:19: warning: 'of_graph_parse_endpoint' declared 'static' but never defined [-Wunused-function]
        static inline int of_graph_parse_endpoint(const struct device_node *node,
                          ^
    
    vim +41 include/linux/of_graph.h
    
        35                                          const struct device_node *node);
        36  struct device_node *of_graph_get_remote_port(const struct device_node *node);
        37  #else
        38
        39  static inline int of_graph_parse_endpoint(const struct device_node *node,
        40                                          struct of_endpoint *endpoint);
      > 41  {
        42          return -ENOSYS;
        43  }
        44
    
    Reported-by: kbuild test robot <fengguang.wu@intel.com>
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>

diff --git a/include/linux/of_graph.h b/include/linux/of_graph.h
index 2b233db76237..befef42e015b 100644
--- a/include/linux/of_graph.h
+++ b/include/linux/of_graph.h
@@ -37,7 +37,7 @@ struct device_node *of_graph_get_remote_port(const struct device_node *node);
 #else
 
 static inline int of_graph_parse_endpoint(const struct device_node *node,
-					struct of_endpoint *endpoint);
+					struct of_endpoint *endpoint)
 {
 	return -ENOSYS;
 }

commit f2a575f67695dcba9062acd666ae5aab2380b95c
Author: Philipp Zabel <p.zabel@pengutronix.de>
Date:   Fri Feb 14 11:53:56 2014 +0100

    [media] of: move common endpoint parsing to drivers/of
    
    This patch adds a new struct of_endpoint which is then embedded in struct
    v4l2_of_endpoint and contains the endpoint properties that are not V4L2
    (or even media) specific: the port number, endpoint id, local device tree
    node and remote endpoint phandle. of_graph_parse_endpoint parses those
    properties and is used by v4l2_of_parse_endpoint, which just adds the
    V4L2 MBUS information to the containing v4l2_of_endpoint structure.
    
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    Acked-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Acked-by: Mauro Carvalho Chehab <m.chehab@samsung.com>
    Acked-by: Sylwester Nawrocki <s.nawrocki@samsung.com>

diff --git a/include/linux/of_graph.h b/include/linux/of_graph.h
index 3bbeb609a360..2b233db76237 100644
--- a/include/linux/of_graph.h
+++ b/include/linux/of_graph.h
@@ -14,7 +14,21 @@
 #ifndef __LINUX_OF_GRAPH_H
 #define __LINUX_OF_GRAPH_H
 
+/**
+ * struct of_endpoint - the OF graph endpoint data structure
+ * @port: identifier (value of reg property) of a port this endpoint belongs to
+ * @id: identifier (value of reg property) of this endpoint
+ * @local_node: pointer to device_node of this endpoint
+ */
+struct of_endpoint {
+	unsigned int port;
+	unsigned int id;
+	const struct device_node *local_node;
+};
+
 #ifdef CONFIG_OF
+int of_graph_parse_endpoint(const struct device_node *node,
+				struct of_endpoint *endpoint);
 struct device_node *of_graph_get_next_endpoint(const struct device_node *parent,
 					struct device_node *previous);
 struct device_node *of_graph_get_remote_port_parent(
@@ -22,6 +36,12 @@ struct device_node *of_graph_get_remote_port_parent(
 struct device_node *of_graph_get_remote_port(const struct device_node *node);
 #else
 
+static inline int of_graph_parse_endpoint(const struct device_node *node,
+					struct of_endpoint *endpoint);
+{
+	return -ENOSYS;
+}
+
 static inline struct device_node *of_graph_get_next_endpoint(
 					const struct device_node *parent,
 					struct device_node *previous)

commit fd9fdb78a9bf85b94fb2190c82ff280c8f8375cc
Author: Philipp Zabel <p.zabel@pengutronix.de>
Date:   Mon Feb 10 22:01:48 2014 +0100

    [media] of: move graph helpers from drivers/media/v4l2-core to drivers/of
    
    This patch moves the parsing helpers used to parse connected graphs
    in the device tree, like the video interface bindings documented in
    Documentation/devicetree/bindings/media/video-interfaces.txt, from
    drivers/media/v4l2-core/v4l2-of.c into drivers/of/base.c.
    
    This allows to reuse the same parser code from outside the V4L2
    framework, most importantly from display drivers.
    The functions v4l2_of_get_next_endpoint, v4l2_of_get_remote_port,
    and v4l2_of_get_remote_port_parent are moved. They are renamed to
    of_graph_get_next_endpoint, of_graph_get_remote_port, and
    of_graph_get_remote_port_parent, respectively.
    Since there are not that many current users yet, switch all of
    them to the new functions right away.
    
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    Acked-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Acked-by: Mauro Carvalho Chehab <m.chehab@samsung.com>
    Acked-by: Sylwester Nawrocki <s.nawrocki@samsung.com>

diff --git a/include/linux/of_graph.h b/include/linux/of_graph.h
new file mode 100644
index 000000000000..3bbeb609a360
--- /dev/null
+++ b/include/linux/of_graph.h
@@ -0,0 +1,46 @@
+/*
+ * OF graph binding parsing helpers
+ *
+ * Copyright (C) 2012 - 2013 Samsung Electronics Co., Ltd.
+ * Author: Sylwester Nawrocki <s.nawrocki@samsung.com>
+ *
+ * Copyright (C) 2012 Renesas Electronics Corp.
+ * Author: Guennadi Liakhovetski <g.liakhovetski@gmx.de>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of version 2 of the GNU General Public License as
+ * published by the Free Software Foundation.
+ */
+#ifndef __LINUX_OF_GRAPH_H
+#define __LINUX_OF_GRAPH_H
+
+#ifdef CONFIG_OF
+struct device_node *of_graph_get_next_endpoint(const struct device_node *parent,
+					struct device_node *previous);
+struct device_node *of_graph_get_remote_port_parent(
+					const struct device_node *node);
+struct device_node *of_graph_get_remote_port(const struct device_node *node);
+#else
+
+static inline struct device_node *of_graph_get_next_endpoint(
+					const struct device_node *parent,
+					struct device_node *previous)
+{
+	return NULL;
+}
+
+static inline struct device_node *of_graph_get_remote_port_parent(
+					const struct device_node *node)
+{
+	return NULL;
+}
+
+static inline struct device_node *of_graph_get_remote_port(
+					const struct device_node *node)
+{
+	return NULL;
+}
+
+#endif /* CONFIG_OF */
+
+#endif /* __LINUX_OF_GRAPH_H */
