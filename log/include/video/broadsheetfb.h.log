commit b32bfc3843f7fd090d30853d98866d923cfb8fff
Author: Jaya Kumar <jayakumar.lkml@gmail.com>
Date:   Wed Mar 10 15:21:43 2010 -0800

    broadsheetfb: support storing waveform
    
    This patch adds waveform storing capability to broadsheetfb. It uses the
    firmware class to retrieve the waveform, and the request to initiate the
    waveform storing is done via a driver sysfs entry, loadstore_waveform.
    
    Broadsheet is a framebuffer device.  It is slightly different from a
    typical framebuffer controller that drives a normal TFT-LCD display.  Most
    E-Ink display panels require a waveform in order to function.  That is, in
    order to drive the state of a pixel to black, gray, or white, a specific
    waveform is utilized.  Basically, that waveform represents the specific
    E-field wiggling needed to get the pixel to its optimal state given
    current temperature, and its previous state.  TN/IPS-LCDs use a similar
    concept but the driving waveform is sufficiently simple that it is
    internalized in the TFT source/gate driver.
    
    These E-Ink waveforms are specific to a production batch.  That is, a
    batch of display films are produced, then they get characterized and a
    waveform is generated for that batch.  Broadsheet, typically, is attached
    to its private SPI flash which is then flashed with this waveform.
    
    Users won't be able to see the waveform and typically won't ever need to
    know about it.  If however, the display panel attached to broadsheet is
    changed out, then they will need to update their waveform.  That would
    typically be done at a factory or repair facility rather than by a user.
    
    [akpm@linux-foundation.org: fix printk warning]
    Signed-off-by: Jaya Kumar <jayakumar.lkml@gmail.com>
    Cc: Geert Uytterhoeven <geert@linux-m68k.org>
    Cc: Krzysztof Helt <krzysztof.h1@wp.pl>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/include/video/broadsheetfb.h b/include/video/broadsheetfb.h
index d65b6689e92c..548d28f4ec67 100644
--- a/include/video/broadsheetfb.h
+++ b/include/video/broadsheetfb.h
@@ -29,6 +29,10 @@
 #define BS_CMD_UPD_FULL		0x33
 #define BS_CMD_UPD_GDRV_CLR	0x37
 
+/* Broadsheet register interface defines */
+#define BS_REG_REV		0x00
+#define BS_REG_PRC		0x02
+
 /* Broadsheet pin interface specific defines */
 #define BS_CS	0x01
 #define BS_DC 	0x02
@@ -46,6 +50,7 @@ struct broadsheetfb_par {
 	u16 (*read_reg)(struct broadsheetfb_par *, u16 reg);
 	wait_queue_head_t waitq;
 	int panel_index;
+	struct mutex io_lock;
 };
 
 /* board specific routines */

commit 2afb18981739a1426af2a6c952e03c5966b3dfc6
Author: Jaya Kumar <jayakumar.lkml@gmail.com>
Date:   Wed Mar 10 15:21:41 2010 -0800

    broadsheetfb: add MMIO hooks
    
    Allow boards with GP-MMIO controllers to provide hooks to broadsheetfb in
    order to offload cmd/data writes and data reads instead of relying only on
    host based GPIO wiggling.
    
    Signed-off-by: Jaya Kumar <jayakumar.lkml@gmail.com>
    Cc: Geert Uytterhoeven <geert@linux-m68k.org>
    Cc: Krzysztof Helt <krzysztof.h1@wp.pl>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/include/video/broadsheetfb.h b/include/video/broadsheetfb.h
index a2c2829ceb38..d65b6689e92c 100644
--- a/include/video/broadsheetfb.h
+++ b/include/video/broadsheetfb.h
@@ -34,6 +34,10 @@
 #define BS_DC 	0x02
 #define BS_WR 	0x03
 
+/* Broadsheet IO interface specific defines */
+#define BS_MMIO_CMD	0x01
+#define BS_MMIO_DATA	0x02
+
 /* struct used by broadsheet. board specific stuff comes from *board */
 struct broadsheetfb_par {
 	struct fb_info *info;
@@ -49,12 +53,17 @@ struct broadsheet_board {
 	struct module *owner;
 	int (*init)(struct broadsheetfb_par *);
 	int (*wait_for_rdy)(struct broadsheetfb_par *);
-	void (*set_ctl)(struct broadsheetfb_par *, unsigned char, u8);
-	void (*set_hdb)(struct broadsheetfb_par *, u16);
-	u16 (*get_hdb)(struct broadsheetfb_par *);
 	void (*cleanup)(struct broadsheetfb_par *);
 	int (*get_panel_type)(void);
 	int (*setup_irq)(struct fb_info *);
-};
 
+	/* Functions for boards that use GPIO */
+	void (*set_ctl)(struct broadsheetfb_par *, unsigned char, u8);
+	void (*set_hdb)(struct broadsheetfb_par *, u16);
+	u16 (*get_hdb)(struct broadsheetfb_par *);
+
+	/* Functions for boards that have specialized MMIO */
+	void (*mmio_write)(struct broadsheetfb_par *, int type, u16);
+	u16 (*mmio_read)(struct broadsheetfb_par *);
+};
 #endif

commit c1c341a060da1bd66a1982198b1a99765b07b8a2
Author: Jaya Kumar <jayakumar.lkml@gmail.com>
Date:   Wed Mar 10 15:21:24 2010 -0800

    broadsheetfb: add multiple panel type support
    
    Update broadsheetfb to add support for multiple panel types.  The 3.7" and
    6" are known to work but the 9.7" is untested due to lack of hardware.
    
    Signed-off-by: Jaya Kumar <jayakumar.lkml@gmail.com>
    Cc: Geert Uytterhoeven <geert@linux-m68k.org>
    Cc: Krzysztof Helt <krzysztof.h1@wp.pl>
    Cc: Russell King <rmk@arm.linux.org.uk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/include/video/broadsheetfb.h b/include/video/broadsheetfb.h
index a758534c0272..a2c2829ceb38 100644
--- a/include/video/broadsheetfb.h
+++ b/include/video/broadsheetfb.h
@@ -41,6 +41,7 @@ struct broadsheetfb_par {
 	void (*write_reg)(struct broadsheetfb_par *, u16 reg, u16 val);
 	u16 (*read_reg)(struct broadsheetfb_par *, u16 reg);
 	wait_queue_head_t waitq;
+	int panel_index;
 };
 
 /* board specific routines */

commit 0d4ff4df341208b1b75e01feca27301c0dcbf490
Author: Jaya Kumar <jayakumar.lkml@gmail.com>
Date:   Thu Jan 1 17:49:19 2009 +0100

    [ARM] 5353/1: fbdev: add E-Ink Broadsheet controller support v3
    
    This patch adds support for the E-Ink Broadsheet display controller.
    
    Cc: Eric Miao <eric.miao@marvell.com>
    Signed-off-by: Jaya Kumar <jayakumar.lkml@gmail.com>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>

diff --git a/include/video/broadsheetfb.h b/include/video/broadsheetfb.h
new file mode 100644
index 000000000000..a758534c0272
--- /dev/null
+++ b/include/video/broadsheetfb.h
@@ -0,0 +1,59 @@
+/*
+ * broadsheetfb.h - definitions for the broadsheet framebuffer driver
+ *
+ * Copyright (C) 2008 by Jaya Kumar
+ *
+ * This file is subject to the terms and conditions of the GNU General Public
+ * License. See the file COPYING in the main directory of this archive for
+ * more details.
+ *
+ */
+
+#ifndef _LINUX_BROADSHEETFB_H_
+#define _LINUX_BROADSHEETFB_H_
+
+/* Broadsheet command defines */
+#define BS_CMD_INIT_SYS_RUN	0x06
+#define BS_CMD_INIT_DSPE_CFG	0x09
+#define BS_CMD_INIT_DSPE_TMG	0x0A
+#define BS_CMD_INIT_ROTMODE	0x0B
+#define BS_CMD_RD_REG		0x10
+#define BS_CMD_WR_REG		0x11
+#define BS_CMD_LD_IMG		0x20
+#define BS_CMD_LD_IMG_AREA	0x22
+#define BS_CMD_LD_IMG_END	0x23
+#define BS_CMD_WAIT_DSPE_TRG	0x28
+#define BS_CMD_WAIT_DSPE_FREND	0x29
+#define BS_CMD_RD_WFM_INFO	0x30
+#define BS_CMD_UPD_INIT		0x32
+#define BS_CMD_UPD_FULL		0x33
+#define BS_CMD_UPD_GDRV_CLR	0x37
+
+/* Broadsheet pin interface specific defines */
+#define BS_CS	0x01
+#define BS_DC 	0x02
+#define BS_WR 	0x03
+
+/* struct used by broadsheet. board specific stuff comes from *board */
+struct broadsheetfb_par {
+	struct fb_info *info;
+	struct broadsheet_board *board;
+	void (*write_reg)(struct broadsheetfb_par *, u16 reg, u16 val);
+	u16 (*read_reg)(struct broadsheetfb_par *, u16 reg);
+	wait_queue_head_t waitq;
+};
+
+/* board specific routines */
+struct broadsheet_board {
+	struct module *owner;
+	int (*init)(struct broadsheetfb_par *);
+	int (*wait_for_rdy)(struct broadsheetfb_par *);
+	void (*set_ctl)(struct broadsheetfb_par *, unsigned char, u8);
+	void (*set_hdb)(struct broadsheetfb_par *, u16);
+	u16 (*get_hdb)(struct broadsheetfb_par *);
+	void (*cleanup)(struct broadsheetfb_par *);
+	int (*get_panel_type)(void);
+	int (*setup_irq)(struct fb_info *);
+};
+
+#endif
