commit 3fca9e0be9b5b7f4ccd5f71941143d9719047a05
Author: Bartosz Golaszewski <bgolaszewski@baylibre.com>
Date:   Mon Jul 22 15:44:20 2019 +0200

    fbdev: da8xx: remove panel_power_ctrl() callback from platform data
    
    There are no more users of panel_power_ctrl(). Remove it from the
    driver.
    
    Signed-off-by: Bartosz Golaszewski <bgolaszewski@baylibre.com>
    Acked-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Signed-off-by: Sekhar Nori <nsekhar@ti.com>

diff --git a/include/video/da8xx-fb.h b/include/video/da8xx-fb.h
index efed3c3383d6..1d19ae62b844 100644
--- a/include/video/da8xx-fb.h
+++ b/include/video/da8xx-fb.h
@@ -32,7 +32,6 @@ struct da8xx_lcdc_platform_data {
 	const char manu_name[10];
 	void *controller_data;
 	const char type[25];
-	void (*panel_power_ctrl)(int);
 };
 
 struct lcd_ctrl_config {

commit 26e7164537380479bf96e852df6ab42ebe50e836
Author: Darren Etheridge <detheridge@ti.com>
Date:   Mon Aug 5 17:02:30 2013 -0500

    video: da8xx-fb: improve readability of code
    
    Change the lcd_disable_raster funtion from using a bool to an enum
    as the function is very confusing with the current api.  This helps
    make it clearer what the parameter is really doing.
    
    Signed-off-by: Darren Etheridge <detheridge@ti.com>
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>

diff --git a/include/video/da8xx-fb.h b/include/video/da8xx-fb.h
index f88825928dd1..efed3c3383d6 100644
--- a/include/video/da8xx-fb.h
+++ b/include/video/da8xx-fb.h
@@ -23,6 +23,11 @@ enum raster_load_mode {
 	LOAD_PALETTE,
 };
 
+enum da8xx_frame_complete {
+	DA8XX_FRAME_WAIT,
+	DA8XX_FRAME_NOWAIT,
+};
+
 struct da8xx_lcdc_platform_data {
 	const char manu_name[10];
 	void *controller_data;

commit 3b43ad201dea06be1636e4809278d63837f8d292
Author: Manjunathappa, Prakash <prakash.pm@ti.com>
Date:   Tue Oct 16 10:23:16 2012 +0530

    da8xx-fb: cleanup LCDC configurations
    
    Configure below LCDC configurations to optimal values, also have an
    option configure these optional parameters for platform.
    1) AC bias configuration: Required only for passive panels
    2) Dma_burst_size:
    3) FIFO_DMA_DELAY:
    4) FIFO threshold: Does not apply for da830 LCDC.
    
    Patch is verified for 16bpp and 24bpp configurations on da830, da850 and
    am335x EVMs.
    
    Signed-off-by: Manjunathappa, Prakash <prakash.pm@ti.com>
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>

diff --git a/include/video/da8xx-fb.h b/include/video/da8xx-fb.h
index 12e4e1de5e3c..f88825928dd1 100644
--- a/include/video/da8xx-fb.h
+++ b/include/video/da8xx-fb.h
@@ -12,10 +12,6 @@
 #ifndef DA8XX_FB_H
 #define DA8XX_FB_H
 
-enum panel_type {
-	QVGA = 0
-};
-
 enum panel_shade {
 	MONOCHROME = 0,
 	COLOR_ACTIVE,
@@ -27,13 +23,6 @@ enum raster_load_mode {
 	LOAD_PALETTE,
 };
 
-struct display_panel {
-	enum panel_type panel_type; /* QVGA */
-	int max_bpp;
-	int min_bpp;
-	enum panel_shade panel_shade;
-};
-
 struct da8xx_lcdc_platform_data {
 	const char manu_name[10];
 	void *controller_data;
@@ -42,7 +31,7 @@ struct da8xx_lcdc_platform_data {
 };
 
 struct lcd_ctrl_config {
-	const struct display_panel *p_disp_panel;
+	enum panel_shade panel_shade;
 
 	/* AC Bias Pin Frequency */
 	int ac_bias;
@@ -68,18 +57,9 @@ struct lcd_ctrl_config {
 	/* Mono 8-bit Mode: 1=D0-D7 or 0=D0-D3 */
 	unsigned char mono_8bit_mode;
 
-	/* Invert line clock */
-	unsigned char invert_line_clock;
-
-	/* Invert frame clock  */
-	unsigned char invert_frm_clock;
-
 	/* Horizontal and Vertical Sync Edge: 0=rising 1=falling */
 	unsigned char sync_edge;
 
-	/* Horizontal and Vertical Sync: Control: 0=ignore */
-	unsigned char sync_ctrl;
-
 	/* Raster Data Order Select: 1=Most-to-least 0=Least-to-most */
 	unsigned char raster_order;
 

commit f772fabdf72aec5ef05988dd82dfd150e58f7aa3
Author: Manjunathappa, Prakash <prakash.pm@ti.com>
Date:   Tue Oct 16 10:23:15 2012 +0530

    da8xx-fb: adopt fb_videomode data for panel information
    
    Adopt fb_videomode data instead of defining driver private
    structure to hold panel information. This is the way standard FB
    drivers maintain the panel information.
    
    Signed-off-by: Manjunathappa, Prakash <prakash.pm@ti.com>
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>

diff --git a/include/video/da8xx-fb.h b/include/video/da8xx-fb.h
index 5a0e4f9efb53..12e4e1de5e3c 100644
--- a/include/video/da8xx-fb.h
+++ b/include/video/da8xx-fb.h
@@ -103,5 +103,8 @@ struct lcd_sync_arg {
 #define FBIPUT_HSYNC		_IOW('F', 9, int)
 #define FBIPUT_VSYNC		_IOW('F', 10, int)
 
+/* Proprietary FB_SYNC_ flags */
+#define FB_SYNC_CLK_INVERT 0x40000000
+
 #endif  /* ifndef DA8XX_FB_H */
 

commit fb8fa9431971b9847aafaf89281570ca41bd0b40
Author: Manjunathappa, Prakash <prakash.pm@ti.com>
Date:   Wed Jul 18 21:03:36 2012 +0530

    video: da8xx-fb: configure FIFO threshold to reduce underflow errors
    
    Patch works around the below silicon errata:
    During LCDC initialization, there is the potential for a FIFO
    underflow condition to occur. A FIFO underflow condition
    occurs when the input FIFO is completely empty and the LCDC
    raster controller logic that drives data to the output pins
    attempts to fetch data from the FIFO. When a FIFO underflow
    condition occurs, incorrect data will be driven out on the
    LCDC data pins.
    
    Software should poll the FUF bit field in the LCD_STAT register
    to check if an error condition has occurred or service the
    interrupt if FUF_EN is enabled when FUF occurs. If the FUF bit
    field has been set to 1, this will indicate an underflow
    condition has occurred and then the software should execute a
    reset of the LCDC via the LPSC.
    
    This problem may occur if the LCDC FIFO threshold size
    (LCDDMA_CTRL[TH_FIFO_READY]) is left at its default value after
    reset. Increasing the FIFO threshold size will reduce or
    eliminate underflows. Setting the threshold size to 256 double
    words or larger is recommended.
    
    Above issue is described in section 2.1.3 of silicon errata
    http://www.ti.com/lit/er/sprz313e/sprz313e.pdf
    
    Signed-off-by: Rajashekhara, Sudhakar <sudhakar.raj@ti.com>
    Signed-off-by: Manjunathappa, Prakash <prakash.pm@ti.com>
    Signed-off-by: Florian Tobias Schandinat <FlorianSchandinat@gmx.de>

diff --git a/include/video/da8xx-fb.h b/include/video/da8xx-fb.h
index 89d43b3d4cb9..5a0e4f9efb53 100644
--- a/include/video/da8xx-fb.h
+++ b/include/video/da8xx-fb.h
@@ -82,6 +82,9 @@ struct lcd_ctrl_config {
 
 	/* Raster Data Order Select: 1=Most-to-least 0=Least-to-most */
 	unsigned char raster_order;
+
+	/* DMA FIFO threshold */
+	int fifo_th;
 };
 
 struct lcd_sync_arg {

commit e3a4d1d2de7251d4a00b04f50f6b3d2a1fc0fe5f
Author: Mike Frysinger <vapier@gentoo.org>
Date:   Mon Nov 15 05:03:13 2010 -0500

    fbdev: da8xx: punt duplicated FBIO_WAITFORVSYNC define
    
    This is already defined by linux/fb.h now, so punt the duplicate
    definition from the driver header.
    
    Signed-off-by: Mike Frysinger <vapier@gentoo.org>
    Signed-off-by: Paul Mundt <lethal@linux-sh.org>

diff --git a/include/video/da8xx-fb.h b/include/video/da8xx-fb.h
index 6316cdabf73f..89d43b3d4cb9 100644
--- a/include/video/da8xx-fb.h
+++ b/include/video/da8xx-fb.h
@@ -99,7 +99,6 @@ struct lcd_sync_arg {
 #define FBIPUT_COLOR		_IOW('F', 6, int)
 #define FBIPUT_HSYNC		_IOW('F', 9, int)
 #define FBIPUT_VSYNC		_IOW('F', 10, int)
-#define FBIO_WAITFORVSYNC	_IOW('F', 0x20, u_int32_t)
 
 #endif  /* ifndef DA8XX_FB_H */
 

commit 1f9c3e1f07e39c8af3bf42236fc553b5bb0f83f1
Author: Martin Ambrose <martin@ti.com>
Date:   Mon May 24 14:34:01 2010 -0700

    fbdev: da8xx/omap-l1xx: implement double buffering
    
    This work includes the following:
    
    - Implement handler for FBIO_WAITFORVSYNC ioctl.
    
    - Allocate the data and palette buffers separately.  A consequence of
      this is that the palette and data loading is now done in different
      phases.  And that the LCD must be disabled temporarily after the palette
      is loaded but this will only happen once after init and each time the
      palette is changed.  I think this is OK.
    
    - Allocate two (ping and pong) framebuffers from memory.
    
    - Add pan_display handler which toggles the LCDC DMA registers between
      the ping and pong buffers.
    
    Signed-off-by: Martin Ambrose <martin@ti.com>
    Cc: Chaithrika U S <chaithrika@ti.com>
    Cc: Sudhakar Rajashekhara <sudhakar.raj@ti.com>
    Cc: Krzysztof Helt <krzysztof.h1@poczta.fm>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/include/video/da8xx-fb.h b/include/video/da8xx-fb.h
index 89d43b3d4cb9..6316cdabf73f 100644
--- a/include/video/da8xx-fb.h
+++ b/include/video/da8xx-fb.h
@@ -99,6 +99,7 @@ struct lcd_sync_arg {
 #define FBIPUT_COLOR		_IOW('F', 6, int)
 #define FBIPUT_HSYNC		_IOW('F', 9, int)
 #define FBIPUT_VSYNC		_IOW('F', 10, int)
+#define FBIO_WAITFORVSYNC	_IOW('F', 0x20, u_int32_t)
 
 #endif  /* ifndef DA8XX_FB_H */
 

commit 3611380490c6ce27a2277709a34b8c5531524caf
Author: Chaithrika U S <chaithrika@ti.com>
Date:   Tue Dec 15 16:46:38 2009 -0800

    davinci: fb: update the driver in preparation for addition of power management features
    
    Add a helper function to enable raster.  Also add one member in the
    private data structure to track the current blank status, another function
    pointer which takes in the platform specific callback function to control
    panel power.
    
    These updates will help in adding suspend/resume and frame buffer blank
    operation features.
    
    Signed-off-by: Chaithrika U S <chaithrika@ti.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/include/video/da8xx-fb.h b/include/video/da8xx-fb.h
index c051a50ed528..89d43b3d4cb9 100644
--- a/include/video/da8xx-fb.h
+++ b/include/video/da8xx-fb.h
@@ -38,6 +38,7 @@ struct da8xx_lcdc_platform_data {
 	const char manu_name[10];
 	void *controller_data;
 	const char type[25];
+	void (*panel_power_ctrl)(int);
 };
 
 struct lcd_ctrl_config {

commit 2f93e8f4822fdd48fa9c4c901eea87ab1c902f87
Author: Sudhakar Rajashekhara <sudhakar.raj@ti.com>
Date:   Tue Sep 22 16:47:06 2009 -0700

    davinci-fb-frame-buffer-driver-for-ti-da8xx-omap-l1xx-v4
    
    Since the previous version, return values in ioctl() function have been
    modified.
    
    [akpm@linux-foundation.org: simplify lcd_disable_raster()]
    Signed-off-by: Sudhakar Rajashekhara <sudhakar.raj@ti.com>
    Signed-off-by: Pavel Kiryukhin <pkiryukhin@ru.mvista.com>
    Signed-off-by: Steve Chen <schen@mvista.com>
    Acked-by: Krzysztof Helt <krzysztof.h1@wp.pl>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/include/video/da8xx-fb.h b/include/video/da8xx-fb.h
index 5f7767547fa0..c051a50ed528 100644
--- a/include/video/da8xx-fb.h
+++ b/include/video/da8xx-fb.h
@@ -67,9 +67,6 @@ struct lcd_ctrl_config {
 	/* Mono 8-bit Mode: 1=D0-D7 or 0=D0-D3 */
 	unsigned char mono_8bit_mode;
 
-	/* Invert pixel clock */
-	unsigned char invert_pxl_clock;
-
 	/* Invert line clock */
 	unsigned char invert_line_clock;
 

commit 4ed824d9aead77a6a4eb1e89c3b3d270ba386fad
Author: Sudhakar Rajashekhara <sudhakar.raj@ti.com>
Date:   Tue Sep 22 16:47:06 2009 -0700

    davinci: fb: Frame Buffer driver for TI DA8xx/OMAP-L1xx
    
    Add LCD controller (LCDC) driver for TI's DA8xx/OMAP-L1xx architecture.
    LCDC specifications can be found at http://www.ti.com/litv/pdf/sprufm0a.
    
    LCDC on DA8xx consists of two independent controllers, the Raster
    Controller and the LCD Interface Display Driver (LIDD) controller.  LIDD
    further supports character and graphic displays.
    
    This patch adds support for the graphic display (Sharp LQ035Q3DG01) found
    on the DA830 based EVM.  The EVM details can be found at:
    http://support.spectrumdigital.com/boards/dskda830/revc/.
    
    Signed-off-by: Sudhakar Rajashekhara <sudhakar.raj@ti.com>
    Signed-off-by: Pavel Kiryukhin <pkiryukhin@ru.mvista.com>
    Signed-off-by: Steve Chen <schen@mvista.com>
    Acked-by: Krzysztof Helt <krzysztof.h1@wp.pl>
    DESC
    davinci-fb-frame-buffer-driver-for-ti-da8xx-omap-l1xx-fix
    EDESC
    From: Andrew Morton <akpm@linux-foundation.org>
    
    fix kconfig indenting
    
    Cc: Krzysztof Helt <krzysztof.h1@wp.pl>
    Cc: Pavel Kiryukhin <pkiryukhin@ru.mvista.com>
    Cc: Steve Chen <schen@mvista.com>
    Cc: Sudhakar Rajashekhara <sudhakar.raj@ti.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/include/video/da8xx-fb.h b/include/video/da8xx-fb.h
new file mode 100644
index 000000000000..5f7767547fa0
--- /dev/null
+++ b/include/video/da8xx-fb.h
@@ -0,0 +1,106 @@
+/*
+ * Header file for TI DA8XX LCD controller platform data.
+ *
+ * Copyright (C) 2008-2009 MontaVista Software Inc.
+ * Copyright (C) 2008-2009 Texas Instruments Inc
+ *
+ * This file is licensed under the terms of the GNU General Public License
+ * version 2. This program is licensed "as is" without any warranty of any
+ * kind, whether express or implied.
+ */
+
+#ifndef DA8XX_FB_H
+#define DA8XX_FB_H
+
+enum panel_type {
+	QVGA = 0
+};
+
+enum panel_shade {
+	MONOCHROME = 0,
+	COLOR_ACTIVE,
+	COLOR_PASSIVE,
+};
+
+enum raster_load_mode {
+	LOAD_DATA = 1,
+	LOAD_PALETTE,
+};
+
+struct display_panel {
+	enum panel_type panel_type; /* QVGA */
+	int max_bpp;
+	int min_bpp;
+	enum panel_shade panel_shade;
+};
+
+struct da8xx_lcdc_platform_data {
+	const char manu_name[10];
+	void *controller_data;
+	const char type[25];
+};
+
+struct lcd_ctrl_config {
+	const struct display_panel *p_disp_panel;
+
+	/* AC Bias Pin Frequency */
+	int ac_bias;
+
+	/* AC Bias Pin Transitions per Interrupt */
+	int ac_bias_intrpt;
+
+	/* DMA burst size */
+	int dma_burst_sz;
+
+	/* Bits per pixel */
+	int bpp;
+
+	/* FIFO DMA Request Delay */
+	int fdd;
+
+	/* TFT Alternative Signal Mapping (Only for active) */
+	unsigned char tft_alt_mode;
+
+	/* 12 Bit Per Pixel (5-6-5) Mode (Only for passive) */
+	unsigned char stn_565_mode;
+
+	/* Mono 8-bit Mode: 1=D0-D7 or 0=D0-D3 */
+	unsigned char mono_8bit_mode;
+
+	/* Invert pixel clock */
+	unsigned char invert_pxl_clock;
+
+	/* Invert line clock */
+	unsigned char invert_line_clock;
+
+	/* Invert frame clock  */
+	unsigned char invert_frm_clock;
+
+	/* Horizontal and Vertical Sync Edge: 0=rising 1=falling */
+	unsigned char sync_edge;
+
+	/* Horizontal and Vertical Sync: Control: 0=ignore */
+	unsigned char sync_ctrl;
+
+	/* Raster Data Order Select: 1=Most-to-least 0=Least-to-most */
+	unsigned char raster_order;
+};
+
+struct lcd_sync_arg {
+	int back_porch;
+	int front_porch;
+	int pulse_width;
+};
+
+/* ioctls */
+#define FBIOGET_CONTRAST	_IOR('F', 1, int)
+#define FBIOPUT_CONTRAST	_IOW('F', 2, int)
+#define FBIGET_BRIGHTNESS	_IOR('F', 3, int)
+#define FBIPUT_BRIGHTNESS	_IOW('F', 3, int)
+#define FBIGET_COLOR		_IOR('F', 5, int)
+#define FBIPUT_COLOR		_IOW('F', 6, int)
+#define FBIPUT_HSYNC		_IOW('F', 9, int)
+#define FBIPUT_VSYNC		_IOW('F', 10, int)
+
+#endif  /* ifndef DA8XX_FB_H */
+
