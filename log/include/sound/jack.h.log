commit 1a59d1b8e05ea6ab45f7e18897de1ef0e6bc3da6
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon May 27 08:55:05 2019 +0200

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 156
    
    Based on 1 normalized pattern(s):
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license as published by
      the free software foundation either version 2 of the license or at
      your option any later version this program is distributed in the
      hope that it will be useful but without any warranty without even
      the implied warranty of merchantability or fitness for a particular
      purpose see the gnu general public license for more details you
      should have received a copy of the gnu general public license along
      with this program if not write to the free software foundation inc
      59 temple place suite 330 boston ma 02111 1307 usa
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-or-later
    
    has been chosen to replace the boilerplate/reference in 1334 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Reviewed-by: Richard Fontana <rfontana@redhat.com>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190527070033.113240726@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/include/sound/jack.h b/include/sound/jack.h
index 1e84bfb553cf..9eb2b5ec1ec4 100644
--- a/include/sound/jack.h
+++ b/include/sound/jack.h
@@ -1,3 +1,4 @@
+/* SPDX-License-Identifier: GPL-2.0-or-later */
 #ifndef __SOUND_JACK_H
 #define __SOUND_JACK_H
 
@@ -5,22 +6,6 @@
  *  Jack abstraction layer
  *
  *  Copyright 2008 Wolfson Microelectronics plc
- *
- *
- *   This program is free software; you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation; either version 2 of the License, or
- *   (at your option) any later version.
- *
- *   This program is distributed in the hope that it will be useful,
- *   but WITHOUT ANY WARRANTY; without even the implied warranty of
- *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *   GNU General Public License for more details.
- *
- *   You should have received a copy of the GNU General Public License
- *   along with this program; if not, write to the Free Software
- *   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
- *
  */
 
 #include <sound/core.h>

commit fe0d128c57bf927a713159f60a18d9f315d4d91d
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Feb 17 09:44:25 2016 +0100

    ALSA: jack: Allow building the jack layer without input device
    
    Since the recent integration of kctl jack and input jack layers, we
    can basically build the jack layer even without input devices.  That
    is, the jack layer itself can be built with conditional to enable the
    input device support or not, while the users may enable always
    CONFIG_SND_JACK unconditionally.
    
    For achieving it, this patch changes the following:
    - A new Kconfig, CONFIG_SND_JACK_INPUT_DEV, was introduced to indicate
      whether the jack layer supports the input device,
    - A few items in snd_jack struct and relevant codes are conditionally
      built upon CONFIG_SND_JACK_INPUT_DEV,
    - The users of CONFIG_SND_JACK drop the messy dependency on
      CONFIG_INPUT.
    
    This change also automagically fixes a potential bug in HD-audio
    driver Arnd reported, where the NULL or uninitialized jack instance is
    dereferenced.
    
    Reported-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/include/sound/jack.h b/include/sound/jack.h
index 23bede121c78..1e84bfb553cf 100644
--- a/include/sound/jack.h
+++ b/include/sound/jack.h
@@ -72,14 +72,16 @@ enum snd_jack_types {
 #define SND_JACK_SWITCH_TYPES 6
 
 struct snd_jack {
-	struct input_dev *input_dev;
 	struct list_head kctl_list;
 	struct snd_card *card;
+	const char *id;
+#ifdef CONFIG_SND_JACK_INPUT_DEV
+	struct input_dev *input_dev;
 	int registered;
 	int type;
-	const char *id;
 	char name[100];
 	unsigned int key[6];   /* Keep in sync with definitions above */
+#endif /* CONFIG_SND_JACK_INPUT_DEV */
 	void *private_data;
 	void (*private_free)(struct snd_jack *);
 };
@@ -89,10 +91,11 @@ struct snd_jack {
 int snd_jack_new(struct snd_card *card, const char *id, int type,
 		 struct snd_jack **jack, bool initial_kctl, bool phantom_jack);
 int snd_jack_add_new_kctl(struct snd_jack *jack, const char * name, int mask);
+#ifdef CONFIG_SND_JACK_INPUT_DEV
 void snd_jack_set_parent(struct snd_jack *jack, struct device *parent);
 int snd_jack_set_key(struct snd_jack *jack, enum snd_jack_types type,
 		     int keytype);
-
+#endif
 void snd_jack_report(struct snd_jack *jack, int status);
 
 #else
@@ -107,6 +110,13 @@ static inline int snd_jack_add_new_kctl(struct snd_jack *jack, const char * name
 	return 0;
 }
 
+static inline void snd_jack_report(struct snd_jack *jack, int status)
+{
+}
+
+#endif
+
+#if !defined(CONFIG_SND_JACK) || !defined(CONFIG_SND_JACK_INPUT_DEV)
 static inline void snd_jack_set_parent(struct snd_jack *jack,
 				       struct device *parent)
 {
@@ -118,11 +128,6 @@ static inline int snd_jack_set_key(struct snd_jack *jack,
 {
 	return 0;
 }
-
-static inline void snd_jack_report(struct snd_jack *jack, int status)
-{
-}
-
-#endif
+#endif /* !CONFIG_SND_JACK || !CONFIG_SND_JACK_INPUT_DEV */
 
 #endif

commit 4e3f0dc65883cac95807549b2f7a3ac183686bcb
Author: Jie Yang <yang.jie@intel.com>
Date:   Mon Apr 27 21:20:58 2015 +0800

    ALSA: jack: extend snd_jack_new to support phantom jack
    
    Dont create input devices for phantom jacks.
    
    Here, we extend snd_jack_new() to support phantom jack creating:
    pass in a bool param for [non-]phantom flag, and a bool param
    initial_jack to indicate whether we need to create a kctl at
    this stage.
    
    We can also add a kctl to the jack after its created meaning we
    can now integrate the HDA and ASoC jacks.
    
    Signed-off-by: Jie Yang <yang.jie@intel.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/include/sound/jack.h b/include/sound/jack.h
index 433b13b89125..23bede121c78 100644
--- a/include/sound/jack.h
+++ b/include/sound/jack.h
@@ -87,7 +87,7 @@ struct snd_jack {
 #ifdef CONFIG_SND_JACK
 
 int snd_jack_new(struct snd_card *card, const char *id, int type,
-		 struct snd_jack **jack);
+		 struct snd_jack **jack, bool initial_kctl, bool phantom_jack);
 int snd_jack_add_new_kctl(struct snd_jack *jack, const char * name, int mask);
 void snd_jack_set_parent(struct snd_jack *jack, struct device *parent);
 int snd_jack_set_key(struct snd_jack *jack, enum snd_jack_types type,
@@ -97,7 +97,7 @@ void snd_jack_report(struct snd_jack *jack, int status);
 
 #else
 static inline int snd_jack_new(struct snd_card *card, const char *id, int type,
-			       struct snd_jack **jack)
+			       struct snd_jack **jack, bool initial_kctl, bool phantom_jack)
 {
 	return 0;
 }

commit 9058cbe1eed29381f84dec9f96980f5a4ea1025f
Author: Jie Yang <yang.jie@intel.com>
Date:   Mon Apr 27 21:20:56 2015 +0800

    ALSA: jack: implement kctl creating for jack devices
    
    Currently the ALSA jack core registers only input devices for each jack
    registered. These jack input devices are not readable by userspace devices
    that run as non root. This patch series will implement kctls inside the
    core jack part, including kctls creating, status changing report, for both
    HD-Audio and ASoC jack. This allows non root userspace to read jack status
    and act on it.
    
    This patch adds a new API called snd_jack_add_new_kctl(), which will create
    a kcontrol, add it to the card, and also attach it to the jack kctl list.
    
    This patch also initialises the jack kctl list after jack is newed, and
    reports kctl status when jack insertion/removal events occur.
    
    snd_jack_new() is updated in the following patches to also support creating
    phantom jacks and jack kcontrols. We then remove these duplicated features
    from HDA jack and have jack kctls handled by core throughout HDA and ASoC.
    
    Signed-off-by: Liam Girdwood <liam.r.girdwood@linux.intel.com>
    Modified-by: Jie Yang <yang.jie@intel.com>
    Signed-off-by: Jie Yang <yang.jie@intel.com>
    Reveiwed-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/include/sound/jack.h b/include/sound/jack.h
index 218235030ebc..433b13b89125 100644
--- a/include/sound/jack.h
+++ b/include/sound/jack.h
@@ -73,6 +73,8 @@ enum snd_jack_types {
 
 struct snd_jack {
 	struct input_dev *input_dev;
+	struct list_head kctl_list;
+	struct snd_card *card;
 	int registered;
 	int type;
 	const char *id;
@@ -86,6 +88,7 @@ struct snd_jack {
 
 int snd_jack_new(struct snd_card *card, const char *id, int type,
 		 struct snd_jack **jack);
+int snd_jack_add_new_kctl(struct snd_jack *jack, const char * name, int mask);
 void snd_jack_set_parent(struct snd_jack *jack, struct device *parent);
 int snd_jack_set_key(struct snd_jack *jack, enum snd_jack_types type,
 		     int keytype);
@@ -93,13 +96,17 @@ int snd_jack_set_key(struct snd_jack *jack, enum snd_jack_types type,
 void snd_jack_report(struct snd_jack *jack, int status);
 
 #else
-
 static inline int snd_jack_new(struct snd_card *card, const char *id, int type,
 			       struct snd_jack **jack)
 {
 	return 0;
 }
 
+static inline int snd_jack_add_new_kctl(struct snd_jack *jack, const char * name, int mask)
+{
+	return 0;
+}
+
 static inline void snd_jack_set_parent(struct snd_jack *jack,
 				       struct device *parent)
 {

commit bf35df66f1c613b46e054ca35ceb5caddacc6fa8
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Dec 8 15:44:47 2014 +0100

    ALSA: jack: Add dummy snd_jack_set_key() definition
    
    For fixing a build error with CONFIG_SND_JACK=n
      sound/soc/codecs/ts3a227e.c:223:2: error: implicit declaration of function ‘snd_jack_set_key’ [-Werror=implicit-function-declaration]
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/include/sound/jack.h b/include/sound/jack.h
index 67f2bbcd515e..218235030ebc 100644
--- a/include/sound/jack.h
+++ b/include/sound/jack.h
@@ -105,6 +105,13 @@ static inline void snd_jack_set_parent(struct snd_jack *jack,
 {
 }
 
+static inline int snd_jack_set_key(struct snd_jack *jack,
+				   enum snd_jack_types type,
+				   int keytype)
+{
+	return 0;
+}
+
 static inline void snd_jack_report(struct snd_jack *jack, int status)
 {
 }

commit e83280f96f108ee7af8c5669080cf664b0c2b8fb
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Oct 29 08:20:46 2014 +0100

    ALSA: doc: Fix enum snd_jack_types comments
    
    Follow the proper kerneldoc rule, and complete enum item comments.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/include/sound/jack.h b/include/sound/jack.h
index 37e612e77410..67f2bbcd515e 100644
--- a/include/sound/jack.h
+++ b/include/sound/jack.h
@@ -28,7 +28,21 @@
 struct input_dev;
 
 /**
- * enum snd_jack_types: Jack types which can be reported
+ * enum snd_jack_types - Jack types which can be reported
+ * @SND_JACK_HEADPHONE: Headphone
+ * @SND_JACK_MICROPHONE: Microphone
+ * @SND_JACK_HEADSET: Headset
+ * @SND_JACK_LINEOUT: Line out
+ * @SND_JACK_MECHANICAL: Mechanical switch
+ * @SND_JACK_VIDEOOUT: Video out
+ * @SND_JACK_AVOUT: AV (Audio Video) out
+ * @SND_JACK_LINEIN:  Line in
+ * @SND_JACK_BTN_0: Button 0
+ * @SND_JACK_BTN_1: Button 1
+ * @SND_JACK_BTN_2: Button 2
+ * @SND_JACK_BTN_3: Button 3
+ * @SND_JACK_BTN_4: Button 4
+ * @SND_JACK_BTN_5: Button 5
  *
  * These values are used as a bitmask.
  *

commit 7b366d5f161c2a69eeafe525105a5a9277982472
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Oct 28 15:30:00 2014 +0100

    ALSA: jack: Fix kerneldoc comments
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/include/sound/jack.h b/include/sound/jack.h
index 58916573db58..37e612e77410 100644
--- a/include/sound/jack.h
+++ b/include/sound/jack.h
@@ -28,8 +28,9 @@
 struct input_dev;
 
 /**
- * Jack types which can be reported.  These values are used as a
- * bitmask.
+ * enum snd_jack_types: Jack types which can be reported
+ *
+ * These values are used as a bitmask.
  *
  * Note that this must be kept in sync with the lookup table in
  * sound/core/jack.c.

commit 53803aead010a314f76a8a6fa132fdcc5edf55ed
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Tue Feb 7 19:48:47 2012 +0000

    ALSA: Use a define for the number of jack switch types
    
    This is intended to facilitate the merge of the two jack detection
    mechanisms.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/include/sound/jack.h b/include/sound/jack.h
index 63c790742db4..58916573db58 100644
--- a/include/sound/jack.h
+++ b/include/sound/jack.h
@@ -53,6 +53,9 @@ enum snd_jack_types {
 	SND_JACK_BTN_5		= 0x0200,
 };
 
+/* Keep in sync with definitions above */
+#define SND_JACK_SWITCH_TYPES 6
+
 struct snd_jack {
 	struct input_dev *input_dev;
 	int registered;

commit 7c2f8e4009d4b66c8458e3a5c20510b4262853bb
Author: David Henningsson <david.henningsson@canonical.com>
Date:   Wed Oct 5 15:53:25 2011 +0200

    ALSA: jack - Add "Line In" input jack constants
    
    Similar to Line Out, these constants form the base for future
    patches enabling input jack reporting for Line in jacks.
    
    Signed-off-by: David Henningsson <david.henningsson@canonical.com>
    Acked-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/include/sound/jack.h b/include/sound/jack.h
index c140fc7cbd3f..63c790742db4 100644
--- a/include/sound/jack.h
+++ b/include/sound/jack.h
@@ -42,6 +42,7 @@ enum snd_jack_types {
 	SND_JACK_MECHANICAL	= 0x0008, /* If detected separately */
 	SND_JACK_VIDEOOUT	= 0x0010,
 	SND_JACK_AVOUT		= SND_JACK_LINEOUT | SND_JACK_VIDEOOUT,
+	SND_JACK_LINEIN		= 0x0020,
 
 	/* Kept separate from switches to facilitate implementation */
 	SND_JACK_BTN_0		= 0x4000,

commit 831853c87fb7234a8650484d30993242ea9ad6d3
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon Sep 6 16:08:56 2010 +0100

    ALSA: Add more jack button slots
    
    Some devices have more flexible microphone detection and can detect
    a wider range of buttons.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/include/sound/jack.h b/include/sound/jack.h
index d90b9fa32707..c140fc7cbd3f 100644
--- a/include/sound/jack.h
+++ b/include/sound/jack.h
@@ -47,6 +47,9 @@ enum snd_jack_types {
 	SND_JACK_BTN_0		= 0x4000,
 	SND_JACK_BTN_1		= 0x2000,
 	SND_JACK_BTN_2		= 0x1000,
+	SND_JACK_BTN_3		= 0x0800,
+	SND_JACK_BTN_4		= 0x0400,
+	SND_JACK_BTN_5		= 0x0200,
 };
 
 struct snd_jack {
@@ -55,7 +58,7 @@ struct snd_jack {
 	int type;
 	const char *id;
 	char name[100];
-	unsigned int key[3];   /* Keep in sync with definitions above */
+	unsigned int key[6];   /* Keep in sync with definitions above */
 	void *private_data;
 	void (*private_free)(struct snd_jack *);
 };

commit ebb812cb8df48e299b3d4ab75cbb0042384ef70d
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Wed Mar 17 18:07:12 2010 +0000

    ALSA: Add support for key reporting via the jack interface
    
    Some devices provide support for detection of a small number of
    buttons on their jacks. One common implementation provides a single
    button, implemented by shorting the microphone to ground and detected
    along with microphone presence detection by detecting varying current
    draws on the microphone bias signal.
    
    Provide support for up to three buttons via the jack interface. These
    default to reporting BTN_n but an API is provided to allow these to
    be remapped to other keys by the machine driver where it knows what
    the keys are. More keys can be added with ease if required.
    
    This is only intended to support simple accessory button designs. If
    the interface is limiting then either creating a child device for the
    accessory or accessing the input device in the jack directly is
    recommended.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/jack.h b/include/sound/jack.h
index f236e426a706..d90b9fa32707 100644
--- a/include/sound/jack.h
+++ b/include/sound/jack.h
@@ -42,6 +42,11 @@ enum snd_jack_types {
 	SND_JACK_MECHANICAL	= 0x0008, /* If detected separately */
 	SND_JACK_VIDEOOUT	= 0x0010,
 	SND_JACK_AVOUT		= SND_JACK_LINEOUT | SND_JACK_VIDEOOUT,
+
+	/* Kept separate from switches to facilitate implementation */
+	SND_JACK_BTN_0		= 0x4000,
+	SND_JACK_BTN_1		= 0x2000,
+	SND_JACK_BTN_2		= 0x1000,
 };
 
 struct snd_jack {
@@ -50,6 +55,7 @@ struct snd_jack {
 	int type;
 	const char *id;
 	char name[100];
+	unsigned int key[3];   /* Keep in sync with definitions above */
 	void *private_data;
 	void (*private_free)(struct snd_jack *);
 };
@@ -59,6 +65,8 @@ struct snd_jack {
 int snd_jack_new(struct snd_card *card, const char *id, int type,
 		 struct snd_jack **jack);
 void snd_jack_set_parent(struct snd_jack *jack, struct device *parent);
+int snd_jack_set_key(struct snd_jack *jack, enum snd_jack_types type,
+		     int keytype);
 
 void snd_jack_report(struct snd_jack *jack, int status);
 

commit 9d59065cd6fae841ca56c281189d5b8d0817d35f
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Apr 14 16:13:58 2009 +0200

    ALSA: add private_data to struct snd_jack
    
    Added private_data and private_free fields to struct snd_jack so that
    the caller can assign the data.  It'll be helpful for avoiding the
    double-free of the jack instance.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/include/sound/jack.h b/include/sound/jack.h
index 6b013c6f6a04..f236e426a706 100644
--- a/include/sound/jack.h
+++ b/include/sound/jack.h
@@ -50,6 +50,8 @@ struct snd_jack {
 	int type;
 	const char *id;
 	char name[100];
+	void *private_data;
+	void (*private_free)(struct snd_jack *);
 };
 
 #ifdef CONFIG_SND_JACK

commit d506fc322ec2af04fc47be83d796a1c9e1a16022
Author: Jani Nikula <ext-jani.1.nikula@nokia.com>
Date:   Wed Jan 7 11:54:25 2009 +0200

    ALSA: Add support for video out to the jack reporting API
    
    Add support for reporting new jack types SND_JACK_VIDEOOUT and
    SND_JACK_AVOUT (a combination of LINEOUT and VIDEOOUT) to the jack
    reporting API.
    
    Also add the corresponding SW_VIDEOOUT_INSERT switch to the input system
    header.
    
    Signed-off-by: Jani Nikula <ext-jani.1.nikula@nokia.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/jack.h b/include/sound/jack.h
index 85266a2f5c6f..6b013c6f6a04 100644
--- a/include/sound/jack.h
+++ b/include/sound/jack.h
@@ -40,6 +40,8 @@ enum snd_jack_types {
 	SND_JACK_HEADSET	= SND_JACK_HEADPHONE | SND_JACK_MICROPHONE,
 	SND_JACK_LINEOUT	= 0x0004,
 	SND_JACK_MECHANICAL	= 0x0008, /* If detected separately */
+	SND_JACK_VIDEOOUT	= 0x0010,
+	SND_JACK_AVOUT		= SND_JACK_LINEOUT | SND_JACK_VIDEOOUT,
 };
 
 struct snd_jack {

commit bd8a71a7b0f50da9350d202d325c3926ffd6b189
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Sat Jan 3 16:56:56 2009 +0000

    ALSA: Reduce boilerplate for new jack types
    
    Use a lookup table rather than explicit code to map input subsystem jack
    types into ASoC ones, implemented as suggested by Takashi Iwai.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/jack.h b/include/sound/jack.h
index 2e0315cdd0d6..85266a2f5c6f 100644
--- a/include/sound/jack.h
+++ b/include/sound/jack.h
@@ -30,6 +30,9 @@ struct input_dev;
 /**
  * Jack types which can be reported.  These values are used as a
  * bitmask.
+ *
+ * Note that this must be kept in sync with the lookup table in
+ * sound/core/jack.c.
  */
 enum snd_jack_types {
 	SND_JACK_HEADPHONE	= 0x0001,

commit cdc693643271b2e6a693cf8f6afb258cce01f058
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Wed Dec 10 13:55:49 2008 +0000

    ALSA: Add support for mechanical jack insertion
    
    Some systems support both mechanical and electrical jack detection,
    allowing them to report that a jack is physically present but does
    not have any functioning connections. Add a new jack type for these,
    allowing user space to report faulty connections.
    
    Thanks to Guillem Jover for the suggestion.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/include/sound/jack.h b/include/sound/jack.h
index 7cb25f4b50bb..2e0315cdd0d6 100644
--- a/include/sound/jack.h
+++ b/include/sound/jack.h
@@ -36,6 +36,7 @@ enum snd_jack_types {
 	SND_JACK_MICROPHONE	= 0x0002,
 	SND_JACK_HEADSET	= SND_JACK_HEADPHONE | SND_JACK_MICROPHONE,
 	SND_JACK_LINEOUT	= 0x0004,
+	SND_JACK_MECHANICAL	= 0x0008, /* If detected separately */
 };
 
 struct snd_jack {

commit a53ccab3ccac9e8676a683df9822a2daec83ef54
Author: Matthew Ranostay <mranostay@embeddedalley.com>
Date:   Sat Oct 25 01:05:04 2008 -0400

    ALSA: jack: lineout support to jack abstraction layer
    
    This patch introduces support for reporting SW_LINEOUT_INSERT detection events
    via the jack abstraction layer.
    
    Also adds a SND_JACK_LINEOUT define to the input system header.
    
    Signed-off-by: Matthew Ranostay <mranostay@embeddedalley.com>
    Cc: Dmitry Torokhov <dtor@mail.ru>
    Acked-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/include/sound/jack.h b/include/sound/jack.h
index b1b2b8b59adb..7cb25f4b50bb 100644
--- a/include/sound/jack.h
+++ b/include/sound/jack.h
@@ -35,6 +35,7 @@ enum snd_jack_types {
 	SND_JACK_HEADPHONE	= 0x0001,
 	SND_JACK_MICROPHONE	= 0x0002,
 	SND_JACK_HEADSET	= SND_JACK_HEADPHONE | SND_JACK_MICROPHONE,
+	SND_JACK_LINEOUT	= 0x0004,
 };
 
 struct snd_jack {

commit e76d8ceaaff9d7fc1ba2b1963a9f34151832223b
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon Jul 28 19:05:35 2008 +0100

    ALSA: Add jack reporting API
    
    Currently very few systems provide information about jack status to user
    space, even though many have hardware facilities to do detection. Those
    systems that do use an input device with the existing SW_HEADPHONE_INSERT
    switch type to do so, often independently of ALSA.
    
    This patch introduces a standard method for representing jacks to user
    space into ALSA. It allows drivers to register jacks for a sound card with
    the input subsystem, binding the input device to the card to help user
    space associate the input devices with their sound cards. The created
    input devices are named in the form "card longname jack" where jack is
    provided by the driver when allocating a jack. By default the parent for
    the input device is the sound card but this can be overridden by the
    card driver.
    
    The existing user space API with SW_HEADPHONE_INSERT is preserved.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Jaroslav Kysela <perex@perex.cz>

diff --git a/include/sound/jack.h b/include/sound/jack.h
new file mode 100644
index 000000000000..b1b2b8b59adb
--- /dev/null
+++ b/include/sound/jack.h
@@ -0,0 +1,75 @@
+#ifndef __SOUND_JACK_H
+#define __SOUND_JACK_H
+
+/*
+ *  Jack abstraction layer
+ *
+ *  Copyright 2008 Wolfson Microelectronics plc
+ *
+ *
+ *   This program is free software; you can redistribute it and/or modify
+ *   it under the terms of the GNU General Public License as published by
+ *   the Free Software Foundation; either version 2 of the License, or
+ *   (at your option) any later version.
+ *
+ *   This program is distributed in the hope that it will be useful,
+ *   but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *   GNU General Public License for more details.
+ *
+ *   You should have received a copy of the GNU General Public License
+ *   along with this program; if not, write to the Free Software
+ *   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
+ *
+ */
+
+#include <sound/core.h>
+
+struct input_dev;
+
+/**
+ * Jack types which can be reported.  These values are used as a
+ * bitmask.
+ */
+enum snd_jack_types {
+	SND_JACK_HEADPHONE	= 0x0001,
+	SND_JACK_MICROPHONE	= 0x0002,
+	SND_JACK_HEADSET	= SND_JACK_HEADPHONE | SND_JACK_MICROPHONE,
+};
+
+struct snd_jack {
+	struct input_dev *input_dev;
+	int registered;
+	int type;
+	const char *id;
+	char name[100];
+};
+
+#ifdef CONFIG_SND_JACK
+
+int snd_jack_new(struct snd_card *card, const char *id, int type,
+		 struct snd_jack **jack);
+void snd_jack_set_parent(struct snd_jack *jack, struct device *parent);
+
+void snd_jack_report(struct snd_jack *jack, int status);
+
+#else
+
+static inline int snd_jack_new(struct snd_card *card, const char *id, int type,
+			       struct snd_jack **jack)
+{
+	return 0;
+}
+
+static inline void snd_jack_set_parent(struct snd_jack *jack,
+				       struct device *parent)
+{
+}
+
+static inline void snd_jack_report(struct snd_jack *jack, int status)
+{
+}
+
+#endif
+
+#endif
