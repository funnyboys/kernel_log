commit d3bbc28bd3457d3629cf6b325478f7ec7e3da96c
Merge: 60379ba08532 fe0a53044b4b
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Jul 17 18:19:02 2020 +0200

    Merge tag 'asoc-fix-v5.8-rc5' of https://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound into for-linus
    
    ASoC: Fixes for v5.8
    
    An awful lot of mostly small fixes here, mainly for x86 based platforms
    and the CODEC drivers mainly used on them.  For the most part this is
    either minor device specific stuff which seems to come from detailed
    testing or robustness against errors which comes from people having done
    some fuzzing runs aginst the topology code.

commit 58f30150ffd6d95efa524ff05bbcee4e95bfa870
Author: Maxime Ripard <maxime@cerno.tech>
Date:   Tue Jul 7 09:42:37 2020 +0200

    ASoC: core: Remove only the registered component in devm functions
    
    The ASoC devm_ functions that register a component
    (devm_snd_soc_register_component and devm_snd_dmaengine_pcm_register) will
    clean their component by running snd_soc_unregister_component.
    
    snd_soc_unregister_component will then remove all the components for the
    device that was used to register the component in the first place.
    
    However, some drivers register several components (such as a DAI and a
    dmaengine PCM) on the same device, and if the dmaengine PCM is registered
    first, then the DAI will be cleaned up first and
    snd_dmaengine_pcm_unregister will be called next.
    
    snd_dmaengine_pcm_unregister will then lookup the dmaengine PCM component
    on the device, and if there's one unregister that component and release its
    dmaengine channels. That doesn't happen in practice though since the first
    call to snd_soc_unregister_component removed all the components, so we
    never get the chance to release the dmaengine channels.
    
    In order to fix this, instead of removing all the components for a given
    device, we can simply remove the component that was registered in the first
    place. We should have the same number of component registration than we
    have components, so it should work just fine.
    
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://lore.kernel.org/r/20200707074237.287171-1-maxime@cerno.tech
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index fddab504c227..9ad30135b537 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -444,6 +444,8 @@ int devm_snd_soc_register_component(struct device *dev,
 			 const struct snd_soc_component_driver *component_driver,
 			 struct snd_soc_dai_driver *dai_drv, int num_dai);
 void snd_soc_unregister_component(struct device *dev);
+void snd_soc_unregister_component_by_driver(struct device *dev,
+			 const struct snd_soc_component_driver *component_driver);
 struct snd_soc_component *snd_soc_lookup_component_nolocked(struct device *dev,
 							    const char *driver_name);
 struct snd_soc_component *snd_soc_lookup_component(struct device *dev,

commit 91ef3d9f9fef08e3f42b78ec0ae8187be1070fce
Merge: d50313a5a0d8 f141a422159a
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Jun 22 13:49:14 2020 +0200

    Merge tag 'asoc-fix-v5.8-rc2' of https://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound into for-linus
    
    ASoC: Fixes for v5.8
    
    This is a collection of mostly small fixes, mostly fixing fallout from
    some of the DPCM changes that went in last time around which shook out
    some issues on i.MX and Qualcomm platforms.  The addition of a managed
    version of snd_soc_register_dai() is to fix resource leaks.
    
    There's also a few new device IDs for x86 systems.

commit 0fae253af563cf5d1f5dc651d520c3eafd74f183
Author: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Date:   Fri Jun 12 15:59:37 2020 -0500

    ASoC: soc-devres: add devm_snd_soc_register_dai()
    
    The registration of DAIs may be done at two distinct times, once
    during a component registration and later when loading a
    topology. Since devm_ managed resources are freed in the reverse order
    they were allocated, when a component starts unregistering DAIs by
    walking through the DAI list, the memory allocated for the
    topology-registered DAIs was freed already, which leads to 100%
    reproducible KASAN use-after-free reports.
    
    This patch suggests a new devm_ function to force the DAI list to be
    updated prior to freeing the memory chunks referenced by the list
    pointers.
    
    Suggested-by: Bard Liao <yung-chuan.liao@linux.intel.com>
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Reviewed-by: Bard Liao <yung-chuan.liao@linux.intel.com>
    Reviewed-by: Kai Vehmanen <kai.vehmanen@linux.intel.com>
    BugLink: https://github.com/thesofproject/linux/issues/2186
    Link: https://lore.kernel.org/r/20200612205938.26415-2-pierre-louis.bossart@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 565612a8d690..fddab504c227 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1363,6 +1363,10 @@ void snd_soc_remove_pcm_runtime(struct snd_soc_card *card,
 struct snd_soc_dai *snd_soc_register_dai(struct snd_soc_component *component,
 					 struct snd_soc_dai_driver *dai_drv,
 					 bool legacy_dai_naming);
+struct snd_soc_dai *devm_snd_soc_register_dai(struct device *dev,
+					      struct snd_soc_component *component,
+					      struct snd_soc_dai_driver *dai_drv,
+					      bool legacy_dai_naming);
 void snd_soc_unregister_dai(struct snd_soc_dai *dai);
 
 struct snd_soc_dai *snd_soc_find_dai(

commit 6fbea6b6a838f9aa941fe53a3637fd8d8aab1eba
Author: Shengjiu Wang <shengjiu.wang@nxp.com>
Date:   Fri Jun 12 15:37:48 2020 +0800

    ASoC: soc-card: export snd_soc_lookup_component_nolocked
    
    snd_soc_lookup_component_nolocked can be used for the DPCM case
    that Front-End needs to get the unused platform component but
    added by Back-End cpu dai driver.
    
    If the component is gotten, then we can get the dma chan created
    by Back-End component and reused it in Front-End.
    
    Signed-off-by: Shengjiu Wang <shengjiu.wang@nxp.com>
    Reviewed-by: Nicolin Chen <nicoleotsuka@gmail.com>
    Link: https://lore.kernel.org/r/55f6e0d76f67a517b9a44136d790ff2a06b5caa8.1591947428.git.shengjiu.wang@nxp.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 74868436ac79..565612a8d690 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -444,6 +444,8 @@ int devm_snd_soc_register_component(struct device *dev,
 			 const struct snd_soc_component_driver *component_driver,
 			 struct snd_soc_dai_driver *dai_drv, int num_dai);
 void snd_soc_unregister_component(struct device *dev);
+struct snd_soc_component *snd_soc_lookup_component_nolocked(struct device *dev,
+							    const char *driver_name);
 struct snd_soc_component *snd_soc_lookup_component(struct device *dev,
 						   const char *driver_name);
 

commit 358c7c61fd04d324f83d7968daf8dd9a6ff86a9a
Merge: a72ff08faf3d a6b675a89e51
Author: Mark Brown <broonie@kernel.org>
Date:   Mon Jun 1 13:01:15 2020 +0100

    Merge remote-tracking branch 'asoc/for-5.8' into asoc-linus

commit 27f07cacc9f1ddf955b85e5746f967351ab0b40b
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Thu May 28 10:50:21 2020 +0900

    ASoC: soc-card: add probed bit field to snd_soc_card
    
    We already have bit field to control snd_soc_card.
    Let's add "probed" field on it instead of local variable.
    
    One note here is that soc_cleanup_card_resources()
    will be called as (A) formal cleanup or as (B) error handling,
    thus, it needs to distinguish these.
    
    In (A) case, card will have "instantiated" flag if all probe
    callback functions were called without error.
    Thus, snd_soc_unbind_card() is using it to judging card was probed.
    But this this patch removes it, because it is no longer needed.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Link: https://lore.kernel.org/r/87r1v4zv36.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 060c01c32547..74868436ac79 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1096,6 +1096,7 @@ struct snd_soc_card {
 	unsigned int topology_shortname_created:1;
 	unsigned int fully_routed:1;
 	unsigned int disable_route_checks:1;
+	unsigned int probed:1;
 
 	void *drvdata;
 };

commit bf5bb8db5bf07b0a82cdcdc44e4494e55aaa4ed7
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Thu May 28 10:48:28 2020 +0900

    ASoC: soc-card: move snd_soc_card_subclass to soc-card
    
    Card related function should be implemented at soc-card now.
    This patch moves it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Link: https://lore.kernel.org/r/874ks025jn.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 5c126ab0e32d..060c01c32547 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -414,11 +414,6 @@ enum snd_soc_pcm_subclass {
 	SND_SOC_PCM_CLASS_BE	= 1,
 };
 
-enum snd_soc_card_subclass {
-	SND_SOC_CARD_CLASS_INIT		= 0,
-	SND_SOC_CARD_CLASS_RUNTIME	= 1,
-};
-
 int snd_soc_register_card(struct snd_soc_card *card);
 int snd_soc_unregister_card(struct snd_soc_card *card);
 int devm_snd_soc_register_card(struct device *dev, struct snd_soc_card *card);

commit 65a75718d68ea338b918328d471eff6f472192fc
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Thu May 28 10:48:20 2020 +0900

    ASoC: soc-card: move snd_soc_card_get_codec_dai() to soc-card
    
    Card related function should be implemented at soc-card now.
    This patch moves it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Link: https://lore.kernel.org/r/875zcg25jv.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 3072298e756a..5c126ab0e32d 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1372,20 +1372,6 @@ struct snd_soc_dai *snd_soc_find_dai(
 
 #include <sound/soc-dai.h>
 
-static inline
-struct snd_soc_dai *snd_soc_card_get_codec_dai(struct snd_soc_card *card,
-					       const char *dai_name)
-{
-	struct snd_soc_pcm_runtime *rtd;
-
-	list_for_each_entry(rtd, &card->rtd_list, list) {
-		if (!strcmp(asoc_rtd_to_codec(rtd, 0)->name, dai_name))
-			return asoc_rtd_to_codec(rtd, 0);
-	}
-
-	return NULL;
-}
-
 static inline
 int snd_soc_fixup_dai_links_platform_name(struct snd_soc_card *card,
 					  const char *platform_name)

commit 63efed582cc346c098adf6f5c852e2d5b0753783
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Thu May 28 10:48:11 2020 +0900

    ASoC: soc-card: move snd_soc_card_set/get_drvdata() to soc-card
    
    Card related function should be implemented at soc-card now.
    This patch moves it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Link: https://lore.kernel.org/r/877dww25k4.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 38b21e815a28..3072298e756a 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1260,19 +1260,6 @@ struct soc_enum {
 #endif
 };
 
-/* device driver data */
-
-static inline void snd_soc_card_set_drvdata(struct snd_soc_card *card,
-		void *data)
-{
-	card->drvdata = data;
-}
-
-static inline void *snd_soc_card_get_drvdata(struct snd_soc_card *card)
-{
-	return card->drvdata;
-}
-
 static inline bool snd_soc_volsw_is_stereo(struct soc_mixer_control *mc)
 {
 	if (mc->reg == mc->rreg && mc->shift == mc->rshift)

commit 3359e9b6fa3eafeeb79d5f0ec8a04f3fe6986db1
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Thu May 28 10:48:03 2020 +0900

    ASoC: soc-card: move snd_soc_card_jack_new() to soc-card
    
    Card related function should be implemented at soc-card now.
    This patch moves it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Link: https://lore.kernel.org/r/878shc25kc.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index f93827c6be51..38b21e815a28 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -509,10 +509,6 @@ int snd_soc_set_runtime_hwparams(struct snd_pcm_substream *substream,
 	const struct snd_pcm_hardware *hw);
 
 /* Jack reporting */
-int snd_soc_card_jack_new(struct snd_soc_card *card, const char *id, int type,
-	struct snd_soc_jack *jack, struct snd_soc_jack_pin *pins,
-	unsigned int num_pins);
-
 void snd_soc_jack_report(struct snd_soc_jack *jack, int status, int mask);
 int snd_soc_jack_add_pins(struct snd_soc_jack *jack, int count,
 			  struct snd_soc_jack_pin *pins);

commit 209c6cdfd28360f030f88ae9adb69f633e6bcd2d
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Thu May 28 10:47:56 2020 +0900

    ASoC: soc-card: move snd_soc_card_get_kcontrol() to soc-card
    
    Card related function should be implemented at soc-card now.
    This patch moves it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Link: https://lore.kernel.org/r/87a71s25kj.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 5b880e29d106..f93827c6be51 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -582,8 +582,6 @@ static inline int snd_soc_set_ac97_ops(struct snd_ac97_bus_ops *ops)
 struct snd_kcontrol *snd_soc_cnew(const struct snd_kcontrol_new *_template,
 				  void *data, const char *long_name,
 				  const char *prefix);
-struct snd_kcontrol *snd_soc_card_get_kcontrol(struct snd_soc_card *soc_card,
-					       const char *name);
 int snd_soc_add_component_controls(struct snd_soc_component *component,
 	const struct snd_kcontrol_new *controls, unsigned int num_controls);
 int snd_soc_add_card_controls(struct snd_soc_card *soc_card,

commit 1793936bc9081d541da2ecd2af83eded7e6212a7
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Thu May 28 10:47:46 2020 +0900

    ASoC: add soc-card.c
    
    Current ALSA SoC has some snd_soc_card_xxx() functions,
    and card->xxx() callbacks.
    But, it is implemented randomly at random place.
    
    To collect all card related functions into one place,
    this patch creats new soc-card.c.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Link: https://lore.kernel.org/r/87blm825kt.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 11ee3ed87aa1..5b880e29d106 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1450,5 +1450,6 @@ static inline void snd_soc_dapm_mutex_unlock(struct snd_soc_dapm_context *dapm)
 }
 
 #include <sound/soc-component.h>
+#include <sound/soc-card.h>
 
 #endif

commit 317ec67593100f0ef0d017bcd73d42704d73fdb6
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Thu May 28 10:47:37 2020 +0900

    ASoC: soc.h: convert bool to bit field for snd_soc_card
    
    snd_soc_card has many bool, but it can be bit field.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Link: https://lore.kernel.org/r/87d06o25l2.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index a7fa64260108..11ee3ed87aa1 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -820,7 +820,7 @@ struct snd_soc_dai_link {
 	const struct snd_soc_compr_ops *compr_ops;
 
 	/* Mark this pcm with non atomic ops */
-	bool nonatomic;
+	unsigned int nonatomic:1;
 
 	/* For unidirectional dai links */
 	unsigned int playback_only:1;
@@ -1016,9 +1016,6 @@ struct snd_soc_card {
 
 	spinlock_t dpcm_lock;
 
-	bool instantiated;
-	bool topology_shortname_created;
-
 	int (*probe)(struct snd_soc_card *card);
 	int (*late_probe)(struct snd_soc_card *card);
 	int (*remove)(struct snd_soc_card *card);
@@ -1079,8 +1076,6 @@ struct snd_soc_card {
 	int num_of_dapm_widgets;
 	const struct snd_soc_dapm_route *of_dapm_routes;
 	int num_of_dapm_routes;
-	bool fully_routed;
-	bool disable_route_checks;
 
 	/* lists of probed devices belonging to this card */
 	struct list_head component_dev_list;
@@ -1107,6 +1102,12 @@ struct snd_soc_card {
 #endif
 	u32 pop_time;
 
+	/* bit field */
+	unsigned int instantiated:1;
+	unsigned int topology_shortname_created:1;
+	unsigned int fully_routed:1;
+	unsigned int disable_route_checks:1;
+
 	void *drvdata;
 };
 #define for_each_card_prelinks(card, i, link)				\

commit f4aa5e214eeaf7f1c7f157526a5aa29784cb6a1f
Author: Charles Keepax <ckeepax@opensource.cirrus.com>
Date:   Tue May 26 17:19:30 2020 +0100

    ASoC: dapm: Move dai_link widgets to runtime to fix use after free
    
    The newly added CODEC to CODEC DAI link widget pointers in
    snd_soc_dai_link are better placed in snd_soc_pcm_runtime.
    snd_soc_dai_link is really intended for static configuration of
    the DAI, and the runtime for dynamic data.  The snd_soc_dai_link
    structures are not destroyed if the card is unbound. The widgets
    are cleared up on unbind, however if the card is rebound as the
    snd_soc_dai_link structures are reused these pointers will be left at
    their old values, causing access to freed memory.
    
    Fixes: 595571cca4de ("ASoC: dapm: Fix regression introducing multiple copies of DAI widgets")
    Signed-off-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/20200526161930.30759-1-ckeepax@opensource.cirrus.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 946f88a6c63d..53e2062b9cef 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -790,9 +790,6 @@ struct snd_soc_dai_link {
 	const struct snd_soc_pcm_stream *params;
 	unsigned int num_params;
 
-	struct snd_soc_dapm_widget *playback_widget;
-	struct snd_soc_dapm_widget *capture_widget;
-
 	unsigned int dai_fmt;           /* format to set on init */
 
 	enum snd_soc_dpcm_trigger trigger[2]; /* trigger type for DPCM */
@@ -1156,6 +1153,9 @@ struct snd_soc_pcm_runtime {
 	struct snd_soc_dai **cpu_dais;
 	unsigned int num_cpus;
 
+	struct snd_soc_dapm_widget *playback_widget;
+	struct snd_soc_dapm_widget *capture_widget;
+
 	struct delayed_work delayed_work;
 	void (*close_delayed_work_func)(struct snd_soc_pcm_runtime *rtd);
 #ifdef CONFIG_DEBUG_FS

commit d9051d86ad30ca1ef1fc99e29854daeeb3944f8f
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri May 15 09:46:21 2020 +0900

    ASoC: soc-pcm: replace snd_soc_runtime_activate()/deactivate() to macro
    
    snd_soc_runtime_activate()/deactivate() are implemented by global function
    which are just calling snd_soc_runtime_action().
    We can replace it to macro, and this patch do it.
    This patch is prepare for xxx_active cleanup.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Link: https://lore.kernel.org/r/87blmq6n4y.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 69a82487fa9b..a7fa64260108 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -468,8 +468,19 @@ struct snd_soc_pcm_runtime *snd_soc_get_pcm_runtime(struct snd_soc_card *card,
 				struct snd_soc_dai_link *dai_link);
 
 bool snd_soc_runtime_ignore_pmdown_time(struct snd_soc_pcm_runtime *rtd);
-void snd_soc_runtime_activate(struct snd_soc_pcm_runtime *rtd, int stream);
-void snd_soc_runtime_deactivate(struct snd_soc_pcm_runtime *rtd, int stream);
+
+void snd_soc_runtime_action(struct snd_soc_pcm_runtime *rtd,
+			    int stream, int action);
+static inline void snd_soc_runtime_activate(struct snd_soc_pcm_runtime *rtd,
+				     int stream)
+{
+	snd_soc_runtime_action(rtd, stream, 1);
+}
+static inline void snd_soc_runtime_deactivate(struct snd_soc_pcm_runtime *rtd,
+				       int stream)
+{
+	snd_soc_runtime_action(rtd, stream, -1);
+}
 
 int snd_soc_runtime_calc_hw(struct snd_soc_pcm_runtime *rtd,
 			    struct snd_pcm_hardware *hw, int stream);

commit 2d6201ee1123325c089008570bd5ddea3c5b131a
Author: Gustavo A. R. Silva <gustavoars@kernel.org>
Date:   Thu May 7 14:22:28 2020 -0500

    ASoC: soc-core: Replace zero-length array with flexible-array
    
    The current codebase makes use of the zero-length array language
    extension to the C90 standard, but the preferred mechanism to declare
    variable-length types such as these ones is a flexible array member[1][2],
    introduced in C99:
    
    struct foo {
            int stuff;
            struct boo array[];
    };
    
    By making use of the mechanism above, we will get a compiler warning
    in case the flexible array does not occur last in the structure, which
    will help us prevent some kind of undefined behavior bugs from being
    inadvertently introduced[3] to the codebase from now on.
    
    Also, notice that, dynamic memory allocations won't be affected by
    this change:
    
    "Flexible array members have incomplete type, and so the sizeof operator
    may not be applied. As a quirk of the original implementation of
    zero-length arrays, sizeof evaluates to zero."[1]
    
    sizeof(flexible-array-member) triggers a warning because flexible array
    members have incomplete type[1]. There are some instances of code in
    which the sizeof operator is being incorrectly/erroneously applied to
    zero-length arrays and the result is zero. Such instances may be hiding
    some bugs. So, this work (flexible-array member conversions) will also
    help to get completely rid of those sorts of issues.
    
    This issue was found with the help of Coccinelle.
    
    [1] https://gcc.gnu.org/onlinedocs/gcc/Zero-Length.html
    [2] https://github.com/KSPP/linux/issues/21
    [3] commit 76497732932f ("cxgb3/l2t: Fix undefined behaviour")
    
    Signed-off-by: Gustavo A. R. Silva <gustavoars@kernel.org>
    Link: https://lore.kernel.org/r/20200507192228.GA16355@embeddedor
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 1288a87f9ccb..69a82487fa9b 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1172,7 +1172,7 @@ struct snd_soc_pcm_runtime {
 	unsigned int fe_compr:1; /* for Dynamic PCM */
 
 	int num_components;
-	struct snd_soc_component *components[0]; /* CPU/Codec/Platform */
+	struct snd_soc_component *components[]; /* CPU/Codec/Platform */
 };
 /* see soc_new_pcm_runtime()  */
 #define asoc_rtd_to_cpu(rtd, n)   (rtd)->dais[n]

commit be16a0f0dc8fab8e25d9cdbeb4f8f28afc9186d2
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Apr 28 23:47:31 2020 +0200

    ASoC: component: suppress uninitialized-variable warning
    
    Old versions of gcc (tested on gcc-4.8) produce a warning for
    correct code:
    
    sound/soc/soc-compress.c: In function 'soc_compr_open':
    sound/soc/soc-compress.c:75:28: error: 'component' is used uninitialized in this function [-Werror=uninitialized]
      struct snd_soc_component *component, *save = NULL;
    
    Change the for_each_rtd_components() macro to ensure 'component'
    gets initialized to a value the compiler does not complain about.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Link: https://lore.kernel.org/r/20200428214754.3925368-1-arnd@arndb.de
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 7411546dda9f..1288a87f9ccb 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1179,7 +1179,7 @@ struct snd_soc_pcm_runtime {
 #define asoc_rtd_to_codec(rtd, n) (rtd)->dais[n + (rtd)->num_cpus]
 
 #define for_each_rtd_components(rtd, i, component)			\
-	for ((i) = 0;							\
+	for ((i) = 0, component = NULL;					\
 	     ((i) < rtd->num_components) && ((component) = rtd->components[i]);\
 	     (i)++)
 #define for_each_rtd_cpu_dais(rtd, i, dai)				\

commit 4aa86e05be84b0692846799fce16c233a170c559
Author: Jason Yan <yanaijie@huawei.com>
Date:   Wed Apr 22 15:18:05 2020 +0800

    ASoC: soc-core: return true, false in snd_soc_volsw_is_stereo()
    
    Fix the following coccicheck warning:
    
    include/sound/soc.h:1271:9-10: WARNING: return of 0/1 in function
    'snd_soc_volsw_is_stereo' with return type bool
    
    Signed-off-by: Jason Yan <yanaijie@huawei.com>
    Link: https://lore.kernel.org/r/20200422071805.48793-1-yanaijie@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 8f542268a889..7411546dda9f 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1270,13 +1270,13 @@ static inline void *snd_soc_card_get_drvdata(struct snd_soc_card *card)
 static inline bool snd_soc_volsw_is_stereo(struct soc_mixer_control *mc)
 {
 	if (mc->reg == mc->rreg && mc->shift == mc->rshift)
-		return 0;
+		return false;
 	/*
 	 * mc->reg == mc->rreg && mc->shift != mc->rshift, or
 	 * mc->reg != mc->rreg means that the control is
 	 * stereo (bits in one register or in two registers)
 	 */
-	return 1;
+	return true;
 }
 
 static inline unsigned int snd_soc_enum_val_to_item(struct soc_enum *e,

commit 39400f34a289ad5f5f0b36b8bb4591603b73a759
Merge: 5c5118dc5d14 2a79c31a498e
Author: Mark Brown <broonie@kernel.org>
Date:   Tue Apr 14 18:04:08 2020 +0100

    Merge branch 'asoc-5.7' into asoc-5.8

commit 1729025b04b9f242dca37f50dba8dd3705eb1ea1
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Mar 30 10:48:27 2020 +0900

    ASoC: soc-core: remove cpu_dai/codec_dai/cpu_dais/codec_dais
    
    No-one is using cpu_dai/codec_dai/cpu_dais/codec_dais.
    Let's remove these from snd_soc_pcm_runtime
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Tested-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/87eetabok4.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 4dff6745b067..a904086b8ef6 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1143,14 +1143,16 @@ struct snd_soc_pcm_runtime {
 	/* runtime devices */
 	struct snd_pcm *pcm;
 	struct snd_compr *compr;
-	struct snd_soc_dai *codec_dai;
-	struct snd_soc_dai *cpu_dai;
-	struct snd_soc_dai **dais;
 
-	struct snd_soc_dai **codec_dais;
+	/*
+	 * dais = cpu_dai + codec_dai
+	 * see
+	 *	soc_new_pcm_runtime()
+	 *	asoc_rtd_to_cpu()
+	 *	asoc_rtd_to_codec()
+	 */
+	struct snd_soc_dai **dais;
 	unsigned int num_codecs;
-
-	struct snd_soc_dai **cpu_dais;
 	unsigned int num_cpus;
 
 	struct delayed_work delayed_work;

commit c2233a266178f8937cc26a84cd7672334b5424b7
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Mar 30 10:47:37 2020 +0900

    ASoC: soc: use asoc_rtd_to_cpu() / asoc_rtd_to_codec() macro for DAI pointer
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Tested-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/87imimboli.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 13458e4fbb13..4dff6745b067 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1179,16 +1179,16 @@ struct snd_soc_pcm_runtime {
 	     (i)++)
 #define for_each_rtd_cpu_dais(rtd, i, dai)				\
 	for ((i) = 0;							\
-	     ((i) < rtd->num_cpus) && ((dai) = rtd->cpu_dais[i]);	\
+	     ((i) < rtd->num_cpus) && ((dai) = asoc_rtd_to_cpu(rtd, i)); \
 	     (i)++)
 #define for_each_rtd_cpu_dais_rollback(rtd, i, dai)		\
-	for (; (--(i) >= 0) && ((dai) = rtd->cpu_dais[i]);)
+	for (; (--(i) >= 0) && ((dai) = asoc_rtd_to_cpu(rtd, i));)
 #define for_each_rtd_codec_dais(rtd, i, dai)				\
 	for ((i) = 0;							\
-	     ((i) < rtd->num_codecs) && ((dai) = rtd->codec_dais[i]);	\
+	     ((i) < rtd->num_codecs) && ((dai) = asoc_rtd_to_codec(rtd, i)); \
 	     (i)++)
 #define for_each_rtd_codec_dais_rollback(rtd, i, dai)		\
-	for (; (--(i) >= 0) && ((dai) = rtd->codec_dais[i]);)
+	for (; (--(i) >= 0) && ((dai) = asoc_rtd_to_codec(rtd, i));)
 #define for_each_rtd_dais(rtd, i, dai)					\
 	for ((i) = 0;							\
 	     ((i) < (rtd)->num_cpus + (rtd)->num_codecs) &&		\
@@ -1381,8 +1381,8 @@ struct snd_soc_dai *snd_soc_card_get_codec_dai(struct snd_soc_card *card,
 	struct snd_soc_pcm_runtime *rtd;
 
 	list_for_each_entry(rtd, &card->rtd_list, list) {
-		if (!strcmp(rtd->codec_dai->name, dai_name))
-			return rtd->codec_dai;
+		if (!strcmp(asoc_rtd_to_codec(rtd, 0)->name, dai_name))
+			return asoc_rtd_to_codec(rtd, 0);
 	}
 
 	return NULL;

commit 595571cca4dec8ac48122a6d2733f790c9a2cade
Author: Charles Keepax <ckeepax@opensource.cirrus.com>
Date:   Thu Apr 9 19:12:07 2020 +0100

    ASoC: dapm: Fix regression introducing multiple copies of DAI widgets
    
    Refactoring was done to factor out the linking of DAI widgets into
    a helper function, dapm_add_valid_dai_widget. However when this was
    done, a regression was introduced for CODEC to CODEC links. It was
    over looked that the playback and capture variables persisted across
    all CODEC DAIs being processed, which ensured that the special DAI
    widget that is added for CODEC to CODEC links was only created once.
    This bug causes kernel panics during DAPM shutdown.
    
    To stick with the spirit of the original refactoring whilst fixing the
    issue, variables to hold the DAI widgets are added to snd_soc_dai_link.
    Furthermore the dapm_add_valid_dai_widget function is renamed to
    dapm_connect_dai_pair, the function only adds DAI widgets in the CODEC
    to CODEC case and its primary job is to add routes connecting two DAI
    widgets, making the original name quite misleading.
    
    Fixes: 6c4b13b51aa3 ("ASoC: Add dapm_add_valid_dai_widget helper")
    Signed-off-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/20200409181209.30130-1-ckeepax@opensource.cirrus.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 13458e4fbb13..946f88a6c63d 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -790,6 +790,9 @@ struct snd_soc_dai_link {
 	const struct snd_soc_pcm_stream *params;
 	unsigned int num_params;
 
+	struct snd_soc_dapm_widget *playback_widget;
+	struct snd_soc_dapm_widget *capture_widget;
+
 	unsigned int dai_fmt;           /* format to set on init */
 
 	enum snd_soc_dpcm_trigger trigger[2]; /* trigger type for DPCM */

commit 2af69581e1b11152bc42f1122d3c16e177bd77cf
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Mar 23 14:16:57 2020 +0900

    ASoC: soc-core: add asoc_rtd_to_cpu/codec() macro
    
    Now, snd_soc_pcm_runtime supports multi cpu_dai/codec_dai.
    It still has cpu_dai/codec_dai for single DAI,
    and has cpu_dais/codec_dais for multi DAIs.
    
            dais  = [][][][][][][][][][][][][][][][][][]
                    ^cpu_dais         ^codec_dais
                    |--- num_cpus ---|--- num_codecs --|
    
            /* for multi DAIs */
            rtd->cpu_dais   = &rtd->dais[0];
            rtd->codec_dais = &rtd->dais[dai_link->num_cpus];
    
            /* for single DAI */
            rtd->cpu_dai    = rtd->cpu_dais[0];
            rtd->codec_dai  = rtd->codec_dais[0];
    
    But, these can be replaced by dais.
    This patch adds asoc_rtd_to_cpu() / asoc_rtd_to_codec() macro for it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Tested-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/875zevk5va.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 539211bd0f94..13458e4fbb13 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1169,6 +1169,10 @@ struct snd_soc_pcm_runtime {
 	int num_components;
 	struct snd_soc_component *components[0]; /* CPU/Codec/Platform */
 };
+/* see soc_new_pcm_runtime()  */
+#define asoc_rtd_to_cpu(rtd, n)   (rtd)->dais[n]
+#define asoc_rtd_to_codec(rtd, n) (rtd)->dais[n + (rtd)->num_cpus]
+
 #define for_each_rtd_components(rtd, i, component)			\
 	for ((i) = 0;							\
 	     ((i) < rtd->num_components) && ((component) = rtd->components[i]);\

commit 22a2fc81658b3eebcfcc110de97bcbd32f5ee301
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Mar 16 15:36:58 2020 +0900

    ASoC: soc-core: Merge CPU/Codec DAIs
    
    ALSA SoC is currently categorizing CPU/Codec DAIs,
    and it works well.
    
    But modern devices require more complex connections,
    for example Codec to Codec, etc, and future devices will
    enable to more complex connections.
    Because of these background, CPU/Codec DAIs categorizing is
    no longer good much to modern device.
    
    Currently, rtd has both CPU/Codec DAIs pointer.
    
            rtd->cpu_dais   = [][][][][][][][][]
            rtd->codec_dais = [][][][][][][][][]
    
    This patch merges these into DAIs pointer.
    
            rtd->dais = [][][][][][][][][][][][][][][][][][]
                        ^cpu_dais         ^codec_dais
                        |--- num_cpus ---|--- num_codecs --|
    
    Then, we can merge for_each_rtd_cpu/codec_dais() from this patch.
    
    -       for_each_rtd_cpu_dais() {
    -               ...
    -       }
    -       for_each_rtd_codec_dais() {
    -               ...
    -       }
    +       for_each_rtd_dais() {
    +               ...
    +       }
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/87wo7kolfa.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index d97c4aa779a2..539211bd0f94 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1145,6 +1145,7 @@ struct snd_soc_pcm_runtime {
 	struct snd_compr *compr;
 	struct snd_soc_dai *codec_dai;
 	struct snd_soc_dai *cpu_dai;
+	struct snd_soc_dai **dais;
 
 	struct snd_soc_dai **codec_dais;
 	unsigned int num_codecs;
@@ -1184,7 +1185,11 @@ struct snd_soc_pcm_runtime {
 	     (i)++)
 #define for_each_rtd_codec_dais_rollback(rtd, i, dai)		\
 	for (; (--(i) >= 0) && ((dai) = rtd->codec_dais[i]);)
-
+#define for_each_rtd_dais(rtd, i, dai)					\
+	for ((i) = 0;							\
+	     ((i) < (rtd)->num_cpus + (rtd)->num_codecs) &&		\
+		     ((dai) = (rtd)->dais[i]);				\
+	     (i)++)
 
 void snd_soc_close_delayed_work(struct snd_soc_pcm_runtime *rtd);
 

commit 673f45f7bf7dbb6801a04053e3e2d13dfa42db08
Merge: bd2b34e485f2 1a0f2433d738
Author: Mark Brown <broonie@kernel.org>
Date:   Fri Mar 13 18:52:23 2020 +0000

    Merge branch 'for-5.6' of https://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound into asoc-5.7

commit 14596692631eadbefba8419698cccfc23bfccd2b
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Mar 9 13:08:21 2020 +0900

    ASoC: soc-dapm: add for_each_card_widgets() macro
    
    To be more readable code, this patch adds
    new for_each_card_widgets() macro, and replace existing code to it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/87r1y2goga.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 3aee33c8249e..03054bf9cd37 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1120,6 +1120,11 @@ struct snd_soc_card {
 #define for_each_card_dapms(card, dapm)					\
 	list_for_each_entry(dapm, &card->dapm_list, list)
 
+#define for_each_card_widgets(card, w)\
+	list_for_each_entry(w, &card->widgets, list)
+#define for_each_card_widgets_safe(card, w, _w)	\
+	list_for_each_entry_safe(w, _w, &card->widgets, list)
+
 /* SoC machine DAI configuration, glues a codec and cpu DAI together */
 struct snd_soc_pcm_runtime {
 	struct device *dev;

commit df817f8e71e3a0256bd3d2d3a4e5399b409698f4
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Mar 9 13:08:16 2020 +0900

    ASoC: soc-dapm: add for_each_card_dapms() macro
    
    To be more readable code, this patch adds
    new for_each_card_dapms() macro, and replace existing code to it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/87sgiigogf.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 5e1b4ef1543c..3aee33c8249e 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1117,6 +1117,9 @@ struct snd_soc_card {
 #define for_each_card_components(card, component)			\
 	list_for_each_entry(component, &(card)->component_dev_list, card_list)
 
+#define for_each_card_dapms(card, dapm)					\
+	list_for_each_entry(dapm, &card->dapm_list, list)
+
 /* SoC machine DAI configuration, glues a codec and cpu DAI together */
 struct snd_soc_pcm_runtime {
 	struct device *dev;

commit 17e6dab5013ddb36997011cf6daea7297dfc215e
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Mar 9 13:08:10 2020 +0900

    ASoC: soc.h: remove non plural form for_each_xxx macro
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/87tv2ygogl.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 09bc45b8bf00..5e1b4ef1543c 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1163,20 +1163,6 @@ struct snd_soc_pcm_runtime {
 	for ((i) = 0;							\
 	     ((i) < rtd->num_components) && ((component) = rtd->components[i]);\
 	     (i)++)
-#define for_each_rtd_codec_dai(rtd, i, dai)\
-	for ((i) = 0;						       \
-	     ((i) < rtd->num_codecs) && ((dai) = rtd->codec_dais[i]); \
-	     (i)++)
-#define for_each_rtd_codec_dai_rollback(rtd, i, dai)		\
-	for (; (--(i) >= 0) && ((dai) = rtd->codec_dais[i]);)
-
-#define for_each_rtd_cpu_dai(rtd, i, dai)\
-	for ((i) = 0;						       \
-	     ((i) < rtd->num_cpus) && ((dai) = rtd->cpu_dais[i]); \
-	     (i)++)
-#define for_each_rtd_cpu_dai_rollback(rtd, i, dai)		\
-	for (; (--(i) >= 0) && ((dai) = rtd->cpu_dais[i]);)
-
 #define for_each_rtd_cpu_dais(rtd, i, dai)				\
 	for ((i) = 0;							\
 	     ((i) < rtd->num_cpus) && ((dai) = rtd->cpu_dais[i]);	\

commit 995cbc3ca1ab39fb5cf254181dcfba883c5d6d69
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Mar 9 13:07:29 2020 +0900

    ASoC: soc.h: add for_each_rtd_codecs/cpus_dai() macro
    
    We are using plural form for for_each_xxx() macro.
    But, for_each_rtd_codec/cpu_dai() are out of this rule.
    This patch adds plural form macro.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/8736aii326.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 9543d9246ca4..09bc45b8bf00 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1177,6 +1177,20 @@ struct snd_soc_pcm_runtime {
 #define for_each_rtd_cpu_dai_rollback(rtd, i, dai)		\
 	for (; (--(i) >= 0) && ((dai) = rtd->cpu_dais[i]);)
 
+#define for_each_rtd_cpu_dais(rtd, i, dai)				\
+	for ((i) = 0;							\
+	     ((i) < rtd->num_cpus) && ((dai) = rtd->cpu_dais[i]);	\
+	     (i)++)
+#define for_each_rtd_cpu_dais_rollback(rtd, i, dai)		\
+	for (; (--(i) >= 0) && ((dai) = rtd->cpu_dais[i]);)
+#define for_each_rtd_codec_dais(rtd, i, dai)				\
+	for ((i) = 0;							\
+	     ((i) < rtd->num_codecs) && ((dai) = rtd->codec_dais[i]);	\
+	     (i)++)
+#define for_each_rtd_codec_dais_rollback(rtd, i, dai)		\
+	for (; (--(i) >= 0) && ((dai) = rtd->codec_dais[i]);)
+
+
 void snd_soc_close_delayed_work(struct snd_soc_pcm_runtime *rtd);
 
 /* mixer control */

commit a22ae72b86a4f754e8d25fbf9ea5a8f77365e531
Author: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Date:   Mon Mar 9 14:27:43 2020 -0500

    ASoC: soc-core: disable route checks for legacy devices
    
    v5.4 changes in soc-core tightened the checks on soc_dapm_add_routes,
    which results in the ASoC card probe failing.
    
    Introduce a flag to be set in machine drivers to prevent the probe
    from stopping in case of incomplete topologies or missing routes. This
    flag is for backwards compatibility only and shall not be used for
    newer machine drivers.
    
    Example with an HDaudio card with a bad topology:
    
    [ 236.177898] skl_hda_dsp_generic skl_hda_dsp_generic: ASoC: Failed to
    add route iDisp1_out -> direct -> iDisp1 Tx
    
    [ 236.177902] skl_hda_dsp_generic skl_hda_dsp_generic:
    snd_soc_bind_card: snd_soc_dapm_add_routes failed: -19
    
    with the disable_route_checks set:
    
    [ 64.031657] skl_hda_dsp_generic skl_hda_dsp_generic: ASoC: Failed to
    add route iDisp1_out -> direct -> iDisp1 Tx
    
    [ 64.031661] skl_hda_dsp_generic skl_hda_dsp_generic:
    snd_soc_bind_card: disable_route_checks set, ignoring errors on
    add_routes
    
    Fixes: daa480bde6b3a9 ("ASoC: soc-core: tidyup for snd_soc_dapm_add_routes()")
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Acked-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/20200309192744.18380-2-pierre-louis.bossart@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 8a2266676b2d..efb8bad7b0fa 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1058,6 +1058,7 @@ struct snd_soc_card {
 	const struct snd_soc_dapm_route *of_dapm_routes;
 	int num_of_dapm_routes;
 	bool fully_routed;
+	bool disable_route_checks;
 
 	/* lists of probed devices belonging to this card */
 	struct list_head component_dev_list;

commit 5854a46486ad5b8d73766735fb0d77f05956b22c
Author: Samuel Holland <samuel@sholland.org>
Date:   Wed Mar 4 23:11:42 2020 -0600

    ASoC: pcm: Export parameter intersection logic
    
    The logic to calculate the subset of stream parameters supported by all
    DAIs associated with a PCM stream is nontrivial. Export a helper
    function so it can be used to set up simple codec2codec DAI links.
    
    Signed-off-by: Samuel Holland <samuel@sholland.org>
    Link: https://lore.kernel.org/r/20200305051143.60691-3-samuel@sholland.org
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 81e5d17be935..9543d9246ca4 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -471,6 +471,9 @@ bool snd_soc_runtime_ignore_pmdown_time(struct snd_soc_pcm_runtime *rtd);
 void snd_soc_runtime_activate(struct snd_soc_pcm_runtime *rtd, int stream);
 void snd_soc_runtime_deactivate(struct snd_soc_pcm_runtime *rtd, int stream);
 
+int snd_soc_runtime_calc_hw(struct snd_soc_pcm_runtime *rtd,
+			    struct snd_pcm_hardware *hw, int stream);
+
 int snd_soc_runtime_set_dai_fmt(struct snd_soc_pcm_runtime *rtd,
 	unsigned int dai_fmt);
 

commit 76afa64374a79c22b2dab61aebef99a967783bf0
Author: Shreyas NC <shreyas.nc@intel.com>
Date:   Tue Feb 25 21:39:12 2020 +0800

    ASoC: Add initial support for multiple CPU DAIs
    
    ASoC core supports multiple codec DAIs but supports only a CPU DAI.
    To support multiple cpu DAIs, add cpu_dai and num_cpu_dai in
    snd_soc_dai_link and snd_soc_pcm_runtime structures similar to
    support for codec_dai. This is intended as a preparatory patch to
    eventually support the unification of the Codec and CPU DAI.
    
    Inline with multiple codec DAI approach, add support to allocate,
    init, bind and probe multiple cpu_dai on init if driver specifies
    that. Also add support to loop over multiple cpu_dai during
    suspend and resume.
    
    This is intended as a preparatory patch to eventually unify the CPU
    and Codec DAI into DAI components.
    
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Signed-off-by: Bard Liao <yung-chuan.liao@linux.intel.com>
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Shreyas NC <shreyas.nc@intel.com>
    Link: https://lore.kernel.org/r/20200225133917.21314-2-yung-chuan.liao@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 8a2266676b2d..81e5d17be935 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -855,6 +855,11 @@ struct snd_soc_dai_link {
 	     ((platform) = &link->platforms[i]);			\
 	     (i)++)
 
+#define for_each_link_cpus(link, i, cpu)				\
+	for ((i) = 0;							\
+	     ((i) < link->num_cpus) && ((cpu) = &link->cpus[i]);	\
+	     (i)++)
+
 /*
  * Sample 1 : Single CPU/Codec/Platform
  *
@@ -1132,6 +1137,9 @@ struct snd_soc_pcm_runtime {
 	struct snd_soc_dai **codec_dais;
 	unsigned int num_codecs;
 
+	struct snd_soc_dai **cpu_dais;
+	unsigned int num_cpus;
+
 	struct delayed_work delayed_work;
 	void (*close_delayed_work_func)(struct snd_soc_pcm_runtime *rtd);
 #ifdef CONFIG_DEBUG_FS
@@ -1159,6 +1167,13 @@ struct snd_soc_pcm_runtime {
 #define for_each_rtd_codec_dai_rollback(rtd, i, dai)		\
 	for (; (--(i) >= 0) && ((dai) = rtd->codec_dais[i]);)
 
+#define for_each_rtd_cpu_dai(rtd, i, dai)\
+	for ((i) = 0;						       \
+	     ((i) < rtd->num_cpus) && ((dai) = rtd->cpu_dais[i]); \
+	     (i)++)
+#define for_each_rtd_cpu_dai_rollback(rtd, i, dai)		\
+	for (; (--(i) >= 0) && ((dai) = rtd->cpu_dais[i]);)
+
 void snd_soc_close_delayed_work(struct snd_soc_pcm_runtime *rtd);
 
 /* mixer control */

commit 63d68382f5fb5f71772357e31841c19c4a133182
Author: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Date:   Wed Feb 19 16:21:30 2020 -0600

    ASoC: soc-core: fix for_rtd_codec_dai_rollback() macro
    
    The use of parentheses to protect the argument is fine for (i)++ but
    not for (--i).
    
    Fixes: 83f94a2e293d61 ("ASoC: soc-core: add snd_soc_close_delayed_work()")
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Acked-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Cc: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/20200219222130.29933-1-pierre-louis.bossart@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index f0e4f36f83bf..8a2266676b2d 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1157,7 +1157,7 @@ struct snd_soc_pcm_runtime {
 	     ((i) < rtd->num_codecs) && ((dai) = rtd->codec_dais[i]); \
 	     (i)++)
 #define for_each_rtd_codec_dai_rollback(rtd, i, dai)		\
-	for (; ((--i) >= 0) && ((dai) = rtd->codec_dais[i]);)
+	for (; (--(i) >= 0) && ((dai) = rtd->codec_dais[i]);)
 
 void snd_soc_close_delayed_work(struct snd_soc_pcm_runtime *rtd);
 

commit 83f94a2e293d617a98e077680ea00b2830a9ca22
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Jan 10 11:36:17 2020 +0900

    ASoC: soc-core: add snd_soc_close_delayed_work()
    
    We need to setup rtd->close_delayed_work_func.
    It will be set at snd_soc_dai_compress_new() or soc_new_pcm().
    But these setups close_delayed_work() which is same name /
    same implemantaion, but different local code.
    To reduce duplicate code, this patch moves it as
    snd_soc_close_delayed_work() and share same code.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-By: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Link: https://lore.kernel.org/r/8736cot4v2.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 0513f30a0209..f0e4f36f83bf 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1159,6 +1159,7 @@ struct snd_soc_pcm_runtime {
 #define for_each_rtd_codec_dai_rollback(rtd, i, dai)		\
 	for (; ((--i) >= 0) && ((dai) = rtd->codec_dais[i]);)
 
+void snd_soc_close_delayed_work(struct snd_soc_pcm_runtime *rtd);
 
 /* mixer control */
 struct soc_mixer_control {

commit 613fb50059cf19aa6acbc503a00265d9151c0b09
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Jan 10 11:35:21 2020 +0900

    ASoC: soc-core: remove snd_soc_rtdcom_list
    
    Current ALSA SoC is using struct snd_soc_rtdcom_list to
    connecting component to rtd by using list_head.
    
            struct snd_soc_rtdcom_list {
                    struct snd_soc_component *component;
                    struct list_head list; /* rtd::component_list */
            };
    
            struct snd_soc_pcm_runtime {
                    ...
                    struct list_head component_list; /* list of connected components */
                    ...
            };
    
    The CPU/Codec/Platform component which will be connected to rtd (a)
    is indicated via dai_link at snd_soc_add_pcm_runtime()
    
            int snd_soc_add_pcm_runtime(...)
            {
                    ...
                    /* Find CPU from registered CPUs */
                    rtd->cpu_dai = snd_soc_find_dai(dai_link->cpus);
                    ...
    (a)             snd_soc_rtdcom_add(rtd, rtd->cpu_dai->component);
                    ...
    
                    /* Find CODEC from registered CODECs */
    (b)             for_each_link_codecs(dai_link, i, codec) {
                            rtd->codec_dais[i] = snd_soc_find_dai(codec);
                            ...
    (a)                     snd_soc_rtdcom_add(rtd, rtd->codec_dais[i]->component);
                    }
                    ...
    
                    /* Find PLATFORM from registered PLATFORMs */
    (b)             for_each_link_platforms(dai_link, i, platform) {
                            for_each_component(component) {
                                    ...
    (a)                             snd_soc_rtdcom_add(rtd, component);
                            }
                    }
    
            }
    
    It shows, it is possible to know how many components will be
    connected to rtd by using
    
            dai_link->num_cpus
            dai_link->num_codecs
            dai_link->num_platforms
    
    If so, we can use component pointer array instead of list_head,
    in such case, code can be more simple.
    This patch removes struct snd_soc_rtdcom_list that is only
    of temporary value, and convert to pointer array.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-By: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Link: https://lore.kernel.org/r/87a76wt4wm.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 9787c80e548b..0513f30a0209 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -736,19 +736,9 @@ struct snd_soc_compr_ops {
 	int (*trigger)(struct snd_compr_stream *);
 };
 
-struct snd_soc_rtdcom_list {
-	struct snd_soc_component *component;
-	struct list_head list; /* rtd::component_list */
-};
 struct snd_soc_component*
 snd_soc_rtdcom_lookup(struct snd_soc_pcm_runtime *rtd,
 		       const char *driver_name);
-#define for_each_rtd_components(rtd, rtdcom, _component)		\
-	for (rtdcom = list_first_entry(&(rtd)->component_list,		\
-				       typeof(*rtdcom), list);		\
-	     (&rtdcom->list != &(rtd)->component_list) &&		\
-		     (_component = rtdcom->component);			\
-	     rtdcom = list_next_entry(rtdcom, list))
 
 struct snd_soc_dai_link_component {
 	const char *name;
@@ -1150,12 +1140,18 @@ struct snd_soc_pcm_runtime {
 
 	unsigned int num; /* 0-based and monotonic increasing */
 	struct list_head list; /* rtd list of the soc card */
-	struct list_head component_list; /* list of connected components */
 
 	/* bit field */
 	unsigned int pop_wait:1;
 	unsigned int fe_compr:1; /* for Dynamic PCM */
+
+	int num_components;
+	struct snd_soc_component *components[0]; /* CPU/Codec/Platform */
 };
+#define for_each_rtd_components(rtd, i, component)			\
+	for ((i) = 0;							\
+	     ((i) < rtd->num_components) && ((component) = rtd->components[i]);\
+	     (i)++)
 #define for_each_rtd_codec_dai(rtd, i, dai)\
 	for ((i) = 0;						       \
 	     ((i) < rtd->num_codecs) && ((dai) = rtd->codec_dais[i]); \

commit ee8f537fd8b71c555d01a89e0834413bbf5373d4
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Dec 13 09:55:55 2019 +0900

    ASoC: soc-core: remove legacy style of codec_conf
    
    Now all driver is using snd_soc_dai_link_component for codec_conf.
    Let's remove legacy style
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/871rt959ic.wl-kuninori.morimoto.gx@renesas.com
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index a94e5d2fc2b2..9787c80e548b 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -960,9 +960,6 @@ struct snd_soc_codec_conf {
 	 * specify device either by device name, or by
 	 * DT/OF node, but not both.
 	 */
-	const char *dev_name;
-	struct device_node *of_node;
-
 	struct snd_soc_dai_link_component dlc;
 
 	/*

commit c13493a2460b7ba8f6e75fe6e1a3b732cc294f8f
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Dec 13 09:54:36 2019 +0900

    ASoC: soc-core: support snd_soc_dai_link_component for codec_conf
    
    To find codec_conf component, it is using dev_name, of_node.
    But, we already has this kind of finding component method by
    snd_soc_dai_link_component, and snd_soc_is_matching_component().
    We shouldn't have duplicate implementation to do same things.
    This patch adds snd_soc_dai_link_component support to find
    codec_conf component.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/87lfrh59kj.wl-kuninori.morimoto.gx@renesas.com
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 82e65235c60d..a94e5d2fc2b2 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -949,6 +949,7 @@ struct snd_soc_dai_link {
 #define COMP_CODEC(_name, _dai)		{ .name = _name, .dai_name = _dai, }
 #define COMP_PLATFORM(_name)		{ .name = _name }
 #define COMP_AUX(_name)			{ .name = _name }
+#define COMP_CODEC_CONF(_name)		{ .name = _name }
 #define COMP_DUMMY()			{ .name = "snd-soc-dummy", .dai_name = "snd-soc-dummy-dai", }
 
 extern struct snd_soc_dai_link_component null_dailink_component[0];
@@ -962,6 +963,8 @@ struct snd_soc_codec_conf {
 	const char *dev_name;
 	struct device_node *of_node;
 
+	struct snd_soc_dai_link_component dlc;
+
 	/*
 	 * optional map of kcontrol, widget and path name prefixes that are
 	 * associated per device

commit 01fec8cce7cc68bb88b1ff55bc03da5f3e6625e3
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Dec 10 15:54:06 2019 +0100

    ASoC: Drop snd_soc_pcm_lib_ioctl()
    
    Now all snd_soc_pcm_lib_ioctl() calls were dropped, and it became
    superfluous.  Let's kill it.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Link: https://lore.kernel.org/r/20191210145406.21419-24-tiwai@suse.de
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index a6a3a7d54c70..82e65235c60d 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1399,11 +1399,6 @@ static inline void snd_soc_dapm_mutex_unlock(struct snd_soc_dapm_context *dapm)
 	mutex_unlock(&dapm->card->dapm_mutex);
 }
 
-/* bypass */
-int snd_soc_pcm_lib_ioctl(struct snd_soc_component *component,
-			  struct snd_pcm_substream *substream,
-			  unsigned int cmd, void *arg);
-
 #include <sound/soc-component.h>
 
 #endif

commit 8a6a6a38f86885982891197840e7b8eccad5ef50
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Wed Dec 11 13:32:05 2019 +0900

    ASoC: soc-core: tidyup for CONFIG_DMI
    
    soc-core.c has 2 #ifdef CONFIG_DMI, but we can merge these.
    OTOH, soc.h has dmi_longname, but it is needed if CONFIG_DMI was defined.
    In other words, It is not needed if CONFIG_DMI was not defined.
    This patch tidyup these.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/87eexbbhyy.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index c920f17a5647..a6a3a7d54c70 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -986,7 +986,9 @@ struct snd_soc_card {
 	const char *long_name;
 	const char *driver_name;
 	const char *components;
+#ifdef CONFIG_DMI
 	char dmi_longname[80];
+#endif /* CONFIG_DMI */
 	char topology_shortname[32];
 
 	struct device *dev;

commit 2acf6ce2c25fb71a56ad35fcb9a63c19b20a4f4e
Merge: 2aae447a4c10 4e64ba3fd181
Author: Mark Brown <broonie@kernel.org>
Date:   Tue Dec 10 13:27:14 2019 +0000

    Merge branch 'for-5.5' of https://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound into asoc-5.6

commit 50cd9b5317d5593d0a33f4227f56ddcc1bf66604
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Dec 10 09:34:23 2019 +0900

    ASoC: soc-core: rename snd_soc_remove_dai_link() to snd_soc_remove_pcm_runtime()
    
    Now soc-core and soc-topology is using snd_soc_remove_dai_link().
    It removes pcm_runtime (= rtd) and disconnect it from card.
    The purpose is removing pcm_runtime, not dai_link.
    This patch renames function name.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/875zipyq5s.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index b223b2d39950..3923178ad050 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1325,8 +1325,8 @@ void snd_soc_of_put_dai_link_codecs(struct snd_soc_dai_link *dai_link);
 
 int snd_soc_add_pcm_runtime(struct snd_soc_card *card,
 			    struct snd_soc_dai_link *dai_link);
-void snd_soc_remove_dai_link(struct snd_soc_card *card,
-			     struct snd_soc_dai_link *dai_link);
+void snd_soc_remove_pcm_runtime(struct snd_soc_card *card,
+				struct snd_soc_pcm_runtime *rtd);
 
 struct snd_soc_dai *snd_soc_register_dai(struct snd_soc_component *component,
 					 struct snd_soc_dai_driver *dai_drv,

commit 0c04800424c42ec3fbe87422d3e04b5c978fc177
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Dec 10 09:34:19 2019 +0900

    ASoC: soc-core: rename snd_soc_add_dai_link() to snd_soc_add_pcm_runtime()
    
    Now soc-core and soc-topology is using snd_soc_add_dai_link().
    The abstract of this function is "create pcm_runtime from
    dai_link information and connect it to card".
    Thus, "add dai_link" is wrong/confusable naming.
    This patch renames function name.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/877e35yq5w.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 09d3d9b615c2..b223b2d39950 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1323,8 +1323,8 @@ int snd_soc_of_get_dai_link_codecs(struct device *dev,
 				   struct snd_soc_dai_link *dai_link);
 void snd_soc_of_put_dai_link_codecs(struct snd_soc_dai_link *dai_link);
 
-int snd_soc_add_dai_link(struct snd_soc_card *card,
-				struct snd_soc_dai_link *dai_link);
+int snd_soc_add_pcm_runtime(struct snd_soc_card *card,
+			    struct snd_soc_dai_link *dai_link);
 void snd_soc_remove_dai_link(struct snd_soc_card *card,
 			     struct snd_soc_dai_link *dai_link);
 

commit d6f31e0e6d09594717ed21c7c9238d9fbdb30ccb
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Dec 10 09:34:14 2019 +0900

    ASoC: soc-core: move snd_soc_find_dai_link()
    
    snd_soc_find_dai_link() is soc-topology specific function.
    We don't need to have it at soc-core.
    This patch moves it to soc-topology.c
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/878snlyq61.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 40c2a677f531..09d3d9b615c2 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1327,9 +1327,6 @@ int snd_soc_add_dai_link(struct snd_soc_card *card,
 				struct snd_soc_dai_link *dai_link);
 void snd_soc_remove_dai_link(struct snd_soc_card *card,
 			     struct snd_soc_dai_link *dai_link);
-struct snd_soc_dai_link *snd_soc_find_dai_link(struct snd_soc_card *card,
-					       int id, const char *name,
-					       const char *stream_name);
 
 struct snd_soc_dai *snd_soc_register_dai(struct snd_soc_component *component,
 					 struct snd_soc_dai_driver *dai_drv,

commit 4468189ff307f294491628a49702a04de22bffb8
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Dec 10 09:34:08 2019 +0900

    ASoC: soc-core: find rtd via dai_link pointer at snd_soc_get_pcm_runtime()
    
    Current snd_soc_get_pcm_runtime() is finding rtd by checking dai_link
    name. But, it is strange and waste of CPU power, because its user want
    to get from rtd from dai_link, not from dai_link name.
    This patch find rtd via dai_link pointer instead of its name.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/87a781yq67.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 68ec5a051afe..40c2a677f531 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -465,7 +465,7 @@ static inline int snd_soc_new_compress(struct snd_soc_pcm_runtime *rtd, int num)
 void snd_soc_disconnect_sync(struct device *dev);
 
 struct snd_soc_pcm_runtime *snd_soc_get_pcm_runtime(struct snd_soc_card *card,
-		const char *dai_link);
+				struct snd_soc_dai_link *dai_link);
 
 bool snd_soc_runtime_ignore_pmdown_time(struct snd_soc_pcm_runtime *rtd);
 void snd_soc_runtime_activate(struct snd_soc_pcm_runtime *rtd, int stream);

commit 8babfb7030573f7338b141d038c2094b7bb95034
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Dec 10 09:33:55 2019 +0900

    ASoC: soc-core: remove snd_soc_get_dai_substream()
    
    No driver is using snd_soc_get_dai_substream(),
    and snd_soc_get_pcm_runtime() is enough for such purpose.
    We can revival it if it was needed in the future.
    Let's remove unused function.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/87d0cxyq6k.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index b7ba3b91d080..68ec5a051afe 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -464,8 +464,6 @@ static inline int snd_soc_new_compress(struct snd_soc_pcm_runtime *rtd, int num)
 
 void snd_soc_disconnect_sync(struct device *dev);
 
-struct snd_pcm_substream *snd_soc_get_dai_substream(struct snd_soc_card *card,
-		const char *dai_link, int stream);
 struct snd_soc_pcm_runtime *snd_soc_get_pcm_runtime(struct snd_soc_card *card,
 		const char *dai_link);
 

commit cc73390008c9a47c49ad73c459b5590fd4c4c890
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Dec 10 09:33:40 2019 +0900

    ASoC: soc-core: remove dai_link_list
    
    ASoC is using many lists.
    Now, used dai_link is listed to card as dai_link_list.
    
            [card]->[dai_link]->[dai_link]->...
    
    BTW, this "dai_link" is used to create "rtd".
    And this rtd is listed to card as rtd_list.
    
            [card]->[rtd]->[rtd]->...
    
    Here, each rtd has dai_link. This means, we can track all dai_link via
    rtd list. This patch removes card dai_link_list, and uses rtd_list
    instead of it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/87fthtyq6z.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index c28a1ed5e8df..b7ba3b91d080 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -852,7 +852,6 @@ struct snd_soc_dai_link {
 	/* Do not create a PCM for this DAI link (Backend link) */
 	unsigned int ignore:1;
 
-	struct list_head list; /* DAI link list of the soc card */
 #ifdef CONFIG_SND_SOC_TOPOLOGY
 	struct snd_soc_dobj dobj; /* For topology */
 #endif
@@ -1037,7 +1036,6 @@ struct snd_soc_card {
 	/* CPU <--> Codec DAI links  */
 	struct snd_soc_dai_link *dai_link;  /* predefined links only */
 	int num_links;  /* predefined links only */
-	struct list_head dai_link_list; /* all links */
 
 	struct list_head rtd_list;
 	int num_rtd;
@@ -1107,11 +1105,6 @@ struct snd_soc_card {
 	     ((i) < (card)->num_aux_devs) && ((aux) = &(card)->aux_dev[i]); \
 	     (i)++)
 
-#define for_each_card_links(card, link)				\
-	list_for_each_entry(link, &(card)->dai_link_list, list)
-#define for_each_card_links_safe(card, link, _link)			\
-	list_for_each_entry_safe(link, _link, &(card)->dai_link_list, list)
-
 #define for_each_card_rtds(card, rtd)			\
 	list_for_each_entry(rtd, &(card)->rtd_list, list)
 #define for_each_card_rtds_safe(card, rtd, _rtd)	\

commit 4bf2e385aa59c2fae5f880aa25cfd2b470109093
Author: Curtis Malainey <cujomalainey@chromium.org>
Date:   Tue Dec 3 09:30:07 2019 -0800

    ASoC: core: Init pcm runtime work early to avoid warnings
    
    There are cases where we fail before we reach soc_new_pcm which would
    init the workqueue. When we fail we attempt to flush the queue which
    generates warnings from the workqueue subsystem when we have not inited
    the queue. Solution is to use a proxy function to get around this issue.
    
    Signed-off-by: Curtis Malainey <cujomalainey@chromium.org>
    Reviewed-by: Takashi Iwai <tiwai@suse.de>
    Link: https://lore.kernel.org/r/20191203173007.46504-1-cujomalainey@chromium.org
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index c28a1ed5e8df..262896799826 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1150,6 +1150,7 @@ struct snd_soc_pcm_runtime {
 	unsigned int num_codecs;
 
 	struct delayed_work delayed_work;
+	void (*close_delayed_work_func)(struct snd_soc_pcm_runtime *rtd);
 #ifdef CONFIG_DEBUG_FS
 	struct dentry *debugfs_dpcm_root;
 #endif

commit fb5126778333d289b2623a7e6260beeb1ac1b819
Author: Tzung-Bi Shih <tzungbi@google.com>
Date:   Wed Nov 20 14:08:43 2019 +0800

    ASoC: core: add SND_SOC_BYTES_E
    
    Add SND_SOC_BYTES_E to accept getter and putter.
    
    Signed-off-by: Tzung-Bi Shih <tzungbi@google.com>
    Link: https://lore.kernel.org/r/20191120060844.224607-2-tzungbi@google.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index bd943b5d7d45..c28a1ed5e8df 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -299,6 +299,12 @@
 	.put = snd_soc_bytes_put, .private_value =	      \
 		((unsigned long)&(struct soc_bytes)           \
 		{.base = xbase, .num_regs = xregs }) }
+#define SND_SOC_BYTES_E(xname, xbase, xregs, xhandler_get, xhandler_put) \
+{	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
+	.info = snd_soc_bytes_info, .get = xhandler_get, \
+	.put = xhandler_put, .private_value = \
+		((unsigned long)&(struct soc_bytes) \
+		{.base = xbase, .num_regs = xregs }) }
 
 #define SND_SOC_BYTES_MASK(xname, xbase, xregs, xmask)	      \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname,   \

commit dc73d73aa7145f55412611f3eead1e85ae026785
Author: Jaroslav Kysela <perex@perex.cz>
Date:   Tue Nov 19 18:49:32 2019 +0100

    ASoC: add control components management
    
    This ASCII string can carry additional information about
    soundcard components or configuration. Add the possibility
    to set this string via the ASoC card.
    
    Signed-off-by: Jaroslav Kysela <perex@perex.cz>
    Cc: Mark Brown <broonie@kernel.org>
    Link: https://lore.kernel.org/r/20191119174933.25526-1-perex@perex.cz
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index e0855dc08d30..bd943b5d7d45 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -982,6 +982,7 @@ struct snd_soc_card {
 	const char *name;
 	const char *long_name;
 	const char *driver_name;
+	const char *components;
 	char dmi_longname[80];
 	char topology_shortname[32];
 

commit 509ba54fcfd1e45bceebe8ccea59dc496312f1a0
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Nov 5 15:47:26 2019 +0900

    ASoC: soc.h: dobj is used only when SND_SOC_TOPOLOGY
    
    snd_soc_dobj is used only when SND_SOC_TOPOLOGY was selected.
    Let's enable it under SND_SOC_TOPOLOGY.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Link: https://lore.kernel.org/r/87o8xq251d.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 4e38ee656c4b..e0855dc08d30 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -847,7 +847,9 @@ struct snd_soc_dai_link {
 	unsigned int ignore:1;
 
 	struct list_head list; /* DAI link list of the soc card */
+#ifdef CONFIG_SND_SOC_TOPOLOGY
 	struct snd_soc_dobj dobj; /* For topology */
+#endif
 };
 #define for_each_link_codecs(link, i, codec)				\
 	for ((i) = 0;							\
@@ -1169,7 +1171,9 @@ struct soc_mixer_control {
 	unsigned int sign_bit;
 	unsigned int invert:1;
 	unsigned int autodisable:1;
+#ifdef CONFIG_SND_SOC_TOPOLOGY
 	struct snd_soc_dobj dobj;
+#endif
 };
 
 struct soc_bytes {
@@ -1180,8 +1184,9 @@ struct soc_bytes {
 
 struct soc_bytes_ext {
 	int max;
+#ifdef CONFIG_SND_SOC_TOPOLOGY
 	struct snd_soc_dobj dobj;
-
+#endif
 	/* used for TLV byte control */
 	int (*get)(struct snd_kcontrol *kcontrol, unsigned int __user *bytes,
 			unsigned int size);
@@ -1205,7 +1210,9 @@ struct soc_enum {
 	const char * const *texts;
 	const unsigned int *values;
 	unsigned int autodisable:1;
+#ifdef CONFIG_SND_SOC_TOPOLOGY
 	struct snd_soc_dobj dobj;
+#endif
 };
 
 /* device driver data */

commit e443c20593de9f8efd9b2935ed40eb0bbacce30b
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Nov 5 15:47:14 2019 +0900

    ASoC: soc-core: don't call snd_soc_dapm_new_dai_widgets() at snd_soc_register_dai()
    
    ALSA SoC has 2 functions.
    snd_soc_register_dai()  is used from topology
    snd_soc_register_dais() is used from snd_soc_add_component()
    
    In general, people think like _dai() is called from _dais()
    with for loop. But in reality, these are very similar
    but different implementation.
    We shouldn't have duplicated and confusing implementation.
    
    snd_soc_register_dai() is now used from topology.
    But to reduce duplicated code, it should be used from _dais(), too.
    
    Because of topology side specific reason,
    it is calling snd_soc_dapm_new_dai_widgets(),
    but it is not needed _dais() side.
    
    This patch factorizes snd_soc_register_dai() to
    topology / _dais() common part, and topology specific part.
    And do topology specific part at soc-topology.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Link: https://lore.kernel.org/r/87sgn2251p.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 766fa81494c3..4e38ee656c4b 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1326,9 +1326,9 @@ struct snd_soc_dai_link *snd_soc_find_dai_link(struct snd_soc_card *card,
 					       int id, const char *name,
 					       const char *stream_name);
 
-int snd_soc_register_dai(struct snd_soc_component *component,
-			 struct snd_soc_dai_driver *dai_drv,
-			 bool legacy_dai_naming);
+struct snd_soc_dai *snd_soc_register_dai(struct snd_soc_component *component,
+					 struct snd_soc_dai_driver *dai_drv,
+					 bool legacy_dai_naming);
 void snd_soc_unregister_dai(struct snd_soc_dai *dai);
 
 struct snd_soc_dai *snd_soc_find_dai(

commit 5d07519703bc2f0bf19d33652401552a480d68b8
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Nov 5 15:47:09 2019 +0900

    ASoC: soc-core: have legacy_dai_naming at snd_soc_register_dai()
    
    ALSA SoC has 2 functions.
    snd_soc_register_dai()  is used from topology
    snd_soc_register_dais() is used from snd_soc_add_component()
    
    In general, people think like _dai() is called from _dais()
    with for loop. But in reality, these are very similar
    but different implementation.
    We shouldn't have duplicated and confusing implementation.
    
    snd_soc_register_dai() is now used from topology.
    But to reduce duplicated code, it should be used from _dais(), too.
    To prepare it, this patch adds missing parameter legacy_dai_naming
    to snd_soc_register_dai().
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Link: https://lore.kernel.org/r/87tv7i251u.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index daa0e100ecd9..766fa81494c3 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1327,7 +1327,8 @@ struct snd_soc_dai_link *snd_soc_find_dai_link(struct snd_soc_card *card,
 					       const char *stream_name);
 
 int snd_soc_register_dai(struct snd_soc_component *component,
-	struct snd_soc_dai_driver *dai_drv);
+			 struct snd_soc_dai_driver *dai_drv,
+			 bool legacy_dai_naming);
 void snd_soc_unregister_dai(struct snd_soc_dai *dai);
 
 struct snd_soc_dai *snd_soc_find_dai(

commit e11381f38f34789b374880c4a149e25e8d7f0cfd
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Nov 5 15:47:04 2019 +0900

    ASoC: soc-core: add snd_soc_unregister_dai()
    
    It is easy to read code if it is cleanly using paired function/naming,
    like start <-> stop, register <-> unregister, etc, etc.
    But, current ALSA SoC code is very random, unbalance, not paired, etc.
    It is easy to create bug at the such code, and is difficult to debug.
    
    This patch adds missing soc_del_dai() and snd_soc_unregister_dai().
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Link: https://lore.kernel.org/r/87v9ry251z.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 320dcd440dab..daa0e100ecd9 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1328,6 +1328,7 @@ struct snd_soc_dai_link *snd_soc_find_dai_link(struct snd_soc_card *card,
 
 int snd_soc_register_dai(struct snd_soc_component *component,
 	struct snd_soc_dai_driver *dai_drv);
+void snd_soc_unregister_dai(struct snd_soc_dai *dai);
 
 struct snd_soc_dai *snd_soc_find_dai(
 	const struct snd_soc_dai_link_component *dlc);

commit 2b544dd7b43b19fb55ea4fbb3e30b60eb20b7828
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Oct 15 12:59:31 2019 +0900

    ASoC: soc-core: add for_each_rtd_components() and replace
    
    ALSA SoC has for_each_rtdcom() which is link list for
    rtd-component which is called as rtdcom. The relationship image is like below
    
                                   rtdcom      rtdcom      rtdcom
                                   component   component   component
            rtd->component_list -> list     -> list     -> list ...
    
    Here, the pointer get via normal link list is rtdcom,
    Thus, current for_each loop is like below, and need to get
    component via rtdcom->component
    
            for_each_rtdcom(rtd, rtdcom) {
                    component = rtdcom->component;
                    ...
            }
    
    but usually, user want to get pointer from for_each_xxx is component
    directly, like below.
    
            for_each_rtd_component(rtd, rtdcom, component) {
                    ...
            }
    
    This patch expands list_for_each_entry manually, and enable to get
    component directly from for_each macro.
    Because of it, the macro becoming difficult to read,
    but macro itself becoming useful.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/878spm64m4.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index d730883626dc..320dcd440dab 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -739,8 +739,12 @@ struct snd_soc_rtdcom_list {
 struct snd_soc_component*
 snd_soc_rtdcom_lookup(struct snd_soc_pcm_runtime *rtd,
 		       const char *driver_name);
-#define for_each_rtdcom(rtd, rtdcom) \
-	list_for_each_entry(rtdcom, &(rtd)->component_list, list)
+#define for_each_rtd_components(rtd, rtdcom, _component)		\
+	for (rtdcom = list_first_entry(&(rtd)->component_list,		\
+				       typeof(*rtdcom), list);		\
+	     (&rtdcom->list != &(rtd)->component_list) &&		\
+		     (_component = rtdcom->component);			\
+	     rtdcom = list_next_entry(rtdcom, list))
 
 struct snd_soc_dai_link_component {
 	const char *name;

commit 33536a14879515949b065721cdb7fedb276d8e8a
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Oct 15 12:59:44 2019 +0900

    ASoC: soc-core: remove for_each_rtdcom_safe()
    
    There is no user of for_each_rtdcom().
    Let's remove it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/87a7a264m9.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 32748f78060a..d730883626dc 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -741,8 +741,6 @@ snd_soc_rtdcom_lookup(struct snd_soc_pcm_runtime *rtd,
 		       const char *driver_name);
 #define for_each_rtdcom(rtd, rtdcom) \
 	list_for_each_entry(rtdcom, &(rtd)->component_list, list)
-#define for_each_rtdcom_safe(rtd, rtdcom1, rtdcom2) \
-	list_for_each_entry_safe(rtdcom1, rtdcom2, &(rtd)->component_list, list)
 
 struct snd_soc_dai_link_component {
 	const char *name;

commit 8ec241c495dde3d19a0459304298c2468c60182b
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Wed Oct 2 14:31:06 2019 +0900

    ASoC: soc-core: add snd_soc_pcm_lib_ioctl()
    
    add snd_soc_pcm_lib_ioctl() to bypass to snd_pcm_lib_ioctl()
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/87r23vaf39.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index d93cb46c536d..32748f78060a 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1390,6 +1390,11 @@ static inline void snd_soc_dapm_mutex_unlock(struct snd_soc_dapm_context *dapm)
 	mutex_unlock(&dapm->card->dapm_mutex);
 }
 
+/* bypass */
+int snd_soc_pcm_lib_ioctl(struct snd_soc_component *component,
+			  struct snd_pcm_substream *substream,
+			  unsigned int cmd, void *arg);
+
 #include <sound/soc-component.h>
 
 #endif

commit b7c5bc45ee94a03a0dc45a862180e17db8ea8e9d
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Thu Sep 12 13:41:01 2019 +0900

    ASoC: soc-core: merge soc_free_pcm_runtime() and soc_rtd_free()
    
    "rtd"      is handled by soc_xxx_pcm_runtime(), and
    "rtd->dev" is handled by soc_rtd_xxx().
    
    There is no reason to separate these, and it makes code complex.
    We can free these in the same time.
    
    Here soc_rtd_free() (A) which frees rtd->dev is called from
    soc_remove_link_dais() many times (1).
    Then, it is using dev_registered flags to avoid multi kfree() (2).
    This is no longer needed if we can merge these functions.
    
            static void soc_remove_link_dais(...)
            {
                    ...
    (1)             for_each_comp_order(order) {
    (1)                     for_each_card_rtds(card, rtd) {
    
    (A)                             soc_rtd_free(rtd);
                                    ...
                            }
                    }
            }
    
    (A)     static void soc_rtd_free(...)
            {
    (2)             if (rtd->dev_registered) {
                            /* we don't need to call kfree() for rtd->dev */
                            device_unregister(rtd->dev);
    (2)                     rtd->dev_registered = 0;
                    }
            }
    
    This patch merges soc_rtd_free() into soc_free_pcm_runtime().
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/878squf7oi.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index f264c6509f00..d93cb46c536d 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1148,7 +1148,6 @@ struct snd_soc_pcm_runtime {
 	struct list_head component_list; /* list of connected components */
 
 	/* bit field */
-	unsigned int dev_registered:1;
 	unsigned int pop_wait:1;
 	unsigned int fe_compr:1; /* for Dynamic PCM */
 };

commit b03bfaec1d52123d5d941488f71e06964535e471
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Aug 20 14:04:54 2019 +0900

    ASoC: soc-core: merge snd_soc_initialize_card_lists()
    
    snd_soc_initialize_card_lists() is doing card related
    INIT_LIST_HEAD(), but, it is already doing at
    snd_soc_register_card(). We don't need to do it separately.
    This patch merges these.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Link: https://lore.kernel.org/r/877e781ldq.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 5c841c2ee814..f264c6509f00 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1220,16 +1220,6 @@ static inline void *snd_soc_card_get_drvdata(struct snd_soc_card *card)
 	return card->drvdata;
 }
 
-static inline void snd_soc_initialize_card_lists(struct snd_soc_card *card)
-{
-	INIT_LIST_HEAD(&card->widgets);
-	INIT_LIST_HEAD(&card->paths);
-	INIT_LIST_HEAD(&card->dapm_list);
-	INIT_LIST_HEAD(&card->aux_comp_list);
-	INIT_LIST_HEAD(&card->component_dev_list);
-	INIT_LIST_HEAD(&card->list);
-}
-
 static inline bool snd_soc_volsw_is_stereo(struct soc_mixer_control *mc)
 {
 	if (mc->reg == mc->rreg && mc->shift == mc->rshift)

commit 72b745e3ad65deac94ea4eb83262c52ba3ffdb5b
Author: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date:   Tue Aug 13 13:45:32 2019 +0300

    ASoC: core: Move pcm_mutex up to card level from snd_soc_pcm_runtime
    
    The pcm_mutex is used to prevent concurrent execution of snd_pcm_ops
    callbacks. This works fine most of the cases but it can not handle setups
    when the same DAI is used by different rtd, for example:
    pcm3168a have two DAIs: one for Playback and one for Capture.
    If the codec is connected to a single CPU DAI we need to have two dai_link
    to support both playback and capture.
    
    In this case the snd_pcm_ops callbacks can be executed in parallel causing
    unexpected races in DAI drivers.
    
    By moving the pcm_mutex up to card level this can be solved
    while - hopefully - not breaking other setups.
    
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Tested-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20190813104532.16669-1-peter.ujfalusi@ti.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index b1fe5ebea257..5c841c2ee814 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -988,6 +988,10 @@ struct snd_soc_card {
 	struct mutex mutex;
 	struct mutex dapm_mutex;
 
+	/* Mutex for PCM operations */
+	struct mutex pcm_mutex;
+	enum snd_soc_pcm_subclass pcm_subclass;
+
 	spinlock_t dpcm_lock;
 
 	bool instantiated;
@@ -1116,8 +1120,6 @@ struct snd_soc_pcm_runtime {
 	struct device *dev;
 	struct snd_soc_card *card;
 	struct snd_soc_dai_link *dai_link;
-	struct mutex pcm_mutex;
-	enum snd_soc_pcm_subclass pcm_subclass;
 	struct snd_pcm_ops ops;
 
 	unsigned int params_select; /* currently selected param for dai link */

commit c2b71c71037bea7765aa6ff37824520d19108769
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Thu Aug 8 14:54:44 2019 +0900

    ASoC: soc-core: add for_each_xxx macro for aux_dev
    
    To be more readable code, this patch adds
    new for_each_xxx() macro for aux_dev.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/87ftmc6w8s.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 2fc56e5963f3..b1fe5ebea257 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1087,6 +1087,10 @@ struct snd_soc_card {
 	for ((i) = 0;							\
 	     ((i) < (card)->num_links) && ((link) = &(card)->dai_link[i]); \
 	     (i)++)
+#define for_each_card_pre_auxs(card, i, aux)				\
+	for ((i) = 0;							\
+	     ((i) < (card)->num_aux_devs) && ((aux) = &(card)->aux_dev[i]); \
+	     (i)++)
 
 #define for_each_card_links(card, link)				\
 	list_for_each_entry(link, &(card)->dai_link_list, list)
@@ -1098,6 +1102,12 @@ struct snd_soc_card {
 #define for_each_card_rtds_safe(card, rtd, _rtd)	\
 	list_for_each_entry_safe(rtd, _rtd, &(card)->rtd_list, list)
 
+#define for_each_card_auxs(card, component)			\
+	list_for_each_entry(component, &card->aux_comp_list, card_aux_list)
+#define for_each_card_auxs_safe(card, component, _comp)	\
+	list_for_each_entry_safe(component, _comp,	\
+				 &card->aux_comp_list, card_aux_list)
+
 #define for_each_card_components(card, component)			\
 	list_for_each_entry(component, &(card)->component_dev_list, card_list)
 

commit a48b561d873d1d9fda55782d275eff94ec647863
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Thu Aug 8 14:54:39 2019 +0900

    ASoC: soc-core: remove legacy style of aux_dev
    
    Now all drivers are using snd_soc_dai_link_component for aux_dev.
    Let's remove legacy style
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/87h86s6w8x.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index fd6ecea48fc0..2fc56e5963f3 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -963,19 +963,10 @@ struct snd_soc_codec_conf {
 };
 
 struct snd_soc_aux_dev {
-	const char *name;		/* Codec name */
-
 	/*
 	 * specify multi-codec either by device name, or by
 	 * DT/OF node, but not both.
 	 */
-	const char *codec_name;
-	struct device_node *codec_of_node;
-
-	/*
-	 * name, codec_name, codec_of_node will be replaced
-	 * into dlc. don't use both in the same time
-	 */
 	struct snd_soc_dai_link_component dlc;
 
 	/* codec/machine specific init - e.g. add machine controls */

commit 3dc29b8b2062075602c7aff1514a120b4ed0187f
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Thu Aug 8 14:52:33 2019 +0900

    ASoC: soc-core: support snd_soc_dai_link_component for aux_dev
    
    To find aux_dev, ASoC is using .name, codec_name, codec_of_node.
    Here, .name is used to fallback in case of no codec.
    
    But, we already have this kind of component finding method by
    snd_soc_dai_link_component and soc_find_component().
    We shouldn't have duplicated implementation to do same things.
    This patch adds snd_soc_dai_link_component support to finding aux_dev.
    
    Now, no driver is using only .name.
    All drivers are using codec_name and/or codec_of_node.
    This means no driver is finding component from .name so far.
    (Actually almost all drivers are using .name as just "device name",
     not for finding component...)
    
    This patch
    1) add snd_soc_dai_link_component support for aux_dev. legacy style will
       be removed if all drivers are switched to new style.
    2) try to find component via snd_soc_dai_link_component.
       Then, it doesn't try to find via .name, because no driver is using
       it so far.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/87y3046wcf.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 85ad971e9432..fd6ecea48fc0 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -941,6 +941,7 @@ struct snd_soc_dai_link {
 #define COMP_CPU(_dai)			{ .dai_name = _dai, }
 #define COMP_CODEC(_name, _dai)		{ .name = _name, .dai_name = _dai, }
 #define COMP_PLATFORM(_name)		{ .name = _name }
+#define COMP_AUX(_name)			{ .name = _name }
 #define COMP_DUMMY()			{ .name = "snd-soc-dummy", .dai_name = "snd-soc-dummy-dai", }
 
 extern struct snd_soc_dai_link_component null_dailink_component[0];
@@ -971,6 +972,12 @@ struct snd_soc_aux_dev {
 	const char *codec_name;
 	struct device_node *codec_of_node;
 
+	/*
+	 * name, codec_name, codec_of_node will be replaced
+	 * into dlc. don't use both in the same time
+	 */
+	struct snd_soc_dai_link_component dlc;
+
 	/* codec/machine specific init - e.g. add machine controls */
 	int (*init)(struct snd_soc_component *component);
 };

commit b3da42519c3e6ad977af844d61c31d0e5f874f1c
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Wed Aug 7 10:31:24 2019 +0900

    ASoC: soc-core: tidyup for card->deferred_resume_work
    
    card->deferred_resume_work is used if CONFIG_PM_SLEEP was defined.
    but
            1) It is defined even though CONFIG_PM_SLEEP was not defined
            2) random ifdef code is difficult to read.
    This patch tidyup these issues.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/877e7paho1.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 6ac6481b4882..85ad971e9432 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1058,8 +1058,6 @@ struct snd_soc_card {
 	int num_of_dapm_routes;
 	bool fully_routed;
 
-	struct work_struct deferred_resume_work;
-
 	/* lists of probed devices belonging to this card */
 	struct list_head component_dev_list;
 	struct list_head list;
@@ -1079,6 +1077,9 @@ struct snd_soc_card {
 
 #ifdef CONFIG_DEBUG_FS
 	struct dentry *debugfs_card_root;
+#endif
+#ifdef CONFIG_PM_SLEEP
+	struct work_struct deferred_resume_work;
 #endif
 	u32 pop_time;
 

commit 4ff1fef10f353b928bcc9d56d31fda53f2c43191
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Jul 26 13:49:48 2019 +0900

    ASoC: add soc-component.c
    
    ALSA SoC has many snd_soc_component_xxx(), but these are randomly
    located in many files. Because of it, code is difficult to read.
    This patch creates new soc-component.c, and moves existing
    snd_soc_component_xxx() into it.
    But not yet fully. We need more cleanup it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/87imrp5roa.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index f0797792dd8d..6ac6481b4882 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -362,21 +362,6 @@
 #define SOC_ENUM_SINGLE_VIRT_DECL(name, xtexts) \
 	const struct soc_enum name = SOC_ENUM_SINGLE_VIRT(ARRAY_SIZE(xtexts), xtexts)
 
-/*
- * Component probe and remove ordering levels for components with runtime
- * dependencies.
- */
-#define SND_SOC_COMP_ORDER_FIRST		-2
-#define SND_SOC_COMP_ORDER_EARLY		-1
-#define SND_SOC_COMP_ORDER_NORMAL		0
-#define SND_SOC_COMP_ORDER_LATE		1
-#define SND_SOC_COMP_ORDER_LAST		2
-
-#define for_each_comp_order(order)		\
-	for (order  = SND_SOC_COMP_ORDER_FIRST;	\
-	     order <= SND_SOC_COMP_ORDER_LAST;	\
-	     order++)
-
 /*
  * Bias levels
  *
@@ -747,132 +732,6 @@ struct snd_soc_compr_ops {
 	int (*trigger)(struct snd_compr_stream *);
 };
 
-/* component interface */
-struct snd_soc_component_driver {
-	const char *name;
-
-	/* Default control and setup, added after probe() is run */
-	const struct snd_kcontrol_new *controls;
-	unsigned int num_controls;
-	const struct snd_soc_dapm_widget *dapm_widgets;
-	unsigned int num_dapm_widgets;
-	const struct snd_soc_dapm_route *dapm_routes;
-	unsigned int num_dapm_routes;
-
-	int (*probe)(struct snd_soc_component *);
-	void (*remove)(struct snd_soc_component *);
-	int (*suspend)(struct snd_soc_component *);
-	int (*resume)(struct snd_soc_component *);
-
-	unsigned int (*read)(struct snd_soc_component *, unsigned int);
-	int (*write)(struct snd_soc_component *, unsigned int, unsigned int);
-
-	/* pcm creation and destruction */
-	int (*pcm_new)(struct snd_soc_pcm_runtime *);
-	void (*pcm_free)(struct snd_pcm *);
-
-	/* component wide operations */
-	int (*set_sysclk)(struct snd_soc_component *component,
-			  int clk_id, int source, unsigned int freq, int dir);
-	int (*set_pll)(struct snd_soc_component *component, int pll_id,
-		       int source, unsigned int freq_in, unsigned int freq_out);
-	int (*set_jack)(struct snd_soc_component *component,
-			struct snd_soc_jack *jack,  void *data);
-
-	/* DT */
-	int (*of_xlate_dai_name)(struct snd_soc_component *component,
-				 struct of_phandle_args *args,
-				 const char **dai_name);
-	int (*of_xlate_dai_id)(struct snd_soc_component *comment,
-			       struct device_node *endpoint);
-	void (*seq_notifier)(struct snd_soc_component *, enum snd_soc_dapm_type,
-		int subseq);
-	int (*stream_event)(struct snd_soc_component *, int event);
-	int (*set_bias_level)(struct snd_soc_component *component,
-			      enum snd_soc_bias_level level);
-
-	const struct snd_pcm_ops *ops;
-	const struct snd_compr_ops *compr_ops;
-
-	/* probe ordering - for components with runtime dependencies */
-	int probe_order;
-	int remove_order;
-
-	/*
-	 * signal if the module handling the component should not be removed
-	 * if a pcm is open. Setting this would prevent the module
-	 * refcount being incremented in probe() but allow it be incremented
-	 * when a pcm is opened and decremented when it is closed.
-	 */
-	unsigned int module_get_upon_open:1;
-
-	/* bits */
-	unsigned int idle_bias_on:1;
-	unsigned int suspend_bias_off:1;
-	unsigned int use_pmdown_time:1; /* care pmdown_time at stop */
-	unsigned int endianness:1;
-	unsigned int non_legacy_dai_naming:1;
-
-	/* this component uses topology and ignore machine driver FEs */
-	const char *ignore_machine;
-	const char *topology_name_prefix;
-	int (*be_hw_params_fixup)(struct snd_soc_pcm_runtime *rtd,
-				  struct snd_pcm_hw_params *params);
-	bool use_dai_pcm_id;	/* use the DAI link PCM ID as PCM device number */
-	int be_pcm_base;	/* base device ID for all BE PCMs */
-};
-
-struct snd_soc_component {
-	const char *name;
-	int id;
-	const char *name_prefix;
-	struct device *dev;
-	struct snd_soc_card *card;
-
-	unsigned int active;
-
-	unsigned int suspended:1; /* is in suspend PM state */
-
-	struct list_head list;
-	struct list_head card_aux_list; /* for auxiliary bound components */
-	struct list_head card_list;
-
-	const struct snd_soc_component_driver *driver;
-
-	struct list_head dai_list;
-	int num_dai;
-
-	struct regmap *regmap;
-	int val_bytes;
-
-	struct mutex io_mutex;
-
-	/* attached dynamic objects */
-	struct list_head dobj_list;
-
-	/*
-	* DO NOT use any of the fields below in drivers, they are temporary and
-	* are going to be removed again soon. If you use them in driver code the
-	* driver will be marked as BROKEN when these fields are removed.
-	*/
-
-	/* Don't use these, use snd_soc_component_get_dapm() */
-	struct snd_soc_dapm_context dapm;
-
-	/* machine specific init */
-	int (*init)(struct snd_soc_component *component);
-
-#ifdef CONFIG_DEBUG_FS
-	struct dentry *debugfs_root;
-	const char *debugfs_prefix;
-#endif
-};
-
-#define for_each_component_dais(component, dai)\
-	list_for_each_entry(dai, &(component)->dai_list, list)
-#define for_each_component_dais_safe(component, dai, _dai)\
-	list_for_each_entry_safe(dai, _dai, &(component)->dai_list, list)
-
 struct snd_soc_rtdcom_list {
 	struct snd_soc_component *component;
 	struct list_head list; /* rtd::component_list */
@@ -1337,134 +1196,6 @@ struct soc_enum {
 	struct snd_soc_dobj dobj;
 };
 
-/**
- * snd_soc_dapm_to_component() - Casts a DAPM context to the component it is
- *  embedded in
- * @dapm: The DAPM context to cast to the component
- *
- * This function must only be used on DAPM contexts that are known to be part of
- * a component (e.g. in a component driver). Otherwise the behavior is
- * undefined.
- */
-static inline struct snd_soc_component *snd_soc_dapm_to_component(
-	struct snd_soc_dapm_context *dapm)
-{
-	return container_of(dapm, struct snd_soc_component, dapm);
-}
-
-/**
- * snd_soc_component_get_dapm() - Returns the DAPM context associated with a
- *  component
- * @component: The component for which to get the DAPM context
- */
-static inline struct snd_soc_dapm_context *snd_soc_component_get_dapm(
-	struct snd_soc_component *component)
-{
-	return &component->dapm;
-}
-
-/**
- * snd_soc_component_init_bias_level() - Initialize COMPONENT DAPM bias level
- * @component: The COMPONENT for which to initialize the DAPM bias level
- * @level: The DAPM level to initialize to
- *
- * Initializes the COMPONENT DAPM bias level. See snd_soc_dapm_init_bias_level().
- */
-static inline void
-snd_soc_component_init_bias_level(struct snd_soc_component *component,
-				  enum snd_soc_bias_level level)
-{
-	snd_soc_dapm_init_bias_level(
-		snd_soc_component_get_dapm(component), level);
-}
-
-/**
- * snd_soc_component_get_bias_level() - Get current COMPONENT DAPM bias level
- * @component: The COMPONENT for which to get the DAPM bias level
- *
- * Returns: The current DAPM bias level of the COMPONENT.
- */
-static inline enum snd_soc_bias_level
-snd_soc_component_get_bias_level(struct snd_soc_component *component)
-{
-	return snd_soc_dapm_get_bias_level(
-		snd_soc_component_get_dapm(component));
-}
-
-/**
- * snd_soc_component_force_bias_level() - Set the COMPONENT DAPM bias level
- * @component: The COMPONENT for which to set the level
- * @level: The level to set to
- *
- * Forces the COMPONENT bias level to a specific state. See
- * snd_soc_dapm_force_bias_level().
- */
-static inline int
-snd_soc_component_force_bias_level(struct snd_soc_component *component,
-				   enum snd_soc_bias_level level)
-{
-	return snd_soc_dapm_force_bias_level(
-		snd_soc_component_get_dapm(component),
-		level);
-}
-
-/**
- * snd_soc_dapm_kcontrol_component() - Returns the component associated to a kcontrol
- * @kcontrol: The kcontrol
- *
- * This function must only be used on DAPM contexts that are known to be part of
- * a COMPONENT (e.g. in a COMPONENT driver). Otherwise the behavior is undefined.
- */
-static inline struct snd_soc_component *snd_soc_dapm_kcontrol_component(
-	struct snd_kcontrol *kcontrol)
-{
-	return snd_soc_dapm_to_component(snd_soc_dapm_kcontrol_dapm(kcontrol));
-}
-
-/**
- * snd_soc_component_cache_sync() - Sync the register cache with the hardware
- * @component: COMPONENT to sync
- *
- * Note: This function will call regcache_sync()
- */
-static inline int snd_soc_component_cache_sync(
-	struct snd_soc_component *component)
-{
-	return regcache_sync(component->regmap);
-}
-
-/* component IO */
-int snd_soc_component_read(struct snd_soc_component *component,
-	unsigned int reg, unsigned int *val);
-unsigned int snd_soc_component_read32(struct snd_soc_component *component,
-				      unsigned int reg);
-int snd_soc_component_write(struct snd_soc_component *component,
-	unsigned int reg, unsigned int val);
-int snd_soc_component_update_bits(struct snd_soc_component *component,
-	unsigned int reg, unsigned int mask, unsigned int val);
-int snd_soc_component_update_bits_async(struct snd_soc_component *component,
-	unsigned int reg, unsigned int mask, unsigned int val);
-void snd_soc_component_async_complete(struct snd_soc_component *component);
-int snd_soc_component_test_bits(struct snd_soc_component *component,
-	unsigned int reg, unsigned int mask, unsigned int value);
-
-/* component wide operations */
-int snd_soc_component_set_sysclk(struct snd_soc_component *component,
-			int clk_id, int source, unsigned int freq, int dir);
-int snd_soc_component_set_pll(struct snd_soc_component *component, int pll_id,
-			      int source, unsigned int freq_in,
-			      unsigned int freq_out);
-int snd_soc_component_set_jack(struct snd_soc_component *component,
-			       struct snd_soc_jack *jack, void *data);
-
-#ifdef CONFIG_REGMAP
-
-void snd_soc_component_init_regmap(struct snd_soc_component *component,
-	struct regmap *regmap);
-void snd_soc_component_exit_regmap(struct snd_soc_component *component);
-
-#endif
-
 /* device driver data */
 
 static inline void snd_soc_card_set_drvdata(struct snd_soc_card *card,
@@ -1478,17 +1209,6 @@ static inline void *snd_soc_card_get_drvdata(struct snd_soc_card *card)
 	return card->drvdata;
 }
 
-static inline void snd_soc_component_set_drvdata(struct snd_soc_component *c,
-		void *data)
-{
-	dev_set_drvdata(c->dev, data);
-}
-
-static inline void *snd_soc_component_get_drvdata(struct snd_soc_component *c)
-{
-	return dev_get_drvdata(c->dev);
-}
-
 static inline void snd_soc_initialize_card_lists(struct snd_soc_card *card)
 {
 	INIT_LIST_HEAD(&card->widgets);
@@ -1535,12 +1255,6 @@ static inline unsigned int snd_soc_enum_item_to_val(struct soc_enum *e,
 	return e->values[item];
 }
 
-static inline bool snd_soc_component_is_active(
-	struct snd_soc_component *component)
-{
-	return component->active != 0;
-}
-
 /**
  * snd_soc_kcontrol_component() - Returns the component that registered the
  *  control
@@ -1676,24 +1390,6 @@ static inline void snd_soc_dapm_mutex_unlock(struct snd_soc_dapm_context *dapm)
 	mutex_unlock(&dapm->card->dapm_mutex);
 }
 
-int snd_soc_component_enable_pin(struct snd_soc_component *component,
-				 const char *pin);
-int snd_soc_component_enable_pin_unlocked(struct snd_soc_component *component,
-					  const char *pin);
-int snd_soc_component_disable_pin(struct snd_soc_component *component,
-				  const char *pin);
-int snd_soc_component_disable_pin_unlocked(struct snd_soc_component *component,
-					   const char *pin);
-int snd_soc_component_nc_pin(struct snd_soc_component *component,
-			     const char *pin);
-int snd_soc_component_nc_pin_unlocked(struct snd_soc_component *component,
-				      const char *pin);
-int snd_soc_component_get_pin_status(struct snd_soc_component *component,
-				     const char *pin);
-int snd_soc_component_force_enable_pin(struct snd_soc_component *component,
-				       const char *pin);
-int snd_soc_component_force_enable_pin_unlocked(
-					struct snd_soc_component *component,
-					const char *pin);
+#include <sound/soc-component.h>
 
 #endif

commit fee531d6fc49b9a616525e30955c4cf3b403f632
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Jul 31 15:17:15 2019 +0200

    ASoC: core: no need to check return value of debugfs_create functions
    
    When calling debugfs functions, there is no need to ever check the
    return value.  The function can work or not, but the code logic should
    never do something different based on this.
    
    Also, there is no need to store the individual debugfs file name, just
    remove the whole directory all at once, saving a local variable.
    
    Note, the soc-pcm "state" file has now moved to a subdirectory, as it is
    only a good idea to save the dentries for debugfs directories, not
    individual files, as the individual file debugfs functions are changing
    to not return a dentry.
    
    Cc: Liam Girdwood <lgirdwood@gmail.com>
    Cc: Mark Brown <broonie@kernel.org>
    Cc: Jaroslav Kysela <perex@perex.cz>
    Cc: Takashi Iwai <tiwai@suse.com>
    Cc: alsa-devel@alsa-project.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Link: https://lore.kernel.org/r/20190731131716.9764-2-gregkh@linuxfoundation.org
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index d770606732cd..f0797792dd8d 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1220,7 +1220,6 @@ struct snd_soc_card {
 
 #ifdef CONFIG_DEBUG_FS
 	struct dentry *debugfs_card_root;
-	struct dentry *debugfs_pop_time;
 #endif
 	u32 pop_time;
 

commit aa6166c2ac28392d64f2d8b3acfb56c8fe657147
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Jul 22 10:33:04 2019 +0900

    ASoC: soc-dai: mv soc_dai_hw_params() to soc-dai
    
    Sometimes ALSA SoC naming is very random.
    Current soc_dai_hw_params() should use snd_soc_dai_xxx() style.
    And then, 1st parameter should be dai. Otherwise it is confusable.
     - soc_dai_hw_params(..., dai);
     + snd_soc_dai_hw_params(dai, ...);
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/87zhl6hn5b.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 4e8071269639..d770606732cd 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -505,10 +505,6 @@ int snd_soc_params_to_bclk(struct snd_pcm_hw_params *parms);
 int snd_soc_set_runtime_hwparams(struct snd_pcm_substream *substream,
 	const struct snd_pcm_hardware *hw);
 
-int soc_dai_hw_params(struct snd_pcm_substream *substream,
-		      struct snd_pcm_hw_params *params,
-		      struct snd_soc_dai *dai);
-
 /* Jack reporting */
 int snd_soc_card_jack_new(struct snd_soc_card *card, const char *id, int type,
 	struct snd_soc_jack *jack, struct snd_soc_jack_pin *pins,

commit 34614739988ad60c3493da66dd856002ee93edf9
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Thu Jun 27 14:13:50 2019 +0200

    ASoC: soc-core: support dai_link with platforms_num != 1
    
    Add support platforms_num != 1 in dai_link. Initially, the main purpose of
    this change was to make the platform optional in the dai_link, instead of
    inserting the dummy platform driver.
    
    This particular case had just been solved by Kuninori Morimoto with
    commit 1d7689892878 ("ASoC: soc-core: allow no Platform on dai_link").
    
    However, this change may still be useful for those who need multiple
    platform components on a single dai_link (it solves one of the FIXME
    note in soc-core)
    
    Acked-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 64405cdab8bb..4e8071269639 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -997,6 +997,12 @@ struct snd_soc_dai_link {
 	     ((i) < link->num_codecs) && ((codec) = &link->codecs[i]);	\
 	     (i)++)
 
+#define for_each_link_platforms(link, i, platform)			\
+	for ((i) = 0;							\
+	     ((i) < link->num_platforms) &&				\
+	     ((platform) = &link->platforms[i]);			\
+	     (i)++)
+
 /*
  * Sample 1 : Single CPU/Codec/Platform
  *

commit 1d76898928783d79bfd7c465e891b6cf957c839a
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Wed Jun 19 10:14:07 2019 +0900

    ASoC: soc-core: allow no Platform on dai_link
    
    dai_link is used to selecting Component (= CPU/Codec/Platform) and
    DAI (= CPU/Codec). And selected CPU/Codec/Platform components are
    *listed* on Card.
    
    Many drivers don't need special Platform component, but was
    mandatory at legacy style ALSA SoC.
    Thus, there is this kind of settings on many drivers.
    
            dai_link->platform_of_node = dai_link->cpu_of_node;
    
    In this case, soc_bind_dai_link() will pick-up "CPU component" as
    "Platform component", and try to add it to snd_soc_pcm_runtime.
    But it will be ignored, because it is already added when CPU bindings.
    
    Historically, this kind of "CPU component" is used/selected as
    "Platform" on many ALSA SoC drivers.
    OTOH, Dummy Platform will be selected automatically by ALSA SoC if
    driver doesn't have Platform settings.
    
    These indicates that there are 2 type of Platforms exist at current
    ALSA SoC if driver doesn't need special Platform.
    
            1) use Dummy Platform as Platform component
            2) use CPU component  as Platform component
    
    ALSA SoC will call Dummy Platform callback function if it is using
    Dummy Platform, but it is completely pointless. Because it is the
    sound card which doesn't need special Platform.
    
    Thus, the behavior we request to ALSA SoC is selecting 2) automatically
    instead of 1) if sound card doesn't need special Platform.
    And, 2) means "do nothing" as above explain.
    
    These were needed at legacy style dai_link, but is no longer needed
    at modern style dai_link anymore.
    
    This patch allows "no Platform" settings on dai_link, and will do
    nothing for it if there was no platform settings. This is same as 2).
    
    By this patch, all drivers which is selecting "CPU component" as
    "Platform" can remove such settings.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 80c1ca3a62c7..64405cdab8bb 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -926,7 +926,7 @@ struct snd_soc_dai_link {
 	/*
 	 * You MAY specify the link's platform/PCM/DMA driver, either by
 	 * device name, or by DT/OF node, but not both. Some forms of link
-	 * do not need a platform.
+	 * do not need a platform. In such case, platforms are not mandatory.
 	 */
 	struct snd_soc_dai_link_component *platforms;
 	unsigned int num_platforms;

commit 5f174cf75a8cb14d50c1cecfb3884ae82f754058
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Wed Jun 19 10:27:52 2019 +0900

    ASoC: soc.h: fixup for_each_card_links() macro
    
    Macro is using "link", not "dai_link"
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 055e6d035e04..80c1ca3a62c7 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1230,7 +1230,7 @@ struct snd_soc_card {
 	     (i)++)
 
 #define for_each_card_links(card, link)				\
-	list_for_each_entry(dai_link, &(card)->dai_link_list, list)
+	list_for_each_entry(link, &(card)->dai_link_list, list)
 #define for_each_card_links_safe(card, link, _link)			\
 	list_for_each_entry_safe(link, _link, &(card)->dai_link_list, list)
 

commit adb76b5b9c4740a11f6ad6c68764515961ae8ade
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Thu Jun 6 13:22:19 2019 +0900

    ASoC: soc-core: remove legacy style dai_link
    
    All drivers switched to modern style dai_link
    (= struct snd_soc_dai_link_component).
    Let's remove legacy style dai_link.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 0fa79b8330d7..055e6d035e04 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -900,17 +900,6 @@ struct snd_soc_dai_link {
 	const char *name;			/* Codec name */
 	const char *stream_name;		/* Stream name */
 
-	/*
-	 *	cpu_name
-	 *	cpu_of_node
-	 *	cpu_dai_name
-	 *
-	 * These are legacy style, and will be replaced to
-	 * modern style (= snd_soc_dai_link_component) in the future,
-	 * but, not yet supported so far.
-	 * If modern style was supported for CPU, all driver will switch
-	 * to use it, and, legacy style code will be removed from ALSA SoC.
-	 */
 	/*
 	 * You MAY specify the link's CPU-side device, either by device name,
 	 * or by DT/OF node, but not both. If this information is omitted,
@@ -918,60 +907,27 @@ struct snd_soc_dai_link {
 	 * must be globally unique. These fields are currently typically used
 	 * only for codec to codec links, or systems using device tree.
 	 */
-	const char *cpu_name;
-	struct device_node *cpu_of_node;
 	/*
 	 * You MAY specify the DAI name of the CPU DAI. If this information is
 	 * omitted, the CPU-side DAI is matched using .cpu_name/.cpu_of_node
 	 * only, which only works well when that device exposes a single DAI.
 	 */
-	const char *cpu_dai_name;
-
 	struct snd_soc_dai_link_component *cpus;
 	unsigned int num_cpus;
 
-	/*
-	 *	codec_name
-	 *	codec_of_node
-	 *	codec_dai_name
-	 *
-	 * These are legacy style, it will be converted to modern style
-	 * (= snd_soc_dai_link_component) automatically in soc-core
-	 * if driver is using legacy style.
-	 * Driver shouldn't use both legacy and modern style in the same time.
-	 * If modern style was supported for CPU, all driver will switch
-	 * to use it, and, legacy style code will be removed from ALSA SoC.
-	 */
 	/*
 	 * You MUST specify the link's codec, either by device name, or by
 	 * DT/OF node, but not both.
 	 */
-	const char *codec_name;
-	struct device_node *codec_of_node;
 	/* You MUST specify the DAI name within the codec */
-	const char *codec_dai_name;
-
 	struct snd_soc_dai_link_component *codecs;
 	unsigned int num_codecs;
 
-	/*
-	 *	platform_name
-	 *	platform_of_node
-	 *
-	 * These are legacy style, it will be converted to modern style
-	 * (= snd_soc_dai_link_component) automatically in soc-core
-	 * if driver is using legacy style.
-	 * Driver shouldn't use both legacy and modern style in the same time.
-	 * If modern style was supported for CPU, all driver will switch
-	 * to use it, and, legacy style code will be removed from ALSA SoC.
-	 */
 	/*
 	 * You MAY specify the link's platform/PCM/DMA driver, either by
 	 * device name, or by DT/OF node, but not both. Some forms of link
 	 * do not need a platform.
 	 */
-	const char *platform_name;
-	struct device_node *platform_of_node;
 	struct snd_soc_dai_link_component *platforms;
 	unsigned int num_platforms;
 
@@ -1033,13 +989,6 @@ struct snd_soc_dai_link {
 	/* Do not create a PCM for this DAI link (Backend link) */
 	unsigned int ignore:1;
 
-	/*
-	 * This driver uses legacy platform naming. Set by the core, machine
-	 * drivers should not modify this value.
-	 */
-	unsigned int legacy_platform:1;
-	unsigned int legacy_cpu:1;
-
 	struct list_head list; /* DAI link list of the soc card */
 	struct snd_soc_dobj dobj; /* For topology */
 };
@@ -1699,15 +1648,11 @@ int snd_soc_fixup_dai_links_platform_name(struct snd_soc_card *card,
 		if (!name)
 			return -ENOMEM;
 
-		if (dai_link->platforms)
-			/* only single platform is supported for now */
-			dai_link->platforms->name = name;
-		else
-			/*
-			 * legacy mode, this case will be removed when all
-			 * derivers are switched to modern style dai_link.
-			 */
-			dai_link->platform_name = name;
+		if (!dai_link->platforms)
+			return -EINVAL;
+
+		/* only single platform is supported for now */
+		dai_link->platforms->name = name;
 	}
 
 	return 0;

commit 587c984427bf7d031a2a4b693dfb24a51cd660b2
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Thu Jun 6 13:07:42 2019 +0900

    ASoC: soc.h: add sound dai_link connection macro
    
    Modern style dai_link requests CPU/Codec/Platform component
    pointer array and its size, but it will be very verbose code.
    To avoid such scene, this patch adds dai_link connection macro.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index ae7ca828e167..0fa79b8330d7 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1048,6 +1048,94 @@ struct snd_soc_dai_link {
 	     ((i) < link->num_codecs) && ((codec) = &link->codecs[i]);	\
 	     (i)++)
 
+/*
+ * Sample 1 : Single CPU/Codec/Platform
+ *
+ * SND_SOC_DAILINK_DEFS(test,
+ *	DAILINK_COMP_ARRAY(COMP_CPU("cpu_dai")),
+ *	DAILINK_COMP_ARRAY(COMP_CODEC("codec", "codec_dai")),
+ *	DAILINK_COMP_ARRAY(COMP_PLATFORM("platform")));
+ *
+ * struct snd_soc_dai_link link = {
+ *	...
+ *	SND_SOC_DAILINK_REG(test),
+ * };
+ *
+ * Sample 2 : Multi CPU/Codec, no Platform
+ *
+ * SND_SOC_DAILINK_DEFS(test,
+ *	DAILINK_COMP_ARRAY(COMP_CPU("cpu_dai1"),
+ *			   COMP_CPU("cpu_dai2")),
+ *	DAILINK_COMP_ARRAY(COMP_CODEC("codec1", "codec_dai1"),
+ *			   COMP_CODEC("codec2", "codec_dai2")));
+ *
+ * struct snd_soc_dai_link link = {
+ *	...
+ *	SND_SOC_DAILINK_REG(test),
+ * };
+ *
+ * Sample 3 : Define each CPU/Codec/Platform manually
+ *
+ * SND_SOC_DAILINK_DEF(test_cpu,
+ *		DAILINK_COMP_ARRAY(COMP_CPU("cpu_dai1"),
+ *				   COMP_CPU("cpu_dai2")));
+ * SND_SOC_DAILINK_DEF(test_codec,
+ *		DAILINK_COMP_ARRAY(COMP_CODEC("codec1", "codec_dai1"),
+ *				   COMP_CODEC("codec2", "codec_dai2")));
+ * SND_SOC_DAILINK_DEF(test_platform,
+ *		DAILINK_COMP_ARRAY(COMP_PLATFORM("platform")));
+ *
+ * struct snd_soc_dai_link link = {
+ *	...
+ *	SND_SOC_DAILINK_REG(test_cpu,
+ *			    test_codec,
+ *			    test_platform),
+ * };
+ *
+ * Sample 4 : Sample3 without platform
+ *
+ * struct snd_soc_dai_link link = {
+ *	...
+ *	SND_SOC_DAILINK_REG(test_cpu,
+ *			    test_codec);
+ * };
+ */
+
+#define SND_SOC_DAILINK_REG1(name)	 SND_SOC_DAILINK_REG3(name##_cpus, name##_codecs, name##_platforms)
+#define SND_SOC_DAILINK_REG2(cpu, codec) SND_SOC_DAILINK_REG3(cpu, codec, null_dailink_component)
+#define SND_SOC_DAILINK_REG3(cpu, codec, platform)	\
+	.cpus		= cpu,				\
+	.num_cpus	= ARRAY_SIZE(cpu),		\
+	.codecs		= codec,			\
+	.num_codecs	= ARRAY_SIZE(codec),		\
+	.platforms	= platform,			\
+	.num_platforms	= ARRAY_SIZE(platform)
+
+#define SND_SOC_DAILINK_REGx(_1, _2, _3, func, ...) func
+#define SND_SOC_DAILINK_REG(...) \
+	SND_SOC_DAILINK_REGx(__VA_ARGS__,		\
+			SND_SOC_DAILINK_REG3,	\
+			SND_SOC_DAILINK_REG2,	\
+			SND_SOC_DAILINK_REG1)(__VA_ARGS__)
+
+#define SND_SOC_DAILINK_DEF(name, def...)		\
+	static struct snd_soc_dai_link_component name[]	= { def }
+
+#define SND_SOC_DAILINK_DEFS(name, cpu, codec, platform...)	\
+	SND_SOC_DAILINK_DEF(name##_cpus, cpu);			\
+	SND_SOC_DAILINK_DEF(name##_codecs, codec);		\
+	SND_SOC_DAILINK_DEF(name##_platforms, platform)
+
+#define DAILINK_COMP_ARRAY(param...)	param
+#define COMP_EMPTY()			{ }
+#define COMP_CPU(_dai)			{ .dai_name = _dai, }
+#define COMP_CODEC(_name, _dai)		{ .name = _name, .dai_name = _dai, }
+#define COMP_PLATFORM(_name)		{ .name = _name }
+#define COMP_DUMMY()			{ .name = "snd-soc-dummy", .dai_name = "snd-soc-dummy-dai", }
+
+extern struct snd_soc_dai_link_component null_dailink_component[0];
+
+
 struct snd_soc_codec_conf {
 	/*
 	 * specify device either by device name, or by

commit 08a5841e3a109f9ea7bfa9c64109aefa95a318c7
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Thu Jun 6 13:07:22 2019 +0900

    ASoC: soc-core: use snd_soc_dai_link_component for CPU
    
    current ALSA SoC is starting to support modern style dai_linke
    (= struct snd_soc_dai_link_component) which is mainly used for
    multipul DAI/component connection.
    Now Codec has full multi-codec support, Platform is using modern
    style but still for single Platform.
    Only CPU is not yet supporting modern style yet.
    If we could support it for CPU, we can switch to modern style
    dai_link on all CPU/Codec/Platform, and remove legacy style
    from ALSA SoC.
    
    Multi-CPU will be supported in the future.
    This patch is initial support for modern style for CPU
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index f20785aa7b4a..ae7ca828e167 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -927,6 +927,9 @@ struct snd_soc_dai_link {
 	 */
 	const char *cpu_dai_name;
 
+	struct snd_soc_dai_link_component *cpus;
+	unsigned int num_cpus;
+
 	/*
 	 *	codec_name
 	 *	codec_of_node
@@ -1035,6 +1038,7 @@ struct snd_soc_dai_link {
 	 * drivers should not modify this value.
 	 */
 	unsigned int legacy_platform:1;
+	unsigned int legacy_cpu:1;
 
 	struct list_head list; /* DAI link list of the soc card */
 	struct snd_soc_dobj dobj; /* For topology */

commit 7426af5010d1b4a109e5d7ee639f3c3e0e5b3cdd
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon May 13 16:07:27 2019 +0900

    ASoC: soc.h: fe_compr can be bit field
    
    fe_compr is used at soc-compress, it can be bit field.
    This patch move it from int to bit field.
    
    > grep fe_compr -r sound/soc/*
    sound/soc/soc-compress.c:               rtd->fe_compr = 1;
    sound/soc/soc-pcm.c:            if (!fe->dpcm[stream].runtime && !fe->fe_compr)
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 482b4ea87c3c..f20785aa7b4a 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1214,7 +1214,6 @@ struct snd_soc_pcm_runtime {
 
 	/* Dynamic PCM BE runtime data */
 	struct snd_soc_dpcm_runtime dpcm[2];
-	int fe_compr;
 
 	long pmdown_time;
 
@@ -1239,6 +1238,7 @@ struct snd_soc_pcm_runtime {
 	/* bit field */
 	unsigned int dev_registered:1;
 	unsigned int pop_wait:1;
+	unsigned int fe_compr:1; /* for Dynamic PCM */
 };
 #define for_each_rtd_codec_dai(rtd, i, dai)\
 	for ((i) = 0;						       \

commit b4ed6b51f356224c6c71540ed94087f7f09b84af
Author: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
Date:   Fri Apr 5 09:57:08 2019 -0700

    ASoC: core: conditionally increase module refcount on component open
    
    Recently, for Intel platforms the "ignore_module_refcount" field
    was introduced for the component driver. In order to avoid a
    deadlock preventing the PCI modules from being removed
    even when the card was idle, the refcounts were not incremented
    for the device driver module during component probe.
    
    However, this change introduced a nasty side effect:
    the device driver module can be unloaded while a pcm stream is open.
    
    This patch proposes to change the field to be renamed as
    "module_get_upon_open". When this field is set, the module
    refcount should be incremented on pcm open amd decremented
    upon pcm close. This will enable modules to be removed
    when no PCM playback/capture happens and prevent removal
    when the component is actually in use.
    
    Also, align with the skylake component driver with the new name.
    
    Fixes: b450b878('ASoC: core: don't increase component module refcount
                     unconditionally'
    Signed-off-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Acked-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 1e2be35ed36f..482b4ea87c3c 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -802,8 +802,13 @@ struct snd_soc_component_driver {
 	int probe_order;
 	int remove_order;
 
-	/* signal if the module handling the component cannot be removed */
-	unsigned int ignore_module_refcount:1;
+	/*
+	 * signal if the module handling the component should not be removed
+	 * if a pcm is open. Setting this would prevent the module
+	 * refcount being incremented in probe() but allow it be incremented
+	 * when a pcm is opened and decremented when it is closed.
+	 */
+	unsigned int module_get_upon_open:1;
 
 	/* bits */
 	unsigned int idle_bias_on:1;

commit a9764869779081e8bf24da07ac040e8f3efcf13a
Author: KaiChieh Chuang <kaichieh.chuang@mediatek.com>
Date:   Fri Mar 8 13:05:53 2019 +0800

    ASoC: dpcm: prevent snd_soc_dpcm use after free
    
    The dpcm get from fe_clients/be_clients
    may be free before use
    
    Add a spin lock at snd_soc_card level,
    to protect the dpcm instance.
    The lock may be used in atomic context, so use spin lock.
    
    Use irq spin lock version,
    since the lock may be used in interrupts.
    
    possible race condition between
    void dpcm_be_disconnect(
            ...
            list_del(&dpcm->list_be);
            list_del(&dpcm->list_fe);
            kfree(dpcm);
            ...
    
    and
            for_each_dpcm_fe()
            for_each_dpcm_be*()
    
    race condition example
    Thread 1:
        snd_soc_dapm_mixer_update_power()
            -> soc_dpcm_runtime_update()
                -> dpcm_be_disconnect()
                    -> kfree(dpcm);
    Thread 2:
        dpcm_fe_dai_trigger()
            -> dpcm_be_dai_trigger()
                -> snd_soc_dpcm_can_be_free_stop()
                    -> if (dpcm->fe == fe)
    
    Excpetion Scenario:
            two FE link to same BE
            FE1 -> BE
            FE2 ->
    
            Thread 1: switch of mixer between FE2 -> BE
            Thread 2: pcm_stop FE1
    
    Exception:
    
    Unable to handle kernel paging request at virtual address dead0000000000e0
    
    pc=<> [<ffffff8960e2cd10>] dpcm_be_dai_trigger+0x29c/0x47c
            sound/soc/soc-pcm.c:3226
                    if (dpcm->fe == fe)
    lr=<> [<ffffff8960e2f694>] dpcm_fe_dai_do_trigger+0x94/0x26c
    
    Backtrace:
    [<ffffff89602dba80>] notify_die+0x68/0xb8
    [<ffffff896028c7dc>] die+0x118/0x2a8
    [<ffffff89602a2f84>] __do_kernel_fault+0x13c/0x14c
    [<ffffff89602a27f4>] do_translation_fault+0x64/0xa0
    [<ffffff8960280cf8>] do_mem_abort+0x4c/0xd0
    [<ffffff8960282ad0>] el1_da+0x24/0x40
    [<ffffff8960e2cd10>] dpcm_be_dai_trigger+0x29c/0x47c
    [<ffffff8960e2f694>] dpcm_fe_dai_do_trigger+0x94/0x26c
    [<ffffff8960e2edec>] dpcm_fe_dai_trigger+0x3c/0x44
    [<ffffff8960de5588>] snd_pcm_do_stop+0x50/0x5c
    [<ffffff8960dded24>] snd_pcm_action+0xb4/0x13c
    [<ffffff8960ddfdb4>] snd_pcm_drop+0xa0/0x128
    [<ffffff8960de69bc>] snd_pcm_common_ioctl+0x9d8/0x30f0
    [<ffffff8960de1cac>] snd_pcm_ioctl_compat+0x29c/0x2f14
    [<ffffff89604c9d60>] compat_SyS_ioctl+0x128/0x244
    [<ffffff8960283740>] el0_svc_naked+0x34/0x38
    [<ffffffffffffffff>] 0xffffffffffffffff
    
    Signed-off-by: KaiChieh Chuang <kaichieh.chuang@mediatek.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index eb7db605955b..1e2be35ed36f 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1083,6 +1083,8 @@ struct snd_soc_card {
 	struct mutex mutex;
 	struct mutex dapm_mutex;
 
+	spinlock_t dpcm_lock;
+
 	bool instantiated;
 	bool topology_shortname_created;
 

commit b450b87847b157d69dbf9af7aefb4cec29e89cc9
Author: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Date:   Fri Feb 1 11:22:23 2019 -0600

    ASoC: core: don't increase component module refcount unconditionally
    
    The ASoC core has for the longest time increased the module reference
    counts, even before the transition to the component model. This is
    probably fine on most platforms, but it introduces a deadlock case on
    Intel devices with the Skylake and SOF drivers which cannot be removed
    due to their reference counts being modified by the core.
    
    In these 2 cases, the PCI or ACPI driver .probe creates a platform
    device to let the machine driver .probe register the audio
    card. Conversely the PCI or ACPI driver .remove will unregister the
    platform device which results in the card being removed by the machine
    driver .remove.
    
    With ascii art, this can be represented as
    
    modprobe
    snd_soc_skl/
    soc-pci-dev/sof-acpci-dev  ----------> pci/acpi probe
           ^                                    |
           |                     ---------------|
           |                    |               |
           |                    V               V
        increase            register        register machine
        refcount            component       platform_device
           ^                                    |
           |                                    |
           |                                    V
        component <----   register card  <---- probe
        probe
    
    The issue is that by playing with the component's module reference
    counts during the card registration, it's no longer possible to remove
    the module which controls the component. This can be shown, e.g. with
    the following error:
    
    root@plb-XPS-13-9350:~# lsmod | grep snd_soc_skl
    snd_soc_skl           110592  1
    
    root@plb-XPS-13-9350:~# rmmod snd_soc_skl
    rmmod: ERROR: Module snd_soc_skl is in use
    
    Increasing the reference count during the component probe is not
    useful. If the PCI/ACPI module is removed, the card will be removed
    anyway.
    
    To avoid breaking existing platforms and allowing Intel platforms to
    safely deal with module load/unload cases, this patch introduces a
    flag which needs to be set during the component initialization. This
    is a strictly opt-in capability that should only be used when the
    handling of the component module does not require a reference count
    increase to prevent removal during use.
    
    Note that this solution is not directly applicable to the legacy
    Atom/SST driver, which uses a different device hierarchy. There are
    however additional refcount issues which prevent the ACPI driver from
    being removed. This is a different issue which would need a different
    patch.
    
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 95689680336b..eb7db605955b 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -802,6 +802,9 @@ struct snd_soc_component_driver {
 	int probe_order;
 	int remove_order;
 
+	/* signal if the module handling the component cannot be removed */
+	unsigned int ignore_module_refcount:1;
+
 	/* bits */
 	unsigned int idle_bias_on:1;
 	unsigned int suspend_bias_off:1;

commit cb50358b83846e4dcb37137c431327c4dd68561b
Author: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Date:   Fri Jan 25 14:34:55 2019 -0600

    ASoC: add helper to change platform name for all dailinks
    
    To reuse the same machine drivers with Atom/SST, Skylake and SOF, we
    need to change the default platform_name (or platforms->name in the
    "modern" representation).
    
    So far, this override was done with an automatic override, which was
    broken by a set of changes for DT platforms related to deferred probe
    handling.
    
    This automatic override is actually not really needed, the machine
    driver can already receive the platform name as a platform_data
    parameter. This is used e.g. for HDaudio support where we have
    different PCI aliases used for different platforms. We can reuse the
    same mechanism and modify the machine drivers to override the dailinks
    prior to registrating the card.
    
    This will require additional work for SOF, but with this helper it'll
    be just two lines of additional code per machine driver which is
    reused, not the end of the world.
    
    This helper can be simplified when all drivers have transitioned to
    the "modern" representation of dailinks.
    
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 3089257ead95..95689680336b 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1580,6 +1580,37 @@ struct snd_soc_dai *snd_soc_card_get_codec_dai(struct snd_soc_card *card,
 	return NULL;
 }
 
+static inline
+int snd_soc_fixup_dai_links_platform_name(struct snd_soc_card *card,
+					  const char *platform_name)
+{
+	struct snd_soc_dai_link *dai_link;
+	const char *name;
+	int i;
+
+	if (!platform_name) /* nothing to do */
+		return 0;
+
+	/* set platform name for each dailink */
+	for_each_card_prelinks(card, i, dai_link) {
+		name = devm_kstrdup(card->dev, platform_name, GFP_KERNEL);
+		if (!name)
+			return -ENOMEM;
+
+		if (dai_link->platforms)
+			/* only single platform is supported for now */
+			dai_link->platforms->name = name;
+		else
+			/*
+			 * legacy mode, this case will be removed when all
+			 * derivers are switched to modern style dai_link.
+			 */
+			dai_link->platform_name = name;
+	}
+
+	return 0;
+}
+
 #ifdef CONFIG_DEBUG_FS
 extern struct dentry *snd_soc_debugfs_root;
 #endif

commit 910fdcabedd2354d161b1beab6ad7dc7e859651d
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Jan 21 09:32:32 2019 +0900

    ASoC: soc-core: add .num_platform for dai_link
    
    Current snd_soc_dai_link is starting to use snd_soc_dai_link_component
    (= modern) style for Platform, but it is still assuming single Platform
    so far. We will need to have multi Platform support in the not far
    future.
    
    Currently only simple card is using it as sound card driver,
    and other drivers are converted to it from legacy style by
    snd_soc_init_platform().
    To avoid future problem of multi Platform support, let's add
    num_platforms before it is too late.
    
    In the same time, to make it same naming mothed, "platform" should
    be "platforms". This patch fixup it too.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index c31b6d122ff6..3089257ead95 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -961,7 +961,8 @@ struct snd_soc_dai_link {
 	 */
 	const char *platform_name;
 	struct device_node *platform_of_node;
-	struct snd_soc_dai_link_component *platform;
+	struct snd_soc_dai_link_component *platforms;
+	unsigned int num_platforms;
 
 	int id;	/* optional ID for machine driver link identification */
 

commit 62bc79d35ebb55451112979babea864975cfd16d
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Jan 18 11:20:41 2019 +0900

    ASoC: soc.h: add explanation of legacy/modern style of dai_link
    
    Current ALSA SoC is assuming 1 CPU 1 Platform (= DMA) style system.
    Because of this background, it is directly using
    xxx_name / xxx_of_node / xxx_dai_name on dai_link.
    Let's call it as legacy style here.
    
    More complex style system like multi CPU multi Platform (= DMA) will
    coming. To supporting it, we can use snd_soc_dai_link_component on
    dai_link. Let's call it as modern style here.
    But current ALSA SoC can't support it so far. Thus, we need to have
    multi CPU / multi Codec / multi Platform style in the future on ALSA SoC.
    
    Currently we already have multi Codec support. Platform is starting to
    use modern style on dai_link, but still style only. Multi Platform is
    not yet implemented. And we still don't have multi CPU support on ALSA
    SoC, and not have modern style either.
    
    Currently, if driver is using legacy style Codec/Platform, it will be
    converted to modern style on soc-core. This means, we are using glue code
    for legacy vs modern style so far on ALSA SoC.
    We can fully switch to modern style on all drivers if ALSA SoC supported
    modern style for CPU, and then, legacy style code will be removed from
    ALSA SoC.
    Untile then, we need to keep both legacy/modern style and its glue code.
    This patch adds such future plan and background on soc.h
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index e665f111b0d2..c31b6d122ff6 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -891,6 +891,18 @@ struct snd_soc_dai_link {
 	/* config - must be set by machine driver */
 	const char *name;			/* Codec name */
 	const char *stream_name;		/* Stream name */
+
+	/*
+	 *	cpu_name
+	 *	cpu_of_node
+	 *	cpu_dai_name
+	 *
+	 * These are legacy style, and will be replaced to
+	 * modern style (= snd_soc_dai_link_component) in the future,
+	 * but, not yet supported so far.
+	 * If modern style was supported for CPU, all driver will switch
+	 * to use it, and, legacy style code will be removed from ALSA SoC.
+	 */
 	/*
 	 * You MAY specify the link's CPU-side device, either by device name,
 	 * or by DT/OF node, but not both. If this information is omitted,
@@ -906,6 +918,19 @@ struct snd_soc_dai_link {
 	 * only, which only works well when that device exposes a single DAI.
 	 */
 	const char *cpu_dai_name;
+
+	/*
+	 *	codec_name
+	 *	codec_of_node
+	 *	codec_dai_name
+	 *
+	 * These are legacy style, it will be converted to modern style
+	 * (= snd_soc_dai_link_component) automatically in soc-core
+	 * if driver is using legacy style.
+	 * Driver shouldn't use both legacy and modern style in the same time.
+	 * If modern style was supported for CPU, all driver will switch
+	 * to use it, and, legacy style code will be removed from ALSA SoC.
+	 */
 	/*
 	 * You MUST specify the link's codec, either by device name, or by
 	 * DT/OF node, but not both.
@@ -918,6 +943,17 @@ struct snd_soc_dai_link {
 	struct snd_soc_dai_link_component *codecs;
 	unsigned int num_codecs;
 
+	/*
+	 *	platform_name
+	 *	platform_of_node
+	 *
+	 * These are legacy style, it will be converted to modern style
+	 * (= snd_soc_dai_link_component) automatically in soc-core
+	 * if driver is using legacy style.
+	 * Driver shouldn't use both legacy and modern style in the same time.
+	 * If modern style was supported for CPU, all driver will switch
+	 * to use it, and, legacy style code will be removed from ALSA SoC.
+	 */
 	/*
 	 * You MAY specify the link's platform/PCM/DMA driver, either by
 	 * device name, or by DT/OF node, but not both. Some forms of link

commit 09ac6a817bd687e7f5dac00470262efdd72f9319
Author: Curtis Malainey <cujomalainey@chromium.org>
Date:   Thu Jan 10 16:21:04 2019 -0800

    ASoC: soc-core: fix init platform memory handling
    
    snd_soc_init_platform initializes pointers to snd_soc_dai_link which is
    statically allocated and it does this by devm_kzalloc. In the event of
    an EPROBE_DEFER the memory will be freed and the pointers are left
    dangling. snd_soc_init_platform sees the dangling pointers and assumes
    they are pointing to initialized memory and does not reallocate them on
    the second probe attempt which results in a use after free bug since
    devm has freed the memory from the first probe attempt.
    
    Since the intention for snd_soc_dai_link->platform is that it can be set
    statically by the machine driver we need to respect the pointer in the
    event we did not set it but still catch dangling pointers. The solution
    is to add a flag to track whether the pointer was dynamically allocated
    or not.
    
    Signed-off-by: Curtis Malainey <cujomalainey@chromium.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 8ec1de856ee7..e665f111b0d2 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -985,6 +985,12 @@ struct snd_soc_dai_link {
 	/* Do not create a PCM for this DAI link (Backend link) */
 	unsigned int ignore:1;
 
+	/*
+	 * This driver uses legacy platform naming. Set by the core, machine
+	 * drivers should not modify this value.
+	 */
+	unsigned int legacy_platform:1;
+
 	struct list_head list; /* DAI link list of the soc card */
 	struct snd_soc_dobj dobj; /* For topology */
 };

commit 8fe8915b6c0b5298fa547be21957b3860c39c46e
Merge: 1b46ed96961d a01b8d1d2445
Author: Mark Brown <broonie@kernel.org>
Date:   Thu Dec 13 14:36:46 2018 +0000

    Merge branch 'for-4.20' of https://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound into asoc-4.21 intel dep

commit 2708bccf9c6f142c3ef5a27f15d34febe751ce4c
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Nov 26 01:21:22 2018 +0000

    ASoC: soc.h: makes snd_soc_of_parse_audio_prefix() inline
    
    commit 3b7103562c03c ("ASoC: soc-core: add
    snd_soc_of_parse_node_prefix()") maked snd_soc_of_parse_audio_prefix()
    as #define. But it'd be better to make this a static inline rather than
    a #define. It helps with error messages and type safety.
    This patch makes it inline.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 93b7510e7f7d..66aafadcf5ef 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1481,9 +1481,15 @@ void snd_soc_of_parse_node_prefix(struct device_node *np,
 				   struct snd_soc_codec_conf *codec_conf,
 				   struct device_node *of_node,
 				   const char *propname);
-#define snd_soc_of_parse_audio_prefix(card, conf, node, name) \
-	snd_soc_of_parse_node_prefix((card)->dev->of_node,    \
-				     (conf), (node), (name))
+static inline
+void snd_soc_of_parse_audio_prefix(struct snd_soc_card *card,
+				   struct snd_soc_codec_conf *codec_conf,
+				   struct device_node *of_node,
+				   const char *propname)
+{
+	snd_soc_of_parse_node_prefix(card->dev->of_node,
+				     codec_conf, of_node, propname);
+}
 
 int snd_soc_of_parse_audio_routing(struct snd_soc_card *card,
 				   const char *propname);

commit 3b7103562c03cffb1a351f8c235b3bba2acd9e9b
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Thu Nov 22 00:55:09 2018 +0000

    ASoC: soc-core: add snd_soc_of_parse_node_prefix()
    
    Current ASoC has snd_soc_of_parse_audio_prefix() to get codec_conf
    settings from DT which is used to avoid DAI naming conflict when
    CPU/Codec matching.
    
    Currently, it is parsing from "top node",
    but, we want to parse from "each sub node" if sound card had multi
    cpus/codecs.
    
    This patch adds new snd_soc_of_parse_node_prefix() to allow parsing
    settings from selected node.
    It is keeping existing snd_soc_of_parse_audio_prefix() by using macro.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 5a8b84140f01..93b7510e7f7d 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1477,10 +1477,14 @@ int snd_soc_of_parse_tdm_slot(struct device_node *np,
 			      unsigned int *rx_mask,
 			      unsigned int *slots,
 			      unsigned int *slot_width);
-void snd_soc_of_parse_audio_prefix(struct snd_soc_card *card,
+void snd_soc_of_parse_node_prefix(struct device_node *np,
 				   struct snd_soc_codec_conf *codec_conf,
 				   struct device_node *of_node,
 				   const char *propname);
+#define snd_soc_of_parse_audio_prefix(card, conf, node, name) \
+	snd_soc_of_parse_node_prefix((card)->dev->of_node,    \
+				     (conf), (node), (name))
+
 int snd_soc_of_parse_audio_routing(struct snd_soc_card *card,
 				   const char *propname);
 unsigned int snd_soc_of_parse_daifmt(struct device_node *np,

commit 576ce4075bfa0f03e0e91a89eecc539b3b828b08
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Fri Nov 2 16:18:21 2018 +0100

    ASoC: wm97xx: fix uninitialized regmap pointer problem
    
    gcc notices that without either the ac97 bus or the pdata, we never
    initialize the regmap pointer, which leads to an uninitialized variable
    access:
    
    sound/soc/codecs/wm9712.c: In function 'wm9712_soc_probe':
    sound/soc/codecs/wm9712.c:666:2: error: 'regmap' may be used uninitialized in this function [-Werror=maybe-uninitialized]
    
    Since that configuration is invalid, it's better to return an error
    here. I tried to avoid adding complexity to the conditions, and turned
    the #ifdef into a regular if(IS_ENABLED()) check for readability.
    This in turn requires moving some header file declarations out of
    an #ifdef.
    
    The same code is used in three drivers, all of which I'm changing
    the same way.
    
    Fixes: 2ed1a8e0ce8d ("ASoC: wm9712: add ac97 new bus support")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index f1dab1f4b194..5a8b84140f01 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -553,12 +553,12 @@ static inline void snd_soc_jack_free_gpios(struct snd_soc_jack *jack, int count,
 }
 #endif
 
-#ifdef CONFIG_SND_SOC_AC97_BUS
 struct snd_ac97 *snd_soc_alloc_ac97_component(struct snd_soc_component *component);
 struct snd_ac97 *snd_soc_new_ac97_component(struct snd_soc_component *component,
 	unsigned int id, unsigned int id_mask);
 void snd_soc_free_ac97_component(struct snd_ac97 *ac97);
 
+#ifdef CONFIG_SND_SOC_AC97_BUS
 int snd_soc_set_ac97_ops(struct snd_ac97_bus_ops *ops);
 int snd_soc_set_ac97_ops_of_reset(struct snd_ac97_bus_ops *ops,
 		struct platform_device *pdev);

commit 23cb2d04db54535df65edbbebbca89f2590f08bd
Author: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Date:   Fri Oct 26 16:54:43 2018 -0500

    ASoC: fix oops w/ for_each_rtd_codec_dai_rollback() macro
    
    A kernel oops happens on an error case (usual missing BE mixer
    configuration required by Intel SST driver). Git bisect points to this
    macro and an operator precedence issue.
    
            for (; ((i--) >= 0) && ((dai) = rtd->codec_dais[i]);)
    
    The initial code replaced by this macro was
            while (--i >= 0) {
                    codec_dai = rtd->codec_dais[i];
    
    Fix the C operator precedence difference by reverting to pre-decrement
    
    Fixes: 0b7990e3897 ('ASoC: add for_each_rtd_codec_dai() macro')
    Cc: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index f1dab1f4b194..70c10a8f3e90 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1192,7 +1192,7 @@ struct snd_soc_pcm_runtime {
 	     ((i) < rtd->num_codecs) && ((dai) = rtd->codec_dais[i]); \
 	     (i)++)
 #define for_each_rtd_codec_dai_rollback(rtd, i, dai)		\
-	for (; ((i--) >= 0) && ((dai) = rtd->codec_dais[i]);)
+	for (; ((--i) >= 0) && ((dai) = rtd->codec_dais[i]);)
 
 
 /* mixer control */

commit 15a0c64572463eddf59e80aa643d3a87809a7d9b
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Sep 21 05:23:17 2018 +0000

    ASoC: add for_each_component_dais() macro
    
    To be more readable code, this patch adds
    new for_each_component_dais() macro, and replace existing code to it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 93aa894a57ef..f1dab1f4b194 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -864,6 +864,11 @@ struct snd_soc_component {
 #endif
 };
 
+#define for_each_component_dais(component, dai)\
+	list_for_each_entry(dai, &(component)->dai_list, list)
+#define for_each_component_dais_safe(component, dai, _dai)\
+	list_for_each_entry_safe(dai, _dai, &(component)->dai_list, list)
+
 struct snd_soc_rtdcom_list {
 	struct snd_soc_component *component;
 	struct list_head list; /* rtd::component_list */

commit 1a1035a9854fd893d487a84edccc1d5804e1d716
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Sep 18 01:30:41 2018 +0000

    ASoC: add for_each_comp_order() macro
    
    To be more readable code, this patch adds
    new for_each_comp_order() macro, and replace existing code to it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 34efab6baff6..93aa894a57ef 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -372,6 +372,11 @@
 #define SND_SOC_COMP_ORDER_LATE		1
 #define SND_SOC_COMP_ORDER_LAST		2
 
+#define for_each_comp_order(order)		\
+	for (order  = SND_SOC_COMP_ORDER_FIRST;	\
+	     order <= SND_SOC_COMP_ORDER_LAST;	\
+	     order++)
+
 /*
  * Bias levels
  *

commit f70f18f7d459b7958a4d3944396e2bc4a9f7ed72
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Sep 18 01:29:55 2018 +0000

    ASoC: add for_each_card_components() macro
    
    To be more readable code, this patch adds
    new for_each_card_components() macro, and replace existing code to it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 164418dbf40e..34efab6baff6 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1135,6 +1135,9 @@ struct snd_soc_card {
 #define for_each_card_rtds_safe(card, rtd, _rtd)	\
 	list_for_each_entry_safe(rtd, _rtd, &(card)->rtd_list, list)
 
+#define for_each_card_components(card, component)			\
+	list_for_each_entry(component, &(card)->component_dev_list, card_list)
+
 /* SoC machine DAI configuration, glues a codec and cpu DAI together */
 struct snd_soc_pcm_runtime {
 	struct device *dev;

commit bcb1fd1fcd6507ba5a1f8610550135dc367aedb7
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Sep 18 01:29:35 2018 +0000

    ASoC: add for_each_card_rtds() macro
    
    To be more readable code, this patch adds
    new for_each_card_rtds() macro, and replace existing code to it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 1fffbaa819d9..164418dbf40e 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1130,6 +1130,10 @@ struct snd_soc_card {
 #define for_each_card_links_safe(card, link, _link)			\
 	list_for_each_entry_safe(link, _link, &(card)->dai_link_list, list)
 
+#define for_each_card_rtds(card, rtd)			\
+	list_for_each_entry(rtd, &(card)->rtd_list, list)
+#define for_each_card_rtds_safe(card, rtd, _rtd)	\
+	list_for_each_entry_safe(rtd, _rtd, &(card)->rtd_list, list)
 
 /* SoC machine DAI configuration, glues a codec and cpu DAI together */
 struct snd_soc_pcm_runtime {

commit 98061fdbfccc02aa0fd6637c67a0524aab385b8d
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Sep 18 01:29:16 2018 +0000

    ASoC: add for_each_card_links() macro
    
    To be more readable code, this patch adds
    new for_each_card_links() macro, and replace existing code to it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index f94b989e7a1a..1fffbaa819d9 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1125,6 +1125,12 @@ struct snd_soc_card {
 	     ((i) < (card)->num_links) && ((link) = &(card)->dai_link[i]); \
 	     (i)++)
 
+#define for_each_card_links(card, link)				\
+	list_for_each_entry(dai_link, &(card)->dai_link_list, list)
+#define for_each_card_links_safe(card, link, _link)			\
+	list_for_each_entry_safe(link, _link, &(card)->dai_link_list, list)
+
+
 /* SoC machine DAI configuration, glues a codec and cpu DAI together */
 struct snd_soc_pcm_runtime {
 	struct device *dev;

commit 7fe072b4df5d0cc832eb758c1eed243c145a2dfc
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Sep 18 01:28:49 2018 +0000

    ASoC: add for_each_card_prelinks() macro
    
    To be more readable code, this patch adds
    new for_each_card_prelinks() macro, and replace existing code to it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index ec1ae9f4feeb..f94b989e7a1a 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1120,6 +1120,10 @@ struct snd_soc_card {
 
 	void *drvdata;
 };
+#define for_each_card_prelinks(card, i, link)				\
+	for ((i) = 0;							\
+	     ((i) < (card)->num_links) && ((link) = &(card)->dai_link[i]); \
+	     (i)++)
 
 /* SoC machine DAI configuration, glues a codec and cpu DAI together */
 struct snd_soc_pcm_runtime {

commit 6d11b12879144da5f5aa08071a8a7f95f3b5a4e8
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Sep 18 01:28:30 2018 +0000

    ASoC: rename for_each_rtd_codec_dai_reverse to rollback
    
    commit 0b7990e38971 ("ASoC: add for_each_rtd_codec_dai() macro")
    added for_each_rtd_codec_dai_reverse(). but _rollback() is better
    naming than _reverse(). This patch rename it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 1e093b399bc0..ec1ae9f4feeb 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1164,7 +1164,7 @@ struct snd_soc_pcm_runtime {
 	for ((i) = 0;						       \
 	     ((i) < rtd->num_codecs) && ((dai) = rtd->codec_dais[i]); \
 	     (i)++)
-#define for_each_rtd_codec_dai_reverse(rtd, i, dai)				\
+#define for_each_rtd_codec_dai_rollback(rtd, i, dai)		\
 	for (; ((i--) >= 0) && ((dai) = rtd->codec_dais[i]);)
 
 

commit e894efef9ac7c10b7727798dcc711cccf07569f9
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Wed Sep 12 10:15:00 2018 +0100

    ASoC: core: add support to card rebind
    
    Current behaviour of ASoC core w.r.t to component removal is that it
    unregisters dependent sound card totally. There is no support to
    rebind the card if the component comes back.
    Typical use case is DSP restart or kernel modules itself.
    
    With this patch, core now maintains list of cards that are unbind due to
    any of its depended components are removed and card not unregistered yet.
    This list is cleared when the card is rebind successfully or when the
    card is unregistered from machine driver.
    
    This list of unbind cards are tried to bind once again after every new
    component is successfully added, giving a fair chance for card bind
    to be successful.
    
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index e17a7ae9a155..1e093b399bc0 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1097,6 +1097,7 @@ struct snd_soc_card {
 
 	/* lists of probed devices belonging to this card */
 	struct list_head component_dev_list;
+	struct list_head list;
 
 	struct list_head widgets;
 	struct list_head paths;
@@ -1373,6 +1374,7 @@ static inline void snd_soc_initialize_card_lists(struct snd_soc_card *card)
 	INIT_LIST_HEAD(&card->dapm_list);
 	INIT_LIST_HEAD(&card->aux_comp_list);
 	INIT_LIST_HEAD(&card->component_dev_list);
+	INIT_LIST_HEAD(&card->list);
 }
 
 static inline bool snd_soc_volsw_is_stereo(struct soc_mixer_control *mc)

commit 4f1b327e65a9516a46ea491ce72a5161be176af8
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Sep 11 06:59:01 2018 +0000

    ASoC: soc-core: remove unused num_dai_links
    
    ALSA SoC is counting card->dai_link_list user,
    but no-one is using it.
    Let's remove it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 821bf99992b8..e17a7ae9a155 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1060,7 +1060,6 @@ struct snd_soc_card {
 	struct snd_soc_dai_link *dai_link;  /* predefined links only */
 	int num_links;  /* predefined links only */
 	struct list_head dai_link_list; /* all links */
-	int num_dai_links;
 
 	struct list_head rtd_list;
 	int num_rtd;

commit 243bcfafcd9a23a20867fd488dc3a35264918d87
Author: Charles Keepax <ckeepax@opensource.cirrus.com>
Date:   Wed Sep 5 15:21:02 2018 +0100

    ASoC: dapm: Move CODEC to CODEC params from the widget to the runtime
    
    Larger CODECs may contain many several hundred widgets and which set of
    parameters is selected only needs to be recorded on a per DAI basis. As
    such move the selected CODEC to CODEC link params to be stored in the
    runtime rather than the DAPM widget, to save some memory.
    
    Signed-off-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 6b68b31e3140..821bf99992b8 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1130,6 +1130,8 @@ struct snd_soc_pcm_runtime {
 	enum snd_soc_pcm_subclass pcm_subclass;
 	struct snd_pcm_ops ops;
 
+	unsigned int params_select; /* currently selected param for dai link */
+
 	/* Dynamic PCM BE runtime data */
 	struct snd_soc_dpcm_runtime dpcm[2];
 	int fe_compr;

commit 0b7990e38971da403ce223d8bdc758a817eb72f8
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Sep 3 02:12:56 2018 +0000

    ASoC: add for_each_rtd_codec_dai() macro
    
    ALSA SoC snd_soc_pcm_runtime has snd_soc_dai array for codec_dai.
    To be more readable code, this patch adds
    new for_each_rtd_codec_dai() macro, and replace existing code to it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index ce42c578fe82..6b68b31e3140 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1158,6 +1158,13 @@ struct snd_soc_pcm_runtime {
 	unsigned int dev_registered:1;
 	unsigned int pop_wait:1;
 };
+#define for_each_rtd_codec_dai(rtd, i, dai)\
+	for ((i) = 0;						       \
+	     ((i) < rtd->num_codecs) && ((dai) = rtd->codec_dais[i]); \
+	     (i)++)
+#define for_each_rtd_codec_dai_reverse(rtd, i, dai)				\
+	for (; ((i--) >= 0) && ((dai) = rtd->codec_dais[i]);)
+
 
 /* mixer control */
 struct soc_mixer_control {

commit 3db769f17714ae65f2faf44ff2bae9d52f4bd46b
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Sep 3 02:12:40 2018 +0000

    ASoC: add for_each_link_codecs() macro
    
    ALSA SoC snd_soc_dai_link has snd_soc_dai_link_component array
    for codecs.
    To be more readable code, this patch adds
    new for_each_link_codecs() macro, and replace existing code to it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 96c19aabf21b..ce42c578fe82 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -978,6 +978,10 @@ struct snd_soc_dai_link {
 	struct list_head list; /* DAI link list of the soc card */
 	struct snd_soc_dobj dobj; /* For topology */
 };
+#define for_each_link_codecs(link, i, codec)				\
+	for ((i) = 0;							\
+	     ((i) < link->num_codecs) && ((codec) = &link->codecs[i]);	\
+	     (i)++)
 
 struct snd_soc_codec_conf {
 	/*

commit daecf46ee0e5f0fb2349e20af53c4653e2afc440
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Aug 31 03:10:08 2018 +0000

    ASoC: soc-core: use snd_soc_dai_link_component for platform
    
    Current struct snd_soc_dai_link is supporting multicodec,
    and it is supporting legacy style of
            codec_name
            codec_of_node
            code_dai_name
    This is handled as single entry of multicodec.
    
    We don't have multicpu support yet, but in the future we will.
    In such case, we can use snd_soc_dai_link_component for both
    cpu/codec. Then the code will be more simple and readble.
    
    As next step, we want to use it for platform, too.
    This patch adds snd_soc_dai_link_component style for platform.
    We might have multiplatform support in the future, but we
    don't know yet. To avoid un-known issue / complex code,
    this patch supports just single-platform as 1st step.
    
    If we could use snd_soc_dai_link_component for all CPU/Codec/Platform,
    we will switch to new style, and remove legacy code.
    This is prepare for it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 41cec42fb456..96c19aabf21b 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -915,6 +915,8 @@ struct snd_soc_dai_link {
 	 */
 	const char *platform_name;
 	struct device_node *platform_of_node;
+	struct snd_soc_dai_link_component *platform;
+
 	int id;	/* optional ID for machine driver link identification */
 
 	const struct snd_soc_pcm_stream *params;

commit 611cbc8799b672f41b6ba7afed758ad9efb959a7
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Thu Aug 2 16:03:38 2018 +0100

    ASoC: core: remove support for card rebind using component framework
    
    DRM based audio components get registered inside the component framework
    bind callback. However component framework has a big mutex lock taken for
    every call to component_add, component_del and bind, unbind callbacks.
    
    This can lead to deadlock situation if we are trying to add new/remove
    component within a bind/unbind callbacks. Which is what was happening
    with bcm2837 rpi 3.
    
    Revert this change till we sort out the mutex issue.
    
    Reported-by: Guillaume Tucker <guillaume.tucker@collabora.com>
    Reported-by: Stefan Wahren <stefan.wahren@i2se.com>
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index ace474e8649e..41cec42fb456 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -17,7 +17,6 @@
 #include <linux/workqueue.h>
 #include <linux/interrupt.h>
 #include <linux/kernel.h>
-#include <linux/component.h>
 #include <linux/regmap.h>
 #include <linux/log2.h>
 #include <sound/core.h>
@@ -1091,12 +1090,6 @@ struct snd_soc_card {
 
 	struct work_struct deferred_resume_work;
 
-	/* component framework related */
-	bool components_added;
-	/* set in machine driver to enable/disable auto re-binding */
-	bool auto_bind;
-	struct component_match *match;
-
 	/* lists of probed devices belonging to this card */
 	struct list_head component_dev_list;
 

commit cbdfab3b675f4c34258b0ec9e4707de44e1f6989
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Tue Jul 17 17:43:02 2018 +0200

    ASoC: export snd_soc_of_get_slot_mask
    
    Amlogic's axg card driver can't use snd_soc_of_parse_tdm_slot()
    directly because it needs to handle 4 mask for each direction.
    Yet the parsing of each mask is the same, so export
    snd_soc_of_get_slot_mask() to reuse the the existing code.
    
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index a23ecdf3eff1..ace474e8649e 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1433,6 +1433,9 @@ int snd_soc_of_parse_card_name(struct snd_soc_card *card,
 			       const char *propname);
 int snd_soc_of_parse_audio_simple_widgets(struct snd_soc_card *card,
 					  const char *propname);
+int snd_soc_of_get_slot_mask(struct device_node *np,
+			     const char *prop_name,
+			     unsigned int *mask);
 int snd_soc_of_parse_tdm_slot(struct device_node *np,
 			      unsigned int *tx_mask,
 			      unsigned int *rx_mask,

commit bb4b894addb09a069c072a0a032f644cc470d17f
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Fri Jul 13 16:36:28 2018 +0100

    ASoC: core: add support to card re-bind using component framework
    
    This patch aims at achieving dynamic behaviour of audio card when
    the dependent components disappear and reappear.
    
    With this patch the card is removed if any of the dependent component
    is removed and card is added back if the dependent component comes back.
    All this is done using component framework and matching based on
    component name.
    
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Reviewed-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index a4915148f739..a23ecdf3eff1 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -17,6 +17,7 @@
 #include <linux/workqueue.h>
 #include <linux/interrupt.h>
 #include <linux/kernel.h>
+#include <linux/component.h>
 #include <linux/regmap.h>
 #include <linux/log2.h>
 #include <sound/core.h>
@@ -1090,6 +1091,12 @@ struct snd_soc_card {
 
 	struct work_struct deferred_resume_work;
 
+	/* component framework related */
+	bool components_added;
+	/* set in machine driver to enable/disable auto re-binding */
+	bool auto_bind;
+	struct component_match *match;
+
 	/* lists of probed devices belonging to this card */
 	struct list_head component_dev_list;
 

commit baacd8d100d571aa713c3c60b1471b9962e6ec8a
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Thu Jul 5 12:13:49 2018 +0200

    ASoC: dpcm: add rate merge to the BE stream merge
    
    As done for format and channels, add the possibility to merge
    the backend rates on the frontend rates.
    
    This useful if the backend does not support all rates supported by the
    frontend, or if several backends (cpu and codecs) with different
    capabilities are connected to the same frontend.
    
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 870ba6b64817..a4915148f739 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -964,6 +964,8 @@ struct snd_soc_dai_link {
 	unsigned int dpcm_merged_format:1;
 	/* DPCM used FE & BE merged channel */
 	unsigned int dpcm_merged_chan:1;
+	/* DPCM used FE & BE merged rate */
+	unsigned int dpcm_merged_rate:1;
 
 	/* pmdown_time is ignored at stop */
 	unsigned int ignore_pmdown_time:1;

commit a655de808cbde6c58b3298e704d786b53f59fb5d
Author: Liam Girdwood <liam.r.girdwood@linux.intel.com>
Date:   Mon Jul 2 16:59:54 2018 +0100

    ASoC: core: Allow topology to override machine driver FE DAI link config.
    
    Machine drivers statically define a number of DAI links that currently
    cannot be changed or removed by topology. This means PCMs and platform
    components cannot be changed by topology at runtime AND machine drivers
    are tightly coupled to topology.
    
    This patch allows topology to override the machine driver DAI link config
    in order to reuse machine drivers with different topologies and platform
    components. The patch supports :-
    
    1) create new FE PCMs with a topology defined PCM ID.
    2) destroy existing static FE PCMs
    3) change the platform component driver.
    4) assign any new HW params fixups.
    5) assign a new card name prefix to differentiate this topology to userspace.
    
    The patch requires no changes to the machine drivers, but does add some
    platform component flags that the platform component driver can assign
    before loading topologies.
    
    Signed-off-by: Liam Girdwood <liam.r.girdwood@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 16f0bf10cc42..870ba6b64817 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -803,6 +803,14 @@ struct snd_soc_component_driver {
 	unsigned int use_pmdown_time:1; /* care pmdown_time at stop */
 	unsigned int endianness:1;
 	unsigned int non_legacy_dai_naming:1;
+
+	/* this component uses topology and ignore machine driver FEs */
+	const char *ignore_machine;
+	const char *topology_name_prefix;
+	int (*be_hw_params_fixup)(struct snd_soc_pcm_runtime *rtd,
+				  struct snd_pcm_hw_params *params);
+	bool use_dai_pcm_id;	/* use the DAI link PCM ID as PCM device number */
+	int be_pcm_base;	/* base device ID for all BE PCMs */
 };
 
 struct snd_soc_component {
@@ -960,6 +968,9 @@ struct snd_soc_dai_link {
 	/* pmdown_time is ignored at stop */
 	unsigned int ignore_pmdown_time:1;
 
+	/* Do not create a PCM for this DAI link (Backend link) */
+	unsigned int ignore:1;
+
 	struct list_head list; /* DAI link list of the soc card */
 	struct snd_soc_dobj dobj; /* For topology */
 };
@@ -999,6 +1010,7 @@ struct snd_soc_card {
 	const char *long_name;
 	const char *driver_name;
 	char dmi_longname[80];
+	char topology_shortname[32];
 
 	struct device *dev;
 	struct snd_card *snd_card;
@@ -1008,6 +1020,7 @@ struct snd_soc_card {
 	struct mutex dapm_mutex;
 
 	bool instantiated;
+	bool topology_shortname_created;
 
 	int (*probe)(struct snd_soc_card *card);
 	int (*late_probe)(struct snd_soc_card *card);

commit 873486ed4af3e11bfc20832dff7b124ba652bf77
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Jul 2 06:24:18 2018 +0000

    ASoC: soc-core: convert to SPDX identifiers
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index f7579f82cc00..16f0bf10cc42 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1,13 +1,10 @@
-/*
+/* SPDX-License-Identifier: GPL-2.0
+ *
  * linux/sound/soc.h -- ALSA SoC Layer
  *
- * Author:		Liam Girdwood
- * Created:		Aug 11th 2005
+ * Author:	Liam Girdwood
+ * Created:	Aug 11th 2005
  * Copyright:	Wolfson Microelectronics. PLC.
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License version 2 as
- * published by the Free Software Foundation.
  */
 
 #ifndef __LINUX_SND_SOC_H

commit f4c277b817cc9489fffabffb4e15d2f3b686056c
Author: Jiada Wang <jiada_wang@mentor.com>
Date:   Wed Jun 20 18:25:20 2018 +0900

    ASoC: soc-pcm: DPCM cares BE channel constraint
    
    Current DPCM is caring only FE channel configuration. Sometimes
    it will be trouble if user selects channel which isn't supported
    by BE.
    
    This patch adds new .dpcm_merged_chan on struct snd_soc_dai_link.
    DPCM will use FE / BE merged channel if struct snd_soc_dai_link
    has it.
    
    Signed-off-by: Jiada Wang <jiada_wang@mentor.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 1378dcd2128a..f7579f82cc00 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -957,6 +957,8 @@ struct snd_soc_dai_link {
 
 	/* DPCM used FE & BE merged format */
 	unsigned int dpcm_merged_format:1;
+	/* DPCM used FE & BE merged channel */
+	unsigned int dpcm_merged_chan:1;
 
 	/* pmdown_time is ignored at stop */
 	unsigned int ignore_pmdown_time:1;

commit 0b014d72ebae14c0c6ab3fb36a442fda91e1a1b3
Author: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Date:   Tue May 29 18:30:02 2018 -0500

    ASoC: fix 0-day warnings with snd_soc_new_compress()
    
    All conditionally-defined routines in include/sound/soc.h expose a
    static inline fallback to avoid 0-day warnings and compilation issues,
    except snd_soc_new_compress().
    
    Fixes: 5db6aab6f36f ('ASoC: topology: Add support for compressed PCMs')
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 600a7ebd10c0..1378dcd2128a 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -462,6 +462,11 @@ struct snd_soc_component *snd_soc_lookup_component(struct device *dev,
 int soc_new_pcm(struct snd_soc_pcm_runtime *rtd, int num);
 #ifdef CONFIG_SND_SOC_COMPRESS
 int snd_soc_new_compress(struct snd_soc_pcm_runtime *rtd, int num);
+#else
+static inline int snd_soc_new_compress(struct snd_soc_pcm_runtime *rtd, int num)
+{
+	return 0;
+}
 #endif
 
 void snd_soc_disconnect_sync(struct device *dev);

commit c8306238faf596ffdb01e5c96e0532be37a4a2a6
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue May 8 03:21:46 2018 +0000

    ASoC: soc.h: merge CONFIG_DEBUG_FS
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 21861f366dcb..600a7ebd10c0 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -831,10 +831,6 @@ struct snd_soc_component {
 	/* attached dynamic objects */
 	struct list_head dobj_list;
 
-#ifdef CONFIG_DEBUG_FS
-	struct dentry *debugfs_root;
-#endif
-
 	/*
 	* DO NOT use any of the fields below in drivers, they are temporary and
 	* are going to be removed again soon. If you use them in driver code the
@@ -848,6 +844,7 @@ struct snd_soc_component {
 	int (*init)(struct snd_soc_component *component);
 
 #ifdef CONFIG_DEBUG_FS
+	struct dentry *debugfs_root;
 	const char *debugfs_prefix;
 #endif
 };

commit 999f7f5af8eb7766f68d925a22bf296011abc84c
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue May 8 03:20:24 2018 +0000

    ASoC: remove Codec related code
    
    Now no one is using Codec related code.
    Let's remove all
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 131185563532..21861f366dcb 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -402,8 +402,6 @@ struct snd_soc_pcm_runtime;
 struct snd_soc_dai;
 struct snd_soc_dai_driver;
 struct snd_soc_dai_link;
-struct snd_soc_codec;
-struct snd_soc_codec_driver;
 struct snd_soc_component;
 struct snd_soc_component_driver;
 struct soc_enum;
@@ -428,13 +426,6 @@ enum snd_soc_card_subclass {
 	SND_SOC_CARD_CLASS_RUNTIME	= 1,
 };
 
-int snd_soc_codec_set_sysclk(struct snd_soc_codec *codec, int clk_id,
-			     int source, unsigned int freq, int dir);
-int snd_soc_codec_set_pll(struct snd_soc_codec *codec, int pll_id, int source,
-			  unsigned int freq_in, unsigned int freq_out);
-int snd_soc_codec_set_jack(struct snd_soc_codec *codec,
-			   struct snd_soc_jack *jack, void *data);
-
 int snd_soc_register_card(struct snd_soc_card *card);
 int snd_soc_unregister_card(struct snd_soc_card *card);
 int devm_snd_soc_register_card(struct device *dev, struct snd_soc_card *card);
@@ -453,10 +444,6 @@ static inline int snd_soc_resume(struct device *dev)
 }
 #endif
 int snd_soc_poweroff(struct device *dev);
-int snd_soc_register_codec(struct device *dev,
-		const struct snd_soc_codec_driver *codec_drv,
-		struct snd_soc_dai_driver *dai_drv, int num_dai);
-void snd_soc_unregister_codec(struct device *dev);
 int snd_soc_add_component(struct device *dev,
 		struct snd_soc_component *component,
 		const struct snd_soc_component_driver *component_driver,
@@ -559,23 +546,7 @@ static inline void snd_soc_jack_free_gpios(struct snd_soc_jack *jack, int count,
 }
 #endif
 
-/* codec register bit access */
-int snd_soc_update_bits(struct snd_soc_codec *codec, unsigned int reg,
-				unsigned int mask, unsigned int value);
-int snd_soc_update_bits_locked(struct snd_soc_codec *codec,
-			       unsigned int reg, unsigned int mask,
-			       unsigned int value);
-int snd_soc_test_bits(struct snd_soc_codec *codec, unsigned int reg,
-				unsigned int mask, unsigned int value);
-
 #ifdef CONFIG_SND_SOC_AC97_BUS
-#define snd_soc_alloc_ac97_codec(codec) \
-	snd_soc_alloc_ac97_component(&codec->component)
-#define snd_soc_new_ac97_codec(codec, id, id_mask) \
-	snd_soc_new_ac97_component(&codec->component, id, id_mask)
-#define snd_soc_free_ac97_codec(ac97) \
-	snd_soc_free_ac97_component(ac97)
-
 struct snd_ac97 *snd_soc_alloc_ac97_component(struct snd_soc_component *component);
 struct snd_ac97 *snd_soc_new_ac97_component(struct snd_soc_component *component,
 	unsigned int id, unsigned int id_mask);
@@ -609,8 +580,6 @@ struct snd_kcontrol *snd_soc_card_get_kcontrol(struct snd_soc_card *soc_card,
 					       const char *name);
 int snd_soc_add_component_controls(struct snd_soc_component *component,
 	const struct snd_kcontrol_new *controls, unsigned int num_controls);
-int snd_soc_add_codec_controls(struct snd_soc_codec *codec,
-	const struct snd_kcontrol_new *controls, unsigned int num_controls);
 int snd_soc_add_card_controls(struct snd_soc_card *soc_card,
 	const struct snd_kcontrol_new *controls, int num_controls);
 int snd_soc_add_dai_controls(struct snd_soc_dai *dai,
@@ -843,8 +812,6 @@ struct snd_soc_component {
 
 	unsigned int active;
 
-	unsigned int ignore_pmdown_time:1; /* pmdown_time is ignored at stop */
-	unsigned int registered_as_component:1;
 	unsigned int suspended:1; /* is in suspend PM state */
 
 	struct list_head list;
@@ -856,9 +823,6 @@ struct snd_soc_component {
 	struct list_head dai_list;
 	int num_dai;
 
-	int (*read)(struct snd_soc_component *, unsigned int, unsigned int *);
-	int (*write)(struct snd_soc_component *, unsigned int, unsigned int);
-
 	struct regmap *regmap;
 	int val_bytes;
 
@@ -880,22 +844,6 @@ struct snd_soc_component {
 	/* Don't use these, use snd_soc_component_get_dapm() */
 	struct snd_soc_dapm_context dapm;
 
-	struct snd_soc_codec *codec;
-
-	int (*probe)(struct snd_soc_component *);
-	void (*remove)(struct snd_soc_component *);
-	int (*suspend)(struct snd_soc_component *);
-	int (*resume)(struct snd_soc_component *);
-
-	int (*set_sysclk)(struct snd_soc_component *component,
-			  int clk_id, int source, unsigned int freq, int dir);
-	int (*set_pll)(struct snd_soc_component *component, int pll_id,
-		       int source, unsigned int freq_in, unsigned int freq_out);
-	int (*set_jack)(struct snd_soc_component *component,
-			struct snd_soc_jack *jack,  void *data);
-	int (*set_bias_level)(struct snd_soc_component *component,
-			      enum snd_soc_bias_level level);
-
 	/* machine specific init */
 	int (*init)(struct snd_soc_component *component);
 
@@ -916,50 +864,6 @@ snd_soc_rtdcom_lookup(struct snd_soc_pcm_runtime *rtd,
 #define for_each_rtdcom_safe(rtd, rtdcom1, rtdcom2) \
 	list_for_each_entry_safe(rtdcom1, rtdcom2, &(rtd)->component_list, list)
 
-/* SoC Audio Codec device */
-struct snd_soc_codec {
-	struct device *dev;
-	const struct snd_soc_codec_driver *driver;
-
-	struct list_head list;
-
-	/* component */
-	struct snd_soc_component component;
-};
-
-/* codec driver */
-struct snd_soc_codec_driver {
-
-	/* driver ops */
-	int (*probe)(struct snd_soc_codec *);
-	int (*remove)(struct snd_soc_codec *);
-	int (*suspend)(struct snd_soc_codec *);
-	int (*resume)(struct snd_soc_codec *);
-	struct snd_soc_component_driver component_driver;
-
-	/* codec wide operations */
-	int (*set_sysclk)(struct snd_soc_codec *codec,
-			  int clk_id, int source, unsigned int freq, int dir);
-	int (*set_pll)(struct snd_soc_codec *codec, int pll_id, int source,
-		unsigned int freq_in, unsigned int freq_out);
-	int (*set_jack)(struct snd_soc_codec *codec,
-			struct snd_soc_jack *jack,  void *data);
-
-	unsigned int (*read)(struct snd_soc_codec *, unsigned int);
-	int (*write)(struct snd_soc_codec *, unsigned int, unsigned int);
-
-	/* codec bias level */
-	int (*set_bias_level)(struct snd_soc_codec *,
-			      enum snd_soc_bias_level level);
-	bool idle_bias_off;
-	bool suspend_bias_off;
-
-	void (*seq_notifier)(struct snd_soc_dapm_context *,
-			     enum snd_soc_dapm_type, int);
-
-	bool ignore_pmdown_time;  /* Doesn't benefit from pmdown delay */
-};
-
 struct snd_soc_dai_link_component {
 	const char *name;
 	struct device_node *of_node;
@@ -1213,7 +1117,6 @@ struct snd_soc_pcm_runtime {
 	/* runtime devices */
 	struct snd_pcm *pcm;
 	struct snd_compr *compr;
-	struct snd_soc_codec *codec;
 	struct snd_soc_dai *codec_dai;
 	struct snd_soc_dai *cpu_dai;
 
@@ -1281,19 +1184,6 @@ struct soc_enum {
 	struct snd_soc_dobj dobj;
 };
 
-/**
- * snd_soc_component_to_codec() - Casts a component to the CODEC it is embedded in
- * @component: The component to cast to a CODEC
- *
- * This function must only be used on components that are known to be CODECs.
- * Otherwise the behavior is undefined.
- */
-static inline struct snd_soc_codec *snd_soc_component_to_codec(
-	struct snd_soc_component *component)
-{
-	return container_of(component, struct snd_soc_codec, component);
-}
-
 /**
  * snd_soc_dapm_to_component() - Casts a DAPM context to the component it is
  *  embedded in
@@ -1309,19 +1199,6 @@ static inline struct snd_soc_component *snd_soc_dapm_to_component(
 	return container_of(dapm, struct snd_soc_component, dapm);
 }
 
-/**
- * snd_soc_dapm_to_codec() - Casts a DAPM context to the CODEC it is embedded in
- * @dapm: The DAPM context to cast to the CODEC
- *
- * This function must only be used on DAPM contexts that are known to be part of
- * a CODEC (e.g. in a CODEC driver). Otherwise the behavior is undefined.
- */
-static inline struct snd_soc_codec *snd_soc_dapm_to_codec(
-	struct snd_soc_dapm_context *dapm)
-{
-	return snd_soc_component_to_codec(snd_soc_dapm_to_component(dapm));
-}
-
 /**
  * snd_soc_component_get_dapm() - Returns the DAPM context associated with a
  *  component
@@ -1333,31 +1210,6 @@ static inline struct snd_soc_dapm_context *snd_soc_component_get_dapm(
 	return &component->dapm;
 }
 
-/**
- * snd_soc_codec_get_dapm() - Returns the DAPM context for the CODEC
- * @codec: The CODEC for which to get the DAPM context
- *
- * Note: Use this function instead of directly accessing the CODEC's dapm field
- */
-static inline struct snd_soc_dapm_context *snd_soc_codec_get_dapm(
-	struct snd_soc_codec *codec)
-{
-	return snd_soc_component_get_dapm(&codec->component);
-}
-
-/**
- * snd_soc_dapm_init_bias_level() - Initialize CODEC DAPM bias level
- * @codec: The CODEC for which to initialize the DAPM bias level
- * @level: The DAPM level to initialize to
- *
- * Initializes the CODEC DAPM bias level. See snd_soc_dapm_init_bias_level().
- */
-static inline void snd_soc_codec_init_bias_level(struct snd_soc_codec *codec,
-	enum snd_soc_bias_level level)
-{
-	snd_soc_dapm_init_bias_level(snd_soc_codec_get_dapm(codec), level);
-}
-
 /**
  * snd_soc_component_init_bias_level() - Initialize COMPONENT DAPM bias level
  * @component: The COMPONENT for which to initialize the DAPM bias level
@@ -1373,18 +1225,6 @@ snd_soc_component_init_bias_level(struct snd_soc_component *component,
 		snd_soc_component_get_dapm(component), level);
 }
 
-/**
- * snd_soc_dapm_get_bias_level() - Get current CODEC DAPM bias level
- * @codec: The CODEC for which to get the DAPM bias level
- *
- * Returns: The current DAPM bias level of the CODEC.
- */
-static inline enum snd_soc_bias_level snd_soc_codec_get_bias_level(
-	struct snd_soc_codec *codec)
-{
-	return snd_soc_dapm_get_bias_level(snd_soc_codec_get_dapm(codec));
-}
-
 /**
  * snd_soc_component_get_bias_level() - Get current COMPONENT DAPM bias level
  * @component: The COMPONENT for which to get the DAPM bias level
@@ -1398,21 +1238,6 @@ snd_soc_component_get_bias_level(struct snd_soc_component *component)
 		snd_soc_component_get_dapm(component));
 }
 
-/**
- * snd_soc_codec_force_bias_level() - Set the CODEC DAPM bias level
- * @codec: The CODEC for which to set the level
- * @level: The level to set to
- *
- * Forces the CODEC bias level to a specific state. See
- * snd_soc_dapm_force_bias_level().
- */
-static inline int snd_soc_codec_force_bias_level(struct snd_soc_codec *codec,
-	enum snd_soc_bias_level level)
-{
-	return snd_soc_dapm_force_bias_level(snd_soc_codec_get_dapm(codec),
-		level);
-}
-
 /**
  * snd_soc_component_force_bias_level() - Set the COMPONENT DAPM bias level
  * @component: The COMPONENT for which to set the level
@@ -1430,19 +1255,6 @@ snd_soc_component_force_bias_level(struct snd_soc_component *component,
 		level);
 }
 
-/**
- * snd_soc_dapm_kcontrol_codec() - Returns the codec associated to a kcontrol
- * @kcontrol: The kcontrol
- *
- * This function must only be used on DAPM contexts that are known to be part of
- * a CODEC (e.g. in a CODEC driver). Otherwise the behavior is undefined.
- */
-static inline struct snd_soc_codec *snd_soc_dapm_kcontrol_codec(
-	struct snd_kcontrol *kcontrol)
-{
-	return snd_soc_dapm_to_codec(snd_soc_dapm_kcontrol_dapm(kcontrol));
-}
-
 /**
  * snd_soc_dapm_kcontrol_component() - Returns the component associated to a kcontrol
  * @kcontrol: The kcontrol
@@ -1456,22 +1268,6 @@ static inline struct snd_soc_component *snd_soc_dapm_kcontrol_component(
 	return snd_soc_dapm_to_component(snd_soc_dapm_kcontrol_dapm(kcontrol));
 }
 
-/* codec IO */
-unsigned int snd_soc_read(struct snd_soc_codec *codec, unsigned int reg);
-int snd_soc_write(struct snd_soc_codec *codec, unsigned int reg,
-	unsigned int val);
-
-/**
- * snd_soc_cache_sync() - Sync the register cache with the hardware
- * @codec: CODEC to sync
- *
- * Note: This function will call regcache_sync()
- */
-static inline int snd_soc_cache_sync(struct snd_soc_codec *codec)
-{
-	return regcache_sync(codec->component.regmap);
-}
-
 /**
  * snd_soc_component_cache_sync() - Sync the register cache with the hardware
  * @component: COMPONENT to sync
@@ -1514,37 +1310,6 @@ void snd_soc_component_init_regmap(struct snd_soc_component *component,
 	struct regmap *regmap);
 void snd_soc_component_exit_regmap(struct snd_soc_component *component);
 
-/**
- * snd_soc_codec_init_regmap() - Initialize regmap instance for the CODEC
- * @codec: The CODEC for which to initialize the regmap instance
- * @regmap: The regmap instance that should be used by the CODEC
- *
- * This function allows deferred assignment of the regmap instance that is
- * associated with the CODEC. Only use this if the regmap instance is not yet
- * ready when the CODEC is registered. The function must also be called before
- * the first IO attempt of the CODEC.
- */
-static inline void snd_soc_codec_init_regmap(struct snd_soc_codec *codec,
-	struct regmap *regmap)
-{
-	snd_soc_component_init_regmap(&codec->component, regmap);
-}
-
-/**
- * snd_soc_codec_exit_regmap() - De-initialize regmap instance for the CODEC
- * @codec: The CODEC for which to de-initialize the regmap instance
- *
- * Calls regmap_exit() on the regmap instance associated to the CODEC and
- * removes the regmap instance from the CODEC.
- *
- * This function should only be used if snd_soc_codec_init_regmap() was used to
- * initialize the regmap instance.
- */
-static inline void snd_soc_codec_exit_regmap(struct snd_soc_codec *codec)
-{
-	snd_soc_component_exit_regmap(&codec->component);
-}
-
 #endif
 
 /* device driver data */
@@ -1571,17 +1336,6 @@ static inline void *snd_soc_component_get_drvdata(struct snd_soc_component *c)
 	return dev_get_drvdata(c->dev);
 }
 
-static inline void snd_soc_codec_set_drvdata(struct snd_soc_codec *codec,
-		void *data)
-{
-	snd_soc_component_set_drvdata(&codec->component, data);
-}
-
-static inline void *snd_soc_codec_get_drvdata(struct snd_soc_codec *codec)
-{
-	return snd_soc_component_get_drvdata(&codec->component);
-}
-
 static inline void snd_soc_initialize_card_lists(struct snd_soc_card *card)
 {
 	INIT_LIST_HEAD(&card->widgets);
@@ -1633,11 +1387,6 @@ static inline bool snd_soc_component_is_active(
 	return component->active != 0;
 }
 
-static inline bool snd_soc_codec_is_active(struct snd_soc_codec *codec)
-{
-	return snd_soc_component_is_active(&codec->component);
-}
-
 /**
  * snd_soc_kcontrol_component() - Returns the component that registered the
  *  control
@@ -1654,20 +1403,6 @@ static inline struct snd_soc_component *snd_soc_kcontrol_component(
 	return snd_kcontrol_chip(kcontrol);
 }
 
-/**
- * snd_soc_kcontrol_codec() - Returns the CODEC that registered the control
- * @kcontrol: The control for which to get the CODEC
- *
- * Note: This function will only work correctly if the control has been
- * registered with snd_soc_add_codec_controls() or via table based setup of
- * snd_soc_codec_driver. Otherwise the behavior is undefined.
- */
-static inline struct snd_soc_codec *snd_soc_kcontrol_codec(
-	struct snd_kcontrol *kcontrol)
-{
-	return snd_soc_component_to_codec(snd_soc_kcontrol_component(kcontrol));
-}
-
 int snd_soc_util_init(void);
 void snd_soc_util_exit(void);
 

commit 11fb14f8c5b8f016ea0dae2237854331071cad42
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue May 8 03:19:49 2018 +0000

    ASoC: remove unneeded .pcm_new/free
    
    commit ef050bece1b55 ("ASoC: Remove platform code now everything is
    componentised") removed platform code, but it didn't remove
    .pcm_new/free which existed only for platform.
    This patch remove these
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 309bb70bcb1e..131185563532 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -886,8 +886,6 @@ struct snd_soc_component {
 	void (*remove)(struct snd_soc_component *);
 	int (*suspend)(struct snd_soc_component *);
 	int (*resume)(struct snd_soc_component *);
-	int (*pcm_new)(struct snd_soc_component *, struct snd_soc_pcm_runtime *);
-	void (*pcm_free)(struct snd_soc_component *, struct snd_pcm *);
 
 	int (*set_sysclk)(struct snd_soc_component *component,
 			  int clk_id, int source, unsigned int freq, int dir);

commit 2250e76d78e82b1da0f6f571f7211dfa78cbd469
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue May 8 03:19:16 2018 +0000

    ASoC: remove .get_regmap
    
    To setup regmap, ALSA SoC has snd_soc_component_init_regmap() and
    .get_regmap. But these are duplicated feature.
    Now, no one is using .get_regmap, let's remove it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 7233d3a206b2..309bb70bcb1e 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -947,8 +947,6 @@ struct snd_soc_codec_driver {
 	int (*set_jack)(struct snd_soc_codec *codec,
 			struct snd_soc_jack *jack,  void *data);
 
-	/* codec IO */
-	struct regmap *(*get_regmap)(struct device *);
 	unsigned int (*read)(struct snd_soc_codec *, unsigned int);
 	int (*write)(struct snd_soc_codec *, unsigned int, unsigned int);
 

commit d1021c88526273644a711d481fd1117a67b6ae20
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue May 8 03:18:38 2018 +0000

    ASoC: remove codec reg_cache
    
    Codec reg_cache is legacy feature, almost all driver are now using
    common regmap, and very few driver had been used this legacy feature.
    Because of this background, it is now implemented on each
    driver internally now.
    So now, no one is using codec reg_cache. Let's remove it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 0e1cb847f8f8..7233d3a206b2 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -471,8 +471,6 @@ int devm_snd_soc_register_component(struct device *dev,
 void snd_soc_unregister_component(struct device *dev);
 struct snd_soc_component *snd_soc_lookup_component(struct device *dev,
 						   const char *driver_name);
-int snd_soc_cache_init(struct snd_soc_codec *codec);
-int snd_soc_cache_exit(struct snd_soc_codec *codec);
 
 int soc_new_pcm(struct snd_soc_pcm_runtime *rtd, int num);
 #ifdef CONFIG_SND_SOC_COMPRESS
@@ -904,7 +902,6 @@ struct snd_soc_component {
 	int (*init)(struct snd_soc_component *component);
 
 #ifdef CONFIG_DEBUG_FS
-	void (*init_debugfs)(struct snd_soc_component *component);
 	const char *debugfs_prefix;
 #endif
 };
@@ -928,12 +925,6 @@ struct snd_soc_codec {
 
 	struct list_head list;
 
-	/* runtime */
-	unsigned int cache_init:1; /* codec cache has been initialized */
-
-	/* codec IO */
-	void *reg_cache;
-
 	/* component */
 	struct snd_soc_component component;
 };
@@ -960,10 +951,6 @@ struct snd_soc_codec_driver {
 	struct regmap *(*get_regmap)(struct device *);
 	unsigned int (*read)(struct snd_soc_codec *, unsigned int);
 	int (*write)(struct snd_soc_codec *, unsigned int, unsigned int);
-	unsigned int reg_cache_size;
-	short reg_cache_step;
-	short reg_word_size;
-	const void *reg_cache_default;
 
 	/* codec bias level */
 	int (*set_bias_level)(struct snd_soc_codec *,

commit 81da8a0b7975c51db482acee750a2dbcb320b97d
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue May 8 03:18:11 2018 +0000

    ASoC: remove codec hw_write/control_data
    
    No one is using codec hw_write/control_data any more.
    Let's remove these.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 9ea99e5d3c8e..0e1cb847f8f8 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -932,8 +932,6 @@ struct snd_soc_codec {
 	unsigned int cache_init:1; /* codec cache has been initialized */
 
 	/* codec IO */
-	void *control_data; /* codec control (i2c/3wire) data */
-	hw_write_t hw_write;
 	void *reg_cache;
 
 	/* component */

commit ef050bece1b5564b2c7135ceadc0d5ffdcf152f7
Author: Charles Keepax <ckeepax@opensource.cirrus.com>
Date:   Tue Apr 24 16:39:02 2018 +0100

    ASoC: Remove platform code now everything is componentised
    
    As all drivers have been moved over to the new generic component
    code remove the now unused platform specific code.
    
    Signed-off-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Acked-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index ad266d7e9553..9ea99e5d3c8e 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -401,9 +401,7 @@ struct snd_soc_ops;
 struct snd_soc_pcm_runtime;
 struct snd_soc_dai;
 struct snd_soc_dai_driver;
-struct snd_soc_platform;
 struct snd_soc_dai_link;
-struct snd_soc_platform_driver;
 struct snd_soc_codec;
 struct snd_soc_codec_driver;
 struct snd_soc_component;
@@ -455,15 +453,6 @@ static inline int snd_soc_resume(struct device *dev)
 }
 #endif
 int snd_soc_poweroff(struct device *dev);
-int snd_soc_register_platform(struct device *dev,
-		const struct snd_soc_platform_driver *platform_drv);
-int devm_snd_soc_register_platform(struct device *dev,
-		const struct snd_soc_platform_driver *platform_drv);
-void snd_soc_unregister_platform(struct device *dev);
-int snd_soc_add_platform(struct device *dev, struct snd_soc_platform *platform,
-		const struct snd_soc_platform_driver *platform_drv);
-void snd_soc_remove_platform(struct snd_soc_platform *platform);
-struct snd_soc_platform *snd_soc_lookup_platform(struct device *dev);
 int snd_soc_register_codec(struct device *dev,
 		const struct snd_soc_codec_driver *codec_drv,
 		struct snd_soc_dai_driver *dai_drv, int num_dai);
@@ -485,10 +474,6 @@ struct snd_soc_component *snd_soc_lookup_component(struct device *dev,
 int snd_soc_cache_init(struct snd_soc_codec *codec);
 int snd_soc_cache_exit(struct snd_soc_codec *codec);
 
-int snd_soc_platform_read(struct snd_soc_platform *platform,
-					unsigned int reg);
-int snd_soc_platform_write(struct snd_soc_platform *platform,
-					unsigned int reg, unsigned int val);
 int soc_new_pcm(struct snd_soc_pcm_runtime *rtd, int num);
 #ifdef CONFIG_SND_SOC_COMPRESS
 int snd_soc_new_compress(struct snd_soc_pcm_runtime *rtd, int num);
@@ -628,8 +613,6 @@ int snd_soc_add_component_controls(struct snd_soc_component *component,
 	const struct snd_kcontrol_new *controls, unsigned int num_controls);
 int snd_soc_add_codec_controls(struct snd_soc_codec *codec,
 	const struct snd_kcontrol_new *controls, unsigned int num_controls);
-int snd_soc_add_platform_controls(struct snd_soc_platform *platform,
-	const struct snd_kcontrol_new *controls, unsigned int num_controls);
 int snd_soc_add_card_controls(struct snd_soc_card *soc_card,
 	const struct snd_kcontrol_new *controls, int num_controls);
 int snd_soc_add_dai_controls(struct snd_soc_dai *dai,
@@ -996,39 +979,12 @@ struct snd_soc_codec_driver {
 	bool ignore_pmdown_time;  /* Doesn't benefit from pmdown delay */
 };
 
-/* SoC platform interface */
-struct snd_soc_platform_driver {
-
-	int (*probe)(struct snd_soc_platform *);
-	int (*remove)(struct snd_soc_platform *);
-	struct snd_soc_component_driver component_driver;
-
-	/* pcm creation and destruction */
-	int (*pcm_new)(struct snd_soc_pcm_runtime *);
-	void (*pcm_free)(struct snd_pcm *);
-
-	/* platform stream pcm ops */
-	const struct snd_pcm_ops *ops;
-
-	/* platform stream compress ops */
-	const struct snd_compr_ops *compr_ops;
-};
-
 struct snd_soc_dai_link_component {
 	const char *name;
 	struct device_node *of_node;
 	const char *dai_name;
 };
 
-struct snd_soc_platform {
-	struct device *dev;
-	const struct snd_soc_platform_driver *driver;
-
-	struct list_head list;
-
-	struct snd_soc_component component;
-};
-
 struct snd_soc_dai_link {
 	/* config - must be set by machine driver */
 	const char *name;			/* Codec name */
@@ -1277,7 +1233,6 @@ struct snd_soc_pcm_runtime {
 	struct snd_pcm *pcm;
 	struct snd_compr *compr;
 	struct snd_soc_codec *codec;
-	struct snd_soc_platform *platform; /* will be removed */
 	struct snd_soc_dai *codec_dai;
 	struct snd_soc_dai *cpu_dai;
 
@@ -1358,19 +1313,6 @@ static inline struct snd_soc_codec *snd_soc_component_to_codec(
 	return container_of(component, struct snd_soc_codec, component);
 }
 
-/**
- * snd_soc_component_to_platform() - Casts a component to the platform it is embedded in
- * @component: The component to cast to a platform
- *
- * This function must only be used on components that are known to be platforms.
- * Otherwise the behavior is undefined.
- */
-static inline struct snd_soc_platform *snd_soc_component_to_platform(
-	struct snd_soc_component *component)
-{
-	return container_of(component, struct snd_soc_platform, component);
-}
-
 /**
  * snd_soc_dapm_to_component() - Casts a DAPM context to the component it is
  *  embedded in
@@ -1399,20 +1341,6 @@ static inline struct snd_soc_codec *snd_soc_dapm_to_codec(
 	return snd_soc_component_to_codec(snd_soc_dapm_to_component(dapm));
 }
 
-/**
- * snd_soc_dapm_to_platform() - Casts a DAPM context to the platform it is
- *  embedded in
- * @dapm: The DAPM context to cast to the platform.
- *
- * This function must only be used on DAPM contexts that are known to be part of
- * a platform (e.g. in a platform driver). Otherwise the behavior is undefined.
- */
-static inline struct snd_soc_platform *snd_soc_dapm_to_platform(
-	struct snd_soc_dapm_context *dapm)
-{
-	return snd_soc_component_to_platform(snd_soc_dapm_to_component(dapm));
-}
-
 /**
  * snd_soc_component_get_dapm() - Returns the DAPM context associated with a
  *  component
@@ -1673,17 +1601,6 @@ static inline void *snd_soc_codec_get_drvdata(struct snd_soc_codec *codec)
 	return snd_soc_component_get_drvdata(&codec->component);
 }
 
-static inline void snd_soc_platform_set_drvdata(struct snd_soc_platform *platform,
-		void *data)
-{
-	snd_soc_component_set_drvdata(&platform->component, data);
-}
-
-static inline void *snd_soc_platform_get_drvdata(struct snd_soc_platform *platform)
-{
-	return snd_soc_component_get_drvdata(&platform->component);
-}
-
 static inline void snd_soc_initialize_card_lists(struct snd_soc_card *card)
 {
 	INIT_LIST_HEAD(&card->widgets);
@@ -1746,9 +1663,9 @@ static inline bool snd_soc_codec_is_active(struct snd_soc_codec *codec)
  * @kcontrol: The control for which to get the component
  *
  * Note: This function will work correctly if the control has been registered
- * for a component. Either with snd_soc_add_codec_controls() or
- * snd_soc_add_platform_controls() or via  table based setup for either a
- * CODEC, a platform or component driver. Otherwise the behavior is undefined.
+ * for a component. With snd_soc_add_codec_controls() or via table based
+ * setup for either a CODEC or component driver. Otherwise the behavior is
+ * undefined.
  */
 static inline struct snd_soc_component *snd_soc_kcontrol_component(
 	struct snd_kcontrol *kcontrol)
@@ -1770,20 +1687,6 @@ static inline struct snd_soc_codec *snd_soc_kcontrol_codec(
 	return snd_soc_component_to_codec(snd_soc_kcontrol_component(kcontrol));
 }
 
-/**
- * snd_soc_kcontrol_platform() - Returns the platform that registered the control
- * @kcontrol: The control for which to get the platform
- *
- * Note: This function will only work correctly if the control has been
- * registered with snd_soc_add_platform_controls() or via table based setup of
- * a snd_soc_platform_driver. Otherwise the behavior is undefined.
- */
-static inline struct snd_soc_platform *snd_soc_kcontrol_platform(
-	struct snd_kcontrol *kcontrol)
-{
-	return snd_soc_component_to_platform(snd_soc_kcontrol_component(kcontrol));
-}
-
 int snd_soc_util_init(void);
 void snd_soc_util_exit(void);
 

commit 291bfb928863d496e25c785e132a8fbfb32341a8
Author: Mark Brown <broonie@kernel.org>
Date:   Thu Apr 19 12:14:10 2018 +0100

    ASoC: topology: Revert recent changes while boot errors are investigated
    
    Krzysztof Kozlowski reported a NULL dereference in _instantiate_card()
    on Odroid XU3 and XU boards which he bisected to 45f8cb57da0d7 (ASoC:
    core: Allow topology to override machine driver FE DAI link config).
    Revert that commit for now, along with f11a5c27f928 (ASoC: core: Add
    name prefix for machines with topology rewrites) due to dependency
    issues, in order to keep things booting cleanly in -next.
    
    Reported-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 3676d0a8f532..ad266d7e9553 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1012,14 +1012,6 @@ struct snd_soc_platform_driver {
 
 	/* platform stream compress ops */
 	const struct snd_compr_ops *compr_ops;
-
-	/* this platform uses topology and ignore machine driver FEs */
-	const char *ignore_machine;
-	const char *topology_name_prefix;
-	int (*be_hw_params_fixup)(struct snd_soc_pcm_runtime *rtd,
-				  struct snd_pcm_hw_params *params);
-	bool use_dai_pcm_id;	/* use the DAI link PCM ID as PCM device number */
-	int be_pcm_base;	/* base device ID for all BE PCMs */
 };
 
 struct snd_soc_dai_link_component {
@@ -1126,9 +1118,6 @@ struct snd_soc_dai_link {
 	/* pmdown_time is ignored at stop */
 	unsigned int ignore_pmdown_time:1;
 
-	/* Do not create a PCM for this DAI link (Backend link) */
-	unsigned int ignore:1;
-
 	struct list_head list; /* DAI link list of the soc card */
 	struct snd_soc_dobj dobj; /* For topology */
 };
@@ -1168,7 +1157,6 @@ struct snd_soc_card {
 	const char *long_name;
 	const char *driver_name;
 	char dmi_longname[80];
-	char topology_shortname[32];
 
 	struct device *dev;
 	struct snd_card *snd_card;

commit f11a5c27f9287cacad74af31cd92d4413eccc05a
Author: Liam Girdwood <liam.r.girdwood@linux.intel.com>
Date:   Tue Mar 27 14:30:41 2018 +0100

    ASoC: core: Add name prefix for machines with topology rewrites
    
    Signed-off-by: Liam Girdwood <liam.r.girdwood@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index fac4ff04fb7d..3676d0a8f532 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1015,6 +1015,7 @@ struct snd_soc_platform_driver {
 
 	/* this platform uses topology and ignore machine driver FEs */
 	const char *ignore_machine;
+	const char *topology_name_prefix;
 	int (*be_hw_params_fixup)(struct snd_soc_pcm_runtime *rtd,
 				  struct snd_pcm_hw_params *params);
 	bool use_dai_pcm_id;	/* use the DAI link PCM ID as PCM device number */
@@ -1167,6 +1168,7 @@ struct snd_soc_card {
 	const char *long_name;
 	const char *driver_name;
 	char dmi_longname[80];
+	char topology_shortname[32];
 
 	struct device *dev;
 	struct snd_card *snd_card;

commit 45f8cb57da0d7a9ead4b39d7f5def333a5b0c08b
Author: Liam Girdwood <liam.r.girdwood@linux.intel.com>
Date:   Tue Mar 27 14:30:40 2018 +0100

    ASoC: core: Allow topology to override machine driver FE DAI link config.
    
    Machine drivers statically define a number of DAI links that currently
    cannot be changed or removed by topology. This means PCMs and platform
    components cannot be changed by topology at runtime AND machine drivers
    are tightly coupled to topology.
    
    This patch allows topology to override the machine driver DAI link config
    in order to reuse machine drivers with different topologies and platform
    components. The patch supports :-
    
    1) create new FE PCMs with a topology defined PCM ID.
    2) destroy existing static FE PCMs
    3) change the platform component driver.
    4) assign any new HW params fixups.
    
    The patch requires no changes to the machine drivers, but does add some
    platform component flags that the platform component driver can assign
    before loading topologies.
    
    Signed-off-by: Liam Girdwood <liam.r.girdwood@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index ad266d7e9553..fac4ff04fb7d 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1012,6 +1012,13 @@ struct snd_soc_platform_driver {
 
 	/* platform stream compress ops */
 	const struct snd_compr_ops *compr_ops;
+
+	/* this platform uses topology and ignore machine driver FEs */
+	const char *ignore_machine;
+	int (*be_hw_params_fixup)(struct snd_soc_pcm_runtime *rtd,
+				  struct snd_pcm_hw_params *params);
+	bool use_dai_pcm_id;	/* use the DAI link PCM ID as PCM device number */
+	int be_pcm_base;	/* base device ID for all BE PCMs */
 };
 
 struct snd_soc_dai_link_component {
@@ -1118,6 +1125,9 @@ struct snd_soc_dai_link {
 	/* pmdown_time is ignored at stop */
 	unsigned int ignore_pmdown_time:1;
 
+	/* Do not create a PCM for this DAI link (Backend link) */
+	unsigned int ignore:1;
+
 	struct list_head list; /* DAI link list of the soc card */
 	struct snd_soc_dobj dobj; /* For topology */
 };

commit cce67af3b85047c4c77de3183d08ddc92417a121
Merge: 848272e9a38e 5783994b9afa aeb90fd2e1cb 6aa89ef38d71 683adc821182 89cea5c9a9f3
Author: Mark Brown <broonie@kernel.org>
Date:   Wed Mar 28 10:28:30 2018 +0800

    Merge remote-tracking branches 'asoc/topic/88pm860x', 'asoc/topic/ab8500', 'asoc/topic/ac97', 'asoc/topic/ad1836' and 'asoc/topic/ad193x' into asoc-next

commit 946857636d279486eaa47c930930185631f28fce
Author: Sylwester Nawrocki <s.nawrocki@samsung.com>
Date:   Fri Mar 9 18:48:54 2018 +0100

    ASoC: Add snd_soc_of_put_dai_link_codecs() helper function
    
    The code for dereferencing device nodes in the 'codecs' array is moved
    to a separate function so we can avoid open coding that in drivers.
    
    Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 747fd583b9dc..4a387f0b3d56 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1807,6 +1807,7 @@ int snd_soc_of_get_dai_name(struct device_node *of_node,
 int snd_soc_of_get_dai_link_codecs(struct device *dev,
 				   struct device_node *of_node,
 				   struct snd_soc_dai_link *dai_link);
+void snd_soc_of_put_dai_link_codecs(struct snd_soc_dai_link *dai_link);
 
 int snd_soc_add_dai_link(struct snd_soc_card *card,
 				struct snd_soc_dai_link *dai_link);

commit c95869e5c04fb0000370e7310dc892b417b8128a
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Jan 29 02:58:25 2018 +0000

    ASoC: ac97: replace codec to component
    
    Now we can replace Codec to Component. Let's do it.
    
    Note:
            xxx_codec_xxx()         ->      xxx_component_xxx()
            .idle_bias_off = 0      ->      .idle_bias_on = 1
            .ignore_pmdown_time = 0 ->      .use_pmdown_time = 1
            -                       ->      .endianness = 1
            -                       ->      .non_legacy_dai_naming = 1
    
    To keep compatibilty, this patch adds snd_soc_xxx_ac97_codec()
    macro. These will be removed when all codec code was removed.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 747fd583b9dc..6a11b0239f74 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -586,10 +586,17 @@ int snd_soc_test_bits(struct snd_soc_codec *codec, unsigned int reg,
 				unsigned int mask, unsigned int value);
 
 #ifdef CONFIG_SND_SOC_AC97_BUS
-struct snd_ac97 *snd_soc_alloc_ac97_codec(struct snd_soc_codec *codec);
-struct snd_ac97 *snd_soc_new_ac97_codec(struct snd_soc_codec *codec,
+#define snd_soc_alloc_ac97_codec(codec) \
+	snd_soc_alloc_ac97_component(&codec->component)
+#define snd_soc_new_ac97_codec(codec, id, id_mask) \
+	snd_soc_new_ac97_component(&codec->component, id, id_mask)
+#define snd_soc_free_ac97_codec(ac97) \
+	snd_soc_free_ac97_component(ac97)
+
+struct snd_ac97 *snd_soc_alloc_ac97_component(struct snd_soc_component *component);
+struct snd_ac97 *snd_soc_new_ac97_component(struct snd_soc_component *component,
 	unsigned int id, unsigned int id_mask);
-void snd_soc_free_ac97_codec(struct snd_ac97 *ac97);
+void snd_soc_free_ac97_component(struct snd_ac97 *ac97);
 
 int snd_soc_set_ac97_ops(struct snd_ac97_bus_ops *ops);
 int snd_soc_set_ac97_ops_of_reset(struct snd_ac97_bus_ops *ops,

commit 171248777a402f1d95b9f5d5928fe86514182224
Merge: 535b218a7fc7 180cad3c58ac dc2a17f4f074 72c3818411e5 fde7f9dbc713 edefc8f387a8
Author: Mark Brown <broonie@kernel.org>
Date:   Wed Feb 7 11:25:44 2018 +0000

    Merge remote-tracking branches 'asoc/topic/max98373', 'asoc/topic/mtk', 'asoc/topic/pcm', 'asoc/topic/rockchip' and 'asoc/topic/sam9g20_wm8731' into asoc-next

commit 535b218a7fc7f2918d54fe00e6d7ac385ced3502
Merge: 008a03c0cfac 03bbf9f5e4eb 971da24c48a9 35b84bf0614a f7f61e08fe58
Author: Mark Brown <broonie@kernel.org>
Date:   Wed Feb 7 11:25:41 2018 +0000

    Merge remote-tracking branches 'asoc/topic/ak4613', 'asoc/topic/core', 'asoc/topic/dmic' and 'asoc/topic/intel' into asoc-next

commit 72c3818411e5418834472e3edadcf04cfacb1274
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Jan 19 05:21:19 2018 +0000

    ASoC: soc-pcm: rename .pmdown_time to .use_pmdown_time for Component
    
    commit fbb16563c6c2 ("ASoC: snd_soc_component_driver has pmdown_time")
    added new .pmdown_time which is for inverted version of current
    .ignore_pmdown_time
    But it is confusable name. Let's rename it to .use_pmdown_time
    
    Reported-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 1a7323238c49..812ae4faf559 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -836,7 +836,7 @@ struct snd_soc_component_driver {
 	/* bits */
 	unsigned int idle_bias_on:1;
 	unsigned int suspend_bias_off:1;
-	unsigned int pmdown_time:1; /* care pmdown_time at stop */
+	unsigned int use_pmdown_time:1; /* care pmdown_time at stop */
 	unsigned int endianness:1;
 	unsigned int non_legacy_dai_naming:1;
 };

commit d0ff8ba57d9654e6f7a2e18f192bac3b93268fef
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Jan 16 02:00:59 2018 +0000

    ASoC: add Component level .read/.write
    
    In current ALSA SoC, Codec only has .read/.write callback.
    Codec will be merged into Component in next generation ALSA SoC,
    thus current Codec specific feature need to be merged into it.
    This is glue patch for it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 1a7323238c49..6e865c2bcffe 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -802,6 +802,9 @@ struct snd_soc_component_driver {
 	int (*suspend)(struct snd_soc_component *);
 	int (*resume)(struct snd_soc_component *);
 
+	unsigned int (*read)(struct snd_soc_component *, unsigned int);
+	int (*write)(struct snd_soc_component *, unsigned int, unsigned int);
+
 	/* pcm creation and destruction */
 	int (*pcm_new)(struct snd_soc_pcm_runtime *);
 	void (*pcm_free)(struct snd_pcm *);

commit da7b34f80edfd7fe81ca6d13ab5493e559e01e8b
Merge: c966b3cc435c 392b79e20b41 4855f6a6283f d43c17daf277 df532185e872 8d6fb0bce202
Author: Mark Brown <broonie@kernel.org>
Date:   Fri Jan 12 12:29:05 2018 +0000

    Merge remote-tracking branches 'asoc/topic/da7218', 'asoc/topic/dai-drv', 'asoc/topic/davinci', 'asoc/topic/disconnect' and 'asoc/topic/ep93xx' into asoc-next

commit 4855f6a6283fc8ea1f79c9f49c91940afef64ef6
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Wed Dec 20 01:48:44 2017 +0000

    ASoC: soc.h: Arrange DAI related parameter
    
    "dai_list" and "num_dai" on snd_soc_component are related
    parameter. Let's arrange these.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 871e1fabd701..be6b462e2c01 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -858,11 +858,10 @@ struct snd_soc_component {
 	struct list_head card_aux_list; /* for auxiliary bound components */
 	struct list_head card_list;
 
-	int num_dai;
-
 	const struct snd_soc_component_driver *driver;
 
 	struct list_head dai_list;
+	int num_dai;
 
 	int (*read)(struct snd_soc_component *, unsigned int, unsigned int *);
 	int (*write)(struct snd_soc_component *, unsigned int, unsigned int);

commit 58bf4179000a37aa9b0ee9ab2796f7573c77fff0
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Wed Dec 20 01:48:29 2017 +0000

    ASoC: soc-core: remove dai_drv from snd_soc_component
    
    ALSA SoC has some duplicate parameter.
    snd_soc_component::dai_drv is one of them.
    
    Each DAI is keeping its driver as snd_soc_dai::driver,
    and component has dai_list.
    This means, we can reach to each DAI and its driver by using dai_link.
    Thus, there is no need to keep DAI driver pointer on component.
    Let's remove it
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 1a7323238c49..871e1fabd701 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -858,7 +858,6 @@ struct snd_soc_component {
 	struct list_head card_aux_list; /* for auxiliary bound components */
 	struct list_head card_list;
 
-	struct snd_soc_dai_driver *dai_drv;
 	int num_dai;
 
 	const struct snd_soc_component_driver *driver;

commit ef2e8175eb19011f756469d4d14f4207bf7f289c
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Nov 28 06:27:09 2017 +0000

    ASoC: add snd_soc_disconnect_sync()
    
    Now, we have snd_card_disconnect_sync() on ALSA framework.
    snd_soc_disconnect_sync() is ASoC version of it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 1a7323238c49..22f479e1da0a 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -494,6 +494,8 @@ int soc_new_pcm(struct snd_soc_pcm_runtime *rtd, int num);
 int snd_soc_new_compress(struct snd_soc_pcm_runtime *rtd, int num);
 #endif
 
+void snd_soc_disconnect_sync(struct device *dev);
+
 struct snd_pcm_substream *snd_soc_get_dai_substream(struct snd_soc_card *card,
 		const char *dai_link, int stream);
 struct snd_soc_pcm_runtime *snd_soc_get_pcm_runtime(struct snd_soc_card *card,

commit c44ff31ae03c0970e1b3cfe1e37f347865a9dc8b
Merge: bd26974f7148 1c0a7de22666
Author: Mark Brown <broonie@kernel.org>
Date:   Fri Nov 10 21:30:53 2017 +0000

    Merge remote-tracking branch 'asoc/topic/intel' into asoc-next

commit e07bd30bb87f6a6ca1f75fa41df71ff5e7bc6a3f
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Nov 6 01:49:06 2017 +0000

    ASoC: add snd_soc_dapm_kcontrol_component()
    
    snd_soc_dapm_kcontrol_codec() (= for Codec) will be removed soon.
    This patch Component version of it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 4961f4455b65..0668cbd9f0b5 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1524,6 +1524,19 @@ static inline struct snd_soc_codec *snd_soc_dapm_kcontrol_codec(
 	return snd_soc_dapm_to_codec(snd_soc_dapm_kcontrol_dapm(kcontrol));
 }
 
+/**
+ * snd_soc_dapm_kcontrol_component() - Returns the component associated to a kcontrol
+ * @kcontrol: The kcontrol
+ *
+ * This function must only be used on DAPM contexts that are known to be part of
+ * a COMPONENT (e.g. in a COMPONENT driver). Otherwise the behavior is undefined.
+ */
+static inline struct snd_soc_component *snd_soc_dapm_kcontrol_component(
+	struct snd_kcontrol *kcontrol)
+{
+	return snd_soc_dapm_to_component(snd_soc_dapm_kcontrol_dapm(kcontrol));
+}
+
 /* codec IO */
 unsigned int snd_soc_read(struct snd_soc_codec *codec, unsigned int reg);
 int snd_soc_write(struct snd_soc_codec *codec, unsigned int reg,

commit 474db2c9991cc624e7415770c8b80fc7acf40cdd
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Nov 6 01:48:52 2017 +0000

    ASoC: add snd_soc_component_cache_sync()
    
    snd_soc_cache_sync() (= for Codec) will be removed soon.
    This patch Component version of it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index f69b13c4a641..4961f4455b65 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1540,6 +1540,18 @@ static inline int snd_soc_cache_sync(struct snd_soc_codec *codec)
 	return regcache_sync(codec->component.regmap);
 }
 
+/**
+ * snd_soc_component_cache_sync() - Sync the register cache with the hardware
+ * @component: COMPONENT to sync
+ *
+ * Note: This function will call regcache_sync()
+ */
+static inline int snd_soc_component_cache_sync(
+	struct snd_soc_component *component)
+{
+	return regcache_sync(component->regmap);
+}
+
 /* component IO */
 int snd_soc_component_read(struct snd_soc_component *component,
 	unsigned int reg, unsigned int *val);

commit 10e079d9874802c35dc3f51af922531e5423a6bf
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Nov 6 01:48:37 2017 +0000

    ASoC: add snd_soc_component_xxx_bias_level()
    
    snd_soc_codec_xxx_bias_level() (= for Codec) will be removed soon.
    This patch Component version of it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 747588273c96..f69b13c4a641 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1439,6 +1439,21 @@ static inline void snd_soc_codec_init_bias_level(struct snd_soc_codec *codec,
 	snd_soc_dapm_init_bias_level(snd_soc_codec_get_dapm(codec), level);
 }
 
+/**
+ * snd_soc_component_init_bias_level() - Initialize COMPONENT DAPM bias level
+ * @component: The COMPONENT for which to initialize the DAPM bias level
+ * @level: The DAPM level to initialize to
+ *
+ * Initializes the COMPONENT DAPM bias level. See snd_soc_dapm_init_bias_level().
+ */
+static inline void
+snd_soc_component_init_bias_level(struct snd_soc_component *component,
+				  enum snd_soc_bias_level level)
+{
+	snd_soc_dapm_init_bias_level(
+		snd_soc_component_get_dapm(component), level);
+}
+
 /**
  * snd_soc_dapm_get_bias_level() - Get current CODEC DAPM bias level
  * @codec: The CODEC for which to get the DAPM bias level
@@ -1451,6 +1466,19 @@ static inline enum snd_soc_bias_level snd_soc_codec_get_bias_level(
 	return snd_soc_dapm_get_bias_level(snd_soc_codec_get_dapm(codec));
 }
 
+/**
+ * snd_soc_component_get_bias_level() - Get current COMPONENT DAPM bias level
+ * @component: The COMPONENT for which to get the DAPM bias level
+ *
+ * Returns: The current DAPM bias level of the COMPONENT.
+ */
+static inline enum snd_soc_bias_level
+snd_soc_component_get_bias_level(struct snd_soc_component *component)
+{
+	return snd_soc_dapm_get_bias_level(
+		snd_soc_component_get_dapm(component));
+}
+
 /**
  * snd_soc_codec_force_bias_level() - Set the CODEC DAPM bias level
  * @codec: The CODEC for which to set the level
@@ -1466,6 +1494,23 @@ static inline int snd_soc_codec_force_bias_level(struct snd_soc_codec *codec,
 		level);
 }
 
+/**
+ * snd_soc_component_force_bias_level() - Set the COMPONENT DAPM bias level
+ * @component: The COMPONENT for which to set the level
+ * @level: The level to set to
+ *
+ * Forces the COMPONENT bias level to a specific state. See
+ * snd_soc_dapm_force_bias_level().
+ */
+static inline int
+snd_soc_component_force_bias_level(struct snd_soc_component *component,
+				   enum snd_soc_bias_level level)
+{
+	return snd_soc_dapm_force_bias_level(
+		snd_soc_component_get_dapm(component),
+		level);
+}
+
 /**
  * snd_soc_dapm_kcontrol_codec() - Returns the codec associated to a kcontrol
  * @kcontrol: The kcontrol

commit 738b49efe6c6ba485e2b45265db535c58bbd54e7
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Nov 6 01:48:19 2017 +0000

    ASoC: add snd_soc_component_read32
    
    Current codec drivers are using snd_soc_read(). It will be replaced
    into snd_soc_component_read(), but these 2 are using different style.
    For example, it will be
    
            - val = snd_soc_read(xxx, reg);
            + ret = snd_soc_component_read(xxx, reg, &val);
            + if (ret < 0) {
            +       ...
            + }
    
    To more smooth replace, let's add snd_soc_component_read32
    which is copied from snd_soc_read()
    
            - val = snd_soc_read(xxx, reg);
            + val = snd_soc_component_read32(xxx, reg);
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 6c808527a4f6..747588273c96 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1498,6 +1498,8 @@ static inline int snd_soc_cache_sync(struct snd_soc_codec *codec)
 /* component IO */
 int snd_soc_component_read(struct snd_soc_component *component,
 	unsigned int reg, unsigned int *val);
+unsigned int snd_soc_component_read32(struct snd_soc_component *component,
+				      unsigned int reg);
 int snd_soc_component_write(struct snd_soc_component *component,
 	unsigned int reg, unsigned int val);
 int snd_soc_component_update_bits(struct snd_soc_component *component,

commit 69941bab7c7aeaa7bf7e84397e294c17f0b7c6df
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Wed Oct 11 01:38:51 2017 +0000

    ASoC: snd_soc_component_driver has non_legacy_dai_naming
    
    Codec will be replaced into Component, then Codec side
    doesn't use legacy_dai_naming on snd_soc_register_dais().
    
    This patch adds new non_legacy_dai_naming flag on Component driver
    and use converted its value for snd_soc_register_dais().
    
    When Codec is replaced into Component, Codec driver needs
    to have non_legacy_dai_naming = 1 flags.
    Existing CPU side of course doesn't have this flag, thus CPU calls
    it as true.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 747d080a0853..6c808527a4f6 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -838,6 +838,7 @@ struct snd_soc_component_driver {
 	unsigned int suspend_bias_off:1;
 	unsigned int pmdown_time:1; /* care pmdown_time at stop */
 	unsigned int endianness:1;
+	unsigned int non_legacy_dai_naming:1;
 };
 
 struct snd_soc_component {

commit 273d778ef38a8861f880e9df5799029dc82bd55d
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Wed Oct 11 01:38:29 2017 +0000

    ASoC: snd_soc_component_driver has endianness
    
    Codec will be replaced into Component, then Codec side only
    needs to call fixup_codec_formats() at this point.
    
    This patch adds new endianness flag on Component driver
    and call convert_endianness_formats() (= was fixup_codec_format())
    if endianness was true.
    
    When Codec is replaced into Component, Codec driver needs
    to have endianness = 1 flags.
    Existing CPU side of course doesn't have this flag, thus CPU doesn't
    call it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 44fab951b686..747d080a0853 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -837,6 +837,7 @@ struct snd_soc_component_driver {
 	unsigned int idle_bias_on:1;
 	unsigned int suspend_bias_off:1;
 	unsigned int pmdown_time:1; /* care pmdown_time at stop */
+	unsigned int endianness:1;
 };
 
 struct snd_soc_component {

commit fbb16563c6c2b7fc4944adc49f93c1dc6fe25770
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Wed Oct 11 01:38:08 2017 +0000

    ASoC: snd_soc_component_driver has pmdown_time
    
    Current snd_soc_runtime_ignore_pmdown_time() tallys all Codec and
    CPU's "ignore_pmdown_time". Now, CPU (= via compoent)
    ignore_pmdown_time is fixed as "true". Codec's one is copied from Codec
    driver. This means Codec side default is "false".
    
    Current all Codec driver will be replaced into Component, thus, we can
    use for_each_rtdcom() for this totalization. This patch adds new
    "pmdown_time" on Component driver. Its inverted value will be used
    for this "ignore" totalizaton.
    
    Of course all existing Component driver doesn't have its settings now,
    thus, all existing "pmdown_time" is "false". This means all
    Components will ignore pmdown time. This is current CPU behavior.
    To keep compatibility, snd_soc_runtime_ignore_pmdown_time() totalize
    Component's inverted "pmdown_time" (= total will be true) and
    Codec's "ignore_pmdown_time" (= depends on Codec driver settings).
    Because It is using AND operation, its result is based on Codec driver
    settings only.
    This means this operation can keep compatibility and doesn't have
    nonconformity.
    
    When we replace Codec to Component, the driver which has
    ".ignore_pmdown_time = true" will be just removed,
    and the driver which doesn't have it will have new
    ".pmdown_time = true".
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index ae0a27fdc016..44fab951b686 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -836,6 +836,7 @@ struct snd_soc_component_driver {
 	/* bits */
 	unsigned int idle_bias_on:1;
 	unsigned int suspend_bias_off:1;
+	unsigned int pmdown_time:1; /* care pmdown_time at stop */
 };
 
 struct snd_soc_component {

commit 9e7e3738ab0e908c72dae4ff45481a0568924e62
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Wed Oct 11 01:37:45 2017 +0000

    ASoC: snd_soc_component_driver has snd_compr_ops
    
    Platform will be replaced into Component in the future.
    snd_soc_platform_driver has snd_compr_ops, but snd_soc_component_driver
    doesn't have. To prepare for replacing, this patch adds snd_compr_ops on
    component driver.
    
    platform will be replaced into component, and its code will be removed.
    But during replacing, both platform and component process code exists.
    To keep compatibility, to avoid platform NULL access and to avoid
    platform/component duplicate operation during replacing process, this
    patch has such code. Some of this code will be removed when platform was
    removed.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 2acb56673bab..ae0a27fdc016 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -827,6 +827,7 @@ struct snd_soc_component_driver {
 			      enum snd_soc_bias_level level);
 
 	const struct snd_pcm_ops *ops;
+	const struct snd_compr_ops *compr_ops;
 
 	/* probe ordering - for components with runtime dependencies */
 	int probe_order;

commit b8135864d4d33d0c35516ec758b9b73226935c5d
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Wed Oct 11 01:37:23 2017 +0000

    ASoC: snd_soc_component_driver has snd_pcm_ops
    
    Platform will be replaced into Component in the future.
    snd_soc_platform_driver has snd_pcm_ops, but snd_soc_component_driver
    doesn't have it. To prepare for replacing, this patch adds snd_pcm_ops
    on component driver.
    
    platform will be replaced into component, and its code will be removed.
    But during replacing, both platform and component process code exists.
    To keep compatibility, to avoid platform NULL access and to avoid
    platform/component duplicate operation during replacing process, this
    patch has such code. Some of this code will be removed when platform was
    removed.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index eea3007a28f1..2acb56673bab 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -826,6 +826,8 @@ struct snd_soc_component_driver {
 	int (*set_bias_level)(struct snd_soc_component *component,
 			      enum snd_soc_bias_level level);
 
+	const struct snd_pcm_ops *ops;
+
 	/* probe ordering - for components with runtime dependencies */
 	int probe_order;
 	int remove_order;

commit 7c761b593e2c1dc6bc6c0c15ec338af1f00cabd7
Author: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Date:   Thu Oct 12 18:38:02 2017 -0500

    ASoC: Add helper to find codec_dai from dai_name
    
    Create a helper function to remove duplicate code used in machine drivers
    
    Suggested-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Acked-by: Liam Girdwood <liam.r.girdwood@linux.intel.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index d22de9712c45..deacbafbae17 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1720,6 +1720,20 @@ struct snd_soc_dai *snd_soc_find_dai(
 
 #include <sound/soc-dai.h>
 
+static inline
+struct snd_soc_dai *snd_soc_card_get_codec_dai(struct snd_soc_card *card,
+					       const char *dai_name)
+{
+	struct snd_soc_pcm_runtime *rtd;
+
+	list_for_each_entry(rtd, &card->rtd_list, list) {
+		if (!strcmp(rtd->codec_dai->name, dai_name))
+			return rtd->codec_dai;
+	}
+
+	return NULL;
+}
+
 #ifdef CONFIG_DEBUG_FS
 extern struct dentry *snd_soc_debugfs_root;
 #endif

commit d7346278ccb0fd839240d916e45851227e7ef9f4
Merge: 7dd5d0d95461 e0dac41b8c21
Author: Mark Brown <broonie@kernel.org>
Date:   Tue Oct 10 10:23:08 2017 +0100

    Merge branch 'topic/component' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound into asoc-core

commit e0dac41b8c21d41534b04d520c1927c2b0ac9b5e
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Oct 2 05:10:17 2017 +0000

    ASoC: soc-core: add snd_soc_add_component()
    
    ALSA SoC platform/codec will be replaced to component soon.
    But, some function exist in "platform" doesn't exist in "component".
    Current soc-core has snd_soc_register_component(), but
    doesn't have snd_soc_add_component() like snd_soc_add_platform().
    This patch adds it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 996bdbc125a5..580da1e4f141 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -468,6 +468,11 @@ int snd_soc_register_codec(struct device *dev,
 		const struct snd_soc_codec_driver *codec_drv,
 		struct snd_soc_dai_driver *dai_drv, int num_dai);
 void snd_soc_unregister_codec(struct device *dev);
+int snd_soc_add_component(struct device *dev,
+		struct snd_soc_component *component,
+		const struct snd_soc_component_driver *component_driver,
+		struct snd_soc_dai_driver *dai_drv,
+		int num_dai);
 int snd_soc_register_component(struct device *dev,
 			 const struct snd_soc_component_driver *component_driver,
 			 struct snd_soc_dai_driver *dai_drv, int num_dai);

commit 7dd5d0d954611c05a38bdf843054c639f45ce08b
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Oct 2 05:09:52 2017 +0000

    ASoC: soc-core: add component lookup functions
    
    ALSA SoC platform/codec will be replaced to component soon.
    This means 1 device might have multiple components. But current
    unregister component function only checks "dev" to find it.
    This means, unexpected component might be unregistered by current
    function.
    But, it is no problem if driver registered only 1 component.
    
    To prepare avoid this issue, this patch adds new component
    lookup function. it finds component by "dev" and "driver name".
    
    Here, the reason why it uses "driver name" is that "component name"
    was created by fmt_single_name() and difficult to use it from driver.
    Driver of course knows its "driver name", thus, using it is more easy.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index d776cdee30d7..11ca867033bd 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -475,6 +475,8 @@ int devm_snd_soc_register_component(struct device *dev,
 			 const struct snd_soc_component_driver *component_driver,
 			 struct snd_soc_dai_driver *dai_drv, int num_dai);
 void snd_soc_unregister_component(struct device *dev);
+struct snd_soc_component *snd_soc_lookup_component(struct device *dev,
+						   const char *driver_name);
 int snd_soc_cache_init(struct snd_soc_codec *codec);
 int snd_soc_cache_exit(struct snd_soc_codec *codec);
 

commit 7ba236ce58bd7ac8e360de81f834d9c446f7b063
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Sep 26 01:01:10 2017 +0000

    ASoC: add Component level set_bias_level
    
    In current ALSA SoC, Codec only has set_bias_level feature.
    Codec will be merged into Component in next generation ALSA SoC,
    thus current Codec specific feature need to be merged into it.
    This is glue patch for it.
    
    Codec driver has .idle_bias_off for dapm bias. But Component
    driver doesn't have it, and dapm->idle_bias_off is set as "true".
    To keep compatibility, this patch adds "idle_bias_on" instead of
    ".idle_bias_off" on Component driver.
    dapm->idle_bias_off will be set by inverted idle_bias_on.
    
    When we replace Codec to Component, the driver which has
    ".idle_bias_off = true" is just remove it,
    and the driver which doesn't have it will have new
    ".idle_bias_on = true".
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index c2278614e5bf..d776cdee30d7 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -816,10 +816,16 @@ struct snd_soc_component_driver {
 	void (*seq_notifier)(struct snd_soc_component *, enum snd_soc_dapm_type,
 		int subseq);
 	int (*stream_event)(struct snd_soc_component *, int event);
+	int (*set_bias_level)(struct snd_soc_component *component,
+			      enum snd_soc_bias_level level);
 
 	/* probe ordering - for components with runtime dependencies */
 	int probe_order;
 	int remove_order;
+
+	/* bits */
+	unsigned int idle_bias_on:1;
+	unsigned int suspend_bias_off:1;
 };
 
 struct snd_soc_component {
@@ -885,6 +891,8 @@ struct snd_soc_component {
 		       int source, unsigned int freq_in, unsigned int freq_out);
 	int (*set_jack)(struct snd_soc_component *component,
 			struct snd_soc_jack *jack,  void *data);
+	int (*set_bias_level)(struct snd_soc_component *component,
+			      enum snd_soc_bias_level level);
 
 	/* machine specific init */
 	int (*init)(struct snd_soc_component *component);

commit f523acebbb74f3cf5840d801f2e4856c688bf14a
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Sep 26 01:00:53 2017 +0000

    ASoC: add Component level pcm_new/pcm_free v2
    
    In current ALSA SoC, Platform only has pcm_new/pcm_free feature,
    but it should be supported on Component level. This patch adds it.
    
    The v1 was added commit 99b04f4c4051f7 ("ASoC: add Component level
    pcm_new/pcm_free") but it called all "card" connected component's
    pcm_new/free, it was wrong.
    This patch calls "rtd" connected component.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 996bdbc125a5..c2278614e5bf 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -795,6 +795,10 @@ struct snd_soc_component_driver {
 	int (*suspend)(struct snd_soc_component *);
 	int (*resume)(struct snd_soc_component *);
 
+	/* pcm creation and destruction */
+	int (*pcm_new)(struct snd_soc_pcm_runtime *);
+	void (*pcm_free)(struct snd_pcm *);
+
 	/* component wide operations */
 	int (*set_sysclk)(struct snd_soc_component *component,
 			  int clk_id, int source, unsigned int freq, int dir);
@@ -872,6 +876,8 @@ struct snd_soc_component {
 	void (*remove)(struct snd_soc_component *);
 	int (*suspend)(struct snd_soc_component *);
 	int (*resume)(struct snd_soc_component *);
+	int (*pcm_new)(struct snd_soc_component *, struct snd_soc_pcm_runtime *);
+	void (*pcm_free)(struct snd_soc_component *, struct snd_pcm *);
 
 	int (*set_sysclk)(struct snd_soc_component *component,
 			  int clk_id, int source, unsigned int freq, int dir);

commit 840bc44849b9d7f8eaae34ac7b434e17c4cf7368
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Wed Sep 20 06:08:42 2017 +0000

    ASoC: add missing snd_soc_component_set_jack
    
    commit 44c07365e9e2 ("ASoC: add Component level set_jack") added new
    snd_soc_component_set_jack(), but it didn't add definition on soc.h.
    This patch adds it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index d22de9712c45..996bdbc125a5 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1487,6 +1487,8 @@ int snd_soc_component_set_sysclk(struct snd_soc_component *component,
 int snd_soc_component_set_pll(struct snd_soc_component *component, int pll_id,
 			      int source, unsigned int freq_in,
 			      unsigned int freq_out);
+int snd_soc_component_set_jack(struct snd_soc_component *component,
+			       struct snd_soc_jack *jack, void *data);
 
 #ifdef CONFIG_REGMAP
 

commit 39e0a0ae6957a7eafcd3245f45f40bf822e49812
Merge: 0314f6947c51 88c27465dc7e
Author: Mark Brown <broonie@kernel.org>
Date:   Fri Sep 1 12:12:18 2017 +0100

    Merge remote-tracking branch 'asoc/topic/core' into asoc-next

commit 44c07365e9e2c87c7e04d63293618c391d1480ec
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Thu Aug 24 00:58:07 2017 +0000

    ASoC: add Component level set_jack
    
    In current ALSA SoC, Codec only has set_jack feature.
    Codec will be merged into Component in next generation ALSA SoC,
    thus current Codec specific feature need to be merged into it.
    This is glue patch for it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 23681538c849..feb896815069 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -800,6 +800,8 @@ struct snd_soc_component_driver {
 			  int clk_id, int source, unsigned int freq, int dir);
 	int (*set_pll)(struct snd_soc_component *component, int pll_id,
 		       int source, unsigned int freq_in, unsigned int freq_out);
+	int (*set_jack)(struct snd_soc_component *component,
+			struct snd_soc_jack *jack,  void *data);
 
 	/* DT */
 	int (*of_xlate_dai_name)(struct snd_soc_component *component,
@@ -875,6 +877,8 @@ struct snd_soc_component {
 			  int clk_id, int source, unsigned int freq, int dir);
 	int (*set_pll)(struct snd_soc_component *component, int pll_id,
 		       int source, unsigned int freq_in, unsigned int freq_out);
+	int (*set_jack)(struct snd_soc_component *component,
+			struct snd_soc_jack *jack,  void *data);
 
 	/* machine specific init */
 	int (*init)(struct snd_soc_component *component);

commit ef641e5d5e6c7a07748239036b786a90ba9b9a95
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Thu Aug 24 00:57:51 2017 +0000

    ASoC: add Component level set_pll
    
    In current ALSA SoC, Codec only has set_pll feature.
    Codec will be merged into Component in next generation ALSA SoC,
    thus current Codec specific feature need to be merged into it.
    This is glue patch for it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 813cdb95e049..23681538c849 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -798,6 +798,8 @@ struct snd_soc_component_driver {
 	/* component wide operations */
 	int (*set_sysclk)(struct snd_soc_component *component,
 			  int clk_id, int source, unsigned int freq, int dir);
+	int (*set_pll)(struct snd_soc_component *component, int pll_id,
+		       int source, unsigned int freq_in, unsigned int freq_out);
 
 	/* DT */
 	int (*of_xlate_dai_name)(struct snd_soc_component *component,
@@ -871,6 +873,8 @@ struct snd_soc_component {
 
 	int (*set_sysclk)(struct snd_soc_component *component,
 			  int clk_id, int source, unsigned int freq, int dir);
+	int (*set_pll)(struct snd_soc_component *component, int pll_id,
+		       int source, unsigned int freq_in, unsigned int freq_out);
 
 	/* machine specific init */
 	int (*init)(struct snd_soc_component *component);
@@ -1469,6 +1473,9 @@ int snd_soc_component_test_bits(struct snd_soc_component *component,
 /* component wide operations */
 int snd_soc_component_set_sysclk(struct snd_soc_component *component,
 			int clk_id, int source, unsigned int freq, int dir);
+int snd_soc_component_set_pll(struct snd_soc_component *component, int pll_id,
+			      int source, unsigned int freq_in,
+			      unsigned int freq_out);
 
 #ifdef CONFIG_REGMAP
 

commit 71ccef0df533cd9c8c6cbf1483a636a092088ab9
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Thu Aug 24 00:57:35 2017 +0000

    ASoC: add Component level set_sysclk
    
    In current ALSA SoC, Codec only has set_sysclk feature.
    Codec will be merged into Component in next generation ALSA SoC,
    thus current Codec specific feature need to be merged into it.
    This is glue patch for it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index fbf57ff75958..813cdb95e049 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -795,6 +795,10 @@ struct snd_soc_component_driver {
 	int (*suspend)(struct snd_soc_component *);
 	int (*resume)(struct snd_soc_component *);
 
+	/* component wide operations */
+	int (*set_sysclk)(struct snd_soc_component *component,
+			  int clk_id, int source, unsigned int freq, int dir);
+
 	/* DT */
 	int (*of_xlate_dai_name)(struct snd_soc_component *component,
 				 struct of_phandle_args *args,
@@ -865,6 +869,9 @@ struct snd_soc_component {
 	int (*suspend)(struct snd_soc_component *);
 	int (*resume)(struct snd_soc_component *);
 
+	int (*set_sysclk)(struct snd_soc_component *component,
+			  int clk_id, int source, unsigned int freq, int dir);
+
 	/* machine specific init */
 	int (*init)(struct snd_soc_component *component);
 
@@ -1459,6 +1466,10 @@ void snd_soc_component_async_complete(struct snd_soc_component *component);
 int snd_soc_component_test_bits(struct snd_soc_component *component,
 	unsigned int reg, unsigned int mask, unsigned int value);
 
+/* component wide operations */
+int snd_soc_component_set_sysclk(struct snd_soc_component *component,
+			int clk_id, int source, unsigned int freq, int dir);
+
 #ifdef CONFIG_REGMAP
 
 void snd_soc_component_init_regmap(struct snd_soc_component *component,

commit b388dc1f62a9bdd9c4758a0664e61d0f9a9da519
Merge: 6969b2bae6db cc4a41fe5541
Author: Mark Brown <broonie@kernel.org>
Date:   Wed Aug 30 22:15:31 2017 +0100

    Merge tag 'v4.13-rc7' into asoc-component
    
    Linux 4.13-rc7

commit 6969b2bae6dbe7f277a7c018b66d2f3ad662129f
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Aug 25 00:29:41 2017 +0000

    ASoC: remove duplicate definition of dapm_routes/num_dapm_routes
    
    snd_soc_component and snd_soc_component_driver both have
    dapm_routes/num_dapm_routes, but these are duplicated.
    Let's remove duplicated definition.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 3e0070ed6883..2bcb38045dc1 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -862,8 +862,6 @@ struct snd_soc_component {
 	/* Don't use these, use snd_soc_component_get_dapm() */
 	struct snd_soc_dapm_context dapm;
 
-	const struct snd_soc_dapm_route *dapm_routes;
-	unsigned int num_dapm_routes;
 	struct snd_soc_codec *codec;
 
 	int (*probe)(struct snd_soc_component *);

commit 688d0ebf49a97aa6959aebec5d177a8b821f27d1
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Aug 25 00:29:20 2017 +0000

    ASoC: remove duplicate definition of dapm_widgets/num_dapm_widgets
    
    snd_soc_component and snd_soc_component_driver both have
    dapm_widgets/num_dapm_widgets, but these are duplicated.
    Let's remove duplicated definition.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index e4b4746032ba..3e0070ed6883 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -862,8 +862,6 @@ struct snd_soc_component {
 	/* Don't use these, use snd_soc_component_get_dapm() */
 	struct snd_soc_dapm_context dapm;
 
-	const struct snd_soc_dapm_widget *dapm_widgets;
-	unsigned int num_dapm_widgets;
 	const struct snd_soc_dapm_route *dapm_routes;
 	unsigned int num_dapm_routes;
 	struct snd_soc_codec *codec;

commit b8972bf0521ca7ee3c8d27da0fd101fe648acfc2
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Aug 25 00:29:01 2017 +0000

    ASoC: remove duplicate definition of controls/num_controls
    
    snd_soc_component and snd_soc_component_driver both have
    controls/num_controls, but these are duplicated.
    Let's remove duplicated definition.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index de57a8ad057b..e4b4746032ba 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -862,8 +862,6 @@ struct snd_soc_component {
 	/* Don't use these, use snd_soc_component_get_dapm() */
 	struct snd_soc_dapm_context dapm;
 
-	const struct snd_kcontrol_new *controls;
-	unsigned int num_controls;
 	const struct snd_soc_dapm_widget *dapm_widgets;
 	unsigned int num_dapm_widgets;
 	const struct snd_soc_dapm_route *dapm_routes;

commit 9b56741710c18fe97254d6b0d1ca0ebd7bc699c4
Merge: 42d9653e85b3 f1e3f409d613
Author: Mark Brown <broonie@kernel.org>
Date:   Thu Aug 10 16:56:43 2017 +0100

    Merge branch 'topic/pcm' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound into asoc-core

commit 42d9653e85b386111e729317b9492bfdac1cafbc
Merge: 90be711e23f7 21a035287e28
Author: Mark Brown <broonie@kernel.org>
Date:   Thu Aug 10 16:56:10 2017 +0100

    Merge branch 'topic/component' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound into asoc-core

commit 90be711e23f7c7ee7b3d6a6e5aa7ee9bab321f2e
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Aug 8 06:18:10 2017 +0000

    ASoC: use snd_soc_rtdcom_add() and convert to consistent operation
    
    Basically, current ALSA SoC framework is based on CPU/Codec/Platform,
    but its operation doesn't have consistent.
    Thus, source code was unreadable, and difficult to understand.
    This patch connects each component (= CPU/Codec/Platform) to rtd by
    using snd_soc_rtdcom_add(), and convert uneven operations to consistent
    operation.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Tested-by: Arnaud Pouliquen <arnaud.pouliquen@st.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 87dbe39797ca..82e078151787 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1237,7 +1237,7 @@ struct snd_soc_pcm_runtime {
 	struct snd_pcm *pcm;
 	struct snd_compr *compr;
 	struct snd_soc_codec *codec;
-	struct snd_soc_platform *platform;
+	struct snd_soc_platform *platform; /* will be removed */
 	struct snd_soc_dai *codec_dai;
 	struct snd_soc_dai *cpu_dai;
 

commit a0ac441152238c9b474bafa46940511d9b2e9c7e
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Aug 8 06:17:47 2017 +0000

    ASoC: soc-core: add snd_soc_rtdcom_xxx()
    
    Current snd_soc_pcm_runtime has platform / codec pointers, and we could
    use these specific pointer. But these will be replaced to more generic
    "component" soon, and will need more generic method to get each
    connected component pointer from rtd.
    
    This patch adds new snd_soc_rtdcom_xxx() to connect/disconnect
    component to rtd. It means same as previous "platform" / "codec"
    pointer style, but more generic.
    We can find necessary component pointer from rtd by using component
    driver name on snd_soc_rtdcom_lookup().
    
    Here, the reason why it uses "driver name" is that "component name"
    was created by fmt_single_name() and difficult to use it from driver.
    Driver of course knows its "driver name", thus, using it is more easy.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Tested-by: Arnaud Pouliquen <arnaud.pouliquen@st.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index aad3f14966f1..87dbe39797ca 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -886,6 +886,18 @@ struct snd_soc_component {
 #endif
 };
 
+struct snd_soc_rtdcom_list {
+	struct snd_soc_component *component;
+	struct list_head list; /* rtd::component_list */
+};
+struct snd_soc_component*
+snd_soc_rtdcom_lookup(struct snd_soc_pcm_runtime *rtd,
+		       const char *driver_name);
+#define for_each_rtdcom(rtd, rtdcom) \
+	list_for_each_entry(rtdcom, &(rtd)->component_list, list)
+#define for_each_rtdcom_safe(rtd, rtdcom1, rtdcom2) \
+	list_for_each_entry_safe(rtdcom1, rtdcom2, &(rtd)->component_list, list)
+
 /* SoC Audio Codec device */
 struct snd_soc_codec {
 	struct device *dev;
@@ -1240,6 +1252,7 @@ struct snd_soc_pcm_runtime {
 
 	unsigned int num; /* 0-based and monotonic increasing */
 	struct list_head list; /* rtd list of the soc card */
+	struct list_head component_list; /* list of connected components */
 
 	/* bit field */
 	unsigned int dev_registered:1;

commit cf9e829eaf0195e722bc3a3929002a3fbe74dafa
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Aug 7 02:06:23 2017 +0000

    ASoC: soc-core: rename "cmpnt" to "component"
    
    To unify notation, to readable.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 9c94b97c17f8..de57a8ad057b 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -469,10 +469,10 @@ int snd_soc_register_codec(struct device *dev,
 		struct snd_soc_dai_driver *dai_drv, int num_dai);
 void snd_soc_unregister_codec(struct device *dev);
 int snd_soc_register_component(struct device *dev,
-			 const struct snd_soc_component_driver *cmpnt_drv,
+			 const struct snd_soc_component_driver *component_driver,
 			 struct snd_soc_dai_driver *dai_drv, int num_dai);
 int devm_snd_soc_register_component(struct device *dev,
-			 const struct snd_soc_component_driver *cmpnt_drv,
+			 const struct snd_soc_component_driver *component_driver,
 			 struct snd_soc_dai_driver *dai_drv, int num_dai);
 void snd_soc_unregister_component(struct device *dev);
 int snd_soc_cache_init(struct snd_soc_codec *codec);

commit 353c64dd19ebc99786c3578ea0444e1b5b1bb172
Author: Fabio Estevam <festevam@gmail.com>
Date:   Mon Aug 7 09:08:52 2017 -0300

    ASoC: soc-core: Remove unneeded dentry member from snd_soc_codec
    
    There is no need to have the *debugfs_reg dentry member as part of
    the snd_soc_codec structure as its only usage is inside
    soc_init_codec_debugfs().
    
    Use a local dentry variable instead.
    
    Signed-off-by: Fabio Estevam <festevam@gmail.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 10b71beb9f13..aad3f14966f1 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -903,10 +903,6 @@ struct snd_soc_codec {
 
 	/* component */
 	struct snd_soc_component component;
-
-#ifdef CONFIG_DEBUG_FS
-	struct dentry *debugfs_reg;
-#endif
 };
 
 /* codec driver */

commit f1e3f409d61372b742697d0b5e5cd17d09de37db
Author: Fabio Estevam <fabio.estevam@nxp.com>
Date:   Sat Jul 29 11:40:55 2017 -0300

    ASoC: soc-pcm: Remove unused 'debugfs_dpcm_state' entry
    
    'debugfs_dpcm_state' member from structure snd_soc_pcm_runtime
    is never used at all, so it is safe to remove it.
    
    Signed-off-by: Fabio Estevam <fabio.estevam@nxp.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 9c94b97c17f8..230b8eedd9f2 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1240,7 +1240,6 @@ struct snd_soc_pcm_runtime {
 	struct delayed_work delayed_work;
 #ifdef CONFIG_DEBUG_FS
 	struct dentry *debugfs_dpcm_root;
-	struct dentry *debugfs_dpcm_state;
 #endif
 
 	unsigned int num; /* 0-based and monotonic increasing */

commit a7e1149b64091ac87dfb18b177abb63ba4cbbd3d
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Wed Jul 26 05:17:08 2017 +0000

    ASoC: remove cache_bypass from snd_soc_codec
    
    snd_soc_codec .cache_bypass related operation code has been removed.
    Let's remove remaining code.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 9c94b97c17f8..10b71beb9f13 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -894,7 +894,6 @@ struct snd_soc_codec {
 	struct list_head list;
 
 	/* runtime */
-	unsigned int cache_bypass:1; /* Suppress access to the cache */
 	unsigned int cache_init:1; /* codec cache has been initialized */
 
 	/* codec IO */

commit c641e5b207ed7dfaa692820aeb5b6dde3de3e9b0
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Jul 12 17:55:29 2017 +0200

    ASoC: fix pcm-creation regression
    
    This reverts commit 99b04f4c4051 ("ASoC: add Component level
    pcm_new/pcm_free"), which started calling the pcm_new callback for every
    component in a *card* when creating a new pcm, something which does not
    seem to make any sense.
    
    This specifically led to memory leaks in systems with more than one
    platform component and where DMA memory is allocated in the
    platform-driver callback. For example, when both mcasp devices are being
    used on an am335x board, DMA memory would be allocated twice for every
    DAI link during probe.
    
    When CONFIG_SND_VERBOSE_PROCFS was set this fortunately also led to
    warnings such as:
    
    WARNING: CPU: 0 PID: 565 at ../fs/proc/generic.c:346 proc_register+0x110/0x154
    proc_dir_entry 'sub0/prealloc' already registered
    
    Since there seems to be no users of the new component callbacks, and the
    current implementation introduced a regression, let's revert the
    offending commit for now.
    
    Fixes: 99b04f4c4051 ("ASoC: add Component level pcm_new/pcm_free")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Tested-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: stable <stable@vger.kernel.org>     # 4.10

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 9c94b97c17f8..c4a8b1947566 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -795,10 +795,6 @@ struct snd_soc_component_driver {
 	int (*suspend)(struct snd_soc_component *);
 	int (*resume)(struct snd_soc_component *);
 
-	/* pcm creation and destruction */
-	int (*pcm_new)(struct snd_soc_pcm_runtime *);
-	void (*pcm_free)(struct snd_pcm *);
-
 	/* DT */
 	int (*of_xlate_dai_name)(struct snd_soc_component *component,
 				 struct of_phandle_args *args,
@@ -874,8 +870,6 @@ struct snd_soc_component {
 	void (*remove)(struct snd_soc_component *);
 	int (*suspend)(struct snd_soc_component *);
 	int (*resume)(struct snd_soc_component *);
-	int (*pcm_new)(struct snd_soc_pcm_runtime *);
-	void (*pcm_free)(struct snd_pcm *);
 
 	/* machine specific init */
 	int (*init)(struct snd_soc_component *component);

commit a180e8b988437b3e84a1b501ac4d073467602ca6
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Thu May 18 01:39:25 2017 +0000

    ASoC: add snd_soc_get_dai_id() function
    
    ALSA SoC needs to know connected DAI ID for detecting.
    It is not a big problem if device/driver was only for sound,
    but getting DAI ID will be difficult if device includes both
    Video/Sound, like HDMI.
    To solve this issue, this patch adds new snd_soc_get_dai_id() and
    its related .of_xlate_dai_id callback on component driver.
    In below case, we can handle Sound port (= port@2) as ID = 0
    if .of_xlate_dai_id has its support.
    
            hdmi {
                    port@0 { /* VIDEO */ };
                    port@1 { /* VIDEO */ };
                    port@2 { /* SOUND */ };
            };
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 5170fd81e1fd..9c94b97c17f8 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -803,6 +803,8 @@ struct snd_soc_component_driver {
 	int (*of_xlate_dai_name)(struct snd_soc_component *component,
 				 struct of_phandle_args *args,
 				 const char **dai_name);
+	int (*of_xlate_dai_id)(struct snd_soc_component *comment,
+			       struct device_node *endpoint);
 	void (*seq_notifier)(struct snd_soc_component *, enum snd_soc_dapm_type,
 		int subseq);
 	int (*stream_event)(struct snd_soc_component *, int event);
@@ -1676,6 +1678,7 @@ unsigned int snd_soc_of_parse_daifmt(struct device_node *np,
 				     const char *prefix,
 				     struct device_node **bitclkmaster,
 				     struct device_node **framemaster);
+int snd_soc_get_dai_id(struct device_node *ep);
 int snd_soc_get_dai_name(struct of_phandle_args *args,
 			 const char **dai_name);
 int snd_soc_of_get_dai_name(struct device_node *of_node,

commit cce9b271e5e05ba43ce9332652ef309b9e44c87a
Merge: 245e302a4d17 97c415a6f6c3
Author: Mark Brown <broonie@kernel.org>
Date:   Sun Apr 30 22:15:43 2017 +0900

    Merge remote-tracking branch 'asoc/topic/rt5665' into asoc-next

commit 0c2964cb38ef9dc44c11db7516bab00c1967e52e
Merge: d872f04606ee 081dc8ab46df
Author: Mark Brown <broonie@kernel.org>
Date:   Sun Apr 30 22:15:41 2017 +0900

    Merge remote-tracking branch 'asoc/topic/intel' into asoc-next

commit 1f5a4535db41bd2bb8d1a15f098cb2921d6c1317
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Apr 24 08:54:41 2017 +0200

    ASoC: Provide a dummy wrapper of snd_soc_set_dmi_name()
    
    For systems without DMI, it makes no sense to have the code.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Acked-by: Liam Girdwood <liam.r.girdwood@linux.intel.com>
    Acked-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index cdfb55f7aede..915c06cb2b32 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -497,7 +497,15 @@ void snd_soc_runtime_deactivate(struct snd_soc_pcm_runtime *rtd, int stream);
 int snd_soc_runtime_set_dai_fmt(struct snd_soc_pcm_runtime *rtd,
 	unsigned int dai_fmt);
 
+#ifdef CONFIG_DMI
 int snd_soc_set_dmi_name(struct snd_soc_card *card, const char *flavour);
+#else
+static inline int snd_soc_set_dmi_name(struct snd_soc_card *card,
+				       const char *flavour)
+{
+	return 0;
+}
+#endif
 
 /* Utility functions to get clock rates from various things */
 int snd_soc_calc_frame_size(int sample_size, int channels, int tdm_slots);

commit b8d4f7a30bab878d8909bb6ee73e8ac47a1646bf
Merge: 17febfa6071b d7344010d183
Author: Mark Brown <broonie@kernel.org>
Date:   Tue Apr 11 16:58:30 2017 +0100

    Merge branch 'topic/jack' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound into asoc-rt5665

commit d7344010d183ad62d1ababca3beb9553cf5e1546
Author: Bard Liao <bardliao@realtek.com>
Date:   Fri Apr 7 11:26:41 2017 +0800

    ASoC: jack: add snd_soc_codec_set_jack
    
    There are many codecs with the capability of jack detection. Usually,
    we create a jack on machine driver but there is no common function for
    machine driver to deliver the jack pointer to codec driver.
    snd_soc_codec_set_jack can be used for delivering the jack pointer to
    codec driver and enable the jack detection function. To make it work,
    codec driver need to define a callback function to receive the jack
    pointer and do all necessary procedure for enabling jack detection.
    
    Signed-off-by: Bard Liao <bardliao@realtek.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 1d20abec4995..a6d589c340df 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -434,6 +434,8 @@ int snd_soc_codec_set_sysclk(struct snd_soc_codec *codec, int clk_id,
 			     int source, unsigned int freq, int dir);
 int snd_soc_codec_set_pll(struct snd_soc_codec *codec, int pll_id, int source,
 			  unsigned int freq_in, unsigned int freq_out);
+int snd_soc_codec_set_jack(struct snd_soc_codec *codec,
+			   struct snd_soc_jack *jack, void *data);
 
 int snd_soc_register_card(struct snd_soc_card *card);
 int snd_soc_unregister_card(struct snd_soc_card *card);
@@ -908,6 +910,8 @@ struct snd_soc_codec_driver {
 			  int clk_id, int source, unsigned int freq, int dir);
 	int (*set_pll)(struct snd_soc_codec *codec, int pll_id, int source,
 		unsigned int freq_in, unsigned int freq_out);
+	int (*set_jack)(struct snd_soc_codec *codec,
+			struct snd_soc_jack *jack,  void *data);
 
 	/* codec IO */
 	struct regmap *(*get_regmap)(struct device *);

commit 73548dd316adec41172c31d63a0c35a97bf9577f
Author: Dmitry Torokhov <dtor@chromium.org>
Date:   Tue Mar 21 16:50:43 2017 -0700

    ASoC: jack - check status of GPIO-based pins on resume
    
    For GPIO-backed pins that are not configured as wakeup sources, we may
    miss change in their state that happens while system is suspended. Let's
    use PM notifier to refresh their state upon resume.
    
    Signed-off-by: Dmitry Torokhov <dtor@chromium.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 2b502f6cc6d0..1d20abec4995 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -722,6 +722,7 @@ struct snd_soc_jack_gpio {
 	/* private: */
 	struct snd_soc_jack *jack;
 	struct delayed_work work;
+	struct notifier_block pm_notifier;
 	struct gpio_desc *desc;
 
 	void *data;

commit 991454e17070eaf5286a666d9e896fd6fb332c72
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Mar 24 00:13:00 2017 +0000

    ASoC: core: remove pointless auxiliary from snd_soc_component
    
    commit 1a653aa44725 ("ASoC: core: replace aux_comp_list to ...")
    tried to replace aux_comp_list to component_dev_list,
    but it failed because of binding timing. Thus, Sylwester fixuped it by
    commit d2e3a1358c37 ("ASoC: Fix binding and probing of auxiliary...").
    
    One of main purpose of commit 1a653aa44725 ("ASoC: core: replace...")
    was remove replaceable list (= list_aux) from snd_soc_component by using
    new "auxiliary" flags (but it failed).
    Because of this background, current code has reborned card_aux_list
    (= same as original list_aux), and almost pointless "auxiliary" flags.
    
    Let's remove pointless "auxiliary" flags by this patch
    This means, it is same as revert both
    commit 1a653aa44725 ("ASoC: core: replace aux_comp_list to ...") and
    commit d2e3a1358c37 ("ASoC: Fix binding and probing of auxiliary...").
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Tested-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index cdfb55f7aede..ee838b0d5db8 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -812,7 +812,6 @@ struct snd_soc_component {
 
 	unsigned int ignore_pmdown_time:1; /* pmdown_time is ignored at stop */
 	unsigned int registered_as_component:1;
-	unsigned int auxiliary:1; /* for auxiliary component of the card */
 	unsigned int suspended:1; /* is in suspend PM state */
 
 	struct list_head list;

commit 96f0e8a5b0979255e64ee8431f8287a41dc79140
Merge: 59acd5dfcc1e e21ab17904ff 245c5c7b0863 d61b23daf0c6 4957b556f5e7 b07609cecaac
Author: Mark Brown <broonie@kernel.org>
Date:   Sun Feb 19 16:36:23 2017 +0000

    Merge remote-tracking branches 'asoc/topic/dwc', 'asoc/topic/es8328', 'asoc/topic/fsl', 'asoc/topic/fsl-sai' and 'asoc/topic/graph' into asoc-next

commit 16b5711485b0eba250451b3a85ab869939f20c7d
Merge: c7bb6d8060ee 7ba8ba3f4f96
Author: Mark Brown <broonie@kernel.org>
Date:   Sun Feb 19 16:35:45 2017 +0000

    Merge remote-tracking branch 'asoc/topic/intel' into asoc-next

commit 4ae8be8ea9f7b46f339b8481c265256ffd412567
Merge: 39bc30f25329 96241bae08f6
Author: Mark Brown <broonie@kernel.org>
Date:   Sun Feb 19 16:35:41 2017 +0000

    Merge remote-tracking branch 'asoc/topic/component' into asoc-next

commit b07609cecaac6681a2fca3eebc1bae7b00282620
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Jan 27 06:37:51 2017 +0000

    ASoC: soc-core: remove OF adjusting for snd_soc_of_parse_card_name
    
    Because prototype of OF-graph sound card support didn't have Sound Card
    node, commit 8f5ebb1bee15b5720741a98414767bb86f6c2b23
    ("ASoC: soc-core: adjust for graph on snd_soc_of_parse_card_name")
    adjusted to it on each functions.
    
    But final discussion result of ALSA SoC / OF-graph ML, OF-graph sound
    card has node. Thus, this commit became no longer needed.
    
    This reverts commit 8f5ebb1bee15b5720741a98414767bb86f6c2b23.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 34bd033443dc..6ecabeb8d31d 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1644,11 +1644,8 @@ static inline struct snd_soc_platform *snd_soc_kcontrol_platform(
 int snd_soc_util_init(void);
 void snd_soc_util_exit(void);
 
-#define snd_soc_of_parse_card_name(card, propname) \
-	snd_soc_of_parse_card_name_from_node(card, NULL, propname)
-int snd_soc_of_parse_card_name_from_node(struct snd_soc_card *card,
-					 struct device_node *np,
-					 const char *propname);
+int snd_soc_of_parse_card_name(struct snd_soc_card *card,
+			       const char *propname);
 int snd_soc_of_parse_audio_simple_widgets(struct snd_soc_card *card,
 					  const char *propname);
 int snd_soc_of_parse_tdm_slot(struct device_node *np,

commit 440a3006f154a3aca4badf72841c61ac93a72110
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Jan 27 06:37:16 2017 +0000

    ASoC: soc-core: remove OF adjusting for snd_soc_of_parse_audio_prefix
    
    Because prototype of OF-graph sound card support didn't have Sound Card
    node, commit b6defcca0a604129155ae472b116a2e1688d8995
    ("ASoC: soc-core: adjust for graph on snd_soc_of_parse_audio_prefix")
    adjusted to it on each functions.
    
    But final discussion result of ALSA SoC / OF-graph ML, OF-graph sound
    card has node. Thus, this commit became no longer needed.
    
    This reverts commit b6defcca0a604129155ae472b116a2e1688d8995.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 4dccc4f63f5e..34bd033443dc 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1656,11 +1656,7 @@ int snd_soc_of_parse_tdm_slot(struct device_node *np,
 			      unsigned int *rx_mask,
 			      unsigned int *slots,
 			      unsigned int *slot_width);
-#define snd_soc_of_parse_audio_prefix(card, codec_conf, of_node, propname) \
-	snd_soc_of_parse_audio_prefix_from_node(card, NULL, codec_conf, \
-						of_node, propname)
-void snd_soc_of_parse_audio_prefix_from_node(struct snd_soc_card *card,
-				   struct device_node *np,
+void snd_soc_of_parse_audio_prefix(struct snd_soc_card *card,
 				   struct snd_soc_codec_conf *codec_conf,
 				   struct device_node *of_node,
 				   const char *propname);

commit 21efde50ca9cba9230d1b1ea54aadbf6d96c4157
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Jan 27 06:37:34 2017 +0000

    ASoC: soc-core: remove OF adjusting for snd_soc_of_parse_audio_simple_widgets
    
    Because prototype of OF-graph sound card support didn't have Sound Card
    node, commit 1ef5bcd57be5c8b31286b7b47828064be25f266b
    ("ASoC: soc-core: adjust for graph on snd_soc_of_parse_audio_simple_widgets")
    adjusted to it on each functions.
    
    But final discussion result of ALSA SoC / OF-graph ML, OF-graph sound
    card has node. Thus, this commit became no longer needed.
    
    This reverts commit 1ef5bcd57be5c8b31286b7b47828064be25f266b.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 838e03778b58..4dccc4f63f5e 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1649,12 +1649,8 @@ void snd_soc_util_exit(void);
 int snd_soc_of_parse_card_name_from_node(struct snd_soc_card *card,
 					 struct device_node *np,
 					 const char *propname);
-#define snd_soc_of_parse_audio_simple_widgets(card, propname)\
-	snd_soc_of_parse_audio_simple_widgets_from_node(card, NULL, propname)
-int snd_soc_of_parse_audio_simple_widgets_from_node(struct snd_soc_card *card,
-						    struct device_node *np,
-						    const char *propname);
-
+int snd_soc_of_parse_audio_simple_widgets(struct snd_soc_card *card,
+					  const char *propname);
 int snd_soc_of_parse_tdm_slot(struct device_node *np,
 			      unsigned int *tx_mask,
 			      unsigned int *rx_mask,

commit 2bc644af610f28d05812f224636a95a57c2631d1
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Jan 27 06:36:50 2017 +0000

    ASoC: soc-core: remove OF adjusting for snd_soc_of_parse_audio_routing
    
    Because prototype of OF-graph sound card support didn't have Sound Card
    node, commit 7364c8dc255232db33bcd1c5b19eb8f34cf6108a
    ("ASoC: soc-core: adjust for graph on snd_soc_of_parse_audio_routing")
    adjusted to it on each functions.
    
    But final discussion result of ALSA SoC / OF-graph ML, OF-graph sound
    card has node. Thus, this commit became no longer needed.
    
    This reverts commit 7364c8dc255232db33bcd1c5b19eb8f34cf6108a.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 2b502f6cc6d0..838e03778b58 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1668,13 +1668,8 @@ void snd_soc_of_parse_audio_prefix_from_node(struct snd_soc_card *card,
 				   struct snd_soc_codec_conf *codec_conf,
 				   struct device_node *of_node,
 				   const char *propname);
-
-#define snd_soc_of_parse_audio_routing(card, propname) \
-	snd_soc_of_parse_audio_routing_from_node(card, NULL, propname)
-int snd_soc_of_parse_audio_routing_from_node(struct snd_soc_card *card,
-					     struct device_node *np,
-					     const char *propname);
-
+int snd_soc_of_parse_audio_routing(struct snd_soc_card *card,
+				   const char *propname);
 unsigned int snd_soc_of_parse_daifmt(struct device_node *np,
 				     const char *prefix,
 				     struct device_node **bitclkmaster,

commit 345233d7c6be80d4124140f2a0993880c7ae2453
Author: Liam Girdwood <liam.r.girdwood@linux.intel.com>
Date:   Sat Jan 14 16:13:02 2017 +0800

    ASoC: core: Add API to use DMI name in sound card long name
    
    Intel DSP platform drivers are used by many different devices but are
    difficult for userspace to differentiate. This patch adds an API to allow
    the DMI name to be used in the sound card long name, thereby helping
    userspace load the correct UCM configuration. Usually machine drivers
    uses their own name as the sound card name (short name), and leave the
    long name and driver name blank. This API will use the DMI info like
    vendor, product and board to make up the card long name. If the machine
    driver has already explicitly set the long name, this API will do nothing.
    
    This patch also allows for further differentiation as many devices that
    share the same DMI name i.e. Minnowboards, UP boards may be configured
    with different codecs or firmwares. The API supports flavoring the DMI
    name into the card longname to provide the extra differentiation required
    for these devices.
    
    For Use Case Manager (UCM) in the user space, changing card long name by
    this API is backward compatible, since the card name does not change. For
    a given sound card, even if there is no device-specific UCM configuration
    file that uses the card long name, UCM will fall back to load the default
    configuration file that uses the card name.
    
    Signed-off-by: Liam Girdwood <liam.r.girdwood@linux.intel.com>
    Signed-off-by: Mengdong Lin <mengdong.lin@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 2b502f6cc6d0..8cad99dfb78c 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -497,6 +497,8 @@ void snd_soc_runtime_deactivate(struct snd_soc_pcm_runtime *rtd, int stream);
 int snd_soc_runtime_set_dai_fmt(struct snd_soc_pcm_runtime *rtd,
 	unsigned int dai_fmt);
 
+int snd_soc_set_dmi_name(struct snd_soc_card *card, const char *flavour);
+
 /* Utility functions to get clock rates from various things */
 int snd_soc_calc_frame_size(int sample_size, int channels, int tdm_slots);
 int snd_soc_params_to_frame_size(struct snd_pcm_hw_params *params);
@@ -1098,6 +1100,8 @@ struct snd_soc_card {
 	const char *name;
 	const char *long_name;
 	const char *driver_name;
+	char dmi_longname[80];
+
 	struct device *dev;
 	struct snd_card *snd_card;
 	struct module *owner;

commit 96241bae08f63e40dad8f3764e332858b27ba23c
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Dec 19 07:37:37 2016 +0000

    ASoC: remove snd_soc_platform_trigger()
    
    No one is using snd_soc_platform_trigger().
    Let's remove it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 1a4311da6126..4504920dce72 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -507,9 +507,6 @@ int snd_soc_params_to_bclk(struct snd_pcm_hw_params *parms);
 int snd_soc_set_runtime_hwparams(struct snd_pcm_substream *substream,
 	const struct snd_pcm_hardware *hw);
 
-int snd_soc_platform_trigger(struct snd_pcm_substream *substream,
-		int cmd, struct snd_soc_platform *platform);
-
 int soc_dai_hw_params(struct snd_pcm_substream *substream,
 		      struct snd_pcm_hw_params *params,
 		      struct snd_soc_dai *dai);

commit 10611e1b0b7ab2a82dd7838e5e928fa1501d353c
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Dec 19 07:37:18 2016 +0000

    ASoC: remove .bespoke_trigger from snd_soc_platform_driver
    
    No existing platform is using .bespoke_trigger.
    Let's remove it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 06515e5ca018..1a4311da6126 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -951,8 +951,6 @@ struct snd_soc_platform_driver {
 
 	/* platform stream compress ops */
 	const struct snd_compr_ops *compr_ops;
-
-	int (*bespoke_trigger)(struct snd_pcm_substream *, int);
 };
 
 struct snd_soc_dai_link_component {

commit fcff45f8e092c17d324028fb6f632fde98983f17
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Dec 19 07:36:58 2016 +0000

    ASoC: remove .delay from snd_soc_platform_driver
    
    No existing platform is using .delay.
    Let's remove it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index e580a675ea77..06515e5ca018 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -946,13 +946,6 @@ struct snd_soc_platform_driver {
 	int (*pcm_new)(struct snd_soc_pcm_runtime *);
 	void (*pcm_free)(struct snd_pcm *);
 
-	/*
-	 * For platform caused delay reporting.
-	 * Optional.
-	 */
-	snd_pcm_sframes_t (*delay)(struct snd_pcm_substream *,
-		struct snd_soc_dai *);
-
 	/* platform stream pcm ops */
 	const struct snd_pcm_ops *ops;
 

commit d2e3a1358c37cd82eef92b5e908b4f0472194481
Author: Sylwester Nawrocki <s.nawrocki@samsung.com>
Date:   Thu Dec 29 14:11:21 2016 +0100

    ASoC: Fix binding and probing of auxiliary components
    
    Currently binding of auxiliary devices doesn't work as in
    soc_bind_aux_dev() function a bound component is not being added
    to any list and in soc_probe_aux_devices() we are trying to walk
    the component_dev_list list to probe auxiliary components but
    at that time this list doesn't contain any auxiliary components
    since they are being added to the card only in soc_probe_component().
    
    This patch adds a list to the card where are stored bound but not
    probed auxiliary devices, so that all aux devices can be probed.
    
    Fixes: 1a653aa44725 "ASoC: core: replace aux_comp_list to component_dev_list"
    Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 2b502f6cc6d0..b86168a21d56 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -813,6 +813,7 @@ struct snd_soc_component {
 	unsigned int suspended:1; /* is in suspend PM state */
 
 	struct list_head list;
+	struct list_head card_aux_list; /* for auxiliary bound components */
 	struct list_head card_list;
 
 	struct snd_soc_dai_driver *dai_drv;
@@ -1152,6 +1153,7 @@ struct snd_soc_card {
 	 */
 	struct snd_soc_aux_dev *aux_dev;
 	int num_aux_devs;
+	struct list_head aux_comp_list;
 
 	const struct snd_kcontrol_new *controls;
 	int num_controls;
@@ -1547,6 +1549,7 @@ static inline void snd_soc_initialize_card_lists(struct snd_soc_card *card)
 	INIT_LIST_HEAD(&card->widgets);
 	INIT_LIST_HEAD(&card->paths);
 	INIT_LIST_HEAD(&card->dapm_list);
+	INIT_LIST_HEAD(&card->aux_comp_list);
 	INIT_LIST_HEAD(&card->component_dev_list);
 }
 

commit 99b04f4c4051f71bc0665a66e11b8fbed17c8958
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Thu Dec 15 08:41:38 2016 +0000

    ASoC: add Component level pcm_new/pcm_free
    
    In current ALSA SoC, Platform only has pcm_new/pcm_free feature,
    but it should be supported on Component level. This patch adds it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 2b502f6cc6d0..e580a675ea77 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -785,6 +785,10 @@ struct snd_soc_component_driver {
 	int (*suspend)(struct snd_soc_component *);
 	int (*resume)(struct snd_soc_component *);
 
+	/* pcm creation and destruction */
+	int (*pcm_new)(struct snd_soc_pcm_runtime *);
+	void (*pcm_free)(struct snd_pcm *);
+
 	/* DT */
 	int (*of_xlate_dai_name)(struct snd_soc_component *component,
 				 struct of_phandle_args *args,
@@ -858,6 +862,8 @@ struct snd_soc_component {
 	void (*remove)(struct snd_soc_component *);
 	int (*suspend)(struct snd_soc_component *);
 	int (*resume)(struct snd_soc_component *);
+	int (*pcm_new)(struct snd_soc_pcm_runtime *);
+	void (*pcm_free)(struct snd_pcm *);
 
 	/* machine specific init */
 	int (*init)(struct snd_soc_component *component);

commit dc42c6cb309e09fb81c235350b3a7e7976caf52f
Merge: da644e2edea7 4e2cc814eb27 dd5abb742071 222e728ca29b 4090d63b49d7 f196e9ac07ed
Author: Mark Brown <broonie@kernel.org>
Date:   Mon Dec 12 15:53:25 2016 +0000

    Merge remote-tracking branches 'asoc/topic/tlv320aic31xx', 'asoc/topic/topology', 'asoc/topic/uda1380', 'asoc/topic/wm2200' and 'asoc/topic/wm8523' into asoc-next

commit 2f028b15a232737ba8dd5b883adcca3471a8280e
Merge: b8f04c194326 1ef5bcd57be5 92be58106e5d b4f89a0cce0d bf8e27621eff
Author: Mark Brown <broonie@kernel.org>
Date:   Mon Dec 12 15:53:07 2016 +0000

    Merge remote-tracking branches 'asoc/topic/of-graph', 'asoc/topic/pxa', 'asoc/topic/qcom' and 'asoc/topic/rk808' into asoc-next

commit ffe9c4f330328b884e51b8665b392ed6c538bf43
Merge: 43b64af53501 0a69516cd8b9 4d41c74dcb67 aa43112445f0 fe3683779e0b 39b2238e2c4b
Author: Mark Brown <broonie@kernel.org>
Date:   Mon Dec 12 15:52:48 2016 +0000

    Merge remote-tracking branches 'asoc/topic/ab8500', 'asoc/topic/arizona', 'asoc/topic/atmel', 'asoc/topic/bcm' and 'asoc/topic/bitfield' into asoc-next

commit e6c6fd896bbe4fe8967c5ba6f2d5db056a1da688
Merge: c0f2302a6ac3 1b4d9c221915
Author: Mark Brown <broonie@kernel.org>
Date:   Mon Dec 12 15:52:45 2016 +0000

    Merge remote-tracking branch 'asoc/topic/dapm-pin' into asoc-next

commit 9178feb4538e055bf22be44c38b90cc31d2baf99
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Wed Nov 30 06:23:13 2016 +0000

    ASoC: add Component level suspend/resume
    
    In current ALSA SoC, Codec only has suspend/resume feature,
    but it should be supported on Component level. This patch adds it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 0bd57b77d010..13cc64e5bb77 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -782,6 +782,8 @@ struct snd_soc_component_driver {
 
 	int (*probe)(struct snd_soc_component *);
 	void (*remove)(struct snd_soc_component *);
+	int (*suspend)(struct snd_soc_component *);
+	int (*resume)(struct snd_soc_component *);
 
 	/* DT */
 	int (*of_xlate_dai_name)(struct snd_soc_component *component,
@@ -808,6 +810,7 @@ struct snd_soc_component {
 	unsigned int ignore_pmdown_time:1; /* pmdown_time is ignored at stop */
 	unsigned int registered_as_component:1;
 	unsigned int auxiliary:1; /* for auxiliary component of the card */
+	unsigned int suspended:1; /* is in suspend PM state */
 
 	struct list_head list;
 	struct list_head card_list;
@@ -853,6 +856,8 @@ struct snd_soc_component {
 
 	int (*probe)(struct snd_soc_component *);
 	void (*remove)(struct snd_soc_component *);
+	int (*suspend)(struct snd_soc_component *);
+	int (*resume)(struct snd_soc_component *);
 
 	/* machine specific init */
 	int (*init)(struct snd_soc_component *component);
@@ -872,7 +877,6 @@ struct snd_soc_codec {
 
 	/* runtime */
 	unsigned int cache_bypass:1; /* Suppress access to the cache */
-	unsigned int suspended:1; /* Codec is in suspend PM state */
 	unsigned int cache_init:1; /* codec cache has been initialized */
 
 	/* codec IO */

commit 1a653aa44725668590b36bbe2d7fe4736a69f055
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Wed Nov 30 06:22:55 2016 +0000

    ASoC: core: replace aux_comp_list to component_dev_list
    
    Now, Card has component_dev_list, we can replace aux_comp_list
    to component_dev_list with new auxiliary flags
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index b5544e2287b8..0bd57b77d010 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -807,9 +807,9 @@ struct snd_soc_component {
 
 	unsigned int ignore_pmdown_time:1; /* pmdown_time is ignored at stop */
 	unsigned int registered_as_component:1;
+	unsigned int auxiliary:1; /* for auxiliary component of the card */
 
 	struct list_head list;
-	struct list_head list_aux; /* for auxiliary component of the card */
 	struct list_head card_list;
 
 	struct snd_soc_dai_driver *dai_drv;
@@ -1148,7 +1148,6 @@ struct snd_soc_card {
 	 */
 	struct snd_soc_aux_dev *aux_dev;
 	int num_aux_devs;
-	struct list_head aux_comp_list;
 
 	const struct snd_kcontrol_new *controls;
 	int num_controls;
@@ -1543,7 +1542,6 @@ static inline void snd_soc_initialize_card_lists(struct snd_soc_card *card)
 	INIT_LIST_HEAD(&card->widgets);
 	INIT_LIST_HEAD(&card->paths);
 	INIT_LIST_HEAD(&card->dapm_list);
-	INIT_LIST_HEAD(&card->aux_comp_list);
 	INIT_LIST_HEAD(&card->component_dev_list);
 }
 

commit d9fc40639dc1b87915426d2ef489a591b0fd650b
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Wed Nov 30 06:22:36 2016 +0000

    ASoC: core: replace codec_dev_list to component_dev_list on Card
    
    Current Card has Codec list (= codec_dev_list), but Codec will be
    removed in the future. Because of this reason, this patch adds
    new Component list in Card, and replace Codec list.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 1ed9371ece0d..b5544e2287b8 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -810,6 +810,7 @@ struct snd_soc_component {
 
 	struct list_head list;
 	struct list_head list_aux; /* for auxiliary component of the card */
+	struct list_head card_list;
 
 	struct snd_soc_dai_driver *dai_drv;
 	int num_dai;
@@ -868,7 +869,6 @@ struct snd_soc_codec {
 	const struct snd_soc_codec_driver *driver;
 
 	struct list_head list;
-	struct list_head card_list;
 
 	/* runtime */
 	unsigned int cache_bypass:1; /* Suppress access to the cache */
@@ -1170,7 +1170,7 @@ struct snd_soc_card {
 	struct work_struct deferred_resume_work;
 
 	/* lists of probed devices belonging to this card */
-	struct list_head codec_dev_list;
+	struct list_head component_dev_list;
 
 	struct list_head widgets;
 	struct list_head paths;
@@ -1540,11 +1540,11 @@ static inline void *snd_soc_platform_get_drvdata(struct snd_soc_platform *platfo
 
 static inline void snd_soc_initialize_card_lists(struct snd_soc_card *card)
 {
-	INIT_LIST_HEAD(&card->codec_dev_list);
 	INIT_LIST_HEAD(&card->widgets);
 	INIT_LIST_HEAD(&card->paths);
 	INIT_LIST_HEAD(&card->dapm_list);
 	INIT_LIST_HEAD(&card->aux_comp_list);
+	INIT_LIST_HEAD(&card->component_dev_list);
 }
 
 static inline bool snd_soc_volsw_is_stereo(struct soc_mixer_control *mc)

commit 1b4d9c22191583ef1fb7433417b2ceb2a608d887
Author: Richard Fitzgerald <rf@opensource.wolfsonmicro.com>
Date:   Tue Nov 29 15:44:38 2016 +0000

    ASoC: core: Add component pin control functions
    
    It's often the case that a codec driver will need to control its
    own pins. However, if a name_prefix has been applied to this codec it
    must be included in the name passed to any of the snd_soc_dapm_x_pin()
    functions.
    
    The behaviour of the existing pin control functions is reasonable, since
    you may want to search for a fully-specified name within the scope of an
    entire card. This means that we can't apply the prefix in these functions
    because it will break card-scope searches.
    
    Constructing a prefixed string "manually" in codec drivers leads to a lot
    of repetition of the same code.
    
    To make this tidier in codec drivers this patch adds a new set of
    equivalent functions that take a struct snd_soc_component instead of a
    dapm context and automatically add the component's name_prefix to the
    given name. This makes it a simple change in codec drivers to be
    prefix-safe.
    
    The new functions are not quite trivial enough to be inlines and the
    compiler won't be able to compile-away any part of them.
    
    Although it looks somewhat inefficient to have to allocate a temporary
    buffer and combine strings, the current design of the widget list
    doesn't lend itself to a more optimized implementation - it's a single
    list of all widgets on a card and is searched linearly for a matching
    string. As pin state changes are generally low-frequency events it's
    unlikely to be a significant issue - at least not enough to rewrite the
    widget list handling just for this.
    
    Signed-off-by: Richard Fitzgerald <rf@opensource.wolfsonmicro.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 4f1c784e44f6..a26c651cb1ee 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1697,4 +1697,24 @@ static inline void snd_soc_dapm_mutex_unlock(struct snd_soc_dapm_context *dapm)
 	mutex_unlock(&dapm->card->dapm_mutex);
 }
 
+int snd_soc_component_enable_pin(struct snd_soc_component *component,
+				 const char *pin);
+int snd_soc_component_enable_pin_unlocked(struct snd_soc_component *component,
+					  const char *pin);
+int snd_soc_component_disable_pin(struct snd_soc_component *component,
+				  const char *pin);
+int snd_soc_component_disable_pin_unlocked(struct snd_soc_component *component,
+					   const char *pin);
+int snd_soc_component_nc_pin(struct snd_soc_component *component,
+			     const char *pin);
+int snd_soc_component_nc_pin_unlocked(struct snd_soc_component *component,
+				      const char *pin);
+int snd_soc_component_get_pin_status(struct snd_soc_component *component,
+				     const char *pin);
+int snd_soc_component_force_enable_pin(struct snd_soc_component *component,
+				       const char *pin);
+int snd_soc_component_force_enable_pin_unlocked(
+					struct snd_soc_component *component,
+					const char *pin);
+
 #endif

commit 1ef5bcd57be5c8b31286b7b47828064be25f266b
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Nov 11 01:18:08 2016 +0000

    ASoC: soc-core: adjust for graph on snd_soc_of_parse_audio_simple_widgets
    
    It is assuming that the card related information is located on
    "card" node, but graph case doesn't have it.
    This patch adds node parameter to adjust for graph support
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 8457aab9eab0..77b01c45ee8d 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1647,8 +1647,12 @@ void snd_soc_util_exit(void);
 int snd_soc_of_parse_card_name_from_node(struct snd_soc_card *card,
 					 struct device_node *np,
 					 const char *propname);
-int snd_soc_of_parse_audio_simple_widgets(struct snd_soc_card *card,
-					  const char *propname);
+#define snd_soc_of_parse_audio_simple_widgets(card, propname)\
+	snd_soc_of_parse_audio_simple_widgets_from_node(card, NULL, propname)
+int snd_soc_of_parse_audio_simple_widgets_from_node(struct snd_soc_card *card,
+						    struct device_node *np,
+						    const char *propname);
+
 int snd_soc_of_parse_tdm_slot(struct device_node *np,
 			      unsigned int *tx_mask,
 			      unsigned int *rx_mask,

commit 8f5ebb1bee15b5720741a98414767bb86f6c2b23
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Nov 11 01:17:27 2016 +0000

    ASoC: soc-core: adjust for graph on snd_soc_of_parse_card_name
    
    It is assuming that the card related information is located on
    "card" node, but graph case doesn't have it.
    This patch adds node parameter to adjust for graph support
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 346223b38e0d..8457aab9eab0 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1642,8 +1642,11 @@ static inline struct snd_soc_platform *snd_soc_kcontrol_platform(
 int snd_soc_util_init(void);
 void snd_soc_util_exit(void);
 
-int snd_soc_of_parse_card_name(struct snd_soc_card *card,
-			       const char *propname);
+#define snd_soc_of_parse_card_name(card, propname) \
+	snd_soc_of_parse_card_name_from_node(card, NULL, propname)
+int snd_soc_of_parse_card_name_from_node(struct snd_soc_card *card,
+					 struct device_node *np,
+					 const char *propname);
 int snd_soc_of_parse_audio_simple_widgets(struct snd_soc_card *card,
 					  const char *propname);
 int snd_soc_of_parse_tdm_slot(struct device_node *np,

commit b6defcca0a604129155ae472b116a2e1688d8995
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Nov 11 01:19:03 2016 +0000

    ASoC: soc-core: adjust for graph on snd_soc_of_parse_audio_prefix
    
    It is assuming that the card related information is located on
    "card" node, but graph case doesn't have it.
    This patch adds node parameter to adjust for graph support
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 6dffa9540a30..346223b38e0d 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1651,7 +1651,11 @@ int snd_soc_of_parse_tdm_slot(struct device_node *np,
 			      unsigned int *rx_mask,
 			      unsigned int *slots,
 			      unsigned int *slot_width);
-void snd_soc_of_parse_audio_prefix(struct snd_soc_card *card,
+#define snd_soc_of_parse_audio_prefix(card, codec_conf, of_node, propname) \
+	snd_soc_of_parse_audio_prefix_from_node(card, NULL, codec_conf, \
+						of_node, propname)
+void snd_soc_of_parse_audio_prefix_from_node(struct snd_soc_card *card,
+				   struct device_node *np,
 				   struct snd_soc_codec_conf *codec_conf,
 				   struct device_node *of_node,
 				   const char *propname);

commit 1ad8ec535b997ed36c0f32c2616206725258dd30
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Nov 11 01:19:28 2016 +0000

    ASoC: soc-core: snd_soc_get_dai_name() become non static
    
    snd_soc_get_dai_name() is used from snd_soc_of_get_dai_name(),
    and it is assuming that DT is using "sound-dai" / "#sound-dai-cells".
    But graph base DT is using "remote-endpoint". This patch makes
    snd_soc_get_dai_name() non static for graph support.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 148bf553d598..6dffa9540a30 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1666,6 +1666,8 @@ unsigned int snd_soc_of_parse_daifmt(struct device_node *np,
 				     const char *prefix,
 				     struct device_node **bitclkmaster,
 				     struct device_node **framemaster);
+int snd_soc_get_dai_name(struct of_phandle_args *args,
+			 const char **dai_name);
 int snd_soc_of_get_dai_name(struct device_node *of_node,
 			    const char **dai_name);
 int snd_soc_of_get_dai_link_codecs(struct device *dev,

commit 7364c8dc255232db33bcd1c5b19eb8f34cf6108a
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Nov 11 01:18:35 2016 +0000

    ASoC: soc-core: adjust for graph on snd_soc_of_parse_audio_routing
    
    It is assuming that the card related information is located on
    "card" node, but graph case doesn't have it.
    This patch adds node parameter to adjust for graph support
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 4f1c784e44f6..148bf553d598 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1655,8 +1655,13 @@ void snd_soc_of_parse_audio_prefix(struct snd_soc_card *card,
 				   struct snd_soc_codec_conf *codec_conf,
 				   struct device_node *of_node,
 				   const char *propname);
-int snd_soc_of_parse_audio_routing(struct snd_soc_card *card,
-				   const char *propname);
+
+#define snd_soc_of_parse_audio_routing(card, propname) \
+	snd_soc_of_parse_audio_routing_from_node(card, NULL, propname)
+int snd_soc_of_parse_audio_routing_from_node(struct snd_soc_card *card,
+					     struct device_node *np,
+					     const char *propname);
+
 unsigned int snd_soc_of_parse_daifmt(struct device_node *np,
 				     const char *prefix,
 				     struct device_node **bitclkmaster,

commit 17fb175520e5497d71351aa66a125324fcb625a7
Author: Mengdong Lin <mengdong.lin@linux.intel.com>
Date:   Thu Nov 3 01:04:12 2016 +0800

    ASoC: Define API to find a dai link
    
    Define the API to find an existing DAI link of the soc card by matching
    the ID, name and stream name.
    
    Some cards may use unique ID for each DAI link, so matching ID is enough,
    and name or stream name are not necessary. But user need to specify name
    or stream name as well if not sure whether link ID is unique since most
    cards use 0 as the default link ID.
    
    Topology can use this API to find an existing BE link and configure it.
    
    Signed-off-by: Mengdong Lin <mengdong.lin@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 4f1c784e44f6..c3a38ee2b006 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1671,6 +1671,9 @@ int snd_soc_add_dai_link(struct snd_soc_card *card,
 				struct snd_soc_dai_link *dai_link);
 void snd_soc_remove_dai_link(struct snd_soc_card *card,
 			     struct snd_soc_dai_link *dai_link);
+struct snd_soc_dai_link *snd_soc_find_dai_link(struct snd_soc_card *card,
+					       int id, const char *name,
+					       const char *stream_name);
 
 int snd_soc_register_dai(struct snd_soc_component *component,
 	struct snd_soc_dai_driver *dai_drv);

commit 57619b4c9393b8886da90f4ebf29c9f9fe1d07cf
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Oct 24 06:32:44 2016 +0000

    ASoC: remove component from snd_soc_pcm_runtime
    
    commit f2ed6b07645e ("ASoC: Make aux_dev more like a generic component")
    removed its usecase. No one is using it now.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 4f1c784e44f6..1ed9371ece0d 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1219,7 +1219,6 @@ struct snd_soc_pcm_runtime {
 	struct snd_soc_platform *platform;
 	struct snd_soc_dai *codec_dai;
 	struct snd_soc_dai *cpu_dai;
-	struct snd_soc_component *component; /* Only valid for AUX dev rtds */
 
 	struct snd_soc_dai **codec_dais;
 	unsigned int num_codecs;

commit a7df0d3b455cb235926f53e02895d94fccba1e14
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Oct 24 05:24:36 2016 +0000

    ASoC: bunch up bit field for snd_soc_pcm_runtime
    
    We can reduce struct size in certain environment.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 3d569307f1e2..d11f1a801ce7 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1203,14 +1203,11 @@ struct snd_soc_pcm_runtime {
 	enum snd_soc_pcm_subclass pcm_subclass;
 	struct snd_pcm_ops ops;
 
-	unsigned int dev_registered:1;
-
 	/* Dynamic PCM BE runtime data */
 	struct snd_soc_dpcm_runtime dpcm[2];
 	int fe_compr;
 
 	long pmdown_time;
-	unsigned char pop_wait:1;
 
 	/* runtime devices */
 	struct snd_pcm *pcm;
@@ -1232,6 +1229,10 @@ struct snd_soc_pcm_runtime {
 
 	unsigned int num; /* 0-based and monotonic increasing */
 	struct list_head list; /* rtd list of the soc card */
+
+	/* bit field */
+	unsigned int dev_registered:1;
+	unsigned int pop_wait:1;
 };
 
 /* mixer control */

commit 1236fa1e3c29922d201da0926aa8d62427f74814
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Oct 24 00:44:10 2016 +0000

    ASoC: soc.h: use bit field for playback/capture_only
    
    Current snd_soc_dai_link is already using many bit fields.
    Let's use it for playback_only/capture_only too.
    We can reduce struct size in certain environment.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 4f1c784e44f6..3d569307f1e2 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1025,13 +1025,13 @@ struct snd_soc_dai_link {
 	const struct snd_soc_ops *ops;
 	const struct snd_soc_compr_ops *compr_ops;
 
-	/* For unidirectional dai links */
-	bool playback_only;
-	bool capture_only;
-
 	/* Mark this pcm with non atomic ops */
 	bool nonatomic;
 
+	/* For unidirectional dai links */
+	unsigned int playback_only:1;
+	unsigned int capture_only:1;
+
 	/* Keep DAI active over suspend */
 	unsigned int ignore_suspend:1;
 

commit 971dec826c211c8fef4ed5b6db2cb048873a020b
Merge: 3b495e4bf34b ec103964776b 519302954b72 9be072a6f918 1e8140309540
Author: Mark Brown <broonie@kernel.org>
Date:   Thu Sep 29 12:44:31 2016 -0700

    Merge remote-tracking branches 'asoc/topic/nau8810', 'asoc/topic/of-bool', 'asoc/topic/omap' and 'asoc/topic/platform-drvdata' into asoc-next

commit 1e814030954015e42621191f3adc52df2241dc08
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Aug 1 06:11:36 2016 +0000

    ASoC: remove snd_soc_pcm_set/get_drvdata()
    
    snd_soc_pcm_set_drvdata() will set driver data to rtd->dev,
    but driver data of rtd->dev is already used as "rtd" on
    soc_post_component_init().
    
            static int soc_post_component_init(xxx)
            {
                    ...
                    dev_set_drvdata(rtd->dev, rtd);
                    ...
            }
    
    To remove confusion, this patch removes snd_soc_pcm_set/get_drvdata().
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 6144882cc96a..bc953994acb9 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1547,17 +1547,6 @@ static inline void *snd_soc_platform_get_drvdata(struct snd_soc_platform *platfo
 	return snd_soc_component_get_drvdata(&platform->component);
 }
 
-static inline void snd_soc_pcm_set_drvdata(struct snd_soc_pcm_runtime *rtd,
-		void *data)
-{
-	dev_set_drvdata(rtd->dev, data);
-}
-
-static inline void *snd_soc_pcm_get_drvdata(struct snd_soc_pcm_runtime *rtd)
-{
-	return dev_get_drvdata(rtd->dev);
-}
-
 static inline void snd_soc_initialize_card_lists(struct snd_soc_card *card)
 {
 	INIT_LIST_HEAD(&card->codec_dev_list);

commit 8073aefa60823acf205a1e6a5ea118297179d766
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Aug 8 09:36:49 2016 +0000

    ASoC: remove codec duplicated callback function
    
    codec driver and component driver has duplicated callback functions,
    and codec side functions are just copied to component side when
    register timing. This was quick-hack, but no longer needed.
    This patch removes codec side duplicated callback function.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 6144882cc96a..5eb2b38c3437 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -898,14 +898,6 @@ struct snd_soc_codec_driver {
 	int (*resume)(struct snd_soc_codec *);
 	struct snd_soc_component_driver component_driver;
 
-	/* Default control and setup, added after probe() is run */
-	const struct snd_kcontrol_new *controls;
-	int num_controls;
-	const struct snd_soc_dapm_widget *dapm_widgets;
-	int num_dapm_widgets;
-	const struct snd_soc_dapm_route *dapm_routes;
-	int num_dapm_routes;
-
 	/* codec wide operations */
 	int (*set_sysclk)(struct snd_soc_codec *codec,
 			  int clk_id, int source, unsigned int freq, int dir);

commit dcc0799bf75c43f3d4e65716c88f35933da186cf
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Fri May 27 14:45:45 2016 +0100

    ASoC: Introduce SOC_SINGLE_S8_TLV() macro
    
    This patch introduces SOC_SINGLE_S8_TLV() macro for volume control
    on chips which supports both negative and positive gains with sign
    bit on a 8 bit register, Gain ranges from -128 to +127 with a
    predefined step size.
    Currently we only have support to DOUBLE_S8_TLV() which does not fit
    for cases where we just have separate gain control register for each
    channel.
    
    One of the Qualcomm SOC msm8916 has such gain control register whose gain
    range is from -38.4dB to +38.4dB with step size of 0.3dB.
    
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index fd7b58a58d6f..6144882cc96a 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -179,6 +179,17 @@
 	.get = snd_soc_get_volsw, .put = snd_soc_put_volsw, \
 	.private_value = SOC_DOUBLE_R_S_VALUE(reg_left, reg_right, xshift, \
 					    xmin, xmax, xsign_bit, xinvert) }
+#define SOC_SINGLE_S8_TLV(xname, xreg, xmin, xmax, tlv_array) \
+{	.iface  = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname), \
+	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ | \
+		  SNDRV_CTL_ELEM_ACCESS_READWRITE, \
+	.tlv.p  = (tlv_array), \
+	.info = snd_soc_info_volsw, .get = snd_soc_get_volsw,\
+	.put = snd_soc_put_volsw, \
+	.private_value = (unsigned long)&(struct soc_mixer_control) \
+	{.reg = xreg, .rreg = xreg,  \
+	 .min = xmin, .max = xmax, .platform_max = xmax, \
+	.sign_bit = 7,} }
 #define SOC_DOUBLE_S8_TLV(xname, xreg, xmin, xmax, tlv_array) \
 {	.iface  = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname), \
 	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ | \

commit 180bc41ad11b9a7ec5b420fbcef6570163d09204
Merge: e449f7a394df ca0d8797397c fbb88b5ca1dc aeea2fdd9b62 4d2458507d0b 027db2e122db
Author: Mark Brown <broonie@kernel.org>
Date:   Fri May 13 14:27:01 2016 +0100

    Merge remote-tracking branches 'asoc/topic/es8328', 'asoc/topic/find-dai', 'asoc/topic/fsl', 'asoc/topic/fsl-sai' and 'asoc/topic/fsl-ssi' into asoc-next

commit 305e9020f09d28560373c0112682e6fd11e909f6
Author: Mengdong Lin <mengdong.lin@linux.intel.com>
Date:   Tue Apr 19 13:12:25 2016 +0800

    ASoC: Export snd_soc_find_dai()
    
    This API can be used by topology to find an existing BE dai by name
    and further configure it.
    
    Topology will also check DAI ID to avoid wrong match.
    
    Signed-off-by: Mengdong Lin <mengdong.lin@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 02b4a215fd75..7687e2d4b0e4 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1683,6 +1683,9 @@ void snd_soc_remove_dai_link(struct snd_soc_card *card,
 int snd_soc_register_dai(struct snd_soc_component *component,
 	struct snd_soc_dai_driver *dai_drv);
 
+struct snd_soc_dai *snd_soc_find_dai(
+	const struct snd_soc_dai_link_component *dlc);
+
 #include <sound/soc-dai.h>
 
 #ifdef CONFIG_DEBUG_FS

commit 2f0ad49104cbb19db24442af736614659363d2ab
Author: Mengdong Lin <mengdong.lin@linux.intel.com>
Date:   Tue Apr 19 13:12:35 2016 +0800

    ASoC: Change DAI link's be_id to a generic id
    
    The generic ID can be used by topology:
    - Toplogy can create FE links and set their ID, machine drivers will
      be notified and check this ID for machine-specific init.
    - Toplogy can use the ID to find existing BE & CC links and further
      configure them.
    
    Signed-off-by: Mengdong Lin <mengdong.lin@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 02b4a215fd75..ef25e86d51ee 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1002,7 +1002,7 @@ struct snd_soc_dai_link {
 	 */
 	const char *platform_name;
 	struct device_node *platform_of_node;
-	int be_id;	/* optional ID for machine driver BE identification */
+	int id;	/* optional ID for machine driver link identification */
 
 	const struct snd_soc_pcm_stream *params;
 	unsigned int num_params;

commit 64527e8a352968bda529f01df1c9dd5fe581ff04
Author: Mengdong Lin <mengdong.lin@linux.intel.com>
Date:   Fri Jan 15 16:13:28 2016 +0800

    ASoC: topology: Add FE DAIs dynamically
    
    Topology will create FE DAIs dynamically from the PCM objects,
    and register them to the component.
    
    A PCM topoplogy object describes a FE DAI and DAI link. Later
    patch will add FE DAI links as well.
    
    Change tplg load ops for DAI:
    - Only process a DAI.
    - Pass the DAI driver pointer to the component driver for
      extra initialization.
    
    Signed-off-by: Mengdong Lin <mengdong.lin@linux.intel.com>
    Acked-by: Liam Girdwood <liam.r.girdwood@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 7afb72ceac56..02b4a215fd75 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -27,7 +27,6 @@
 #include <sound/compress_driver.h>
 #include <sound/control.h>
 #include <sound/ac97_codec.h>
-#include <sound/soc-topology.h>
 
 /*
  * Convenience kcontrol builders
@@ -404,6 +403,7 @@ struct snd_soc_jack_zone;
 struct snd_soc_jack_pin;
 #include <sound/soc-dapm.h>
 #include <sound/soc-dpcm.h>
+#include <sound/soc-topology.h>
 
 struct snd_soc_jack_gpio;
 

commit a1916ff3500db308bff5913996a62b0bf8c4a97e
Merge: 2dd49f8e6f20 f2ed6b07645e
Author: Mark Brown <broonie@kernel.org>
Date:   Mon Jan 11 13:54:31 2016 +0000

    Merge remote-tracking branch 'asoc/topic/pcm-list' into asoc-next

commit fffe9b89d808782a7370b0f70c7271a9f65a261c
Merge: 7b2f32cc81e1 822ad70a2f5c
Author: Mark Brown <broonie@kernel.org>
Date:   Mon Jan 11 13:54:29 2016 +0000

    Merge tag 'asoc-v4.5' into asoc-next
    
    ASoC: Updates for v4.5
    
    This is quite a busy release on the driver front with a lot of new
    drivers being added but comparatively quiet on the core side with only
    one big change going in and that a fairly straightforward refactoring.
    
     - Conversion of the array of DAI links to a list by Mengdong Lin,
       supporting dynamically adding and removing DAI links.
     - Some more fixes for the topology code, though it is still not final
       and ready for enabling in production.  We really need to get to the
       point where that can be done.
     - A pile of changes for Intel SkyLake drivers which hopefully deliver
       some useful initial functionality for systems with this chipset,
       though there is more work still to come.
     - New drivers for a number of Imagination Technologies IPs.
     - Lots of new features and cleanups for the Renesas drivers.
     - ANC support for WM5110.
     - New driver for Atmel class D speaker drivers.
     - New drivers for Cirrus CS47L24 and WM1831.
     - New driver for Dialog DA7128.
     - New drivers for Realtek RT5659 and RT56156.
     - New driver for Rockchip RK3036.
     - New driver for TI PC3168A
    
    # gpg: Signature made Wed 23 Dec 2015 00:42:40 GMT using RSA key ID 5D5487D0
    # gpg: Good signature from "Mark Brown <broonie@sirena.org.uk>"
    # gpg:                 aka "Mark Brown <broonie@debian.org>"
    # gpg:                 aka "Mark Brown <broonie@kernel.org>"
    # gpg:                 aka "Mark Brown <broonie@tardis.ed.ac.uk>"
    # gpg:                 aka "Mark Brown <broonie@linaro.org>"
    # gpg:                 aka "Mark Brown <Mark.Brown@linaro.org>"
    # gpg: WARNING: This key is not certified with a trusted signature!
    # gpg:          There is no indication that the signature belongs to the owner.
    # Primary key fingerprint: 3F25 68AA C269 98F9 E813  A1C5 C3F4 36CA 30F5 D8EB
    #      Subkey fingerprint: ADE6 68AA 6757 18B5 9FE2  9FEA 24D6 8B72 5D54 87D0

commit 7b2f32cc81e14149e2fe515f69f35f9e11e8ba5a
Merge: b7f08d29c9ef fe09dd8eb231
Author: Mark Brown <broonie@kernel.org>
Date:   Mon Jan 11 13:54:28 2016 +0000

    Merge remote-tracking branch 'asoc/topic/intel' into asoc-next

commit f2ed6b07645ed29c1e090ead2e41066385cba3ea
Author: Mengdong Lin <mengdong.lin@linux.intel.com>
Date:   Wed Jan 6 13:29:31 2016 +0800

    ASoC: Make aux_dev more like a generic component
    
    aux_dev is mainly used by the machine driver to specify analog devices,
    which are registered as codecs. Making it more like a generic component
    can help the machine driver to use it to specify any component with
    topology info by name.
    
    Details:
    - Remove the stub 'rtd_aux' array from the soc card.
    - Add a list 'aux_comp_list' to store the components of aux_devs.
      And add a list head 'list_aux' to struct snd_soc_component, for adding
      such components to the above list.
    - Add a 'init' ops to a component for machine specific init.
      soc_bind_aux_dev() will set it to be aux_dev's init. And it will be
      called when probing the component.
    - soc_bind_aux_dev() will also search components by name of an aux_dev,
      since it may not be a codec.
    - Move probing of aux_devs before checking new DAI links brought by
      topology.
    - Move removal of aux_devs later than removal of links. Because topology
      of aux components may register DAIs and the DAI drivers will go with
      removal of the aux components, we want soc_remove_link_dais() to remove
      the DAIs at first.
    
    Signed-off-by: Mengdong Lin <mengdong.lin@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 9d1383e8d039..5bc5def6af02 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -787,6 +787,7 @@ struct snd_soc_component {
 	unsigned int registered_as_component:1;
 
 	struct list_head list;
+	struct list_head list_aux; /* for auxiliary component of the card */
 
 	struct snd_soc_dai_driver *dai_drv;
 	int num_dai;
@@ -830,6 +831,9 @@ struct snd_soc_component {
 	int (*probe)(struct snd_soc_component *);
 	void (*remove)(struct snd_soc_component *);
 
+	/* machine specific init */
+	int (*init)(struct snd_soc_component *component);
+
 #ifdef CONFIG_DEBUG_FS
 	void (*init_debugfs)(struct snd_soc_component *component);
 	const char *debugfs_prefix;
@@ -1130,8 +1134,7 @@ struct snd_soc_card {
 	 */
 	struct snd_soc_aux_dev *aux_dev;
 	int num_aux_devs;
-	struct snd_soc_pcm_runtime *rtd_aux;
-	int num_aux_rtd;
+	struct list_head aux_comp_list;
 
 	const struct snd_kcontrol_new *controls;
 	int num_controls;
@@ -1537,6 +1540,7 @@ static inline void snd_soc_initialize_card_lists(struct snd_soc_card *card)
 	INIT_LIST_HEAD(&card->widgets);
 	INIT_LIST_HEAD(&card->paths);
 	INIT_LIST_HEAD(&card->dapm_list);
+	INIT_LIST_HEAD(&card->aux_comp_list);
 }
 
 static inline bool snd_soc_volsw_is_stereo(struct soc_mixer_control *mc)

commit 68003e6cf2bbd239a322bd8a28dacfaf8174fdee
Author: Mengdong Lin <mengdong.lin@linux.intel.com>
Date:   Thu Dec 31 16:40:43 2015 +0800

    ASoC: Support registering a DAI dynamically
    
    Define API snd_soc_register_dai() to add a DAI dynamically and
    create the DAI widgets. Topology can use this API to register DAIs
    when probing a component with topology info. These DAIs's playback
    & capture widgets will be freed when the sound card is unregistered
    and the DAIs will be freed when cleaning up the component.
    
    And a dobj is embedded into the struct snd_soc_dai_driver. Topology
    can use the dobj to find the DAI drivers created by it and free them
    when the topology component is removed.
    
    Signed-off-by: Mengdong Lin <mengdong.lin@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index af347bcdc2f6..9d1383e8d039 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1663,6 +1663,9 @@ int snd_soc_add_dai_link(struct snd_soc_card *card,
 void snd_soc_remove_dai_link(struct snd_soc_card *card,
 			     struct snd_soc_dai_link *dai_link);
 
+int snd_soc_register_dai(struct snd_soc_component *component,
+	struct snd_soc_dai_driver *dai_drv);
+
 #include <sound/soc-dai.h>
 
 #ifdef CONFIG_DEBUG_FS

commit 783513eec3209542fcd6ac0cbcb030b3c17a4827
Author: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date:   Tue Dec 29 16:25:13 2015 +0000

    ASoC: Use nested lock for snd_soc_dapm_mutex_lock
    
    snd_soc_dapm_mutex_lock currently uses the un-nested call which can
    cause lockdep warnings when called from control handlers (a relatively
    common usage) and using modules. As creating the control causes a
    potential mutex inversion with the handler, creating the control will
    take the controls_rwsem under the dapm_mutex and accessing the control
    will take the dapm_mutex under controls_rwsem.
    
    All the users look like they want to be using the runtime class of the
    lock anyway, so this patch just changes snd_soc_dapm_mutex_lock to use
    the nested call, with the SND_SOC_DAPM_CLASS_RUNTIME class.
    
    Fixes: f6d5e586b416 ("ASoC: dapm: Add helpers to lock/unlock DAPM mutex")
    Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index a8b4b9c8b1d2..fb955e69a78e 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1655,7 +1655,7 @@ extern const struct dev_pm_ops snd_soc_pm_ops;
 /* Helper functions */
 static inline void snd_soc_dapm_mutex_lock(struct snd_soc_dapm_context *dapm)
 {
-	mutex_lock(&dapm->card->dapm_mutex);
+	mutex_lock_nested(&dapm->card->dapm_mutex, SND_SOC_DAPM_CLASS_RUNTIME);
 }
 
 static inline void snd_soc_dapm_mutex_unlock(struct snd_soc_dapm_context *dapm)

commit 9451a469280adb721e3eca5eb3526c3331c2847d
Merge: b9546d09b178 a1e5e7e9b36f 5c27087e4b43 c1f2a342846f
Author: Mark Brown <broonie@kernel.org>
Date:   Wed Dec 23 00:23:44 2015 +0000

    Merge remote-tracking branches 'asoc/topic/kcontrol', 'asoc/topic/max98357a' and 'asoc/topic/mtk' into asoc-next

commit 89c172e2aa3063b3860ef1ace33e9a27c45a5aa7
Merge: a93202fa7b45 a9b17a638af5
Author: Mark Brown <broonie@kernel.org>
Date:   Wed Dec 23 00:23:33 2015 +0000

    Merge remote-tracking branch 'asoc/topic/pcm3168a' into asoc-next

commit a93202fa7b450a2783feecc571dcd0fee55c91c4
Merge: 3b88210da3a6 61b0088b6a5b
Author: Mark Brown <broonie@kernel.org>
Date:   Wed Dec 23 00:23:32 2015 +0000

    Merge remote-tracking branch 'asoc/topic/pcm-list' into asoc-next

commit d13871b3531b05fdf5b8ca92c98779e574fe06f1
Author: Damien.Horsley <Damien.Horsley@imgtec.com>
Date:   Tue Dec 8 15:58:58 2015 +0000

    ASoC: Add SOC_DOUBLE_STS macro
    
    Add SOC_DOUBLE_STS macro for read-only volatile status controls
    
    Signed-off-by: Damien.Horsley <Damien.Horsley@imgtec.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index a8b4b9c8b1d2..2b399b0d7f8a 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -110,6 +110,14 @@
 	.put = snd_soc_put_volsw, \
 	.private_value = SOC_DOUBLE_VALUE(reg, shift_left, shift_right, \
 					  max, invert, 0) }
+#define SOC_DOUBLE_STS(xname, reg, shift_left, shift_right, max, invert) \
+{									\
+	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname),		\
+	.info = snd_soc_info_volsw, .get = snd_soc_get_volsw,		\
+	.access = SNDRV_CTL_ELEM_ACCESS_READ |				\
+		SNDRV_CTL_ELEM_ACCESS_VOLATILE,				\
+	.private_value = SOC_DOUBLE_VALUE(reg, shift_left, shift_right,	\
+					  max, invert, 0) }
 #define SOC_DOUBLE_R(xname, reg_left, reg_right, xshift, xmax, xinvert) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname), \
 	.info = snd_soc_info_volsw, \

commit d6f220ea13edfd3430fb42e09ff92e321ffb5762
Author: Mengdong Lin <mengdong.lin@linux.intel.com>
Date:   Wed Dec 2 14:11:32 2015 +0800

    ASoC: Define add/remove_dai_link ops for a soc card
    
    A machine driver can register the two ops.
    
    When a DAI link is added or removed by a component's topology, the
    ASoC core can call the ops to notify the machine driver for extra
    intialization or destruction.
    
    E.g. topology can create FE DAI links from a cpu DAI component, and
    the machine driver may define an add_dai_link ops to set machine-specific
    .init ops for the DAI link.
    
    Signed-off-by: Mengdong Lin <mengdong.lin@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 410cb0b422be..af347bcdc2f6 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1104,6 +1104,11 @@ struct snd_soc_card {
 				   struct snd_soc_dapm_context *dapm,
 				   enum snd_soc_bias_level level);
 
+	int (*add_dai_link)(struct snd_soc_card *,
+			    struct snd_soc_dai_link *link);
+	void (*remove_dai_link)(struct snd_soc_card *,
+			    struct snd_soc_dai_link *link);
+
 	long pmdown_time;
 
 	/* CPU <--> Codec DAI links  */

commit f8f80361d07d503093940097e967a7edaa134ca2
Author: Mengdong Lin <mengdong.lin@linux.intel.com>
Date:   Wed Dec 2 14:11:22 2015 +0800

    ASoC: Implement DAI links in a list & define API to add/remove a link
    
    Implement a dai link list for the soc card.
    
    Add APIs to add/remove a DAI links dynamically, e.g. by topology.
    
    And a dobj is embedded into the struct snd_soc_dai_link. Topology can
    use the dobj to find the links created by it and remove them when the
    topology component is unloaded.
    
    The predefined DAI links are reserved to keep backward compatibility.
    And they will also be added to the list.
    
    Signed-off-by: Mengdong Lin <mengdong.lin@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 232b30d3fa68..410cb0b422be 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1037,6 +1037,9 @@ struct snd_soc_dai_link {
 
 	/* pmdown_time is ignored at stop */
 	unsigned int ignore_pmdown_time:1;
+
+	struct list_head list; /* DAI link list of the soc card */
+	struct snd_soc_dobj dobj; /* For topology */
 };
 
 struct snd_soc_codec_conf {
@@ -1104,8 +1107,11 @@ struct snd_soc_card {
 	long pmdown_time;
 
 	/* CPU <--> Codec DAI links  */
-	struct snd_soc_dai_link *dai_link;
-	int num_links;
+	struct snd_soc_dai_link *dai_link;  /* predefined links only */
+	int num_links;  /* predefined links only */
+	struct list_head dai_link_list; /* all links */
+	int num_dai_links;
+
 	struct list_head rtd_list;
 	int num_rtd;
 
@@ -1647,6 +1653,11 @@ int snd_soc_of_get_dai_link_codecs(struct device *dev,
 				   struct device_node *of_node,
 				   struct snd_soc_dai_link *dai_link);
 
+int snd_soc_add_dai_link(struct snd_soc_card *card,
+				struct snd_soc_dai_link *dai_link);
+void snd_soc_remove_dai_link(struct snd_soc_card *card,
+			     struct snd_soc_dai_link *dai_link);
+
 #include <sound/soc-dai.h>
 
 #ifdef CONFIG_DEBUG_FS

commit 50a4f98d3452ea3818eb364f9c34a9de139df654
Author: Vinod Koul <vinod.koul@intel.com>
Date:   Mon Nov 23 21:22:29 2015 +0530

    ASoC: core: mark SND_SOC_BYTES_EXT as deprecated
    
    Since we have SND_SOC_BYTES_TLV control to lets devices have
    larger size data sent, we do not need SND_SOC_BYTES_EXT with 512
    byte limitation so mark it deprecated
    
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index a8b4b9c8b1d2..6dbd24a36ef8 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -293,6 +293,9 @@
 		{.base = xbase, .num_regs = xregs,	      \
 		 .mask = xmask }) }
 
+/*
+ * SND_SOC_BYTES_EXT is deprecated, please USE SND_SOC_BYTES_TLV instead
+ */
 #define SND_SOC_BYTES_EXT(xname, xcount, xhandler_get, xhandler_put) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
 	.info = snd_soc_bytes_info_ext, \

commit 1a497983a5ae62b4970187183fb3b40e68515a24
Author: Mengdong Lin <mengdong.lin@linux.intel.com>
Date:   Wed Nov 18 02:34:11 2015 -0500

    ASoC: Change the PCM runtime array to a list
    
    Currently the number of DAI links is statically defined by the machine
    driver at build time using an array. This makes it difficult to shrink/
    grow the number of DAI links at runtime in order to reflect any changes
    in topology.
    
    We can change the DAI link array in the core to a list so that PCMs and
    FE DAI links can be added and deleted at runtime to reflect changes in
    use case and DSP topology. The machine driver can still register DAI links
    as an array.
    
    As the 1st step, this patch change the PCM runtime array to a list. A new
    PCM runtime is added to the list when a DAI link is bound successfully.
    
    Later patches will further implement the DAI link list.
    
    More:
    - define snd_soc_new/free_pcm_runtime() to create/free a runtime.
    - define soc_add_pcm_runtime() to add a runtime to the rtd list.
    - define soc_remove_pcm_runtimes() to clean up the runtime list.
    
    - traverse the rtd list to probe the link components and dais.
    
    - Add a field "num" to PCM runtime struct, used to specify the device
      number when creating the pcm device, and for a soc card to access
      its dai_props array.
    
    - The following 3rd party machine/platform drivers iterate the rtd list
      to check the runtimes:
      sound/soc/intel/atom/sst-mfld-platform-pcm.c
      sound/soc/intel/boards/cht_bsw_rt5645.c
      sound/soc/intel/boards/cht_bsw_rt5672.c
      sound/soc/intel/boards/cht_bsw_max98090_ti.c
    
    Signed-off-by: Mengdong Lin <mengdong.lin@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index a8b4b9c8b1d2..232b30d3fa68 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1106,7 +1106,7 @@ struct snd_soc_card {
 	/* CPU <--> Codec DAI links  */
 	struct snd_soc_dai_link *dai_link;
 	int num_links;
-	struct snd_soc_pcm_runtime *rtd;
+	struct list_head rtd_list;
 	int num_rtd;
 
 	/* optional codec specific configuration */
@@ -1201,6 +1201,9 @@ struct snd_soc_pcm_runtime {
 	struct dentry *debugfs_dpcm_root;
 	struct dentry *debugfs_dpcm_state;
 #endif
+
+	unsigned int num; /* 0-based and monotonic increasing */
+	struct list_head list; /* rtd list of the soc card */
 };
 
 /* mixer control */

commit a1e5e7e9b36f360bf75e4f0f7ceb899682f213bd
Author: Mythri P K <mythri.p.k@intel.com>
Date:   Mon Nov 9 23:20:00 2015 +0530

    ASoC: core: Pass kcontrol to bytes tlv callbacks
    
    Add kcontrol to the tlv callbacks in soc_bytes_ext, as it is
    needed for referencing the corresponding control in the driver
    code
    
    Also fix the only upstream user in topology core
    
    Signed-off-by: Mythri P K <mythri.p.k@intel.com>
    Signed-off-by: Jeeja KP <jeeja.kp@intel.com>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index a8b4b9c8b1d2..6603155f50ca 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1225,8 +1225,10 @@ struct soc_bytes_ext {
 	struct snd_soc_dobj dobj;
 
 	/* used for TLV byte control */
-	int (*get)(unsigned int __user *bytes, unsigned int size);
-	int (*put)(const unsigned int __user *bytes, unsigned int size);
+	int (*get)(struct snd_kcontrol *kcontrol, unsigned int __user *bytes,
+			unsigned int size);
+	int (*put)(struct snd_kcontrol *kcontrol, const unsigned int __user *bytes,
+			unsigned int size);
 };
 
 /* multi register control */

commit 1c9d000c5b3c73d1ae79fe0f332a79a166a8131c
Merge: 7034ef5f604a c5cff89b5f64
Author: Mark Brown <broonie@kernel.org>
Date:   Mon Oct 26 11:16:02 2015 +0900

    Merge remote-tracking branch 'asoc/topic/da7219' into asoc-next

commit 6439e5c2a784f6b00dd136df54d6f0859bc77af3
Merge: 7c9c29eefa8b 6f0c42269f00
Author: Mark Brown <broonie@kernel.org>
Date:   Mon Oct 26 11:15:55 2015 +0900

    Merge remote-tracking branch 'asoc/topic/core' into asoc-next

commit 7c9c29eefa8ba503a34bac4ca4fb27083b78b726
Merge: 32b88194f71d 4922e7a1b767
Author: Mark Brown <broonie@kernel.org>
Date:   Mon Oct 26 11:15:54 2015 +0900

    Merge tag 'asoc-v4.3-rc2' into asoc-next
    
    ASoC: Updates for v4.4
    
    A first batch of updates targetted at v4.4.  There are no substantial
    core fixes here, the biggest block of changes is updates to the rcar
    drivers and the addition of a CODEC driver for the AK4613.
    
    # gpg: Signature made Fri 25 Sep 2015 05:37:06 KST using RSA key ID 5D5487D0
    # gpg: key CD7BEEBC: no public key for trusted key - skipped
    # gpg: key CD7BEEBC marked as ultimately trusted
    # gpg: key AF88CD16: no public key for trusted key - skipped
    # gpg: key AF88CD16 marked as ultimately trusted
    # gpg: key 16005C11: no public key for trusted key - skipped
    # gpg: key 16005C11 marked as ultimately trusted
    # gpg: key 5621E907: no public key for trusted key - skipped
    # gpg: key 5621E907 marked as ultimately trusted
    # gpg: key 5C6153AD: no public key for trusted key - skipped
    # gpg: key 5C6153AD marked as ultimately trusted
    # gpg: Good signature from "Mark Brown <broonie@sirena.org.uk>"
    # gpg:                 aka "Mark Brown <broonie@debian.org>"
    # gpg:                 aka "Mark Brown <broonie@kernel.org>"
    # gpg:                 aka "Mark Brown <broonie@tardis.ed.ac.uk>"
    # gpg:                 aka "Mark Brown <broonie@linaro.org>"
    # gpg:                 aka "Mark Brown <Mark.Brown@linaro.org>"

commit 6f0c42269f000b1e346c84d9a589f17aa94c96d8
Author: Jie Yang <yang.jie@intel.com>
Date:   Tue Oct 13 23:41:00 2015 +0800

    ASoC: compress: add config item for soc-compress to make it compiled only when needed
    
    We don't always need soc-compress in soc, here add a config item
    SND_SOC_COMPRESS, when nobody select it, the soc-compress will
    not be compiled.
    
    Here also change Kconfig to 'select SND_SOC_COMPRESS' for drivers
    that needed soc-compress.
    
    Signed-off-by: Jie Yang <yang.jie@intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 71e0c0566b6e..a7bc82b08cd4 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -440,7 +440,9 @@ int snd_soc_platform_read(struct snd_soc_platform *platform,
 int snd_soc_platform_write(struct snd_soc_platform *platform,
 					unsigned int reg, unsigned int val);
 int soc_new_pcm(struct snd_soc_pcm_runtime *rtd, int num);
-int soc_new_compress(struct snd_soc_pcm_runtime *rtd, int num);
+#ifdef CONFIG_SND_SOC_COMPRESS
+int snd_soc_new_compress(struct snd_soc_pcm_runtime *rtd, int num);
+#endif
 
 struct snd_pcm_substream *snd_soc_get_dai_substream(struct snd_soc_card *card,
 		const char *dai_link, int stream);

commit 26d9ca3462df8f7e83fc372b23c8da5ed2b1c4f3
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Sun Oct 18 17:04:33 2015 +0200

    ASoC: Let snd_soc_limit_volume() take a snd_soc_card
    
    snd_soc_limit_volume() operates on a card and the CODEC that is passed in
    is only used to look up the card. Let it directly take the card instead.
    This makes it possible to use it when no snd_soc_codec is available.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Acked-by: Jarkko Nikula <jarkko.nikula@bitmer.com>
    Tested-by: Jarkko Nikula <jarkko.nikula@bitmer.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 884e728b09d9..71e0c0566b6e 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -591,7 +591,7 @@ int snd_soc_put_volsw_range(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
 int snd_soc_get_volsw_range(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
-int snd_soc_limit_volume(struct snd_soc_codec *codec,
+int snd_soc_limit_volume(struct snd_soc_card *card,
 	const char *name, int max);
 int snd_soc_bytes_info(struct snd_kcontrol *kcontrol,
 		       struct snd_ctl_elem_info *uinfo);

commit 34198710f55b5f359f43e67d9a08fe5aadfbca1b
Author: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date:   Wed Oct 14 13:31:24 2015 +0100

    ASoC: Add info callback for SX_TLV controls
    
    SX_TLV controls are intended for situations where the register behind
    the control has some non-zero value indicating the minimum gain
    and then gains increasing from there and eventually overflowing through
    zero.
    
    Currently every CODEC implementing these controls specifies the minimum
    as the non-zero value for the minimum and the maximum as the number of
    gain settings available.
    
    This means when the info callback subtracts the minimum value from the
    maximum value to calculate the number of gain levels available it is
    actually under reporting the available levels. This patch fixes this
    issue by adding a new snd_soc_info_volsw_sx callback that does not
    subtract the minimum value.
    
    Fixes: 1d99f2436d0d ("ASoC: core: Rework SOC_DOUBLE_R_SX_TLV add SOC_SINGLE_SX_TLV")
    Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Acked-by: Brian Austin <brian.austin@cirrus.com>
    Tested-by: Brian Austin <brian.austin@cirrus.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: stable@vger.kernel.org

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 884e728b09d9..26ede14597da 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -86,7 +86,7 @@
 	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ | \
 	SNDRV_CTL_ELEM_ACCESS_READWRITE, \
 	.tlv.p  = (tlv_array),\
-	.info = snd_soc_info_volsw, \
+	.info = snd_soc_info_volsw_sx, \
 	.get = snd_soc_get_volsw_sx,\
 	.put = snd_soc_put_volsw_sx, \
 	.private_value = (unsigned long)&(struct soc_mixer_control) \
@@ -156,7 +156,7 @@
 	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ | \
 	SNDRV_CTL_ELEM_ACCESS_READWRITE, \
 	.tlv.p  = (tlv_array), \
-	.info = snd_soc_info_volsw, \
+	.info = snd_soc_info_volsw_sx, \
 	.get = snd_soc_get_volsw_sx, \
 	.put = snd_soc_put_volsw_sx, \
 	.private_value = (unsigned long)&(struct soc_mixer_control) \
@@ -574,6 +574,8 @@ int snd_soc_put_enum_double(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
 int snd_soc_info_volsw(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_info *uinfo);
+int snd_soc_info_volsw_sx(struct snd_kcontrol *kcontrol,
+			  struct snd_ctl_elem_info *uinfo);
 #define snd_soc_info_bool_ext		snd_ctl_boolean_mono_info
 int snd_soc_get_volsw(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);

commit c25c79b468a61ad8a54f764553056e2e2a427ea8
Author: Adam Thomson <Adam.Thomson.Opensource@diasemi.com>
Date:   Tue Sep 29 16:43:56 2015 +0100

    ASoC: Add SOC_DOUBLE_R_EXT
    
    _EXT version of SOC_DOUBLE_R required to allow for custom handlers.
    
    Signed-off-by: Adam Thomson <Adam.Thomson.Opensource@diasemi.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 884e728b09d9..2d79cb55aec5 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -217,6 +217,13 @@
 	.get = xhandler_get, .put = xhandler_put, \
 	.private_value = \
 		SOC_DOUBLE_VALUE(reg, shift_left, shift_right, max, invert, 0) }
+#define SOC_DOUBLE_R_EXT(xname, reg_left, reg_right, xshift, xmax, xinvert,\
+	 xhandler_get, xhandler_put) \
+{	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname), \
+	.info = snd_soc_info_volsw, \
+	.get = xhandler_get, .put = xhandler_put, \
+	.private_value = SOC_DOUBLE_R_VALUE(reg_left, reg_right, xshift, \
+					    xmax, xinvert) }
 #define SOC_SINGLE_EXT_TLV(xname, xreg, xshift, xmax, xinvert,\
 	 xhandler_get, xhandler_put, tlv_array) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \

commit 727e53a12fed3ab2d5fadb7aa3c510d506a9d716
Merge: e32efed3ead2 1ff68f55901f 6c84e5917f83 03d3964c517b 31f4f0c640bd 3e8f5263bd83
Author: Mark Brown <broonie@kernel.org>
Date:   Wed Sep 23 11:01:27 2015 -0700

    Merge remote-tracking branches 'asoc/topic/sh', 'asoc/topic/simple', 'asoc/topic/spear', 'asoc/topic/sunxi' and 'asoc/topic/tlv320aic3x' into asoc-next

commit a54e22f40480eb63533d3f0520e9c84b102dd09f
Author: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date:   Wed Sep 16 13:59:42 2015 +0100

    ASoC: Add SOC_SINGLE_RANGE_EXT_TLV macro
    
    Add a version of the SOC_SINGLE_RANGE_TLV macro that allows a custom get
    and put to be specified.
    
    Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 884e728b09d9..9ffa28514fa7 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -226,6 +226,18 @@
 	.info = snd_soc_info_volsw, \
 	.get = xhandler_get, .put = xhandler_put, \
 	.private_value = SOC_SINGLE_VALUE(xreg, xshift, xmax, xinvert, 0) }
+#define SOC_SINGLE_RANGE_EXT_TLV(xname, xreg, xshift, xmin, xmax, xinvert, \
+				 xhandler_get, xhandler_put, tlv_array) \
+{	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname),\
+	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ |\
+		 SNDRV_CTL_ELEM_ACCESS_READWRITE,\
+	.tlv.p = (tlv_array), \
+	.info = snd_soc_info_volsw_range, \
+	.get = xhandler_get, .put = xhandler_put, \
+	.private_value = (unsigned long)&(struct soc_mixer_control) \
+		{.reg = xreg, .rreg = xreg, .shift = xshift, \
+		 .rshift = xshift, .min = xmin, .max = xmax, \
+		 .platform_max = xmax, .invert = xinvert} }
 #define SOC_DOUBLE_EXT_TLV(xname, xreg, shift_left, shift_right, xmax, xinvert,\
 	 xhandler_get, xhandler_put, tlv_array) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname), \

commit 6131084a0bc966107021d8c89489f9cd1663b902
Author: Jyri Sarha <jsarha@ti.com>
Date:   Wed Sep 9 21:27:43 2015 +0300

    ASoC: simple-card: Add tdm slot mask support to simple-card
    
    Adds DT binding for explicitly choosing a tdm mask for DAI and uses it
    in simple-card. The API for snd_soc_of_parse_tdm_slot() has also been
    changed.
    
    Signed-off-by: Jyri Sarha <jsarha@ti.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 884e728b09d9..a76622d7bb2f 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1601,6 +1601,8 @@ int snd_soc_of_parse_card_name(struct snd_soc_card *card,
 int snd_soc_of_parse_audio_simple_widgets(struct snd_soc_card *card,
 					  const char *propname);
 int snd_soc_of_parse_tdm_slot(struct device_node *np,
+			      unsigned int *tx_mask,
+			      unsigned int *rx_mask,
 			      unsigned int *slots,
 			      unsigned int *slot_width);
 void snd_soc_of_parse_audio_prefix(struct snd_soc_card *card,

commit acb47ad5023fbd29a2c9a681c28b33968c9dcc9e
Merge: 1d1ed2c23e6f 775b07de4fa4 0643558f85e7 d5f1117ff60d 5e3cdaa20816 7d40acc38be5
Author: Mark Brown <broonie@kernel.org>
Date:   Sun Aug 30 15:55:21 2015 +0100

    Merge remote-tracking branches 'asoc/topic/mediatek', 'asoc/topic/mtk', 'asoc/topic/nuc900', 'asoc/topic/of-name' and 'asoc/topic/omap' into asoc-next

commit 7c0031360bd721254a52c56bd1c2e90b6d9df57b
Merge: 399962239c07 508a43fdd730 553de19a0e2f 628536ea0627 c5b8540dca22
Author: Mark Brown <broonie@kernel.org>
Date:   Sun Aug 30 15:53:39 2015 +0100

    Merge remote-tracking branches 'asoc/topic/davinci', 'asoc/topic/davinci-vcif', 'asoc/topic/doc' and 'asoc/topic/dpcm' into asoc-next

commit 21af1094385186a078a044f886a312511dcca04f
Merge: 28becbd59c89 93ec3a1ad5b8 310398f5e461 f8ea6cebcfa6 d90c6cc24204 56113f6e6f8d
Author: Mark Brown <broonie@kernel.org>
Date:   Sun Aug 30 15:52:21 2015 +0100

    Merge remote-tracking branches 'asoc/topic/88pm860x', 'asoc/topic/ac97', 'asoc/topic/ak4542', 'asoc/topic/arizona' and 'asoc/topic/atmel' into asoc-next

commit cb42e0f709a73caf4d631be32189bb1ca513ad25
Merge: ca945cf9fb88 f2988afedf2c
Author: Mark Brown <broonie@kernel.org>
Date:   Sun Aug 30 15:52:12 2015 +0100

    Merge remote-tracking branch 'asoc/topic/rt5645' into asoc-next

commit 628536ea0627e71da654bd34b1942c85832dbdba
Author: Jonathan Corbet <corbet@lwn.net>
Date:   Tue Aug 25 01:14:48 2015 -0600

    ASoC: Clean up docbook warnings
    
    A number of functions and structures in the sound subsystem had incomplete
    and/or obsolete DocBook comments, leading to warnings when the docs were
    built.  Correct those comments so that we can enjoy our audio in the
    absence of warning noise.
    
    Signed-off-by: Jonathan Corbet <corbet@lwn.net>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 93df8bf9d54a..4537e81eeeda 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -619,6 +619,7 @@ int snd_soc_put_strobe(struct snd_kcontrol *kcontrol,
  * @pin:    name of the pin to update
  * @mask:   bits to check for in reported jack status
  * @invert: if non-zero then pin is enabled when status is not reported
+ * @list:   internal list entry
  */
 struct snd_soc_jack_pin {
 	struct list_head list;
@@ -635,7 +636,7 @@ struct snd_soc_jack_pin {
  * @jack_type: type of jack that is expected for this voltage
  * @debounce_time: debounce_time for jack, codec driver should wait for this
  *		duration before reading the adc for voltages
- * @:list: list container
+ * @list:   internal list entry
  */
 struct snd_soc_jack_zone {
 	unsigned int min_mv;
@@ -651,12 +652,12 @@ struct snd_soc_jack_zone {
  * @gpio:         legacy gpio number
  * @idx:          gpio descriptor index within the function of the GPIO
  *                consumer device
- * @gpiod_dev     GPIO consumer device
+ * @gpiod_dev:    GPIO consumer device
  * @name:         gpio name. Also as connection ID for the GPIO consumer
  *                device function name lookup
  * @report:       value to report when jack detected
  * @invert:       report presence in low state
- * @debouce_time: debouce time in ms
+ * @debounce_time: debounce time in ms
  * @wake:	  enable as wake source
  * @jack_status_check: callback function which overrides the detection
  *		       to provide more complex checks (eg, reading an
@@ -672,11 +673,13 @@ struct snd_soc_jack_gpio {
 	int debounce_time;
 	bool wake;
 
+	/* private: */
 	struct snd_soc_jack *jack;
 	struct delayed_work work;
 	struct gpio_desc *desc;
 
 	void *data;
+	/* public: */
 	int (*jack_status_check)(void *data);
 };
 
@@ -1319,7 +1322,7 @@ static inline struct snd_soc_dapm_context *snd_soc_codec_get_dapm(
 
 /**
  * snd_soc_dapm_init_bias_level() - Initialize CODEC DAPM bias level
- * @dapm: The CODEC for which to initialize the DAPM bias level
+ * @codec: The CODEC for which to initialize the DAPM bias level
  * @level: The DAPM level to initialize to
  *
  * Initializes the CODEC DAPM bias level. See snd_soc_dapm_init_bias_level().

commit 7361fbeaeaab5282bbfc88f1f6fe4cf034f7623c
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Tue Jul 21 21:53:01 2015 +0200

    ASoC: ac97: Add support for resetting device before registration
    
    AC97 devices need to be initially reset before they can be used. Currently
    each driver does this on its own.
    
    Add support for resetting the device to core in snd_soc_new_ac97_codec().
    If the caller supplies a device ID and device ID mask the function will
    reset the device and verify that it has the correct ID, if it does not a
    error is returned.
    
    This will allow to remove custom code with similar functionality from
    individual drivers.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Reviewed-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 93df8bf9d54a..42d144a4b7ba 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -526,7 +526,8 @@ int snd_soc_test_bits(struct snd_soc_codec *codec, unsigned int reg,
 
 #ifdef CONFIG_SND_SOC_AC97_BUS
 struct snd_ac97 *snd_soc_alloc_ac97_codec(struct snd_soc_codec *codec);
-struct snd_ac97 *snd_soc_new_ac97_codec(struct snd_soc_codec *codec);
+struct snd_ac97 *snd_soc_new_ac97_codec(struct snd_soc_codec *codec,
+	unsigned int id, unsigned int id_mask);
 void snd_soc_free_ac97_codec(struct snd_ac97 *ac97);
 
 int snd_soc_set_ac97_ops(struct snd_ac97_bus_ops *ops);

commit 5e3cdaa20816dd2fe4dc17d06a9f0dae0abc930c
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Wed Jul 15 07:07:42 2015 +0000

    ASoC: core: add snd_soc_of_parse_audio_prefix()
    
    Current ASoC can add name_prefix for DAPM, and it is necessary for
    route settings. This patch adds snd_soc_of_parse_audio_prefix() for
    this purpose. It will be used with snd_soc_of_parse_audio_routing().
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Tested-by: Keita Kobayashi <keita.kobayashi.ym@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 93df8bf9d54a..75cd19ced804 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1604,6 +1604,10 @@ int snd_soc_of_parse_audio_simple_widgets(struct snd_soc_card *card,
 int snd_soc_of_parse_tdm_slot(struct device_node *np,
 			      unsigned int *slots,
 			      unsigned int *slot_width);
+void snd_soc_of_parse_audio_prefix(struct snd_soc_card *card,
+				   struct snd_soc_codec_conf *codec_conf,
+				   struct device_node *of_node,
+				   const char *propname);
 int snd_soc_of_parse_audio_routing(struct snd_soc_card *card,
 				   const char *propname);
 unsigned int snd_soc_of_parse_daifmt(struct device_node *np,

commit abd31b32dde4683df6fd0439caa314aafd751698
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Wed Jul 8 20:47:44 2015 +0200

    ASoC: Use card field to indicate whether a component is bound
    
    Use the card field of a component to indicate whether it is bound or not.
    This makes a certain sense given that the field contains the card the
    component is bound to and a component can only be bound to one card at a
    time. And it also requires to unset the card field when the component is
    unbound from the card.
    
    This makes the probded flag redundant and it can be removed.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 93df8bf9d54a..59635a12c3be 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -758,7 +758,6 @@ struct snd_soc_component {
 
 	unsigned int ignore_pmdown_time:1; /* pmdown_time is ignored at stop */
 	unsigned int registered_as_component:1;
-	unsigned int probed:1;
 
 	struct list_head list;
 

commit 4890140f3888b4a4baef90d84e278858afe45248
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Mon Jul 6 15:38:11 2015 +0200

    ASoC: Remove snd_soc_codec dapm field
    
    There are no more direct users of the snd_soc_codec DAPM field left. So we
    can finally remove it and switch over to directly using the component DAPM
    context and remove the dapm_ptr indirection.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 93df8bf9d54a..3ccd82a16d54 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -792,7 +792,6 @@ struct snd_soc_component {
 
 	/* Don't use these, use snd_soc_component_get_dapm() */
 	struct snd_soc_dapm_context dapm;
-	struct snd_soc_dapm_context *dapm_ptr;
 
 	const struct snd_kcontrol_new *controls;
 	unsigned int num_controls;
@@ -832,9 +831,6 @@ struct snd_soc_codec {
 	/* component */
 	struct snd_soc_component component;
 
-	/* Don't access this directly, use snd_soc_codec_get_dapm() */
-	struct snd_soc_dapm_context dapm;
-
 #ifdef CONFIG_DEBUG_FS
 	struct dentry *debugfs_reg;
 #endif
@@ -1277,7 +1273,7 @@ static inline struct snd_soc_component *snd_soc_dapm_to_component(
 static inline struct snd_soc_codec *snd_soc_dapm_to_codec(
 	struct snd_soc_dapm_context *dapm)
 {
-	return container_of(dapm, struct snd_soc_codec, dapm);
+	return snd_soc_component_to_codec(snd_soc_dapm_to_component(dapm));
 }
 
 /**
@@ -1302,7 +1298,7 @@ static inline struct snd_soc_platform *snd_soc_dapm_to_platform(
 static inline struct snd_soc_dapm_context *snd_soc_component_get_dapm(
 	struct snd_soc_component *component)
 {
-	return component->dapm_ptr;
+	return &component->dapm;
 }
 
 /**
@@ -1314,7 +1310,7 @@ static inline struct snd_soc_dapm_context *snd_soc_component_get_dapm(
 static inline struct snd_soc_dapm_context *snd_soc_codec_get_dapm(
 	struct snd_soc_codec *codec)
 {
-	return &codec->dapm;
+	return snd_soc_component_get_dapm(&codec->component);
 }
 
 /**

commit 28bedc59469e869c1ed9c30384d61798d6c3eb5c
Merge: b5a8342c1d94 932ae8809469 208ba89b402d 3d907cc30d07 2d52d1723982 7a8c78675f3c
Author: Mark Brown <broonie@kernel.org>
Date:   Fri Jun 5 18:55:05 2015 +0100

    Merge remote-tracking branches 'asoc/topic/topology', 'asoc/topic/twl6040', 'asoc/topic/wm5100', 'asoc/topic/wm8741' and 'asoc/topic/wm8960' into asoc-next

commit 698803f8b9cec4e224bc344f7120f70246457ae0
Merge: 6ba82f91df1f 518f6bab1384 b073ed4e2126
Author: Mark Brown <broonie@kernel.org>
Date:   Fri Jun 5 18:54:52 2015 +0100

    Merge remote-tracking branches 'asoc/topic/davinci' and 'asoc/topic/dpcm' into asoc-next

commit 4b57895522b150966eebcf18f929e1c522d90bb9
Merge: 2914b7004b93 cc76e7def0fa
Author: Mark Brown <broonie@kernel.org>
Date:   Fri Jun 5 18:54:45 2015 +0100

    Merge remote-tracking branch 'asoc/topic/dapm' into asoc-next

commit 8a9782346dccd82cf912552735bda619de4efd8c
Author: Liam Girdwood <liam.r.girdwood@linux.intel.com>
Date:   Fri May 29 19:06:14 2015 +0100

    ASoC: topology: Add topology core
    
    The topology core parses the FW topology file for known block types and
    instanciates any common ALSA/ASoC objects that it discovers. The core
    also passes any block that is does not understand to client component
    drivers for enumeration.
    
    The core exports some APIs to client drivers in order to load and unload
    firmware topology data as use case require.
    
    Currently the core deals with the following object types :-
    
     o kcontrols. This includes TLV, enumerated and bytes controls.
     o DAPM widgets. All types with any associated kcontrol.
     o DAPM graph.
     o FE PCM. FE PCM capabilities and configuration can be defined.
     o BE DAI Link. BE DAI link capabilities and configuration can be defined.
     o Codec <-> codec style links capabilities and configuration.
    
    Signed-off-by: Liam Girdwood <liam.r.girdwood@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 2f2e59e1513e..bfd84a7edfa5 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -27,6 +27,7 @@
 #include <sound/compress_driver.h>
 #include <sound/control.h>
 #include <sound/ac97_codec.h>
+#include <sound/soc-topology.h>
 
 /*
  * Convenience kcontrol builders
@@ -764,6 +765,9 @@ struct snd_soc_component {
 
 	struct mutex io_mutex;
 
+	/* attached dynamic objects */
+	struct list_head dobj_list;
+
 #ifdef CONFIG_DEBUG_FS
 	struct dentry *debugfs_root;
 #endif
@@ -1108,6 +1112,9 @@ struct snd_soc_card {
 	struct list_head dapm_list;
 	struct list_head dapm_dirty;
 
+	/* attached dynamic objects */
+	struct list_head dobj_list;
+
 	/* Generic DAPM context for the card */
 	struct snd_soc_dapm_context dapm;
 	struct snd_soc_dapm_stats dapm_stats;
@@ -1167,6 +1174,7 @@ struct soc_mixer_control {
 	unsigned int sign_bit;
 	unsigned int invert:1;
 	unsigned int autodisable:1;
+	struct snd_soc_dobj dobj;
 };
 
 struct soc_bytes {
@@ -1177,6 +1185,8 @@ struct soc_bytes {
 
 struct soc_bytes_ext {
 	int max;
+	struct snd_soc_dobj dobj;
+
 	/* used for TLV byte control */
 	int (*get)(unsigned int __user *bytes, unsigned int size);
 	int (*put)(const unsigned int __user *bytes, unsigned int size);
@@ -1198,6 +1208,7 @@ struct soc_enum {
 	const char * const *texts;
 	const unsigned int *values;
 	unsigned int autodisable:1;
+	struct snd_soc_dobj dobj;
 };
 
 /**

commit b073ed4e21268da59c40a4fc5d56e3af808ecc4d
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue May 12 02:03:33 2015 +0000

    ASoC: soc-pcm: DPCM cares BE format
    
    Current DPCM is caring only FE format. but it will be no sound
    if FE/BE was below style, and user selects S24_LE format.
    
            FE: S16_LE/S24_LE
            BE: S16_LE
    
    DPCM can rewrite the format, so basically we don't want to
    constrain with the BE constraints. But sometimes it will be trouble.
    This patch adds new .dpcm_merged_format on struct snd_soc_dai_link.
    DPCM will use FE / BE merged format if .struct snd_soc_dai_link
    has it. We can have other .dpcm_merged_xxx in the future
    
        .dpcm_merged_foramt
        .dpcm_merged_rate
        .dpcm_merged_chan
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Tested-by: Keita Kobayashi <keita.kobayashi.ym@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 38757fe7a3d8..cf63ac1c8968 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -985,6 +985,9 @@ struct snd_soc_dai_link {
 	unsigned int dpcm_capture:1;
 	unsigned int dpcm_playback:1;
 
+	/* DPCM used FE & BE merged format */
+	unsigned int dpcm_merged_format:1;
+
 	/* pmdown_time is ignored at stop */
 	unsigned int ignore_pmdown_time:1;
 };

commit 561ed680b764b288feeb74a24e1d9fb3da98ec7b
Author: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date:   Fri May 1 12:37:26 2015 +0100

    ASoC: dapm: Add support for autodisable mux controls
    
    Commit 57295073b6ac ("ASoC: dapm: Implement mixer input auto-disable")
    added support for autodisable controls, controls whose values are only
    written to the hardware when their respective widgets are powered up.
    But it only added support for controls based on the mixer abstraction.
    
    This patch add support for mux controls (DAPM controls based on the
    enum abstraction) to be auto-disabled as well. As each mux can only have
    a single control, there is no need to tie the autodisable widget to the
    inputs (as is done for the mixer controls) it can be tided directly to
    the mux widget itself.
    
    Note that it is assumed that the first entry in a autodisable mux
    control will always represent the off state for the mux and is what the
    mux will be set to whilst it is disabled.
    
    Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Reviewed-by: Lars-Peter Clausen <lars@metafoo.de>
    Tested-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index b257a09a98d1..2f2e59e1513e 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -192,6 +192,10 @@
 	.mask = xmask, .items = xitems, .texts = xtexts, .values = xvalues}
 #define SOC_VALUE_ENUM_SINGLE(xreg, xshift, xmask, xitems, xtexts, xvalues) \
 	SOC_VALUE_ENUM_DOUBLE(xreg, xshift, xshift, xmask, xitems, xtexts, xvalues)
+#define SOC_VALUE_ENUM_SINGLE_AUTODISABLE(xreg, xshift, xmask, xitems, xtexts, xvalues) \
+{	.reg = xreg, .shift_l = xshift, .shift_r = xshift, \
+	.mask = xmask, .items = xitems, .texts = xtexts, \
+	.values = xvalues, .autodisable = 1}
 #define SOC_ENUM_SINGLE_VIRT(xitems, xtexts) \
 	SOC_ENUM_SINGLE(SND_SOC_NOPM, 0, xitems, xtexts)
 #define SOC_ENUM(xname, xenum) \
@@ -312,6 +316,11 @@
 							ARRAY_SIZE(xtexts), xtexts, xvalues)
 #define SOC_VALUE_ENUM_SINGLE_DECL(name, xreg, xshift, xmask, xtexts, xvalues) \
 	SOC_VALUE_ENUM_DOUBLE_DECL(name, xreg, xshift, xshift, xmask, xtexts, xvalues)
+
+#define SOC_VALUE_ENUM_SINGLE_AUTODISABLE_DECL(name, xreg, xshift, xmask, xtexts, xvalues) \
+	const struct soc_enum name = SOC_VALUE_ENUM_SINGLE_AUTODISABLE(xreg, \
+		xshift, xmask, ARRAY_SIZE(xtexts), xtexts, xvalues)
+
 #define SOC_ENUM_SINGLE_VIRT_DECL(name, xtexts) \
 	const struct soc_enum name = SOC_ENUM_SINGLE_VIRT(ARRAY_SIZE(xtexts), xtexts)
 
@@ -1188,6 +1197,7 @@ struct soc_enum {
 	unsigned int mask;
 	const char * const *texts;
 	const unsigned int *values;
+	unsigned int autodisable:1;
 };
 
 /**

commit 5967cb3d87802908fe5ab96aa0b417606bf4ca3b
Author: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date:   Fri May 1 12:37:23 2015 +0100

    ASoC: Correct typo in SOC_VALUE_ENUM_SINGLE macro
    
    xnitmes is clearly intended to be xnitems, but all other macros just
    refer to this as xitems, so change it to that.
    
    Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Reviewed-by: Lars-Peter Clausen <lars@metafoo.de>
    Tested-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 7781bfe85c5d..b257a09a98d1 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -190,8 +190,8 @@
 #define SOC_VALUE_ENUM_DOUBLE(xreg, xshift_l, xshift_r, xmask, xitems, xtexts, xvalues) \
 {	.reg = xreg, .shift_l = xshift_l, .shift_r = xshift_r, \
 	.mask = xmask, .items = xitems, .texts = xtexts, .values = xvalues}
-#define SOC_VALUE_ENUM_SINGLE(xreg, xshift, xmask, xnitmes, xtexts, xvalues) \
-	SOC_VALUE_ENUM_DOUBLE(xreg, xshift, xshift, xmask, xnitmes, xtexts, xvalues)
+#define SOC_VALUE_ENUM_SINGLE(xreg, xshift, xmask, xitems, xtexts, xvalues) \
+	SOC_VALUE_ENUM_DOUBLE(xreg, xshift, xshift, xmask, xitems, xtexts, xvalues)
 #define SOC_ENUM_SINGLE_VIRT(xitems, xtexts) \
 	SOC_ENUM_SINGLE(SND_SOC_NOPM, 0, xitems, xtexts)
 #define SOC_ENUM(xname, xenum) \

commit a78001b0137e3dd7acb15f6813bf2e5046d2f2ff
Merge: 1ce286b9c9bd 9d7dd6cd2a1d 28ecc0b658e2 aae013d646aa 96f05be37f4e d1acba2fdebb
Author: Mark Brown <broonie@kernel.org>
Date:   Wed Apr 29 13:37:28 2015 +0100

    Merge remote-tracking branches 'asoc/fix/email', 'asoc/fix/fsl-ssi', 'asoc/fix/pm', 'asoc/fix/qcom' and 'asoc/fix/rcar' into asoc-linus

commit fa880775ab0d5a8d540972f7b6800fad1af16b75
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Mon Apr 27 22:13:23 2015 +0200

    ASoC: Add helper functions bias level management
    
    Currently drivers are responsible for managing the bias_level field of
    their DAPM context. The DAPM state itself is managed by the DAPM core
    though and the core has certain expectations on how and when the bias_level
    field should be updated. If drivers don't adhere to these undefined
    behavior can occur.
    
    This patch adds a few helper functions for manipulating the DAPM context
    state, each function with a description on when it should be used and what
    its effects are. This will also help us to move more of the bias_level
    management from drivers to the DAPM core.
    
    For convenience also add snd_soc_codec_* wrappers around these helpers.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 2f742009da4b..7781bfe85c5d 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1281,6 +1281,46 @@ static inline struct snd_soc_dapm_context *snd_soc_codec_get_dapm(
 	return &codec->dapm;
 }
 
+/**
+ * snd_soc_dapm_init_bias_level() - Initialize CODEC DAPM bias level
+ * @dapm: The CODEC for which to initialize the DAPM bias level
+ * @level: The DAPM level to initialize to
+ *
+ * Initializes the CODEC DAPM bias level. See snd_soc_dapm_init_bias_level().
+ */
+static inline void snd_soc_codec_init_bias_level(struct snd_soc_codec *codec,
+	enum snd_soc_bias_level level)
+{
+	snd_soc_dapm_init_bias_level(snd_soc_codec_get_dapm(codec), level);
+}
+
+/**
+ * snd_soc_dapm_get_bias_level() - Get current CODEC DAPM bias level
+ * @codec: The CODEC for which to get the DAPM bias level
+ *
+ * Returns: The current DAPM bias level of the CODEC.
+ */
+static inline enum snd_soc_bias_level snd_soc_codec_get_bias_level(
+	struct snd_soc_codec *codec)
+{
+	return snd_soc_dapm_get_bias_level(snd_soc_codec_get_dapm(codec));
+}
+
+/**
+ * snd_soc_codec_force_bias_level() - Set the CODEC DAPM bias level
+ * @codec: The CODEC for which to set the level
+ * @level: The level to set to
+ *
+ * Forces the CODEC bias level to a specific state. See
+ * snd_soc_dapm_force_bias_level().
+ */
+static inline int snd_soc_codec_force_bias_level(struct snd_soc_codec *codec,
+	enum snd_soc_bias_level level)
+{
+	return snd_soc_dapm_force_bias_level(snd_soc_codec_get_dapm(codec),
+		level);
+}
+
 /**
  * snd_soc_dapm_kcontrol_codec() - Returns the codec associated to a kcontrol
  * @kcontrol: The kcontrol

commit 39ed68c8cd3aff417603a95d0594308598b9f469
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Mon Apr 27 22:13:22 2015 +0200

    ASoC: Add helper function getting CODEC's DAPM context
    
    The DAPM context in the snd_soc_codec struct is redundant and scheduled to
    be replaced by the DAPM context in the snd_soc_component struct. This patch
    introduces a new helper function snd_soc_codec_get_dapm() which should be
    used for getting the DAPM context for a CODEC rather then directly
    accessing the dapm field. Once there are no more direct users of the dapm
    field left it is possible to transparently switch all drivers to the
    component DAPM context by updating snd_soc_codec_get_dapm() function.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index fcb312b3f258..2f742009da4b 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -807,7 +807,7 @@ struct snd_soc_codec {
 	/* component */
 	struct snd_soc_component component;
 
-	/* dapm */
+	/* Don't access this directly, use snd_soc_codec_get_dapm() */
 	struct snd_soc_dapm_context dapm;
 
 #ifdef CONFIG_DEBUG_FS
@@ -1269,6 +1269,18 @@ static inline struct snd_soc_dapm_context *snd_soc_component_get_dapm(
 	return component->dapm_ptr;
 }
 
+/**
+ * snd_soc_codec_get_dapm() - Returns the DAPM context for the CODEC
+ * @codec: The CODEC for which to get the DAPM context
+ *
+ * Note: Use this function instead of directly accessing the CODEC's dapm field
+ */
+static inline struct snd_soc_dapm_context *snd_soc_codec_get_dapm(
+	struct snd_soc_codec *codec)
+{
+	return &codec->dapm;
+}
+
 /**
  * snd_soc_dapm_kcontrol_codec() - Returns the codec associated to a kcontrol
  * @kcontrol: The kcontrol

commit 2dc0f16b83b43fd1f86a2358d46f46488230c6c8
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Apr 21 07:02:34 2015 +0000

    ASoC: soc.h: tidyup struct snd_soc_dai_link definition order
    
    Current struct snd_soc_dai_link has many members, but definition order
    was random. Especially, bool / bit field are defined randomly.
    This patch tidyups these definition order to calculate data alignment
    easy.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index fcb312b3f258..38757fe7a3d8 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -949,6 +949,24 @@ struct snd_soc_dai_link {
 
 	enum snd_soc_dpcm_trigger trigger[2]; /* trigger type for DPCM */
 
+	/* codec/machine specific init - e.g. add machine controls */
+	int (*init)(struct snd_soc_pcm_runtime *rtd);
+
+	/* optional hw_params re-writing for BE and FE sync */
+	int (*be_hw_params_fixup)(struct snd_soc_pcm_runtime *rtd,
+			struct snd_pcm_hw_params *params);
+
+	/* machine stream operations */
+	const struct snd_soc_ops *ops;
+	const struct snd_soc_compr_ops *compr_ops;
+
+	/* For unidirectional dai links */
+	bool playback_only;
+	bool capture_only;
+
+	/* Mark this pcm with non atomic ops */
+	bool nonatomic;
+
 	/* Keep DAI active over suspend */
 	unsigned int ignore_suspend:1;
 
@@ -957,9 +975,6 @@ struct snd_soc_dai_link {
 	unsigned int symmetric_channels:1;
 	unsigned int symmetric_samplebits:1;
 
-	/* Mark this pcm with non atomic ops */
-	bool nonatomic;
-
 	/* Do not create a PCM for this DAI link (Backend link) */
 	unsigned int no_pcm:1;
 
@@ -972,21 +987,6 @@ struct snd_soc_dai_link {
 
 	/* pmdown_time is ignored at stop */
 	unsigned int ignore_pmdown_time:1;
-
-	/* codec/machine specific init - e.g. add machine controls */
-	int (*init)(struct snd_soc_pcm_runtime *rtd);
-
-	/* optional hw_params re-writing for BE and FE sync */
-	int (*be_hw_params_fixup)(struct snd_soc_pcm_runtime *rtd,
-			struct snd_pcm_hw_params *params);
-
-	/* machine stream operations */
-	const struct snd_soc_ops *ops;
-	const struct snd_soc_compr_ops *compr_ops;
-
-	/* For unidirectional dai links */
-	bool playback_only;
-	bool capture_only;
 };
 
 struct snd_soc_codec_conf {

commit aae013d646aae8787b76255d1a1cadd7f64a47dd
Author: Jie Yang <yang.jie@intel.com>
Date:   Sun Apr 19 09:45:48 2015 +0800

    ASoC: add static inline funcs to fix a compiling issue
    
    When CONFIG_PM_SLEEP is not selected, calling funcs
    snd_soc_suspend and _resume will generate a compiling
    issue.
    
    Here add static inline stub functions to fix it.
    
    Signed-off-by: Jie Yang <yang.jie@intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 0d1ade195628..cd8a12508f16 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -387,8 +387,20 @@ int snd_soc_codec_set_pll(struct snd_soc_codec *codec, int pll_id, int source,
 int snd_soc_register_card(struct snd_soc_card *card);
 int snd_soc_unregister_card(struct snd_soc_card *card);
 int devm_snd_soc_register_card(struct device *dev, struct snd_soc_card *card);
+#ifdef CONFIG_PM_SLEEP
 int snd_soc_suspend(struct device *dev);
 int snd_soc_resume(struct device *dev);
+#else
+static inline int snd_soc_suspend(struct device *dev)
+{
+	return 0;
+}
+
+static inline int snd_soc_resume(struct device *dev)
+{
+	return 0;
+}
+#endif
 int snd_soc_poweroff(struct device *dev);
 int snd_soc_register_platform(struct device *dev,
 		const struct snd_soc_platform_driver *platform_drv);

commit ce4524e5a78123fbf2db5b1549798c91a6d98294
Merge: f2aa111041ce 7667428f8052
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Apr 13 14:14:29 2015 +0200

    Merge tag 'asoc-v4.1-2' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound into for-linus
    
    ASoC: Updates for v4.1
    
    More updates for v4.1, pretty much all drivers:
    
     - Lots of cleanups from Lars, mainly moving things from the CODEC level
       to the card level.
     - Continuing improvements to rcar from Morimoto-san, pcm512x from
       Howard and Peter, the Intel platforms from Vinod, Jie, Jin and Han,
       and to rt5670 from Bard.
     - Support for some non-DSP Qualcomm platforms, Google's Storm
       platform, Maxmim MAX98925 CODECs and the Ingenic JZ4780 SoC.

commit e1f059937a2b90a1dbf314959776d3f51b4ab20d
Merge: 626761ad022c 46172b6c2666 c6b424fee751 5116ede10dc9 fa41181fe375
Author: Mark Brown <broonie@kernel.org>
Date:   Sun Apr 12 19:49:06 2015 +0100

    Merge remote-tracking branches 'asoc/topic/link-param', 'asoc/topic/max98090', 'asoc/topic/max98925' and 'asoc/topic/nuc900' into asoc-next

commit 77b62fa5d23988155132cf7fee44f2c209e3dc4c
Merge: d1113af4e8c0 6b5b042d4c67
Author: Mark Brown <broonie@kernel.org>
Date:   Sun Apr 12 19:48:31 2015 +0100

    Merge remote-tracking branch 'asoc/topic/dapm' into asoc-next

commit c66150824b8a809a502fd833fa9b18082cd89a39
Author: Nikesh Oswal <nikesh@opensource.wolfsonmicro.com>
Date:   Mon Feb 2 17:06:44 2015 +0000

    ASoC: dapm: add code to configure dai link parameters
    
    dai-link params for codec-codec links were fixed. The fixed
    link between codec and another chip which may be another codec,
    baseband, bluetooth codec etc may require run time configuaration
    changes. This change provides an optional alsa control to select
    one of the params from a list of params.
    
    Signed-off-by: Nikesh Oswal <nikesh@opensource.wolfsonmicro.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 0d1ade195628..4636a058372b 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -941,6 +941,7 @@ struct snd_soc_dai_link {
 	int be_id;	/* optional ID for machine driver BE identification */
 
 	const struct snd_soc_pcm_stream *params;
+	unsigned int num_params;
 
 	unsigned int dai_fmt;           /* format to set on init */
 

commit 6b5b042d4c675cb9d3446a1cdcaca98e715ba812
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Sun Mar 15 10:27:20 2015 +0100

    ASoC: Make snd_soc_dapm_kcontrol_codec() inline
    
    snd_soc_dapm_kcontrol_codec() is a extremely simple function and inlining it
    typically results in less code than necessary for calling the non-inlined
    version of the function.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 0d1ade195628..85a6853a40bb 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1258,6 +1258,19 @@ static inline struct snd_soc_dapm_context *snd_soc_component_get_dapm(
 	return component->dapm_ptr;
 }
 
+/**
+ * snd_soc_dapm_kcontrol_codec() - Returns the codec associated to a kcontrol
+ * @kcontrol: The kcontrol
+ *
+ * This function must only be used on DAPM contexts that are known to be part of
+ * a CODEC (e.g. in a CODEC driver). Otherwise the behavior is undefined.
+ */
+static inline struct snd_soc_codec *snd_soc_dapm_kcontrol_codec(
+	struct snd_kcontrol *kcontrol)
+{
+	return snd_soc_dapm_to_codec(snd_soc_dapm_kcontrol_dapm(kcontrol));
+}
+
 /* codec IO */
 unsigned int snd_soc_read(struct snd_soc_codec *codec, unsigned int reg);
 int snd_soc_write(struct snd_soc_codec *codec, unsigned int reg,

commit a52afea68f94d2501b7fe1fa18cc6acf84e35a76
Merge: 8b28c93fe5a5 d7e3281b52fe
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Mar 6 14:25:27 2015 +0100

    Merge tag 'asoc-v4.1' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound into for-next
    
    ASoC: Changes for v4.1
    
    A selection of changes for v4.1 so far.  The main things are:
    
     - Move of jack registration to the card where it belongs.
     - Support for DAPM routes specified by both the machine driver and DT.

commit 256fca9247c4e62408923a0fe861398510cf6bc1
Merge: 4a7e04157039 77c71765ef78 92b2ad2c9e18 6742e15cf92a e2cef68d5903
Author: Mark Brown <broonie@kernel.org>
Date:   Thu Mar 5 01:07:23 2015 +0000

    Merge remote-tracking branches 'asoc/topic/jack', 'asoc/topic/max98357a', 'asoc/topic/omap' and 'asoc/topic/rt286' into asoc-next

commit 4a7e0415703977dc61b410f3124ab59d56273f6a
Merge: 6a93dd249b99 b6d6c6e95ff0 4da4608c9130 34d7c3905adb 5bb400ce4a9b
Author: Mark Brown <broonie@kernel.org>
Date:   Thu Mar 5 01:07:21 2015 +0000

    Merge remote-tracking branches 'asoc/topic/atmel', 'asoc/topic/davinci', 'asoc/topic/gpiod' and 'asoc/topic/intel' into asoc-next

commit 77c71765ef78f87dd901fcb4c751908e835a3b2e
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Wed Mar 4 10:33:45 2015 +0100

    ASoC: Remove snd_soc_jack_new()
    
    There are no users of snd_soc_jack_new() left and new users should use
    snd_soc_card_jack_new() instead. So remove the function.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 99d9ce272209..40b3ee96f317 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1484,26 +1484,6 @@ static inline struct snd_soc_platform *snd_soc_kcontrol_platform(
 	return snd_soc_component_to_platform(snd_soc_kcontrol_component(kcontrol));
 }
 
-/**
- * snd_soc_jack_new - Create a new jack
- * @codec: ASoC CODEC
- * @id:    an identifying string for this jack
- * @type:  a bitmask of enum snd_jack_type values that can be detected by
- *         this jack
- * @jack:  structure to use for the jack
- *
- * Creates a new jack object.
- *
- * Returns zero if successful, or a negative error code on failure.
- * On success jack will be initialised.
- */
-static inline int snd_soc_jack_new(struct snd_soc_codec *codec, const char *id,
-	int type, struct snd_soc_jack *jack)
-{
-	return snd_soc_card_jack_new(codec->component.card, id, type, jack,
-		NULL, 0);
-}
-
 int snd_soc_util_init(void);
 void snd_soc_util_exit(void);
 

commit 970939964c26db4643f58d4e84487821962e0b65
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Wed Mar 4 10:33:17 2015 +0100

    ASoC: Allow to register jacks at the card level
    
    Jacks are typically card level elements, but are currently registered with a
    CODEC. When it was originally introduced snd_soc_jack_new() took a
    snd_soc_card as its parameter, but at that time DAPM was only implemented at
    the CODEC level and there was only one CODEC per card. This made it clear
    which CODEC to use for the jack DAPM operations. But the multi-component
    patchset added support for having multiple CODECs per card and with it the
    API was updated to register jacks with a specific CODEC instance instead.
    Subsequently DAPM support at the card level has been introduced, but the
    snd_soc_jack_new() API has so remained unchanged.
    
    This leaves us with the issue that the DAPM pins that are managed by the
    jack detection logic usually are part of the card DAPM context but are
    accessed through a CODEC DAPM context. Currently this works fine, but might
    break in the future if we take a more hierarchical approach to DAPM
    contexts.
    
    Furthermore with componentization progressing systems that do not register
    a snd_soc_codec might appear, while these system may still want to able to
    register a jack.
    
    This patch addresses these issues by adding a new function called
    snd_soc_card_jack_new() that can be used to register jacks with the card
    rather than a CODEC.
    
    This new function is mostly identical to snd_soc_jack_new() except that it
    additionally allows to directly specify the DAPM pins associated with the
    jack. This was done since most users of snd_soc_jack_new() typically call
    snd_soc_jack_add_pins() right after it, which is not necessary with the new
    API and allows to reduce the amount of boiler plate code.
    
    The old snd_soc_jack_new() is re-implemented as a wrapper around
    snd_soc_card_jack_new().
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 0d1ade195628..99d9ce272209 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -450,8 +450,10 @@ int soc_dai_hw_params(struct snd_pcm_substream *substream,
 		      struct snd_soc_dai *dai);
 
 /* Jack reporting */
-int snd_soc_jack_new(struct snd_soc_codec *codec, const char *id, int type,
-		     struct snd_soc_jack *jack);
+int snd_soc_card_jack_new(struct snd_soc_card *card, const char *id, int type,
+	struct snd_soc_jack *jack, struct snd_soc_jack_pin *pins,
+	unsigned int num_pins);
+
 void snd_soc_jack_report(struct snd_soc_jack *jack, int status, int mask);
 int snd_soc_jack_add_pins(struct snd_soc_jack *jack, int count,
 			  struct snd_soc_jack_pin *pins);
@@ -659,7 +661,7 @@ struct snd_soc_jack_gpio {
 struct snd_soc_jack {
 	struct mutex mutex;
 	struct snd_jack *jack;
-	struct snd_soc_codec *codec;
+	struct snd_soc_card *card;
 	struct list_head pins;
 	int status;
 	struct blocking_notifier_head notifier;
@@ -1482,6 +1484,26 @@ static inline struct snd_soc_platform *snd_soc_kcontrol_platform(
 	return snd_soc_component_to_platform(snd_soc_kcontrol_component(kcontrol));
 }
 
+/**
+ * snd_soc_jack_new - Create a new jack
+ * @codec: ASoC CODEC
+ * @id:    an identifying string for this jack
+ * @type:  a bitmask of enum snd_jack_type values that can be detected by
+ *         this jack
+ * @jack:  structure to use for the jack
+ *
+ * Creates a new jack object.
+ *
+ * Returns zero if successful, or a negative error code on failure.
+ * On success jack will be initialised.
+ */
+static inline int snd_soc_jack_new(struct snd_soc_codec *codec, const char *id,
+	int type, struct snd_soc_jack *jack)
+{
+	return snd_soc_card_jack_new(codec->component.card, id, type, jack,
+		NULL, 0);
+}
+
 int snd_soc_util_init(void);
 void snd_soc_util_exit(void);
 

commit 1a6ab46fa9c2bc9399694b4856ab7ea19c036485
Author: Masanari Iida <standby24x7@gmail.com>
Date:   Wed Mar 4 10:56:13 2015 +0900

    ALSA: Fix spelling typo in Documentation/DocBook/alsa-driver-api.xml
    
    This patch fix spelling typo found in alsa-driver-api.xml.
    It is because this file is generated from comments in source files,
    I have to fix source files.
    
    Signed-off-by: Masanari Iida <standby24x7@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 0d1ade195628..cf0bb156d6da 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1469,7 +1469,7 @@ static inline struct snd_soc_codec *snd_soc_kcontrol_codec(
 }
 
 /**
- * snd_soc_kcontrol_platform() - Returns the platform that registerd the control
+ * snd_soc_kcontrol_platform() - Returns the platform that registered the control
  * @kcontrol: The control for which to get the platform
  *
  * Note: This function will only work correctly if the control has been

commit f23e860edbb3f2208c0ab3448e756689bb4a3760
Author: Nicolin Chen <nicoleotsuka@gmail.com>
Date:   Sat Feb 14 17:22:49 2015 -0800

    ASoC: core: Add extra dapm properties for Device Tree
    
    The current helper functions, snd_soc_of_parse_audio_simple_widgets()
    and snd_soc_of_parse_audio_routing(), set dapm_widgets and dapm_routes
    without caring if they are already set by using build-in widgets and
    routes in the card driver. So there could be one of them, build-in one
    or Device Tree one, overrided by the other depending on which one was
    assigned later.
    
    This patch adds an extra pair of dapm_widgets and dapm_routes for DT
    use only so as to prevent unexpected overriding.
    
    Signed-off-by: Nicolin Chen <nicoleotsuka@gmail.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 0d1ade195628..f66a1ef98a40 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1071,11 +1071,16 @@ struct snd_soc_card {
 
 	/*
 	 * Card-specific routes and widgets.
+	 * Note: of_dapm_xxx for Device Tree; Otherwise for driver build-in.
 	 */
 	const struct snd_soc_dapm_widget *dapm_widgets;
 	int num_dapm_widgets;
 	const struct snd_soc_dapm_route *dapm_routes;
 	int num_dapm_routes;
+	const struct snd_soc_dapm_widget *of_dapm_widgets;
+	int num_of_dapm_widgets;
+	const struct snd_soc_dapm_route *of_dapm_routes;
+	int num_of_dapm_routes;
 	bool fully_routed;
 
 	struct work_struct deferred_resume_work;

commit 48c7699fb2c799d084ce490bceea14fe04ad12a1
Author: Vinod Koul <vinod.koul@intel.com>
Date:   Thu Feb 12 09:59:53 2015 +0530

    ASoC: core: allow pcms to be registered as nonatomic
    
    ALSA core with commit 257f8cce5d40 - "ALSA: pcm: Allow nonatomic trigger
    operations" allows trigger ops to implemented as nonatomic. For ASoC, we can
    specify this in dailinks and is updated while snd_pcm is created
    
    Signed-off-by: Subhransu S. Prusty <subhransu.s.prusty@intel.com>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Cc: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 0d1ade195628..76bc944dcb5c 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -954,6 +954,9 @@ struct snd_soc_dai_link {
 	unsigned int symmetric_channels:1;
 	unsigned int symmetric_samplebits:1;
 
+	/* Mark this pcm with non atomic ops */
+	bool nonatomic;
+
 	/* Do not create a PCM for this DAI link (Backend link) */
 	unsigned int no_pcm:1;
 

commit 3f1cf65757758ae2a3f777a786fd6c0a73273516
Merge: bd862e12bf67 cd2ee8ad55a1 ddaca25aa4da caa1d794cca9
Author: Mark Brown <broonie@kernel.org>
Date:   Mon Feb 9 15:10:14 2015 +0800

    Merge remote-tracking branches 'asoc/topic/cs42l73', 'asoc/topic/dai' and 'asoc/topic/davinci' into asoc-next

commit 6d5c729daba6af6997d66a2a635fd1ec519c7f5c
Merge: f238479b6bfe cd2ee8ad55a1 ddaca25aa4da caa1d794cca9
Author: Mark Brown <broonie@kernel.org>
Date:   Wed Feb 4 20:57:10 2015 +0000

    Merge remote-tracking branches 'asoc/topic/cs42l73', 'asoc/topic/dai' and 'asoc/topic/davinci' into asoc-next

commit 47e039413cacee70229ebbf6de5a8e3b27e6f057
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Fri Jan 23 16:21:36 2015 +0100

    ASoC: Add support for allocating AC'97 device before registering it
    
    In some cases it is necessary to before additional operations after the
    device has been initialized and before the device is registered. This can
    for example be resetting the device.
    
    This patch introduces a new function snd_soc_alloc_ac97_codec() which is
    similar to snd_soc_new_ac97_codec() except that it does not register the
    device. Any users of snd_soc_alloc_ac97_codec() are responsible for calling
    device_add() manually.
    
    Fixes: 6794f709b712 ("ASoC: ac97: Drop delayed device registration")
    Reported-by: Manuel Lauss <manuel.lauss@gmail.com>
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Tested-by: Manuel Lauss <manuel.lauss@gmail.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: stable@vger.kernel.org

diff --git a/include/sound/soc.h b/include/sound/soc.h
index b4fca9aed2a2..ac8b333acb4d 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -498,6 +498,7 @@ int snd_soc_test_bits(struct snd_soc_codec *codec, unsigned int reg,
 				unsigned int mask, unsigned int value);
 
 #ifdef CONFIG_SND_SOC_AC97_BUS
+struct snd_ac97 *snd_soc_alloc_ac97_codec(struct snd_soc_codec *codec);
 struct snd_ac97 *snd_soc_new_ac97_codec(struct snd_soc_codec *codec);
 void snd_soc_free_ac97_codec(struct snd_ac97 *ac97);
 

commit ce64c8b9cf5be2a93508af4667110dbe90904557
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Tue Jan 6 15:17:20 2015 +0100

    ASoC: Add helper function for changing the DAI link format
    
    For some setups it is necessary to change the DAI link format at runtime.
    This patch factors out the code that does the initial static DAI link format
    configuration into a separate helper function which can be used board
    drivers as well.
    
    This allows board drivers that have to change the DAI link format at runtime
    to reuse it instead of having to manually change the format on all DAIs.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index b4fca9aed2a2..edd4a0a11ccf 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -429,6 +429,9 @@ bool snd_soc_runtime_ignore_pmdown_time(struct snd_soc_pcm_runtime *rtd);
 void snd_soc_runtime_activate(struct snd_soc_pcm_runtime *rtd, int stream);
 void snd_soc_runtime_deactivate(struct snd_soc_pcm_runtime *rtd, int stream);
 
+int snd_soc_runtime_set_dai_fmt(struct snd_soc_pcm_runtime *rtd,
+	unsigned int dai_fmt);
+
 /* Utility functions to get clock rates from various things */
 int snd_soc_calc_frame_size(int sample_size, int channels, int tdm_slots);
 int snd_soc_params_to_frame_size(struct snd_pcm_hw_params *params);

commit c9098c6120f7e4dd2d65ce3c3711d4d20380ef7b
Merge: 41967b775e14 93b0f3eeebdc 8c2727f97b48 d206f66177ab bb66f2dc197d 6d3efa40790a
Author: Mark Brown <broonie@kernel.org>
Date:   Mon Dec 8 13:12:05 2014 +0000

    Merge remote-tracking branches 'asoc/topic/multi-codec', 'asoc/topic/mxs-saif', 'asoc/topic/mxs-sgtl5000', 'asoc/topic/omap' and 'asoc/topic/pxa' into asoc-next

commit cfdf59b4a157b3ffa123073cc9e2a62febdbafbf
Merge: 1f491557d279 47370022d2ca 15f6b09a00a6 6200b75a8bbc
Author: Mark Brown <broonie@kernel.org>
Date:   Mon Dec 8 13:11:52 2014 +0000

    Merge remote-tracking branches 'asoc/topic/codec-mutex', 'asoc/topic/compress' and 'asoc/topic/cq93vc' into asoc-next

commit 0a7e4ca1aad65458edebb718e1b915d1899056e7
Merge: 8f38411a7e24 e874bf5f7647 1b86a3fa4eb3 de172051af78 d69db7f7cd57
Author: Mark Brown <broonie@kernel.org>
Date:   Mon Dec 8 13:11:45 2014 +0000

    Merge remote-tracking branches 'asoc/topic/ac97', 'asoc/topic/ad193x', 'asoc/topic/adau1373' and 'asoc/topic/adau17x1' into asoc-next

commit 941725f5fade7b35394f497c4d684d64a0e05965
Merge: 3ee3f4546325 c362effe5cda
Author: Mark Brown <broonie@kernel.org>
Date:   Mon Dec 8 13:11:44 2014 +0000

    Merge remote-tracking branch 'asoc/topic/core' into asoc-next

commit c362effe5cda4df02aa7670d58636ea73979e304
Author: Jean-Francois Moine <moinejf@free.fr>
Date:   Tue Nov 25 12:14:48 2014 +0100

    ASoC: Remove 'const' from the device_node pointers
    
    As Russell King's explained it, there should not be pointers to
    struct device_node:
    
    "struct device_node is a ref-counted structure.  That means if you
     store a reference to it, you should "get" it, and you should "put"
     it once you've done.  The act of "put"ing the pointed-to structure
     involves writing to that structure, so it is totally unappropriate
     to store a device_node structure as a const pointer.  It forces you
     to have to cast it back to a non-const pointer at various points
     in time to use various OF function calls."
    
    [This isn't quite the application here, we're not geting or putting the
    pointer though we did add some other users who call non-const OF
    functions -- broonie]
    
    Signed-off-by: Jean-Francois Moine <moinejf@free.fr>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index edbb07ba4cb5..d1f3dac91b3e 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -881,7 +881,7 @@ struct snd_soc_platform_driver {
 
 struct snd_soc_dai_link_component {
 	const char *name;
-	const struct device_node *of_node;
+	struct device_node *of_node;
 	const char *dai_name;
 };
 
@@ -983,7 +983,7 @@ struct snd_soc_codec_conf {
 	 * DT/OF node, but not both.
 	 */
 	const char *dev_name;
-	const struct device_node *of_node;
+	struct device_node *of_node;
 
 	/*
 	 * optional map of kcontrol, widget and path name prefixes that are
@@ -1000,7 +1000,7 @@ struct snd_soc_aux_dev {
 	 * DT/OF node, but not both.
 	 */
 	const char *codec_name;
-	const struct device_node *codec_of_node;
+	struct device_node *codec_of_node;
 
 	/* codec/machine specific init - e.g. add machine controls */
 	int (*init)(struct snd_soc_component *component);

commit e874bf5f7647a9fdf14d72dbb376ec95327e3a81
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Tue Nov 25 21:41:03 2014 +0100

    ASoC: Disable regmap helpers if regmap is disabled
    
    If regmap is disabled there will be no users of the ASoC regmap helpers.
    Furthermore regmap_exit() will no be defined causing the following compile
    error:
            sound/soc/soc-core.c: In function 'snd_soc_component_exit_regmap':
            sound/soc/soc-core.c:2645:2: error: implicit declaration of function
                    'regmap_exit' [-Werror=implicit-function-declaration]
    
    So disable the helpers if regmap is disabled.
    
    Reported-by: kbuild test robot <fengguang.wu@intel.com>
    Fixes: 20feb881988c ASoC: Add helper functions for deferred regmap setup")
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 80ca937a20da..b53234835936 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1286,6 +1286,8 @@ void snd_soc_component_async_complete(struct snd_soc_component *component);
 int snd_soc_component_test_bits(struct snd_soc_component *component,
 	unsigned int reg, unsigned int mask, unsigned int value);
 
+#ifdef CONFIG_REGMAP
+
 void snd_soc_component_init_regmap(struct snd_soc_component *component,
 	struct regmap *regmap);
 void snd_soc_component_exit_regmap(struct snd_soc_component *component);
@@ -1321,6 +1323,8 @@ static inline void snd_soc_codec_exit_regmap(struct snd_soc_codec *codec)
 	snd_soc_component_exit_regmap(&codec->component);
 }
 
+#endif
+
 /* device driver data */
 
 static inline void snd_soc_card_set_drvdata(struct snd_soc_card *card,

commit 93b0f3eeebdce6f32417187b5d24ea218a3e7fb4
Author: Jean-Francois Moine <moinejf@free.fr>
Date:   Tue Nov 25 13:16:12 2014 +0100

    ASoC: core: add multi-codec support in DT
    
    This patch exports a core function which handles the DT description
    of multi-codec links (as: "sound-dai = <&hdmi 0>, <&spdif_codec>;")
    and creates a CODEC component array in the DAI link.
    
    Signed-off-by: Jean-Francois Moine <moinejf@free.fr>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 7ba7130037a0..2750e6ad0128 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1451,6 +1451,9 @@ unsigned int snd_soc_of_parse_daifmt(struct device_node *np,
 				     struct device_node **framemaster);
 int snd_soc_of_get_dai_name(struct device_node *of_node,
 			    const char **dai_name);
+int snd_soc_of_get_dai_link_codecs(struct device *dev,
+				   struct device_node *of_node,
+				   struct snd_soc_dai_link *dai_link);
 
 #include <sound/soc-dai.h>
 

commit e975cec295ea71d5ad01fd3b6195670d3e31885e
Merge: c534107fd229 20feb881988c
Author: Mark Brown <broonie@kernel.org>
Date:   Wed Nov 19 10:48:20 2014 +0000

    Merge branch 'topic/regmap' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound into asoc-ac97

commit 20feb881988cdf5f53304c355ae8ee3bf82e80ec
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Tue Nov 18 19:45:52 2014 +0100

    ASoC: Add helper functions for deferred regmap setup
    
    Some drivers (most notably the AC'97 drivers) do not have access to their
    regmap struct when the component/codec is registered. For those drivers the
    automatic regmap setup will not work and needs to be done manually,
    typically from the component/CODEC drivers probe callback.
    
    This patch adds a set of helper function to handle deferred regmap
    initialization as well as early regmap tear-down.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 7ba7130037a0..342b43b3799e 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1277,6 +1277,41 @@ void snd_soc_component_async_complete(struct snd_soc_component *component);
 int snd_soc_component_test_bits(struct snd_soc_component *component,
 	unsigned int reg, unsigned int mask, unsigned int value);
 
+void snd_soc_component_init_regmap(struct snd_soc_component *component,
+	struct regmap *regmap);
+void snd_soc_component_exit_regmap(struct snd_soc_component *component);
+
+/**
+ * snd_soc_codec_init_regmap() - Initialize regmap instance for the CODEC
+ * @codec: The CODEC for which to initialize the regmap instance
+ * @regmap: The regmap instance that should be used by the CODEC
+ *
+ * This function allows deferred assignment of the regmap instance that is
+ * associated with the CODEC. Only use this if the regmap instance is not yet
+ * ready when the CODEC is registered. The function must also be called before
+ * the first IO attempt of the CODEC.
+ */
+static inline void snd_soc_codec_init_regmap(struct snd_soc_codec *codec,
+	struct regmap *regmap)
+{
+	snd_soc_component_init_regmap(&codec->component, regmap);
+}
+
+/**
+ * snd_soc_codec_exit_regmap() - De-initialize regmap instance for the CODEC
+ * @codec: The CODEC for which to de-initialize the regmap instance
+ *
+ * Calls regmap_exit() on the regmap instance associated to the CODEC and
+ * removes the regmap instance from the CODEC.
+ *
+ * This function should only be used if snd_soc_codec_init_regmap() was used to
+ * initialize the regmap instance.
+ */
+static inline void snd_soc_codec_exit_regmap(struct snd_soc_codec *codec)
+{
+	snd_soc_component_exit_regmap(&codec->component);
+}
+
 /* device driver data */
 
 static inline void snd_soc_card_set_drvdata(struct snd_soc_card *card,

commit 358a8bb5628420529e4f0b77068155ca8fa8973b
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Mon Nov 10 22:41:53 2014 +0100

    ASoC: ac97: Push snd_ac97 pointer to the driver level
    
    Now that the ASoC core no longer needs a handle to the AC'97 device that is
    associated with a CODEC we can remove it from the snd_soc_codec struct and
    push it into the individual driver state structs like we do for other
    communication buses. Doing so creates a clean separation between the AC'97
    bus support and the ASoC core.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Acked-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 206cc8d6eefa..9e513ae11749 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -499,8 +499,8 @@ int snd_soc_test_bits(struct snd_soc_codec *codec, unsigned int reg,
 				unsigned int mask, unsigned int value);
 
 #ifdef CONFIG_SND_SOC_AC97_BUS
-int snd_soc_new_ac97_codec(struct snd_soc_codec *codec);
-void snd_soc_free_ac97_codec(struct snd_soc_codec *codec);
+struct snd_ac97 *snd_soc_new_ac97_codec(struct snd_soc_codec *codec);
+void snd_soc_free_ac97_codec(struct snd_ac97 *ac97);
 
 int snd_soc_set_ac97_ops(struct snd_ac97_bus_ops *ops);
 int snd_soc_set_ac97_ops_of_reset(struct snd_ac97_bus_ops *ops,
@@ -797,7 +797,6 @@ struct snd_soc_codec {
 	struct list_head card_list;
 
 	/* runtime */
-	struct snd_ac97 *ac97;  /* for ad-hoc ac97 devices */
 	unsigned int cache_bypass:1; /* Suppress access to the cache */
 	unsigned int suspended:1; /* Codec is in suspend PM state */
 	unsigned int cache_init:1; /* codec cache has been initialized */

commit 6794f709b7124ff1e574c4f4c9494418ab56c4b4
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Mon Nov 10 22:41:50 2014 +0100

    ASoC: ac97: Drop delayed device registration
    
    We have all the information and dependencies we need to initialize and
    register the device available in snd_soc_new_ac97_codec(). So there is no
    need to delay the device registration until after the card itself as been
    registered.
    
    This makes the code significantly simpler and also makes it possible to use
    the AC'97 device in the CODECs probe function. The later will be required to
    be able to convert the AC'97 CODEC drivers to regmap.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 5b4dec693ca5..206cc8d6eefa 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -507,15 +507,7 @@ int snd_soc_set_ac97_ops_of_reset(struct snd_ac97_bus_ops *ops,
 		struct platform_device *pdev);
 
 extern struct snd_ac97_bus_ops *soc_ac97_ops;
-
-int snd_soc_ac97_register_dai_links(struct snd_soc_card *card);
 #else
-
-static inline int snd_soc_ac97_register_dai_links(struct snd_soc_card *card)
-{
-	return 0;
-}
-
 static inline int snd_soc_set_ac97_ops_of_reset(struct snd_ac97_bus_ops *ops,
 	struct platform_device *pdev)
 {
@@ -808,8 +800,6 @@ struct snd_soc_codec {
 	struct snd_ac97 *ac97;  /* for ad-hoc ac97 devices */
 	unsigned int cache_bypass:1; /* Suppress access to the cache */
 	unsigned int suspended:1; /* Codec is in suspend PM state */
-	unsigned int ac97_registered:1; /* Codec has been AC97 registered */
-	unsigned int ac97_created:1; /* Codec has been created by SoC */
 	unsigned int cache_init:1; /* codec cache has been initialized */
 	u32 cache_sync; /* Cache needs to be synced to hardware */
 

commit ca005f324ee38308b319c693f40523d959027acf
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Mon Nov 10 22:41:49 2014 +0100

    ASoC: ac97: Drop support for setting platform data via the CPU DAI
    
    This has no users since commit f0fba2ad1b6b ("ASoC: multi-component - ASoC
    Multi-Component Support") which was almost 5 years ago. Given that this runs
    after CODEC probe functions have been run it also doesn't seem to be that
    useful.
    
    So drop it altogether to make the code simpler.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 44b3ce531fd6..5b4dec693ca5 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -509,7 +509,6 @@ int snd_soc_set_ac97_ops_of_reset(struct snd_ac97_bus_ops *ops,
 extern struct snd_ac97_bus_ops *soc_ac97_ops;
 
 int snd_soc_ac97_register_dai_links(struct snd_soc_card *card);
-void snd_soc_ac97_add_pdata(struct snd_soc_pcm_runtime *rtd);
 #else
 
 static inline int snd_soc_ac97_register_dai_links(struct snd_soc_card *card)
@@ -517,8 +516,6 @@ static inline int snd_soc_ac97_register_dai_links(struct snd_soc_card *card)
 	return 0;
 }
 
-static inline void snd_soc_ac97_add_pdata(struct snd_soc_pcm_runtime *rtd) {}
-
 static inline int snd_soc_set_ac97_ops_of_reset(struct snd_ac97_bus_ops *ops,
 	struct platform_device *pdev)
 {

commit eda1a701fd9589b6ed15b109558bd4f6202e3829
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Mon Nov 10 22:41:47 2014 +0100

    ASoC: ac97: Use static ac97_bus
    
    We always pass soc_ac97_ops to snd_soc_new_ac97_codec(). So instead of
    allocating a snd_ac97_bus in snd_soc_new_ac97_codec() just use a static one
    that gets initialized when snd_soc_set_ac97_ops() is called.
    
    Also drop the device number parameter from snd_soc_new_ac97_codec(). We
    currently only support one device per bus and all drivers pass 0 for the
    device number. And if we should ever support multiple devices per bus it
    wouldn't be up to individual AC'97 device drivers to pick their number, but
    rather either the AC'97 adapter driver or the core code will assign them.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Acked-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index adef34fa5209..44b3ce531fd6 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -499,8 +499,7 @@ int snd_soc_test_bits(struct snd_soc_codec *codec, unsigned int reg,
 				unsigned int mask, unsigned int value);
 
 #ifdef CONFIG_SND_SOC_AC97_BUS
-int snd_soc_new_ac97_codec(struct snd_soc_codec *codec,
-	struct snd_ac97_bus_ops *ops, int num);
+int snd_soc_new_ac97_codec(struct snd_soc_codec *codec);
 void snd_soc_free_ac97_codec(struct snd_soc_codec *codec);
 
 int snd_soc_set_ac97_ops(struct snd_ac97_bus_ops *ops);

commit 336b8423e285174ebecf02a743d69913b83bbc48
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Mon Nov 10 22:41:46 2014 +0100

    ASoC: Move AC'97 support to its own file
    
    Currently the AC'97 support is splattered all throughout soc-core.c. Some
    parts are #ifdef'd some parts are not. This patch moves the AC'97 support to
    its own file, this should make the code a bit more clearer and also makes it
    possible to easily not compile it into the kernel when not needed.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 7ba7130037a0..adef34fa5209 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -366,8 +366,6 @@ struct snd_soc_jack_gpio;
 
 typedef int (*hw_write_t)(void *,const char* ,int);
 
-extern struct snd_ac97_bus_ops *soc_ac97_ops;
-
 enum snd_soc_pcm_subclass {
 	SND_SOC_PCM_CLASS_PCM	= 0,
 	SND_SOC_PCM_CLASS_BE	= 1,
@@ -500,6 +498,7 @@ int snd_soc_update_bits_locked(struct snd_soc_codec *codec,
 int snd_soc_test_bits(struct snd_soc_codec *codec, unsigned int reg,
 				unsigned int mask, unsigned int value);
 
+#ifdef CONFIG_SND_SOC_AC97_BUS
 int snd_soc_new_ac97_codec(struct snd_soc_codec *codec,
 	struct snd_ac97_bus_ops *ops, int num);
 void snd_soc_free_ac97_codec(struct snd_soc_codec *codec);
@@ -508,6 +507,31 @@ int snd_soc_set_ac97_ops(struct snd_ac97_bus_ops *ops);
 int snd_soc_set_ac97_ops_of_reset(struct snd_ac97_bus_ops *ops,
 		struct platform_device *pdev);
 
+extern struct snd_ac97_bus_ops *soc_ac97_ops;
+
+int snd_soc_ac97_register_dai_links(struct snd_soc_card *card);
+void snd_soc_ac97_add_pdata(struct snd_soc_pcm_runtime *rtd);
+#else
+
+static inline int snd_soc_ac97_register_dai_links(struct snd_soc_card *card)
+{
+	return 0;
+}
+
+static inline void snd_soc_ac97_add_pdata(struct snd_soc_pcm_runtime *rtd) {}
+
+static inline int snd_soc_set_ac97_ops_of_reset(struct snd_ac97_bus_ops *ops,
+	struct platform_device *pdev)
+{
+	return 0;
+}
+
+static inline int snd_soc_set_ac97_ops(struct snd_ac97_bus_ops *ops)
+{
+	return 0;
+}
+#endif
+
 /*
  *Controls
  */

commit bd6b87c104bae49816808fde5f55a262093e85ed
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Sun Nov 9 17:01:04 2014 +0100

    ASoC: Remove CODEC mutex
    
    The CODEC mutex is now unused and can be removed.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 7ba7130037a0..5c91b06864ce 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -780,7 +780,6 @@ struct snd_soc_codec {
 	struct device *dev;
 	const struct snd_soc_codec_driver *driver;
 
-	struct mutex mutex;
 	struct list_head list;
 	struct list_head card_list;
 

commit 427d204c86e095bb91eb8af381bd90a48376a860
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Sat Nov 8 16:38:07 2014 +0100

    ASoC: Remove snd_soc_cache_sync() implementation
    
    This function has no more non regmap user, which means we can remove the
    implementation of the function and associated functions and structure
    fields.
    
    For convenience we keep a static inline version of the function that
    forwards calls to regcache_sync() unconditionally.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 7ba7130037a0..fadcb351f3e1 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -409,13 +409,9 @@ int devm_snd_soc_register_component(struct device *dev,
 			 const struct snd_soc_component_driver *cmpnt_drv,
 			 struct snd_soc_dai_driver *dai_drv, int num_dai);
 void snd_soc_unregister_component(struct device *dev);
-int snd_soc_cache_sync(struct snd_soc_codec *codec);
 int snd_soc_cache_init(struct snd_soc_codec *codec);
 int snd_soc_cache_exit(struct snd_soc_codec *codec);
-int snd_soc_cache_write(struct snd_soc_codec *codec,
-			unsigned int reg, unsigned int value);
-int snd_soc_cache_read(struct snd_soc_codec *codec,
-		       unsigned int reg, unsigned int *value);
+
 int snd_soc_platform_read(struct snd_soc_platform *platform,
 					unsigned int reg);
 int snd_soc_platform_write(struct snd_soc_platform *platform,
@@ -791,13 +787,11 @@ struct snd_soc_codec {
 	unsigned int ac97_registered:1; /* Codec has been AC97 registered */
 	unsigned int ac97_created:1; /* Codec has been created by SoC */
 	unsigned int cache_init:1; /* codec cache has been initialized */
-	u32 cache_sync; /* Cache needs to be synced to hardware */
 
 	/* codec IO */
 	void *control_data; /* codec control (i2c/3wire) data */
 	hw_write_t hw_write;
 	void *reg_cache;
-	struct mutex cache_rw_mutex;
 
 	/* component */
 	struct snd_soc_component component;
@@ -1264,6 +1258,17 @@ unsigned int snd_soc_read(struct snd_soc_codec *codec, unsigned int reg);
 int snd_soc_write(struct snd_soc_codec *codec, unsigned int reg,
 	unsigned int val);
 
+/**
+ * snd_soc_cache_sync() - Sync the register cache with the hardware
+ * @codec: CODEC to sync
+ *
+ * Note: This function will call regcache_sync()
+ */
+static inline int snd_soc_cache_sync(struct snd_soc_codec *codec)
+{
+	return regcache_sync(codec->component.regmap);
+}
+
 /* component IO */
 int snd_soc_component_read(struct snd_soc_component *component,
 	unsigned int reg, unsigned int *val);

commit dd63a9c2952ed142c64fd68c1a74d0d6fcac586f
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Mon Nov 3 10:31:47 2014 +0100

    ASoC: Remove snd_soc_platform_driver suspend/resume callbacks
    
    Those are unused and new drivers should use device driver suspend/resume.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index ad47e9660b22..edbb07ba4cb5 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -857,8 +857,6 @@ struct snd_soc_platform_driver {
 
 	int (*probe)(struct snd_soc_platform *);
 	int (*remove)(struct snd_soc_platform *);
-	int (*suspend)(struct snd_soc_dai *dai);
-	int (*resume)(struct snd_soc_dai *dai);
 	struct snd_soc_component_driver component_driver;
 
 	/* pcm creation and destruction */
@@ -891,8 +889,6 @@ struct snd_soc_platform {
 	struct device *dev;
 	const struct snd_soc_platform_driver *driver;
 
-	unsigned int suspended:1; /* platform is suspended */
-
 	struct list_head list;
 
 	struct snd_soc_component component;

commit c1b4d1c7774189002bc08766ec10e339dfbc98d6
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Sat Oct 25 20:25:56 2014 +0200

    ASoC: Use generic control handlers for S8 control
    
    Commit f227b88f0fce ("ASoC: core: Add signed register volume control logic")
    added support for signed control to the generic volsw control handler.
    This makes it possible to use them for the S8 control as well, rather than
    having to use a custom control handler implementation.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 7ba7130037a0..ad47e9660b22 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -36,6 +36,11 @@
 	{.reg = xreg, .rreg = xreg, .shift = shift_left, \
 	.rshift = shift_right, .max = xmax, .platform_max = xmax, \
 	.invert = xinvert, .autodisable = xautodisable})
+#define SOC_DOUBLE_S_VALUE(xreg, shift_left, shift_right, xmin, xmax, xsign_bit, xinvert, xautodisable) \
+	((unsigned long)&(struct soc_mixer_control) \
+	{.reg = xreg, .rreg = xreg, .shift = shift_left, \
+	.rshift = shift_right, .min = xmin, .max = xmax, .platform_max = xmax, \
+	.sign_bit = xsign_bit, .invert = xinvert, .autodisable = xautodisable})
 #define SOC_SINGLE_VALUE(xreg, xshift, xmax, xinvert, xautodisable) \
 	SOC_DOUBLE_VALUE(xreg, xshift, xshift, xmax, xinvert, xautodisable)
 #define SOC_SINGLE_VALUE_EXT(xreg, xmax, xinvert) \
@@ -171,11 +176,9 @@
 	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ | \
 		  SNDRV_CTL_ELEM_ACCESS_READWRITE, \
 	.tlv.p  = (tlv_array), \
-	.info   = snd_soc_info_volsw_s8, .get = snd_soc_get_volsw_s8, \
-	.put    = snd_soc_put_volsw_s8, \
-	.private_value = (unsigned long)&(struct soc_mixer_control) \
-		{.reg = xreg, .min = xmin, .max = xmax, \
-		 .platform_max = xmax} }
+	.info = snd_soc_info_volsw, .get = snd_soc_get_volsw,\
+	.put = snd_soc_put_volsw, \
+	.private_value = SOC_DOUBLE_S_VALUE(xreg, 0, 8, xmin, xmax, 7, 0, 0) }
 #define SOC_ENUM_DOUBLE(xreg, xshift_l, xshift_r, xitems, xtexts) \
 {	.reg = xreg, .shift_l = xshift_l, .shift_r = xshift_r, \
 	.items = xitems, .texts = xtexts, \
@@ -545,12 +548,6 @@ int snd_soc_get_volsw_sx(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
 int snd_soc_put_volsw_sx(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
-int snd_soc_info_volsw_s8(struct snd_kcontrol *kcontrol,
-	struct snd_ctl_elem_info *uinfo);
-int snd_soc_get_volsw_s8(struct snd_kcontrol *kcontrol,
-	struct snd_ctl_elem_value *ucontrol);
-int snd_soc_put_volsw_s8(struct snd_kcontrol *kcontrol,
-	struct snd_ctl_elem_value *ucontrol);
 int snd_soc_info_volsw_range(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_info *uinfo);
 int snd_soc_put_volsw_range(struct snd_kcontrol *kcontrol,

commit 565fefdf31a58b5c07869fe598c3dcc69ed680d7
Merge: 9919badff1ae f114ce605daa 8a36eaa2ff4a 5d5e63af9980 8d01370f5985 c05a11f7b8b5
Author: Mark Brown <broonie@kernel.org>
Date:   Mon Oct 6 12:48:57 2014 +0100

    Merge remote-tracking branches 'asoc/topic/davinci', 'asoc/topic/dmic', 'asoc/topic/drivers', 'asoc/topic/es8328' and 'asoc/topic/fsl' into asoc-next

commit 97c53e26f0773b9eb9ede21f544a91dd1bcd9ca9
Merge: 5bcaca4b5bf2 e03f73a01f01
Author: Mark Brown <broonie@kernel.org>
Date:   Mon Oct 6 12:48:52 2014 +0100

    Merge remote-tracking branch 'asoc/topic/core' into asoc-next

commit 5bcaca4b5bf2b05cc15a2c5bfb3d95fc49607e36
Merge: 832a94143c54 b2d9de549c30
Author: Mark Brown <broonie@kernel.org>
Date:   Mon Oct 6 12:48:51 2014 +0100

    Merge remote-tracking branch 'asoc/topic/component' into asoc-next

commit 0634814fe0f29a46c44386a03f259f99c983bf7e
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Wed Aug 20 13:08:49 2014 +0200

    ASoC: Remove table based DAPM/control setup support from snd_soc_platform_driver
    
    There are no users left and new users should rather use the component_driver
    struct embedded in the snd_soc_platform_driver struct to do this. E.g.:
    
    static const struct snd_soc_platform_driver foobar_driver = {
            .component_driver = {
                    .dapm_widgets = ...,
                    .num_dapm_widgets = ...,
                    ...,
            },
            ...
    };
    
    instead of
    
    static const struct snd_soc_platform_driver foobar_driver = {
            .dapm_widgets = ...,
            .num_dapm_widgets = ...,
            ...
    };
    
    This also allows us to remove the steal_sibling_dai_widgets hack.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index f8b23dd7c3a7..cd141a156da2 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -764,7 +764,6 @@ struct snd_soc_component {
 	unsigned int num_dapm_widgets;
 	const struct snd_soc_dapm_route *dapm_routes;
 	unsigned int num_dapm_routes;
-	bool steal_sibling_dai_widgets;
 	struct snd_soc_codec *codec;
 
 	int (*probe)(struct snd_soc_component *);
@@ -868,14 +867,6 @@ struct snd_soc_platform_driver {
 	int (*pcm_new)(struct snd_soc_pcm_runtime *);
 	void (*pcm_free)(struct snd_pcm *);
 
-	/* Default control and setup, added after probe() is run */
-	const struct snd_kcontrol_new *controls;
-	int num_controls;
-	const struct snd_soc_dapm_widget *dapm_widgets;
-	int num_dapm_widgets;
-	const struct snd_soc_dapm_route *dapm_routes;
-	int num_dapm_routes;
-
 	/*
 	 * For platform caused delay reporting.
 	 * Optional.

commit c815dbb47758bd469927849fdd45fed3ce206e73
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Wed Aug 20 13:08:46 2014 +0200

    ASoC: Add snd_soc_component_{get,set}_drvdata()
    
    Add Add snd_soc_component_{get,set}_drvdata() similar to
    snd_soc_codec_{get,set}_drvdata() and snd_soc_platform_{get,set}_drvdata().
    Also update them to use the new functions internally.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Reviewed-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index ce09302bfd6d..f8b23dd7c3a7 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1298,26 +1298,37 @@ static inline void *snd_soc_card_get_drvdata(struct snd_soc_card *card)
 	return card->drvdata;
 }
 
+static inline void snd_soc_component_set_drvdata(struct snd_soc_component *c,
+		void *data)
+{
+	dev_set_drvdata(c->dev, data);
+}
+
+static inline void *snd_soc_component_get_drvdata(struct snd_soc_component *c)
+{
+	return dev_get_drvdata(c->dev);
+}
+
 static inline void snd_soc_codec_set_drvdata(struct snd_soc_codec *codec,
 		void *data)
 {
-	dev_set_drvdata(codec->dev, data);
+	snd_soc_component_set_drvdata(&codec->component, data);
 }
 
 static inline void *snd_soc_codec_get_drvdata(struct snd_soc_codec *codec)
 {
-	return dev_get_drvdata(codec->dev);
+	return snd_soc_component_get_drvdata(&codec->component);
 }
 
 static inline void snd_soc_platform_set_drvdata(struct snd_soc_platform *platform,
 		void *data)
 {
-	dev_set_drvdata(platform->dev, data);
+	snd_soc_component_set_drvdata(&platform->component, data);
 }
 
 static inline void *snd_soc_platform_get_drvdata(struct snd_soc_platform *platform)
 {
-	return dev_get_drvdata(platform->dev);
+	return snd_soc_component_get_drvdata(&platform->component);
 }
 
 static inline void snd_soc_pcm_set_drvdata(struct snd_soc_pcm_runtime *rtd,

commit 86dbf2ac6fcb2d2932d4610f2dfe0954aa0633f7
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Thu Sep 4 19:44:06 2014 +0200

    ASoC: Add support for automatically going to BIAS_OFF on suspend
    
    There is a substantial amount of drivers that in go to SND_SOC_BIAS_OFF on
    suspend and go back to SND_SOC_BIAS_SUSPEND on resume (Often this is even
    the only thing done in the suspend and resume handlers). This patch
    introduces a new suspend_bias_off flag, which when set by a driver will let
    the ASoC core automatically put the device's DAPM context at the
    SND_SOC_BIAS_OFF level during suspend. Once the device is resumed the DAPM
    context will go back to SND_SOC_BIAS_STANDBY (if the context is idle,
    otherwise to SND_SOC_BIAS_ON).
    
    This will allow us to remove a fair bit of duplicated code from the drivers.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index ce09302bfd6d..ac99fc083eec 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -848,6 +848,7 @@ struct snd_soc_codec_driver {
 	int (*set_bias_level)(struct snd_soc_codec *,
 			      enum snd_soc_bias_level level);
 	bool idle_bias_off;
+	bool suspend_bias_off;
 
 	void (*seq_notifier)(struct snd_soc_dapm_context *,
 			     enum snd_soc_dapm_type, int);

commit b792346fa8660a22a06f118cebe47709f507914f
Author: Jarkko Nikula <jarkko.nikula@linux.intel.com>
Date:   Thu Aug 28 14:07:11 2014 +0300

    ASoC: Remove unused cache_only from struct snd_soc_codec
    
    There are no real users for cache_only in "struct snd_soc_codec" so remove
    it and needless debugfs node.
    
    Signed-off-by: Jarkko Nikula <jarkko.nikula@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index edbb0d72ab38..ce09302bfd6d 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -792,7 +792,6 @@ struct snd_soc_codec {
 	unsigned int ac97_registered:1; /* Codec has been AC97 registered */
 	unsigned int ac97_created:1; /* Codec has been created by SoC */
 	unsigned int cache_init:1; /* codec cache has been initialized */
-	u32 cache_only;  /* Suppress writes to hardware */
 	u32 cache_sync; /* Cache needs to be synced to hardware */
 
 	/* codec IO */

commit 75af7c081982d76cef0daf26e96b5d1e8cb9d631
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Tue Aug 19 15:51:29 2014 +0200

    ASoC: Remove support for legacy snd_soc_platform IO
    
    There were never any actual users of this in upstream and by we have with
    regmap a replacement in place, which should be used by new drivers.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 8ebee30311e3..edbb0d72ab38 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -890,9 +890,6 @@ struct snd_soc_platform_driver {
 	/* platform stream compress ops */
 	const struct snd_compr_ops *compr_ops;
 
-	/* platform IO - used for platform DAPM */
-	unsigned int (*read)(struct snd_soc_platform *, unsigned int);
-	int (*write)(struct snd_soc_platform *, unsigned int, unsigned int);
 	int (*bespoke_trigger)(struct snd_pcm_substream *, int);
 };
 

commit 886f5692253de1a9509f5cb708432b2157afb57c
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Tue Aug 19 15:51:28 2014 +0200

    ASoC: Automatically initialize regmap for all components
    
    So far regmap is only automatically initialized for CODECs. Now that we have the
    infrastructure in place to let components have DAPM widgets and controls that
    want to use the generic regmap based IO also make sure to automatically
    initialize regmap for all components.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 3a0031e1f9b4..8ebee30311e3 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1289,9 +1289,6 @@ void snd_soc_component_async_complete(struct snd_soc_component *component);
 int snd_soc_component_test_bits(struct snd_soc_component *component,
 	unsigned int reg, unsigned int mask, unsigned int value);
 
-int snd_soc_component_init_io(struct snd_soc_component *component,
-	struct regmap *regmap);
-
 /* device driver data */
 
 static inline void snd_soc_card_set_drvdata(struct snd_soc_card *card,

commit 57bf772687700e206c760ba2e4097f78bde97887
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Tue Aug 19 15:51:23 2014 +0200

    ASoC: Pass component instead of DAPM context to AUX dev init callback
    
    Given that the component is the containing structure it makes more sense to pass
    the component rather than the DAPM context to the AUX dev init callback.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index fbc2ad840244..3a0031e1f9b4 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1022,7 +1022,7 @@ struct snd_soc_aux_dev {
 	const struct device_node *codec_of_node;
 
 	/* codec/machine specific init - e.g. add machine controls */
-	int (*init)(struct snd_soc_dapm_context *dapm);
+	int (*init)(struct snd_soc_component *component);
 };
 
 /* SoC card */

commit 65d9361f0cb50a20641802ee3075145d72e4409c
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Tue Aug 19 15:51:22 2014 +0200

    ASoC: Move AUX dev support to the component level
    
    This patch makes it possible to register arbitrary components as a AUX dev
    for a card. This was previously only possible for CODEC components. With
    componentization having made it possible for components to have DAPM contexts
    and controls there is no reason why AUX devs should be artificially limited to
    snd_soc_codec devices.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 4a223a895f00..fbc2ad840244 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1140,6 +1140,7 @@ struct snd_soc_pcm_runtime {
 	struct snd_soc_platform *platform;
 	struct snd_soc_dai *codec_dai;
 	struct snd_soc_dai *cpu_dai;
+	struct snd_soc_component *component; /* Only valid for AUX dev rtds */
 
 	struct snd_soc_dai **codec_dais;
 	unsigned int num_codecs;

commit 61aca5646b736a794d40de29a197144db3f0c5ba
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Tue Aug 19 15:51:21 2014 +0200

    ASoC: Add component level probe/remove support
    
    Now that we have a unified probe and remove path make sure to call them for all
    components. soc_{probe,remove}_component are responsible for setting up the DAPM
    context for the component, initialize the component prefix, manage the debugfs
    entries as well as do the registration of table based controls and DAPM
    elements. They also call the component drivers probe and remove callbacks. This
    patch makes these things available for generic snd_soc_component drivers rather
    than only having them for snd_soc_codec and snd_soc_platform drivers.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 22543acfae4b..4a223a895f00 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -690,6 +690,17 @@ struct snd_soc_compr_ops {
 struct snd_soc_component_driver {
 	const char *name;
 
+	/* Default control and setup, added after probe() is run */
+	const struct snd_kcontrol_new *controls;
+	unsigned int num_controls;
+	const struct snd_soc_dapm_widget *dapm_widgets;
+	unsigned int num_dapm_widgets;
+	const struct snd_soc_dapm_route *dapm_routes;
+	unsigned int num_dapm_routes;
+
+	int (*probe)(struct snd_soc_component *);
+	void (*remove)(struct snd_soc_component *);
+
 	/* DT */
 	int (*of_xlate_dai_name)(struct snd_soc_component *component,
 				 struct of_phandle_args *args,

commit f1d45cc3ae96a6173129b2c164c216272faa5fc0
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Tue Aug 19 15:51:19 2014 +0200

    ASoC: Consolidate platform and CODEC probe/remove
    
    The platform and CODEC probe and remove code is now largely identical. This
    patch consolidates it at the component level.
    
    The resulting code is slightly larger due to all the boiler plate code setting
    up the indirection for the table based control and DAPM registration.  Once all
    drivers have been update to no longer use the snd_soc_codec_driver and
    snd_soc_platform_driver specific fields for this the indirection can be removed
    again.
    
    This patch contains two noteworthy hacks that are only meant to be temporary to
    be able to update drivers and the core in separate incremental patches.
    
    The first hack is related to that some DPCM platforms expect that the DAPM
    widgets for the DAIs of a snd_soc_component are created in the DAPM context of
    the snd_soc_platform that has the same parent device. For handling this the
    steal_sibling_dai_widgets attribute is introduced. It gets set for
    snd_soc_platforms that register DAPM elements. When creating the DAI widgets for
    a component this flag is checked and if it is found on one of the siblings the
    component will not create any DAI widgets in its own DAPM context. If the
    attribute is set on a platform it will look for siblings components and create
    DAI widgets for them in its own context. The fix for this will be to update
    the offending drivers to only register a single component rather than two.
    
    The second hack deals with the fact that the ASoC card suspend and resume code
    still needs a list of CODECs that have been registered for the card. To handle
    this the generic probe and remove path have a check to see if the component is
    CODEC and if yes add/remove it to the card's CODEC list. While it is possible to
    clean up the suspend/resume code to not need the CODEC list anymore this is a
    bit of a chicken and egg problem since it will become easier to clean up the
    suspend/resume code once there is a unified component layer.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 0ab8b1e4a5d2..22543acfae4b 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -697,6 +697,10 @@ struct snd_soc_component_driver {
 	void (*seq_notifier)(struct snd_soc_component *, enum snd_soc_dapm_type,
 		int subseq);
 	int (*stream_event)(struct snd_soc_component *, int event);
+
+	/* probe ordering - for components with runtime dependencies */
+	int probe_order;
+	int remove_order;
 };
 
 struct snd_soc_component {
@@ -710,6 +714,7 @@ struct snd_soc_component {
 
 	unsigned int ignore_pmdown_time:1; /* pmdown_time is ignored at stop */
 	unsigned int registered_as_component:1;
+	unsigned int probed:1;
 
 	struct list_head list;
 
@@ -742,6 +747,18 @@ struct snd_soc_component {
 	struct snd_soc_dapm_context dapm;
 	struct snd_soc_dapm_context *dapm_ptr;
 
+	const struct snd_kcontrol_new *controls;
+	unsigned int num_controls;
+	const struct snd_soc_dapm_widget *dapm_widgets;
+	unsigned int num_dapm_widgets;
+	const struct snd_soc_dapm_route *dapm_routes;
+	unsigned int num_dapm_routes;
+	bool steal_sibling_dai_widgets;
+	struct snd_soc_codec *codec;
+
+	int (*probe)(struct snd_soc_component *);
+	void (*remove)(struct snd_soc_component *);
+
 #ifdef CONFIG_DEBUG_FS
 	void (*init_debugfs)(struct snd_soc_component *component);
 	const char *debugfs_prefix;
@@ -761,7 +778,6 @@ struct snd_soc_codec {
 	struct snd_ac97 *ac97;  /* for ad-hoc ac97 devices */
 	unsigned int cache_bypass:1; /* Suppress access to the cache */
 	unsigned int suspended:1; /* Codec is in suspend PM state */
-	unsigned int probed:1; /* Codec has been probed */
 	unsigned int ac97_registered:1; /* Codec has been AC97 registered */
 	unsigned int ac97_created:1; /* Codec has been created by SoC */
 	unsigned int cache_init:1; /* codec cache has been initialized */
@@ -827,10 +843,6 @@ struct snd_soc_codec_driver {
 			     enum snd_soc_dapm_type, int);
 
 	bool ignore_pmdown_time;  /* Doesn't benefit from pmdown delay */
-
-	/* probe ordering - for components with runtime dependencies */
-	int probe_order;
-	int remove_order;
 };
 
 /* SoC platform interface */
@@ -867,10 +879,6 @@ struct snd_soc_platform_driver {
 	/* platform stream compress ops */
 	const struct snd_compr_ops *compr_ops;
 
-	/* probe ordering - for components with runtime dependencies */
-	int probe_order;
-	int remove_order;
-
 	/* platform IO - used for platform DAPM */
 	unsigned int (*read)(struct snd_soc_platform *, unsigned int);
 	int (*write)(struct snd_soc_platform *, unsigned int, unsigned int);
@@ -888,7 +896,6 @@ struct snd_soc_platform {
 	const struct snd_soc_platform_driver *driver;
 
 	unsigned int suspended:1; /* platform is suspended */
-	unsigned int probed:1;
 
 	struct list_head list;
 

commit 81c7cfd1b22a0ee5e40efef72ec2cd17dbf12e6d
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Tue Aug 19 15:51:18 2014 +0200

    ASoC: Move debugfs registration to the component level
    
    The debugfs registration is mostly identical between platforms and CODECs. This
    patches consolidates the two implementations at the component level.
    
    Unfortunately there are still a couple of CODEC specific debugfs files that are
    related to legacy ASoC IO that need to be registered. For this a new callback is
    added to the component struct that will be initialized when a CODEC is
    registered and will be used to register the CODEC specific files. Once there are
    no drivers left using legacy IO this can be removed again.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index be6ecae247b0..0ab8b1e4a5d2 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -728,9 +728,24 @@ struct snd_soc_component {
 
 	struct mutex io_mutex;
 
+#ifdef CONFIG_DEBUG_FS
+	struct dentry *debugfs_root;
+#endif
+
+	/*
+	* DO NOT use any of the fields below in drivers, they are temporary and
+	* are going to be removed again soon. If you use them in driver code the
+	* driver will be marked as BROKEN when these fields are removed.
+	*/
+
 	/* Don't use these, use snd_soc_component_get_dapm() */
 	struct snd_soc_dapm_context dapm;
 	struct snd_soc_dapm_context *dapm_ptr;
+
+#ifdef CONFIG_DEBUG_FS
+	void (*init_debugfs)(struct snd_soc_component *component);
+	const char *debugfs_prefix;
+#endif
 };
 
 /* SoC Audio Codec device */
@@ -766,7 +781,6 @@ struct snd_soc_codec {
 	struct snd_soc_dapm_context dapm;
 
 #ifdef CONFIG_DEBUG_FS
-	struct dentry *debugfs_codec_root;
 	struct dentry *debugfs_reg;
 #endif
 };
@@ -879,10 +893,6 @@ struct snd_soc_platform {
 	struct list_head list;
 
 	struct snd_soc_component component;
-
-#ifdef CONFIG_DEBUG_FS
-	struct dentry *debugfs_platform_root;
-#endif
 };
 
 struct snd_soc_dai_link {

commit 4d61b39bc117b36682c1dd67ee386960ae826bef
Author: Subhransu S. Prusty <subhransu.s.prusty@intel.com>
Date:   Mon Aug 18 14:53:03 2014 +0530

    ASoC: core: fix .info for SND_SOC_BYTES_TLV
    
    Commit 7523a271 - "ASoC: core: add a helper for extended byte controls using
    TLV" introduced support for TLV byte controls but had a typo for the info
    function, so fix the same
    
    Signed-off-by: Subhransu S. Prusty <subhransu.s.prusty@intel.com>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index be6ecae247b0..c83a334dd00f 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -277,7 +277,7 @@
 	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READWRITE | \
 		  SNDRV_CTL_ELEM_ACCESS_TLV_CALLBACK, \
 	.tlv.c = (snd_soc_bytes_tlv_callback), \
-	.info = snd_soc_info_bytes_ext, \
+	.info = snd_soc_bytes_info_ext, \
 	.private_value = (unsigned long)&(struct soc_bytes_ext) \
 		{.max = xcount, .get = xhandler_get, .put = xhandler_put, } }
 #define SOC_SINGLE_XR_SX(xname, xregbase, xregcount, xnbits, \

commit 8ad9f9efcc7656cafb56bbbcd545f817a742bf32
Author: Sylwester Nawrocki <s.nawrocki@samsung.com>
Date:   Mon Jun 16 16:33:46 2014 +0200

    ASoC: Drop const from struct snd_soc_dai_link *of_node members
    
    Dropping the const qualifiers prevents "passing argument 1 of ‘of_node_put’
    discards ‘const’ qualifier from pointer target type" type warnings when
    compiling the code dropping reference to cpu_of_node, codec_of_node or
    platform_of_node with with an of_node_put() function call.
    
    This lets us to avoid casting to struct device_node * or caching variables
    internally in drivers just to be able to properly drop a reference to the
    OF node on clean up paths.
    
    Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index be6ecae247b0..fd58371c63ff 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -897,7 +897,7 @@ struct snd_soc_dai_link {
 	 * only for codec to codec links, or systems using device tree.
 	 */
 	const char *cpu_name;
-	const struct device_node *cpu_of_node;
+	struct device_node *cpu_of_node;
 	/*
 	 * You MAY specify the DAI name of the CPU DAI. If this information is
 	 * omitted, the CPU-side DAI is matched using .cpu_name/.cpu_of_node
@@ -909,7 +909,7 @@ struct snd_soc_dai_link {
 	 * DT/OF node, but not both.
 	 */
 	const char *codec_name;
-	const struct device_node *codec_of_node;
+	struct device_node *codec_of_node;
 	/* You MUST specify the DAI name within the codec */
 	const char *codec_dai_name;
 
@@ -922,7 +922,7 @@ struct snd_soc_dai_link {
 	 * do not need a platform.
 	 */
 	const char *platform_name;
-	const struct device_node *platform_of_node;
+	struct device_node *platform_of_node;
 	int be_id;	/* optional ID for machine driver BE identification */
 
 	const struct snd_soc_pcm_stream *params;

commit c5e64c7636eb53495ee79916ca037fb97700eda0
Merge: 3510a6949546 7523a271682f 08074dc1ae8f 96665e312940 423ca88eb528
Author: Mark Brown <broonie@linaro.org>
Date:   Mon Aug 4 16:32:12 2014 +0100

    Merge remote-tracking branches 'asoc/topic/tlv', 'asoc/topic/tlv320aic23', 'asoc/topic/tlv320aic31xx' and 'asoc/topic/tlv320aic32x4' into asoc-next

commit 7196be58ca832b6b37965921714849276f8996bc
Merge: a1cb98ac8b69 0e400c53812e
Author: Mark Brown <broonie@linaro.org>
Date:   Mon Aug 4 16:31:17 2014 +0100

    Merge remote-tracking branch 'asoc/topic/core' into asoc-next

commit 0f2780ad4c2a398528c7bb1572158d6e894e5dd2
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Thu Jul 17 22:01:08 2014 +0200

    ASoC: Add function to register component controls
    
    We have now everything in place to actual let a component register controls. Add
    a function which allows to do so.
    
    Also update snd_soc_add_codec_controls() and snd_soc_platform_controls() to use
    this new function internally. And while we are at it also change the
    num_controls parameter of those two functions from int to unsigned int.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 5ee6ddde4831..50ff6f3459aa 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -507,10 +507,12 @@ struct snd_kcontrol *snd_soc_cnew(const struct snd_kcontrol_new *_template,
 				  const char *prefix);
 struct snd_kcontrol *snd_soc_card_get_kcontrol(struct snd_soc_card *soc_card,
 					       const char *name);
+int snd_soc_add_component_controls(struct snd_soc_component *component,
+	const struct snd_kcontrol_new *controls, unsigned int num_controls);
 int snd_soc_add_codec_controls(struct snd_soc_codec *codec,
-	const struct snd_kcontrol_new *controls, int num_controls);
+	const struct snd_kcontrol_new *controls, unsigned int num_controls);
 int snd_soc_add_platform_controls(struct snd_soc_platform *platform,
-	const struct snd_kcontrol_new *controls, int num_controls);
+	const struct snd_kcontrol_new *controls, unsigned int num_controls);
 int snd_soc_add_card_controls(struct snd_soc_card *soc_card,
 	const struct snd_kcontrol_new *controls, int num_controls);
 int snd_soc_add_dai_controls(struct snd_soc_dai *dai,

commit 00200107a296cad3a950049a5ad7134a0d962b8d
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Thu Jul 17 22:01:07 2014 +0200

    ASoC: Move card field form platform/codec to component
    
    Both the snd_soc_codec and snd_soc_platform struct do have a pointer to the
    parent card and both handle this pointer in mostly the same way. This patch
    moves the card field to the component level which will allow further code
    consolidation between platforms and CODECS.
    
    Since there are only a handful of users of the snd_soc_codec struct's card field
    (and none of the snd_soc_platform's) these are update in this patch as well,
    which allows it to be removed from the snd_soc_codec struct.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 1f5b4901415e..5ee6ddde4831 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -691,6 +691,7 @@ struct snd_soc_component {
 	int id;
 	const char *name_prefix;
 	struct device *dev;
+	struct snd_soc_card *card;
 
 	unsigned int active;
 
@@ -725,7 +726,6 @@ struct snd_soc_codec {
 	const struct snd_soc_codec_driver *driver;
 
 	struct mutex mutex;
-	struct snd_soc_card *card;
 	struct list_head list;
 	struct list_head card_list;
 
@@ -863,7 +863,6 @@ struct snd_soc_platform {
 	unsigned int suspended:1; /* platform is suspended */
 	unsigned int probed:1;
 
-	struct snd_soc_card *card;
 	struct list_head list;
 
 	struct snd_soc_component component;

commit 9898e1ccf5af70ad2d03d5b77c591fb243c0f021
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Thu Jul 17 22:01:05 2014 +0200

    ASoC: Remove per card platform list
    
    The platform_dev_list was added in commit f0fba2ad1b ("ASoC: multi-component -
    ASoC Multi-Component Support") and while platforms are added and remove from
    that list it is otherwise unused. This patch removes it again.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 98555f833ab4..1f5b4901415e 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -865,7 +865,6 @@ struct snd_soc_platform {
 
 	struct snd_soc_card *card;
 	struct list_head list;
-	struct list_head card_list;
 
 	struct snd_soc_component component;
 
@@ -1056,7 +1055,6 @@ struct snd_soc_card {
 
 	/* lists of probed devices belonging to this card */
 	struct list_head codec_dev_list;
-	struct list_head platform_dev_list;
 
 	struct list_head widgets;
 	struct list_head paths;
@@ -1299,7 +1297,6 @@ static inline void *snd_soc_pcm_get_drvdata(struct snd_soc_pcm_runtime *rtd)
 static inline void snd_soc_initialize_card_lists(struct snd_soc_card *card)
 {
 	INIT_LIST_HEAD(&card->codec_dev_list);
-	INIT_LIST_HEAD(&card->platform_dev_list);
 	INIT_LIST_HEAD(&card->widgets);
 	INIT_LIST_HEAD(&card->paths);
 	INIT_LIST_HEAD(&card->dapm_list);

commit 93e6958a3674d2fa42e2c24ad5156e65da1d8621
Author: Benoit Cousson <bcousson@baylibre.com>
Date:   Tue Jul 8 23:19:38 2014 +0200

    ASoC: pcm: Add soc_dai_hw_params helper
    
    Add a function helper to factorize the hw_params code.
    
    Suggested by Lars-Peter Clausen <lars@metafoo.de>
    
    Signed-off-by: Benoit Cousson <bcousson@baylibre.com>
    Tested-by: Lars-Peter Clausen <lars@metafoo.de>
    Reviewed-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index f2142cf3f243..98555f833ab4 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -436,6 +436,10 @@ int snd_soc_set_runtime_hwparams(struct snd_pcm_substream *substream,
 int snd_soc_platform_trigger(struct snd_pcm_substream *substream,
 		int cmd, struct snd_soc_platform *platform);
 
+int soc_dai_hw_params(struct snd_pcm_substream *substream,
+		      struct snd_pcm_hw_params *params,
+		      struct snd_soc_dai *dai);
+
 /* Jack reporting */
 int snd_soc_jack_new(struct snd_soc_codec *codec, const char *id, int type,
 		     struct snd_soc_jack *jack);

commit 88bd870f02dff5c9445286e185f21873f25a977f
Author: Benoit Cousson <bcousson@baylibre.com>
Date:   Tue Jul 8 23:19:34 2014 +0200

    ASoC: core: Add initial support for DAI multicodec
    
    DAI link assumes a one to one mapping between CPU DAI and CODEC. In
    some cases, the same CPU DAI can be connected to several codecs.
    This is the case for example, if you connect two mono codecs to the
    same I2S link in order to have a stereo card.
    The current ASoC implementation does not allow such setup.
    
    Add support for DAI links composed of a single CPU DAI and multiple
    CODECs. Sound cards have to pass the CODECs array in the corresponding
    DAI link through a new 'snd_soc_dai_link_component' struct. Each CODEC in
    this array is described in the same manner single CODEC DAIs are
    (either DT/OF node or codec_name).
    
    Multi-codec links are not supported in the case of CODEC to CODEC links.
    Just print a warning if it happens.
    
    Based on an original code done by Misael.
    
    Signed-off-by: Benoit Cousson <bcousson@baylibre.com>
    Signed-off-by: Misael Lopez Cruz <misael.lopez@ti.com>
    Signed-off-by: Fabien Parent <fparent@baylibre.com>
    Tested-by: Lars-Peter Clausen <lars@metafoo.de>
    Reviewed-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 9a5b4f6fe847..f2142cf3f243 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -846,6 +846,12 @@ struct snd_soc_platform_driver {
 	int (*bespoke_trigger)(struct snd_pcm_substream *, int);
 };
 
+struct snd_soc_dai_link_component {
+	const char *name;
+	const struct device_node *of_node;
+	const char *dai_name;
+};
+
 struct snd_soc_platform {
 	struct device *dev;
 	const struct snd_soc_platform_driver *driver;
@@ -891,6 +897,10 @@ struct snd_soc_dai_link {
 	const struct device_node *codec_of_node;
 	/* You MUST specify the DAI name within the codec */
 	const char *codec_dai_name;
+
+	struct snd_soc_dai_link_component *codecs;
+	unsigned int num_codecs;
+
 	/*
 	 * You MAY specify the link's platform/PCM/DMA driver, either by
 	 * device name, or by DT/OF node, but not both. Some forms of link
@@ -1089,6 +1099,9 @@ struct snd_soc_pcm_runtime {
 	struct snd_soc_dai *codec_dai;
 	struct snd_soc_dai *cpu_dai;
 
+	struct snd_soc_dai **codec_dais;
+	unsigned int num_codecs;
+
 	struct delayed_work delayed_work;
 #ifdef CONFIG_DEBUG_FS
 	struct dentry *debugfs_dpcm_root;

commit 7523a271682fc1f35355da344249ce8f8c8b8cb9
Author: Omair Mohammed Abdullah <omair.m.abdullah@intel.com>
Date:   Tue Jul 15 21:34:48 2014 +0530

    ASoC: core: add a helper for extended byte controls using TLV
    
    ALSA supports arbitrary length TLVs for each kcontrol that can be used
    to pass metadata about the control (e.g. volumes, enum information). The
    same transport mechanism is now used for arbitrary length data by
    defining a new helper.
    
    Signed-off-by: Omair Mohammed Abdullah <omair.m.abdullah@intel.com>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index ed9e2d7e5fdc..688fa667dee5 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -270,7 +270,14 @@
 	.get = xhandler_get, .put = xhandler_put, \
 	.private_value = (unsigned long)&(struct soc_bytes_ext) \
 		{.max = xcount} }
-
+#define SND_SOC_BYTES_TLV(xname, xcount, xhandler_get, xhandler_put) \
+{	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
+	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READWRITE | \
+		  SNDRV_CTL_ELEM_ACCESS_TLV_CALLBACK, \
+	.tlv.c = (snd_soc_bytes_tlv_callback), \
+	.info = snd_soc_info_bytes_ext, \
+	.private_value = (unsigned long)&(struct soc_bytes_ext) \
+		{.max = xcount, .get = xhandler_get, .put = xhandler_put, } }
 #define SOC_SINGLE_XR_SX(xname, xregbase, xregcount, xnbits, \
 		xmin, xmax, xinvert) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname), \
@@ -552,6 +559,8 @@ int snd_soc_bytes_put(struct snd_kcontrol *kcontrol,
 		      struct snd_ctl_elem_value *ucontrol);
 int snd_soc_bytes_info_ext(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_info *ucontrol);
+int snd_soc_bytes_tlv_callback(struct snd_kcontrol *kcontrol, int op_flag,
+	unsigned int size, unsigned int __user *tlv);
 int snd_soc_info_xr_sx(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_info *uinfo);
 int snd_soc_get_xr_sx(struct snd_kcontrol *kcontrol,
@@ -1119,6 +1128,9 @@ struct soc_bytes {
 
 struct soc_bytes_ext {
 	int max;
+	/* used for TLV byte control */
+	int (*get)(unsigned int __user *bytes, unsigned int size);
+	int (*put)(const unsigned int __user *bytes, unsigned int size);
 };
 
 /* multi register control */

commit 1e4c0d7c9a2b44e18fe9e93712672741f70e36da
Author: Richard Fitzgerald <rf@opensource.wolfsonmicro.com>
Date:   Mon Jul 7 13:16:54 2014 +0100

    ASoC: add SOC_VALUE_ENUM_EXT
    
    Adds an equivalent of SOC_ENUM_EXT for value enums
    
    Strictly speaking SOC_ENUM_EXT can also be used to define
    a value enum since the only difference is the get and set
    functions. But this doesn't look good in code because it is
    inconsistent with the normal control definitions. Adding a
    specific SOC_VALUE_ENUM_EXT is better for code clarity.
    
    Signed-off-by: Richard Fitzgerald <rf@opensource.wolfsonmicro.com>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index ed9e2d7e5fdc..5d812cfe9427 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -248,6 +248,8 @@
 	.info = snd_soc_info_enum_double, \
 	.get = xhandler_get, .put = xhandler_put, \
 	.private_value = (unsigned long)&xenum }
+#define SOC_VALUE_ENUM_EXT(xname, xenum, xhandler_get, xhandler_put) \
+	SOC_ENUM_EXT(xname, xenum, xhandler_get, xhandler_put)
 
 #define SND_SOC_BYTES(xname, xbase, xregs)		      \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname,   \

commit 14e8bdebfbc1d5c8804b3520233b2d4e516056bc
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Mon Jun 16 18:13:08 2014 +0200

    ASoC: Add component level stream_event() and seq_notifier() support
    
    This patch adds stream_event() and seq_notifier() callbacks similar to those
    found in the snd_soc_codec_driver and snd_soc_platform driver struct to the
    snd_soc_component_driver struct. This is meant to unify the handling of these
    callbacks across different types of components and will eventually allow their
    removal from the CODEC and platfrom driver structs.
    
    The new callbacks are slightly different from the old ones in that they take a
    snd_soc_component as a parameter rather than a snd_soc_dapm_context. This was
    done since otherwise casting from the DAPM context to the component would
    typically be the first thing to do in the callback. And the interface becomes
    slightly cleaner by passing a snd_soc_component to all callbacks in the
    snd_soc_component_driver struct.
    
    The patch also already removes the stream_event() callback from the
    snd_soc_codec_driver and snd_soc_platform_driver structs as it is currently
    unused.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 84ebc079c92f..9a5b4f6fe847 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -677,6 +677,9 @@ struct snd_soc_component_driver {
 	int (*of_xlate_dai_name)(struct snd_soc_component *component,
 				 struct of_phandle_args *args,
 				 const char **dai_name);
+	void (*seq_notifier)(struct snd_soc_component *, enum snd_soc_dapm_type,
+		int subseq);
+	int (*stream_event)(struct snd_soc_component *, int event);
 };
 
 struct snd_soc_component {
@@ -792,9 +795,6 @@ struct snd_soc_codec_driver {
 	void (*seq_notifier)(struct snd_soc_dapm_context *,
 			     enum snd_soc_dapm_type, int);
 
-	/* codec stream completion event */
-	int (*stream_event)(struct snd_soc_dapm_context *dapm, int event);
-
 	bool ignore_pmdown_time;  /* Doesn't benefit from pmdown delay */
 
 	/* probe ordering - for components with runtime dependencies */
@@ -836,9 +836,6 @@ struct snd_soc_platform_driver {
 	/* platform stream compress ops */
 	const struct snd_compr_ops *compr_ops;
 
-	/* platform stream completion event */
-	int (*stream_event)(struct snd_soc_dapm_context *dapm, int event);
-
 	/* probe ordering - for components with runtime dependencies */
 	int probe_order;
 	int remove_order;

commit bc9af9fa9b89cb74eed020066d882abf238fad69
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Mon Jun 16 18:13:07 2014 +0200

    ASoC: Use component DAPM context for platforms
    
    The snd_soc_platform dapm field is not accessed outside of the ASoC core. Switch
    it over to using the snd_soc_component DAPM context.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index a21dfecba56b..84ebc079c92f 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -862,8 +862,6 @@ struct snd_soc_platform {
 
 	struct snd_soc_component component;
 
-	struct snd_soc_dapm_context dapm;
-
 #ifdef CONFIG_DEBUG_FS
 	struct dentry *debugfs_platform_root;
 #endif
@@ -1203,7 +1201,7 @@ static inline struct snd_soc_codec *snd_soc_dapm_to_codec(
 static inline struct snd_soc_platform *snd_soc_dapm_to_platform(
 	struct snd_soc_dapm_context *dapm)
 {
-	return container_of(dapm, struct snd_soc_platform, dapm);
+	return snd_soc_component_to_platform(snd_soc_dapm_to_component(dapm));
 }
 
 /**

commit ce0fc93ae56e2ba50ff8c220d69e4e860e889320
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Mon Jun 16 18:13:06 2014 +0200

    ASoC: Add DAPM support at the component level
    
    This patch adds full DAPM support at the component level. Previously there was
    only full DAPM support for CODECs and partial DAPM support (e.g. no Mixers nor
    MUXs) for platforms. Having DAPM support at the component level will allow all
    types of components to use DAPM and also help in consolidating the DAPM support
    between CODECs and platforms.
    
    Since the DAPM context is directly embedded into the snd_soc_codec and
    snd_soc_platform struct and the 'dapm' field is directly referenced in a lot of
    drivers moving the field just right now is not possible without causing code
    churn. The approach this patch takes is to add two new fields to the component
    struct. One field which is the pointer to the actual DAPM context used by the
    component and one DAPM context that will be used as the default if no other
    context was specified. For CODECs and platforms the pointer is initialized to
    point to the CODEC or platform DAPM context. All generic code when referencing
    a component's DAPM struct will go via the pointer. This will make it possible to
    eventually seamlessly move the DAPM context from snd_soc_codec and
    snd_soc_platform struct over once all direct references have been eliminated.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index f64bf9452466..a21dfecba56b 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -706,6 +706,10 @@ struct snd_soc_component {
 	int val_bytes;
 
 	struct mutex io_mutex;
+
+	/* Don't use these, use snd_soc_component_get_dapm() */
+	struct snd_soc_dapm_context dapm;
+	struct snd_soc_dapm_context *dapm_ptr;
 };
 
 /* SoC Audio Codec device */
@@ -1160,6 +1164,21 @@ static inline struct snd_soc_platform *snd_soc_component_to_platform(
 	return container_of(component, struct snd_soc_platform, component);
 }
 
+/**
+ * snd_soc_dapm_to_component() - Casts a DAPM context to the component it is
+ *  embedded in
+ * @dapm: The DAPM context to cast to the component
+ *
+ * This function must only be used on DAPM contexts that are known to be part of
+ * a component (e.g. in a component driver). Otherwise the behavior is
+ * undefined.
+ */
+static inline struct snd_soc_component *snd_soc_dapm_to_component(
+	struct snd_soc_dapm_context *dapm)
+{
+	return container_of(dapm, struct snd_soc_component, dapm);
+}
+
 /**
  * snd_soc_dapm_to_codec() - Casts a DAPM context to the CODEC it is embedded in
  * @dapm: The DAPM context to cast to the CODEC
@@ -1187,6 +1206,17 @@ static inline struct snd_soc_platform *snd_soc_dapm_to_platform(
 	return container_of(dapm, struct snd_soc_platform, dapm);
 }
 
+/**
+ * snd_soc_component_get_dapm() - Returns the DAPM context associated with a
+ *  component
+ * @component: The component for which to get the DAPM context
+ */
+static inline struct snd_soc_dapm_context *snd_soc_component_get_dapm(
+	struct snd_soc_component *component)
+{
+	return component->dapm_ptr;
+}
+
 /* codec IO */
 unsigned int snd_soc_read(struct snd_soc_codec *codec, unsigned int reg);
 int snd_soc_write(struct snd_soc_codec *codec, unsigned int reg,

commit f4333203ec933f9272c90c7add01774ec2cf94d3
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Mon Jun 16 18:13:02 2014 +0200

    ASoC: Move name and id from CODEC/platform to component
    
    The component struct already has a name and id field which are initialized to
    the same values as the same fields in the CODEC and platform structs. So remove
    them from the CODEC and platform structs and used the ones from the component
    struct instead.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index e1cce0042f8a..f64bf9452466 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -710,8 +710,6 @@ struct snd_soc_component {
 
 /* SoC Audio Codec device */
 struct snd_soc_codec {
-	const char *name;
-	int id;
 	struct device *dev;
 	const struct snd_soc_codec_driver *driver;
 
@@ -848,8 +846,6 @@ struct snd_soc_platform_driver {
 };
 
 struct snd_soc_platform {
-	const char *name;
-	int id;
 	struct device *dev;
 	const struct snd_soc_platform_driver *driver;
 

commit 94f99c875c109e51decf0d8c25ec2c946db20c56
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Mon Jun 16 18:13:01 2014 +0200

    ASoC: Move name_prefix from CODEC to component
    
    Move the name_prefix from the CODEC struct to the component struct. This will
    eventually allow to specify prefixes for all types of components. It is also
    necessary to make the DAPM code component type independent (i.e. a DAPM context
    does not need to know whether it belongs to a CODEC or a platform or something
    else).
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index ed9e2d7e5fdc..e1cce0042f8a 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -682,6 +682,7 @@ struct snd_soc_component_driver {
 struct snd_soc_component {
 	const char *name;
 	int id;
+	const char *name_prefix;
 	struct device *dev;
 
 	unsigned int active;
@@ -710,7 +711,6 @@ struct snd_soc_component {
 /* SoC Audio Codec device */
 struct snd_soc_codec {
 	const char *name;
-	const char *name_prefix;
 	int id;
 	struct device *dev;
 	const struct snd_soc_codec_driver *driver;

commit 9713d5d0c4d841c6a08bf2a0bd0728ff44f0c231
Merge: 1ecf44503bc3 e667487b67d9 d8188f00e7f5
Author: Mark Brown <broonie@linaro.org>
Date:   Tue Jun 3 10:39:50 2014 +0100

    Merge remote-tracking branches 'asoc/topic/gpio' and 'asoc/topic/intel' into asoc-next

commit b8139d0afd51b8f357a018aab68ff9c4095217be
Merge: bad6f621e492 b5fc40d3b37b
Author: Mark Brown <broonie@linaro.org>
Date:   Tue Jun 3 10:39:43 2014 +0100

    Merge remote-tracking branch 'asoc/topic/core' into asoc-next

commit 24089e04cb1b4975bafd6368ab8b92082ebf6ad7
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Sun May 18 14:24:12 2014 +0200

    ASoC: Add helper functions to cast from DAPM context to CODEC/platform
    
    This is useful if we have a pointer to a DAPM context and know that it is a
    CODEC or platform DAPM context and want to get a pointer to the CODEC or
    platform.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index b9ee22018352..520b6684b04e 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1135,6 +1135,33 @@ static inline struct snd_soc_platform *snd_soc_component_to_platform(
 	return container_of(component, struct snd_soc_platform, component);
 }
 
+/**
+ * snd_soc_dapm_to_codec() - Casts a DAPM context to the CODEC it is embedded in
+ * @dapm: The DAPM context to cast to the CODEC
+ *
+ * This function must only be used on DAPM contexts that are known to be part of
+ * a CODEC (e.g. in a CODEC driver). Otherwise the behavior is undefined.
+ */
+static inline struct snd_soc_codec *snd_soc_dapm_to_codec(
+	struct snd_soc_dapm_context *dapm)
+{
+	return container_of(dapm, struct snd_soc_codec, dapm);
+}
+
+/**
+ * snd_soc_dapm_to_platform() - Casts a DAPM context to the platform it is
+ *  embedded in
+ * @dapm: The DAPM context to cast to the platform.
+ *
+ * This function must only be used on DAPM contexts that are known to be part of
+ * a platform (e.g. in a platform driver). Otherwise the behavior is undefined.
+ */
+static inline struct snd_soc_platform *snd_soc_dapm_to_platform(
+	struct snd_soc_dapm_context *dapm)
+{
+	return container_of(dapm, struct snd_soc_platform, dapm);
+}
+
 /* codec IO */
 unsigned int snd_soc_read(struct snd_soc_codec *codec, unsigned int reg);
 int snd_soc_write(struct snd_soc_codec *codec, unsigned int reg,

commit e667487b67d96fc2471529e3a5b404f51dc52b39
Author: Jarkko Nikula <jarkko.nikula@linux.intel.com>
Date:   Tue May 27 10:39:57 2014 +0300

    ASoC: jack: Fix multiple definition of `snd_soc_jack_add_gpiods'
    
    Commit f025d3b9c64e ("ASoC: jack: Add support for GPIO descriptor defined
    jack pins") caused build error when CONFIG_GPIOLIB is not set:
    
    sound/include/sound/soc.h:470: multiple definition of `snd_soc_jack_add_gpiods'
    sound/soc/soc-core.o:sound/include/sound/soc.h:470: first defined here
    make[2]: *** [sound/soc/snd-soc-core.o] Error 1
    make[2]: *** Waiting for unfinished jobs....
    make[1]: *** [sound/soc] Error 2
    make: *** [sound] Error 2
    
    Fix this by marking snd_soc_jack_add_gpiods() as static inline in soc.h.
    
    Reported-by: kbuild test robot <fengguang.wu@intel.com>
    Signed-off-by: Jarkko Nikula <jarkko.nikula@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index a2408a5b96a7..ac21cc22c4e9 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -465,9 +465,10 @@ static inline int snd_soc_jack_add_gpios(struct snd_soc_jack *jack, int count,
 	return 0;
 }
 
-int snd_soc_jack_add_gpiods(struct device *gpiod_dev,
-			    struct snd_soc_jack *jack,
-			    int count, struct snd_soc_jack_gpio *gpios)
+static inline int snd_soc_jack_add_gpiods(struct device *gpiod_dev,
+					  struct snd_soc_jack *jack,
+					  int count,
+					  struct snd_soc_jack_gpio *gpios)
 {
 	return 0;
 }

commit 83ad152d03b594b6a3fb9f3d313622b491cd6168
Author: Jarkko Nikula <jarkko.nikula@linux.intel.com>
Date:   Tue May 27 13:54:18 2014 +0300

    ASoC: jack: Clarify GPIO descriptor lookup in struct snd_soc_jack_gpio doc
    
    Clarify struct snd_soc_jack_gpio documentation for the idx and name fields.
    Because name is passed as connection ID to gpiod_get_index() when using GPIO
    descriptor defined jack pins it is not only used as a label in debugfs but
    also as function name lookup in systems that support functions names for
    GPIOs.
    
    Clarify also idx since the index is within the function of the GPIO consumer
    device and not within the device itself only.
    
    Signed-off-by: Jarkko Nikula <jarkko.nikula@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 61bea882a74b..a2408a5b96a7 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -597,9 +597,11 @@ struct snd_soc_jack_zone {
  * struct snd_soc_jack_gpio - Describes a gpio pin for jack detection
  *
  * @gpio:         legacy gpio number
- * @idx:          gpio descriptor index within the GPIO consumer device
+ * @idx:          gpio descriptor index within the function of the GPIO
+ *                consumer device
  * @gpiod_dev     GPIO consumer device
- * @name:         gpio name
+ * @name:         gpio name. Also as connection ID for the GPIO consumer
+ *                device function name lookup
  * @report:       value to report when jack detected
  * @invert:       report presence in low state
  * @debouce_time: debouce time in ms

commit f025d3b9c64e1f7feb75a559d4a12f5f8c6a4a25
Author: Jarkko Nikula <jarkko.nikula@linux.intel.com>
Date:   Mon May 26 14:34:37 2014 +0300

    ASoC: jack: Add support for GPIO descriptor defined jack pins
    
    Allow jack GPIO pins be defined also using GPIO descriptor-based interface
    in addition to legacy GPIO numbers. This is done by adding two new fields to
    struct snd_soc_jack_gpio: idx and gpiod_dev.
    
    Legacy GPIO numbers are used only when GPIO consumer device gpiod_dev is
    NULL and otherwise idx is the descriptor index within the GPIO consumer
    device.
    
    New function snd_soc_jack_add_gpiods() is added for typical cases where all
    GPIO descriptor jack pins belong to same GPIO consumer device. For other
    cases the caller must set the gpiod_dev in struct snd_soc_jack_gpio before
    calling snd_soc_jack_add_gpios().
    
    Signed-off-by: Jarkko Nikula <jarkko.nikula@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index c6bd40f2c40b..61bea882a74b 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -453,6 +453,9 @@ int snd_soc_jack_get_type(struct snd_soc_jack *jack, int micbias_voltage);
 #ifdef CONFIG_GPIOLIB
 int snd_soc_jack_add_gpios(struct snd_soc_jack *jack, int count,
 			struct snd_soc_jack_gpio *gpios);
+int snd_soc_jack_add_gpiods(struct device *gpiod_dev,
+			    struct snd_soc_jack *jack,
+			    int count, struct snd_soc_jack_gpio *gpios);
 void snd_soc_jack_free_gpios(struct snd_soc_jack *jack, int count,
 			struct snd_soc_jack_gpio *gpios);
 #else
@@ -462,6 +465,13 @@ static inline int snd_soc_jack_add_gpios(struct snd_soc_jack *jack, int count,
 	return 0;
 }
 
+int snd_soc_jack_add_gpiods(struct device *gpiod_dev,
+			    struct snd_soc_jack *jack,
+			    int count, struct snd_soc_jack_gpio *gpios)
+{
+	return 0;
+}
+
 static inline void snd_soc_jack_free_gpios(struct snd_soc_jack *jack, int count,
 					   struct snd_soc_jack_gpio *gpios)
 {
@@ -586,7 +596,9 @@ struct snd_soc_jack_zone {
 /**
  * struct snd_soc_jack_gpio - Describes a gpio pin for jack detection
  *
- * @gpio:         gpio number
+ * @gpio:         legacy gpio number
+ * @idx:          gpio descriptor index within the GPIO consumer device
+ * @gpiod_dev     GPIO consumer device
  * @name:         gpio name
  * @report:       value to report when jack detected
  * @invert:       report presence in low state
@@ -598,6 +610,8 @@ struct snd_soc_jack_zone {
  */
 struct snd_soc_jack_gpio {
 	unsigned int gpio;
+	unsigned int idx;
+	struct device *gpiod_dev;
 	const char *name;
 	int report;
 	int invert;

commit 50dfb69d1bb0062e2811547525c73e9a45a423e9
Author: Jarkko Nikula <jarkko.nikula@linux.intel.com>
Date:   Mon May 26 14:34:36 2014 +0300

    ASoC: jack: Basic GPIO descriptor conversion
    
    This patch does basic GPIO descriptor conversion to soc-jack. Even the GPIOs
    are still passed and requested using legacy GPIO numbers the driver
    internals are converted to use GPIO descriptor API.
    
    Motivation for this is to prepare soc-jack so that it will allow registering
    jack GPIO pins using both GPIO descriptors and legacy GPIO numbers.
    
    Signed-off-by: Jarkko Nikula <jarkko.nikula@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 0b83168d8ff4..c6bd40f2c40b 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -606,6 +606,7 @@ struct snd_soc_jack_gpio {
 
 	struct snd_soc_jack *jack;
 	struct delayed_work work;
+	struct gpio_desc *desc;
 
 	void *data;
 	int (*jack_status_check)(void *data);

commit 04f87446c2cf2cadb17eaad6c789d75177179743
Merge: 6f821c644966 c1406846e4e1 1d55417e1279 63e54cd9caa3 7b6ad9e85bad 781cbebed750 b87704cef258 7c2fcccc3239 e9382e3b7a04
Author: Mark Brown <broonie@linaro.org>
Date:   Thu May 22 00:24:00 2014 +0100

    Merge remote-tracking branches 'asoc/topic/rt5651', 'asoc/topic/samsung', 'asoc/topic/sgtl5000', 'asoc/topic/sh', 'asoc/topic/simple', 'asoc/topic/sirf', 'asoc/topic/sta350' and 'asoc/topic/tlv320dac33' into asoc-next

commit 0c5dacf2ca07a1b9a5970cd06cc5eab496860382
Merge: b03a1c702907 3bb40619aca8 5958de23edc4 24fc81d5fe92
Author: Mark Brown <broonie@linaro.org>
Date:   Thu May 22 00:23:49 2014 +0100

    Merge remote-tracking branches 'asoc/topic/cs42l56', 'asoc/topic/cs42xx8' and 'asoc/topic/davinci' into asoc-next

commit e3ac3f2510e5adb62eb4296d3fd0fac5441b2037
Merge: 566d4eeff85a 9de98da2a753
Author: Mark Brown <broonie@linaro.org>
Date:   Thu May 22 00:23:44 2014 +0100

    Merge remote-tracking branch 'asoc/topic/enum' into asoc-next

commit 566d4eeff85a8112dddab9d455322e1fcf5defe7
Merge: 8e8fbd8f5838 6b0a0b3b4e5c
Author: Mark Brown <broonie@linaro.org>
Date:   Thu May 22 00:23:43 2014 +0100

    Merge remote-tracking branch 'asoc/topic/dt' into asoc-next

commit db88a8e3ca38b840c768e65a3ddb952cf1bf258f
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Tue May 6 09:39:39 2014 +0200

    ASoC: Remove unused num_dai field from CODEC
    
    Commit d191bd8de8 ("ASoC: snd_soc_codec includes snd_soc_component") removed the
    last user of the num_dai field. Also remove the field itself.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 7287c6e0cf71..b9ee22018352 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -701,7 +701,6 @@ struct snd_soc_codec {
 	struct snd_soc_card *card;
 	struct list_head list;
 	struct list_head card_list;
-	int num_dai;
 
 	/* runtime */
 	struct snd_ac97 *ac97;  /* for ad-hoc ac97 devices */

commit af0881ffbd7bfc825c2871c79798d66e3608a50c
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Tue May 6 09:39:38 2014 +0200

    ASoC: Remove unused 'list' field form card
    
    The global card list was removed in commit b19e6e7b7 ("ASoC: core: Use driver
    core probe deferral"). The 'list' field of the snd_soc_card struct has been
    unused since then. This patch removes the field.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 96d073fe7cd2..7287c6e0cf71 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -958,7 +958,6 @@ struct snd_soc_card {
 	struct snd_card *snd_card;
 	struct module *owner;
 
-	struct list_head list;
 	struct mutex mutex;
 	struct mutex dapm_mutex;
 

commit 24faf7656800afa0e0d882f950502c5c03f4b7f0
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Tue May 6 09:39:37 2014 +0200

    ASoC: Remove card's DAI list
    
    Commit f0fba2ad1 ("ASoC: multi-component - ASoC Multi-Component Support") added
    a per card list that keeps track of all the DAIs that have been registered with
    the card, but the list has never been used. This patch removes it again.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index e84f22f89765..96d073fe7cd2 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1021,7 +1021,6 @@ struct snd_soc_card {
 	/* lists of probed devices belonging to this card */
 	struct list_head codec_dev_list;
 	struct list_head platform_dev_list;
-	struct list_head dai_dev_list;
 
 	struct list_head widgets;
 	struct list_head paths;
@@ -1207,7 +1206,6 @@ static inline void *snd_soc_pcm_get_drvdata(struct snd_soc_pcm_runtime *rtd)
 
 static inline void snd_soc_initialize_card_lists(struct snd_soc_card *card)
 {
-	INIT_LIST_HEAD(&card->dai_dev_list);
 	INIT_LIST_HEAD(&card->codec_dev_list);
 	INIT_LIST_HEAD(&card->platform_dev_list);
 	INIT_LIST_HEAD(&card->widgets);

commit 387f837b3d9f9a989ae9a6deab543e1948b58ce8
Merge: d98812082c87 4da533932ded
Author: Mark Brown <broonie@linaro.org>
Date:   Wed May 7 10:21:22 2014 +0100

    Merge branch 'topic/component' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound into asoc-core

commit d98812082c87732b45c71d63afc6a9ba3cca3f03
Author: Vinod Koul <vinod.koul@intel.com>
Date:   Fri May 2 10:58:11 2014 +0530

    ASoC: add SND_SOC_BYTES_EXT
    
    we need _EXT version for SND_SOC_BYTES so that DSPs can use this to pass data
    for DSP modules
    
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 192ddc40ae0a..3da5f2328ff3 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -266,6 +266,13 @@
 		{.base = xbase, .num_regs = xregs,	      \
 		 .mask = xmask }) }
 
+#define SND_SOC_BYTES_EXT(xname, xcount, xhandler_get, xhandler_put) \
+{	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
+	.info = snd_soc_bytes_info_ext, \
+	.get = xhandler_get, .put = xhandler_put, \
+	.private_value = (unsigned long)&(struct soc_bytes_ext) \
+		{.max = xcount} }
+
 #define SOC_SINGLE_XR_SX(xname, xregbase, xregcount, xnbits, \
 		xmin, xmax, xinvert) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname), \
@@ -534,6 +541,8 @@ int snd_soc_bytes_get(struct snd_kcontrol *kcontrol,
 		      struct snd_ctl_elem_value *ucontrol);
 int snd_soc_bytes_put(struct snd_kcontrol *kcontrol,
 		      struct snd_ctl_elem_value *ucontrol);
+int snd_soc_bytes_info_ext(struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_info *ucontrol);
 int snd_soc_info_xr_sx(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_info *uinfo);
 int snd_soc_get_xr_sx(struct snd_kcontrol *kcontrol,
@@ -1080,6 +1089,10 @@ struct soc_bytes {
 	u32 mask;
 };
 
+struct soc_bytes_ext {
+	int max;
+};
+
 /* multi register control */
 struct soc_mreg_control {
 	long min, max;

commit 3ca041ed04734c1709460184f985f5451a813d69
Author: Sebastian Reichel <sre@kernel.org>
Date:   Mon Apr 28 16:07:22 2014 +0200

    ASoC: dt: Allow Aux Codecs to be specified using DT
    
    This patch adds support for specifying auxiliary codecs and
    codec configuration via device tree phandles.
    
    This change adds new fields to snd_soc_aux_dev and snd_soc_codec_conf
    and adds support for the changes to SoC core methods.
    
    Signed-off-by: Pavel Machek <pavel@ucw.cz>
    Signed-off-by: Sebastian Reichel <sre@kernel.org>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 0b83168d8ff4..d371ae1c7279 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -931,7 +931,12 @@ struct snd_soc_dai_link {
 };
 
 struct snd_soc_codec_conf {
+	/*
+	 * specify device either by device name, or by
+	 * DT/OF node, but not both.
+	 */
 	const char *dev_name;
+	const struct device_node *of_node;
 
 	/*
 	 * optional map of kcontrol, widget and path name prefixes that are
@@ -942,7 +947,13 @@ struct snd_soc_codec_conf {
 
 struct snd_soc_aux_dev {
 	const char *name;		/* Codec name */
-	const char *codec_name;		/* for multi-codec */
+
+	/*
+	 * specify multi-codec either by device name, or by
+	 * DT/OF node, but not both.
+	 */
+	const char *codec_name;
+	const struct device_node *codec_of_node;
 
 	/* codec/machine specific init - e.g. add machine controls */
 	int (*init)(struct snd_soc_dapm_context *dapm);

commit 389cb8348cf5ac4a702c71bf13673c4c8bf01e34
Author: Jyri Sarha <jsarha@ti.com>
Date:   Mon Mar 24 12:15:24 2014 +0200

    ASoC: core: Update snd_soc_of_parse_daifmt() interface
    
    Adds struct device_node **bitclkmaster and struct device_node **framemaster
    function parameters. With the new syntax bitclock-master and frame-master
    properties can explicitly indicate the dai-link bit-clock and frame masters
    with a phandle. This patch also makes the minimal changes to simple-card
    for it to work with the updated snd_soc_of_parse_daifmt(). Simple-card appears
    to be the only user of snd_soc_of_parse_daifmt() for now.
    
    Signed-off-by: Jyri Sarha <jsarha@ti.com>
    Acked-by: Jean-Francois Moine <moinejf@free.fr>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 0b83168d8ff4..58784105289a 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1241,7 +1241,9 @@ int snd_soc_of_parse_tdm_slot(struct device_node *np,
 int snd_soc_of_parse_audio_routing(struct snd_soc_card *card,
 				   const char *propname);
 unsigned int snd_soc_of_parse_daifmt(struct device_node *np,
-				     const char *prefix);
+				     const char *prefix,
+				     struct device_node **bitclkmaster,
+				     struct device_node **framemaster);
 int snd_soc_of_get_dai_name(struct device_node *of_node,
 			    const char **dai_name);
 

commit 907fe36a2cd572fe58d98be01457b945c47b996e
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Tue Apr 22 13:23:14 2014 +0200

    ASoC: Move standard kcontrol helpers to the component level
    
    After moving the IO layer inside ASoC to the component level we can now easily
    move the standard control helpers also to the component level. This allows to
    reuse the same standard helper control implementations for other components.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index a4179e73369a..c0b65fc90783 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1249,6 +1249,22 @@ static inline bool snd_soc_codec_is_active(struct snd_soc_codec *codec)
 	return snd_soc_component_is_active(&codec->component);
 }
 
+/**
+ * snd_soc_kcontrol_component() - Returns the component that registered the
+ *  control
+ * @kcontrol: The control for which to get the component
+ *
+ * Note: This function will work correctly if the control has been registered
+ * for a component. Either with snd_soc_add_codec_controls() or
+ * snd_soc_add_platform_controls() or via  table based setup for either a
+ * CODEC, a platform or component driver. Otherwise the behavior is undefined.
+ */
+static inline struct snd_soc_component *snd_soc_kcontrol_component(
+	struct snd_kcontrol *kcontrol)
+{
+	return snd_kcontrol_chip(kcontrol);
+}
+
 /**
  * snd_soc_kcontrol_codec() - Returns the CODEC that registered the control
  * @kcontrol: The control for which to get the CODEC
@@ -1260,7 +1276,7 @@ static inline bool snd_soc_codec_is_active(struct snd_soc_codec *codec)
 static inline struct snd_soc_codec *snd_soc_kcontrol_codec(
 	struct snd_kcontrol *kcontrol)
 {
-	return snd_kcontrol_chip(kcontrol);
+	return snd_soc_component_to_codec(snd_soc_kcontrol_component(kcontrol));
 }
 
 /**
@@ -1274,7 +1290,7 @@ static inline struct snd_soc_codec *snd_soc_kcontrol_codec(
 static inline struct snd_soc_platform *snd_soc_kcontrol_platform(
 	struct snd_kcontrol *kcontrol)
 {
-	return snd_kcontrol_chip(kcontrol);
+	return snd_soc_component_to_platform(snd_soc_kcontrol_component(kcontrol));
 }
 
 int snd_soc_util_init(void);

commit e2c330b9b5665006c99327c05bc22f7a8e471043
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Tue Apr 22 13:23:13 2014 +0200

    ASoC: Move IO abstraction to the component level
    
    We currently have two very similar IO abstractions in ASoC, one for CODECs, the
    other for platforms. Moving this to the component level will allow us to unify
    those two. It will also enable us to move the standard kcontrol helpers as well
    as DAPM support to the component level.
    
    The new component level abstraction layer is primarily build around regmap.
    There is a per component pointer for the regmap instance for the underlying
    device. There are four new function snd_soc_component_read(),
    snd_soc_component_write(), snd_soc_component_update_bits() and
    snd_soc_component_update_bits_async(). They have the same signature as their
    regmap counter-part and will internally forward the call one-to-one to regmap.
    If the component it not using regmap it will fallback to using the custom IO
    callbacks. This is done to be able to support drivers that haven't been
    converted to regmap yet, but it is expected that this will eventually be removed
    in the future once all component drivers have been converted to regmap.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 8148c98b5f8f..a4179e73369a 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -393,8 +393,6 @@ int devm_snd_soc_register_component(struct device *dev,
 			 const struct snd_soc_component_driver *cmpnt_drv,
 			 struct snd_soc_dai_driver *dai_drv, int num_dai);
 void snd_soc_unregister_component(struct device *dev);
-int snd_soc_codec_set_cache_io(struct snd_soc_codec *codec,
-			       struct regmap *regmap);
 int snd_soc_cache_sync(struct snd_soc_codec *codec);
 int snd_soc_cache_init(struct snd_soc_codec *codec);
 int snd_soc_cache_exit(struct snd_soc_codec *codec);
@@ -672,6 +670,14 @@ struct snd_soc_component {
 	const struct snd_soc_component_driver *driver;
 
 	struct list_head dai_list;
+
+	int (*read)(struct snd_soc_component *, unsigned int, unsigned int *);
+	int (*write)(struct snd_soc_component *, unsigned int, unsigned int);
+
+	struct regmap *regmap;
+	int val_bytes;
+
+	struct mutex io_mutex;
 };
 
 /* SoC Audio Codec device */
@@ -696,18 +702,14 @@ struct snd_soc_codec {
 	unsigned int ac97_registered:1; /* Codec has been AC97 registered */
 	unsigned int ac97_created:1; /* Codec has been created by SoC */
 	unsigned int cache_init:1; /* codec cache has been initialized */
-	unsigned int using_regmap:1; /* using regmap access */
 	u32 cache_only;  /* Suppress writes to hardware */
 	u32 cache_sync; /* Cache needs to be synced to hardware */
 
 	/* codec IO */
 	void *control_data; /* codec control (i2c/3wire) data */
 	hw_write_t hw_write;
-	unsigned int (*read)(struct snd_soc_codec *, unsigned int);
-	int (*write)(struct snd_soc_codec *, unsigned int, unsigned int);
 	void *reg_cache;
 	struct mutex cache_rw_mutex;
-	int val_bytes;
 
 	/* component */
 	struct snd_soc_component component;
@@ -824,7 +826,6 @@ struct snd_soc_platform {
 	int id;
 	struct device *dev;
 	const struct snd_soc_platform_driver *driver;
-	struct mutex mutex;
 
 	unsigned int suspended:1; /* platform is suspended */
 	unsigned int probed:1;
@@ -1129,6 +1130,22 @@ unsigned int snd_soc_read(struct snd_soc_codec *codec, unsigned int reg);
 int snd_soc_write(struct snd_soc_codec *codec, unsigned int reg,
 	unsigned int val);
 
+/* component IO */
+int snd_soc_component_read(struct snd_soc_component *component,
+	unsigned int reg, unsigned int *val);
+int snd_soc_component_write(struct snd_soc_component *component,
+	unsigned int reg, unsigned int val);
+int snd_soc_component_update_bits(struct snd_soc_component *component,
+	unsigned int reg, unsigned int mask, unsigned int val);
+int snd_soc_component_update_bits_async(struct snd_soc_component *component,
+	unsigned int reg, unsigned int mask, unsigned int val);
+void snd_soc_component_async_complete(struct snd_soc_component *component);
+int snd_soc_component_test_bits(struct snd_soc_component *component,
+	unsigned int reg, unsigned int mask, unsigned int value);
+
+int snd_soc_component_init_io(struct snd_soc_component *component,
+	struct regmap *regmap);
+
 /* device driver data */
 
 static inline void snd_soc_card_set_drvdata(struct snd_soc_card *card,

commit 2b17ef4071d37ef5e357a4ec75686315cfa9d3e6
Merge: 66097ca78899 8ab1a06497a1 ab2874a8faac 3477501274b7 7a34b1c1dff7
Author: Mark Brown <broonie@linaro.org>
Date:   Tue Apr 22 13:22:52 2014 +0100

    Merge branches 'topic/sta350', 'topic/core', 'topic/dapm' and 'topic/cache' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound into asoc-component

commit ab2874a8faac9db00eb03ec831b9a983627fb2d1
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Sat Apr 19 10:43:57 2014 +0200

    ASoC: Change return type of snd_soc_write() to int
    
    The CODEC's write callback can return a negative error code, make sure to pass
    that on correctly.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 81bc331c520f..192ddc40ae0a 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1125,8 +1125,8 @@ static inline struct snd_soc_platform *snd_soc_component_to_platform(
 
 /* codec IO */
 unsigned int snd_soc_read(struct snd_soc_codec *codec, unsigned int reg);
-unsigned int snd_soc_write(struct snd_soc_codec *codec,
-			   unsigned int reg, unsigned int val);
+int snd_soc_write(struct snd_soc_codec *codec, unsigned int reg,
+	unsigned int val);
 
 /* device driver data */
 

commit 8931bf6208776292b1b888dd8534229f63e2eaa2
Author: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date:   Wed Apr 16 15:46:11 2014 +0300

    ASoC: Add resource managed snd_soc_register_platform()
    
    Simplify error handling and remove repetitive (and rarely executed) code
    for unregistration by providing a devm_snd_soc_register_platform()
    platform.
    
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 0b83168d8ff4..34c34d6e095c 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -377,6 +377,8 @@ int snd_soc_resume(struct device *dev);
 int snd_soc_poweroff(struct device *dev);
 int snd_soc_register_platform(struct device *dev,
 		const struct snd_soc_platform_driver *platform_drv);
+int devm_snd_soc_register_platform(struct device *dev,
+		const struct snd_soc_platform_driver *platform_drv);
 void snd_soc_unregister_platform(struct device *dev);
 int snd_soc_add_platform(struct device *dev, struct snd_soc_platform *platform,
 		const struct snd_soc_platform_driver *platform_drv);

commit 66097ca7889965e1b85de5cf699d7d728d84f47a
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Tue Apr 15 22:24:21 2014 +0200

    ASoC: Fix snd_soc_kcontrol_platform() return type
    
    This should obviously be snd_soc_platform * and not snd_soc_codec *
    
    Fixes: f6272ff8a5f4 ("ASoC: Add snd_soc_kcontrol_platform() helper function")
    Reported-by: kbuild test robot <fengguang.wu@intel.com>
    Reported-by: Stephen Rothwell <sfr@canb.auug.org.au>
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 94a2dc20ad6e..81454b0dd624 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1253,7 +1253,7 @@ static inline struct snd_soc_codec *snd_soc_kcontrol_codec(
  * registered with snd_soc_add_platform_controls() or via table based setup of
  * a snd_soc_platform_driver. Otherwise the behavior is undefined.
  */
-static inline struct snd_soc_codec *snd_soc_kcontrol_platform(
+static inline struct snd_soc_platform *snd_soc_kcontrol_platform(
 	struct snd_kcontrol *kcontrol)
 {
 	return snd_kcontrol_chip(kcontrol);

commit 785b3c4e0951252cdbc0cd902292bf5c9f08897a
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Mon Apr 14 21:31:12 2014 +0200

    ASoC: Remove deprecated ENUM/MUX macros
    
    Since there are no users left, we can remove the deprecated ENUM and MUX macros
    which are just alias for other macros.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 0b83168d8ff4..98e85a4796b6 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -196,8 +196,6 @@
 	.info = snd_soc_info_enum_double, \
 	.get = snd_soc_get_enum_double, .put = snd_soc_put_enum_double, \
 	.private_value = (unsigned long)&xenum }
-#define SOC_VALUE_ENUM(xname, xenum) \
-	SOC_ENUM(xname, xenum)
 #define SOC_SINGLE_EXT(xname, xreg, xshift, xmax, xinvert,\
 	 xhandler_get, xhandler_put) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \

commit aa0258adf6078a41a3db06f4e498253aff64d151
Merge: 1a39019e939f b37f1d123c69
Author: Mark Brown <broonie@linaro.org>
Date:   Mon Apr 14 17:42:28 2014 +0100

    Merge branch 'topic/component' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound into asoc-core
    
    Conflicts:
            sound/soc/soc-core.c

commit 1a39019e939f620f39a1b914231ab6ba9013b208
Author: Bard Liao <bardliao@realtek.com>
Date:   Tue Apr 8 11:18:10 2014 +0800

    ASoC: core: Allow snd_soc_update_bits use 32 bits register
    
    Change reg's type from unsigned short to unsigned int. So that we can use
    32 bits reg value in snd_soc_update_bits.
    
    Signed-off-by: Bard Liao <bardliao@realtek.com>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 0b83168d8ff4..4ed706bf11d1 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -469,12 +469,12 @@ static inline void snd_soc_jack_free_gpios(struct snd_soc_jack *jack, int count,
 #endif
 
 /* codec register bit access */
-int snd_soc_update_bits(struct snd_soc_codec *codec, unsigned short reg,
+int snd_soc_update_bits(struct snd_soc_codec *codec, unsigned int reg,
 				unsigned int mask, unsigned int value);
 int snd_soc_update_bits_locked(struct snd_soc_codec *codec,
-			       unsigned short reg, unsigned int mask,
+			       unsigned int reg, unsigned int mask,
 			       unsigned int value);
-int snd_soc_test_bits(struct snd_soc_codec *codec, unsigned short reg,
+int snd_soc_test_bits(struct snd_soc_codec *codec, unsigned int reg,
 				unsigned int mask, unsigned int value);
 
 int snd_soc_new_ac97_codec(struct snd_soc_codec *codec,

commit b37f1d123c69c0d7730704d65b83eaac780c0e3b
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Tue Mar 18 09:02:12 2014 +0100

    ASoC: Let snd_soc_platform subclass snd_soc_component
    
    There is an increasing amount of code that is very similar between platforms,
    CODECS and other components. Making platforms a component will allow us to
    share this code. For now the patch just adds component and component_driver
    fields to the platform and platform_driver structs and registers the platform as
    a component. Followup patches will be used to consolidate code between the
    different types of components.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index f8a79c17628e..94a2dc20ad6e 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -778,6 +778,7 @@ struct snd_soc_platform_driver {
 	int (*remove)(struct snd_soc_platform *);
 	int (*suspend)(struct snd_soc_dai *dai);
 	int (*resume)(struct snd_soc_dai *dai);
+	struct snd_soc_component_driver component_driver;
 
 	/* pcm creation and destruction */
 	int (*pcm_new)(struct snd_soc_pcm_runtime *);
@@ -831,6 +832,8 @@ struct snd_soc_platform {
 	struct list_head list;
 	struct list_head card_list;
 
+	struct snd_soc_component component;
+
 	struct snd_soc_dapm_context dapm;
 
 #ifdef CONFIG_DEBUG_FS
@@ -1107,6 +1110,19 @@ static inline struct snd_soc_codec *snd_soc_component_to_codec(
 	return container_of(component, struct snd_soc_codec, component);
 }
 
+/**
+ * snd_soc_component_to_platform() - Casts a component to the platform it is embedded in
+ * @component: The component to cast to a platform
+ *
+ * This function must only be used on components that are known to be platforms.
+ * Otherwise the behavior is undefined.
+ */
+static inline struct snd_soc_platform *snd_soc_component_to_platform(
+	struct snd_soc_component *component)
+{
+	return container_of(component, struct snd_soc_platform, component);
+}
+
 /* codec IO */
 unsigned int snd_soc_read(struct snd_soc_codec *codec, unsigned int reg);
 unsigned int snd_soc_write(struct snd_soc_codec *codec,

commit 98e639fb8a3ed1bf2bd512626c3cfc2992a57113
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Tue Mar 18 09:02:11 2014 +0100

    ASoC: Track which components have been registered with snd_soc_register_component()
    
    snd_soc_unregister_component() takes the parent device of the component as a
    parameter and then looks up the component based on this. This is a problem if
    multiple components are registered for the same parent device. Currently drivers
    do not do this, but some drivers register a CPU DAI component and a platform for
    the same parent device. This will become a problem once platforms are also made
    components. To make sure that snd_soc_unregister_component() will not
    accidentally unregister the platform in such a case only consider components
    that were registered with snd_soc_register_component(). This is only meant as
    short term stopgap solution to be able to continue componentisation. Long term
    we'll need something different.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index a355d0f9a6f9..f8a79c17628e 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -662,6 +662,7 @@ struct snd_soc_component {
 	unsigned int active;
 
 	unsigned int ignore_pmdown_time:1; /* pmdown_time is ignored at stop */
+	unsigned int registered_as_component:1;
 
 	struct list_head list;
 

commit 20a0ec27ea11af0251ffeb5ee2b96cc5c72cb517
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Tue Mar 18 09:02:09 2014 +0100

    ASoC: Remove IO register modifier callbacks
    
    There are no ASoC drivers left that use them and new drivers are supposed to use
    regmap for this.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 14e7457e2347..a355d0f9a6f9 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -393,12 +393,6 @@ int devm_snd_soc_register_component(struct device *dev,
 			 const struct snd_soc_component_driver *cmpnt_drv,
 			 struct snd_soc_dai_driver *dai_drv, int num_dai);
 void snd_soc_unregister_component(struct device *dev);
-int snd_soc_codec_volatile_register(struct snd_soc_codec *codec,
-				    unsigned int reg);
-int snd_soc_codec_readable_register(struct snd_soc_codec *codec,
-				    unsigned int reg);
-int snd_soc_codec_writable_register(struct snd_soc_codec *codec,
-				    unsigned int reg);
 int snd_soc_codec_set_cache_io(struct snd_soc_codec *codec,
 			       struct regmap *regmap);
 int snd_soc_cache_sync(struct snd_soc_codec *codec);
@@ -692,9 +686,6 @@ struct snd_soc_codec {
 	struct list_head list;
 	struct list_head card_list;
 	int num_dai;
-	int (*volatile_register)(struct snd_soc_codec *, unsigned int);
-	int (*readable_register)(struct snd_soc_codec *, unsigned int);
-	int (*writable_register)(struct snd_soc_codec *, unsigned int);
 
 	/* runtime */
 	struct snd_ac97 *ac97;  /* for ad-hoc ac97 devices */
@@ -756,11 +747,6 @@ struct snd_soc_codec_driver {
 	/* codec IO */
 	unsigned int (*read)(struct snd_soc_codec *, unsigned int);
 	int (*write)(struct snd_soc_codec *, unsigned int, unsigned int);
-	int (*display_register)(struct snd_soc_codec *, char *,
-				size_t, unsigned int);
-	int (*volatile_register)(struct snd_soc_codec *, unsigned int);
-	int (*readable_register)(struct snd_soc_codec *, unsigned int);
-	int (*writable_register)(struct snd_soc_codec *, unsigned int);
 	unsigned int reg_cache_size;
 	short reg_cache_step;
 	short reg_word_size;

commit f6272ff8a5f42c614f4a338013f5323979121e0f
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Tue Mar 18 09:02:05 2014 +0100

    ASoC: Add snd_soc_kcontrol_platform() helper function
    
    For platform controls snd_kcontrol_chip() currently returns a pointer to the
    platform that registered the control. With the upcoming consolidation of
    platform and CODEC controls this will change. Prepare for this by introducing
    the snd_soc_kcontrol_platform() helper function that will hide the
    implementation details of how the platform for a control can be obtained. This
    will allow us to change this easily in the future.
    
    The patch also updates all platforms to use this new helper function.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index e150030b754d..14e7457e2347 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1242,6 +1242,20 @@ static inline struct snd_soc_codec *snd_soc_kcontrol_codec(
 	return snd_kcontrol_chip(kcontrol);
 }
 
+/**
+ * snd_soc_kcontrol_platform() - Returns the platform that registerd the control
+ * @kcontrol: The control for which to get the platform
+ *
+ * Note: This function will only work correctly if the control has been
+ * registered with snd_soc_add_platform_controls() or via table based setup of
+ * a snd_soc_platform_driver. Otherwise the behavior is undefined.
+ */
+static inline struct snd_soc_codec *snd_soc_kcontrol_platform(
+	struct snd_kcontrol *kcontrol)
+{
+	return snd_kcontrol_chip(kcontrol);
+}
+
 int snd_soc_util_init(void);
 void snd_soc_util_exit(void);
 

commit ea53bf77d147e7e560ac007fdaa30fb98c37c712
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Tue Mar 18 09:02:04 2014 +0100

    ASoC: Add snd_soc_kcontrol_codec() helper function
    
    For CODEC controls snd_kcontrol_chip() currently returns a pointer to the
    CODEC that registered the control. With the upcoming consolidation of
    platform and CODEC controls this will change. Prepare for this by introducing
    the snd_soc_kcontrol_codec() helper function that will hide the implementation
    details of how the CODEC for a control can be obtained. This will allow us to
    change this easily in the future.
    
    The patch also updates all CODEC drivers to use the new helper function.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Acked-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 0b83168d8ff4..e150030b754d 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1228,6 +1228,20 @@ static inline bool snd_soc_codec_is_active(struct snd_soc_codec *codec)
 	return snd_soc_component_is_active(&codec->component);
 }
 
+/**
+ * snd_soc_kcontrol_codec() - Returns the CODEC that registered the control
+ * @kcontrol: The control for which to get the CODEC
+ *
+ * Note: This function will only work correctly if the control has been
+ * registered with snd_soc_add_codec_controls() or via table based setup of
+ * snd_soc_codec_driver. Otherwise the behavior is undefined.
+ */
+static inline struct snd_soc_codec *snd_soc_kcontrol_codec(
+	struct snd_kcontrol *kcontrol)
+{
+	return snd_kcontrol_chip(kcontrol);
+}
+
 int snd_soc_util_init(void);
 void snd_soc_util_exit(void);
 

commit a39f75f7907fa3a708751dc283e3ab3e7da526b8
Author: Xiubo Li <Li.Xiubo@freescale.com>
Date:   Wed Mar 26 13:40:23 2014 +0800

    ASoC: core: Move the default regmap I/O setting to snd_soc_register_codec()
    
    Add the default regmap I/O setting to snd_soc_register_codec() while
    the CODEC is initialising, which will be called by CODEC driver device
    probe(), and then we can make XXX_set_cache_io() go away entirely from each
    CODEC ASoC probe.
    
    Signed-off-by: Xiubo Li <Li.Xiubo@freescale.com>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 0b83168d8ff4..2f62436026d2 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -754,6 +754,7 @@ struct snd_soc_codec_driver {
 		unsigned int freq_in, unsigned int freq_out);
 
 	/* codec IO */
+	struct regmap *(*get_regmap)(struct device *);
 	unsigned int (*read)(struct snd_soc_codec *, unsigned int);
 	int (*write)(struct snd_soc_codec *, unsigned int, unsigned int);
 	int (*display_register)(struct snd_soc_codec *, char *,

commit 9780b68435eea68906bcf8f34c5522b5b087f4be
Merge: cab648a436e9 28d6d175d842
Author: Mark Brown <broonie@linaro.org>
Date:   Sun Mar 23 14:00:43 2014 +0000

    Merge remote-tracking branch 'asoc/topic/core' into asoc-next

commit 28d6d175d842b8dd6ac7fa10fa6e610b19fd9d86
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Tue Mar 18 09:02:10 2014 +0100

    ASoC: Add helper function to cast component back to CODEC
    
    Add a helper function to cast back from a component struct to the CODEC struct
    it is embedded in. This is useful in situations where we know that a certain
    component is a CODEC and want to get access to some CODEC specific properties.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 37b470c1e127..9ce6d20899b4 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1104,6 +1104,19 @@ struct soc_enum {
 	const unsigned int *values;
 };
 
+/**
+ * snd_soc_component_to_codec() - Casts a component to the CODEC it is embedded in
+ * @component: The component to cast to a CODEC
+ *
+ * This function must only be used on components that are known to be CODECs.
+ * Otherwise the behavior is undefined.
+ */
+static inline struct snd_soc_codec *snd_soc_component_to_codec(
+	struct snd_soc_component *component)
+{
+	return container_of(component, struct snd_soc_codec, component);
+}
+
 /* codec IO */
 unsigned int snd_soc_read(struct snd_soc_codec *codec, unsigned int reg);
 unsigned int snd_soc_write(struct snd_soc_codec *codec,

commit 4c11a761b8cff3d1941a53ec2a2bb2279ca38b44
Merge: 2620954d64f6 f1adf5be51a9
Author: Mark Brown <broonie@linaro.org>
Date:   Thu Mar 13 14:19:32 2014 +0000

    Merge remote-tracking branch 'asoc/topic/jack' into asoc-next

commit 2620954d64f6f067b785faf03738b637f3473ca7
Merge: 8b3272bffe58 a32c17b87c17
Author: Mark Brown <broonie@linaro.org>
Date:   Thu Mar 13 14:19:21 2014 +0000

    Merge remote-tracking branch 'asoc/topic/io' into asoc-next

commit a4b12990b68079290ab62799035afe175b4bdc23
Merge: 84f6965e2b49 c3518d1bd45e 89c678571559 7cb5e1bb9f91 a9576cbbbafa ba9c949f797a
Author: Mark Brown <broonie@linaro.org>
Date:   Wed Mar 12 23:04:35 2014 +0000

    Merge remote-tracking branches 'asoc/topic/ml26124', 'asoc/topic/of', 'asoc/topic/omap', 'asoc/topic/pxa' and 'asoc/topic/rcar' into asoc-next

commit b8f861586c9c2433b22f81e933845cb8aaa18d9e
Merge: 53a2c4db8cf2 6af5263ceaff
Author: Mark Brown <broonie@linaro.org>
Date:   Wed Mar 12 23:03:59 2014 +0000

    Merge remote-tracking branch 'asoc/topic/enum' into asoc-next

commit 53a2c4db8cf229047de88b3f1bd41d5a5d2756eb
Merge: da8ab21cfea8 f9fa2b1855a9
Author: Mark Brown <broonie@linaro.org>
Date:   Wed Mar 12 23:03:58 2014 +0000

    Merge remote-tracking branch 'asoc/topic/dapm' into asoc-next

commit 092eba937d948a76ff55825922eff4df010f6a17
Author: Xiubo Li <Li.Xiubo@freescale.com>
Date:   Tue Mar 11 12:43:21 2014 +0800

    ASoC: io: New signature for snd_soc_codec_set_cache_io()
    
    Now that all users have been converted to regmap and the config.reg_bits
    and config.val_bits can be setted by each user through regmap core API.
    So these two params are redundant here.
    
    Since the only control type that left is SND_SOC_REGMAP, so remove it. Drop
    the control params and add struct regmap *regmap to simplify the code.
    
    Signed-off-by: Xiubo Li <Li.Xiubo@freescale.com>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 2d8982db0344..85a5b7bbe39a 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -354,10 +354,6 @@ typedef int (*hw_write_t)(void *,const char* ,int);
 
 extern struct snd_ac97_bus_ops *soc_ac97_ops;
 
-enum snd_soc_control_type {
-	SND_SOC_REGMAP,
-};
-
 enum snd_soc_pcm_subclass {
 	SND_SOC_PCM_CLASS_PCM	= 0,
 	SND_SOC_PCM_CLASS_BE	= 1,
@@ -404,8 +400,7 @@ int snd_soc_codec_readable_register(struct snd_soc_codec *codec,
 int snd_soc_codec_writable_register(struct snd_soc_codec *codec,
 				    unsigned int reg);
 int snd_soc_codec_set_cache_io(struct snd_soc_codec *codec,
-			       int addr_bits, int data_bits,
-			       enum snd_soc_control_type control);
+			       struct regmap *regmap);
 int snd_soc_cache_sync(struct snd_soc_codec *codec);
 int snd_soc_cache_init(struct snd_soc_codec *codec);
 int snd_soc_cache_exit(struct snd_soc_codec *codec);

commit db5a5ee7c7b20a1780f90c6f2b8de322844b6fe9
Merge: feff9f3c9612 b6592d88ec37 40423285a10e b46f2c5c0054 d07338b0f2e1 58d4d3c976b3 8eeb5c15131d
Author: Mark Brown <broonie@linaro.org>
Date:   Tue Mar 11 09:58:55 2014 +0000

    Merge branches 'topic/ad193x', 'topic/tlv320aic23', 'topic/tlv320aic32x4', 'topic/wm8991', 'fix/si476x' and 'fix/88pm860' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound into asoc-io

commit 1438c2f60ba955114cff3717f1a334878c7886a9
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Sun Mar 9 17:41:47 2014 +0100

    ASoC: Add a per component dai list
    
    Now that every DAI has a component we can track the DAIs on a per component
    basis. This simplifies the DAI lookup when we are only interested in DAIs of a
    specific component and also makes it possible to have multiple components with
    the same parent device and also register DAIs.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index b14acd8228ab..37b470c1e127 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -671,6 +671,8 @@ struct snd_soc_component {
 	int num_dai;
 
 	const struct snd_soc_component_driver *driver;
+
+	struct list_head dai_list;
 };
 
 /* SoC Audio Codec device */

commit 6af5263ceaffc9d4403592dc81cd3b197702dc69
Merge: 234c0b8fb0db 3d59400fe47e
Author: Mark Brown <broonie@linaro.org>
Date:   Thu Mar 6 17:07:39 2014 +0800

    Merge branch 'topic/pcm' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound into asoc-enum
    
    Conflicts:
            include/sound/soc.h

commit 3d59400fe47e7e8bfb024cd1651433bef42e268e
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Wed Mar 5 13:17:48 2014 +0100

    ASoC: Move ignore_pmdown_time from CODEC to component
    
    In preparation for componentization move the ignore_pmdown_time field from the
    snd_soc_codec struct to the snd_soc_component struct. Set it to true for non
    CODEC components for now.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 0495b4aaeb70..b14acd8228ab 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -663,6 +663,8 @@ struct snd_soc_component {
 
 	unsigned int active;
 
+	unsigned int ignore_pmdown_time:1; /* pmdown_time is ignored at stop */
+
 	struct list_head list;
 
 	struct snd_soc_dai_driver *dai_drv;
@@ -715,7 +717,6 @@ struct snd_soc_codec {
 
 	/* dapm */
 	struct snd_soc_dapm_context dapm;
-	unsigned int ignore_pmdown_time:1; /* pmdown_time is ignored at stop */
 
 #ifdef CONFIG_DEBUG_FS
 	struct dentry *debugfs_codec_root;

commit cdde4ccb14b4959bd1c96a07367bf02b746328d3
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Wed Mar 5 13:17:47 2014 +0100

    ASoC: Move active count from CODEC to component
    
    There is no reason why active count tracking should only be done for CODECs but
    not for other components. Moving the active count from the snd_soc_codec struct
    to the snd_soc_component struct reduces the differences between CODECs and other
    components and will eventually allow component to component DAI links (Which is
    a prerequisite for converting CODECs to components).
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 5c2b4f4b5cfa..0495b4aaeb70 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -660,6 +660,9 @@ struct snd_soc_component {
 	const char *name;
 	int id;
 	struct device *dev;
+
+	unsigned int active;
+
 	struct list_head list;
 
 	struct snd_soc_dai_driver *dai_drv;
@@ -687,7 +690,6 @@ struct snd_soc_codec {
 
 	/* runtime */
 	struct snd_ac97 *ac97;  /* for ad-hoc ac97 devices */
-	unsigned int active;
 	unsigned int cache_bypass:1; /* Suppress access to the cache */
 	unsigned int suspended:1; /* Codec is in suspend PM state */
 	unsigned int probed:1; /* Codec has been probed */
@@ -1172,9 +1174,15 @@ static inline bool snd_soc_volsw_is_stereo(struct soc_mixer_control *mc)
 	return 1;
 }
 
+static inline bool snd_soc_component_is_active(
+	struct snd_soc_component *component)
+{
+	return component->active != 0;
+}
+
 static inline bool snd_soc_codec_is_active(struct snd_soc_codec *codec)
 {
-	return codec->active != 0;
+	return snd_soc_component_is_active(&codec->component);
 }
 
 int snd_soc_util_init(void);

commit 5c898e74d135a23ce12e0263c1a3c78eeae1b52b
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Wed Mar 5 13:17:45 2014 +0100

    ASoC: Add helper function to check whether a CODEC is active
    
    Instead of directly checking the 'active' field of the CODEC struct add a new
    helper function that will return either true or false depending on whether the
    CODEC is active. This will make the migration to the component level easier.
    
    The patch also updates all CODEC drivers that check the active attribute to use
    the new helper function.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 53d15e0e6e89..5c2b4f4b5cfa 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1172,6 +1172,11 @@ static inline bool snd_soc_volsw_is_stereo(struct soc_mixer_control *mc)
 	return 1;
 }
 
+static inline bool snd_soc_codec_is_active(struct snd_soc_codec *codec)
+{
+	return codec->active != 0;
+}
+
 int snd_soc_util_init(void);
 void snd_soc_util_exit(void);
 

commit 24894b76468ed250d03f9718ddfe77b902995cbd
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Wed Mar 5 13:17:43 2014 +0100

    ASoC: Add helper functions for PCM runtime 'active' management
    
    We have the same code that increments and decrements the active field of the
    various PCM runtime components (all with the same bugs). Factor this out into
    common helper functions.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 93c31c70b90a..53d15e0e6e89 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -414,6 +414,8 @@ struct snd_soc_pcm_runtime *snd_soc_get_pcm_runtime(struct snd_soc_card *card,
 		const char *dai_link);
 
 bool snd_soc_runtime_ignore_pmdown_time(struct snd_soc_pcm_runtime *rtd);
+void snd_soc_runtime_activate(struct snd_soc_pcm_runtime *rtd, int stream);
+void snd_soc_runtime_deactivate(struct snd_soc_pcm_runtime *rtd, int stream);
 
 /* Utility functions to get clock rates from various things */
 int snd_soc_calc_frame_size(int sample_size, int channels, int tdm_slots);

commit 208a1589db3e30767223d97e39e13237328e8a6e
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Wed Mar 5 13:17:42 2014 +0100

    ASoC: Handle ignore_pmdown_time for CODEC to CODEC links
    
    For CODEC to CODEC links we should only immediately power down if both CODECs
    are configured to ignore the power down delay. Factor the logic for this
    into a helper function that can be used for both compressed and normal PCMs.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 9a001472b96a..93c31c70b90a 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -413,6 +413,8 @@ struct snd_pcm_substream *snd_soc_get_dai_substream(struct snd_soc_card *card,
 struct snd_soc_pcm_runtime *snd_soc_get_pcm_runtime(struct snd_soc_card *card,
 		const char *dai_link);
 
+bool snd_soc_runtime_ignore_pmdown_time(struct snd_soc_pcm_runtime *rtd);
+
 /* Utility functions to get clock rates from various things */
 int snd_soc_calc_frame_size(int sample_size, int channels, int tdm_slots);
 int snd_soc_params_to_frame_size(struct snd_pcm_hw_params *params);

commit feff9f3c9612b2de9c008e207079bb233a9eb492
Author: Mark Brown <broonie@linaro.org>
Date:   Tue Mar 4 17:22:46 2014 +0800

    ASoC: io: Remove hw_read() operation
    
    We now no longer have any users of hw_read() in the kernel so remove the
    code in order to prevent any new users being added. Users should be using
    regmap.
    
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 6d0b6cb9c484..14fb921c373f 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -695,7 +695,6 @@ struct snd_soc_codec {
 	/* codec IO */
 	void *control_data; /* codec control (i2c/3wire) data */
 	hw_write_t hw_write;
-	unsigned int (*hw_read)(struct snd_soc_codec *, unsigned int);
 	unsigned int (*read)(struct snd_soc_codec *, unsigned int);
 	int (*write)(struct snd_soc_codec *, unsigned int, unsigned int);
 	void *reg_cache;

commit b948837a32cc2a510c2baf90111c8c5dde801a66
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Fri Feb 28 08:31:05 2014 +0100

    ASoC: Add macros for defining virtual enums
    
    With the upcoming consolidation of normal MUXs and virtual MUXs we need to be
    able to distinguish between enums with and without a backing register at the
    enum level. Use the same approach as used for virtual mixer controls by setting
    the reg field of the enum to SND_SOC_NOPM for enums without a backing register.
    This patch adds a set of helper macros that can be used to define such enums.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 60c700ccc518..08cb677b464b 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -189,6 +189,8 @@
 	.mask = xmask, .items = xitems, .texts = xtexts, .values = xvalues}
 #define SOC_VALUE_ENUM_SINGLE(xreg, xshift, xmask, xnitmes, xtexts, xvalues) \
 	SOC_VALUE_ENUM_DOUBLE(xreg, xshift, xshift, xmask, xnitmes, xtexts, xvalues)
+#define SOC_ENUM_SINGLE_VIRT(xitems, xtexts) \
+	SOC_ENUM_SINGLE(SND_SOC_NOPM, 0, xitems, xtexts)
 #define SOC_ENUM(xname, xenum) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname,\
 	.info = snd_soc_info_enum_double, \
@@ -293,6 +295,8 @@
 							ARRAY_SIZE(xtexts), xtexts, xvalues)
 #define SOC_VALUE_ENUM_SINGLE_DECL(name, xreg, xshift, xmask, xtexts, xvalues) \
 	SOC_VALUE_ENUM_DOUBLE_DECL(name, xreg, xshift, xshift, xmask, xtexts, xvalues)
+#define SOC_ENUM_SINGLE_VIRT_DECL(name, xtexts) \
+	const struct soc_enum name = SOC_ENUM_SINGLE_VIRT(ARRAY_SIZE(xtexts), xtexts)
 
 /*
  * Component probe and remove ordering levels for components with runtime
@@ -1092,7 +1096,7 @@ struct soc_mreg_control {
 
 /* enumerated kcontrol */
 struct soc_enum {
-	unsigned short reg;
+	int reg;
 	unsigned char shift_l;
 	unsigned char shift_r;
 	unsigned int items;

commit 29ae2fa5533e607a7d97b7564dc015252f1e73f4
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Fri Feb 28 08:31:03 2014 +0100

    ASoC: Consolidate enum and value enum controls
    
    The implementations for enum and value enum controls are almost identical. The
    only difference is that the value enum uses an additional look-up table to map
    the control value to the register value, while the enum control uses a direct
    mapping. Enums and value enums can easily be distinguished at runtime, for value
    enums the values field of the snd_soc_enum struct contains the look-up table,
    while for enums it is NULL. This patch adds two new small helper functions
    called snd_soc_enum_item_to_val() and snd_soc_enum_val_to_item() which map
    between register value and control item. If the items field of the snd_soc_enum
    struct is NULL the function will do a direct mapping otherwise they'll use the
    look-up table to do the mapping. Using these small helper functions it is
    possible to use the same kcontrol handlers for both enums and value enums. The
    functions are added a inline functions in soc.h so they can also be used by the
    DAPM code to accomplish similar consolidation.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 49d6c10f4612..60c700ccc518 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -195,11 +195,7 @@
 	.get = snd_soc_get_enum_double, .put = snd_soc_put_enum_double, \
 	.private_value = (unsigned long)&xenum }
 #define SOC_VALUE_ENUM(xname, xenum) \
-{	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname,\
-	.info = snd_soc_info_enum_double, \
-	.get = snd_soc_get_value_enum_double, \
-	.put = snd_soc_put_value_enum_double, \
-	.private_value = (unsigned long)&xenum }
+	SOC_ENUM(xname, xenum)
 #define SOC_SINGLE_EXT(xname, xreg, xshift, xmax, xinvert,\
 	 xhandler_get, xhandler_put) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
@@ -510,10 +506,6 @@ int snd_soc_get_enum_double(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
 int snd_soc_put_enum_double(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
-int snd_soc_get_value_enum_double(struct snd_kcontrol *kcontrol,
-	struct snd_ctl_elem_value *ucontrol);
-int snd_soc_put_value_enum_double(struct snd_kcontrol *kcontrol,
-	struct snd_ctl_elem_value *ucontrol);
 int snd_soc_info_volsw(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_info *uinfo);
 #define snd_soc_info_bool_ext		snd_ctl_boolean_mono_info
@@ -1182,6 +1174,30 @@ static inline bool snd_soc_volsw_is_stereo(struct soc_mixer_control *mc)
 	return 1;
 }
 
+static inline unsigned int snd_soc_enum_val_to_item(struct soc_enum *e,
+	unsigned int val)
+{
+	unsigned int i;
+
+	if (!e->values)
+		return val;
+
+	for (i = 0; i < e->items; i++)
+		if (val == e->values[i])
+			return i;
+
+	return 0;
+}
+
+static inline unsigned int snd_soc_enum_item_to_val(struct soc_enum *e,
+	unsigned int item)
+{
+	if (!e->values)
+		return item;
+
+	return e->values[item];
+}
+
 int snd_soc_util_init(void);
 void snd_soc_util_exit(void);
 

commit 8303d769ea9e9626c4f0c3bd13e35e904a1253ab
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Fri Feb 28 08:31:02 2014 +0100

    ASoC: Remove unused 'reg2' field from soc_enum struct
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 01bd80a2c600..49d6c10f4612 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1101,7 +1101,6 @@ struct soc_mreg_control {
 /* enumerated kcontrol */
 struct soc_enum {
 	unsigned short reg;
-	unsigned short reg2;
 	unsigned char shift_l;
 	unsigned char shift_r;
 	unsigned int items;

commit a304681f36f5c4bf3f6ea905320715573317d62b
Merge: 27ca2c30f4fe 26e24ddce755 cd21b123346c 1c38450b9fe5 2907cbcc120e d1755bb75c68 e61a35b79849 15b49e73d375
Author: Mark Brown <broonie@linaro.org>
Date:   Sat Mar 1 12:03:16 2014 +0900

    Merge branches 'topic/dapm', 'topic/sign', 'topic/adau1373', 'topic/max98090', 'topic/mc13783', 'fix/wm8994' and 'topic/wm8995' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound into asoc-enum

commit cb29d7b9ef7faf95e27d90362a5e7694c5479093
Author: xiangxiao <xiaoxiang@xiaomi.com>
Date:   Sun Feb 23 14:40:44 2014 +0800

    ASoC: add data field into snd_soc_jack_gpio
    
    so callback could get the context data as needed
    
    Signed-off-by: xiangxiao <xiaoxiang@xiaomi.com>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 9a001472b96a..266c188cc36f 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -600,7 +600,8 @@ struct snd_soc_jack_gpio {
 	struct snd_soc_jack *jack;
 	struct delayed_work work;
 
-	int (*jack_status_check)(void);
+	void *data;
+	int (*jack_status_check)(void *data);
 };
 
 struct snd_soc_jack {

commit 89c6785715592a6b082b3f9f28c27bb14b041c7d
Author: Xiubo Li <Li.Xiubo@freescale.com>
Date:   Fri Feb 14 09:34:35 2014 +0800

    ASoC: core: add TDM slot parsing from DT supports
    
    For some CPU/CODEC DAI devices the TDM slot infomation maybe needed. This
    patch adds the slot parsing from DT supports.
    
    TDM slot properties:
        dai-tdm-slot-num : Number of slots in use.
        dai-tdm-slot-width :  Width in bits for each slot.
    
    For instance:
        dai-tdm-slot-num = <2>;
        dai-tdm-slot-width = <8>;
    
    And for each spcified driver, there could be one .of_xlate_tdm_slot_mask()
    to specify a explicit mapping of the channels and the slots. If it's absent
    the default snd_soc_of_xlate_tdm_slot_mask() will be used to generating the
    tx and rx masks.
    
    For snd_soc_of_xlate_tdm_slot_mask(), the tx and rx masks will use a 1 bit
    for an active slot as default, and the default active bits are at the LSB of
    the masks.
    
    Signed-off-by: Xiubo Li <Li.Xiubo@freescale.com>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 465dc6e0674d..2a878d03c147 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1175,6 +1175,9 @@ int snd_soc_of_parse_card_name(struct snd_soc_card *card,
 			       const char *propname);
 int snd_soc_of_parse_audio_simple_widgets(struct snd_soc_card *card,
 					  const char *propname);
+int snd_soc_of_parse_tdm_slot(struct device_node *np,
+			      unsigned int *slots,
+			      unsigned int *slot_width);
 int snd_soc_of_parse_audio_routing(struct snd_soc_card *card,
 				   const char *propname);
 unsigned int snd_soc_of_parse_daifmt(struct device_node *np,

commit 56b2f349137bfdd23e498f12a97fe3d6139c097b
Author: Mark Brown <broonie@linaro.org>
Date:   Thu Feb 20 09:06:30 2014 +0900

    ASoC: io: Remove SND_SOC_I2C
    
    Now that all users have been converted to regmap we can eliminate the ASoC
    level wrapper for I2C I/O reducing the amount of duplicated functionality.
    
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 6197ba0642cc..6d0b6cb9c484 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -341,7 +341,6 @@ typedef int (*hw_write_t)(void *,const char* ,int);
 extern struct snd_ac97_bus_ops *soc_ac97_ops;
 
 enum snd_soc_control_type {
-	SND_SOC_I2C = 1,
 	SND_SOC_REGMAP,
 };
 

commit f6d5e586b416746664c01ab5d4b19ed5e2d1cbaa
Author: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date:   Tue Feb 18 15:22:13 2014 +0000

    ASoC: dapm: Add helpers to lock/unlock DAPM mutex
    
    Acquiring the DAPM mutex is necessary before using several DAPM
    functions and dereference is quite ugly. This patch provides a helper
    function to simplify this.
    
    Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 9a001472b96a..1e12b66da2cc 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1188,4 +1188,15 @@ extern struct dentry *snd_soc_debugfs_root;
 
 extern const struct dev_pm_ops snd_soc_pm_ops;
 
+/* Helper functions */
+static inline void snd_soc_dapm_mutex_lock(struct snd_soc_dapm_context *dapm)
+{
+	mutex_lock(&dapm->card->dapm_mutex);
+}
+
+static inline void snd_soc_dapm_mutex_unlock(struct snd_soc_dapm_context *dapm)
+{
+	mutex_unlock(&dapm->card->dapm_mutex);
+}
+
 #endif

commit 2e7e1993f992b16342b3799de2f9572b2e53d53b
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Feb 18 09:08:51 2014 +0100

    ASoC: Add const to SOC_ENUM_*_DECL() macros
    
    Since these macros are supposed to be used for decalring const
    objects, let's add the const modifier there.
    
    The doubled const appearing in usages will be cleaned by later
    patches.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Acked-by: Liam Girdwood <liam.r.girdwood@linux.intel.com>
    Acked-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 66de6a70581e..ab5f1fed698a 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -272,14 +272,14 @@
  * ARRAY_SIZE internally
  */
 #define SOC_ENUM_DOUBLE_DECL(name, xreg, xshift_l, xshift_r, xtexts) \
-	struct soc_enum name = SOC_ENUM_DOUBLE(xreg, xshift_l, xshift_r, \
+	const struct soc_enum name = SOC_ENUM_DOUBLE(xreg, xshift_l, xshift_r, \
 						ARRAY_SIZE(xtexts), xtexts)
 #define SOC_ENUM_SINGLE_DECL(name, xreg, xshift, xtexts) \
 	SOC_ENUM_DOUBLE_DECL(name, xreg, xshift, xshift, xtexts)
 #define SOC_ENUM_SINGLE_EXT_DECL(name, xtexts) \
-	struct soc_enum name = SOC_ENUM_SINGLE_EXT(ARRAY_SIZE(xtexts), xtexts)
+	const struct soc_enum name = SOC_ENUM_SINGLE_EXT(ARRAY_SIZE(xtexts), xtexts)
 #define SOC_VALUE_ENUM_DOUBLE_DECL(name, xreg, xshift_l, xshift_r, xmask, xtexts, xvalues) \
-	struct soc_enum name = SOC_VALUE_ENUM_DOUBLE(xreg, xshift_l, xshift_r, xmask, \
+	const struct soc_enum name = SOC_VALUE_ENUM_DOUBLE(xreg, xshift_l, xshift_r, xmask, \
 							ARRAY_SIZE(xtexts), xtexts, xvalues)
 #define SOC_VALUE_ENUM_SINGLE_DECL(name, xreg, xshift, xmask, xtexts, xvalues) \
 	SOC_VALUE_ENUM_DOUBLE_DECL(name, xreg, xshift, xshift, xmask, xtexts, xvalues)

commit 9a8d38db030f016bee45b927af02d9b46398ed46
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Feb 18 08:11:42 2014 +0100

    ASoC: Rename soc_enum.max field with items
    
    The name "max" in struct soc_enum is rather confusing since it
    actually takes the number of items.  With "max", one might try to
    assign (nitems - 1) value.
    
    Rename the field to a more appropriate one, "items", which is also
    used in struct snd_ctl_elem_info, too.
    
    This patch also rewrites some code like "if (x > e->nitems - 1)" with
    "if (x >= e->nitems)".  Not only the latter improves the readability,
    it also fixes a potential bug when e->items is zero.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Acked-by: Liam Girdwood <liam.r.girdwood@linux.intel.com>
    Acked-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 9a001472b96a..66de6a70581e 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -162,19 +162,19 @@
 	.private_value = (unsigned long)&(struct soc_mixer_control) \
 		{.reg = xreg, .min = xmin, .max = xmax, \
 		 .platform_max = xmax} }
-#define SOC_ENUM_DOUBLE(xreg, xshift_l, xshift_r, xmax, xtexts) \
+#define SOC_ENUM_DOUBLE(xreg, xshift_l, xshift_r, xitems, xtexts) \
 {	.reg = xreg, .shift_l = xshift_l, .shift_r = xshift_r, \
-	.max = xmax, .texts = xtexts, \
-	.mask = xmax ? roundup_pow_of_two(xmax) - 1 : 0}
-#define SOC_ENUM_SINGLE(xreg, xshift, xmax, xtexts) \
-	SOC_ENUM_DOUBLE(xreg, xshift, xshift, xmax, xtexts)
-#define SOC_ENUM_SINGLE_EXT(xmax, xtexts) \
-{	.max = xmax, .texts = xtexts }
-#define SOC_VALUE_ENUM_DOUBLE(xreg, xshift_l, xshift_r, xmask, xmax, xtexts, xvalues) \
+	.items = xitems, .texts = xtexts, \
+	.mask = xitems ? roundup_pow_of_two(xitems) - 1 : 0}
+#define SOC_ENUM_SINGLE(xreg, xshift, xitems, xtexts) \
+	SOC_ENUM_DOUBLE(xreg, xshift, xshift, xitems, xtexts)
+#define SOC_ENUM_SINGLE_EXT(xitems, xtexts) \
+{	.items = xitems, .texts = xtexts }
+#define SOC_VALUE_ENUM_DOUBLE(xreg, xshift_l, xshift_r, xmask, xitems, xtexts, xvalues) \
 {	.reg = xreg, .shift_l = xshift_l, .shift_r = xshift_r, \
-	.mask = xmask, .max = xmax, .texts = xtexts, .values = xvalues}
-#define SOC_VALUE_ENUM_SINGLE(xreg, xshift, xmask, xmax, xtexts, xvalues) \
-	SOC_VALUE_ENUM_DOUBLE(xreg, xshift, xshift, xmask, xmax, xtexts, xvalues)
+	.mask = xmask, .items = xitems, .texts = xtexts, .values = xvalues}
+#define SOC_VALUE_ENUM_SINGLE(xreg, xshift, xmask, xnitmes, xtexts, xvalues) \
+	SOC_VALUE_ENUM_DOUBLE(xreg, xshift, xshift, xmask, xnitmes, xtexts, xvalues)
 #define SOC_ENUM(xname, xenum) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname,\
 	.info = snd_soc_info_enum_double, \
@@ -1089,7 +1089,7 @@ struct soc_enum {
 	unsigned short reg2;
 	unsigned char shift_l;
 	unsigned char shift_r;
-	unsigned int max;
+	unsigned int items;
 	unsigned int mask;
 	const char * const *texts;
 	const unsigned int *values;

commit 7b80300e749c2865fbfc23870d3b8f3186956fc0
Author: Mark Brown <broonie@linaro.org>
Date:   Sun Feb 16 10:04:43 2014 +0800

    ASoC: io: Remove SPI support
    
    All ASoC CODEC drivers that use SPI have now been converted to use regmap
    so we can delete SND_SOC_SPI, preventing any new users being added.
    
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 9a001472b96a..6197ba0642cc 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -342,7 +342,6 @@ extern struct snd_ac97_bus_ops *soc_ac97_ops;
 
 enum snd_soc_control_type {
 	SND_SOC_I2C = 1,
-	SND_SOC_SPI,
 	SND_SOC_REGMAP,
 };
 

commit 9a6d48605e632e84db2895cf752c65b3c908cd09
Author: Xiubo Li <Li.Xiubo@freescale.com>
Date:   Sat Feb 8 15:59:52 2014 +0800

    ASoC: add snd_soc_of_parse_audio_simple_widgets for DT
    
    This patch adds snd_soc_of_parse_audio_simple_widgets() and supports
    below style of widgets name on DT:
    
            "template-wname", "user supplied wname"
    
    For instance:
            simple-audio-widgets =
                    "Microphone", "Microphone Jack",
                    "Line", "Line In Jack",
                    "Line", "Line Out Jack",
                    "Headphone", "Headphone Jack",
                    "Speaker", "Speaker External";
    
    The "template-wname" currently includes: "Microphone", "Line", "Headphone"
    and "Speaker".
    
    Signed-off-by: Xiubo Li <Li.Xiubo@freescale.com>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 9a001472b96a..465dc6e0674d 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1173,6 +1173,8 @@ void snd_soc_util_exit(void);
 
 int snd_soc_of_parse_card_name(struct snd_soc_card *card,
 			       const char *propname);
+int snd_soc_of_parse_audio_simple_widgets(struct snd_soc_card *card,
+					  const char *propname);
 int snd_soc_of_parse_audio_routing(struct snd_soc_card *card,
 				   const char *propname);
 unsigned int snd_soc_of_parse_daifmt(struct device_node *np,

commit cd21b123346c6a2f033d8c3bd2bf240198b5712a
Author: Markus Pargmann <mpa@pengutronix.de>
Date:   Thu Jan 16 16:02:11 2014 +0100

    ASoC: core: Add SOC_DOUBLE_R_S_TLV
    
    Add a macro for signed mixer with two registers and tlv array.
    
    Signed-off-by: Markus Pargmann <mpa@pengutronix.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index a25f3ccb3fde..c4be7ab89399 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -45,6 +45,11 @@
 	((unsigned long)&(struct soc_mixer_control) \
 	{.reg = xlreg, .rreg = xrreg, .shift = xshift, .rshift = xshift, \
 	.max = xmax, .platform_max = xmax, .invert = xinvert})
+#define SOC_DOUBLE_R_S_VALUE(xlreg, xrreg, xshift, xmin, xmax, xsign_bit, xinvert) \
+	((unsigned long)&(struct soc_mixer_control) \
+	{.reg = xlreg, .rreg = xrreg, .shift = xshift, .rshift = xshift, \
+	.max = xmax, .min = xmin, .platform_max = xmax, .sign_bit = xsign_bit, \
+	.invert = xinvert})
 #define SOC_DOUBLE_R_RANGE_VALUE(xlreg, xrreg, xshift, xmin, xmax, xinvert) \
 	((unsigned long)&(struct soc_mixer_control) \
 	{.reg = xlreg, .rreg = xrreg, .shift = xshift, .rshift = xshift, \
@@ -152,6 +157,15 @@
 		{.reg = xreg, .rreg = xrreg, \
 		.shift = xshift, .rshift = xshift, \
 		.max = xmax, .min = xmin} }
+#define SOC_DOUBLE_R_S_TLV(xname, reg_left, reg_right, xshift, xmin, xmax, xsign_bit, xinvert, tlv_array) \
+{	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname),\
+	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ |\
+		 SNDRV_CTL_ELEM_ACCESS_READWRITE,\
+	.tlv.p = (tlv_array), \
+	.info = snd_soc_info_volsw, \
+	.get = snd_soc_get_volsw, .put = snd_soc_put_volsw, \
+	.private_value = SOC_DOUBLE_R_S_VALUE(reg_left, reg_right, xshift, \
+					    xmin, xmax, xsign_bit, xinvert) }
 #define SOC_DOUBLE_S8_TLV(xname, xreg, xmin, xmax, tlv_array) \
 {	.iface  = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname), \
 	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ | \

commit f227b88f0fce5f9b82aa934f8829a741c2e06d82
Author: Markus Pargmann <mpa@pengutronix.de>
Date:   Thu Jan 16 16:02:10 2014 +0100

    ASoC: core: Add signed register volume control logic
    
    Some codecs use signed volume control representation with non standard
    register sizes, e.g. 6 or 7 bit signed integers.
    
    This patch adds generic signed register volume control logic to
    soc-core. Instead of a fixed width signed register control, this
    implementation uses a 'min' value and the signed bit location to translate
    it to an absolute volume. Using the 'sign_bit' we can calculate a
    correct mask for the register values and translate it back into signed
    integers of standard size.
    
    Signed-off-by: Markus Pargmann <mpa@pengutronix.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 9a001472b96a..a25f3ccb3fde 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1067,6 +1067,7 @@ struct soc_mixer_control {
 	int min, max, platform_max;
 	int reg, rreg;
 	unsigned int shift, rshift;
+	unsigned int sign_bit;
 	unsigned int invert:1;
 	unsigned int autodisable:1;
 };

commit ac6d7c48e3a5e82e876114b9ca0b489e96997743
Merge: 31824e6554a4 2a99ef0fdb35
Author: Mark Brown <broonie@linaro.org>
Date:   Mon Jan 20 11:50:41 2014 +0000

    Merge remote-tracking branch 'asoc/topic/compress' into asoc-next

commit 2a99ef0fdb35a0f8d6b56ccc5d9d821e9ff100c1
Author: Liam Girdwood <liam.r.girdwood@linux.intel.com>
Date:   Fri Jan 17 17:03:56 2014 +0000

    ASoC: compress: Add suport for DPCM into compressed audio
    
    Currently compressed audio streams are statically routed from the /dev
    to the DAI link. Some DSPs can route compressed data to multiple BE DAIs
    like they do for PCM data.
    
    Add support to allow dynamically routed compressed streams using the existing
    DPCM infrastructure. This patch adds special FE versions of the compressed ops
    that work out the runtime routing.
    
    Signed-off-by: Liam Girdwood <liam.r.girdwood@linux.intel.com>
    Acked-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 1f741cb24f33..c0c67003a7b7 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1029,6 +1029,7 @@ struct snd_soc_pcm_runtime {
 
 	/* Dynamic PCM BE runtime data */
 	struct snd_soc_dpcm_runtime dpcm[2];
+	int fe_compr;
 
 	long pmdown_time;
 	unsigned char pop_wait:1;

commit 2f43a23ab9ea1865a663e100b0af20198decb4f1
Merge: 7cfa7b547337 55dcdb505193
Author: Mark Brown <broonie@linaro.org>
Date:   Thu Jan 16 12:42:57 2014 +0000

    Merge remote-tracking branch 'asoc/topic/pcm' into for-tiwai

commit 1e9de42f4324b91ce2e9da0939cab8fc6ae93893
Author: Liam Girdwood <liam.r.girdwood@linux.intel.com>
Date:   Tue Jan 7 17:51:42 2014 +0000

    ASoC: dpcm: Explicitly set BE DAI link supported stream directions
    
    Some BE DAIs can be "dummy" (when the DSP is controlling the DAI) and as such
    wont have set a minimum number of playback or capture channels required for BE
    DAI registration (to establish supported stream directions).
    
    Force machine drivers to explicitly set whether they support playback and capture
    stream directions for every BE DAIs.
    
    Signed-off-by: Liam Girdwood <liam.r.girdwood@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 1f741cb24f33..a5ef14f06124 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -886,6 +886,10 @@ struct snd_soc_dai_link {
 	/* This DAI link can route to other DAI links at runtime (Frontend)*/
 	unsigned int dynamic:1;
 
+	/* DPCM capture and Playback support */
+	unsigned int dpcm_capture:1;
+	unsigned int dpcm_playback:1;
+
 	/* pmdown_time is ignored at stop */
 	unsigned int ignore_pmdown_time:1;
 

commit 2cde51fbd0f310c8a2c5f977e665c0ac3945b46d
Merge: 7471c5c9f58e c097d5fdf3b5 74c375cb85d7 04c3a852f51f 5095f55d7cc3 4f534777c130 2f54d2a1cf7e 56d37d85438d 192043cf6089 f467a0f513ad bbe580302d33 3990c516de66 d754fa9ad18d 516ea4b58433 69ae8489076f 25c1a63f43ca f52c91921553 111bd7b18e13 aafa85e71a75 dd407a324323 71467e46414d 0f7f3d1f17c2 8778ac6be25a 0406a40a095c 308a0f3f24db 2650bc4f6d0c 8cb7a36eb3a8 323702b4e06d ef749400434c 3cec159cfb3f 72aa62bed3ea 328089a47112 11db0da831b1 e1771bcf99b0 f60e5473e678 a010ff628c09 5e8154332f48 58381da68774 626bcacb89f9 38136bde7691 06b2bd23057f 8c5178fca4ce 8e6ad35a31e7 008ef947d0c5 f58c4fc4a3bf 2309d6757900 5c1537163ce7 b65ab73e5d62 26090a834b49 9ea6fbc66d15 2c4864334c4d 1769267bb013 f3f9a60f7947 f25cf3496982 3f3002692ce8 fbbf7fea8e80 c3e8494c001c e40e0b5da87b 50c969732043 63587116811b 0112b62b12e1 a0a05916cf67 b888edbc68fb d44008b35858 9a199b8e9933 784cbf8ab464
Author: Mark Brown <broonie@linaro.org>
Date:   Thu Jan 2 13:01:55 2014 +0000

    Merge remote-tracking branches 'asoc/topic/ad1836', 'asoc/topic/ad193x', 'asoc/topic/adav80x', 'asoc/topic/adsp', 'asoc/topic/ak4641', 'asoc/topic/ak4642', 'asoc/topic/arizona', 'asoc/topic/atmel', 'asoc/topic/au1x', 'asoc/topic/axi', 'asoc/topic/bcm2835', 'asoc/topic/blackfin', 'asoc/topic/cs4271', 'asoc/topic/cs42l52', 'asoc/topic/da7210', 'asoc/topic/davinci', 'asoc/topic/ep93xx', 'asoc/topic/fsl', 'asoc/topic/fsl-mxs', 'asoc/topic/generic', 'asoc/topic/hdmi', 'asoc/topic/jack', 'asoc/topic/jz4740', 'asoc/topic/max98090', 'asoc/topic/mxs', 'asoc/topic/omap', 'asoc/topic/pxa', 'asoc/topic/rcar', 'asoc/topic/s6000', 'asoc/topic/sai', 'asoc/topic/samsung', 'asoc/topic/sgtl5000', 'asoc/topic/spear', 'asoc/topic/ssm2518', 'asoc/topic/ssm2602', 'asoc/topic/tegra', 'asoc/topic/tlv320aic3x', 'asoc/topic/twl6040', 'asoc/topic/txx9', 'asoc/topic/uda1380', 'asoc/topic/width', 'asoc/topic/wm8510', 'asoc/topic/wm8523', 'asoc/topic/wm8580', 'asoc/topic/wm8711', 'asoc/topic/wm8728', 'asoc/topic/wm8731', 'asoc/topic/wm8741', 'asoc/topic/wm8750', 'asoc/topic/wm8753', 'asoc/topic/wm8776', 'asoc/topic/wm8804', 'asoc/topic/wm8900', 'asoc/topic/wm8901', 'asoc/topic/wm8940', 'asoc/topic/wm8962', 'asoc/topic/wm8974', 'asoc/topic/wm8985', 'asoc/topic/wm8988', 'asoc/topic/wm8990', 'asoc/topic/wm8991', 'asoc/topic/wm8994', 'asoc/topic/wm8995', 'asoc/topic/wm9081' and 'asoc/topic/x86' into asoc-next

commit 8778ac6be25abf0496fc614a3e77ad2ff8300353
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Nov 21 15:55:06 2013 +0100

    ASoC: Fix build without CONFIG_GPIOLIB
    
    snd_soc_jack_gpio stuff is currently enabled for CONFIG_GPIOLIB
    explicitly with ifdef, and this causes build errors on some drivers
    such as:
      sound/soc/omap/rx51.c:220:33: error: array type has incomplete element type
    
    Remove ifdef and provide dummy functions for CONFIG_GPIOLIB=n case
    instead.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 1f741cb24f33..f7e1fac51bba 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -334,9 +334,7 @@ struct snd_soc_jack_pin;
 #include <sound/soc-dapm.h>
 #include <sound/soc-dpcm.h>
 
-#ifdef CONFIG_GPIOLIB
 struct snd_soc_jack_gpio;
-#endif
 
 typedef int (*hw_write_t)(void *,const char* ,int);
 
@@ -446,6 +444,17 @@ int snd_soc_jack_add_gpios(struct snd_soc_jack *jack, int count,
 			struct snd_soc_jack_gpio *gpios);
 void snd_soc_jack_free_gpios(struct snd_soc_jack *jack, int count,
 			struct snd_soc_jack_gpio *gpios);
+#else
+static inline int snd_soc_jack_add_gpios(struct snd_soc_jack *jack, int count,
+					 struct snd_soc_jack_gpio *gpios)
+{
+	return 0;
+}
+
+static inline void snd_soc_jack_free_gpios(struct snd_soc_jack *jack, int count,
+					   struct snd_soc_jack_gpio *gpios)
+{
+}
 #endif
 
 /* codec register bit access */
@@ -580,7 +589,6 @@ struct snd_soc_jack_zone {
  *		       to provide more complex checks (eg, reading an
  *		       ADC).
  */
-#ifdef CONFIG_GPIOLIB
 struct snd_soc_jack_gpio {
 	unsigned int gpio;
 	const char *name;
@@ -594,7 +602,6 @@ struct snd_soc_jack_gpio {
 
 	int (*jack_status_check)(void);
 };
-#endif
 
 struct snd_soc_jack {
 	struct mutex mutex;

commit 3635bf09a89cf92b80ac44198c5c8f0989624ea6
Author: Nicolin Chen <b42378@freescale.com>
Date:   Wed Nov 13 18:56:24 2013 +0800

    ASoC: soc-pcm: add symmetry for channels and sample bits
    
    Some SoCs can only work in mono or stereo mode at one time. So if
    we let them capture a mono stream while playing a stereo stream,
    there might be a problem occur to one of these two streams: double
    paced or slowed down.
    
    In soc-pcm.c, we have soc_pcm_apply_symmetry() to apply the rate
    symmetry. But we don't have one for channels.
    
    Likewise, we can treat symmetric_rate as a solution for those SoCs
    or CODECs which can not handle asymmetrical LRCLK. But it's also
    impossible for them to handle asymmetrical BCLK. And accodring to
    BCLK = LRCLK * channel number * slot size(fixed or sample bits),
    sample bits might also be a problem if they are not using a fixed
    slot size.
    
    Thus, this patch applys symmetry for channels and sample bits.
    
    Meanwhile, there might be a race between two substreams if starting
    simultaneously. Previously, we only added warning to compalin but
    still using conservative way to let it carry on. However, this patch
    rejects the second stream with any unmatched parameter to make sure
    the first existing stream won't be broken.
    
    Signed-off-by: Nicolin Chen <b42378@freescale.com>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 1f741cb24f33..1cda7d343d16 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -879,6 +879,8 @@ struct snd_soc_dai_link {
 
 	/* Symmetry requirements */
 	unsigned int symmetric_rates:1;
+	unsigned int symmetric_channels:1;
+	unsigned int symmetric_samplebits:1;
 
 	/* Do not create a PCM for this DAI link (Backend link) */
 	unsigned int no_pcm:1;

commit 48ce3ec16a618de7fbeb8c3462f8022984f53a1d
Merge: cf44fba08991 4fa8dbc18e8a
Author: Mark Brown <broonie@linaro.org>
Date:   Thu Oct 24 11:24:04 2013 +0100

    Merge remote-tracking branch 'asoc/topic/devm' into asoc-next

commit 07056901106b71c69623a224bbb16e83585e5530
Merge: 85eb5dce82e0 30a765d64334
Author: Mark Brown <broonie@linaro.org>
Date:   Thu Oct 24 11:24:03 2013 +0100

    Merge remote-tracking branch 'asoc/topic/dapm' into asoc-next

commit 6833c452c2fb47353566aa705d68541c6045c796
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Wed Oct 16 22:05:26 2013 -0700

    ASoC: add snd_soc_of_get_dai_name() default of_xlate
    
    Current snd_soc_of_get_dai_name() needs .of_xlate_dai_name()
    callback on each component drivers.
    But required behavior on almost all these drivers is
    just returns its indexed driver's name.
    
    This patch adds this feature as default behavior.
    .of_xlate_dai_name() can overwrite it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index b13eecbaea78..6ed3dc0773cc 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -644,10 +644,12 @@ struct snd_soc_component_driver {
 struct snd_soc_component {
 	const char *name;
 	int id;
-	int num_dai;
 	struct device *dev;
 	struct list_head list;
 
+	struct snd_soc_dai_driver *dai_drv;
+	int num_dai;
+
 	const struct snd_soc_component_driver *driver;
 };
 

commit 249ce1387b7739dbea2ac1a697e4bf1e37ec06b7
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Sun Oct 6 13:43:49 2013 +0200

    ASoC: dapm: Add support for virtual mixer controls
    
    This patch adds support for virtual DAPM mixer controls. They are similar to
    virtual DAPM enums. There is no hardware register backing the control, so
    changing the control's value wont have any direct effect on the hardware. But it
    still influences the DAPM graph by causing the path it sits on to be connected
    or disconnected. This in turn can cause power changes for some of the widgets on
    the DAPM graph, which will then modify the hardware state.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Tested-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index d22cb0a06feb..b429dba57bf6 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1088,7 +1088,8 @@ struct snd_soc_pcm_runtime {
 /* mixer control */
 struct soc_mixer_control {
 	int min, max, platform_max;
-	unsigned int reg, rreg, shift, rshift;
+	int reg, rreg;
+	unsigned int shift, rshift;
 	unsigned int invert:1;
 	unsigned int autodisable:1;
 };

commit 7d930ce26e01470590cd003484b32df29529906c
Merge: 7f05cc98bd9b cb470087669a
Author: Mark Brown <broonie@linaro.org>
Date:   Tue Sep 17 13:25:28 2013 +0100

    Merge remote-tracking branch 'asoc/topic/component' into asoc-core
    
    Conflicts:
            include/sound/soc.h

commit cb470087669a3fab1958fec79dd7db280b33f178
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Tue Sep 10 17:39:56 2013 -0700

    ASoC: add .of_xlate_dai_name on snd_soc_component_driver
    
    ASoC sound driver requires CPU/CODEC drivers for probing,
    and each CPU/CODEC has some DAI on it.
    Then, "dai name matching" have been used to identify
    CPU-CODEC DAI pair on ASoC.
    
    But, the "dai port number matching" is now required from DeviceTree.
    The solution of this issue is to replace
    the dai port number into dai name.
    Now, CPU/CODEC are based on struct snd_soc_component,
    and it can care above as common issue.
    
    This patch adds .of_xlate_dai_name callback interface
    on struct snd_soc_component_driver,
    and snd_soc_of_get_dai_name() which is using .of_xlate_dai_name.
    
    Then, #sound-dai-cells which enables DAI specifier is required
    on CPU/CODEC device tree properties.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 9a81e2e7d661..1dd7dc5f7d52 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -13,6 +13,7 @@
 #ifndef __LINUX_SND_SOC_H
 #define __LINUX_SND_SOC_H
 
+#include <linux/of.h>
 #include <linux/platform_device.h>
 #include <linux/types.h>
 #include <linux/notifier.h>
@@ -673,6 +674,11 @@ struct snd_soc_cache_ops {
 /* component interface */
 struct snd_soc_component_driver {
 	const char *name;
+
+	/* DT */
+	int (*of_xlate_dai_name)(struct snd_soc_component *component,
+				 struct of_phandle_args *args,
+				 const char **dai_name);
 };
 
 struct snd_soc_component {
@@ -1206,6 +1212,8 @@ int snd_soc_of_parse_audio_routing(struct snd_soc_card *card,
 				   const char *propname);
 unsigned int snd_soc_of_parse_daifmt(struct device_node *np,
 				     const char *prefix);
+int snd_soc_of_get_dai_name(struct device_node *of_node,
+			    const char **dai_name);
 
 #include <sound/soc-dai.h>
 

commit d191bd8de8c61619563f2b19f1fdcc0944ff1a72
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Wed Sep 4 19:39:03 2013 -0700

    ASoC: snd_soc_codec includes snd_soc_component
    
    Codec includes component by this patch,
    and component moved to upside of codec
    to avoid extra declaration.
    Codec dai will be registered via component
    by this patch.
    
    Current component register function
    is used for cpu, and it is using
    dai/dais functions properly to keep
    existing cpu dai name.
    
    And now, it will be used from codec also.
    But codec driver had been used dais function only
    even though it was single dai.
    This patch adds new flag which can selects
    dai/dais function on component register
    function to keep existing codec dai name.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index d22cb0a06feb..9a81e2e7d661 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -670,6 +670,21 @@ struct snd_soc_cache_ops {
 	int (*sync)(struct snd_soc_codec *codec);
 };
 
+/* component interface */
+struct snd_soc_component_driver {
+	const char *name;
+};
+
+struct snd_soc_component {
+	const char *name;
+	int id;
+	int num_dai;
+	struct device *dev;
+	struct list_head list;
+
+	const struct snd_soc_component_driver *driver;
+};
+
 /* SoC Audio Codec device */
 struct snd_soc_codec {
 	const char *name;
@@ -715,6 +730,9 @@ struct snd_soc_codec {
 	struct mutex cache_rw_mutex;
 	int val_bytes;
 
+	/* component */
+	struct snd_soc_component component;
+
 	/* dapm */
 	struct snd_soc_dapm_context dapm;
 	unsigned int ignore_pmdown_time:1; /* pmdown_time is ignored at stop */
@@ -733,6 +751,7 @@ struct snd_soc_codec_driver {
 	int (*remove)(struct snd_soc_codec *);
 	int (*suspend)(struct snd_soc_codec *);
 	int (*resume)(struct snd_soc_codec *);
+	struct snd_soc_component_driver component_driver;
 
 	/* Default control and setup, added after probe() is run */
 	const struct snd_kcontrol_new *controls;
@@ -849,20 +868,6 @@ struct snd_soc_platform {
 #endif
 };
 
-struct snd_soc_component_driver {
-	const char *name;
-};
-
-struct snd_soc_component {
-	const char *name;
-	int id;
-	int num_dai;
-	struct device *dev;
-	struct list_head list;
-
-	const struct snd_soc_component_driver *driver;
-};
-
 struct snd_soc_dai_link {
 	/* config - must be set by machine driver */
 	const char *name;			/* Codec name */

commit 0e4ff5c806263bf40ee5409ac283b776f0c11e41
Author: Mark Brown <broonie@linaro.org>
Date:   Mon Sep 16 18:02:05 2013 +0100

    ASoC: core: Add devm_snd_soc_register_card()
    
    Simplify error handling and remove repetitive (and rarely executed) code
    for unregistration by providing a devm_snd_soc_register() card.
    
    Signed-off-by: Mark Brown <broonie@linaro.org>
    Acked-by: Liam Girdwood <liam.r.girdwood@linux.intel.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index b970f019b452..d44728ab2be0 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -369,6 +369,7 @@ int snd_soc_codec_set_pll(struct snd_soc_codec *codec, int pll_id, int source,
 
 int snd_soc_register_card(struct snd_soc_card *card);
 int snd_soc_unregister_card(struct snd_soc_card *card);
+int devm_snd_soc_register_card(struct device *dev, struct snd_soc_card *card);
 int snd_soc_suspend(struct device *dev);
 int snd_soc_resume(struct device *dev);
 int snd_soc_poweroff(struct device *dev);

commit a0b03a616b08cf9d709812ff5cf7e9c0958d6807
Author: Mark Brown <broonie@linaro.org>
Date:   Wed Sep 4 20:37:34 2013 +0100

    ASoC: core: Implement devm_snd_soc_register_component()
    
    Since with the wider use of devres many drivers are now only calling
    snd_soc_unregister_component() in their remove functions providing a
    managed version will save a reasonable amount of code.
    
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index d22cb0a06feb..b970f019b452 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -386,6 +386,9 @@ void snd_soc_unregister_codec(struct device *dev);
 int snd_soc_register_component(struct device *dev,
 			 const struct snd_soc_component_driver *cmpnt_drv,
 			 struct snd_soc_dai_driver *dai_drv, int num_dai);
+int devm_snd_soc_register_component(struct device *dev,
+			 const struct snd_soc_component_driver *cmpnt_drv,
+			 struct snd_soc_dai_driver *dai_drv, int num_dai);
 void snd_soc_unregister_component(struct device *dev);
 int snd_soc_codec_volatile_register(struct snd_soc_codec *codec,
 				    unsigned int reg);

commit f90fb3f778042b0b9f9aa1fd48cb76047a25eac0
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Sat Aug 31 20:31:15 2013 +0200

    ASoC: Remove infrastructure for supporting multiple cache types
    
    The only cache type left is the flat cache and new other cache types won't be
    added since new drivers are supposed to use regmap directly for IO and caching.
    This patch removes the snd_soc_cache_ops indirection that was added to support
    multiple cache types and modifies the code to always use the flat cache
    directly.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 577212629d0f..a72af6327987 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -330,7 +330,6 @@ struct soc_enum;
 struct snd_soc_jack;
 struct snd_soc_jack_zone;
 struct snd_soc_jack_pin;
-struct snd_soc_cache_ops;
 #include <sound/soc-dapm.h>
 #include <sound/soc-dpcm.h>
 
@@ -348,10 +347,6 @@ enum snd_soc_control_type {
 	SND_SOC_REGMAP,
 };
 
-enum snd_soc_compress_type {
-	SND_SOC_FLAT_COMPRESSION = 1,
-};
-
 enum snd_soc_pcm_subclass {
 	SND_SOC_PCM_CLASS_PCM	= 0,
 	SND_SOC_PCM_CLASS_BE	= 1,
@@ -635,19 +630,6 @@ struct snd_soc_compr_ops {
 	int (*trigger)(struct snd_compr_stream *);
 };
 
-/* SoC cache ops */
-struct snd_soc_cache_ops {
-	const char *name;
-	enum snd_soc_compress_type id;
-	int (*init)(struct snd_soc_codec *codec);
-	int (*exit)(struct snd_soc_codec *codec);
-	int (*read)(struct snd_soc_codec *codec, unsigned int reg,
-		unsigned int *value);
-	int (*write)(struct snd_soc_codec *codec, unsigned int reg,
-		unsigned int value);
-	int (*sync)(struct snd_soc_codec *codec);
-};
-
 /* SoC Audio Codec device */
 struct snd_soc_codec {
 	const char *name;
@@ -661,7 +643,6 @@ struct snd_soc_codec {
 	struct list_head list;
 	struct list_head card_list;
 	int num_dai;
-	enum snd_soc_compress_type compress_type;
 	int (*volatile_register)(struct snd_soc_codec *, unsigned int);
 	int (*readable_register)(struct snd_soc_codec *, unsigned int);
 	int (*writable_register)(struct snd_soc_codec *, unsigned int);
@@ -686,7 +667,6 @@ struct snd_soc_codec {
 	unsigned int (*read)(struct snd_soc_codec *, unsigned int);
 	int (*write)(struct snd_soc_codec *, unsigned int, unsigned int);
 	void *reg_cache;
-	const struct snd_soc_cache_ops *cache_ops;
 	struct mutex cache_rw_mutex;
 	int val_bytes;
 
@@ -735,7 +715,6 @@ struct snd_soc_codec_driver {
 	short reg_cache_step;
 	short reg_word_size;
 	const void *reg_cache_default;
-	enum snd_soc_compress_type compress_type;
 
 	/* codec bias level */
 	int (*set_bias_level)(struct snd_soc_codec *,
@@ -917,12 +896,6 @@ struct snd_soc_codec_conf {
 	 * associated per device
 	 */
 	const char *name_prefix;
-
-	/*
-	 * set this to the desired compression type if you want to
-	 * override the one supplied in codec->driver->compress_type
-	 */
-	enum snd_soc_compress_type compress_type;
 };
 
 struct snd_soc_aux_dev {

commit a94ed23436fb28bdcdd66e7fcf68ca5f7967e456
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Sat Aug 31 20:31:14 2013 +0200

    ASoC: Remove 'reg_size' field from snd_soc_codec struct
    
    The reg_size field is calculated in snd_soc_register_codec() and then used
    exactly once in snd_soc_flat_cache_init(). Since it is calculated based on other
    fields from the codec struct just move the calculation to
    snd_soc_flat_cache_init() and remove the 'reg_size' field from the codec struct.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 62f320f56644..577212629d0f 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -662,7 +662,6 @@ struct snd_soc_codec {
 	struct list_head card_list;
 	int num_dai;
 	enum snd_soc_compress_type compress_type;
-	size_t reg_size;	/* reg_cache_size * reg_word_size */
 	int (*volatile_register)(struct snd_soc_codec *, unsigned int);
 	int (*readable_register)(struct snd_soc_codec *, unsigned int);
 	int (*writable_register)(struct snd_soc_codec *, unsigned int);

commit b012aa619e50d22df0835b64a5dcebc221fb8053
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Sat Aug 31 20:31:13 2013 +0200

    ASoC: Remove reg_def_copy
    
    reg_def_copy was introduced in commit 3335ddca ("ASoC: soc-cache: Use
    reg_def_copy instead of reg_cache_default") to keep a copy of the register
    defaults around in case the register defaults where placed in the __devinitdata
    section. With the __devinitdata section gone we effectivly keep the same data
    around twice. This patch removes reg_def_copy and uses reg_cache_default
    directly instead.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 3f7de6f992c0..62f320f56644 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -687,7 +687,6 @@ struct snd_soc_codec {
 	unsigned int (*read)(struct snd_soc_codec *, unsigned int);
 	int (*write)(struct snd_soc_codec *, unsigned int, unsigned int);
 	void *reg_cache;
-	const void *reg_def_copy;
 	const struct snd_soc_cache_ops *cache_ops;
 	struct mutex cache_rw_mutex;
 	int val_bytes;

commit 2a1212a8342c469cee240cf69fe3001b898cda8e
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Sat Aug 31 20:31:12 2013 +0200

    ASoC: Remove snd_soc_bulk_write_raw()
    
    No users of snd_soc_bulk_write_raw() are left and new drivers are going to use
    regmap directly for this, so the function can be removed.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 447278a3b3e6..3f7de6f992c0 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -686,7 +686,6 @@ struct snd_soc_codec {
 	unsigned int (*hw_read)(struct snd_soc_codec *, unsigned int);
 	unsigned int (*read)(struct snd_soc_codec *, unsigned int);
 	int (*write)(struct snd_soc_codec *, unsigned int, unsigned int);
-	int (*bulk_write_raw)(struct snd_soc_codec *, unsigned int, const void *, size_t);
 	void *reg_cache;
 	const void *reg_def_copy;
 	const struct snd_soc_cache_ops *cache_ops;
@@ -1097,8 +1096,6 @@ struct soc_enum {
 unsigned int snd_soc_read(struct snd_soc_codec *codec, unsigned int reg);
 unsigned int snd_soc_write(struct snd_soc_codec *codec,
 			   unsigned int reg, unsigned int val);
-unsigned int snd_soc_bulk_write_raw(struct snd_soc_codec *codec,
-				    unsigned int reg, const void *data, size_t len);
 
 /* device driver data */
 

commit 175ee39e8f4053f95e1948afd75c74552b3a175c
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Sat Aug 31 20:31:11 2013 +0200

    ASoC: Remove support for reg_access_defaults
    
    No users of reg_access_defaults are left and new drivers are going to use regmap
    for this, so support for it can be removed.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index d22cb0a06feb..447278a3b3e6 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -403,12 +403,6 @@ int snd_soc_cache_write(struct snd_soc_codec *codec,
 			unsigned int reg, unsigned int value);
 int snd_soc_cache_read(struct snd_soc_codec *codec,
 		       unsigned int reg, unsigned int *value);
-int snd_soc_default_volatile_register(struct snd_soc_codec *codec,
-				      unsigned int reg);
-int snd_soc_default_readable_register(struct snd_soc_codec *codec,
-				      unsigned int reg);
-int snd_soc_default_writable_register(struct snd_soc_codec *codec,
-				      unsigned int reg);
 int snd_soc_platform_read(struct snd_soc_platform *platform,
 					unsigned int reg);
 int snd_soc_platform_write(struct snd_soc_platform *platform,
@@ -541,22 +535,6 @@ int snd_soc_get_strobe(struct snd_kcontrol *kcontrol,
 int snd_soc_put_strobe(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
 
-/**
- * struct snd_soc_reg_access - Describes whether a given register is
- * readable, writable or volatile.
- *
- * @reg: the register number
- * @read: whether this register is readable
- * @write: whether this register is writable
- * @vol: whether this register is volatile
- */
-struct snd_soc_reg_access {
-	u16 reg;
-	u16 read;
-	u16 write;
-	u16 vol;
-};
-
 /**
  * struct snd_soc_jack_pin - Describes a pin to update based on jack detection
  *
@@ -760,8 +738,6 @@ struct snd_soc_codec_driver {
 	short reg_cache_step;
 	short reg_word_size;
 	const void *reg_cache_default;
-	short reg_access_size;
-	const struct snd_soc_reg_access *reg_access_default;
 	enum snd_soc_compress_type compress_type;
 
 	/* codec bias level */

commit 90d561bed9619fc08c31eab9315ebe811d41149a
Merge: 59a3aed73bd6 a90e6053baa6
Author: Mark Brown <broonie@linaro.org>
Date:   Sun Sep 1 21:15:52 2013 +0100

    Merge remote-tracking branch 'asoc/topic/fsl' into tmp

commit a3ef472de12a4438198c6637dc5094c78392394f
Merge: 3fd8a8041b37 d7b1538c7c0e
Author: Mark Brown <broonie@linaro.org>
Date:   Sun Sep 1 21:15:48 2013 +0100

    Merge remote-tracking branch 'asoc/topic/core' into tmp

commit d6bead020d8f8bcaca5cdcb035250c44b21c93e7
Author: Fabio Estevam <fabio.estevam@freescale.com>
Date:   Thu Aug 29 10:32:13 2013 -0300

    ASoC: soc-pcm: Allow to specify unidirectional dai_link
    
    Add 'playback_only' and 'capture_only' fields that can be used for specifying
    that a dai_link has a unidirectional capability.
    
    The motivation for this is for the cases of systems, such as Freescale MX28,
    that has two unidirectional DAIs.
    
    Signed-off-by: Fabio Estevam <fabio.estevam@freescale.com>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index c0ac3bc7b7f4..65414e82c762 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -936,6 +936,10 @@ struct snd_soc_dai_link {
 	/* machine stream operations */
 	const struct snd_soc_ops *ops;
 	const struct snd_soc_compr_ops *compr_ops;
+
+	/* For unidirectional dai links */
+	bool playback_only;
+	bool capture_only;
 };
 
 struct snd_soc_codec_conf {

commit d7b1538c7c0e395a308d6f4098d0985fe19e4584
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Sat Aug 31 11:02:19 2013 +0200

    ASoC: Remove unused sysfs_registered field from snd_soc_codec struct
    
    The sysfs_registered field was added to the snd_soc_codec struct in commit
    f0fba2ad ("ASoC: multi-component - ASoC Multi-Component Support"), but has never
    been used.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index c65cc7d70353..26e0df0acd15 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -693,7 +693,6 @@ struct snd_soc_codec {
 	unsigned int probed:1; /* Codec has been probed */
 	unsigned int ac97_registered:1; /* Codec has been AC97 registered */
 	unsigned int ac97_created:1; /* Codec has been created by SoC */
-	unsigned int sysfs_registered:1; /* codec has been sysfs registered */
 	unsigned int cache_init:1; /* codec cache has been initialized */
 	unsigned int using_regmap:1; /* using regmap access */
 	u32 cache_only;  /* Suppress writes to hardware */

commit ad758a67048f58205f2777b0f0a1a02de824d280
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Sat Aug 31 11:02:18 2013 +0200

    ASoC: Remove unused debugfs_dapm field from snd_soc_{platform,codec} struct
    
    The DAPM context struct has its own field where it stores the pointer to the
    DAPM debugfs entry. The debugfs_dapm field in the snd_soc_platform and
    snd_soc_codec structs are completely unused and can be removed.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 254bcda40695..c65cc7d70353 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -719,7 +719,6 @@ struct snd_soc_codec {
 #ifdef CONFIG_DEBUG_FS
 	struct dentry *debugfs_codec_root;
 	struct dentry *debugfs_reg;
-	struct dentry *debugfs_dapm;
 #endif
 };
 
@@ -844,7 +843,6 @@ struct snd_soc_platform {
 
 #ifdef CONFIG_DEBUG_FS
 	struct dentry *debugfs_platform_root;
-	struct dentry *debugfs_dapm;
 #endif
 };
 

commit 43d92e7d9aa13b91687f671ea7015204bc88fb84
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Sat Aug 31 11:02:17 2013 +0200

    ASoC: Remove unused control_type field from snd_soc_codec struct
    
    The control_type field was used by the core to track which raw IO methods to
    use, but when switching to regmap this was no longer necessary and so the last
    user of the field was removed in commit be3ea3b9 ("ASoC: Use new register map
    API for ASoC generic physical I/O"). The field is now completely unused and can
    be removed.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index d57a04e7553d..254bcda40695 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -701,7 +701,6 @@ struct snd_soc_codec {
 
 	/* codec IO */
 	void *control_data; /* codec control (i2c/3wire) data */
-	enum snd_soc_control_type control_type;
 	hw_write_t hw_write;
 	unsigned int (*hw_read)(struct snd_soc_codec *, unsigned int);
 	unsigned int (*read)(struct snd_soc_codec *, unsigned int);

commit 38f7d75edcf8ced03d03131005ed806bee746699
Merge: c22cff947a98 34742cb02bd3
Author: Mark Brown <broonie@linaro.org>
Date:   Tue Aug 27 15:40:47 2013 +0100

    Merge remote-tracking branch 'asoc/topic/dapm' into asoc-core

commit 436f3562bb34061c578727bfa968f3566ace6ea0
Merge: 7c24d7d67b63 69c2d346e8fa
Author: Mark Brown <broonie@linaro.org>
Date:   Thu Aug 22 14:28:32 2013 +0100

    Merge remote-tracking branch 'asoc/topic/dapm' into asoc-next

commit 8157567013e7368e1945b16aa039a1bfaf2bea5a
Merge: e7ac4fb607a3 2820f6158fae
Author: Mark Brown <broonie@linaro.org>
Date:   Thu Aug 22 14:28:31 2013 +0100

    Merge remote-tracking branch 'asoc/topic/core' into asoc-next

commit 6234eabf84d6dcb2e28d4fdae43029c04c1bbc46
Merge: ece59528fa03 92bb4c32708e
Author: Mark Brown <broonie@linaro.org>
Date:   Thu Aug 22 14:28:25 2013 +0100

    Merge remote-tracking branch 'asoc/topic/adsp' into asoc-next

commit 741a509f34d8d702f70d0ad99b8152c57d76961e
Author: Markus Pargmann <mpa@pengutronix.de>
Date:   Mon Aug 19 17:05:55 2013 +0200

    ASoC: core: Generic ac97 link reset functions
    
    This patch adds generic ac97 reset functions using pincontrol and gpio
    parsed from devicetree.
    
    Signed-off-by: Markus Pargmann <mpa@pengutronix.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 6eabee7ec15a..c0ac3bc7b7f4 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -468,6 +468,8 @@ int snd_soc_new_ac97_codec(struct snd_soc_codec *codec,
 void snd_soc_free_ac97_codec(struct snd_soc_codec *codec);
 
 int snd_soc_set_ac97_ops(struct snd_ac97_bus_ops *ops);
+int snd_soc_set_ac97_ops_of_reset(struct snd_ac97_bus_ops *ops,
+		struct platform_device *pdev);
 
 /*
  *Controls

commit 9a953e6f27fd280a2af5719b77394fbb228c5b46
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Sat Aug 10 21:33:10 2013 +0200

    ASoC: Use snd_soc_info_enum_double() for SOC_ENUM_EXT controls
    
    snd_soc_info_enum_ext() and snd_soc_info_enum_double() are almost identical. The
    only difference is that snd_soc_info_enum_double() is also able to handle stereo
    controls. Using snd_soc_info_enum double() instead of snd_soc_info_enum_ext()
    for the SOC_ENUM_EXT control's info callback allows us to remove
    snd_soc_info_enum_ext().
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 724a42af40fa..6f86a4187f58 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -234,7 +234,7 @@
 	.private_value = xdata }
 #define SOC_ENUM_EXT(xname, xenum, xhandler_get, xhandler_put) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
-	.info = snd_soc_info_enum_ext, \
+	.info = snd_soc_info_enum_double, \
 	.get = xhandler_get, .put = xhandler_put, \
 	.private_value = (unsigned long)&xenum }
 
@@ -485,8 +485,6 @@ int snd_soc_add_dai_controls(struct snd_soc_dai *dai,
 	const struct snd_kcontrol_new *controls, int num_controls);
 int snd_soc_info_enum_double(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_info *uinfo);
-int snd_soc_info_enum_ext(struct snd_kcontrol *kcontrol,
-	struct snd_ctl_elem_info *uinfo);
 int snd_soc_get_enum_double(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
 int snd_soc_put_enum_double(struct snd_kcontrol *kcontrol,

commit c77f872e663e3f6ea18f774bf4399884884b4b22
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Sat Aug 10 21:33:09 2013 +0200

    ASoC: Remove unused snd_soc_info_volsw_ext()
    
    The SOC_SINGLE_EXT control has been using snd_soc_info_volsw() for its info
    callback since commit 1c433fb ("[ALSA] soc - 0.13 ASoC headers"). The
    snd_soc_info_volsw_ext() function has been unused ever since then, so remove it.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 6eabee7ec15a..724a42af40fa 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -497,8 +497,6 @@ int snd_soc_put_value_enum_double(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
 int snd_soc_info_volsw(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_info *uinfo);
-int snd_soc_info_volsw_ext(struct snd_kcontrol *kcontrol,
-	struct snd_ctl_elem_info *uinfo);
 #define snd_soc_info_bool_ext		snd_ctl_boolean_mono_info
 int snd_soc_get_volsw(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);

commit 57295073b6acfdfaf9319d3caf92a5c433fdf109
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Mon Aug 5 11:27:31 2013 +0200

    ASoC: dapm: Implement mixer input auto-disable
    
    Some devices have the problem that if a internal audio signal source is disabled
    the output of the source becomes undefined or goes to a undesired state (E.g.
    DAC output goes to ground instead of VMID). In this case it is necessary, in
    order to avoid unwanted clicks and pops, to disable any mixer input the signal
    feeds into or to active a mute control along the path to the output. Often it is
    still desirable to expose the same mixer input control to userspace, so cerain
    paths can sill be disabled manually. This means we can not use conventional DAPM
    to manage the mixer input control. This patch implements a method for letting
    DAPM overwrite the state of a userspace visible control. I.e. DAPM will disable
    the control if the path on which the control sits becomes inactive. Userspace
    will then only see a cached copy of the controls state. Once DAPM powers the
    path up again it will sync the userspace setting with the hardware and give
    control back to userspace.
    
    To implement this a new widget type is introduced. One widget of this type will
    be created for each DAPM kcontrol which has the auto-disable feature enabled.
    For each path that is controlled by the kcontrol the widget will be connected to
    the source of that path. The new widget type behaves like a supply widget,
    which means it will power up if one of its sinks are powered up and will only
    power down if all of its sinks are powered down. In order to only have the mixer
    input enabled when the source signal is valid the new widget type will be
    disabled before all other widget types and only be enabled after all other
    widget types.
    
    E.g. consider the following simplified example. A DAC is connected to a mixer
    and the mixer has a control to enable or disable the signal from the DAC.
    
                         +-------+
      +-----+            |       |
      | DAC |-----[Ctrl]-| Mixer |
      +-----+       :    |       |
         |          :    +-------+
         |          :
        +-------------+
        | Ctrl widget |
        +-------------+
    
    If the control has the auto-disable feature enabled we'll create a widget for
    the control. This widget is connected to the DAC as it is the source for the
    mixer input. If the DAC powers up the control widget powers up and if the DAC
    powers down the control widget is powered down. As long as the control widget
    is powered down the hardware input control is kept disabled and if it is enabled
    userspace can freely change the control's state.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index b1e1f967ae1e..6201c6ede8ba 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -30,13 +30,13 @@
 /*
  * Convenience kcontrol builders
  */
-#define SOC_DOUBLE_VALUE(xreg, shift_left, shift_right, xmax, xinvert) \
+#define SOC_DOUBLE_VALUE(xreg, shift_left, shift_right, xmax, xinvert, xautodisable) \
 	((unsigned long)&(struct soc_mixer_control) \
 	{.reg = xreg, .rreg = xreg, .shift = shift_left, \
 	.rshift = shift_right, .max = xmax, .platform_max = xmax, \
-	.invert = xinvert})
-#define SOC_SINGLE_VALUE(xreg, xshift, xmax, xinvert) \
-	SOC_DOUBLE_VALUE(xreg, xshift, xshift, xmax, xinvert)
+	.invert = xinvert, .autodisable = xautodisable})
+#define SOC_SINGLE_VALUE(xreg, xshift, xmax, xinvert, xautodisable) \
+	SOC_DOUBLE_VALUE(xreg, xshift, xshift, xmax, xinvert, xautodisable)
 #define SOC_SINGLE_VALUE_EXT(xreg, xmax, xinvert) \
 	((unsigned long)&(struct soc_mixer_control) \
 	{.reg = xreg, .max = xmax, .platform_max = xmax, .invert = xinvert})
@@ -52,7 +52,7 @@
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
 	.info = snd_soc_info_volsw, .get = snd_soc_get_volsw,\
 	.put = snd_soc_put_volsw, \
-	.private_value =  SOC_SINGLE_VALUE(reg, shift, max, invert) }
+	.private_value = SOC_SINGLE_VALUE(reg, shift, max, invert, 0) }
 #define SOC_SINGLE_RANGE(xname, xreg, xshift, xmin, xmax, xinvert) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname),\
 	.info = snd_soc_info_volsw_range, .get = snd_soc_get_volsw_range, \
@@ -68,7 +68,7 @@
 	.tlv.p = (tlv_array), \
 	.info = snd_soc_info_volsw, .get = snd_soc_get_volsw,\
 	.put = snd_soc_put_volsw, \
-	.private_value =  SOC_SINGLE_VALUE(reg, shift, max, invert) }
+	.private_value = SOC_SINGLE_VALUE(reg, shift, max, invert, 0) }
 #define SOC_SINGLE_SX_TLV(xname, xreg, xshift, xmin, xmax, tlv_array) \
 {       .iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
 	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ | \
@@ -97,7 +97,7 @@
 	.info = snd_soc_info_volsw, .get = snd_soc_get_volsw, \
 	.put = snd_soc_put_volsw, \
 	.private_value = SOC_DOUBLE_VALUE(reg, shift_left, shift_right, \
-					  max, invert) }
+					  max, invert, 0) }
 #define SOC_DOUBLE_R(xname, reg_left, reg_right, xshift, xmax, xinvert) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname), \
 	.info = snd_soc_info_volsw, \
@@ -119,7 +119,7 @@
 	.info = snd_soc_info_volsw, .get = snd_soc_get_volsw, \
 	.put = snd_soc_put_volsw, \
 	.private_value = SOC_DOUBLE_VALUE(reg, shift_left, shift_right, \
-					  max, invert) }
+					  max, invert, 0) }
 #define SOC_DOUBLE_R_TLV(xname, reg_left, reg_right, xshift, xmax, xinvert, tlv_array) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname),\
 	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ |\
@@ -190,14 +190,14 @@
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
 	.info = snd_soc_info_volsw, \
 	.get = xhandler_get, .put = xhandler_put, \
-	.private_value = SOC_SINGLE_VALUE(xreg, xshift, xmax, xinvert) }
+	.private_value = SOC_SINGLE_VALUE(xreg, xshift, xmax, xinvert, 0) }
 #define SOC_DOUBLE_EXT(xname, reg, shift_left, shift_right, max, invert,\
 	 xhandler_get, xhandler_put) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname),\
 	.info = snd_soc_info_volsw, \
 	.get = xhandler_get, .put = xhandler_put, \
 	.private_value = \
-		SOC_DOUBLE_VALUE(reg, shift_left, shift_right, max, invert) }
+		SOC_DOUBLE_VALUE(reg, shift_left, shift_right, max, invert, 0) }
 #define SOC_SINGLE_EXT_TLV(xname, xreg, xshift, xmax, xinvert,\
 	 xhandler_get, xhandler_put, tlv_array) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
@@ -206,7 +206,7 @@
 	.tlv.p = (tlv_array), \
 	.info = snd_soc_info_volsw, \
 	.get = xhandler_get, .put = xhandler_put, \
-	.private_value = SOC_SINGLE_VALUE(xreg, xshift, xmax, xinvert) }
+	.private_value = SOC_SINGLE_VALUE(xreg, xshift, xmax, xinvert, 0) }
 #define SOC_DOUBLE_EXT_TLV(xname, xreg, shift_left, shift_right, xmax, xinvert,\
 	 xhandler_get, xhandler_put, tlv_array) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname), \
@@ -216,7 +216,7 @@
 	.info = snd_soc_info_volsw, \
 	.get = xhandler_get, .put = xhandler_put, \
 	.private_value = SOC_DOUBLE_VALUE(xreg, shift_left, shift_right, \
-					  xmax, xinvert) }
+					  xmax, xinvert, 0) }
 #define SOC_DOUBLE_R_EXT_TLV(xname, reg_left, reg_right, xshift, xmax, xinvert,\
 	 xhandler_get, xhandler_put, tlv_array) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname), \
@@ -1088,7 +1088,9 @@ struct snd_soc_pcm_runtime {
 /* mixer control */
 struct soc_mixer_control {
 	int min, max, platform_max;
-	unsigned int reg, rreg, shift, rshift, invert;
+	unsigned int reg, rreg, shift, rshift;
+	unsigned int invert:1;
+	unsigned int autodisable:1;
 };
 
 struct soc_bytes {

commit 564c65049eddb1a95b48958080db97eda88c98dd
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Mon Jul 29 17:13:55 2013 +0200

    ASoC: dapm: Move snd_soc_dapm_update from dapm context to card
    
    The update field of a DAPM context is only assigned while the card's dapm_mutex
    is locked, the field is also cleared again while the mutex is stil locked. So
    there will only ever be one DAPM context at a time with a non-NULL update field.
    So it is safe to move the update field from the DAPM context struct to the card
    struct. Doing so will allow further cleanups in this area.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 6eabee7ec15a..b1e1f967ae1e 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1042,6 +1042,7 @@ struct snd_soc_card {
 	/* Generic DAPM context for the card */
 	struct snd_soc_dapm_context dapm;
 	struct snd_soc_dapm_stats dapm_stats;
+	struct snd_soc_dapm_update *update;
 
 #ifdef CONFIG_DEBUG_FS
 	struct dentry *debugfs_card_root;

commit 4fefd69853a4e83040ddaa98d3b6e5e12cc4f97a
Author: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
Date:   Mon Jul 29 13:51:58 2013 +0100

    ASoC: core: Add snd_soc_card_get_kcontrol()
    
    This is useful for drivers who want to grab a pointer to
    snd_kcontrol outside of the kcontrol callbacks.
    
    Signed-off-by: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 6eabee7ec15a..b33d1de46396 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -475,6 +475,8 @@ int snd_soc_set_ac97_ops(struct snd_ac97_bus_ops *ops);
 struct snd_kcontrol *snd_soc_cnew(const struct snd_kcontrol_new *_template,
 				  void *data, const char *long_name,
 				  const char *prefix);
+struct snd_kcontrol *snd_soc_card_get_kcontrol(struct snd_soc_card *soc_card,
+					       const char *name);
 int snd_soc_add_codec_controls(struct snd_soc_codec *codec,
 	const struct snd_kcontrol_new *controls, int num_controls);
 int snd_soc_add_platform_controls(struct snd_soc_platform *platform,

commit b047e1cce8fe32475ab61846772943a5e4c0a908
Author: Mark Brown <broonie@linaro.org>
Date:   Wed Jun 26 12:45:59 2013 +0100

    ASoC: ac97: Support multi-platform AC'97
    
    Currently we can only have a single platform built in with AC'97 support
    due to the use of a global variable to provide the bus operations. Fix
    this by making that variable a pointer and having the bus drivers set the
    operations prior to registering.
    
    This is not a particularly good or nice approach but it avoids blocking
    multiplatform and a real fix involves fixing the fairly deep problems
    with AC'97 support - we should be converting it to a real bus.
    
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Stephen Warren <swarren@nvidia.com>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 85c15226103b..6eabee7ec15a 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -340,7 +340,7 @@ struct snd_soc_jack_gpio;
 
 typedef int (*hw_write_t)(void *,const char* ,int);
 
-extern struct snd_ac97_bus_ops soc_ac97_ops;
+extern struct snd_ac97_bus_ops *soc_ac97_ops;
 
 enum snd_soc_control_type {
 	SND_SOC_I2C = 1,
@@ -467,6 +467,8 @@ int snd_soc_new_ac97_codec(struct snd_soc_codec *codec,
 	struct snd_ac97_bus_ops *ops, int num);
 void snd_soc_free_ac97_codec(struct snd_soc_codec *codec);
 
+int snd_soc_set_ac97_ops(struct snd_ac97_bus_ops *ops);
+
 /*
  *Controls
  */

commit 8dd2b66d1a961231685a3bfe5937c85d846fbf5d
Merge: 126825e7ea27 24568ea4bef5
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Apr 18 16:24:31 2013 +0200

    Merge tag 'asoc-v3.10-2' of git://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound into for-next
    
    ASoC: More updates for v3.10
    
    The main additional change here is Lars-Peter's DMA work plus the
    platform conversions which have been tested - getting this in mainline
    will make life easier for development after the merge window.  These
    factor a large chunk of code out of the drivers for the platforms using
    dmaengine, greatly simplifying development.

commit 71a45cda444f9c47bd63516cf4c24fb6d1ccb151
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Mon Apr 15 19:19:49 2013 +0200

    ASoC: Add snd_soc_{add, remove}_platform
    
    snd_soc_{add,remove}_platform are similar to snd_soc_register_platform and
    snd_soc_unregister_platform with the difference that they won't allocate and
    free the snd_soc_platform structure.
    
    Also add snd_soc_lookup_platform which looks up a platform by the device it has
    been registered for.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Tested-by: Stephen Warren <swarren@nvidia.com>
    Tested-by: Shawn Guo <shawn.guo@linaro.org>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index f619905f0a65..4429254aa195 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -373,6 +373,10 @@ int snd_soc_poweroff(struct device *dev);
 int snd_soc_register_platform(struct device *dev,
 		const struct snd_soc_platform_driver *platform_drv);
 void snd_soc_unregister_platform(struct device *dev);
+int snd_soc_add_platform(struct device *dev, struct snd_soc_platform *platform,
+		const struct snd_soc_platform_driver *platform_drv);
+void snd_soc_remove_platform(struct snd_soc_platform *platform);
+struct snd_soc_platform *snd_soc_lookup_platform(struct device *dev);
 int snd_soc_register_codec(struct device *dev,
 		const struct snd_soc_codec_driver *codec_drv,
 		struct snd_soc_dai_driver *dai_drv, int num_dai);

commit 56c32c751cdf4aee810b4ad537ab1d836ee8f516
Merge: 54b019cbd993 379cf39781fd
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Fri Apr 12 13:56:58 2013 +0100

    Merge remote-tracking branch 'asoc/topic/core' into asoc-next

commit ef03c9ae967bf1b40bec1456f7e744033853a01d
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Wed Mar 27 12:02:24 2013 +0100

    ASoC: Constify the 'compr_ops' field of snd_soc_platform_driver
    
    The ASoC core does not modify a platform driver's compr_ops structure. Making it
    const allows ASoC platform drivers to declare their snd_compr_ops struct as
    const.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 966a854fc054..f619905f0a65 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -804,7 +804,7 @@ struct snd_soc_platform_driver {
 	const struct snd_pcm_ops *ops;
 
 	/* platform stream compress ops */
-	struct snd_compr_ops *compr_ops;
+	const struct snd_compr_ops *compr_ops;
 
 	/* platform stream completion event */
 	int (*stream_event)(struct snd_soc_dapm_context *dapm, int event);

commit 1f03f55b0ca679f950148954e807feb22cff325c
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Wed Mar 27 12:02:23 2013 +0100

    ASoC: Constify the 'ops' field of snd_soc_platform_driver
    
    The ASoC core does not modify a platform driver's ops structure. Making it const
    allows ASoC platform drivers to declare their snd_pcm_ops struct as const.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 5fb70d1e8cce..966a854fc054 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -801,7 +801,7 @@ struct snd_soc_platform_driver {
 		struct snd_soc_dai *);
 
 	/* platform stream pcm ops */
-	struct snd_pcm_ops *ops;
+	const struct snd_pcm_ops *ops;
 
 	/* platform stream compress ops */
 	struct snd_compr_ops *compr_ops;

commit d79e57db84f8359bc96418900f86b8fc4189eff9
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Wed Mar 27 12:02:22 2013 +0100

    ASoC: Constify the 'driver' field of snd_soc_platform
    
    The ASoC core does no not modify the driver of a platform. Making it const
    allows ASoC platform drivers to declare the snd_soc_platform_driver struct as
    const.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index c84062b22221..5fb70d1e8cce 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -371,7 +371,7 @@ int snd_soc_suspend(struct device *dev);
 int snd_soc_resume(struct device *dev);
 int snd_soc_poweroff(struct device *dev);
 int snd_soc_register_platform(struct device *dev,
-		struct snd_soc_platform_driver *platform_drv);
+		const struct snd_soc_platform_driver *platform_drv);
 void snd_soc_unregister_platform(struct device *dev);
 int snd_soc_register_codec(struct device *dev,
 		const struct snd_soc_codec_driver *codec_drv,
@@ -823,7 +823,7 @@ struct snd_soc_platform {
 	const char *name;
 	int id;
 	struct device *dev;
-	struct snd_soc_platform_driver *driver;
+	const struct snd_soc_platform_driver *driver;
 	struct mutex mutex;
 
 	unsigned int suspended:1; /* platform is suspended */

commit 61782e4f5eb593958582524aad9b14dc98b1b56c
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Thu Mar 14 00:18:41 2013 -0700

    ASoC: add .name for snd_soc_component_driver
    
    This patch adds .name member on snd_soc_component_driver.
    But this patch doesn't care about whether cmpnt_drv was NULL,
    and/or its name was NULL in snd_soc_register_component()
    at this point.
    
    Because, it is easy to switch over to
    snd_soc_register_component() from snd_soc_register_dais()
    if it doesn't care cmpnt_drv was NULL.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 8c46d0a7e2c0..44c9cbdc9fa2 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -848,6 +848,7 @@ struct snd_soc_platform {
 };
 
 struct snd_soc_component_driver {
+	const char *name;
 };
 
 struct snd_soc_component {

commit 030e79f658de11da43d32e7ad814b5d2d64c8bac
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Mar 11 18:27:21 2013 -0700

    ASoC: add snd_soc_register_component()
    
    Current ASoC has register function for platform/codec/dai/card,
    but doesn't have for cpu.
    It often produces confusion and fault on ASoC.
    
    As result of ASoC community discussion,
    we consider new struct snd_soc_component for CPU/CODEC,
    and will switch over to use it.
    
    This patch adds very basic struct snd_soc_component,
    and register function for it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Acked-by: Liam Girdwood <liam.r.girdwood@linux.intel.com>
    Reviewed-by: Stephen Warren <swarren@nvidia.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index a6a059ca3874..8c46d0a7e2c0 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -324,6 +324,8 @@ struct snd_soc_dai_link;
 struct snd_soc_platform_driver;
 struct snd_soc_codec;
 struct snd_soc_codec_driver;
+struct snd_soc_component;
+struct snd_soc_component_driver;
 struct soc_enum;
 struct snd_soc_jack;
 struct snd_soc_jack_zone;
@@ -377,6 +379,10 @@ int snd_soc_register_codec(struct device *dev,
 		const struct snd_soc_codec_driver *codec_drv,
 		struct snd_soc_dai_driver *dai_drv, int num_dai);
 void snd_soc_unregister_codec(struct device *dev);
+int snd_soc_register_component(struct device *dev,
+			 const struct snd_soc_component_driver *cmpnt_drv,
+			 struct snd_soc_dai_driver *dai_drv, int num_dai);
+void snd_soc_unregister_component(struct device *dev);
 int snd_soc_codec_volatile_register(struct snd_soc_codec *codec,
 				    unsigned int reg);
 int snd_soc_codec_readable_register(struct snd_soc_codec *codec,
@@ -841,6 +847,19 @@ struct snd_soc_platform {
 #endif
 };
 
+struct snd_soc_component_driver {
+};
+
+struct snd_soc_component {
+	const char *name;
+	int id;
+	int num_dai;
+	struct device *dev;
+	struct list_head list;
+
+	const struct snd_soc_component_driver *driver;
+};
+
 struct snd_soc_dai_link {
 	/* config - must be set by machine driver */
 	const char *name;			/* Codec name */

commit e383c467ceeee3b040444d6dcd27f331d72b1426
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Fri Mar 8 13:44:26 2013 +0100

    ASoC: core: Drop unused "dapm" field form soc_enum struct
    
    This field was added in commit 2e72f8e ("ASoC: New enum type: value_enum"), but
    has never been used since. Considering that the soc_enum struct is usually
    shared between all instances of a CODEC, it also doesn't make much sense to have
    a pointer to DAPM specific data in it.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index a6a059ca3874..c84062b22221 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1086,7 +1086,6 @@ struct soc_enum {
 	unsigned int mask;
 	const char * const *texts;
 	const unsigned int *values;
-	void *dapm;
 };
 
 /* codec IO */

commit 556d8b55d083ad487067680feaf179664172bd4e
Merge: f0f3214e8be1 8c2d6a9f9cfa
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon Feb 11 11:06:38 2013 +0000

    Merge remote-tracking branch 'asoc/topic/of' into asoc-next

commit d289323286d6b4e738458c31533da51d294d28a0
Merge: 6a47366973be b5a8fe439ab3
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon Feb 11 11:06:30 2013 +0000

    Merge remote-tracking branch 'asoc/topic/core' into asoc-next

commit a7930ed458afeacb029cee2b22f77b2a15472ad6
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Jan 14 18:36:04 2013 -0800

    ASoC: add snd_soc_of_parse_daifmt() for DeviceTree
    
    This patch adds snd_soc_of_parse_daifmt() and supports below style on DT.
    
            [prefix]format = "i2c";
            [prefix]clock-gating = "continuous";
            [prefix]bitclock-inversion;
            [prefix]bitclock-master;
            [prefix]frame-master;
    
    Each driver can use specific [prefix]
    (ex simple-card,cpu,dai,format = xxx;)
    
    This sample will be
    SND_SOC_DAIFMT_I2S | SND_SOC_DAIFMT_CONT |
    SND_SOC_DAIFMT_IB_NF | SND_SOC_DAIFMT_CBM_CFM
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index bc56738cb109..571562340e5a 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1171,6 +1171,8 @@ int snd_soc_of_parse_card_name(struct snd_soc_card *card,
 			       const char *propname);
 int snd_soc_of_parse_audio_routing(struct snd_soc_card *card,
 				   const char *propname);
+unsigned int snd_soc_of_parse_daifmt(struct device_node *np,
+				     const char *prefix);
 
 #include <sound/soc-dai.h>
 

commit 13aec722f3c14aa6019c800465aa3ddd3638d305
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Thu Jan 10 17:06:15 2013 +0100

    ASoC: Constify ops and compr_ops fields of snd_soc_dai_link
    
    The core does not modify these fields, so they can be made const. This allows
    drivers to declare their op tables as const.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 769e27c774a3..bedf3dabdbd3 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -904,8 +904,8 @@ struct snd_soc_dai_link {
 			struct snd_pcm_hw_params *params);
 
 	/* machine stream operations */
-	struct snd_soc_ops *ops;
-	struct snd_soc_compr_ops *compr_ops;
+	const struct snd_soc_ops *ops;
+	const struct snd_soc_compr_ops *compr_ops;
 };
 
 struct snd_soc_codec_conf {

commit 9bde4f0b1c83d1129a9fc8ec5b2611ba6dab1215
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Wed Dec 19 16:05:00 2012 +0000

    ASoC: core: Fix SOC_DOUBLE_RANGE() macros
    
    Although we've had macros defining double _RANGE controls for a while now
    they've not actually been backed up properly by the implementation, it's
    treated everything as mono. Fix that by implementing the handling in the
    stereo controls, ensuring that the mono controls don't mistakenly get
    treated as stereo.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@ti.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 769e27c774a3..bc56738cb109 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -58,8 +58,9 @@
 	.info = snd_soc_info_volsw_range, .get = snd_soc_get_volsw_range, \
 	.put = snd_soc_put_volsw_range, \
 	.private_value = (unsigned long)&(struct soc_mixer_control) \
-		{.reg = xreg, .shift = xshift, .min = xmin,\
-		 .max = xmax, .platform_max = xmax, .invert = xinvert} }
+		{.reg = xreg, .rreg = xreg, .shift = xshift, \
+		 .rshift = xshift,  .min = xmin, .max = xmax, \
+		 .platform_max = xmax, .invert = xinvert} }
 #define SOC_SINGLE_TLV(xname, reg, shift, max, invert, tlv_array) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
 	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ |\
@@ -88,8 +89,9 @@
 	.info = snd_soc_info_volsw_range, \
 	.get = snd_soc_get_volsw_range, .put = snd_soc_put_volsw_range, \
 	.private_value = (unsigned long)&(struct soc_mixer_control) \
-		{.reg = xreg, .shift = xshift, .min = xmin,\
-		 .max = xmax, .platform_max = xmax, .invert = xinvert} }
+		{.reg = xreg, .rreg = xreg, .shift = xshift, \
+		 .rshift = xshift, .min = xmin, .max = xmax, \
+		 .platform_max = xmax, .invert = xinvert} }
 #define SOC_DOUBLE(xname, reg, shift_left, shift_right, max, invert) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname),\
 	.info = snd_soc_info_volsw, .get = snd_soc_get_volsw, \

commit 9bffb1fb7c22c96d51d4ba06e2e023dd568a5872
Author: Misael Lopez Cruz <misael.lopez@ti.com>
Date:   Thu Dec 13 12:23:05 2012 -0600

    ASoC: Prevent pop_wait overwrite
    
    pop_wait is used to determine if a deferred playback close
    needs to be cancelled when the a PCM is open or if after
    the power-down delay expires it needs to run. pop_wait is
    associated with the CODEC DAI, so the CODEC DAI must be
    unique. This holds true for most CODECs, except for the
    dummy CODEC and its DAI.
    
    In DAI links with non-unique dummy CODECs (e.g. front-ends),
    pop_wait can be overwritten by another DAI link using also a
    dummy CODEC. Failure to cancel a deferred close can cause
    mute due to the DAPM STOP event sent in the deferred work.
    
    One scenario where pop_wait is overwritten and causing mute
    is below (where hw:0,0 and hw:0,1 are two front-ends with
    default pmdown_time = 5 secs):
    
    aplay /dev/urandom -D hw:0,0 -c 2 -r 48000 -f S16_LE -d 1
    sleep 1
    aplay /dev/urandom -D hw:0,1 -c 2 -r 48000 -f S16_LE -d 3 &
    aplay /dev/urandom -D hw:0,0 -c 2 -r 48000 -f S16_LE
    
    Since CODECs may not be unique, pop_wait is moved to the PCM
    runtime structure. Creating separate dummy CODECs for each
    DAI link can also solve the problem, but at this point it's
    only pop_wait variable in the CODEC DAI that has negative
    effects by not being unique.
    
    Signed-off-by: Misael Lopez Cruz <misael.lopez@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 91244a096c19..769e27c774a3 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1039,6 +1039,7 @@ struct snd_soc_pcm_runtime {
 	struct snd_soc_dpcm_runtime dpcm[2];
 
 	long pmdown_time;
+	unsigned char pop_wait:1;
 
 	/* runtime devices */
 	struct snd_pcm *pcm;

commit 86767b7d5b3cdbd105e7d7066d671b52aa208188
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Fri Sep 14 13:57:27 2012 +0200

    ASoC: Avoid recalculating the bitmask for SOC_ENUM controls
    
    For ENUM controls the bitmask is calculated based on the number of items.
    Currently this is done each time the control is accessed. And while the
    performance impact of this should be negligible we can easily do better. The
    roundup_pow_of_two macro performs the same calculation which is currently done
    manually, but it is also possible to use this macro with compile time constants
    and so it can be used to initialize static data. So we can use it to initialize
    the mask field of a ENUM control during its declaration.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Acked-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 313b7660562c..91244a096c19 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -20,6 +20,7 @@
 #include <linux/interrupt.h>
 #include <linux/kernel.h>
 #include <linux/regmap.h>
+#include <linux/log2.h>
 #include <sound/core.h>
 #include <sound/pcm.h>
 #include <sound/compress_driver.h>
@@ -160,7 +161,8 @@
 		 .platform_max = xmax} }
 #define SOC_ENUM_DOUBLE(xreg, xshift_l, xshift_r, xmax, xtexts) \
 {	.reg = xreg, .shift_l = xshift_l, .shift_r = xshift_r, \
-	.max = xmax, .texts = xtexts }
+	.max = xmax, .texts = xtexts, \
+	.mask = xmax ? roundup_pow_of_two(xmax) - 1 : 0}
 #define SOC_ENUM_SINGLE(xreg, xshift, xmax, xtexts) \
 	SOC_ENUM_DOUBLE(xreg, xshift, xshift, xmax, xtexts)
 #define SOC_ENUM_SINGLE_EXT(xmax, xtexts) \

commit 4968107786e75f5aaba3c1c8e959ccbae929457f
Author: Vinod Koul <vinod.koul@linux.intel.com>
Date:   Thu Aug 16 17:10:40 2012 +0530

    ASoC: add definations for compressed operations
    
    Here we update the asoc structures to add compress stream definations
    First the struct snd_soc_dai_driver adds a new member to indicate if the dai is
    compressed or pcm. Next we add a new structre the struct snd_soc_compr_ops in
    the struct snd_soc_dai_link. This is to be used for machine driver to perform
    any opertaions required for setting up compressed audio streams
    
    next is the compressed data operations, they are added using struct
    snd_compr_ops in the struct snd_soc_platform_driver.
    
    Signed-off-by: Namarta Kohli <namartax.kohli@intel.com>
    Signed-off-by: Ramesh Babu K V <ramesh.babu@intel.com>
    Signed-off-by: Vinod Koul <vinod.koul@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index e063380f63a2..313b7660562c 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -22,6 +22,7 @@
 #include <linux/regmap.h>
 #include <sound/core.h>
 #include <sound/pcm.h>
+#include <sound/compress_driver.h>
 #include <sound/control.h>
 #include <sound/ac97_codec.h>
 
@@ -399,6 +400,7 @@ int snd_soc_platform_read(struct snd_soc_platform *platform,
 int snd_soc_platform_write(struct snd_soc_platform *platform,
 					unsigned int reg, unsigned int val);
 int soc_new_pcm(struct snd_soc_pcm_runtime *rtd, int num);
+int soc_new_compress(struct snd_soc_pcm_runtime *rtd, int num);
 
 struct snd_pcm_substream *snd_soc_get_dai_substream(struct snd_soc_card *card,
 		const char *dai_link, int stream);
@@ -632,6 +634,13 @@ struct snd_soc_ops {
 	int (*trigger)(struct snd_pcm_substream *, int);
 };
 
+struct snd_soc_compr_ops {
+	int (*startup)(struct snd_compr_stream *);
+	void (*shutdown)(struct snd_compr_stream *);
+	int (*set_params)(struct snd_compr_stream *);
+	int (*trigger)(struct snd_compr_stream *);
+};
+
 /* SoC cache ops */
 struct snd_soc_cache_ops {
 	const char *name;
@@ -787,9 +796,12 @@ struct snd_soc_platform_driver {
 	snd_pcm_sframes_t (*delay)(struct snd_pcm_substream *,
 		struct snd_soc_dai *);
 
-	/* platform stream ops */
+	/* platform stream pcm ops */
 	struct snd_pcm_ops *ops;
 
+	/* platform stream compress ops */
+	struct snd_compr_ops *compr_ops;
+
 	/* platform stream completion event */
 	int (*stream_event)(struct snd_soc_dapm_context *dapm, int event);
 
@@ -891,6 +903,7 @@ struct snd_soc_dai_link {
 
 	/* machine stream operations */
 	struct snd_soc_ops *ops;
+	struct snd_soc_compr_ops *compr_ops;
 };
 
 struct snd_soc_codec_conf {
@@ -1027,6 +1040,7 @@ struct snd_soc_pcm_runtime {
 
 	/* runtime devices */
 	struct snd_pcm *pcm;
+	struct snd_compr *compr;
 	struct snd_soc_codec *codec;
 	struct snd_soc_platform *platform;
 	struct snd_soc_dai *codec_dai;

commit 229e3fdc1ba49b747e9434b55b3f6bd68a4db251
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Fri Jun 22 11:40:55 2012 +0100

    ASoC: core: Add DOUBLE_R variants of the _RANGE controls
    
    The code handles this fine already, we just need new macros in the header
    for drivers to create the controls.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@ti.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index e4348d25fca3..e063380f63a2 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -42,6 +42,10 @@
 	((unsigned long)&(struct soc_mixer_control) \
 	{.reg = xlreg, .rreg = xrreg, .shift = xshift, .rshift = xshift, \
 	.max = xmax, .platform_max = xmax, .invert = xinvert})
+#define SOC_DOUBLE_R_RANGE_VALUE(xlreg, xrreg, xshift, xmin, xmax, xinvert) \
+	((unsigned long)&(struct soc_mixer_control) \
+	{.reg = xlreg, .rreg = xrreg, .shift = xshift, .rshift = xshift, \
+	.min = xmin, .max = xmax, .platform_max = xmax, .invert = xinvert})
 #define SOC_SINGLE(xname, reg, shift, max, invert) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
 	.info = snd_soc_info_volsw, .get = snd_soc_get_volsw,\
@@ -96,6 +100,13 @@
 	.get = snd_soc_get_volsw, .put = snd_soc_put_volsw, \
 	.private_value = SOC_DOUBLE_R_VALUE(reg_left, reg_right, xshift, \
 					    xmax, xinvert) }
+#define SOC_DOUBLE_R_RANGE(xname, reg_left, reg_right, xshift, xmin, \
+			   xmax, xinvert)		\
+{	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname),\
+	.info = snd_soc_info_volsw_range, \
+	.get = snd_soc_get_volsw_range, .put = snd_soc_put_volsw_range, \
+	.private_value = SOC_DOUBLE_R_RANGE_VALUE(reg_left, reg_right, \
+					    xshift, xmin, xmax, xinvert) }
 #define SOC_DOUBLE_TLV(xname, reg, shift_left, shift_right, max, invert, tlv_array) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname),\
 	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ |\
@@ -114,6 +125,16 @@
 	.get = snd_soc_get_volsw, .put = snd_soc_put_volsw, \
 	.private_value = SOC_DOUBLE_R_VALUE(reg_left, reg_right, xshift, \
 					    xmax, xinvert) }
+#define SOC_DOUBLE_R_RANGE_TLV(xname, reg_left, reg_right, xshift, xmin, \
+			       xmax, xinvert, tlv_array)		\
+{	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname),\
+	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ |\
+		 SNDRV_CTL_ELEM_ACCESS_READWRITE,\
+	.tlv.p = (tlv_array), \
+	.info = snd_soc_info_volsw_range, \
+	.get = snd_soc_get_volsw_range, .put = snd_soc_put_volsw_range, \
+	.private_value = SOC_DOUBLE_R_RANGE_VALUE(reg_left, reg_right, \
+					    xshift, xmin, xmax, xinvert) }
 #define SOC_DOUBLE_R_SX_TLV(xname, xreg, xrreg, xshift, xmin, xmax, tlv_array) \
 {       .iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname), \
 	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ | \

commit 6c9d8cf6372ed2995a3d982f5c1f966e842101cc
Author: Adam Thomson <Adam.Thomson@diasemi.com>
Date:   Thu May 31 15:18:01 2012 +0100

    ASoC: core: Add single controls with specified range of values
    
    Control type added for cases where a specific range of values
    within a register are required for control.
    
    Added convenience macros:
    
    SOC_SINGLE_RANGE
    SOC_SINGLE_RANGE_TLV
    
    Added accessor implementations:
    
    snd_soc_info_volsw_range
    snd_soc_put_volsw_range
    snd_soc_get_volsw_range
    
    Signed-off-by: Michal Hajduk <Michal.Hajduk@diasemi.com>
    Signed-off-by: Adam Thomson <Adam.Thomson@diasemi.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 23c4efbe13a6..e4348d25fca3 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -47,6 +47,13 @@
 	.info = snd_soc_info_volsw, .get = snd_soc_get_volsw,\
 	.put = snd_soc_put_volsw, \
 	.private_value =  SOC_SINGLE_VALUE(reg, shift, max, invert) }
+#define SOC_SINGLE_RANGE(xname, xreg, xshift, xmin, xmax, xinvert) \
+{	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname),\
+	.info = snd_soc_info_volsw_range, .get = snd_soc_get_volsw_range, \
+	.put = snd_soc_put_volsw_range, \
+	.private_value = (unsigned long)&(struct soc_mixer_control) \
+		{.reg = xreg, .shift = xshift, .min = xmin,\
+		 .max = xmax, .platform_max = xmax, .invert = xinvert} }
 #define SOC_SINGLE_TLV(xname, reg, shift, max, invert, tlv_array) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
 	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ |\
@@ -67,6 +74,16 @@
 		{.reg = xreg, .rreg = xreg, \
 		.shift = xshift, .rshift = xshift, \
 		.max = xmax, .min = xmin} }
+#define SOC_SINGLE_RANGE_TLV(xname, xreg, xshift, xmin, xmax, xinvert, tlv_array) \
+{	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname),\
+	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ |\
+		 SNDRV_CTL_ELEM_ACCESS_READWRITE,\
+	.tlv.p = (tlv_array), \
+	.info = snd_soc_info_volsw_range, \
+	.get = snd_soc_get_volsw_range, .put = snd_soc_put_volsw_range, \
+	.private_value = (unsigned long)&(struct soc_mixer_control) \
+		{.reg = xreg, .shift = xshift, .min = xmin,\
+		 .max = xmax, .platform_max = xmax, .invert = xinvert} }
 #define SOC_DOUBLE(xname, reg, shift_left, shift_right, max, invert) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname),\
 	.info = snd_soc_info_volsw, .get = snd_soc_get_volsw, \
@@ -460,6 +477,12 @@ int snd_soc_get_volsw_s8(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
 int snd_soc_put_volsw_s8(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
+int snd_soc_info_volsw_range(struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_info *uinfo);
+int snd_soc_put_volsw_range(struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_value *ucontrol);
+int snd_soc_get_volsw_range(struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_value *ucontrol);
 int snd_soc_limit_volume(struct snd_soc_codec *codec,
 	const char *name, int max);
 int snd_soc_bytes_info(struct snd_kcontrol *kcontrol,

commit bc92657a11c0982783979bbb84ceaf58ba222124
Author: Stephen Warren <swarren@nvidia.com>
Date:   Fri May 25 18:22:11 2012 -0600

    ASoC: make snd_soc_dai_link more symmetrical
    
    Prior to this patch, the CPU side of a DAI link was specified using a
    single name. Often, this was the result of calling dev_name() on the
    device providing the DAI, but in the case of a CPU DAI driver that
    provided multiple DAIs, it needed to mix together both the device name
    and some device-relative name, in order to form a single globally unique
    name.
    
    However, the CODEC side of the DAI link was specified using separate
    fields for device (name or OF node) and device-relative DAI name.
    
    This patch allows the CPU side of a DAI link to be specified in the same
    way as the CODEC side, separating concepts of device and device-relative
    DAI name.
    
    I believe this will be important in multi-codec and/or dynamic PCM
    scenarios, where a single CPU driver provides multiple DAIs, while also
    booting using device tree, with accompanying desire not to hard-code the
    CPU side device's name into the original .cpu_dai_name field.
    
    Ideally, both the CPU DAI and CODEC DAI loops in soc_bind_dai_link()
    would now be identical. However, two things prevent that at present:
    
    1) The need to save rtd->codec for the CODEC side, which means we have
    to search for the CODEC explicitly, and not just the CODEC side DAI.
    
    2) Since we know the CODEC side DAI is part of a codec, and not just
    a standalone DAI, it's slightly more efficient to convert .codec_name/
    .codec_of_node into a codec first, and then compare each DAI's .codec
    field, since this avoids strcmp() on each DAI's CODEC's name within
    the loop.
    
    However, the two loops are essentially semantically equivalent.
    
    Signed-off-by: Stephen Warren <swarren@nvidia.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index c703871f5f65..23c4efbe13a6 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -785,13 +785,36 @@ struct snd_soc_dai_link {
 	/* config - must be set by machine driver */
 	const char *name;			/* Codec name */
 	const char *stream_name;		/* Stream name */
-	const char *codec_name;		/* for multi-codec */
-	const struct device_node *codec_of_node;
-	const char *platform_name;	/* for multi-platform */
-	const struct device_node *platform_of_node;
+	/*
+	 * You MAY specify the link's CPU-side device, either by device name,
+	 * or by DT/OF node, but not both. If this information is omitted,
+	 * the CPU-side DAI is matched using .cpu_dai_name only, which hence
+	 * must be globally unique. These fields are currently typically used
+	 * only for codec to codec links, or systems using device tree.
+	 */
+	const char *cpu_name;
+	const struct device_node *cpu_of_node;
+	/*
+	 * You MAY specify the DAI name of the CPU DAI. If this information is
+	 * omitted, the CPU-side DAI is matched using .cpu_name/.cpu_of_node
+	 * only, which only works well when that device exposes a single DAI.
+	 */
 	const char *cpu_dai_name;
-	const struct device_node *cpu_dai_of_node;
+	/*
+	 * You MUST specify the link's codec, either by device name, or by
+	 * DT/OF node, but not both.
+	 */
+	const char *codec_name;
+	const struct device_node *codec_of_node;
+	/* You MUST specify the DAI name within the codec */
 	const char *codec_dai_name;
+	/*
+	 * You MAY specify the link's platform/PCM/DMA driver, either by
+	 * device name, or by DT/OF node, but not both. Some forms of link
+	 * do not need a platform.
+	 */
+	const char *platform_name;
+	const struct device_node *platform_of_node;
 	int be_id;	/* optional ID for machine driver BE identification */
 
 	const struct snd_soc_pcm_stream *params;

commit 07bf84aaf736781a283b1bd36eaa911453b14574
Author: Liam Girdwood <lrg@ti.com>
Date:   Wed Apr 25 12:12:52 2012 +0100

    ASoC: dpcm: Add bespoke trigger()
    
    Some on SoC DSP HW is very tightly coupled with DMA and DAI drivers. It's
    necessary to allow some flexability wrt to PCM operations here so that we
    can define a bespoke DPCM trigger() PCM operation for such HW.
    
    A bespoke DPCM trigger() allows exact ordering and timing of component
    triggering by allowing a component driver to manage the final enable
    and disable configurations without adding extra complexity to other
    component drivers. e.g. The McPDM DAI and ABE are tightly coupled on
    OMAP4 so we have a bespoke trigger to manage the trigger to improve
    performance and reduce complexity when triggering new McPDM BEs.
    
    Signed-off-by: Liam Girdwood <lrg@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 153da5bf2611..c703871f5f65 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -377,6 +377,9 @@ int snd_soc_params_to_bclk(struct snd_pcm_hw_params *parms);
 int snd_soc_set_runtime_hwparams(struct snd_pcm_substream *substream,
 	const struct snd_pcm_hardware *hw);
 
+int snd_soc_platform_trigger(struct snd_pcm_substream *substream,
+		int cmd, struct snd_soc_platform *platform);
+
 /* Jack reporting */
 int snd_soc_jack_new(struct snd_soc_codec *codec, const char *id, int type,
 		     struct snd_soc_jack *jack);
@@ -753,6 +756,7 @@ struct snd_soc_platform_driver {
 	/* platform IO - used for platform DAPM */
 	unsigned int (*read)(struct snd_soc_platform *, unsigned int);
 	int (*write)(struct snd_soc_platform *, unsigned int, unsigned int);
+	int (*bespoke_trigger)(struct snd_pcm_substream *, int);
 };
 
 struct snd_soc_platform {

commit 47c88ffff73d27425be59b34a6d5a91518b5ebed
Author: Liam Girdwood <lrg@ti.com>
Date:   Wed Apr 25 12:12:53 2012 +0100

    ASoC: dpcm: Add API for DAI link substream and runtime lookup
    
    Some component drivers will need to be able to look up their
    DAI link substream and RTD data. Provide a mechanism for this.
    
    Signed-off-by: Liam Girdwood <lrg@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index bbe6a5e1ac12..153da5bf2611 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -362,6 +362,11 @@ int snd_soc_platform_write(struct snd_soc_platform *platform,
 					unsigned int reg, unsigned int val);
 int soc_new_pcm(struct snd_soc_pcm_runtime *rtd, int num);
 
+struct snd_pcm_substream *snd_soc_get_dai_substream(struct snd_soc_card *card,
+		const char *dai_link, int stream);
+struct snd_soc_pcm_runtime *snd_soc_get_pcm_runtime(struct snd_soc_card *card,
+		const char *dai_link);
+
 /* Utility functions to get clock rates from various things */
 int snd_soc_calc_frame_size(int sample_size, int channels, int tdm_slots);
 int snd_soc_params_to_frame_size(struct snd_pcm_hw_params *params);

commit f86dcef87b771935c223334324a93c1d71f7a84c
Author: Liam Girdwood <lrg@ti.com>
Date:   Wed Apr 25 12:12:50 2012 +0100

    ASoC: dpcm: Add debugFS support for DPCM
    
    Add debugFS files for DPCM link management information.
    
    Signed-off-by: Liam Girdwood <lrg@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 78aec854b6a1..bbe6a5e1ac12 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -957,6 +957,10 @@ struct snd_soc_pcm_runtime {
 	struct snd_soc_dai *cpu_dai;
 
 	struct delayed_work delayed_work;
+#ifdef CONFIG_DEBUG_FS
+	struct dentry *debugfs_dpcm_root;
+	struct dentry *debugfs_dpcm_state;
+#endif
 };
 
 /* mixer control */

commit 01d7584cd2e5a93a2b959c9dddaa0d93ec205404
Author: Liam Girdwood <lrg@ti.com>
Date:   Wed Apr 25 12:12:49 2012 +0100

    ASoC: dpcm: Add Dynamic PCM core operations.
    
    The Dynamic PCM core allows digital audio data to be dynamically
    routed between different ALSA PCMs and DAI links on SoC CPUs with
    on chip DSP devices. e.g. audio data could be played on pcm:0,0 and
    routed to any (or all) SoC DAI links.
    
    Dynamic PCM introduces the concept of Front End (FE) PCMs and Back
    End (BE) PCMs. The FE PCMs are normal ALSA PCM devices except that
    they can dynamically route digital audio data to any supported BE
    PCM. A BE PCM has no ALSA device, but represents a DAI link and it's
    substream and audio HW parameters.
    
    e.g. pcm:0,0 routing digital data to 2 external codecs.
    
    FE pcm:0,0  ----> BE (McBSP.0) ----> CODEC 0
                 +--> BE (McPDM.0) ----> CODEC 1
    
    e.g. pcm:0,0 and pcm:0,1 routing digital data to 1 external codec.
    
    FE pcm:0,0 ---
                 +--> BE (McBSP.0) ----> CODEC
    FE pcm:0,1 ---
    
    The digital audio routing is controlled by the usual ALSA method
    of mixer kcontrols. Dynamic PCM uses a DAPM graph to work out the
    routing based upon the mixer settings and configures the BE PCMs
    based on routing and the FE HW params.
    
    DPCM is designed so that most ASoC component drivers will need no
    modification at all. It's intended that existing CODEC, DAI and
    platform drivers can be used in DPCM based audio devices without
    any changes. However, there will be some cases where minor changes
    are required (e.g. for very tightly coupled HW) and there are
    helpers to support this too.
    
    Somethimes the HW params of a FE and BE do not match or are
    incompatible, so in these cases the machine driver can reconfigure
    any hw_params and make any DSP perform sample rate / format conversion.
    
    This patch adds the core DPCM code and contains :-
    
     o The FE and BE PCM operations.
     o FE and BE DAI link support.
     o FE and BE PCM creation.
     o BE support API.
     o BE and FE link management.
    
    Signed-off-by: Liam Girdwood <lrg@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 1f38aa1653c8..78aec854b6a1 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -287,6 +287,7 @@ struct snd_soc_jack_zone;
 struct snd_soc_jack_pin;
 struct snd_soc_cache_ops;
 #include <sound/soc-dapm.h>
+#include <sound/soc-dpcm.h>
 
 #ifdef CONFIG_GPIOLIB
 struct snd_soc_jack_gpio;
@@ -782,23 +783,36 @@ struct snd_soc_dai_link {
 	const char *cpu_dai_name;
 	const struct device_node *cpu_dai_of_node;
 	const char *codec_dai_name;
+	int be_id;	/* optional ID for machine driver BE identification */
 
 	const struct snd_soc_pcm_stream *params;
 
 	unsigned int dai_fmt;           /* format to set on init */
 
+	enum snd_soc_dpcm_trigger trigger[2]; /* trigger type for DPCM */
+
 	/* Keep DAI active over suspend */
 	unsigned int ignore_suspend:1;
 
 	/* Symmetry requirements */
 	unsigned int symmetric_rates:1;
 
+	/* Do not create a PCM for this DAI link (Backend link) */
+	unsigned int no_pcm:1;
+
+	/* This DAI link can route to other DAI links at runtime (Frontend)*/
+	unsigned int dynamic:1;
+
 	/* pmdown_time is ignored at stop */
 	unsigned int ignore_pmdown_time:1;
 
 	/* codec/machine specific init - e.g. add machine controls */
 	int (*init)(struct snd_soc_pcm_runtime *rtd);
 
+	/* optional hw_params re-writing for BE and FE sync */
+	int (*be_hw_params_fixup)(struct snd_soc_pcm_runtime *rtd,
+			struct snd_pcm_hw_params *params);
+
 	/* machine stream operations */
 	struct snd_soc_ops *ops;
 };
@@ -930,6 +944,9 @@ struct snd_soc_pcm_runtime {
 
 	unsigned int dev_registered:1;
 
+	/* Dynamic PCM BE runtime data */
+	struct snd_soc_dpcm_runtime dpcm[2];
+
 	long pmdown_time;
 
 	/* runtime devices */

commit dd7b10b30c40dddb9750926d78cfe89c0cd8434d
Author: Kristoffer KARLSSON <kristoffer.karlsson@stericsson.com>
Date:   Fri Apr 20 11:32:44 2012 +0200

    ASoC: core: Add strobe control
    
    Added support for a control that strobes a bit in
    a register to high then back to low (or the inverse).
    
    This is typically useful for hardware that requires
    strobing a singe bit to trigger some functionality
    and where exposing the bit in a normal single control
    would require the user to first manually set then
    again unset the bit again for the strobe to trigger.
    
    Added convenience macro.
    
    SOC_SINGLE_STROBE
    
    Added accessor implementations.
    
    snd_soc_get_strobe
    snd_soc_put_strobe
    
    Signed-off-by: Kristoffer KARLSSON <kristoffer.karlsson@stericsson.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index c0656b771c38..1f38aa1653c8 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -219,6 +219,10 @@
 		{.regbase = xregbase, .regcount = xregcount, .nbits = xnbits, \
 		.invert = xinvert, .min = xmin, .max = xmax} }
 
+#define SOC_SINGLE_STROBE(xname, xreg, xshift, xinvert) \
+	SOC_SINGLE_EXT(xname, xreg, xshift, 1, xinvert, \
+		snd_soc_get_strobe, snd_soc_put_strobe)
+
 /*
  * Simplified versions of above macros, declaring a struct and calculating
  * ARRAY_SIZE internally
@@ -461,6 +465,10 @@ int snd_soc_get_xr_sx(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
 int snd_soc_put_xr_sx(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
+int snd_soc_get_strobe(struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_value *ucontrol);
+int snd_soc_put_strobe(struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_value *ucontrol);
 
 /**
  * struct snd_soc_reg_access - Describes whether a given register is

commit 4183eed288f31c3b9142476915e842f879f36b8e
Author: Kristoffer KARLSSON <kristoffer.karlsson@stericsson.com>
Date:   Fri Apr 20 11:32:13 2012 +0200

    ASoC: core: Add signed multi register control
    
    Added control type that can span multiple consecutive codec registers
    forming a single signed value in a MSB/LSB manner.
    The control dynamically adjusts to the register word size configured
    in driver.
    
    Added convenience macro.
    
    SOC_SINGLE_XR_SX
    
    Added accessor implementations.
    
    snd_soc_info_xr_sx
    snd_soc_get_xr_sx
    snd_soc_put_xr_sx
    
    Signed-off-by: Kristoffer KARLSSON <kristoffer.karlsson@stericsson.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index afc3204d389b..c0656b771c38 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -210,6 +210,15 @@
 		{.base = xbase, .num_regs = xregs,	      \
 		 .mask = xmask }) }
 
+#define SOC_SINGLE_XR_SX(xname, xregbase, xregcount, xnbits, \
+		xmin, xmax, xinvert) \
+{	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname), \
+	.info = snd_soc_info_xr_sx, .get = snd_soc_get_xr_sx, \
+	.put = snd_soc_put_xr_sx, \
+	.private_value = (unsigned long)&(struct soc_mreg_control) \
+		{.regbase = xregbase, .regcount = xregcount, .nbits = xnbits, \
+		.invert = xinvert, .min = xmin, .max = xmax} }
+
 /*
  * Simplified versions of above macros, declaring a struct and calculating
  * ARRAY_SIZE internally
@@ -446,7 +455,12 @@ int snd_soc_bytes_get(struct snd_kcontrol *kcontrol,
 		      struct snd_ctl_elem_value *ucontrol);
 int snd_soc_bytes_put(struct snd_kcontrol *kcontrol,
 		      struct snd_ctl_elem_value *ucontrol);
-
+int snd_soc_info_xr_sx(struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_info *uinfo);
+int snd_soc_get_xr_sx(struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_value *ucontrol);
+int snd_soc_put_xr_sx(struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_value *ucontrol);
 
 /**
  * struct snd_soc_reg_access - Describes whether a given register is
@@ -932,6 +946,12 @@ struct soc_bytes {
 	u32 mask;
 };
 
+/* multi register control */
+struct soc_mreg_control {
+	long min, max;
+	unsigned int regbase, regcount, nbits, invert;
+};
+
 /* enumerated kcontrol */
 struct soc_enum {
 	unsigned short reg;

commit c74184ed30ecce2a5e9ae9aa22cb5e3942e0c7c7
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Wed Apr 4 22:12:09 2012 +0100

    ASoC: core: Support transparent CODEC<->CODEC DAI links
    
    Rather than having the user half start a stream but avoid any DMA to
    trigger data flow on links which don't pass through the CPU create a
    DAPM route between the two DAI widgets using a hw_params configuration
    provided by the machine driver with the new 'params' member of the
    dai_link struct.  If no configuration is provided in the dai_link then
    use the old style even for CODEC<->CODEC links to avoid breaking
    systems.
    
    This greatly simplifies the userspace usage of such links, making them
    as simple as analogue connections with the stream configuration being
    completely transparent to them.
    
    This is achieved by defining a new dai_link widget type which is created
    when CODECs are linked and triggering the configuration of the link via
    the normal PCM operations from there.  It is expected that the bias
    level callbacks will be used for clock configuration.
    
    Currently only the DAI format, rate and channel count can be configured
    and currently the only DAI operations which can be called are hw_params
    and digital_mute().  This corresponds well to the majority of CODEC
    drivers which only use other callbacks for constraint setting but there
    is obviously much room for extension here.  We can't simply call
    hw_params() on startup as things like the system clocking configuration
    may change at runtime and in future it will be desirable to offer some
    configurability of the link parameters.
    
    At present we are also restricted to a single DAPM link for the entire
    DAI.  Once we have better support for channel mapping it would also be
    desirable to extend this feature so that we can propagate per-channel
    power state over the link.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@ti.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index acb57b834e58..afc3204d389b 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -761,6 +761,8 @@ struct snd_soc_dai_link {
 	const struct device_node *cpu_dai_of_node;
 	const char *codec_dai_name;
 
+	const struct snd_soc_pcm_stream *params;
+
 	unsigned int dai_fmt;           /* format to set on init */
 
 	/* Keep DAI active over suspend */

commit 1d99f2436d0d1c7741d6dfd9d27b5376cdbbca40
Author: Brian Austin <brian.austin@cirrus.com>
Date:   Fri Mar 30 10:43:55 2012 -0500

    ASoC: core: Rework SOC_DOUBLE_R_SX_TLV add SOC_SINGLE_SX_TLV
    
    Some codecs namely Cirrus Logic Codecs have a way of wrapping the dB scale around 0dB without 0dB being in the middle.
    
    Rework of SOC_DOUBLE_R_SX_TLV to be more consistent with other asoc tlv macros.
    Add single register macro : SOC_SINGLE_SX_TLV.
    Use snd_soc_info_volsw for .info
    Use snd_soc_get_volsw_sx, snd_soc_put_volsw_sx for single and double.
    
    kcontrols for CS42L51 and CS42L73 are adjusted to these new TLV Macros.
    
    The max value is determined by: (number of steps) +1 for 0dB +max from codec datasheet.
    
    Signed-off-by: Brian Austin <brian.austin@cirrus.com>
    Acked-by: Liam Girdwood <lrg@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 9e238fa2eb17..acb57b834e58 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -55,6 +55,18 @@
 	.info = snd_soc_info_volsw, .get = snd_soc_get_volsw,\
 	.put = snd_soc_put_volsw, \
 	.private_value =  SOC_SINGLE_VALUE(reg, shift, max, invert) }
+#define SOC_SINGLE_SX_TLV(xname, xreg, xshift, xmin, xmax, tlv_array) \
+{       .iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
+	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ | \
+	SNDRV_CTL_ELEM_ACCESS_READWRITE, \
+	.tlv.p  = (tlv_array),\
+	.info = snd_soc_info_volsw, \
+	.get = snd_soc_get_volsw_sx,\
+	.put = snd_soc_put_volsw_sx, \
+	.private_value = (unsigned long)&(struct soc_mixer_control) \
+		{.reg = xreg, .rreg = xreg, \
+		.shift = xshift, .rshift = xshift, \
+		.max = xmax, .min = xmin} }
 #define SOC_DOUBLE(xname, reg, shift_left, shift_right, max, invert) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname),\
 	.info = snd_soc_info_volsw, .get = snd_soc_get_volsw, \
@@ -85,6 +97,18 @@
 	.get = snd_soc_get_volsw, .put = snd_soc_put_volsw, \
 	.private_value = SOC_DOUBLE_R_VALUE(reg_left, reg_right, xshift, \
 					    xmax, xinvert) }
+#define SOC_DOUBLE_R_SX_TLV(xname, xreg, xrreg, xshift, xmin, xmax, tlv_array) \
+{       .iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname), \
+	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ | \
+	SNDRV_CTL_ELEM_ACCESS_READWRITE, \
+	.tlv.p  = (tlv_array), \
+	.info = snd_soc_info_volsw, \
+	.get = snd_soc_get_volsw_sx, \
+	.put = snd_soc_put_volsw_sx, \
+	.private_value = (unsigned long)&(struct soc_mixer_control) \
+		{.reg = xreg, .rreg = xrreg, \
+		.shift = xshift, .rshift = xshift, \
+		.max = xmax, .min = xmin} }
 #define SOC_DOUBLE_S8_TLV(xname, xreg, xmin, xmax, tlv_array) \
 {	.iface  = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname), \
 	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ | \
@@ -171,20 +195,6 @@
 	.get = xhandler_get, .put = xhandler_put, \
 	.private_value = (unsigned long)&xenum }
 
-#define SOC_DOUBLE_R_SX_TLV(xname, xreg_left, xreg_right, xshift,\
-		xmin, xmax, tlv_array) \
-{	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname), \
-	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ | \
-		  SNDRV_CTL_ELEM_ACCESS_READWRITE, \
-	.tlv.p = (tlv_array), \
-	.info = snd_soc_info_volsw_2r_sx, \
-	.get = snd_soc_get_volsw_2r_sx, \
-	.put = snd_soc_put_volsw_2r_sx, \
-	.private_value = (unsigned long)&(struct soc_mixer_control) \
-		{.reg = xreg_left, \
-		 .rreg = xreg_right, .shift = xshift, \
-		 .min = xmin, .max = xmax} }
-
 #define SND_SOC_BYTES(xname, xbase, xregs)		      \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname,   \
 	.info = snd_soc_bytes_info, .get = snd_soc_bytes_get, \
@@ -418,6 +428,10 @@ int snd_soc_put_volsw(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
 #define snd_soc_get_volsw_2r snd_soc_get_volsw
 #define snd_soc_put_volsw_2r snd_soc_put_volsw
+int snd_soc_get_volsw_sx(struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_value *ucontrol);
+int snd_soc_put_volsw_sx(struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_value *ucontrol);
 int snd_soc_info_volsw_s8(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_info *uinfo);
 int snd_soc_get_volsw_s8(struct snd_kcontrol *kcontrol,
@@ -426,12 +440,6 @@ int snd_soc_put_volsw_s8(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
 int snd_soc_limit_volume(struct snd_soc_codec *codec,
 	const char *name, int max);
-int snd_soc_info_volsw_2r_sx(struct snd_kcontrol *kcontrol,
-	struct snd_ctl_elem_info *uinfo);
-int snd_soc_get_volsw_2r_sx(struct snd_kcontrol *kcontrol,
-	struct snd_ctl_elem_value *ucontrol);
-int snd_soc_put_volsw_2r_sx(struct snd_kcontrol *kcontrol,
-	struct snd_ctl_elem_value *ucontrol);
 int snd_soc_bytes_info(struct snd_kcontrol *kcontrol,
 		       struct snd_ctl_elem_info *uinfo);
 int snd_soc_bytes_get(struct snd_kcontrol *kcontrol,

commit b19e6e7b763c7144bfe2ceccf988b64d66d6dd0a
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Wed Mar 14 21:18:39 2012 +0000

    ASoC: core: Use driver core probe deferral
    
    In version 3.4 the driver core acquired probe deferral which is a core way
    of doing essentially the same thing as ASoC has been doing since forever
    to make sure that all the devices needed to make up the card are present
    without needing open coding in the subsystem.
    
    Make basic use of this probe deferral mechanism for the cards, removing the
    need to handle partially instantiated cards. We should be able to remove
    even more code than this, though some of the checks we're currently doing
    should stay since they're about things like suppressing unneeded DAPM runs
    rather than deferring probes.
    
    In order to avoid robustness issues with our teardown paths (which do need
    quite a bit of TLC) add a check for aux_devs prior to attempting to set
    things up, this means that we've got a reasonable idea that everything will
    be there before we start. As with the removal of partial instantiation
    support more work will be needed to make this work neatly.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@ti.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index b8163ddf94d2..9e238fa2eb17 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -896,7 +896,6 @@ struct snd_soc_pcm_runtime {
 	enum snd_soc_pcm_subclass pcm_subclass;
 	struct snd_pcm_ops ops;
 
-	unsigned int complete:1;
 	unsigned int dev_registered:1;
 
 	long pmdown_time;

commit 2667b4b8bef8598917adb1b4af46ed2b7d4fa0d7
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon Mar 12 14:07:49 2012 +0000

    ASoC: jack: Push locking for jacks down to the jack
    
    Currently operations on jack reporting take the CODEC mutex both to protect
    the current jack status and also to protect the DAPM run which is triggered
    on status updates. Since the addition of a DAPM-specific lock we no longer
    need to worry about locking DAPM as it has its own finer grained lock so
    create a per jack lock to take care of the jack status.
    
    This is both cleaner where the jack isn't specifically associated with a
    CODEC and clearer as it's much more obvious what the lock is protecting.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 098998743969..b8163ddf94d2 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -518,6 +518,7 @@ struct snd_soc_jack_gpio {
 #endif
 
 struct snd_soc_jack {
+	struct mutex mutex;
 	struct snd_jack *jack;
 	struct snd_soc_codec *codec;
 	struct list_head pins;

commit 6874a918de503997164e76c540eaf44776fd5296
Author: Liam Girdwood <lrg@ti.com>
Date:   Fri Mar 9 12:02:07 2012 +0000

    ASoC: core: Rename card mutex subclass to better align with usage
    
    Change SND_SOC_CARD_CLASS_PCM to SND_SOC_CARD_CLASS_RUNTIME to better
    describe all uses for this mutex subclass and align with DAPM too.
    
    Signed-off-by: Liam Girdwood <lrg@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 66fd9bc9789d..098998743969 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -289,8 +289,8 @@ enum snd_soc_pcm_subclass {
 };
 
 enum snd_soc_card_subclass {
-	SND_SOC_CARD_CLASS_INIT	= 0,
-	SND_SOC_CARD_CLASS_PCM	= 1,
+	SND_SOC_CARD_CLASS_INIT		= 0,
+	SND_SOC_CARD_CLASS_RUNTIME	= 1,
 };
 
 int snd_soc_codec_set_sysclk(struct snd_soc_codec *codec, int clk_id,

commit a73fb2df01866b772a48fab93401fe3edbe0b38d
Author: Liam Girdwood <lrg@ti.com>
Date:   Wed Mar 7 10:38:26 2012 +0000

    ASoC: dapm: Use DAPM mutex for DAPM ops instead of codec mutex
    
    It has now become necessary to use a DAPM mutex instead of the codec
    mutex to lock the DAPM operations. This is due to the recent multi
    component support and forth coming Dynamic PCM updates.
    
    Currently we lock DAPM operations with the codec mutex of the calling
    RTD context. However, DAPM operations can span the whole card context
    and all components.
    
    This patch updates the DAPM operations that use the codec mutex to
    now use the DAPM mutex PCM subclass for all DAPM ops.
    
    We also add a mutex subclass for DAPM init and PCM operations.
    
    Signed-off-by: Liam Girdwood <lrg@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 70de2f82e872..66fd9bc9789d 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -805,6 +805,7 @@ struct snd_soc_card {
 
 	struct list_head list;
 	struct mutex mutex;
+	struct mutex dapm_mutex;
 
 	bool instantiated;
 

commit 01b9d99a1f45befa604543ead29f44fdb0878844
Author: Liam Girdwood <lrg@ti.com>
Date:   Wed Mar 7 10:38:25 2012 +0000

    ASoC: core: Add card mutex locking subclasses
    
    This is the first part of a change that is intended to improve
    ASoC locking protection for DAPM and PCM operations.
    
    This part of the series adds a mutex class for the soc_card mutex. The
    SND_SOC_CARD_CLASS_INIT class is used for card initialisation only whilst the
    SND_SOC_CARD_CLASS_PCM class is used for the forth coming Dynamic
    PCM operations. The new mutex classes are required otherwise we will see a false
    positive mutex deadlock warning between the card initialisation and the PCM
    operations (something that would never deadlock in real life).
    
    Signed-off-by: Liam Girdwood <lrg@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 2ebf7877c148..70de2f82e872 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -288,6 +288,11 @@ enum snd_soc_pcm_subclass {
 	SND_SOC_PCM_CLASS_BE	= 1,
 };
 
+enum snd_soc_card_subclass {
+	SND_SOC_CARD_CLASS_INIT	= 0,
+	SND_SOC_CARD_CLASS_PCM	= 1,
+};
+
 int snd_soc_codec_set_sysclk(struct snd_soc_codec *codec, int clk_id,
 			     int source, unsigned int freq, int dir);
 int snd_soc_codec_set_pll(struct snd_soc_codec *codec, int pll_id, int source,

commit cc22d37e7f5e1745658760660f03793913f43e49
Author: Liam Girdwood <lrg@ti.com>
Date:   Tue Mar 6 18:16:18 2012 +0000

    ASoC: core: Add platform component mutex
    
    Add mutex support for platform IO operations. e.g. can be used
    for platform DAPM widget IO ops.
    
    Signed-off-by: Liam Girdwood <lrg@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 82bd773f8ab1..2ebf7877c148 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -718,6 +718,7 @@ struct snd_soc_platform {
 	int id;
 	struct device *dev;
 	struct snd_soc_platform_driver *driver;
+	struct mutex mutex;
 
 	unsigned int suspended:1; /* platform is suspended */
 	unsigned int probed:1;

commit f831b055ececb3172f7fe498db5ca1fb43ff644d
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Fri Feb 17 16:20:33 2012 -0800

    ASoC: core: Add support for masking out parts of coefficient blocks
    
    Chip designers frequently include things like the enable and disable
    controls for algorithms in the register blocks which also hold the
    coefficients. Since it's desirable to split out the enable/disable
    control from userspace the plain SND_SOC_BYTES() isn't optimal for
    these devices.
    
    Add a SND_SOC_BYTES_MASK() which allows a bitmask from the first word
    of the block to be excluded from the control. This supports the needs
    of devices I've looked at and lets us have a reasonably simple API.
    Further controls can be added in future if that's needed.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@ti.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 3e9cae001eab..82bd773f8ab1 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -192,6 +192,14 @@
 		((unsigned long)&(struct soc_bytes)           \
 		{.base = xbase, .num_regs = xregs }) }
 
+#define SND_SOC_BYTES_MASK(xname, xbase, xregs, xmask)	      \
+{	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname,   \
+	.info = snd_soc_bytes_info, .get = snd_soc_bytes_get, \
+	.put = snd_soc_bytes_put, .private_value =	      \
+		((unsigned long)&(struct soc_bytes)           \
+		{.base = xbase, .num_regs = xregs,	      \
+		 .mask = xmask }) }
+
 /*
  * Simplified versions of above macros, declaring a struct and calculating
  * ARRAY_SIZE internally
@@ -904,6 +912,7 @@ struct soc_mixer_control {
 struct soc_bytes {
 	int base;
 	int num_regs;
+	u32 mask;
 };
 
 /* enumerated kcontrol */

commit 71d08516b80638a69d5efea4e8cb832c053f9dd9
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon Oct 10 18:31:26 2011 +0100

    ASoC: core: Add SND_SOC_BYTES control for coefficient blocks
    
    Allow devices to export blocks of registers to the application layer,
    intended for use for reading and writing coefficient data which can't
    usefully be worked with by the kernel at runtime (for example, due to
    requiring complex and expensive calculations or being the results of
    callibration procedures). Currently drivers are using platform data to
    provide configurations for coefficient blocks which isn't at all
    convenient for runtime management or configuration development.
    
    Currently only devices using regmap are supported, an error will be
    generated for any attempt to work with a byte control on a non-regmap
    device. There's no fundamental block to other devices so support could
    be added if required.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@ti.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 1e16d6e3f2a8..3e9cae001eab 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -185,6 +185,12 @@
 		 .rreg = xreg_right, .shift = xshift, \
 		 .min = xmin, .max = xmax} }
 
+#define SND_SOC_BYTES(xname, xbase, xregs)		      \
+{	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname,   \
+	.info = snd_soc_bytes_info, .get = snd_soc_bytes_get, \
+	.put = snd_soc_bytes_put, .private_value =	      \
+		((unsigned long)&(struct soc_bytes)           \
+		{.base = xbase, .num_regs = xregs }) }
 
 /*
  * Simplified versions of above macros, declaring a struct and calculating
@@ -413,6 +419,13 @@ int snd_soc_get_volsw_2r_sx(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
 int snd_soc_put_volsw_2r_sx(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
+int snd_soc_bytes_info(struct snd_kcontrol *kcontrol,
+		       struct snd_ctl_elem_info *uinfo);
+int snd_soc_bytes_get(struct snd_kcontrol *kcontrol,
+		      struct snd_ctl_elem_value *ucontrol);
+int snd_soc_bytes_put(struct snd_kcontrol *kcontrol,
+		      struct snd_ctl_elem_value *ucontrol);
+
 
 /**
  * struct snd_soc_reg_access - Describes whether a given register is
@@ -888,6 +901,11 @@ struct soc_mixer_control {
 	unsigned int reg, rreg, shift, rshift, invert;
 };
 
+struct soc_bytes {
+	int base;
+	int num_regs;
+};
+
 /* enumerated kcontrol */
 struct soc_enum {
 	unsigned short reg;

commit 3056557f3b2387d4ac99ca8af14956cd2bf003c2
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Thu Feb 16 17:07:42 2012 -0800

    ASoC: dapm: Constify lots of names that are never modified
    
    Neater and avoids warnings when used in other places where const strings
    are desired.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@ti.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 8fa4dcaa096b..1e16d6e3f2a8 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -366,7 +366,7 @@ void snd_soc_free_ac97_codec(struct snd_soc_codec *codec);
  *Controls
  */
 struct snd_kcontrol *snd_soc_cnew(const struct snd_kcontrol_new *_template,
-				  void *data, char *long_name,
+				  void *data, const char *long_name,
 				  const char *prefix);
 int snd_soc_add_codec_controls(struct snd_soc_codec *codec,
 	const struct snd_kcontrol_new *controls, int num_controls);

commit 731f1ab290ca1e59430ab222290d379222eb38a5
Author: Sebastien Guiriec <s-guiriec@ti.com>
Date:   Wed Feb 15 15:25:31 2012 +0000

    ASoC: core: add platform DAPM debugfs support
    
    Allow platform widgets to be visible in debugfs like codec widgets.
    
    Signed-off-by: Liam Girdwood <lrg@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 4f67e01f0e2c..8fa4dcaa096b 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -706,6 +706,11 @@ struct snd_soc_platform {
 	struct list_head card_list;
 
 	struct snd_soc_dapm_context dapm;
+
+#ifdef CONFIG_DEBUG_FS
+	struct dentry *debugfs_platform_root;
+	struct dentry *debugfs_dapm;
+#endif
 };
 
 struct snd_soc_dai_link {

commit 5124e69e2b31f4ded7ed9ac47b18804b7847f677
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Wed Feb 8 13:20:50 2012 +0000

    ASoC: core: Allow CODECs to set ignore_pmdown_time in the driver struct
    
    This is usually not a use case dependant flag anyway.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@ti.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 9348bed86b1e..4f67e01f0e2c 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -643,6 +643,8 @@ struct snd_soc_codec_driver {
 	/* codec stream completion event */
 	int (*stream_event)(struct snd_soc_dapm_context *dapm, int event);
 
+	bool ignore_pmdown_time;  /* Doesn't benefit from pmdown delay */
+
 	/* probe ordering - for components with runtime dependencies */
 	int probe_order;
 	int remove_order;

commit 022658beab5581ecc1d325d60857f2fc464da22f
Author: Liam Girdwood <lrg@ti.com>
Date:   Fri Feb 3 17:43:09 2012 +0000

    ASoC: core: Add support for DAI and machine kcontrols.
    
    Currently ASoC can only add kcontrols using codec and platform component device
    handles. It's also desirable to add kcontrols for DAIs (i.e. McBSP) and for
    SoC card machine drivers too. This allows the kcontrol to have a direct handle to
    the parent ASoC component DAI/SoC Card/Platform/Codec device and hence easily
    get it's private data.
    
    This change makes snd_soc_add_controls() static and wraps it in the folowing
    calls (card and dai are new) :-
    
    snd_soc_add_card_controls()
    snd_soc_add_codec_controls()
    snd_soc_add_dai_controls()
    snd_soc_add_platform_controls()
    
    This patch also does a lot of small mechanical changes in individual codec drivers
    to replace snd_soc_add_controls() with snd_soc_add_codec_controls().
    
    It also updates the McBSP DAI driver to use snd_soc_add_dai_controls().
    
    Finally, it updates the existing machine drivers that register controls to either :-
    
    1) Use snd_soc_add_card_controls() where no direct codec control is required.
    2) Use snd_soc_add_codec_controls() where there is direct codec control.
    
    In the case of 1) above we also update the machine drivers to get the correct
    component data pointers from the kcontrol (rather than getting the machine pointer
    via the codec pointer).
    
    Signed-off-by: Liam Girdwood <lrg@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 2f687edd4fde..9348bed86b1e 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -368,10 +368,14 @@ void snd_soc_free_ac97_codec(struct snd_soc_codec *codec);
 struct snd_kcontrol *snd_soc_cnew(const struct snd_kcontrol_new *_template,
 				  void *data, char *long_name,
 				  const char *prefix);
-int snd_soc_add_controls(struct snd_soc_codec *codec,
+int snd_soc_add_codec_controls(struct snd_soc_codec *codec,
 	const struct snd_kcontrol_new *controls, int num_controls);
 int snd_soc_add_platform_controls(struct snd_soc_platform *platform,
 	const struct snd_kcontrol_new *controls, int num_controls);
+int snd_soc_add_card_controls(struct snd_soc_card *soc_card,
+	const struct snd_kcontrol_new *controls, int num_controls);
+int snd_soc_add_dai_controls(struct snd_soc_dai *dai,
+	const struct snd_kcontrol_new *controls, int num_controls);
 int snd_soc_info_enum_double(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_info *uinfo);
 int snd_soc_info_enum_ext(struct snd_kcontrol *kcontrol,

commit 8a713da8d1ce9ceaf738b32e2b24f22d4432f886
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Sat Dec 3 12:33:55 2011 +0000

    ASoC: Use regmap update bits operation for drivers using regmap
    
    If a driver is using regmap directly ensure that we're coherent with
    non-ASoC register updates by using the regmap API directly to do our
    read/modify/write cycles. This will bypass the ASoC cache but drivers
    using regmap directly should not be using the ASoC cache.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 55381fca6e0d..2f687edd4fde 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -560,6 +560,7 @@ struct snd_soc_codec {
 	unsigned int ac97_created:1; /* Codec has been created by SoC */
 	unsigned int sysfs_registered:1; /* codec has been sysfs registered */
 	unsigned int cache_init:1; /* codec cache has been initialized */
+	unsigned int using_regmap:1; /* using regmap access */
 	u32 cache_only;  /* Suppress writes to hardware */
 	u32 cache_sync; /* Cache needs to be synced to hardware */
 

commit 58ba9b25454fe9b6ded804f69cb7ed4500b685fc
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon Jan 16 18:38:51 2012 +0000

    ASoC: Allow drivers to specify how many bits are significant on a DAI
    
    Most devices accept data in formats that don't correspond directly to
    their internal format. ALSA allows us to set a msbits constraint which
    tells userspace about this in case it finds it useful (for example, in
    order to avoid wasting effort dithering bits that will be ignored when
    raising the sample size of data) so provide a mechanism for drivers to
    specify the number of bits that are actually significant on a DAI and
    add the appropriate constraints along with all the others.
    
    This is done slightly awkwardly as the constraint is specified per sample
    size - we loop over every possible sample size, including ones that the
    device doesn't support and including ones that have fewer bits than are
    actually used, but this is harmless as the upper layers do the right thing
    in these cases.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@ti.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 0992dff55959..55381fca6e0d 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -505,6 +505,7 @@ struct snd_soc_pcm_stream {
 	unsigned int rate_max;		/* max rate */
 	unsigned int channels_min;	/* min channels */
 	unsigned int channels_max;	/* max channels */
+	unsigned int sig_bits;		/* number of bits of content */
 };
 
 /* SoC audio ops */

commit 36ae1a96c4dcb0f6581d595cc5d43cf3a7e648c7
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Fri Jan 6 17:12:45 2012 -0800

    ASoC: Dynamically allocate the rtd device for a non-empty release()
    
    The device model needs a release() function so it can free devices when
    they become dereferenced.  Do that for rtds.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index f75d1ccc5c58..0992dff55959 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -847,7 +847,7 @@ struct snd_soc_card {
 
 /* SoC machine DAI configuration, glues a codec and cpu DAI together */
 struct snd_soc_pcm_runtime {
-	struct device dev;
+	struct device *dev;
 	struct snd_soc_card *card;
 	struct snd_soc_dai_link *dai_link;
 	struct mutex pcm_mutex;
@@ -933,12 +933,12 @@ static inline void *snd_soc_platform_get_drvdata(struct snd_soc_platform *platfo
 static inline void snd_soc_pcm_set_drvdata(struct snd_soc_pcm_runtime *rtd,
 		void *data)
 {
-	dev_set_drvdata(&rtd->dev, data);
+	dev_set_drvdata(rtd->dev, data);
 }
 
 static inline void *snd_soc_pcm_get_drvdata(struct snd_soc_pcm_runtime *rtd)
 {
-	return dev_get_drvdata(&rtd->dev);
+	return dev_get_drvdata(rtd->dev);
 }
 
 static inline void snd_soc_initialize_card_lists(struct snd_soc_card *card)

commit 354a21423d09c2a6afe0fcea9dbbda9cdada6e45
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Thu Dec 22 12:16:39 2011 +0000

    ASoC: Declare soc_new_pcm() properly
    
    Ensure that everything is seeing the same declaration by moving it to
    a header file rather than putting the declaration in soc-core.c
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@ti.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 8391b0ec217e..f75d1ccc5c58 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -317,6 +317,7 @@ int snd_soc_platform_read(struct snd_soc_platform *platform,
 					unsigned int reg);
 int snd_soc_platform_write(struct snd_soc_platform *platform,
 					unsigned int reg, unsigned int val);
+int soc_new_pcm(struct snd_soc_pcm_runtime *rtd, int num);
 
 /* Utility functions to get clock rates from various things */
 int snd_soc_calc_frame_size(int sample_size, int channels, int tdm_slots);

commit 5a5049637cf08c4c17805be679c19544bb27fb92
Author: Stephen Warren <swarren@nvidia.com>
Date:   Wed Dec 21 10:40:59 2011 -0700

    ASoC: Allow DAI links to be specified using device tree nodes
    
    DAI link endpoints and platform (DMA) devices are currently specified
    by name. When instantiating sound cards from device tree, it may be more
    convenient to refer to these devices by phandle in the device tree, and
    for code to describe DAI links using the "struct device_node *"
    ("of_node") those phandles map to.
    
    This change adds new fields to snd_soc_dai_link which can "name" devices
    using of_node, enhances soc_bind_dai_link() to allow binding based on
    of_node, and enhances snd_soc_register_card() to ensure that illegal
    combinations of name and of_node are not used.
    
    Signed-off-by: Stephen Warren <swarren@nvidia.com>
    Acked-by: Liam Girdwood <lrg@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index db8acd299043..8391b0ec217e 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -231,6 +231,7 @@ enum snd_soc_bias_level {
 	SND_SOC_BIAS_ON = 3,
 };
 
+struct device_node;
 struct snd_jack;
 struct snd_soc_card;
 struct snd_soc_pcm_stream;
@@ -703,8 +704,11 @@ struct snd_soc_dai_link {
 	const char *name;			/* Codec name */
 	const char *stream_name;		/* Stream name */
 	const char *codec_name;		/* for multi-codec */
+	const struct device_node *codec_of_node;
 	const char *platform_name;	/* for multi-platform */
+	const struct device_node *platform_of_node;
 	const char *cpu_dai_name;
+	const struct device_node *cpu_dai_of_node;
 	const char *codec_dai_name;
 
 	unsigned int dai_fmt;           /* format to set on init */

commit a4a54dd5bb1bb01010f46147d6d8b452255957bf
Author: Stephen Warren <swarren@nvidia.com>
Date:   Mon Dec 12 15:55:35 2011 -0700

    ASoC: Add utility to parse DAPM routes from device tree
    
    Implement snd_soc_of_parse_audio_routing(), a utility function that can
    parses a simple DAPM route table from device tree.The machine driver
    specifies the DT property to use, since this is binding-specific.
    
    Signed-off-by: Stephen Warren <swarren@nvidia.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 278f3b892ca6..db8acd299043 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -963,6 +963,8 @@ void snd_soc_util_exit(void);
 
 int snd_soc_of_parse_card_name(struct snd_soc_card *card,
 			       const char *propname);
+int snd_soc_of_parse_audio_routing(struct snd_soc_card *card,
+				   const char *propname);
 
 #include <sound/soc-dai.h>
 

commit bec4fa05e25f7e78ec67df389539acc6bb352a2a
Author: Stephen Warren <swarren@nvidia.com>
Date:   Mon Dec 12 15:55:34 2011 -0700

    ASoC: Add utility to set a card's name from device tree
    
    Implement snd_soc_of_parse_card_name(), a utility function that sets a
    card's name from device tree. The machine driver specifies the DT
    property to use, since this is binding-specific.
    
    Signed-off-by: Stephen Warren <swarren@nvidia.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index a35cf14a8eb1..278f3b892ca6 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -961,6 +961,9 @@ static inline bool snd_soc_volsw_is_stereo(struct soc_mixer_control *mc)
 int snd_soc_util_init(void);
 void snd_soc_util_exit(void);
 
+int snd_soc_of_parse_card_name(struct snd_soc_card *card,
+			       const char *propname);
+
 #include <sound/soc-dai.h>
 
 #ifdef CONFIG_DEBUG_FS

commit 1dfb6efd87d63d2efef6e985770d5dd642f83146
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Thu Nov 10 17:39:40 2011 +0000

    ASoC: Remove rbtree register cache
    
    All users now use regmap directly so delete the ASoC version of the code.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index d9aa66be1994..a35cf14a8eb1 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -266,7 +266,6 @@ enum snd_soc_control_type {
 
 enum snd_soc_compress_type {
 	SND_SOC_FLAT_COMPRESSION = 1,
-	SND_SOC_RBTREE_COMPRESSION
 };
 
 enum snd_soc_pcm_subclass {

commit 84b315ee893676e9a9ce8ac42ab5ef44e2af3ee1
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Fri Dec 2 10:18:28 2011 +0100

    ASoC: Drop unused state parameter from CODEC suspend callback
    
    The existence of this parameter is purely historical. None of the CODEC drivers
    uses it and we always pass in the same value anyway, so it should be safe to
    remove it.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Acked-by: Liam Girdwood <lrg@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 737a4f4b18ff..d9aa66be1994 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -592,8 +592,7 @@ struct snd_soc_codec_driver {
 	/* driver ops */
 	int (*probe)(struct snd_soc_codec *);
 	int (*remove)(struct snd_soc_codec *);
-	int (*suspend)(struct snd_soc_codec *,
-			pm_message_t state);
+	int (*suspend)(struct snd_soc_codec *);
 	int (*resume)(struct snd_soc_codec *);
 
 	/* Default control and setup, added after probe() is run */

commit 1633281b79fd276f1c7c2fb37c3b97da74e42ae5
Author: Stephen Warren <swarren@nvidia.com>
Date:   Wed Nov 23 12:42:04 2011 -0700

    ASoC: Implement fully_routed card property
    
    A card is fully routed if the DAPM route table describes all connections on
    the board.
    
    When a card is fully routed, some operations can be automated by the ASoC
    core. The first, and currently only, such operation is described below, and
    implemented by this patch.
    
    Codecs often have a large number of external pins, and not all of these pins
    will be connected on all board designs. Some machine drivers therefore call
    snd_soc_dapm_nc_pin() for all the unused pins, in order to tell the ASoC core
    never to activate them.
    
    However, when a card is fully routed, the information needed to derive the
    set of unused pins is present in card->dapm_routes. In this case, have
    the ASoC core automatically call snd_soc_dapm_nc_pin() for each unused
    codec pin.
    
    This has been tested with soc/tegra/tegra_wm8903.c and soc/tegra/trimslice.c.
    
    Signed-off-by: Stephen Warren <swarren@nvidia.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index b21b3047e91b..737a4f4b18ff 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -815,6 +815,7 @@ struct snd_soc_card {
 	int num_dapm_widgets;
 	const struct snd_soc_dapm_route *dapm_routes;
 	int num_dapm_routes;
+	bool fully_routed;
 
 	struct work_struct deferred_resume_work;
 

commit c9016a7937122b72d87ff2037664b7bd717d3e4b
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Thu Nov 10 13:06:52 2011 +0000

    ASoC: Remove LZO cache type
    
    There are no current users and new drivers ought to be using the regmap
    API and its cache implementation directly so just delete the ASoC copy.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 02a5c5519f39..b21b3047e91b 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -266,7 +266,6 @@ enum snd_soc_control_type {
 
 enum snd_soc_compress_type {
 	SND_SOC_FLAT_COMPRESSION = 1,
-	SND_SOC_LZO_COMPRESSION,
 	SND_SOC_RBTREE_COMPRESSION
 };
 

commit d66a327ddad647fd1678fd24d9070846737c6834
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Thu Nov 10 11:46:13 2011 +0000

    ASoC: Remove extra space in runtime struct definition
    
    My usual technique for finding definitions is to search for "name {"
    which breaks with the extra space.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 877fcc1e0167..02a5c5519f39 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -843,7 +843,7 @@ struct snd_soc_card {
 };
 
 /* SoC machine DAI configuration, glues a codec and cpu DAI together */
-struct snd_soc_pcm_runtime  {
+struct snd_soc_pcm_runtime {
 	struct device dev;
 	struct snd_soc_card *card;
 	struct snd_soc_dai_link *dai_link;

commit e50fad4f029c36ed85a71fe7413684cfd3c7d78c
Author: ramesh.babu@linux.intel.com <ramesh.babu@linux.intel.com>
Date:   Thu Oct 27 12:12:33 2011 +0530

    ASoC: Allow machines to ignore pmdown_time per-link
    
    With this flag, each dai_link in machine driver can choose
    to ignore pmdown_time during DAPM shut down sequence.
    
    If the ignore_pmdown_time is set, the DAPM for corresponding DAI
    will be executed immediately.
    
    Signed-off-by: Ramesh Babu K V <ramesh.babu@linux.intel.com>
    Signed-off-by: Vinod Koul <vinod.koul@linux.intel.com>
    Acked-by: Liam Girdwood <lrg@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 11cfb5953e06..877fcc1e0167 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -718,6 +718,9 @@ struct snd_soc_dai_link {
 	/* Symmetry requirements */
 	unsigned int symmetric_rates:1;
 
+	/* pmdown_time is ignored at stop */
+	unsigned int ignore_pmdown_time:1;
+
 	/* codec/machine specific init - e.g. add machine controls */
 	int (*init)(struct snd_soc_pcm_runtime *rtd);
 

commit 1d69c5c5de32c355667c105a5fac85c8043128e6
Author: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date:   Fri Oct 14 14:43:33 2011 +0300

    ASoC: core: Add flag to ignore pmdown_time at pcm_close
    
    With this flag codec drivers can indicate that it is desired
    to ignore the pmdown_time for DAPM shutdown sequence when
    playback stream is stopped.
    The DAPM sequence will be executed without delay in this case.
    
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 858291dc08f9..11cfb5953e06 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -578,6 +578,7 @@ struct snd_soc_codec {
 
 	/* dapm */
 	struct snd_soc_dapm_context dapm;
+	unsigned int ignore_pmdown_time:1; /* pmdown_time is ignored at stop */
 
 #ifdef CONFIG_DEBUG_FS
 	struct dentry *debugfs_codec_root;

commit a92f1394a184191d904872e0d3b8ef0c158e5021
Author: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date:   Thu Oct 6 07:43:21 2011 +0300

    ASoC: fix codec breakage caused by the volsw/volsw_2r merger
    
    By accident few places still uses the _2r calls from
    the core.
    This is a quick fix, the drivers using the old callbacks
    going to be changed.
    
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 88ba85a422fb..858291dc08f9 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -393,6 +393,8 @@ int snd_soc_get_volsw(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
 int snd_soc_put_volsw(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
+#define snd_soc_get_volsw_2r snd_soc_get_volsw
+#define snd_soc_put_volsw_2r snd_soc_put_volsw
 int snd_soc_info_volsw_s8(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_info *uinfo);
 int snd_soc_get_volsw_s8(struct snd_kcontrol *kcontrol,

commit 1576a5ff4929a4082307be0c69bb36826aafaad6
Author: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date:   Wed Oct 5 10:29:27 2011 +0300

    ASoC: core: Remove snd_soc_put_volsw_2r definition
    
    We do not have users for snd_soc_put_volsw_2r anymore.
    It can be removed.
    
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 1738c2b6b373..88ba85a422fb 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -393,7 +393,6 @@ int snd_soc_get_volsw(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
 int snd_soc_put_volsw(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
-#define snd_soc_put_volsw_2r snd_soc_put_volsw
 int snd_soc_info_volsw_s8(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_info *uinfo);
 int snd_soc_get_volsw_s8(struct snd_kcontrol *kcontrol,

commit 974815ba4f88f3f12f6f01384e822b23be058323
Author: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date:   Wed Oct 5 10:29:25 2011 +0300

    ASoC: core: Combine snd_soc_put_volsw/put_volsw_2r functions
    
    Handle the put_volsw/put_volsw_2r in one function.
    
    To avoid build breakage in twl6040 keep the
    snd_soc_put_volsw_2r as define, and map it snd_soc_put_volsw.
    
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index e5e424ef3f7d..1738c2b6b373 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -64,7 +64,7 @@
 #define SOC_DOUBLE_R(xname, reg_left, reg_right, xshift, xmax, xinvert) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname), \
 	.info = snd_soc_info_volsw, \
-	.get = snd_soc_get_volsw, .put = snd_soc_put_volsw_2r, \
+	.get = snd_soc_get_volsw, .put = snd_soc_put_volsw, \
 	.private_value = SOC_DOUBLE_R_VALUE(reg_left, reg_right, xshift, \
 					    xmax, xinvert) }
 #define SOC_DOUBLE_TLV(xname, reg, shift_left, shift_right, max, invert, tlv_array) \
@@ -82,7 +82,7 @@
 		 SNDRV_CTL_ELEM_ACCESS_READWRITE,\
 	.tlv.p = (tlv_array), \
 	.info = snd_soc_info_volsw, \
-	.get = snd_soc_get_volsw, .put = snd_soc_put_volsw_2r, \
+	.get = snd_soc_get_volsw, .put = snd_soc_put_volsw, \
 	.private_value = SOC_DOUBLE_R_VALUE(reg_left, reg_right, xshift, \
 					    xmax, xinvert) }
 #define SOC_DOUBLE_S8_TLV(xname, xreg, xmin, xmax, tlv_array) \
@@ -393,8 +393,7 @@ int snd_soc_get_volsw(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
 int snd_soc_put_volsw(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
-int snd_soc_put_volsw_2r(struct snd_kcontrol *kcontrol,
-	struct snd_ctl_elem_value *ucontrol);
+#define snd_soc_put_volsw_2r snd_soc_put_volsw
 int snd_soc_info_volsw_s8(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_info *uinfo);
 int snd_soc_get_volsw_s8(struct snd_kcontrol *kcontrol,

commit f7915d997554d4e2ce123c7a4ddd28e12c2e034c
Author: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date:   Wed Oct 5 10:29:24 2011 +0300

    ASoC: core: Combine snd_soc_get_volsw/get_volsw_2r functions
    
    Handle the get_volsw/get_volsw_2r in one function.
    
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 2d0c1d20a8f6..e5e424ef3f7d 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -64,7 +64,7 @@
 #define SOC_DOUBLE_R(xname, reg_left, reg_right, xshift, xmax, xinvert) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname), \
 	.info = snd_soc_info_volsw, \
-	.get = snd_soc_get_volsw_2r, .put = snd_soc_put_volsw_2r, \
+	.get = snd_soc_get_volsw, .put = snd_soc_put_volsw_2r, \
 	.private_value = SOC_DOUBLE_R_VALUE(reg_left, reg_right, xshift, \
 					    xmax, xinvert) }
 #define SOC_DOUBLE_TLV(xname, reg, shift_left, shift_right, max, invert, tlv_array) \
@@ -82,7 +82,7 @@
 		 SNDRV_CTL_ELEM_ACCESS_READWRITE,\
 	.tlv.p = (tlv_array), \
 	.info = snd_soc_info_volsw, \
-	.get = snd_soc_get_volsw_2r, .put = snd_soc_put_volsw_2r, \
+	.get = snd_soc_get_volsw, .put = snd_soc_put_volsw_2r, \
 	.private_value = SOC_DOUBLE_R_VALUE(reg_left, reg_right, xshift, \
 					    xmax, xinvert) }
 #define SOC_DOUBLE_S8_TLV(xname, xreg, xmin, xmax, tlv_array) \
@@ -393,8 +393,6 @@ int snd_soc_get_volsw(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
 int snd_soc_put_volsw(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
-int snd_soc_get_volsw_2r(struct snd_kcontrol *kcontrol,
-	struct snd_ctl_elem_value *ucontrol);
 int snd_soc_put_volsw_2r(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
 int snd_soc_info_volsw_s8(struct snd_kcontrol *kcontrol,

commit e8f5a10307f7d224df91776033a0b8559a559844
Author: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date:   Wed Oct 5 10:29:23 2011 +0300

    ASoC: core: Combine snd_soc_info_volsw/info_volsw_2r functions
    
    Handle the info_volsw/info_volsw_2r in one function.
    
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 88ff2d899a4d..2d0c1d20a8f6 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -63,7 +63,7 @@
 					  max, invert) }
 #define SOC_DOUBLE_R(xname, reg_left, reg_right, xshift, xmax, xinvert) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname), \
-	.info = snd_soc_info_volsw_2r, \
+	.info = snd_soc_info_volsw, \
 	.get = snd_soc_get_volsw_2r, .put = snd_soc_put_volsw_2r, \
 	.private_value = SOC_DOUBLE_R_VALUE(reg_left, reg_right, xshift, \
 					    xmax, xinvert) }
@@ -81,7 +81,7 @@
 	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ |\
 		 SNDRV_CTL_ELEM_ACCESS_READWRITE,\
 	.tlv.p = (tlv_array), \
-	.info = snd_soc_info_volsw_2r, \
+	.info = snd_soc_info_volsw, \
 	.get = snd_soc_get_volsw_2r, .put = snd_soc_put_volsw_2r, \
 	.private_value = SOC_DOUBLE_R_VALUE(reg_left, reg_right, xshift, \
 					    xmax, xinvert) }
@@ -156,7 +156,7 @@
 	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ | \
 		 SNDRV_CTL_ELEM_ACCESS_READWRITE, \
 	.tlv.p = (tlv_array), \
-	.info = snd_soc_info_volsw_2r, \
+	.info = snd_soc_info_volsw, \
 	.get = xhandler_get, .put = xhandler_put, \
 	.private_value = SOC_DOUBLE_R_VALUE(reg_left, reg_right, xshift, \
 					    xmax, xinvert) }
@@ -393,8 +393,6 @@ int snd_soc_get_volsw(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
 int snd_soc_put_volsw(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
-int snd_soc_info_volsw_2r(struct snd_kcontrol *kcontrol,
-	struct snd_ctl_elem_info *uinfo);
 int snd_soc_get_volsw_2r(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
 int snd_soc_put_volsw_2r(struct snd_kcontrol *kcontrol,

commit 30d86ba47f79d566fffe9ba577caf247d06a3796
Author: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date:   Wed Oct 5 10:29:22 2011 +0300

    ASoC: core: Change SOC_SINGLE/DOUBLE_VALUE representation
    
    SOC_SINGLE/DOUBLE_VALUE is used for mixer controls, where the
    bits are within one register.
    
    Assign .rreg to be the same as .reg for these types.
    
    With this change we can tell if the mixer in question:
    is mono:
    mc->reg == mc->rreg && mc->shift == mc->rshift
    
    is stereo, within single register:
    mc->reg == mc->rreg && mc->shift != mc->rshift
    
    is stereo, in two registers:
    mc->reg != mc->rreg
    
    The patch provide a small inline function to query, if the mixer
    is stereo, or mono.
    
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 8ab1cfed1067..88ff2d899a4d 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -30,8 +30,9 @@
  */
 #define SOC_DOUBLE_VALUE(xreg, shift_left, shift_right, xmax, xinvert) \
 	((unsigned long)&(struct soc_mixer_control) \
-	{.reg = xreg, .shift = shift_left, .rshift = shift_right, \
-	.max = xmax, .platform_max = xmax, .invert = xinvert})
+	{.reg = xreg, .rreg = xreg, .shift = shift_left, \
+	.rshift = shift_right, .max = xmax, .platform_max = xmax, \
+	.invert = xinvert})
 #define SOC_SINGLE_VALUE(xreg, xshift, xmax, xinvert) \
 	SOC_DOUBLE_VALUE(xreg, xshift, xshift, xmax, xinvert)
 #define SOC_SINGLE_VALUE_EXT(xreg, xmax, xinvert) \
@@ -947,6 +948,18 @@ static inline void snd_soc_initialize_card_lists(struct snd_soc_card *card)
 	INIT_LIST_HEAD(&card->dapm_list);
 }
 
+static inline bool snd_soc_volsw_is_stereo(struct soc_mixer_control *mc)
+{
+	if (mc->reg == mc->rreg && mc->shift == mc->rshift)
+		return 0;
+	/*
+	 * mc->reg == mc->rreg && mc->shift != mc->rshift, or
+	 * mc->reg != mc->rreg means that the control is
+	 * stereo (bits in one register or in two registers)
+	 */
+	return 1;
+}
+
 int snd_soc_util_init(void);
 void snd_soc_util_exit(void);
 

commit db432b414e20b7218bbd91654d7be9c524a4337a
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon Oct 3 21:06:40 2011 +0100

    ASoC: Do DAPM power checks only for widgets changed since last run
    
    In order to reduce the number of DAPM power checks we run keep a list of
    widgets which have been changed since the last DAPM run and iterate over
    that rather than the full widget list. Whenever we change the power state
    for a widget we add all the source and sink widgets it has to the dirty
    list, ensuring that all widgets in the path are checked.
    
    This covers more widgets than we need to as some of the neighbour widgets
    won't be connected but it's simpler as a first step. On one system I tried
    this gave:
    
               Power    Path   Neighbour
    Before:    207      1939   2461
    After:     114      1066   1327
    
    which seems useful.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 9d0524a3a7f8..8ab1cfed1067 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -826,6 +826,7 @@ struct snd_soc_card {
 	struct list_head widgets;
 	struct list_head paths;
 	struct list_head dapm_list;
+	struct list_head dapm_dirty;
 
 	/* Generic DAPM context for the card */
 	struct snd_soc_dapm_context dapm;

commit cdffa775e72de3a3d3ddccd04eb4eb94d58e84e6
Author: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date:   Tue Oct 4 14:39:39 2011 +0300

    ASoC: core: Introduce SOC_DOUBLE_R_VALUE macro
    
    With the new macro we can remove duplicated code
    for the SOC_DOUBLE_R type of controls.
    
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 3d7c7f7cda6c..9d0524a3a7f8 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -37,6 +37,10 @@
 #define SOC_SINGLE_VALUE_EXT(xreg, xmax, xinvert) \
 	((unsigned long)&(struct soc_mixer_control) \
 	{.reg = xreg, .max = xmax, .platform_max = xmax, .invert = xinvert})
+#define SOC_DOUBLE_R_VALUE(xlreg, xrreg, xshift, xmax, xinvert) \
+	((unsigned long)&(struct soc_mixer_control) \
+	{.reg = xlreg, .rreg = xrreg, .shift = xshift, .rshift = xshift, \
+	.max = xmax, .platform_max = xmax, .invert = xinvert})
 #define SOC_SINGLE(xname, reg, shift, max, invert) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
 	.info = snd_soc_info_volsw, .get = snd_soc_get_volsw,\
@@ -60,9 +64,8 @@
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname), \
 	.info = snd_soc_info_volsw_2r, \
 	.get = snd_soc_get_volsw_2r, .put = snd_soc_put_volsw_2r, \
-	.private_value = (unsigned long)&(struct soc_mixer_control) \
-		{.reg = reg_left, .rreg = reg_right, .shift = xshift, \
-		.max = xmax, .platform_max = xmax, .invert = xinvert} }
+	.private_value = SOC_DOUBLE_R_VALUE(reg_left, reg_right, xshift, \
+					    xmax, xinvert) }
 #define SOC_DOUBLE_TLV(xname, reg, shift_left, shift_right, max, invert, tlv_array) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname),\
 	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ |\
@@ -79,9 +82,8 @@
 	.tlv.p = (tlv_array), \
 	.info = snd_soc_info_volsw_2r, \
 	.get = snd_soc_get_volsw_2r, .put = snd_soc_put_volsw_2r, \
-	.private_value = (unsigned long)&(struct soc_mixer_control) \
-		{.reg = reg_left, .rreg = reg_right, .shift = xshift, \
-		.max = xmax, .platform_max = xmax, .invert = xinvert} }
+	.private_value = SOC_DOUBLE_R_VALUE(reg_left, reg_right, xshift, \
+					    xmax, xinvert) }
 #define SOC_DOUBLE_S8_TLV(xname, xreg, xmin, xmax, tlv_array) \
 {	.iface  = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname), \
 	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ | \
@@ -155,9 +157,8 @@
 	.tlv.p = (tlv_array), \
 	.info = snd_soc_info_volsw_2r, \
 	.get = xhandler_get, .put = xhandler_put, \
-	.private_value = (unsigned long)&(struct soc_mixer_control) \
-		{.reg = reg_left, .rreg = reg_right, .shift = xshift, \
-		.max = xmax, .platform_max = xmax, .invert = xinvert} }
+	.private_value = SOC_DOUBLE_R_VALUE(reg_left, reg_right, xshift, \
+					    xmax, xinvert) }
 #define SOC_SINGLE_BOOL_EXT(xname, xdata, xhandler_get, xhandler_put) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
 	.info = snd_soc_info_bool_ext, \

commit 460acbec1e7ba727519689902f51a6257279bbae
Author: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date:   Tue Oct 4 14:39:38 2011 +0300

    ASoC: core: Introduce SOC_DOUBLE_VALUE macro
    
    With the new macro we can remove duplicated code
    for the SOC_DOUBLE type of controls.
    We can also remap the SOC_SINGLE_VALUE macro to
    SOC_DOUBLE_VALUE
    
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index a4dc699d4801..3d7c7f7cda6c 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -28,10 +28,12 @@
 /*
  * Convenience kcontrol builders
  */
-#define SOC_SINGLE_VALUE(xreg, xshift, xmax, xinvert) \
+#define SOC_DOUBLE_VALUE(xreg, shift_left, shift_right, xmax, xinvert) \
 	((unsigned long)&(struct soc_mixer_control) \
-	{.reg = xreg, .shift = xshift, .rshift = xshift, .max = xmax, \
-	.platform_max = xmax, .invert = xinvert})
+	{.reg = xreg, .shift = shift_left, .rshift = shift_right, \
+	.max = xmax, .platform_max = xmax, .invert = xinvert})
+#define SOC_SINGLE_VALUE(xreg, xshift, xmax, xinvert) \
+	SOC_DOUBLE_VALUE(xreg, xshift, xshift, xmax, xinvert)
 #define SOC_SINGLE_VALUE_EXT(xreg, xmax, xinvert) \
 	((unsigned long)&(struct soc_mixer_control) \
 	{.reg = xreg, .max = xmax, .platform_max = xmax, .invert = xinvert})
@@ -48,13 +50,12 @@
 	.info = snd_soc_info_volsw, .get = snd_soc_get_volsw,\
 	.put = snd_soc_put_volsw, \
 	.private_value =  SOC_SINGLE_VALUE(reg, shift, max, invert) }
-#define SOC_DOUBLE(xname, xreg, shift_left, shift_right, xmax, xinvert) \
+#define SOC_DOUBLE(xname, reg, shift_left, shift_right, max, invert) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname),\
 	.info = snd_soc_info_volsw, .get = snd_soc_get_volsw, \
 	.put = snd_soc_put_volsw, \
-	.private_value = (unsigned long)&(struct soc_mixer_control) \
-		{.reg = xreg, .shift = shift_left, .rshift = shift_right, \
-		 .max = xmax, .platform_max = xmax, .invert = xinvert} }
+	.private_value = SOC_DOUBLE_VALUE(reg, shift_left, shift_right, \
+					  max, invert) }
 #define SOC_DOUBLE_R(xname, reg_left, reg_right, xshift, xmax, xinvert) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname), \
 	.info = snd_soc_info_volsw_2r, \
@@ -62,16 +63,15 @@
 	.private_value = (unsigned long)&(struct soc_mixer_control) \
 		{.reg = reg_left, .rreg = reg_right, .shift = xshift, \
 		.max = xmax, .platform_max = xmax, .invert = xinvert} }
-#define SOC_DOUBLE_TLV(xname, xreg, shift_left, shift_right, xmax, xinvert, tlv_array) \
+#define SOC_DOUBLE_TLV(xname, reg, shift_left, shift_right, max, invert, tlv_array) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname),\
 	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ |\
 		 SNDRV_CTL_ELEM_ACCESS_READWRITE,\
 	.tlv.p = (tlv_array), \
 	.info = snd_soc_info_volsw, .get = snd_soc_get_volsw, \
 	.put = snd_soc_put_volsw, \
-	.private_value = (unsigned long)&(struct soc_mixer_control) \
-		{.reg = xreg, .shift = shift_left, .rshift = shift_right,\
-		 .max = xmax, .platform_max = xmax, .invert = xinvert} }
+	.private_value = SOC_DOUBLE_VALUE(reg, shift_left, shift_right, \
+					  max, invert) }
 #define SOC_DOUBLE_R_TLV(xname, reg_left, reg_right, xshift, xmax, xinvert, tlv_array) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname),\
 	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ |\
@@ -121,14 +121,13 @@
 	.info = snd_soc_info_volsw, \
 	.get = xhandler_get, .put = xhandler_put, \
 	.private_value = SOC_SINGLE_VALUE(xreg, xshift, xmax, xinvert) }
-#define SOC_DOUBLE_EXT(xname, xreg, shift_left, shift_right, xmax, xinvert,\
+#define SOC_DOUBLE_EXT(xname, reg, shift_left, shift_right, max, invert,\
 	 xhandler_get, xhandler_put) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname),\
 	.info = snd_soc_info_volsw, \
 	.get = xhandler_get, .put = xhandler_put, \
-	.private_value = (unsigned long)&(struct soc_mixer_control) \
-		{.reg = xreg, .shift = shift_left, .rshift = shift_right, \
-		 .max = xmax, .platform_max = xmax, .invert = xinvert} }
+	.private_value = \
+		SOC_DOUBLE_VALUE(reg, shift_left, shift_right, max, invert) }
 #define SOC_SINGLE_EXT_TLV(xname, xreg, xshift, xmax, xinvert,\
 	 xhandler_get, xhandler_put, tlv_array) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
@@ -146,9 +145,8 @@
 	.tlv.p = (tlv_array), \
 	.info = snd_soc_info_volsw, \
 	.get = xhandler_get, .put = xhandler_put, \
-	.private_value = (unsigned long)&(struct soc_mixer_control) \
-		{.reg = xreg, .shift = shift_left, .rshift = shift_right, \
-		.max = xmax, .platform_max = xmax, .invert = xinvert} }
+	.private_value = SOC_DOUBLE_VALUE(xreg, shift_left, shift_right, \
+					  xmax, xinvert) }
 #define SOC_DOUBLE_R_EXT_TLV(xname, reg_left, reg_right, xshift, xmax, xinvert,\
 	 xhandler_get, xhandler_put, tlv_array) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname), \

commit 75d9ac46b99280f5f381927ae75a9eaf21844d20
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Tue Sep 27 16:41:01 2011 +0100

    ASoC: Allow DAI formats to be specified in the dai_link
    
    For almost all machines the DAI format is a constant, always set to the
    same thing. This means that not only should we normally set it on init
    rather than in hw_params() (where it has been for historical reasons) we
    should also allow users to configure this by setting a variable in the
    dai_link structure. The combination of these two will make many machine
    drivers even more data driven.
    
    Implement a new dai_fmt field in the dai_link doing just that. Since 0 is
    a valid value for many format flags and we need to be able to tell if the
    field is actually set also add one to all the values used to configure
    formats.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index b499b37a6776..a4dc699d4801 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -713,6 +713,8 @@ struct snd_soc_dai_link {
 	const char *cpu_dai_name;
 	const char *codec_dai_name;
 
+	unsigned int dai_fmt;           /* format to set on init */
+
 	/* Keep DAI active over suspend */
 	unsigned int ignore_suspend:1;
 

commit 17841020e9d3dbd4e8114c2142c2bc6d45c01da1
Author: Dong Aisheng <b29396@freescale.com>
Date:   Mon Aug 29 17:15:14 2011 +0800

    ASoC: soc-core: symmetry checking for each DAIs separately
    
    The orginal code does not cover the case that one DAI such as codec
    may be shared between other two DAIs(CPU).
    When do symmetry checking, altough the codec DAI requires symmetry,
    the two CPU DAIs may still be configured to run on different rates.
    
    We change to check each DAI's state separately instead of only checking
    the dai link to prevent this issue.
    
    Signed-off-by: Dong Aisheng <b29396@freescale.com>
    Tested-by: Wolfram Sang <w.sang@pengutronix.de>
    Acked-by: Liam Girdwood <lrg@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 006f4f633c52..b499b37a6776 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -851,8 +851,6 @@ struct snd_soc_pcm_runtime  {
 	unsigned int complete:1;
 	unsigned int dev_registered:1;
 
-	/* Symmetry data - only valid if symmetry is being enforced */
-	unsigned int rate;
 	long pmdown_time;
 
 	/* runtime devices */

commit de02d0786d4075091f5b1860474cd21d85ff5862
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Tue Sep 20 21:43:24 2011 +0100

    ASoC: Trace and collect statistics for DAPM graph walking
    
    One of the longest standing areas for improvement in ASoC has been the
    DAPM algorithm - it repeats the same checks many times whenever it is run
    and makes no effort to limit the areas of the graph it checks meaning we
    do an awful lot of walks over the full graph. This has never mattered too
    much as the size of the graph has generally been small in relation to the
    size of the devices supported and the speed of CPUs but it is annoying.
    
    In preparation for work on improving this insert a trace point after the
    graph walk has been done. This gives us specific timing information for
    the walk, and in order to give quantifiable (non-benchmark) numbers also
    count every time we check a link or check the power for a widget and report
    those numbers. Substantial changes in the algorithm may require tweaks to
    the stats but they should be useful for simpler things.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 24e17be38c19..006f4f633c52 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -828,6 +828,7 @@ struct snd_soc_card {
 
 	/* Generic DAPM context for the card */
 	struct snd_soc_dapm_context dapm;
+	struct snd_soc_dapm_stats dapm_stats;
 
 #ifdef CONFIG_DEBUG_FS
 	struct dentry *debugfs_card_root;

commit da1c6ea6cf85544292c30295c70a89e8555358bc
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Wed Aug 24 20:09:01 2011 +0100

    ASoC: Allow source specification for CODEC level sysclk
    
    Similarly to PLLs/FLLs some modern CODECs provide selectable system clock
    sources. When the clock is the clock for a DAI we do not usually need to
    identify which clock is being configured so can use clk_id for the source
    clock but with CODEC wide system clocks we will need to specify both the
    clock being configured and the source.
    
    Add a source argument to the CODEC driver set_sysclk() operation to
    reflect this. As this operation is not as widely used as the DAI
    set_sysclk() operation the change is not very invasive. We probably
    ought to go and make the same alternation for DAIs at some point.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 0fc8f15f1aca..24e17be38c19 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -276,7 +276,7 @@ enum snd_soc_pcm_subclass {
 };
 
 int snd_soc_codec_set_sysclk(struct snd_soc_codec *codec, int clk_id,
-			     unsigned int freq, int dir);
+			     int source, unsigned int freq, int dir);
 int snd_soc_codec_set_pll(struct snd_soc_codec *codec, int pll_id, int source,
 			  unsigned int freq_in, unsigned int freq_out);
 
@@ -610,7 +610,7 @@ struct snd_soc_codec_driver {
 
 	/* codec wide operations */
 	int (*set_sysclk)(struct snd_soc_codec *codec,
-			  int clk_id, unsigned int freq, int dir);
+			  int clk_id, int source, unsigned int freq, int dir);
 	int (*set_pll)(struct snd_soc_codec *codec, int pll_id, int source,
 		unsigned int freq_in, unsigned int freq_out);
 

commit 4a8923ba99f559b078cf584f7caad901ada0e5be
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Wed Aug 24 19:12:49 2011 +0100

    ASoC: Allow register defaults to be larger than unsigned short
    
    Devices that need this exist; obviously the newer regmap defaults
    mechanism will deal with this more happily.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 6da55a17fcfd..0fc8f15f1aca 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -622,7 +622,7 @@ struct snd_soc_codec_driver {
 	int (*volatile_register)(struct snd_soc_codec *, unsigned int);
 	int (*readable_register)(struct snd_soc_codec *, unsigned int);
 	int (*writable_register)(struct snd_soc_codec *, unsigned int);
-	short reg_cache_size;
+	unsigned int reg_cache_size;
 	short reg_cache_step;
 	short reg_word_size;
 	const void *reg_cache_default;

commit 33c5f969b969c277e96cd9e9bf8472c4b8709c25
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon Aug 22 18:40:30 2011 +0100

    ASoC: Allow idle_bias_off to be specified in CODEC drivers
    
    If devices can unconditionally support idle_bias_off let them flag it in
    their driver structure.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@ti.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 3fe658eea28b..6da55a17fcfd 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -633,6 +633,7 @@ struct snd_soc_codec_driver {
 	/* codec bias level */
 	int (*set_bias_level)(struct snd_soc_codec *,
 			      enum snd_soc_bias_level level);
+	bool idle_bias_off;
 
 	void (*seq_notifier)(struct snd_soc_dapm_context *,
 			     enum snd_soc_dapm_type, int);

commit bb3784ae36e3a816696ae1f5e8490eeedef3c5cf
Merge: 18d4ed4342c1 0671da189c1d
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon Aug 8 15:00:13 2011 +0900

    Merge branch 'regmap-asoc' into for-3.2

commit 0671da189c1d75eec5f6aba786d57d25209dd2bc
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Sun Jul 24 12:23:37 2011 +0100

    ASoC: Add regmap as a control type
    
    Allow drivers to set up their own regmap API structures. This is mainly
    useful with MFDs where the core driver will have set up regmap at the
    minute, though it may make sense to push the existing regmap setup out
    of the core into the drivers.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@ti.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 4d04b4b86aa1..d02269437de3 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -261,6 +261,7 @@ extern struct snd_ac97_bus_ops soc_ac97_ops;
 enum snd_soc_control_type {
 	SND_SOC_I2C = 1,
 	SND_SOC_SPI,
+	SND_SOC_REGMAP,
 };
 
 enum snd_soc_compress_type {

commit be3ea3b9e8df64acb3606055c01291f0b58876a6
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon Jun 13 19:35:29 2011 +0100

    ASoC: Use new register map API for ASoC generic physical I/O
    
    Remove all the ASoC specific physical I/O code and replace it with calls
    into the regmap API. The bulk write code can only be used safely if all
    regmap calls are locked with the CODEC lock, we need to add bulk support
    to the regmap API or replace the code with an open coded loop (though
    currently it has no users...).
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@ti.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index aa19f5a32ba8..4d04b4b86aa1 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -19,6 +19,7 @@
 #include <linux/workqueue.h>
 #include <linux/interrupt.h>
 #include <linux/kernel.h>
+#include <linux/regmap.h>
 #include <sound/core.h>
 #include <sound/pcm.h>
 #include <sound/control.h>
@@ -576,6 +577,7 @@ struct snd_soc_codec {
 	const void *reg_def_copy;
 	const struct snd_soc_cache_ops *cache_ops;
 	struct mutex cache_rw_mutex;
+	int val_bytes;
 
 	/* dapm */
 	struct snd_soc_dapm_context dapm;

commit 64a648c2204b0c750fe49828158751183d8b5f83
Author: Liam Girdwood <lrg@ti.com>
Date:   Mon Jul 25 11:15:15 2011 +0100

    ASoC: dapm - Add DAPM stream completion event.
    
    In preparation for Dynamic PCM (AKA DSP) support.
    
    This adds a callback function to be called at the completion of a DAPM stream
    event.
    
    This can be used by DSP components to perform calculations based on DAPM graphs
    after completion of stream events.
    
    Signed-off-by: Liam Girdwood <lrg@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index aa19f5a32ba8..64a9dd5a69d6 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -634,6 +634,9 @@ struct snd_soc_codec_driver {
 	void (*seq_notifier)(struct snd_soc_dapm_context *,
 			     enum snd_soc_dapm_type, int);
 
+	/* codec stream completion event */
+	int (*stream_event)(struct snd_soc_dapm_context *dapm, int event);
+
 	/* probe ordering - for components with runtime dependencies */
 	int probe_order;
 	int remove_order;
@@ -669,6 +672,9 @@ struct snd_soc_platform_driver {
 	/* platform stream ops */
 	struct snd_pcm_ops *ops;
 
+	/* platform stream completion event */
+	int (*stream_event)(struct snd_soc_dapm_context *dapm, int event);
+
 	/* probe ordering - for components with runtime dependencies */
 	int probe_order;
 	int remove_order;

commit cb2cf612fbdf457291b6e47064fed24f0dfdd9a5
Author: Liam Girdwood <lrg@ti.com>
Date:   Mon Jul 4 22:10:53 2011 +0100

    ASoC: core - Add convenience register for platform kcontrol and DAPM
    
    Allow platform probe to register platform kcontrols and DAPM just like
    the CODEC probe().
    
    Signed-off-by: Liam Girdwood <lrg@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 6ce8dc32a3db..aa19f5a32ba8 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -651,6 +651,14 @@ struct snd_soc_platform_driver {
 	int (*pcm_new)(struct snd_soc_pcm_runtime *);
 	void (*pcm_free)(struct snd_pcm *);
 
+	/* Default control and setup, added after probe() is run */
+	const struct snd_kcontrol_new *controls;
+	int num_controls;
+	const struct snd_soc_dapm_widget *dapm_widgets;
+	int num_dapm_widgets;
+	const struct snd_soc_dapm_route *dapm_routes;
+	int num_dapm_routes;
+
 	/*
 	 * For platform caused delay reporting.
 	 * Optional.

commit b7950641374ddb41e9a03ff61b43f9ab3fcf763d
Author: Liam Girdwood <lrg@ti.com>
Date:   Mon Jul 4 22:10:52 2011 +0100

    ASoC: core - Add platform widget IO
    
    Allow platform driver widgets to perform any IO required for DAPM.
    
    Signed-off-by: Liam Girdwood <lrg@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index c421501532db..6ce8dc32a3db 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -682,6 +682,8 @@ struct snd_soc_platform {
 	struct snd_soc_card *card;
 	struct list_head list;
 	struct list_head card_list;
+
+	struct snd_soc_dapm_context dapm;
 };
 
 struct snd_soc_dai_link {

commit a491a5c84f34febfebd4cb0b8c9add97977efa97
Author: Liam Girdwood <lrg@ti.com>
Date:   Mon Jul 4 22:10:51 2011 +0100

    ASoC: core - Add API call to register platform kcontrols.
    
    In preparation for Dynamic PCM (AKA DSP) support.
    
    Allow platform drivers to register kcontrols.
    
    Signed-off-by: Liam Girdwood <lrg@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index f30f3fe4a41b..c421501532db 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -368,6 +368,8 @@ struct snd_kcontrol *snd_soc_cnew(const struct snd_kcontrol_new *_template,
 				  const char *prefix);
 int snd_soc_add_controls(struct snd_soc_codec *codec,
 	const struct snd_kcontrol_new *controls, int num_controls);
+int snd_soc_add_platform_controls(struct snd_soc_platform *platform,
+	const struct snd_kcontrol_new *controls, int num_controls);
 int snd_soc_info_enum_double(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_info *uinfo);
 int snd_soc_info_enum_ext(struct snd_kcontrol *kcontrol,

commit f1442bc1e9bd5ff4c2470d66075d066e535a2c86
Author: Liam Girdwood <lrg@ti.com>
Date:   Mon Jul 4 11:10:15 2011 +0100

    ASoC: core - Add platform read and write.
    
    In preparation for ASoC Dynamic PCM (AKA DSP) support.
    
    Allow platform driver to perform IO. Intended for platform DAPM.
    
    Signed-off-by: Liam Girdwood <lrg@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 6424b10ac29c..f30f3fe4a41b 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -312,6 +312,10 @@ int snd_soc_default_readable_register(struct snd_soc_codec *codec,
 				      unsigned int reg);
 int snd_soc_default_writable_register(struct snd_soc_codec *codec,
 				      unsigned int reg);
+int snd_soc_platform_read(struct snd_soc_platform *platform,
+					unsigned int reg);
+int snd_soc_platform_write(struct snd_soc_platform *platform,
+					unsigned int reg, unsigned int val);
 
 /* Utility functions to get clock rates from various things */
 int snd_soc_calc_frame_size(int sample_size, int channels, int tdm_slots);
@@ -658,6 +662,10 @@ struct snd_soc_platform_driver {
 	/* probe ordering - for components with runtime dependencies */
 	int probe_order;
 	int remove_order;
+
+	/* platform IO - used for platform DAPM */
+	unsigned int (*read)(struct snd_soc_platform *, unsigned int);
+	int (*write)(struct snd_soc_platform *, unsigned int, unsigned int);
 };
 
 struct snd_soc_platform {

commit 65fdd5c05a02b15bbfa5b0f4f050fdb25b9227f1
Merge: 223157121404 e9c039052be5
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon Jun 13 19:21:09 2011 +0100

    Merge branch 'for-3.0' into for-3.1
    
    Trival fixup for move of I/O code into separate file.
    
    Conflicts:
            sound/soc/soc-cache.c

commit e9c039052be59753e6bcc7c8b59763899dc1161c
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon Jun 13 19:05:58 2011 +0100

    ASoC: Remove unused and about to be broken SND_SOC_CUSTOM I/O bus
    
    This will be removed in -next so let's drop it from mainline as soon as
    we can in order to minimise surprises.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index f1de3e0c75bc..3a4bd3a3c68d 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -248,8 +248,7 @@ typedef int (*hw_write_t)(void *,const char* ,int);
 extern struct snd_ac97_bus_ops soc_ac97_ops;
 
 enum snd_soc_control_type {
-	SND_SOC_CUSTOM = 1,
-	SND_SOC_I2C,
+	SND_SOC_I2C = 1,
 	SND_SOC_SPI,
 };
 

commit b8c0dab9bf3373010e857a8d3f1b594c60a348dd
Author: Liam Girdwood <lrg@ti.com>
Date:   Thu Jun 9 17:04:39 2011 +0100

    ASoC: core - PCM mutex per rtd
    
    In preparation for the new ASoC Dynamic PCM support (AKA DSP support).
    
    The new ASoC Dynamic PCM core allows DAIs to be dynamically re-routed
    at runtime between the PCM device end (or Frontend - FE) and the physical DAI
    (Backend - BE) using regular kcontrols (just like a hardware CODEC routes
    audio in the analog domain). The Dynamic PCM core therefore must be
    able to call PCM operations for both the Frontend and Backend(s) DAIs at
    the same time.
    
    Currently we have a global pcm_mutex that is used to serialise
    the ASoC PCM operations. This patch removes the global mutex
    and adds a mutex per RTD allowing the PCM operations to be reentrant and
    allow control of more than one DAI at at time. e.g. a frontend PCM hw_params()
    could configure multiple backend DAI hw_params() with similar or different
    hw parameters at the same time.
    
    Signed-off-by: Liam Girdwood <lrg@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index d5db87e82c6d..4334ab25c5d5 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -269,6 +269,11 @@ enum snd_soc_compress_type {
 	SND_SOC_RBTREE_COMPRESSION
 };
 
+enum snd_soc_pcm_subclass {
+	SND_SOC_PCM_CLASS_PCM	= 0,
+	SND_SOC_PCM_CLASS_BE	= 1,
+};
+
 int snd_soc_codec_set_sysclk(struct snd_soc_codec *codec, int clk_id,
 			     unsigned int freq, int dir);
 int snd_soc_codec_set_pll(struct snd_soc_codec *codec, int pll_id, int source,
@@ -809,6 +814,9 @@ struct snd_soc_pcm_runtime  {
 	struct device dev;
 	struct snd_soc_card *card;
 	struct snd_soc_dai_link *dai_link;
+	struct mutex pcm_mutex;
+	enum snd_soc_pcm_subclass pcm_subclass;
+	struct snd_pcm_ops ops;
 
 	unsigned int complete:1;
 	unsigned int dev_registered:1;

commit 0168bf0d130de83cd3532b834237c6228a6158dd
Author: Liam Girdwood <lrg@ti.com>
Date:   Tue Jun 7 16:08:05 2011 +0100

    ASoC: core - Allow components to probe/remove in sequence.
    
    Some ASoC components depend on other ASoC components to provide clocks and
    power resources in order to probe() and vice versa for remove().
    
    Allow components to be ordered so that components can be probed() and removed()
    in sequences that conform to their dependencies.
    
    Signed-off-by: Liam Girdwood <lrg@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 74093be65709..d5db87e82c6d 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -202,6 +202,16 @@
 #define SOC_VALUE_ENUM_SINGLE_DECL(name, xreg, xshift, xmask, xtexts, xvalues) \
 	SOC_VALUE_ENUM_DOUBLE_DECL(name, xreg, xshift, xshift, xmask, xtexts, xvalues)
 
+/*
+ * Component probe and remove ordering levels for components with runtime
+ * dependencies.
+ */
+#define SND_SOC_COMP_ORDER_FIRST		-2
+#define SND_SOC_COMP_ORDER_EARLY		-1
+#define SND_SOC_COMP_ORDER_NORMAL		0
+#define SND_SOC_COMP_ORDER_LATE		1
+#define SND_SOC_COMP_ORDER_LAST		2
+
 /*
  * Bias levels
  *
@@ -613,6 +623,10 @@ struct snd_soc_codec_driver {
 
 	void (*seq_notifier)(struct snd_soc_dapm_context *,
 			     enum snd_soc_dapm_type, int);
+
+	/* probe ordering - for components with runtime dependencies */
+	int probe_order;
+	int remove_order;
 };
 
 /* SoC platform interface */
@@ -636,6 +650,10 @@ struct snd_soc_platform_driver {
 
 	/* platform stream ops */
 	struct snd_pcm_ops *ops;
+
+	/* probe ordering - for components with runtime dependencies */
+	int probe_order;
+	int remove_order;
 };
 
 struct snd_soc_platform {

commit 552d1ef6b5a98d7b95959d5b139071e3c90cebf1
Author: Liam Girdwood <lrg@ti.com>
Date:   Tue Jun 7 16:08:33 2011 +0100

    ASoC: core - Optimise and refactor pcm_new() to pass only rtd
    
    Currently pcm_new() passes in 3 arguments :- card, pcm and DAI.
    
    Refactor this to only pass in 1 argument (i.e. the rtd) since struct rtd contains
    card, pcm and DAI along with other members too that are useful too.
    
    Signed-off-by: Liam Girdwood <lrg@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index f55efc1a63a2..74093be65709 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -624,8 +624,7 @@ struct snd_soc_platform_driver {
 	int (*resume)(struct snd_soc_dai *dai);
 
 	/* pcm creation and destruction */
-	int (*pcm_new)(struct snd_card *, struct snd_soc_dai *,
-		struct snd_pcm *);
+	int (*pcm_new)(struct snd_soc_pcm_runtime *);
 	void (*pcm_free)(struct snd_pcm *);
 
 	/*

commit d4c6005f8e90da10067c35e1182f533582d01a69
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon Jun 6 19:13:23 2011 +0100

    ASoC: Add context parameter to card DAPM callbacks
    
    The card callback will get called for each DAPM context in the card so it
    can be useful for it to know which device is currently undergoing a
    transition.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@ti.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 0f297006f5b2..f55efc1a63a2 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -726,8 +726,10 @@ struct snd_soc_card {
 
 	/* callbacks */
 	int (*set_bias_level)(struct snd_soc_card *,
+			      struct snd_soc_dapm_context *dapm,
 			      enum snd_soc_bias_level level);
 	int (*set_bias_level_post)(struct snd_soc_card *,
+				   struct snd_soc_dapm_context *dapm,
 				   enum snd_soc_bias_level level);
 
 	long pmdown_time;

commit 56fba41f8f6444f9e2db3bfe2c4cc5c5bac43d1d
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Sat Jun 4 11:25:10 2011 +0100

    ASoC: Specify target bias state directly as a bias state
    
    Rather than a simple flag to say if we want the DAPM context to be at full
    power specify the target bias state. This should have no current effect
    but is a bit more direct and so makes it easier to change our decisions
    about the which bias state to go into in future.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@ti.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index f1de3e0c75bc..0f297006f5b2 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -214,10 +214,10 @@
  * @OFF:     Power Off. No restrictions on transition times.
  */
 enum snd_soc_bias_level {
-	SND_SOC_BIAS_OFF,
-	SND_SOC_BIAS_STANDBY,
-	SND_SOC_BIAS_PREPARE,
-	SND_SOC_BIAS_ON,
+	SND_SOC_BIAS_OFF = 0,
+	SND_SOC_BIAS_STANDBY = 1,
+	SND_SOC_BIAS_PREPARE = 2,
+	SND_SOC_BIAS_ON = 3,
 };
 
 struct snd_jack;

commit 22de71ba03311cdc1063757c50a1488cb90a1fca
Author: Liam Girdwood <lrg@ti.com>
Date:   Thu May 12 16:14:04 2011 +0100

    ASoC: core - allow ASoC more flexible machine name
    
    Allow ASoC machine drivers to register a driver name
    and a longname. This allows user space to determine
    the flavour of machine driver.
    
    Signed-off-by: Liam Girdwood <lrg@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index b27c7a2d3bb0..f1de3e0c75bc 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -702,6 +702,8 @@ struct snd_soc_aux_dev {
 /* SoC card */
 struct snd_soc_card {
 	const char *name;
+	const char *long_name;
+	const char *driver_name;
 	struct device *dev;
 	struct snd_card *snd_card;
 	struct module *owner;

commit 87023ff74b2358b5e51d3c790704f786e89ff769
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue May 3 12:50:29 2011 +0200

    ASoC: Declare const properly for enum texts
    
    The enum texts are supposed to be const char * const [].  Without the
    second const, it gets compile warnings like
        sound/soc/codecs/max98095.c:607:2: warning: initialization discards qualifiers from pointer target type
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 6ce3e573fb40..b27c7a2d3bb0 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -820,7 +820,7 @@ struct soc_enum {
 	unsigned char shift_r;
 	unsigned int max;
 	unsigned int mask;
-	const char **texts;
+	const char * const *texts;
 	const unsigned int *values;
 	void *dapm;
 };

commit fb257897bf20c5f0e1df584bb5b874e811651263
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Thu Apr 28 10:57:54 2011 +0100

    ASoC: Work around allmodconfig failure
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@ti.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index cb6b18b6eece..6ce3e573fb40 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -888,6 +888,9 @@ static inline void snd_soc_initialize_card_lists(struct snd_soc_card *card)
 	INIT_LIST_HEAD(&card->dapm_list);
 }
 
+int snd_soc_util_init(void);
+void snd_soc_util_exit(void);
+
 #include <sound/soc-dai.h>
 
 #ifdef CONFIG_DEBUG_FS

commit d06e48db1670b29b3f62f1dfe4a36af237d5aa0d
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Tue Apr 12 19:31:01 2011 +0200

    ASoC: Make struct snd_soc_card's dapm_widgets and dapm_routes const
    
    Those should not be modified (and are not) by the core code, so make them const.
    This also makes them consistent with the same members of snd_soc_codec.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Acked-by: Liam Girdwood <lrg@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 435cb83c7f48..cb6b18b6eece 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -755,9 +755,9 @@ struct snd_soc_card {
 	/*
 	 * Card-specific routes and widgets.
 	 */
-	struct snd_soc_dapm_widget *dapm_widgets;
+	const struct snd_soc_dapm_widget *dapm_widgets;
 	int num_dapm_widgets;
-	struct snd_soc_dapm_route *dapm_routes;
+	const struct snd_soc_dapm_route *dapm_routes;
 	int num_dapm_routes;
 
 	struct work_struct deferred_resume_work;

commit b7af1dafdfaf8419065399d07fb7cbae14b286ef
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Thu Apr 7 19:18:44 2011 +0900

    ASoC: Add data based control initialisation for CODECs and cards
    
    Allow CODEC and card drivers to point to an array of controls from their
    driver structure rather than explicitly calling snd_soc_add_controls().
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 2720a9f3780b..435cb83c7f48 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -577,7 +577,9 @@ struct snd_soc_codec_driver {
 			pm_message_t state);
 	int (*resume)(struct snd_soc_codec *);
 
-	/* Default DAPM setup, added after probe() is run */
+	/* Default control and setup, added after probe() is run */
+	const struct snd_kcontrol_new *controls;
+	int num_controls;
 	const struct snd_soc_dapm_widget *dapm_widgets;
 	int num_dapm_widgets;
 	const struct snd_soc_dapm_route *dapm_routes;
@@ -747,6 +749,9 @@ struct snd_soc_card {
 	struct snd_soc_pcm_runtime *rtd_aux;
 	int num_aux_rtd;
 
+	const struct snd_kcontrol_new *controls;
+	int num_controls;
+
 	/*
 	 * Card-specific routes and widgets.
 	 */

commit 239c970626b9d9c7449de751d91f9a9da1018b85
Author: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
Date:   Thu Mar 24 13:45:18 2011 +0000

    ASoC: Add snd_soc_codec_{readable,writable}_register()
    
    Provide the top level ASoC core functions for indicating whether
    a given register is readable or writable.
    
    Signed-off-by: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index e20835753c6b..2720a9f3780b 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -278,6 +278,10 @@ int snd_soc_register_codec(struct device *dev,
 void snd_soc_unregister_codec(struct device *dev);
 int snd_soc_codec_volatile_register(struct snd_soc_codec *codec,
 				    unsigned int reg);
+int snd_soc_codec_readable_register(struct snd_soc_codec *codec,
+				    unsigned int reg);
+int snd_soc_codec_writable_register(struct snd_soc_codec *codec,
+				    unsigned int reg);
 int snd_soc_codec_set_cache_io(struct snd_soc_codec *codec,
 			       int addr_bits, int data_bits,
 			       enum snd_soc_control_type control);

commit 8020454c9a1ec5ac5801805896b5f69d0c573e17
Author: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
Date:   Thu Mar 24 13:45:17 2011 +0000

    ASoC: Add default snd_soc_default_writable_register() callback
    
    By using struct snd_soc_reg_access for the read/write/vol attributes
    of the registers, we provide callbacks that automatically determine whether
    a given register is readable/writable or volatile.
    
    Signed-off-by: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 4a11795aaee3..e20835753c6b 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -292,6 +292,8 @@ int snd_soc_default_volatile_register(struct snd_soc_codec *codec,
 				      unsigned int reg);
 int snd_soc_default_readable_register(struct snd_soc_codec *codec,
 				      unsigned int reg);
+int snd_soc_default_writable_register(struct snd_soc_codec *codec,
+				      unsigned int reg);
 
 /* Utility functions to get clock rates from various things */
 int snd_soc_calc_frame_size(int sample_size, int channels, int tdm_slots);
@@ -523,6 +525,7 @@ struct snd_soc_codec {
 	size_t reg_size;	/* reg_cache_size * reg_word_size */
 	int (*volatile_register)(struct snd_soc_codec *, unsigned int);
 	int (*readable_register)(struct snd_soc_codec *, unsigned int);
+	int (*writable_register)(struct snd_soc_codec *, unsigned int);
 
 	/* runtime */
 	struct snd_ac97 *ac97;  /* for ad-hoc ac97 devices */
@@ -589,6 +592,7 @@ struct snd_soc_codec_driver {
 				size_t, unsigned int);
 	int (*volatile_register)(struct snd_soc_codec *, unsigned int);
 	int (*readable_register)(struct snd_soc_codec *, unsigned int);
+	int (*writable_register)(struct snd_soc_codec *, unsigned int);
 	short reg_cache_size;
 	short reg_cache_step;
 	short reg_word_size;

commit 67850a892bf627e1c627bc8d0bcd84b90ecc9d7f
Author: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
Date:   Tue Mar 22 10:36:57 2011 +0000

    ASoC: Add control_type in snd_soc_codec
    
    This is mainly used by the soc-cache code to easily determine the
    currently used underlying serial bus.  Set SND_SOC_CUSTOM to 1 so we
    can distinguish it if it is not initialized or set.
    
    Signed-off-by: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 2f2a51fe78e9..4a11795aaee3 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -248,7 +248,7 @@ typedef int (*hw_write_t)(void *,const char* ,int);
 extern struct snd_ac97_bus_ops soc_ac97_ops;
 
 enum snd_soc_control_type {
-	SND_SOC_CUSTOM,
+	SND_SOC_CUSTOM = 1,
 	SND_SOC_I2C,
 	SND_SOC_SPI,
 };
@@ -539,6 +539,7 @@ struct snd_soc_codec {
 
 	/* codec IO */
 	void *control_data; /* codec control (i2c/3wire) data */
+	enum snd_soc_control_type control_type;
 	hw_write_t hw_write;
 	unsigned int (*hw_read)(struct snd_soc_codec *, unsigned int);
 	unsigned int (*read)(struct snd_soc_codec *, unsigned int);

commit 5fb609d435f0679ed322ddeb1fdafe6142463fdf
Author: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
Date:   Tue Mar 22 10:37:03 2011 +0000

    ASoC: soc-cache: Introduce raw bulk write support
    
    As it has become more common to have to write firmware or similar
    large chunks of data to the hardware, add a function to perform
    raw bulk writes that bypass the cache.  This only handles volatile
    registers as we should avoid getting out of sync with the actual
    cache.
    
    Signed-off-by: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index bfa4836ea107..2f2a51fe78e9 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -543,6 +543,7 @@ struct snd_soc_codec {
 	unsigned int (*hw_read)(struct snd_soc_codec *, unsigned int);
 	unsigned int (*read)(struct snd_soc_codec *, unsigned int);
 	int (*write)(struct snd_soc_codec *, unsigned int, unsigned int);
+	int (*bulk_write_raw)(struct snd_soc_codec *, unsigned int, const void *, size_t);
 	void *reg_cache;
 	const void *reg_def_copy;
 	const struct snd_soc_cache_ops *cache_ops;
@@ -814,6 +815,8 @@ struct soc_enum {
 unsigned int snd_soc_read(struct snd_soc_codec *codec, unsigned int reg);
 unsigned int snd_soc_write(struct snd_soc_codec *codec,
 			   unsigned int reg, unsigned int val);
+unsigned int snd_soc_bulk_write_raw(struct snd_soc_codec *codec,
+				    unsigned int reg, const void *data, size_t len);
 
 /* device driver data */
 

commit efb7ac3f9c28fcb379c51f987b63174f727b7453
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Tue Mar 8 17:23:24 2011 +0000

    ASoC: Fix prefixing of DAPM controls by factoring prefix into snd_soc_cnew()
    
    Currently will ignore prefixes when creating DAPM controls. Since currently
    all control creation goes through snd_soc_cnew() we can fix this by factoring
    the prefixing into that function.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@ti.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 14f601f3e189..bfa4836ea107 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -340,7 +340,8 @@ void snd_soc_free_ac97_codec(struct snd_soc_codec *codec);
  *Controls
  */
 struct snd_kcontrol *snd_soc_cnew(const struct snd_kcontrol_new *_template,
-	void *data, char *long_name);
+				  void *data, char *long_name,
+				  const char *prefix);
 int snd_soc_add_controls(struct snd_soc_codec *codec,
 	const struct snd_kcontrol_new *controls, int num_controls);
 int snd_soc_info_enum_double(struct snd_kcontrol *kcontrol,

commit ec4ee52a8f5fb5b8e235ae9f02589d60d54740cc
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon Mar 7 20:58:11 2011 +0000

    ASoC: Provide CODEC clocking operations and API calls
    
    When multi component systems use DAIless amplifiers which require clocking
    configuration it is at best hard to use the current clocking API as this
    requires a DAI even though the device may not even have one. Address this
    by adding set_sysclk() and set_pll() operations and APIs for CODECs.
    
    In order to avoid issues with devices which could be used either with or
    without DAIs make the DAI variants call through to their CODEC counterparts
    if there is no DAI specific operation. Converting over entirely would create
    problems for multi-DAI devices which offer per-DAI clocking setup.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@ti.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 6f197589b6d7..14f601f3e189 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -259,6 +259,11 @@ enum snd_soc_compress_type {
 	SND_SOC_RBTREE_COMPRESSION
 };
 
+int snd_soc_codec_set_sysclk(struct snd_soc_codec *codec, int clk_id,
+			     unsigned int freq, int dir);
+int snd_soc_codec_set_pll(struct snd_soc_codec *codec, int pll_id, int source,
+			  unsigned int freq_in, unsigned int freq_out);
+
 int snd_soc_register_card(struct snd_soc_card *card);
 int snd_soc_unregister_card(struct snd_soc_card *card);
 int snd_soc_suspend(struct device *dev);
@@ -568,6 +573,12 @@ struct snd_soc_codec_driver {
 	const struct snd_soc_dapm_route *dapm_routes;
 	int num_dapm_routes;
 
+	/* codec wide operations */
+	int (*set_sysclk)(struct snd_soc_codec *codec,
+			  int clk_id, unsigned int freq, int dir);
+	int (*set_pll)(struct snd_soc_codec *codec, int pll_id, int source,
+		unsigned int freq_in, unsigned int freq_out);
+
 	/* codec IO */
 	unsigned int (*read)(struct snd_soc_codec *, unsigned int);
 	int (*write)(struct snd_soc_codec *, unsigned int, unsigned int);

commit 89b95ac09e408b5d88a8b3792dc76c863e45fb31
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon Mar 7 16:38:44 2011 +0000

    ASoC: Add DAPM widget and path data to CODEC driver structure
    
    Allow a slight simplification of CODEC drivers by allowing DAPM routes and
    widgets to be provided in a table. They will be instantiated at the end of
    CODEC probe.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@ti.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 9c2a6dd170f1..6f197589b6d7 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -562,6 +562,12 @@ struct snd_soc_codec_driver {
 			pm_message_t state);
 	int (*resume)(struct snd_soc_codec *);
 
+	/* Default DAPM setup, added after probe() is run */
+	const struct snd_soc_dapm_widget *dapm_widgets;
+	int num_dapm_widgets;
+	const struct snd_soc_dapm_route *dapm_routes;
+	int num_dapm_routes;
+
 	/* codec IO */
 	unsigned int (*read)(struct snd_soc_codec *, unsigned int);
 	int (*write)(struct snd_soc_codec *, unsigned int, unsigned int);

commit 28e9ad921d3b7defd8940a3e30e8241c8ed734db
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Wed Mar 2 18:36:34 2011 +0000

    ASoC: Add a late_probe() callback to cards
    
    This is run after the DAPM widgets and routes are added, allowing setup
    of things like jacks using the routes. The main card probe() is run before
    anything else so can't be used for this purpose.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 11d59bd13886..9c2a6dd170f1 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -682,6 +682,7 @@ struct snd_soc_card {
 	bool instantiated;
 
 	int (*probe)(struct snd_soc_card *card);
+	int (*late_probe)(struct snd_soc_card *card);
 	int (*remove)(struct snd_soc_card *card);
 
 	/* the pre and post PM functions are used to do any PM work before and

commit b8ad29debd7401d257da923480d32838172c431a
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Wed Mar 2 18:35:51 2011 +0000

    ASoC: Allow card DAPM widgets and routes to be set up at registration
    
    These will be added after all devices are registered and allow most DAI
    init functions in machine drivers to be replaced by simple data.
    Regular controls are not supported as the registration function still
    works in terms of CODECs.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 8064cd130356..11d59bd13886 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -718,6 +718,14 @@ struct snd_soc_card {
 	struct snd_soc_pcm_runtime *rtd_aux;
 	int num_aux_rtd;
 
+	/*
+	 * Card-specific routes and widgets.
+	 */
+	struct snd_soc_dapm_widget *dapm_widgets;
+	int num_dapm_widgets;
+	struct snd_soc_dapm_route *dapm_routes;
+	int num_dapm_routes;
+
 	struct work_struct deferred_resume_work;
 
 	/* lists of probed devices belonging to this card */

commit e37a4970cd7ab6aec9e848cd3c355fd47fd18afd
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Wed Mar 2 18:21:57 2011 +0000

    ASoC: Add a per-card DAPM context
    
    This means that rather than adding the board specific DAPM widgets to a
    random CODEC DAPM context they can be added to the card itself which is
    a bit cleaner. Previously there only was one DAPM context and it was
    tied to the single supported CODEC.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 65d865f7e8c0..8064cd130356 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -729,6 +729,9 @@ struct snd_soc_card {
 	struct list_head paths;
 	struct list_head dapm_list;
 
+	/* Generic DAPM context for the card */
+	struct snd_soc_dapm_context dapm;
+
 #ifdef CONFIG_DEBUG_FS
 	struct dentry *debugfs_card_root;
 	struct dentry *debugfs_pop_time;

commit fadddc8753ccfab26ee57f3205d6926fe4be1350
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Thu Feb 17 16:41:42 2011 -0800

    ASoC: Add kerneldoc for jack_status_check callback
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index fb57c33482e5..65d865f7e8c0 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -437,6 +437,9 @@ struct snd_soc_jack_zone {
  * @invert:       report presence in low state
  * @debouce_time: debouce time in ms
  * @wake:	  enable as wake source
+ * @jack_status_check: callback function which overrides the detection
+ *		       to provide more complex checks (eg, reading an
+ *		       ADC).
  */
 #ifdef CONFIG_GPIOLIB
 struct snd_soc_jack_gpio {

commit 7887ab3a274dc5f1d1d94ca0cd41ae495d01f94f
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Thu Feb 17 16:35:55 2011 -0800

    ASoC: Allow GPIO jack detection to be configured as a wake source
    
    Some systems wish to use jacks as wake sources. Provide a wake flag in the
    GPIO configuration which causes the driver to enable the IRQ as a wake
    source.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 4ccf1e4e0dd0..fb57c33482e5 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -436,6 +436,7 @@ struct snd_soc_jack_zone {
  * @report:       value to report when jack detected
  * @invert:       report presence in low state
  * @debouce_time: debouce time in ms
+ * @wake:	  enable as wake source
  */
 #ifdef CONFIG_GPIOLIB
 struct snd_soc_jack_gpio {
@@ -444,6 +445,8 @@ struct snd_soc_jack_gpio {
 	int report;
 	int invert;
 	int debounce_time;
+	bool wake;
+
 	struct snd_soc_jack *jack;
 	struct delayed_work work;
 

commit fa9879edebdaad4cfcd2dbe3eaa2ba0dc4f0a262
Author: Vinod Koul <vinod.koul@intel.com>
Date:   Wed Feb 9 14:44:17 2011 +0530

    ASoC: add support for multiple jack types
    
    This patch adds soc-jack support for adding voltage zones and for
    detecting jack type
    
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Harsha Priya <priya.harsha@intel.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 4b6c0a8c332f..4ccf1e4e0dd0 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -234,6 +234,7 @@ struct snd_soc_codec;
 struct snd_soc_codec_driver;
 struct soc_enum;
 struct snd_soc_jack;
+struct snd_soc_jack_zone;
 struct snd_soc_jack_pin;
 struct snd_soc_cache_ops;
 #include <sound/soc-dapm.h>
@@ -307,6 +308,9 @@ void snd_soc_jack_notifier_register(struct snd_soc_jack *jack,
 				    struct notifier_block *nb);
 void snd_soc_jack_notifier_unregister(struct snd_soc_jack *jack,
 				      struct notifier_block *nb);
+int snd_soc_jack_add_zones(struct snd_soc_jack *jack, int count,
+			  struct snd_soc_jack_zone *zones);
+int snd_soc_jack_get_type(struct snd_soc_jack *jack, int micbias_voltage);
 #ifdef CONFIG_GPIOLIB
 int snd_soc_jack_add_gpios(struct snd_soc_jack *jack, int count,
 			struct snd_soc_jack_gpio *gpios);
@@ -406,6 +410,24 @@ struct snd_soc_jack_pin {
 	bool invert;
 };
 
+/**
+ * struct snd_soc_jack_zone - Describes voltage zones of jack detection
+ *
+ * @min_mv: start voltage in mv
+ * @max_mv: end voltage in mv
+ * @jack_type: type of jack that is expected for this voltage
+ * @debounce_time: debounce_time for jack, codec driver should wait for this
+ *		duration before reading the adc for voltages
+ * @:list: list container
+ */
+struct snd_soc_jack_zone {
+	unsigned int min_mv;
+	unsigned int max_mv;
+	unsigned int jack_type;
+	unsigned int debounce_time;
+	struct list_head list;
+};
+
 /**
  * struct snd_soc_jack_gpio - Describes a gpio pin for jack detection
  *
@@ -435,6 +457,7 @@ struct snd_soc_jack {
 	struct list_head pins;
 	int status;
 	struct blocking_notifier_head notifier;
+	struct list_head jack_zones;
 };
 
 /* SoC PCM stream information */

commit dddf3e4c257879bc35cda3f542507c43f2648a2a
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Fri Jan 28 13:11:47 2011 +0000

    ASoC: Add card driver data
    
    Provide driver data for cards within the card structure. To simplify the
    implementation of the PM operations we don't use the struct device driver
    data as this is used by the core to retrieve the card in callbacks from
    the device model and PM core.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 7ecdaefd1b63..4b6c0a8c332f 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -705,6 +705,8 @@ struct snd_soc_card {
 	struct dentry *debugfs_pop_time;
 #endif
 	u32 pop_time;
+
+	void *drvdata;
 };
 
 /* SoC machine DAI configuration, glues a codec and cpu DAI together */
@@ -756,6 +758,17 @@ unsigned int snd_soc_write(struct snd_soc_codec *codec,
 
 /* device driver data */
 
+static inline void snd_soc_card_set_drvdata(struct snd_soc_card *card,
+		void *data)
+{
+	card->drvdata = data;
+}
+
+static inline void *snd_soc_card_get_drvdata(struct snd_soc_card *card)
+{
+	return card->drvdata;
+}
+
 static inline void snd_soc_codec_set_drvdata(struct snd_soc_codec *codec,
 		void *data)
 {

commit f85a9e0d260905f98d4ca6b66f0e64f63a729dba
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Wed Jan 26 21:41:28 2011 +0000

    ASoC: Add subsequence information to seq_notify callbacks
    
    Allows drivers to distinguish which subsequence is being notified when
    they get called back.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 64856d656f15..7ecdaefd1b63 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -553,7 +553,7 @@ struct snd_soc_codec_driver {
 			      enum snd_soc_bias_level level);
 
 	void (*seq_notifier)(struct snd_soc_dapm_context *,
-			     enum snd_soc_dapm_type);
+			     enum snd_soc_dapm_type, int);
 };
 
 /* SoC platform interface */

commit aaee8ef146111566e1c607bdf368d73fb966be2e
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Wed Jan 26 20:53:50 2011 +0000

    ASoC: Make cache status available via debugfs
    
    Could just as well live in sysfs but sysfs doesn't have the simple
    value export helpers debugfs does.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 7e8cf4f318a9..64856d656f15 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -493,14 +493,14 @@ struct snd_soc_codec {
 	struct snd_ac97 *ac97;  /* for ad-hoc ac97 devices */
 	unsigned int active;
 	unsigned int cache_bypass:1; /* Suppress access to the cache */
-	unsigned int cache_only:1;  /* Suppress writes to hardware */
-	unsigned int cache_sync:1; /* Cache needs to be synced to hardware */
 	unsigned int suspended:1; /* Codec is in suspend PM state */
 	unsigned int probed:1; /* Codec has been probed */
 	unsigned int ac97_registered:1; /* Codec has been AC97 registered */
 	unsigned int ac97_created:1; /* Codec has been created by SoC */
 	unsigned int sysfs_registered:1; /* codec has been sysfs registered */
 	unsigned int cache_init:1; /* codec cache has been initialized */
+	u32 cache_only;  /* Suppress writes to hardware */
+	u32 cache_sync; /* Cache needs to be synced to hardware */
 
 	/* codec IO */
 	void *control_data; /* codec control (i2c/3wire) data */

commit 6f8ab4ac292f81b9246ddf363bf1c6a2fc7a0629
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Wed Jan 26 14:59:27 2011 +0000

    ASoC: Export card PM callbacks for use in direct registered cards
    
    Allow hookup of cards registered directly with the core to the PM
    operations by exporting the device power management operations to
    modules, also exporting the default PM operations since it is
    expected that most cards will end up using exactly the same setup.
    
    Note that the callbacks require that the driver data for the card be
    the snd_soc_card.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 2d10090a08c0..7e8cf4f318a9 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -260,6 +260,9 @@ enum snd_soc_compress_type {
 
 int snd_soc_register_card(struct snd_soc_card *card);
 int snd_soc_unregister_card(struct snd_soc_card *card);
+int snd_soc_suspend(struct device *dev);
+int snd_soc_resume(struct device *dev);
+int snd_soc_poweroff(struct device *dev);
 int snd_soc_register_platform(struct device *dev,
 		struct snd_soc_platform_driver *platform_drv);
 void snd_soc_unregister_platform(struct device *dev);
@@ -802,4 +805,6 @@ static inline void snd_soc_initialize_card_lists(struct snd_soc_card *card)
 extern struct dentry *snd_soc_debugfs_root;
 #endif
 
+extern const struct dev_pm_ops snd_soc_pm_ops;
+
 #endif

commit e7361ec4996c170c63c4ac379085896db85ff34d
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Wed Jan 26 14:17:20 2011 +0000

    ASoC: Replace pdev with card in machine driver probe and remove
    
    In order to support cards instantiated without using soc-audio remove
    the use of the platform device in the card probe() and remove() ops.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 4a489ae44a6e..2d10090a08c0 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -649,8 +649,8 @@ struct snd_soc_card {
 
 	bool instantiated;
 
-	int (*probe)(struct platform_device *pdev);
-	int (*remove)(struct platform_device *pdev);
+	int (*probe)(struct snd_soc_card *card);
+	int (*remove)(struct snd_soc_card *card);
 
 	/* the pre and post PM functions are used to do any PM work before and
 	 * after the codec and DAI's do any PM work. */

commit 70b2ac126a60c87145ae8a8eb1b4dccaa0bf5468
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Wed Jan 26 14:05:25 2011 +0000

    ASoC: Use card rather than soc-audio device to card PM functions
    
    The platform device for the card is tied closely to the soc-audio
    implementation which we're currently trying to remove in favour of
    allowing cards to have their own devices. Begin removing it by
    replacing it with the card in the suspend and resume callbacks we
    give to cards, also taking the opportunity to remove the legacy
    suspend types which are currently hard coded anyway.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 1355ef029d82..4a489ae44a6e 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -654,10 +654,10 @@ struct snd_soc_card {
 
 	/* the pre and post PM functions are used to do any PM work before and
 	 * after the codec and DAI's do any PM work. */
-	int (*suspend_pre)(struct platform_device *pdev, pm_message_t state);
-	int (*suspend_post)(struct platform_device *pdev, pm_message_t state);
-	int (*resume_pre)(struct platform_device *pdev);
-	int (*resume_post)(struct platform_device *pdev);
+	int (*suspend_pre)(struct snd_soc_card *card);
+	int (*suspend_post)(struct snd_soc_card *card);
+	int (*resume_pre)(struct snd_soc_card *card);
+	int (*resume_post)(struct snd_soc_card *card);
 
 	/* callbacks */
 	int (*set_bias_level)(struct snd_soc_card *,

commit 181e055e6bed80afbf8ba2bb5e3ce84fbd3f633c
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon Jan 24 14:05:25 2011 +0000

    ASoC: Fix type for snd_soc_volatile_register()
    
    We generally refer to registers as unsigned ints (including in the
    underlying CODEC driver operation).
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index c184f84a354c..1355ef029d82 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -267,7 +267,8 @@ int snd_soc_register_codec(struct device *dev,
 		const struct snd_soc_codec_driver *codec_drv,
 		struct snd_soc_dai_driver *dai_drv, int num_dai);
 void snd_soc_unregister_codec(struct device *dev);
-int snd_soc_codec_volatile_register(struct snd_soc_codec *codec, int reg);
+int snd_soc_codec_volatile_register(struct snd_soc_codec *codec,
+				    unsigned int reg);
 int snd_soc_codec_set_cache_io(struct snd_soc_codec *codec,
 			       int addr_bits, int data_bits,
 			       enum snd_soc_control_type control);

commit dad8e7aeeb83a26d267e757e4c1cf69591850477
Author: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
Date:   Wed Jan 19 14:53:36 2011 +0000

    ASoC: soc-cache: Introduce the cache_bypass option
    
    This is primarily needed to avoid writing back to the cache
    whenever we are syncing the cache with the hardware.  This gives a
    performance benefit especially for large register maps.
    
    Signed-off-by: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index d244f9013767..c184f84a354c 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -488,6 +488,7 @@ struct snd_soc_codec {
 	/* runtime */
 	struct snd_ac97 *ac97;  /* for ad-hoc ac97 devices */
 	unsigned int active;
+	unsigned int cache_bypass:1; /* Suppress access to the cache */
 	unsigned int cache_only:1;  /* Suppress writes to hardware */
 	unsigned int cache_sync:1; /* Cache needs to be synced to hardware */
 	unsigned int suspended:1; /* Codec is in suspend PM state */

commit 474b62d6eee733abdcd36f8e3e5ce504fbb9110b
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Tue Jan 18 16:14:44 2011 +0000

    ASoC: Provide per widget type callback when executing DAPM sequences
    
    Many modern devices have features such as DC servos which take time to start.
    Currently these are handled by per-widget events but this makes it difficult
    to paralleise operations on multiple widgets, meaning delays can end up
    being needlessly serialised. By providing a callback to drivers when all
    widgets of a given type have been handled during a DAPM sequence the core
    allows drivers to start operations separately and wait for them to complete
    much more simply.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 9952254974b3..d244f9013767 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -546,6 +546,9 @@ struct snd_soc_codec_driver {
 	/* codec bias level */
 	int (*set_bias_level)(struct snd_soc_codec *,
 			      enum snd_soc_bias_level level);
+
+	void (*seq_notifier)(struct snd_soc_dapm_context *,
+			     enum snd_soc_dapm_type);
 };
 
 /* SoC platform interface */

commit 70a7ca34dbdcc6f0ed332baf2b308bab2871424a
Author: Vinod Koul <vinod.koul@intel.com>
Date:   Fri Jan 14 19:22:48 2011 +0530

    ASoC: soc core allow machine driver to register the card
    
    The machine driver can't register the card directly and need to do this thru
    soc-audio device creation
    
    This patch allows the register and unregister card to be directly called by
    machine drivers
    
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Harsha Priya <priya.harsha@intel.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 541ddfaa1243..9952254974b3 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -258,6 +258,8 @@ enum snd_soc_compress_type {
 	SND_SOC_RBTREE_COMPRESSION
 };
 
+int snd_soc_register_card(struct snd_soc_card *card);
+int snd_soc_unregister_card(struct snd_soc_card *card);
 int snd_soc_register_platform(struct device *dev,
 		struct snd_soc_platform_driver *platform_drv);
 void snd_soc_unregister_platform(struct device *dev);

commit 4e10bda05d6c7d4aba509bbbab5ba748d54c702f
Author: Vinod Koul <vinod.koul@intel.com>
Date:   Thu Jan 13 22:48:52 2011 +0530

    ASoC: soc core add inline to handle card list initialzation
    
    Currently the soc_probe initializes the card hence it does the card list
    initialzation. But if machines directly register the card they would need to
    do these steps, so putting them as inline would save lot of code
    
    This patch adds an inline to do list initialzation
    
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Harsha Priya <harsha.priya@intel.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index accb8a16c165..541ddfaa1243 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -779,6 +779,16 @@ static inline void *snd_soc_pcm_get_drvdata(struct snd_soc_pcm_runtime *rtd)
 	return dev_get_drvdata(&rtd->dev);
 }
 
+static inline void snd_soc_initialize_card_lists(struct snd_soc_card *card)
+{
+	INIT_LIST_HEAD(&card->dai_dev_list);
+	INIT_LIST_HEAD(&card->codec_dev_list);
+	INIT_LIST_HEAD(&card->platform_dev_list);
+	INIT_LIST_HEAD(&card->widgets);
+	INIT_LIST_HEAD(&card->paths);
+	INIT_LIST_HEAD(&card->dapm_list);
+}
+
 #include <sound/soc-dai.h>
 
 #ifdef CONFIG_DEBUG_FS

commit 1500b7b5ffaacb8199e0a61162f5d349fb19acbe
Author: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
Date:   Thu Jan 13 12:20:38 2011 +0000

    ASoC: Automatically assign the default readable()/volatile() functions
    
    Ensure that all calls to readable_register()/volatile_register() go via
    the snd_soc_codec function pointers.
    
    If the default register access table has been given but no functions
    for handling readable()/volatile() registers, use the default ones provided
    by soc-cache.
    
    Signed-off-by: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 97d1832bb9df..accb8a16c165 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -480,6 +480,8 @@ struct snd_soc_codec {
 	int num_dai;
 	enum snd_soc_compress_type compress_type;
 	size_t reg_size;	/* reg_cache_size * reg_word_size */
+	int (*volatile_register)(struct snd_soc_codec *, unsigned int);
+	int (*readable_register)(struct snd_soc_codec *, unsigned int);
 
 	/* runtime */
 	struct snd_ac97 *ac97;  /* for ad-hoc ac97 devices */

commit d4754ec91c7b094298f0b2ba02327e6887671edc
Author: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
Date:   Thu Jan 13 12:20:37 2011 +0000

    ASoC: Update users of readable_register()/volatile_register()
    
    Signed-off-by: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index b8acf99ac89d..97d1832bb9df 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -529,8 +529,8 @@ struct snd_soc_codec_driver {
 	int (*write)(struct snd_soc_codec *, unsigned int, unsigned int);
 	int (*display_register)(struct snd_soc_codec *, char *,
 				size_t, unsigned int);
-	int (*volatile_register)(unsigned int);
-	int (*readable_register)(unsigned int);
+	int (*volatile_register)(struct snd_soc_codec *, unsigned int);
+	int (*readable_register)(struct snd_soc_codec *, unsigned int);
 	short reg_cache_size;
 	short reg_cache_step;
 	short reg_word_size;

commit 066d16c3e8194677a9aaeb06a45e4014387d16f1
Author: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
Date:   Thu Jan 13 12:20:36 2011 +0000

    ASoC: soc-cache: Add support for default readable()/volatile() functions
    
    For common scenarios, device drivers can provide a table of all the
    registers that are at least either readable/writable/volatile.  The idea
    is that if a register lookup fails, all of its read/write/vol members
    will be zero and will be treated as default.  This also reduces the
    size of the register access array.
    
    Signed-off-by: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index d609232da82a..b8acf99ac89d 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -276,6 +276,10 @@ int snd_soc_cache_write(struct snd_soc_codec *codec,
 			unsigned int reg, unsigned int value);
 int snd_soc_cache_read(struct snd_soc_codec *codec,
 		       unsigned int reg, unsigned int *value);
+int snd_soc_default_volatile_register(struct snd_soc_codec *codec,
+				      unsigned int reg);
+int snd_soc_default_readable_register(struct snd_soc_codec *codec,
+				      unsigned int reg);
 
 /* Utility functions to get clock rates from various things */
 int snd_soc_calc_frame_size(int sample_size, int channels, int tdm_slots);
@@ -366,6 +370,22 @@ int snd_soc_get_volsw_2r_sx(struct snd_kcontrol *kcontrol,
 int snd_soc_put_volsw_2r_sx(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
 
+/**
+ * struct snd_soc_reg_access - Describes whether a given register is
+ * readable, writable or volatile.
+ *
+ * @reg: the register number
+ * @read: whether this register is readable
+ * @write: whether this register is writable
+ * @vol: whether this register is volatile
+ */
+struct snd_soc_reg_access {
+	u16 reg;
+	u16 read;
+	u16 write;
+	u16 vol;
+};
+
 /**
  * struct snd_soc_jack_pin - Describes a pin to update based on jack detection
  *
@@ -515,6 +535,8 @@ struct snd_soc_codec_driver {
 	short reg_cache_step;
 	short reg_word_size;
 	const void *reg_cache_default;
+	short reg_access_size;
+	const struct snd_soc_reg_access *reg_access_default;
 	enum snd_soc_compress_type compress_type;
 
 	/* codec bias level */

commit aea170a099793abcd0e6de46b947458073204241
Author: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
Date:   Wed Jan 12 10:38:58 2011 +0000

    ASoC: soc-cache: Add reg_size as a member to snd_soc_codec
    
    Simplify the use of reg_size, by calculating it once and storing it in
    the codec structure for later reference.  The value of reg_size is
    reg_cache_size * reg_word_size.
    
    Signed-off-by: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index c477058ff98a..d609232da82a 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -459,6 +459,7 @@ struct snd_soc_codec {
 	struct list_head card_list;
 	int num_dai;
 	enum snd_soc_compress_type compress_type;
+	size_t reg_size;	/* reg_cache_size * reg_word_size */
 
 	/* runtime */
 	struct snd_ac97 *ac97;  /* for ad-hoc ac97 devices */

commit 8a9dab1a555e3f2088c68cae792dfd7e854e65e4
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon Jan 10 22:25:21 2011 +0000

    ASoC: Update name of debugfs root symbol to snd_soc_
    
    Everything else is using snd_soc_ so we should use it here too.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 96aadbba85b2..c477058ff98a 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -757,7 +757,7 @@ static inline void *snd_soc_pcm_get_drvdata(struct snd_soc_pcm_runtime *rtd)
 #include <sound/soc-dai.h>
 
 #ifdef CONFIG_DEBUG_FS
-extern struct dentry *asoc_debugfs_root;
+extern struct dentry *snd_soc_debugfs_root;
 #endif
 
 #endif

commit faff4bb067d15a3bc0dde8c50cbc1a7075e314de
Author: Stephen Warren <swarren@nvidia.com>
Date:   Fri Jan 7 22:36:11 2011 -0700

    ASoC: Export debugfs root dentry
    
    A couple Tegra ASoC drivers will create debugfs entries. Mark requested
    these by under debugfs/asoc/ not just debugfs/. To enable this, export
    the dentry representing debugfs/asoc/.
    
    Also, rename debugfs_root -> asoc_debugfs_root now it's exported to
    prevent potential symbol name clashes.
    
    Signed-off-by: Stephen Warren <swarren@nvidia.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 74921f20a1d8..96aadbba85b2 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -756,4 +756,8 @@ static inline void *snd_soc_pcm_get_drvdata(struct snd_soc_pcm_runtime *rtd)
 
 #include <sound/soc-dai.h>
 
+#ifdef CONFIG_DEBUG_FS
+extern struct dentry *asoc_debugfs_root;
+#endif
+
 #endif

commit 7be31be880ee00c6f8d38184368e8a834923b469
Author: Jarkko Nikula <jhnikula@gmail.com>
Date:   Tue Dec 14 12:18:32 2010 +0200

    ASoC: Extend DAPM to handle power changes on cross-device paths
    
    Power change event like stream start/stop or kcontrol change in a
    cross-device path originates from one device but codec bias and widget power
    changes must be populated to another devices on that path as well.
    
    This patch modifies the dapm_power_widgets so that all the widgets on a
    sound card are checked for a power change, not just those that are specific
    to originating device. Also bias management is extended to check all the
    devices. Only exception in bias management are widgetless codecs whose bias
    state is changed only if power change is originating from that context.
    
    DAPM context test is added to dapm_seq_run to take care of if power sequence
    extends to an another device which requires separate register writes.
    
    Signed-off-by: Jarkko Nikula <jhnikula@gmail.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index d5fb8618fdba..74921f20a1d8 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -663,6 +663,7 @@ struct snd_soc_card {
 
 	struct list_head widgets;
 	struct list_head paths;
+	struct list_head dapm_list;
 
 #ifdef CONFIG_DEBUG_FS
 	struct dentry *debugfs_card_root;

commit 97c866defc0fc6e18b49603ac19f732f53e79c46
Author: Jarkko Nikula <jhnikula@gmail.com>
Date:   Tue Dec 14 12:18:31 2010 +0200

    ASoC: Move widgets from DAPM context to snd_soc_card
    
    Decoupling widgets from DAPM context is required when extending the ASoC
    core to cross-device paths. Even the list of widgets are now kept in
    struct snd_soc_card, the widget listing in sysfs and debugs remain sorted
    per device.
    
    This patch makes possible to build cross-device paths but does not extend
    yet the DAPM to handle codec bias and widget power changes of an another
    device.
    
    Cross-device paths are registered by listing the widgets from device A in
    a map for device B. In case of conflicting widget names between the devices,
    a uniform name prefix is needed to separate them. See commit ead9b91
    "ASoC: Add optional name_prefix for kcontrol, widget and route names" for
    help.
    
    An example below shows a path that connects MONO out of A into Line In of B:
    
    static const struct snd_soc_dapm_route mapA[] = {
            {"MONO", NULL, "DAC"},
    };
    
    static const struct snd_soc_dapm_route mapB[] = {
            {"Line In", NULL, "MONO"},
    };
    
    Signed-off-by: Jarkko Nikula <jhnikula@gmail.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 466895b627b5..d5fb8618fdba 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -661,6 +661,7 @@ struct snd_soc_card {
 	struct list_head platform_dev_list;
 	struct list_head dai_dev_list;
 
+	struct list_head widgets;
 	struct list_head paths;
 
 #ifdef CONFIG_DEBUG_FS

commit 8ddab3f5107c3955e70e87a632d4d179ddba1189
Author: Jarkko Nikula <jhnikula@gmail.com>
Date:   Tue Dec 14 12:18:30 2010 +0200

    ASoC: Move DAPM paths from DAPM context to snd_soc_card
    
    Decoupling DAPM paths from DAPM context is a first prerequisite when
    extending ASoC core to cross-device paths. This patch is almost a nullop and
    does not allow to construct cross-device setup but the path clean-up part in
    dapm_free_widgets is prepared to remove cross-device paths between a device
    being removed and others.
    
    Signed-off-by: Jarkko Nikula <jhnikula@gmail.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 7e65b015f8dd..466895b627b5 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -661,6 +661,8 @@ struct snd_soc_card {
 	struct list_head platform_dev_list;
 	struct list_head dai_dev_list;
 
+	struct list_head paths;
+
 #ifdef CONFIG_DEBUG_FS
 	struct dentry *debugfs_card_root;
 	struct dentry *debugfs_pop_time;

commit 05d209ad3b66efbb0925f01f1b3369fcbf31c86f
Author: Seungwhan Youn <sw.youn@samsung.com>
Date:   Thu Dec 9 13:17:39 2010 +0900

    ASoC: Remove unnecessary structure definitions
    
    This patch removes some legacy structure definitions which are not using
    in current ASoC drivers.
    
    Signed-off-by: Seungwhan Youn <sw.youn@samsung.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 0a962dc42c5b..7e65b015f8dd 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -222,10 +222,8 @@ enum snd_soc_bias_level {
 
 struct snd_jack;
 struct snd_soc_card;
-struct snd_soc_device;
 struct snd_soc_pcm_stream;
 struct snd_soc_ops;
-struct snd_soc_dai_mode;
 struct snd_soc_pcm_runtime;
 struct snd_soc_dai;
 struct snd_soc_dai_driver;
@@ -235,7 +233,6 @@ struct snd_soc_platform_driver;
 struct snd_soc_codec;
 struct snd_soc_codec_driver;
 struct soc_enum;
-struct snd_soc_ac97_ops;
 struct snd_soc_jack;
 struct snd_soc_jack_pin;
 struct snd_soc_cache_ops;

commit 0d735eaa2c1d80c997fd775b679e36b80b8e85d1
Author: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
Date:   Mon Dec 6 09:51:57 2010 +0000

    ASoC: soc-cache: Add optional cache name member to snd_soc_cache_ops
    
    Added an optional name member to snd_soc_cache_ops to enable more
    sensible diagnostic messages during cache init, exit and sync.
    
    Remove redundant newline in source code.
    
    Signed-off-by: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 4abc2f8fe77a..0a962dc42c5b 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -437,6 +437,7 @@ struct snd_soc_ops {
 
 /* SoC cache ops */
 struct snd_soc_cache_ops {
+	const char *name;
 	enum snd_soc_compress_type id;
 	int (*init)(struct snd_soc_codec *codec);
 	int (*exit)(struct snd_soc_codec *codec);

commit 1badabd980da3bc09933c14970017067940ecd57
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Sat Dec 4 12:41:04 2010 +0000

    ASoC: Add post-CODEC bias level callback for machine driver
    
    Currently the machine driver can only do bias level configuration before
    the CODEC bias level is brought up. This means that the machine cannot do
    any configuration which depends on the CODEC bias level being maintained.
    Provide a post-CODEC callback which allows the machine driver to do things
    like enable the FLL on a CODEC which is brought down to BIAS_OFF when idle.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 0eea08e1bdd5..4abc2f8fe77a 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -632,6 +632,8 @@ struct snd_soc_card {
 	/* callbacks */
 	int (*set_bias_level)(struct snd_soc_card *,
 			      enum snd_soc_bias_level level);
+	int (*set_bias_level_post)(struct snd_soc_card *,
+				   enum snd_soc_bias_level level);
 
 	long pmdown_time;
 

commit 001ae4c0350a35e8358514326e5c3d165357979a
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Thu Dec 2 16:21:08 2010 +0000

    ASoC: Constify struct snd_soc_codec_driver
    
    Allow the CODEC driver structure to be marked const by making all
    the APIs that use it do so.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 7d53cc453637..0eea08e1bdd5 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -265,7 +265,7 @@ int snd_soc_register_platform(struct device *dev,
 		struct snd_soc_platform_driver *platform_drv);
 void snd_soc_unregister_platform(struct device *dev);
 int snd_soc_register_codec(struct device *dev,
-		struct snd_soc_codec_driver *codec_drv,
+		const struct snd_soc_codec_driver *codec_drv,
 		struct snd_soc_dai_driver *dai_drv, int num_dai);
 void snd_soc_unregister_codec(struct device *dev);
 int snd_soc_codec_volatile_register(struct snd_soc_codec *codec, int reg);
@@ -453,7 +453,7 @@ struct snd_soc_codec {
 	const char *name_prefix;
 	int id;
 	struct device *dev;
-	struct snd_soc_codec_driver *driver;
+	const struct snd_soc_codec_driver *driver;
 
 	struct mutex mutex;
 	struct snd_soc_card *card;

commit fdf0f54dab8e401fd9bdd441c3fc4fa5c8837646
Author: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
Date:   Thu Dec 2 16:11:06 2010 +0000

    ASoC: soc-core: Allow machine drivers to override compress_type
    
    This patch allows machine drivers to override the compression type
    provided by the codec driver.
    
    Signed-off-by: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 017986159d5e..7d53cc453637 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -472,6 +472,7 @@ struct snd_soc_codec {
 	unsigned int ac97_registered:1; /* Codec has been AC97 registered */
 	unsigned int ac97_created:1; /* Codec has been created by SoC */
 	unsigned int sysfs_registered:1; /* codec has been sysfs registered */
+	unsigned int cache_init:1; /* codec cache has been initialized */
 
 	/* codec IO */
 	void *control_data; /* codec control (i2c/3wire) data */

commit 3335ddca9367675f4ee0bd50cc70402c4919a10d
Author: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
Date:   Thu Dec 2 16:11:05 2010 +0000

    ASoC: soc-cache: Use reg_def_copy instead of reg_cache_default
    
    Make sure to use codec->reg_def_copy instead of codec_drv->reg_cache_default
    wherever necessary.  This change is necessary because in the next patch we
    move the cache initialization code outside snd_soc_register_codec() and by that
    time any data marked as __devinitconst such as the original reg_cache_default
    array might have already been freed by the kernel.
    
    Signed-off-by: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index cf76021f04a7..017986159d5e 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -480,6 +480,7 @@ struct snd_soc_codec {
 	unsigned int (*read)(struct snd_soc_codec *, unsigned int);
 	int (*write)(struct snd_soc_codec *, unsigned int, unsigned int);
 	void *reg_cache;
+	const void *reg_def_copy;
 	const struct snd_soc_cache_ops *cache_ops;
 	struct mutex cache_rw_mutex;
 

commit ff819b8357df0ca9903ff7c9ad518b949c410123
Author: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
Date:   Thu Dec 2 14:53:03 2010 +0000

    ASoC: soc-core: Generalize snd_soc_prefix_map and rename to snd_soc_codec_conf
    
    The snd_soc_codec_conf struct now holds codec specific configuration
    information.
    
    A new configuration option has been added to allow machine drivers to
    override the compression type set by the codec driver.
    
    In the absence of providing an snd_soc_codec_conf struct or when providing
    one but not setting the compress_type member to anything, the one supplied
    by the codec driver will be used instead.  In all other cases the one
    set in the snd_soc_codec_conf struct takes effect.
    
    Signed-off-by: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
    Acked-by: Jarkko Nikula <jhnikula@gmail.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 24db9101c87d..cf76021f04a7 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -581,9 +581,20 @@ struct snd_soc_dai_link {
 	struct snd_soc_ops *ops;
 };
 
-struct snd_soc_prefix_map {
+struct snd_soc_codec_conf {
 	const char *dev_name;
+
+	/*
+	 * optional map of kcontrol, widget and path name prefixes that are
+	 * associated per device
+	 */
 	const char *name_prefix;
+
+	/*
+	 * set this to the desired compression type if you want to
+	 * override the one supplied in codec->driver->compress_type
+	 */
+	enum snd_soc_compress_type compress_type;
 };
 
 struct snd_soc_aux_dev {
@@ -628,12 +639,9 @@ struct snd_soc_card {
 	struct snd_soc_pcm_runtime *rtd;
 	int num_rtd;
 
-	/*
-	 * optional map of kcontrol, widget and path name prefixes that are
-	 * associated per device
-	 */
-	struct snd_soc_prefix_map *prefix_map;
-	int num_prefixes;
+	/* optional codec specific configuration */
+	struct snd_soc_codec_conf *codec_conf;
+	int num_configs;
 
 	/*
 	 * optional auxiliary devices such as amplifiers or codecs with DAI

commit 119bd789f6405b8bf351b58561d08d8fc4e2d10b
Author: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
Date:   Thu Dec 2 14:53:02 2010 +0000

    ASoC: Change the base value of compress_type
    
    Ensure that the base value of compress_type starts at 1 so that
    we know whether the machine driver has provided a compress_type
    for overriding the codec supplied one.
    
    Signed-off-by: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 586bfb99fedb..24db9101c87d 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -256,7 +256,7 @@ enum snd_soc_control_type {
 };
 
 enum snd_soc_compress_type {
-	SND_SOC_FLAT_COMPRESSION,
+	SND_SOC_FLAT_COMPRESSION = 1,
 	SND_SOC_LZO_COMPRESSION,
 	SND_SOC_RBTREE_COMPRESSION
 };

commit 23bbce34f47762ce944ea9b8b3b3e05e220c6a2e
Author: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
Date:   Thu Dec 2 14:53:01 2010 +0000

    ASoC: Add compress_type as a member to snd_soc_codec
    
    We need to keep a copy of the compress_type supplied by the codec driver
    so that we can override it if necessary with whatever the machine driver
    has provided us with.  The reason for not modifying the codec->driver
    struct directly is that ideally we'd like to keep it const.
    
    Adjust the code in soc-cache and soc-core to make use of the compress_type
    member in the snd_soc_codec struct.
    
    Signed-off-by: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 714a70441bf2..586bfb99fedb 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -460,6 +460,7 @@ struct snd_soc_codec {
 	struct list_head list;
 	struct list_head card_list;
 	int num_dai;
+	enum snd_soc_compress_type compress_type;
 
 	/* runtime */
 	struct snd_ac97 *ac97;  /* for ad-hoc ac97 devices */

commit c3acec2671cc448bc549b06b561ae2454238e9a0
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Thu Dec 2 16:15:29 2010 +0000

    ASoC: Move active copy of CODEC read and write into runtime structure
    
    We shouldn't be assigning to the driver structure (which really ought
    to be const, further patch to follow) though there's unlikely to be any
    actual problem except in the unlikely case that two devices with the
    same driver but different bus types appear in the same system.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 4a9195c5ef2d..714a70441bf2 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -476,6 +476,8 @@ struct snd_soc_codec {
 	void *control_data; /* codec control (i2c/3wire) data */
 	hw_write_t hw_write;
 	unsigned int (*hw_read)(struct snd_soc_codec *, unsigned int);
+	unsigned int (*read)(struct snd_soc_codec *, unsigned int);
+	int (*write)(struct snd_soc_codec *, unsigned int, unsigned int);
 	void *reg_cache;
 	const struct snd_soc_cache_ops *cache_ops;
 	struct mutex cache_rw_mutex;

commit 2eea392d0a28a0a07d36a9da544eb40f81bf4cb6
Author: Jarkko Nikula <jhnikula@gmail.com>
Date:   Thu Nov 25 17:47:38 2010 +0200

    ASoC: Add support for optional auxiliary dailess codecs
    
    This makes possible to register auxiliary dailess codecs in a machine
    driver. Term dailess is used here for amplifiers and codecs without DAI or
    DAI being unused.
    
    Dailess auxiliary codecs are kept in struct snd_soc_aux_dev and those codecs
    are probed after initializing the DAI links. There are no major differences
    between DAI link codecs and dailess codecs in ASoC core point of view. DAPM
    handles them equally and sysfs and debugfs directories for dailess codecs
    are similar except the pmdown_time node is not created.
    
    Only suspend and resume functions are modified to traverse all probed codecs
    instead of DAI link codecs.
    
    Example below shows a dailess codec registration.
    
    struct snd_soc_aux_dev foo_aux_dev[] = {
            {
                    .name = "Amp",
                    .codec_name = "codec.2",
                    .init = foo_init2,
            },
    };
    
    static struct snd_soc_card card = {
            ...
            .aux_dev = foo_aux_dev,
            .num_aux_devs = ARRAY_SIZE(foo_aux_dev),
    };
    
    Signed-off-by: Jarkko Nikula <jhnikula@gmail.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 9e593cf1440b..4a9195c5ef2d 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -583,6 +583,14 @@ struct snd_soc_prefix_map {
 	const char *name_prefix;
 };
 
+struct snd_soc_aux_dev {
+	const char *name;		/* Codec name */
+	const char *codec_name;		/* for multi-codec */
+
+	/* codec/machine specific init - e.g. add machine controls */
+	int (*init)(struct snd_soc_dapm_context *dapm);
+};
+
 /* SoC card */
 struct snd_soc_card {
 	const char *name;
@@ -624,6 +632,15 @@ struct snd_soc_card {
 	struct snd_soc_prefix_map *prefix_map;
 	int num_prefixes;
 
+	/*
+	 * optional auxiliary devices such as amplifiers or codecs with DAI
+	 * link unused
+	 */
+	struct snd_soc_aux_dev *aux_dev;
+	int num_aux_devs;
+	struct snd_soc_pcm_runtime *rtd_aux;
+	int num_aux_rtd;
+
 	struct work_struct deferred_resume_work;
 
 	/* lists of probed devices belonging to this card */

commit df0701bb8660107e811bddba6e4933385f697a21
Author: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
Date:   Mon Nov 29 10:54:28 2010 +0000

    ASoC: soc-cache: Ensure consistent cache naming
    
    Signed-off-by: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 3eb92ef6c83f..9e593cf1440b 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -256,7 +256,7 @@ enum snd_soc_control_type {
 };
 
 enum snd_soc_compress_type {
-	SND_SOC_NO_COMPRESSION,
+	SND_SOC_FLAT_COMPRESSION,
 	SND_SOC_LZO_COMPRESSION,
 	SND_SOC_RBTREE_COMPRESSION
 };

commit ead9b9199c09653dd9b889933c7af75f020c7286
Author: Jarkko Nikula <jhnikula@gmail.com>
Date:   Sat Nov 13 20:40:44 2010 +0200

    ASoC: Add optional name_prefix for codec kcontrol, widget and route names
    
    There is a need to prefix codec kcontrol, widget and internal route names in
    an ASoC machine that has multiple codecs with conflicting names. The name
    collision would occur when codec drivers try to registering kcontrols with
    the same name or when building audio paths.
    
    This patch introduces optional prefix_map into struct snd_soc_card. With it
    machine drivers can specify a unique name prefix to each codec that have
    conflicting names with anothers. Prefix to codec is matched with codec
    name.
    
    Following example illustrates a machine that has two same codec instances.
    Name collision from kcontrol registration is avoided by specifying a name
    prefix "foo" for the second codec. As the codec widget names are prefixed
    then second audio map for that codec shows a prefixed widget name.
    
    static const struct snd_soc_dapm_route map0[] = {
            {"Spk", NULL, "MONO"},
    };
    
    static const struct snd_soc_dapm_route map1[] = {
            {"Vibra", NULL, "foo MONO"},
    };
    
    static struct snd_soc_prefix_map codec_prefix[] = {
            {
                    .dev_name = "codec.2",
                    .name_prefix = "foo",
            },
    };
    
    static struct snd_soc_card card = {
            ...
            .prefix_map = codec_prefix,
            .num_prefixes = ARRAY_SIZE(codec_prefix),
    };
    
    Signed-off-by: Jarkko Nikula <jhnikula@gmail.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index af23f4228869..3eb92ef6c83f 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -450,6 +450,7 @@ struct snd_soc_cache_ops {
 /* SoC Audio Codec device */
 struct snd_soc_codec {
 	const char *name;
+	const char *name_prefix;
 	int id;
 	struct device *dev;
 	struct snd_soc_codec_driver *driver;
@@ -577,6 +578,11 @@ struct snd_soc_dai_link {
 	struct snd_soc_ops *ops;
 };
 
+struct snd_soc_prefix_map {
+	const char *dev_name;
+	const char *name_prefix;
+};
+
 /* SoC card */
 struct snd_soc_card {
 	const char *name;
@@ -611,6 +617,13 @@ struct snd_soc_card {
 	struct snd_soc_pcm_runtime *rtd;
 	int num_rtd;
 
+	/*
+	 * optional map of kcontrol, widget and path name prefixes that are
+	 * associated per device
+	 */
+	struct snd_soc_prefix_map *prefix_map;
+	int num_prefixes;
+
 	struct work_struct deferred_resume_work;
 
 	/* lists of probed devices belonging to this card */

commit a7f387d5afd5e1102f909ab611370014f1f59ae2
Author: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
Date:   Thu Nov 11 10:04:59 2010 +0000

    ASoC: soc-cache: Add support for rbtree based register caching
    
    This patch adds support for rbtree compression when storing the
    register cache.  It does this by not adding any uninitialized registers
    (those whose value is 0).  If any of those registers is written
    with a nonzero value they get added into the rbtree.
    
    Consider a sample device with a large sparse register map.  The
    register indices are between [0, 0x31ff].  An array of 12800 registers
    is thus created each of which is 2 bytes.  This results in a 25kB
    region.  This array normally lives outside soc-core, normally in the
    driver itself.  The original soc-core code would kmemdup this region
    resulting in 50kB total memory.  When using the rbtree compression
    technique and __devinitconst on the original array the figures are
    as follows.  For this typical device, you might have 100 initialized
    registers, that is registers that are nonzero by default.  We build
    an rbtree with 100 nodes, each of which is 24 bytes.  This results
    in ~2kB of memory.  Assuming that the target arch can freeup the
    memory used by the initial __devinitconst array, we end up using
    about ~2kB bytes of actual memory.  The memory footprint will increase
    as uninitialized registers get written and thus new nodes created in
    the rbtree.  In practice, most of those registers are never changed.
    If the target arch can't freeup the __devinitconst array, we end up
    using a total of ~27kB.  The difference between the rbtree and the LZO
    caching techniques, is that if using the LZO technique the size of
    the cache will increase slower as more uninitialized registers get
    changed.
    
    Signed-off-by: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 10f5932d3d07..af23f4228869 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -257,7 +257,8 @@ enum snd_soc_control_type {
 
 enum snd_soc_compress_type {
 	SND_SOC_NO_COMPRESSION,
-	SND_SOC_LZO_COMPRESSION
+	SND_SOC_LZO_COMPRESSION,
+	SND_SOC_RBTREE_COMPRESSION
 };
 
 int snd_soc_register_platform(struct device *dev,

commit cc28fb8e7d55d4d7c1661dc0b236f4faddecdd9e
Author: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
Date:   Thu Nov 11 10:04:58 2010 +0000

    ASoC: soc-cache: Add support for LZO register caching
    
    This patch adds support for LZO compression when storing the register
    cache.  The initial register defaults cache is marked as __devinitconst
    and the only change required for a driver to use LZO compression is
    to set the compress_type member in codec->driver to SND_SOC_LZO_COMPRESSION.
    
    For a typical device whose register map would normally occupy 25kB or 50kB
    by using the LZO compression technique, one can get down to ~5-7kB.  There
    might be a performance penalty associated with each individual read/write
    due to decompressing/compressing the underlying cache, however that should not
    be noticeable.  These memory benefits depend on whether the target architecture
    can get rid of the memory occupied by the original register defaults cache
    which is marked as __devinitconst.  Nevertheless there will be some memory
    gain even if the target architecture can't get rid of the original register
    map, this should be around ~30-32kB instead of 50kB.
    
    Signed-off-by: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 275e41133468..10f5932d3d07 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -256,7 +256,8 @@ enum snd_soc_control_type {
 };
 
 enum snd_soc_compress_type {
-	SND_SOC_NO_COMPRESSION
+	SND_SOC_NO_COMPRESSION,
+	SND_SOC_LZO_COMPRESSION
 };
 
 int snd_soc_register_platform(struct device *dev,

commit 7a30a3db34cc7b2180a1a6c4a51d19d93c8a8b80
Author: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
Date:   Thu Nov 11 10:04:57 2010 +0000

    ASoC: soc-cache: Add support for flat register caching
    
    This patch introduces the new caching API and migrates the
    old caching interface into the new one.  The flat register caching
    technique does not use compression at all and it is equivalent to
    the old caching technique.  One can still access codec->reg_cache
    directly but this is not advised as that will not be portable
    across different caching strategies.
    
    None of the existing drivers need to be changed to adapt to this
    caching technique.  There should be no noticeable overhead associated
    with using the new caching API.
    
    Signed-off-by: Dimitris Papastamos <dp@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 5d3954774ade..275e41133468 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -238,6 +238,7 @@ struct soc_enum;
 struct snd_soc_ac97_ops;
 struct snd_soc_jack;
 struct snd_soc_jack_pin;
+struct snd_soc_cache_ops;
 #include <sound/soc-dapm.h>
 
 #ifdef CONFIG_GPIOLIB
@@ -254,6 +255,10 @@ enum snd_soc_control_type {
 	SND_SOC_SPI,
 };
 
+enum snd_soc_compress_type {
+	SND_SOC_NO_COMPRESSION
+};
+
 int snd_soc_register_platform(struct device *dev,
 		struct snd_soc_platform_driver *platform_drv);
 void snd_soc_unregister_platform(struct device *dev);
@@ -265,6 +270,13 @@ int snd_soc_codec_volatile_register(struct snd_soc_codec *codec, int reg);
 int snd_soc_codec_set_cache_io(struct snd_soc_codec *codec,
 			       int addr_bits, int data_bits,
 			       enum snd_soc_control_type control);
+int snd_soc_cache_sync(struct snd_soc_codec *codec);
+int snd_soc_cache_init(struct snd_soc_codec *codec);
+int snd_soc_cache_exit(struct snd_soc_codec *codec);
+int snd_soc_cache_write(struct snd_soc_codec *codec,
+			unsigned int reg, unsigned int value);
+int snd_soc_cache_read(struct snd_soc_codec *codec,
+		       unsigned int reg, unsigned int *value);
 
 /* Utility functions to get clock rates from various things */
 int snd_soc_calc_frame_size(int sample_size, int channels, int tdm_slots);
@@ -421,6 +433,18 @@ struct snd_soc_ops {
 	int (*trigger)(struct snd_pcm_substream *, int);
 };
 
+/* SoC cache ops */
+struct snd_soc_cache_ops {
+	enum snd_soc_compress_type id;
+	int (*init)(struct snd_soc_codec *codec);
+	int (*exit)(struct snd_soc_codec *codec);
+	int (*read)(struct snd_soc_codec *codec, unsigned int reg,
+		unsigned int *value);
+	int (*write)(struct snd_soc_codec *codec, unsigned int reg,
+		unsigned int value);
+	int (*sync)(struct snd_soc_codec *codec);
+};
+
 /* SoC Audio Codec device */
 struct snd_soc_codec {
 	const char *name;
@@ -450,6 +474,8 @@ struct snd_soc_codec {
 	hw_write_t hw_write;
 	unsigned int (*hw_read)(struct snd_soc_codec *, unsigned int);
 	void *reg_cache;
+	const struct snd_soc_cache_ops *cache_ops;
+	struct mutex cache_rw_mutex;
 
 	/* dapm */
 	struct snd_soc_dapm_context dapm;
@@ -482,6 +508,7 @@ struct snd_soc_codec_driver {
 	short reg_cache_step;
 	short reg_word_size;
 	const void *reg_cache_default;
+	enum snd_soc_compress_type compress_type;
 
 	/* codec bias level */
 	int (*set_bias_level)(struct snd_soc_codec *,

commit 3a45b8672d3f8542e430e7a5c7366ec9bdded054
Author: Jarkko Nikula <jhnikula@gmail.com>
Date:   Fri Nov 5 20:35:21 2010 +0200

    ASoC: Move pop time from DAPM context to sound card
    
    Based on discussion the dapm_pop_time in debugsfs should be per card rather
    than per device. Single pop time value for entire card is cleaner when the
    DAPM sequencing is extended to cross-device paths.
    
    debugfs/asoc/{card->name}/{codec dir}/dapm_pop_time
    ->
    debugfs/asoc/{card->name}/dapm_pop_time
    
    Signed-off-by: Jarkko Nikula <jhnikula@gmail.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 95ce0ddd36d4..5d3954774ade 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -457,7 +457,6 @@ struct snd_soc_codec {
 #ifdef CONFIG_DEBUG_FS
 	struct dentry *debugfs_codec_root;
 	struct dentry *debugfs_reg;
-	struct dentry *debugfs_pop_time;
 	struct dentry *debugfs_dapm;
 #endif
 };
@@ -592,7 +591,9 @@ struct snd_soc_card {
 
 #ifdef CONFIG_DEBUG_FS
 	struct dentry *debugfs_card_root;
+	struct dentry *debugfs_pop_time;
 #endif
+	u32 pop_time;
 };
 
 /* SoC machine DAI configuration, glues a codec and cpu DAI together */

commit a6052154944c822993d04ca8f8d8926e8b73b749
Author: Jarkko Nikula <jhnikula@gmail.com>
Date:   Fri Nov 5 20:35:19 2010 +0200

    ASoC: Add sound card directory under debugfs/asoc/
    
    There will be need to have sound card specific debugfs entries. This patch
    introduces a new debugfs/asoc/{card->name}/ directory but does not add yet
    any entries there.
    
    Signed-off-by: Jarkko Nikula <jhnikula@gmail.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index b048e08e2cc7..95ce0ddd36d4 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -589,6 +589,10 @@ struct snd_soc_card {
 	struct list_head codec_dev_list;
 	struct list_head platform_dev_list;
 	struct list_head dai_dev_list;
+
+#ifdef CONFIG_DEBUG_FS
+	struct dentry *debugfs_card_root;
+#endif
 };
 
 /* SoC machine DAI configuration, glues a codec and cpu DAI together */

commit ce6120cca2589ede530200c7cfe11ac9f144333c
Author: Liam Girdwood <lrg@slimlogic.co.uk>
Date:   Fri Nov 5 15:53:46 2010 +0200

    ASoC: Decouple DAPM from CODECs
    
    Decoupling Dynamic Audio Power Management (DAPM) from codec devices is
    required when developing ASoC further. Such as for other ASoC components to
    have DAPM widgets or when extending DAPM to handle cross-device paths.
    
    This patch decouples DAPM related variables from struct snd_soc_codec and
    moves them to new struct snd_soc_dapm_context that is used to encapsulate
    DAPM context of a device. ASoC core and API of DAPM functions are modified
    to use DAPM context instead of codec.
    
    This patch does not change current functionality and a large part of changes
    come because of structure and internal API changes.
    
    Core implementation is from Liam Girdwood <lrg@slimlogic.co.uk> with some
    minor core changes, codecs and machine driver conversions from
    Jarkko Nikula <jhnikula@gmail.com>.
    
    Signed-off-by: Liam Girdwood <lrg@slimlogic.co.uk>
    Signed-off-by: Jarkko Nikula <jhnikula@gmail.com>
    Cc: Nicolas Ferre <nicolas.ferre@atmel.com>
    Cc: Manuel Lauss <manuel.lauss@googlemail.com>
    Cc: Mike Frysinger <vapier.adi@gmail.com>
    Cc: Cliff Cai <cliff.cai@analog.com>
    Cc: Kevin Hilman <khilman@deeprootsystems.com>
    Cc: Ryan Mallon <ryan@bluewatersys.com>
    Cc: Timur Tabi <timur@freescale.com>
    Cc: Sascha Hauer <s.hauer@pengutronix.de>
    Cc: Lars-Peter Clausen <lars@metafoo.de>
    Cc: Arnaud Patard (Rtp) <arnaud.patard@rtp-net.org>
    Cc: Wan ZongShun <mcuos.com@gmail.com>
    Cc: Eric Miao <eric.y.miao@gmail.com>
    Cc: Jassi Brar <jassi.brar@samsung.com>
    Cc: Daniel Gloeckner <dg@emlix.com>
    Cc: Kuninori Morimoto <morimoto.kuninori@renesas.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index aaf34d7cd95e..b048e08e2cc7 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -238,6 +238,7 @@ struct soc_enum;
 struct snd_soc_ac97_ops;
 struct snd_soc_jack;
 struct snd_soc_jack_pin;
+#include <sound/soc-dapm.h>
 
 #ifdef CONFIG_GPIOLIB
 struct snd_soc_jack_gpio;
@@ -436,7 +437,6 @@ struct snd_soc_codec {
 	/* runtime */
 	struct snd_ac97 *ac97;  /* for ad-hoc ac97 devices */
 	unsigned int active;
-	unsigned int idle_bias_off:1; /* Use BIAS_OFF instead of STANDBY */
 	unsigned int cache_only:1;  /* Suppress writes to hardware */
 	unsigned int cache_sync:1; /* Cache needs to be synced to hardware */
 	unsigned int suspended:1; /* Codec is in suspend PM state */
@@ -452,12 +452,7 @@ struct snd_soc_codec {
 	void *reg_cache;
 
 	/* dapm */
-	u32 pop_time;
-	struct list_head dapm_widgets;
-	struct list_head dapm_paths;
-	enum snd_soc_bias_level bias_level;
-	enum snd_soc_bias_level suspend_bias_level;
-	struct delayed_work delayed_work;
+	struct snd_soc_dapm_context dapm;
 
 #ifdef CONFIG_DEBUG_FS
 	struct dentry *debugfs_codec_root;

commit c3753707991218aa2c18449a921847877533aa09
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon Nov 1 15:41:57 2010 -0400

    ASoC: Push snd_soc_write() and snd_soc_read() into the source file
    
    Facilitating adding trace type stuff. For a first pass add some dev_dbg()
    statements into them.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 5c3bce83f28a..aaf34d7cd95e 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -639,17 +639,9 @@ struct soc_enum {
 };
 
 /* codec IO */
-static inline unsigned int snd_soc_read(struct snd_soc_codec *codec,
-					unsigned int reg)
-{
-	return codec->driver->read(codec, reg);
-}
-
-static inline unsigned int snd_soc_write(struct snd_soc_codec *codec,
-					 unsigned int reg, unsigned int val)
-{
-	return codec->driver->write(codec, reg, val);
-}
+unsigned int snd_soc_read(struct snd_soc_codec *codec, unsigned int reg);
+unsigned int snd_soc_write(struct snd_soc_codec *codec,
+			   unsigned int reg, unsigned int val);
 
 /* device driver data */
 

commit 0562f7882d968463119bb63d47ef4bdaba7d6631
Author: Mika Westerberg <mika.westerberg@iki.fi>
Date:   Wed Oct 13 11:30:32 2010 +0300

    ASoC: don't register AC97 devices twice
    
    With generic AC97 ASoC glue driver (codec/ac97.c), we get following warning when
    the device is registered (slightly stripped the backtrace):
    
    kobject (c5a863e8): tried to init an initialized object, something is seriously
                        wrong.
    [<c00254fc>] (unwind_backtrace+0x0/0xec)
    [<c014fad0>] (kobject_init+0x38/0x70)
    [<c0171e94>] (device_initialize+0x20/0x70)
    [<c017267c>] (device_register+0xc/0x18)
    [<bf20db70>] (snd_soc_instantiate_cards+0x924/0xacc [snd_soc_core])
    [<bf20e0d0>] (snd_soc_register_platform+0x16c/0x198 [snd_soc_core])
    [<c0175304>] (platform_drv_probe+0x18/0x1c)
    [<c0174454>] (driver_probe_device+0xb0/0x16c)
    [<c017456c>] (__driver_attach+0x5c/0x7c)
    [<c0173cec>] (bus_for_each_dev+0x48/0x78)
    [<c0173600>] (bus_add_driver+0x98/0x214)
    [<c0174834>] (driver_register+0xa4/0x130)
    [<c001f410>] (do_one_initcall+0xd0/0x1a4)
    [<c0062ddc>] (sys_init_module+0x12b0/0x1454)
    
    This happens because the generic AC97 glue driver creates its codec->ac97 via
    calling snd_ac97_mixer(). snd_ac97_mixer() provides own version of
    snd_device.register which handles the device registration when
    snd_card_register() is called.
    
    To avoid registering the AC97 device twice, we add a new flag to the
    snd_soc_codec: ac97_created which tells whether the AC97 device was created by
    SoC subsystem.
    
    Signed-off-by: Mika Westerberg <mika.westerberg@iki.fi>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 4fb079e14e16..5c3bce83f28a 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -442,6 +442,7 @@ struct snd_soc_codec {
 	unsigned int suspended:1; /* Codec is in suspend PM state */
 	unsigned int probed:1; /* Codec has been probed */
 	unsigned int ac97_registered:1; /* Codec has been AC97 registered */
+	unsigned int ac97_created:1; /* Codec has been created by SoC */
 	unsigned int sysfs_registered:1; /* codec has been sysfs registered */
 
 	/* codec IO */

commit 4c14d78e8ad3bacfe1f70cb49ae17afcd658e368
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Wed Oct 6 15:54:28 2010 -0700

    ASoC: Use delayed work for debounce of GPIO based jacks
    
    Rather than block the workqueue by sleeping to do the debounce use delayed
    work to implement the debounce time. This should also means that we extend
    the debounce time on each new bounce, potentially allowing shorter debounce
    times for clean insertions.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Jarkko Nikula <jhnikula@gmail.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 493b3a4c193a..4fb079e14e16 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -385,7 +385,7 @@ struct snd_soc_jack_gpio {
 	int invert;
 	int debounce_time;
 	struct snd_soc_jack *jack;
-	struct work_struct work;
+	struct delayed_work work;
 
 	int (*jack_status_check)(void);
 };

commit 4e48541676f019145b555761d89bf4f8607d3de0
Author: Jarkko Nikula <jhnikula@gmail.com>
Date:   Tue Aug 31 14:52:35 2010 +0300

    ASoC: Swap bias level enumeration
    
    Swapping the bias level enumeration is only meant to help debugging. It is
    easier if number 0 means bias off and bigger number means bigger bias level.
    
    Signed-off-by: Jarkko Nikula <jhnikula@gmail.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index d31e8b7b2d5e..493b3a4c193a 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -214,10 +214,10 @@
  * @OFF:     Power Off. No restrictions on transition times.
  */
 enum snd_soc_bias_level {
-	SND_SOC_BIAS_ON,
-	SND_SOC_BIAS_PREPARE,
-	SND_SOC_BIAS_STANDBY,
 	SND_SOC_BIAS_OFF,
+	SND_SOC_BIAS_STANDBY,
+	SND_SOC_BIAS_PREPARE,
+	SND_SOC_BIAS_ON,
 };
 
 struct snd_jack;

commit f0fba2ad1b6b53d5360125c41953b7afcd6deff0
Author: Liam Girdwood <lrg@slimlogic.co.uk>
Date:   Wed Mar 17 20:15:21 2010 +0000

    ASoC: multi-component - ASoC Multi-Component Support
    
    This patch extends the ASoC API to allow sound cards to have more than one
    CODEC and more than one platform DMA controller. This is achieved by dividing
    some current ASoC structures that contain both driver data and device data into
    structures that only either contain device data or driver data. i.e.
    
     struct snd_soc_codec    --->  struct snd_soc_codec (device data)
                              +->  struct snd_soc_codec_driver (driver data)
    
     struct snd_soc_platform --->  struct snd_soc_platform (device data)
                              +->  struct snd_soc_platform_driver (driver data)
    
     struct snd_soc_dai      --->  struct snd_soc_dai (device data)
                              +->  struct snd_soc_dai_driver (driver data)
    
     struct snd_soc_device   --->  deleted
    
    This now allows ASoC to be more tightly aligned with the Linux driver model and
    also means that every ASoC codec, platform and (platform) DAI is a kernel
    device. ASoC component private data is now stored as device private data.
    
    The ASoC sound card struct snd_soc_card has also been updated to store lists
    of it's components rather than a pointer to a codec and platform. The PCM
    runtime struct soc_pcm_runtime now has pointers to all its components.
    
    This patch adds DAPM support for ASoC multi-component and removes struct
    snd_soc_socdev from DAPM core. All DAPM calls are now made on a card, codec
    or runtime PCM level basis rather than using snd_soc_socdev.
    
    Other notable multi-component changes:-
    
     * Stream operations now de-reference less structures.
     * close_delayed work() now runs on a DAI basis rather than looping all DAIs
       in a card.
     * PM suspend()/resume() operations can now handle N CODECs and Platforms
       per sound card.
     * Added soc_bind_dai_link() to bind the component devices to the sound card.
     * Added soc_dai_link_probe() and soc_dai_link_remove() to probe and remove
       DAI link components.
     * sysfs entries can now be registered per component per card.
     * snd_soc_new_pcms() functionailty rolled into dai_link_probe().
     * snd_soc_register_codec() now does all the codec list and mutex init.
    
    This patch changes the probe() and remove() of the CODEC drivers as follows:-
    
     o Make CODEC driver a platform driver
     o Moved all struct snd_soc_codec list, mutex, etc initialiasation to core.
     o Removed all static codec pointers (drivers now support > 1 codec dev)
     o snd_soc_register_pcms() now done by core.
     o snd_soc_register_dai() folded into snd_soc_register_codec().
    
    CS4270 portions:
    Acked-by: Timur Tabi <timur@freescale.com>
    
    Some TLV320aic23 and Cirrus platform fixes.
    Signed-off-by: Ryan Mallon <ryan@bluewatersys.com>
    
    TI CODEC and OMAP fixes
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@nokia.com>
    Signed-off-by: Janusz Krzysztofik <jkrzyszt@tis.icnet.pl>
    Signed-off-by: Jarkko Nikula <jhnikula@gmail.com>
    
    Samsung platform and misc fixes :-
    Signed-off-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Joonyoung Shim <jy0922.shim@samsung.com>
    Signed-off-by: Kyungmin Park <kyungmin.park@samsung.com>
    Reviewed-by: Jassi Brar <jassi.brar@samsung.com>
    Signed-off-by: Seungwhan Youn <sw.youn@samsung.com>
    
    MPC8610 and PPC fixes.
    Signed-off-by: Timur Tabi <timur@freescale.com>
    
    i.MX fixes and some core fixes.
    Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
    
    J4740 platform fixes:-
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    
    CC: Tony Lindgren <tony@atomide.com>
    CC: Nicolas Ferre <nicolas.ferre@atmel.com>
    CC: Kevin Hilman <khilman@deeprootsystems.com>
    CC: Sascha Hauer <s.hauer@pengutronix.de>
    CC: Atsushi Nemoto <anemo@mba.ocn.ne.jp>
    CC: Kuninori Morimoto <morimoto.kuninori@renesas.com>
    CC: Daniel Gloeckner <dg@emlix.com>
    CC: Manuel Lauss <mano@roarinelk.homelinux.net>
    CC: Mike Frysinger <vapier.adi@gmail.com>
    CC: Arnaud Patard <apatard@mandriva.com>
    CC: Wan ZongShun <mcuos.com@gmail.com>
    
    Acked-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Liam Girdwood <lrg@slimlogic.co.uk>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 65e9d03ed4f5..d31e8b7b2d5e 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -228,13 +228,17 @@ struct snd_soc_ops;
 struct snd_soc_dai_mode;
 struct snd_soc_pcm_runtime;
 struct snd_soc_dai;
+struct snd_soc_dai_driver;
 struct snd_soc_platform;
 struct snd_soc_dai_link;
+struct snd_soc_platform_driver;
 struct snd_soc_codec;
+struct snd_soc_codec_driver;
 struct soc_enum;
 struct snd_soc_ac97_ops;
 struct snd_soc_jack;
 struct snd_soc_jack_pin;
+
 #ifdef CONFIG_GPIOLIB
 struct snd_soc_jack_gpio;
 #endif
@@ -249,19 +253,18 @@ enum snd_soc_control_type {
 	SND_SOC_SPI,
 };
 
-int snd_soc_register_platform(struct snd_soc_platform *platform);
-void snd_soc_unregister_platform(struct snd_soc_platform *platform);
-int snd_soc_register_codec(struct snd_soc_codec *codec);
-void snd_soc_unregister_codec(struct snd_soc_codec *codec);
+int snd_soc_register_platform(struct device *dev,
+		struct snd_soc_platform_driver *platform_drv);
+void snd_soc_unregister_platform(struct device *dev);
+int snd_soc_register_codec(struct device *dev,
+		struct snd_soc_codec_driver *codec_drv,
+		struct snd_soc_dai_driver *dai_drv, int num_dai);
+void snd_soc_unregister_codec(struct device *dev);
 int snd_soc_codec_volatile_register(struct snd_soc_codec *codec, int reg);
 int snd_soc_codec_set_cache_io(struct snd_soc_codec *codec,
 			       int addr_bits, int data_bits,
 			       enum snd_soc_control_type control);
 
-/* pcm <-> DAI connect */
-void snd_soc_free_pcms(struct snd_soc_device *socdev);
-int snd_soc_new_pcms(struct snd_soc_device *socdev, int idx, const char *xid);
-
 /* Utility functions to get clock rates from various things */
 int snd_soc_calc_frame_size(int sample_size, int channels, int tdm_slots);
 int snd_soc_params_to_frame_size(struct snd_pcm_hw_params *params);
@@ -273,7 +276,7 @@ int snd_soc_set_runtime_hwparams(struct snd_pcm_substream *substream,
 	const struct snd_pcm_hardware *hw);
 
 /* Jack reporting */
-int snd_soc_jack_new(struct snd_soc_card *card, const char *id, int type,
+int snd_soc_jack_new(struct snd_soc_codec *codec, const char *id, int type,
 		     struct snd_soc_jack *jack);
 void snd_soc_jack_report(struct snd_soc_jack *jack, int status, int mask);
 int snd_soc_jack_add_pins(struct snd_soc_jack *jack, int count,
@@ -390,7 +393,7 @@ struct snd_soc_jack_gpio {
 
 struct snd_soc_jack {
 	struct snd_jack *jack;
-	struct snd_soc_card *card;
+	struct snd_soc_codec *codec;
 	struct list_head pins;
 	int status;
 	struct blocking_notifier_head notifier;
@@ -398,15 +401,13 @@ struct snd_soc_jack {
 
 /* SoC PCM stream information */
 struct snd_soc_pcm_stream {
-	char *stream_name;
+	const char *stream_name;
 	u64 formats;			/* SNDRV_PCM_FMTBIT_* */
 	unsigned int rates;		/* SNDRV_PCM_RATE_* */
 	unsigned int rate_min;		/* min rate */
 	unsigned int rate_max;		/* max rate */
 	unsigned int channels_min;	/* min channels */
 	unsigned int channels_max;	/* max channels */
-	unsigned int active;		/* stream is in use */
-	void *dma_data;			/* used by platform code */
 };
 
 /* SoC audio ops */
@@ -419,44 +420,35 @@ struct snd_soc_ops {
 	int (*trigger)(struct snd_pcm_substream *, int);
 };
 
-/* SoC Audio Codec */
+/* SoC Audio Codec device */
 struct snd_soc_codec {
-	char *name;
-	struct module *owner;
-	struct mutex mutex;
+	const char *name;
+	int id;
 	struct device *dev;
-	struct snd_soc_device *socdev;
+	struct snd_soc_codec_driver *driver;
 
+	struct mutex mutex;
+	struct snd_soc_card *card;
 	struct list_head list;
-
-	/* callbacks */
-	int (*set_bias_level)(struct snd_soc_codec *,
-			      enum snd_soc_bias_level level);
+	struct list_head card_list;
+	int num_dai;
 
 	/* runtime */
-	struct snd_card *card;
 	struct snd_ac97 *ac97;  /* for ad-hoc ac97 devices */
 	unsigned int active;
-	unsigned int pcm_devs;
-	void *drvdata;
+	unsigned int idle_bias_off:1; /* Use BIAS_OFF instead of STANDBY */
+	unsigned int cache_only:1;  /* Suppress writes to hardware */
+	unsigned int cache_sync:1; /* Cache needs to be synced to hardware */
+	unsigned int suspended:1; /* Codec is in suspend PM state */
+	unsigned int probed:1; /* Codec has been probed */
+	unsigned int ac97_registered:1; /* Codec has been AC97 registered */
+	unsigned int sysfs_registered:1; /* codec has been sysfs registered */
 
 	/* codec IO */
 	void *control_data; /* codec control (i2c/3wire) data */
-	unsigned int (*read)(struct snd_soc_codec *, unsigned int);
-	int (*write)(struct snd_soc_codec *, unsigned int, unsigned int);
-	int (*display_register)(struct snd_soc_codec *, char *,
-				size_t, unsigned int);
-	int (*volatile_register)(unsigned int);
-	int (*readable_register)(unsigned int);
 	hw_write_t hw_write;
 	unsigned int (*hw_read)(struct snd_soc_codec *, unsigned int);
 	void *reg_cache;
-	short reg_cache_size;
-	short reg_cache_step;
-
-	unsigned int idle_bias_off:1; /* Use BIAS_OFF instead of STANDBY */
-	unsigned int cache_only:1;  /* Suppress writes to hardware */
-	unsigned int cache_sync:1; /* Cache needs to be synced to hardware */
 
 	/* dapm */
 	u32 pop_time;
@@ -466,10 +458,6 @@ struct snd_soc_codec {
 	enum snd_soc_bias_level suspend_bias_level;
 	struct delayed_work delayed_work;
 
-	/* codec DAI's */
-	struct snd_soc_dai *dai;
-	unsigned int num_dai;
-
 #ifdef CONFIG_DEBUG_FS
 	struct dentry *debugfs_codec_root;
 	struct dentry *debugfs_reg;
@@ -478,23 +466,40 @@ struct snd_soc_codec {
 #endif
 };
 
-/* codec device */
-struct snd_soc_codec_device {
-	int (*probe)(struct platform_device *pdev);
-	int (*remove)(struct platform_device *pdev);
-	int (*suspend)(struct platform_device *pdev, pm_message_t state);
-	int (*resume)(struct platform_device *pdev);
+/* codec driver */
+struct snd_soc_codec_driver {
+
+	/* driver ops */
+	int (*probe)(struct snd_soc_codec *);
+	int (*remove)(struct snd_soc_codec *);
+	int (*suspend)(struct snd_soc_codec *,
+			pm_message_t state);
+	int (*resume)(struct snd_soc_codec *);
+
+	/* codec IO */
+	unsigned int (*read)(struct snd_soc_codec *, unsigned int);
+	int (*write)(struct snd_soc_codec *, unsigned int, unsigned int);
+	int (*display_register)(struct snd_soc_codec *, char *,
+				size_t, unsigned int);
+	int (*volatile_register)(unsigned int);
+	int (*readable_register)(unsigned int);
+	short reg_cache_size;
+	short reg_cache_step;
+	short reg_word_size;
+	const void *reg_cache_default;
+
+	/* codec bias level */
+	int (*set_bias_level)(struct snd_soc_codec *,
+			      enum snd_soc_bias_level level);
 };
 
 /* SoC platform interface */
-struct snd_soc_platform {
-	char *name;
-	struct list_head list;
+struct snd_soc_platform_driver {
 
-	int (*probe)(struct platform_device *pdev);
-	int (*remove)(struct platform_device *pdev);
-	int (*suspend)(struct snd_soc_dai_link *dai_link);
-	int (*resume)(struct snd_soc_dai_link *dai_link);
+	int (*probe)(struct snd_soc_platform *);
+	int (*remove)(struct snd_soc_platform *);
+	int (*suspend)(struct snd_soc_dai *dai);
+	int (*resume)(struct snd_soc_dai *dai);
 
 	/* pcm creation and destruction */
 	int (*pcm_new)(struct snd_card *, struct snd_soc_dai *,
@@ -509,23 +514,31 @@ struct snd_soc_platform {
 		struct snd_soc_dai *);
 
 	/* platform stream ops */
-	struct snd_pcm_ops *pcm_ops;
+	struct snd_pcm_ops *ops;
 };
 
-/* SoC machine DAI configuration, glues a codec and cpu DAI together */
-struct snd_soc_dai_link  {
-	char *name;			/* Codec name */
-	char *stream_name;		/* Stream name */
+struct snd_soc_platform {
+	const char *name;
+	int id;
+	struct device *dev;
+	struct snd_soc_platform_driver *driver;
 
-	/* DAI */
-	struct snd_soc_dai *codec_dai;
-	struct snd_soc_dai *cpu_dai;
+	unsigned int suspended:1; /* platform is suspended */
+	unsigned int probed:1;
 
-	/* machine stream operations */
-	struct snd_soc_ops *ops;
+	struct snd_soc_card *card;
+	struct list_head list;
+	struct list_head card_list;
+};
 
-	/* codec/machine specific init - e.g. add machine controls */
-	int (*init)(struct snd_soc_codec *codec);
+struct snd_soc_dai_link {
+	/* config - must be set by machine driver */
+	const char *name;			/* Codec name */
+	const char *stream_name;		/* Stream name */
+	const char *codec_name;		/* for multi-codec */
+	const char *platform_name;	/* for multi-platform */
+	const char *cpu_dai_name;
+	const char *codec_dai_name;
 
 	/* Keep DAI active over suspend */
 	unsigned int ignore_suspend:1;
@@ -533,21 +546,24 @@ struct snd_soc_dai_link  {
 	/* Symmetry requirements */
 	unsigned int symmetric_rates:1;
 
-	/* Symmetry data - only valid if symmetry is being enforced */
-	unsigned int rate;
+	/* codec/machine specific init - e.g. add machine controls */
+	int (*init)(struct snd_soc_pcm_runtime *rtd);
 
-	/* DAI pcm */
-	struct snd_pcm *pcm;
+	/* machine stream operations */
+	struct snd_soc_ops *ops;
 };
 
 /* SoC card */
 struct snd_soc_card {
-	char *name;
+	const char *name;
 	struct device *dev;
+	struct snd_card *snd_card;
+	struct module *owner;
 
 	struct list_head list;
+	struct mutex mutex;
 
-	int instantiated;
+	bool instantiated;
 
 	int (*probe)(struct platform_device *pdev);
 	int (*remove)(struct platform_device *pdev);
@@ -568,28 +584,38 @@ struct snd_soc_card {
 	/* CPU <--> Codec DAI links  */
 	struct snd_soc_dai_link *dai_link;
 	int num_links;
+	struct snd_soc_pcm_runtime *rtd;
+	int num_rtd;
 
-	struct snd_soc_device *socdev;
-
-	struct snd_soc_codec *codec;
-
-	struct snd_soc_platform *platform;
-	struct delayed_work delayed_work;
 	struct work_struct deferred_resume_work;
+
+	/* lists of probed devices belonging to this card */
+	struct list_head codec_dev_list;
+	struct list_head platform_dev_list;
+	struct list_head dai_dev_list;
 };
 
-/* SoC Device - the audio subsystem */
-struct snd_soc_device {
-	struct device *dev;
+/* SoC machine DAI configuration, glues a codec and cpu DAI together */
+struct snd_soc_pcm_runtime  {
+	struct device dev;
 	struct snd_soc_card *card;
-	struct snd_soc_codec_device *codec_dev;
-	void *codec_data;
-};
+	struct snd_soc_dai_link *dai_link;
+
+	unsigned int complete:1;
+	unsigned int dev_registered:1;
 
-/* runtime channel data */
-struct snd_soc_pcm_runtime {
-	struct snd_soc_dai_link *dai;
-	struct snd_soc_device *socdev;
+	/* Symmetry data - only valid if symmetry is being enforced */
+	unsigned int rate;
+	long pmdown_time;
+
+	/* runtime devices */
+	struct snd_pcm *pcm;
+	struct snd_soc_codec *codec;
+	struct snd_soc_platform *platform;
+	struct snd_soc_dai *codec_dai;
+	struct snd_soc_dai *cpu_dai;
+
+	struct delayed_work delayed_work;
 };
 
 /* mixer control */
@@ -615,24 +641,48 @@ struct soc_enum {
 static inline unsigned int snd_soc_read(struct snd_soc_codec *codec,
 					unsigned int reg)
 {
-	return codec->read(codec, reg);
+	return codec->driver->read(codec, reg);
 }
 
 static inline unsigned int snd_soc_write(struct snd_soc_codec *codec,
 					 unsigned int reg, unsigned int val)
 {
-	return codec->write(codec, reg, val);
+	return codec->driver->write(codec, reg, val);
 }
 
+/* device driver data */
+
 static inline void snd_soc_codec_set_drvdata(struct snd_soc_codec *codec,
-					     void *data)
+		void *data)
 {
-	codec->drvdata = data;
+	dev_set_drvdata(codec->dev, data);
 }
 
 static inline void *snd_soc_codec_get_drvdata(struct snd_soc_codec *codec)
 {
-	return codec->drvdata;
+	return dev_get_drvdata(codec->dev);
+}
+
+static inline void snd_soc_platform_set_drvdata(struct snd_soc_platform *platform,
+		void *data)
+{
+	dev_set_drvdata(platform->dev, data);
+}
+
+static inline void *snd_soc_platform_get_drvdata(struct snd_soc_platform *platform)
+{
+	return dev_get_drvdata(platform->dev);
+}
+
+static inline void snd_soc_pcm_set_drvdata(struct snd_soc_pcm_runtime *rtd,
+		void *data)
+{
+	dev_set_drvdata(&rtd->dev, data);
+}
+
+static inline void *snd_soc_pcm_get_drvdata(struct snd_soc_pcm_runtime *rtd)
+{
+	return dev_get_drvdata(&rtd->dev);
 }
 
 #include <sound/soc-dai.h>

commit b6f4bb383d69cac46f17e2305720f9a3d426c5ed
Author: apatard@mandriva.com <apatard@mandriva.com>
Date:   Sat May 15 17:30:01 2010 +0200

    ASoC: Add SOC_DOUBLE_R_SX_TLV control
    
    This patch is adding a new control which has the following capabilities:
    - tlv
    - variable data size (for instance, 7 ou 8 bit)
    - double mixer
    - data range centered around 0
    
    Signed-off-by: Arnaud Patard <apatard@mandriva.com>
    Acked-by: Liam Girdwood <lrg@opensource.wolfsonmicro.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 697e7ffe39d7..65e9d03ed4f5 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -170,6 +170,21 @@
 	.get = xhandler_get, .put = xhandler_put, \
 	.private_value = (unsigned long)&xenum }
 
+#define SOC_DOUBLE_R_SX_TLV(xname, xreg_left, xreg_right, xshift,\
+		xmin, xmax, tlv_array) \
+{	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname), \
+	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ | \
+		  SNDRV_CTL_ELEM_ACCESS_READWRITE, \
+	.tlv.p = (tlv_array), \
+	.info = snd_soc_info_volsw_2r_sx, \
+	.get = snd_soc_get_volsw_2r_sx, \
+	.put = snd_soc_put_volsw_2r_sx, \
+	.private_value = (unsigned long)&(struct soc_mixer_control) \
+		{.reg = xreg_left, \
+		 .rreg = xreg_right, .shift = xshift, \
+		 .min = xmin, .max = xmax} }
+
+
 /*
  * Simplified versions of above macros, declaring a struct and calculating
  * ARRAY_SIZE internally
@@ -329,6 +344,12 @@ int snd_soc_put_volsw_s8(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
 int snd_soc_limit_volume(struct snd_soc_codec *codec,
 	const char *name, int max);
+int snd_soc_info_volsw_2r_sx(struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_info *uinfo);
+int snd_soc_get_volsw_2r_sx(struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_value *ucontrol);
+int snd_soc_put_volsw_2r_sx(struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_value *ucontrol);
 
 /**
  * struct snd_soc_jack_pin - Describes a pin to update based on jack detection

commit d11bb4a925613fa814ed4ae350440eb24ebff336
Author: Peter Ujfalusi <peter.ujfalusi@nokia.com>
Date:   Mon May 10 14:39:24 2010 +0300

    ASoC: core: Fix for the volume limiting when invert is in use
    
    If the register for the volume needs invert, than the inversion
    need to be done from the chip maximum, and not from the platform
    dependent limit.
    Introduce soc_mixer_control.platform_max value, which initially
    equals to chip maximum.
    The snd_soc_limit_volume function only modify the platform_max,
    all volsw_info call returns this as well.
    The .max value holds the chip default (maximum), and it is used
    for the inversion, if it is needed.
    
    Additional check in the volsw_info call has been added to check
    the validity of the platform_max in case, when custom macros
    used by codec drivers are not initializing it correctly.
    
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@nokia.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 8326fc3db1cf..697e7ffe39d7 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -30,10 +30,10 @@
 #define SOC_SINGLE_VALUE(xreg, xshift, xmax, xinvert) \
 	((unsigned long)&(struct soc_mixer_control) \
 	{.reg = xreg, .shift = xshift, .rshift = xshift, .max = xmax, \
-	.invert = xinvert})
+	.platform_max = xmax, .invert = xinvert})
 #define SOC_SINGLE_VALUE_EXT(xreg, xmax, xinvert) \
 	((unsigned long)&(struct soc_mixer_control) \
-	{.reg = xreg, .max = xmax, .invert = xinvert})
+	{.reg = xreg, .max = xmax, .platform_max = xmax, .invert = xinvert})
 #define SOC_SINGLE(xname, reg, shift, max, invert) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
 	.info = snd_soc_info_volsw, .get = snd_soc_get_volsw,\
@@ -53,14 +53,14 @@
 	.put = snd_soc_put_volsw, \
 	.private_value = (unsigned long)&(struct soc_mixer_control) \
 		{.reg = xreg, .shift = shift_left, .rshift = shift_right, \
-		 .max = xmax, .invert = xinvert} }
+		 .max = xmax, .platform_max = xmax, .invert = xinvert} }
 #define SOC_DOUBLE_R(xname, reg_left, reg_right, xshift, xmax, xinvert) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname), \
 	.info = snd_soc_info_volsw_2r, \
 	.get = snd_soc_get_volsw_2r, .put = snd_soc_put_volsw_2r, \
 	.private_value = (unsigned long)&(struct soc_mixer_control) \
 		{.reg = reg_left, .rreg = reg_right, .shift = xshift, \
-		.max = xmax, .invert = xinvert} }
+		.max = xmax, .platform_max = xmax, .invert = xinvert} }
 #define SOC_DOUBLE_TLV(xname, xreg, shift_left, shift_right, xmax, xinvert, tlv_array) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname),\
 	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ |\
@@ -70,7 +70,7 @@
 	.put = snd_soc_put_volsw, \
 	.private_value = (unsigned long)&(struct soc_mixer_control) \
 		{.reg = xreg, .shift = shift_left, .rshift = shift_right,\
-		 .max = xmax, .invert = xinvert} }
+		 .max = xmax, .platform_max = xmax, .invert = xinvert} }
 #define SOC_DOUBLE_R_TLV(xname, reg_left, reg_right, xshift, xmax, xinvert, tlv_array) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname),\
 	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ |\
@@ -80,7 +80,7 @@
 	.get = snd_soc_get_volsw_2r, .put = snd_soc_put_volsw_2r, \
 	.private_value = (unsigned long)&(struct soc_mixer_control) \
 		{.reg = reg_left, .rreg = reg_right, .shift = xshift, \
-		.max = xmax, .invert = xinvert} }
+		.max = xmax, .platform_max = xmax, .invert = xinvert} }
 #define SOC_DOUBLE_S8_TLV(xname, xreg, xmin, xmax, tlv_array) \
 {	.iface  = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname), \
 	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ | \
@@ -89,7 +89,8 @@
 	.info   = snd_soc_info_volsw_s8, .get = snd_soc_get_volsw_s8, \
 	.put    = snd_soc_put_volsw_s8, \
 	.private_value = (unsigned long)&(struct soc_mixer_control) \
-		{.reg = xreg, .min = xmin, .max = xmax} }
+		{.reg = xreg, .min = xmin, .max = xmax, \
+		 .platform_max = xmax} }
 #define SOC_ENUM_DOUBLE(xreg, xshift_l, xshift_r, xmax, xtexts) \
 {	.reg = xreg, .shift_l = xshift_l, .shift_r = xshift_r, \
 	.max = xmax, .texts = xtexts }
@@ -126,7 +127,7 @@
 	.get = xhandler_get, .put = xhandler_put, \
 	.private_value = (unsigned long)&(struct soc_mixer_control) \
 		{.reg = xreg, .shift = shift_left, .rshift = shift_right, \
-		 .max = xmax, .invert = xinvert} }
+		 .max = xmax, .platform_max = xmax, .invert = xinvert} }
 #define SOC_SINGLE_EXT_TLV(xname, xreg, xshift, xmax, xinvert,\
 	 xhandler_get, xhandler_put, tlv_array) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
@@ -146,7 +147,7 @@
 	.get = xhandler_get, .put = xhandler_put, \
 	.private_value = (unsigned long)&(struct soc_mixer_control) \
 		{.reg = xreg, .shift = shift_left, .rshift = shift_right, \
-		.max = xmax, .invert = xinvert} }
+		.max = xmax, .platform_max = xmax, .invert = xinvert} }
 #define SOC_DOUBLE_R_EXT_TLV(xname, reg_left, reg_right, xshift, xmax, xinvert,\
 	 xhandler_get, xhandler_put, tlv_array) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname), \
@@ -157,7 +158,7 @@
 	.get = xhandler_get, .put = xhandler_put, \
 	.private_value = (unsigned long)&(struct soc_mixer_control) \
 		{.reg = reg_left, .rreg = reg_right, .shift = xshift, \
-		.max = xmax, .invert = xinvert} }
+		.max = xmax, .platform_max = xmax, .invert = xinvert} }
 #define SOC_SINGLE_BOOL_EXT(xname, xdata, xhandler_get, xhandler_put) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
 	.info = snd_soc_info_bool_ext, \
@@ -572,7 +573,7 @@ struct snd_soc_pcm_runtime {
 
 /* mixer control */
 struct soc_mixer_control {
-	int min, max;
+	int min, max, platform_max;
 	unsigned int reg, rreg, shift, rshift, invert;
 };
 

commit 3efab7dcc0f4d0087f73ff975eaa2fddc02ffc69
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Sun May 9 13:25:43 2010 +0100

    ASoC: Allow DAI links to be kept active over suspend
    
    As well as allowing DAPM pins to be marked as ignoring suspend allow DAI
    links to be similarly marked.  This is primarily intended for digital
    links between CODECs and non-CPU devices such as basebands in mobile
    phones and will suppress all suspend calls for the DAI link.  It is
    likely that this will need to be revisited if used with devices which
    are part of the SoC CPU.
    
    Tested-by: Peter Ujfalusi <peter.ujfalusi@nokia.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 9f306f0710df..8326fc3db1cf 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -505,6 +505,9 @@ struct snd_soc_dai_link  {
 	/* codec/machine specific init - e.g. add machine controls */
 	int (*init)(struct snd_soc_codec *codec);
 
+	/* Keep DAI active over suspend */
+	unsigned int ignore_suspend:1;
+
 	/* Symmetry requirements */
 	unsigned int symmetric_rates:1;
 

commit 637d3847ba0ca2c7780e6521cbe75568d19ff0db
Author: Peter Ujfalusi <peter.ujfalusi@nokia.com>
Date:   Fri May 7 14:05:49 2010 +0300

    ASoC: core: Support for limiting the volume
    
    Add support for the core to limit the maximum volume on an
    existing control.
    The function will modify the soc_mixer_control.max value
    of the given control.
    The new value must be lower than the original one (chip maximum)
    
    If there is a need for limiting a gain on a given control,
    than machine drivers can do the following in their
    snd_soc_dai_link.init function:
    
    snd_soc_limit_volume(codec, "TPA6140A2 Headphone Playback Volume", 21);
    
    This will modify the original 31 (chip maximum) to 21, so user
    space will not be able to set the gain higher than this.
    
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@nokia.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 01e9c66ddc6d..9f306f0710df 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -326,6 +326,8 @@ int snd_soc_get_volsw_s8(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
 int snd_soc_put_volsw_s8(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
+int snd_soc_limit_volume(struct snd_soc_codec *codec,
+	const char *name, int max);
 
 /**
  * struct snd_soc_jack_pin - Describes a pin to update based on jack detection

commit b2c812e22de88bb79c290c0e718280f10b64a48d
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Wed Apr 14 15:35:19 2010 +0900

    ASoC: Add indirection for CODEC private data
    
    One of the features of the multi CODEC work is that it embeds a struct
    device in the CODEC to provide diagnostics via a sysfs class rather than
    via the device tree, at which point it's much better to use the struct
    device private data rather than having two places to store it. Provide
    an accessor function to allow this change to be made more easily, and
    update all the CODEC drivers are updated.
    
    To ensure use of the accessor the private data structure member is
    renamed, meaning that if code developed with older an older core that
    still uses private_data is merged it will fail to build.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 4ab3dad4a9c9..01e9c66ddc6d 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -414,7 +414,7 @@ struct snd_soc_codec {
 	struct snd_ac97 *ac97;  /* for ad-hoc ac97 devices */
 	unsigned int active;
 	unsigned int pcm_devs;
-	void *private_data;
+	void *drvdata;
 
 	/* codec IO */
 	void *control_data; /* codec control (i2c/3wire) data */
@@ -597,6 +597,17 @@ static inline unsigned int snd_soc_write(struct snd_soc_codec *codec,
 	return codec->write(codec, reg, val);
 }
 
+static inline void snd_soc_codec_set_drvdata(struct snd_soc_codec *codec,
+					     void *data)
+{
+	codec->drvdata = data;
+}
+
+static inline void *snd_soc_codec_get_drvdata(struct snd_soc_codec *codec)
+{
+	return codec->drvdata;
+}
+
 #include <sound/soc-dai.h>
 
 #endif

commit 53a61d967a480307db4c8f7950ddb8bb1a0fda9b
Merge: 887669840614 5f712b2b73a9
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon Apr 5 19:19:32 2010 +0100

    Merge branch 'for-2.6.34' into for-2.6.35
    
    Conflicts due to context changes next to the backported DMA data change:
            include/sound/soc.h

commit 5f712b2b73a9fc87fcc52124cfe8adefaa0c92f5
Author: Daniel Mack <daniel@caiaq.de>
Date:   Mon Mar 22 10:11:15 2010 +0100

    ALSA: ASoC: move dma_data from snd_soc_dai to snd_soc_pcm_stream
    
    This fixes a memory corruption when ASoC devices are used in
    full-duplex mode. Specifically for pxa-ssp code, where this pointer
    is dynamically allocated for each direction and destroyed upon each
    stream start.
    
    All other platforms are fixed blindly, I couldn't even compile-test
    them. Sorry for any breakage I may have caused.
    
    [Note that this is a backported version for 2.6.34.
     Upstream commit is fd23b7dee]
    
    Signed-off-by: Daniel Mack <daniel@caiaq.de>
    Reported-by: Sven Neumann <s.neumann@raumfeld.com>
    Reported-by: Michael Hirsch <m.hirsch@raumfeld.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 5d234a8c2506..a57fbfcd4c8f 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -375,6 +375,7 @@ struct snd_soc_pcm_stream {
 	unsigned int channels_min;	/* min channels */
 	unsigned int channels_max;	/* max channels */
 	unsigned int active:1;		/* stream is in use */
+	void *dma_data;			/* used by platform code */
 };
 
 /* SoC audio ops */

commit d5021ec9fc32edc6f512c2375923d757e9825f6a
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon Mar 22 12:06:30 2010 +0000

    ASoC: Add a notifier for jack status changes
    
    Some systems provide both mechanical and electrical detection of jack
    status changes. On such systems power savings can be achieved by only
    enabling the electrical detection methods when physical insertion has
    been detected.
    
    Begin supporting such systems by providing a notifier for jack status
    changes which can be used to trigger any reconfiguration.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index b8bac6ae6244..80dfac162723 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -15,6 +15,7 @@
 
 #include <linux/platform_device.h>
 #include <linux/types.h>
+#include <linux/notifier.h>
 #include <linux/workqueue.h>
 #include <linux/interrupt.h>
 #include <linux/kernel.h>
@@ -261,6 +262,10 @@ int snd_soc_jack_new(struct snd_soc_card *card, const char *id, int type,
 void snd_soc_jack_report(struct snd_soc_jack *jack, int status, int mask);
 int snd_soc_jack_add_pins(struct snd_soc_jack *jack, int count,
 			  struct snd_soc_jack_pin *pins);
+void snd_soc_jack_notifier_register(struct snd_soc_jack *jack,
+				    struct notifier_block *nb);
+void snd_soc_jack_notifier_unregister(struct snd_soc_jack *jack,
+				      struct notifier_block *nb);
 #ifdef CONFIG_GPIOLIB
 int snd_soc_jack_add_gpios(struct snd_soc_jack *jack, int count,
 			struct snd_soc_jack_gpio *gpios);
@@ -364,6 +369,7 @@ struct snd_soc_jack {
 	struct snd_soc_card *card;
 	struct list_head pins;
 	int status;
+	struct blocking_notifier_head notifier;
 };
 
 /* SoC PCM stream information */

commit fd23b7dee5e4d369f620979cb120f53629389355
Author: Daniel Mack <daniel@caiaq.de>
Date:   Fri Mar 19 14:52:55 2010 +0000

    ASoC: move dma_data from snd_soc_dai to snd_soc_pcm_stream
    
    This fixes a memory corruption when ASoC devices are used in
    full-duplex mode. Specifically for pxa-ssp code, where this pointer
    is dynamically allocated for each direction and destroyed upon each
    stream start.
    
    All other platforms are fixed blindly, I couldn't even compile-test
    them. Sorry for any breakage I may have caused.
    
    Reported-by: Sven Neumann <s.neumann@raumfeld.com>
    Reported-by: Michael Hirsch <m.hirsch@raumfeld.com>
    Signed-off-by: Daniel Mack <daniel@caiaq.de>
    Acked-by: Peter Ujfalusi <peter.ujfalusi@nokia.com>
    Acked-by: Jarkko Nikula <jhnikula@gmail.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index dbfec16015de..b8bac6ae6244 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -376,6 +376,7 @@ struct snd_soc_pcm_stream {
 	unsigned int channels_min;	/* min channels */
 	unsigned int channels_max;	/* max channels */
 	unsigned int active;		/* num of active users of the stream */
+	void *dma_data;			/* used by platform code */
 };
 
 /* SoC audio ops */

commit 258020d0882e89c1462800a70eb414b8a4fec78c
Author: Peter Ujfalusi <peter.ujfalusi@nokia.com>
Date:   Wed Mar 3 15:08:07 2010 +0200

    ASoC: core: Add delay operation to snd_soc_dai_ops
    
    The delay callback can be used by the core to query the delay
    on the dai caused by FIFO or delay in the platform side.
    In case if both CPU and CODEC dai has FIFO the delay reported
    by each will be added to form the full delay on the chain.
    If none of the dai has FIFO, than the delay will be kept as
    zero.
    
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@nokia.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index f792c1881b0a..dbfec16015de 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -470,6 +470,13 @@ struct snd_soc_platform {
 		struct snd_pcm *);
 	void (*pcm_free)(struct snd_pcm *);
 
+	/*
+	 * For platform caused delay reporting.
+	 * Optional.
+	 */
+	snd_pcm_sframes_t (*delay)(struct snd_pcm_substream *,
+		struct snd_soc_dai *);
+
 	/* platform stream ops */
 	struct snd_pcm_ops *pcm_ops;
 };

commit 14dc5734bdac2629ed4228f3d30662bb440a3982
Author: Jassi Brar <jassi.brar@samsung.com>
Date:   Fri Feb 26 09:12:32 2010 +0900

    ASoC: Allow mulitple usage count of codec and cpu dai
    
    If we are to have a snd_soc_dai i.e, cpu_dai and codec_dai, shared among two
    or more dai_links we need to log the number of active users of the dai.
    For that, we change semantics of the snd_soc_dai.active flag from indicator
    to reference counter.
    
    Signed-off-by: Jassi Brar <jassi.brar@samsung.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 27a2ad9a6b8b..f792c1881b0a 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -375,7 +375,7 @@ struct snd_soc_pcm_stream {
 	unsigned int rate_max;		/* max rate */
 	unsigned int channels_min;	/* min channels */
 	unsigned int channels_max;	/* max channels */
-	unsigned int active:1;		/* stream is in use */
+	unsigned int active;		/* num of active users of the stream */
 };
 
 /* SoC audio ops */

commit d273ebe77a780d3aba1f5b86615af3b0e87b76bf
Author: jassi brar <jassisinghbrar@gmail.com>
Date:   Mon Feb 22 15:58:04 2010 +0900

    ASoC: Pass dai_link as argument to platform suspend and resume
    
    Passing pointer to relevant dai_link provides easier reach to the
    ASoC tree in suspend/resume of snd_soc_platform. It also provides
    direct access to the dai at the other end of the dai_link.
    
    Signed-off-by: Jassi Brar <jassi.brar@samsung.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 5d234a8c2506..27a2ad9a6b8b 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -212,6 +212,7 @@ struct snd_soc_dai_mode;
 struct snd_soc_pcm_runtime;
 struct snd_soc_dai;
 struct snd_soc_platform;
+struct snd_soc_dai_link;
 struct snd_soc_codec;
 struct soc_enum;
 struct snd_soc_ac97_ops;
@@ -461,8 +462,8 @@ struct snd_soc_platform {
 
 	int (*probe)(struct platform_device *pdev);
 	int (*remove)(struct platform_device *pdev);
-	int (*suspend)(struct snd_soc_dai *dai);
-	int (*resume)(struct snd_soc_dai *dai);
+	int (*suspend)(struct snd_soc_dai_link *dai_link);
+	int (*resume)(struct snd_soc_dai_link *dai_link);
 
 	/* pcm creation and destruction */
 	int (*pcm_new)(struct snd_card *, struct snd_soc_dai *,

commit 6c5f1fed49f96a0600aa9a97ac3faf972c33a341
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Wed Feb 17 14:30:44 2010 +0000

    ASoC: Make pmdown_time a long
    
    Fixes a warning.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index d9d88dd9720d..5d234a8c2506 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -521,7 +521,7 @@ struct snd_soc_card {
 	int (*set_bias_level)(struct snd_soc_card *,
 			      enum snd_soc_bias_level level);
 
-	int pmdown_time;
+	long pmdown_time;
 
 	/* CPU <--> Codec DAI links  */
 	struct snd_soc_dai_link *dai_link;

commit 96dd362284ddcb546d2783035ae7eeda73692eda
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Fri Feb 12 11:05:44 2010 +0000

    ASoC: Make pmdown_time a per-card setting
    
    Make the pmdown_time a per-card setting rather than a global one,
    initialised before the card initialisation runs. This allows cards
    to override the default setting if it makes sense to do so (for
    example, due to an unavoidable pop).
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index e6a6d10de1d3..d9d88dd9720d 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -521,6 +521,8 @@ struct snd_soc_card {
 	int (*set_bias_level)(struct snd_soc_card *,
 			      enum snd_soc_bias_level level);
 
+	int pmdown_time;
+
 	/* CPU <--> Codec DAI links  */
 	struct snd_soc_dai_link *dai_link;
 	int num_links;

commit a3032b47c46920ed3f2fd58e64f484e3dab49f23
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon Feb 1 18:48:03 2010 +0000

    ASoC: Add a cache_sync bit to the CODEC structure
    
    Add a bit to the CODEC structure indicating if a cache sync is required.
    By default this will be set if a cache only write is done to a soc-cache
    register cache.  This allows us to avoid syncing the cache back after
    using cache only writes if there were no changes.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 4e8f14bc8ed3..e6a6d10de1d3 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -424,6 +424,7 @@ struct snd_soc_codec {
 
 	unsigned int idle_bias_off:1; /* Use BIAS_OFF instead of STANDBY */
 	unsigned int cache_only:1;  /* Suppress writes to hardware */
+	unsigned int cache_sync:1; /* Cache needs to be synced to hardware */
 
 	/* dapm */
 	u32 pop_time;

commit 8c961bcca1d10be4f2c06375eb561679167653a0
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon Feb 1 18:46:10 2010 +0000

    ASoC: Allow CODECs to ask soc-cache to suppress physical writes
    
    Currently the soc-cache code will always write to the device, meaning
    that we need the device to be powered and active at pretty much all
    times the system is active.  Allowing cache only writes lays some
    groundwork for future enhancements to allow devices to be put into a
    full off state when the audio subsystem is idle.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 4bbeb9f83ece..4e8f14bc8ed3 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -423,6 +423,7 @@ struct snd_soc_codec {
 	short reg_cache_step;
 
 	unsigned int idle_bias_off:1; /* Use BIAS_OFF instead of STANDBY */
+	unsigned int cache_only:1;  /* Suppress writes to hardware */
 
 	/* dapm */
 	u32 pop_time;

commit 6c2fb6a8d8c43544e7665859f29373c98d17df75
Author: Guennadi Liakhovetski <g.liakhovetski@gmx.de>
Date:   Thu Jan 21 22:04:03 2010 +0100

    ASoC: add helper macros to declare struct soc_enum instances
    
    Several shortcuts for popular uses of some of SOC_ENUM_* and
    SOC_VALUE_ENUM_* macros.
    
    Signed-off-by: Guennadi Liakhovetski <g.liakhovetski@gmx.de>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index a8768ea7571a..4bbeb9f83ece 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -168,6 +168,23 @@
 	.get = xhandler_get, .put = xhandler_put, \
 	.private_value = (unsigned long)&xenum }
 
+/*
+ * Simplified versions of above macros, declaring a struct and calculating
+ * ARRAY_SIZE internally
+ */
+#define SOC_ENUM_DOUBLE_DECL(name, xreg, xshift_l, xshift_r, xtexts) \
+	struct soc_enum name = SOC_ENUM_DOUBLE(xreg, xshift_l, xshift_r, \
+						ARRAY_SIZE(xtexts), xtexts)
+#define SOC_ENUM_SINGLE_DECL(name, xreg, xshift, xtexts) \
+	SOC_ENUM_DOUBLE_DECL(name, xreg, xshift, xshift, xtexts)
+#define SOC_ENUM_SINGLE_EXT_DECL(name, xtexts) \
+	struct soc_enum name = SOC_ENUM_SINGLE_EXT(ARRAY_SIZE(xtexts), xtexts)
+#define SOC_VALUE_ENUM_DOUBLE_DECL(name, xreg, xshift_l, xshift_r, xmask, xtexts, xvalues) \
+	struct soc_enum name = SOC_VALUE_ENUM_DOUBLE(xreg, xshift_l, xshift_r, xmask, \
+							ARRAY_SIZE(xtexts), xtexts, xvalues)
+#define SOC_VALUE_ENUM_SINGLE_DECL(name, xreg, xshift, xmask, xtexts, xvalues) \
+	SOC_VALUE_ENUM_DOUBLE_DECL(name, xreg, xshift, xshift, xmask, xtexts, xvalues)
+
 /*
  * Bias levels
  *

commit a96ca3387382498ec8b501db5acef3ed9eb1bd36
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Tue Jan 19 22:49:43 2010 +0000

    ASoC: Support turning off bias when the CODEC is idle
    
    Currently ASoC always maintains the bias of the CODEC while the system
    is active.  With older mobile CODECs this is required since the outputs
    are referenced to a non-zero voltage and enabling or disabling this
    voltage without audible pops or clicks in the output takes too long to
    do when starting or stopping audio.
    
    As a result of features such as ground referenced outputs and class D
    speaker drivers current generation devices are able to power on and off
    much more quickly without these system level issues so provide a new
    flag idle_bias_off in snd_soc_codec which will cause the core to turn
    off the CODEC bias.  The distinction between STANDBY and OFF is still
    maintained.  This is partly for consistency but also allows for
    potential future extensions such as per-machine overrides or deferring
    the bias removal.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 08909ccd235b..a8768ea7571a 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -405,6 +405,8 @@ struct snd_soc_codec {
 	short reg_cache_size;
 	short reg_cache_step;
 
+	unsigned int idle_bias_off:1; /* Use BIAS_OFF instead of STANDBY */
+
 	/* dapm */
 	u32 pop_time;
 	struct list_head dapm_widgets;

commit dd1b3d53c2e5b9cccec9001fc0b63f6b686a4ac9
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Fri Dec 4 14:22:03 2009 +0000

    ASoC: Export snd_soc_update_bits_unlocked()
    
    Allows custom controls to use it.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 0d7718f9280d..08909ccd235b 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -253,6 +253,9 @@ void snd_soc_jack_free_gpios(struct snd_soc_jack *jack, int count,
 /* codec register bit access */
 int snd_soc_update_bits(struct snd_soc_codec *codec, unsigned short reg,
 				unsigned int mask, unsigned int value);
+int snd_soc_update_bits_locked(struct snd_soc_codec *codec,
+			       unsigned short reg, unsigned int mask,
+			       unsigned int value);
 int snd_soc_test_bits(struct snd_soc_codec *codec, unsigned short reg,
 				unsigned int mask, unsigned int value);
 

commit c0fa59df7214e546f8a37bc677867ac7b67b5c93
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Thu Nov 19 11:36:10 2009 +0000

    ASoC: Add BCLK calculation utility for TDM mode too
    
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 13b117aac5d9..0d7718f9280d 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -230,6 +230,7 @@ int snd_soc_new_pcms(struct snd_soc_device *socdev, int idx, const char *xid);
 /* Utility functions to get clock rates from various things */
 int snd_soc_calc_frame_size(int sample_size, int channels, int tdm_slots);
 int snd_soc_params_to_frame_size(struct snd_pcm_hw_params *params);
+int snd_soc_calc_bclk(int fs, int sample_size, int channels, int tdm_slots);
 int snd_soc_params_to_bclk(struct snd_pcm_hw_params *parms);
 
 /* set runtime hw params */

commit c871a05315d1a76034ea06feeda92081e1d608bf
Author: Joonyoung Shim <jy0922.shim@samsung.com>
Date:   Thu Nov 12 17:14:04 2009 +0900

    ASoC: Add jack_status_check callback function for GPIO jacks
    
    The jack_status_check callback function is the interface to check the
    status of the jack. Some target provides the method to distinguish what
    is the jack inserted - headphone jack, microphone jack, tvout jack, etc,
    so we can implement it using the jack_status_check function.
    
    Signed-off-by: Joonyoung Shim <jy0922.shim@samsung.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 310a21949a3e..13b117aac5d9 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -332,6 +332,8 @@ struct snd_soc_jack_gpio {
 	int debounce_time;
 	struct snd_soc_jack *jack;
 	struct work_struct work;
+
+	int (*jack_status_check)(void);
 };
 #endif
 

commit 7aae816dae150caad8880357e42303935c0179a8
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Tue Nov 10 16:08:04 2009 +0000

    ASoC: Add bit clock rate calculator utility functions
    
    Many devices need to calculate the bit clock rate desired to
    work out the clock configuration required for the device.
    Provide utility functions to do this using both hw_params
    structures and raw numbers.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Acked-by: Liam Girdwood <lrg@slimlogic.co.uk>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 7f3a4c5028da..310a21949a3e 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -227,6 +227,11 @@ int snd_soc_codec_set_cache_io(struct snd_soc_codec *codec,
 void snd_soc_free_pcms(struct snd_soc_device *socdev);
 int snd_soc_new_pcms(struct snd_soc_device *socdev, int idx, const char *xid);
 
+/* Utility functions to get clock rates from various things */
+int snd_soc_calc_frame_size(int sample_size, int channels, int tdm_slots);
+int snd_soc_params_to_frame_size(struct snd_pcm_hw_params *params);
+int snd_soc_params_to_bclk(struct snd_pcm_hw_params *parms);
+
 /* set runtime hw params */
 int snd_soc_set_runtime_hwparams(struct snd_pcm_substream *substream,
 	const struct snd_pcm_hardware *hw);

commit fe3e78e073d25308756f38019956061153267769
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Tue Nov 3 22:13:13 2009 +0000

    ASoC: Factor out snd_soc_init_card()
    
    snd_soc_init_card() is always called as the last part of the CODEC probe
    function so we can factor it out into the core card setup rather than
    have each CODEC replicate the code to do the initialiastation. This will
    be required to support multiple CODECs per card.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index b1245e3acdfc..7f3a4c5028da 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -226,7 +226,6 @@ int snd_soc_codec_set_cache_io(struct snd_soc_codec *codec,
 /* pcm <-> DAI connect */
 void snd_soc_free_pcms(struct snd_soc_device *socdev);
 int snd_soc_new_pcms(struct snd_soc_device *socdev, int idx, const char *xid);
-int snd_soc_init_card(struct snd_soc_device *socdev);
 
 /* set runtime hw params */
 int snd_soc_set_runtime_hwparams(struct snd_pcm_substream *substream,

commit d2058b0cd039aad89b111d83b9c347e9d8f57a84
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Tue Oct 13 17:39:56 2009 +0100

    ASoC: Remove snd_soc_suspend_device()
    
    The PM core will grow pm_link infrastructure in 2.6.33 which can be
    used to implement the intended functionality of the ASoC-specific
    device suspend and resume callbacks so drop them.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 0b1f917a53ba..b1245e3acdfc 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -223,11 +223,6 @@ int snd_soc_codec_set_cache_io(struct snd_soc_codec *codec,
 			       int addr_bits, int data_bits,
 			       enum snd_soc_control_type control);
 
-#ifdef CONFIG_PM
-int snd_soc_suspend_device(struct device *dev);
-int snd_soc_resume_device(struct device *dev);
-#endif
-
 /* pcm <-> DAI connect */
 void snd_soc_free_pcms(struct snd_soc_device *socdev);
 int snd_soc_new_pcms(struct snd_soc_device *socdev, int idx, const char *xid);

commit 88439ac793934a47f47ad285656b63d09f5937c8
Author: Peter Ujfalusi <peter.ujfalusi@nokia.com>
Date:   Thu Oct 1 10:32:47 2009 +0300

    ASoC: add support for multiple cards/codecs in debugfs
    
    In order to support multiple codecs on the same system in the debugfs
    the directory hierarchy need to be changed by adding directory per codec
    under the asoc direcorty:
    
    debugfs/asoc/{dev_name(socdev->dev)}-{codec->name}/codec_reg
                                                      /dapm_pop_time
                                                      /dapm/{widgets}
    
    With the original implementation only the debugfs files are only
    created for the first codec, other codecs loaded later would fail to
    create the debugfs files (since they are already exist).
    Furthermore in this situation any of the codecs has been removed, would
    cause the debugfs entries to disappear, regardless if the codec, which
    created them are still loaded (the one which loaded first).
    
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@nokia.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 475cb7ed6bec..0b1f917a53ba 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -413,6 +413,7 @@ struct snd_soc_codec {
 	unsigned int num_dai;
 
 #ifdef CONFIG_DEBUG_FS
+	struct dentry *debugfs_codec_root;
 	struct dentry *debugfs_reg;
 	struct dentry *debugfs_pop_time;
 	struct dentry *debugfs_dapm;

commit 236cc52856f6ebe47f52d50ba5431b0e172fd0d1
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon Sep 7 12:46:42 2009 +0100

    ASoC: Remove unuused hw_read_t
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 0758a1b3ca44..475cb7ed6bec 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -205,7 +205,6 @@ struct snd_soc_jack_gpio;
 #endif
 
 typedef int (*hw_write_t)(void *,const char* ,int);
-typedef int (*hw_read_t)(void *,char* ,int);
 
 extern struct snd_ac97_bus_ops soc_ac97_ops;
 

commit 79fb9387f88b6b44bbc46e19cae26d2c9fe3bb6a
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Fri Aug 21 16:38:13 2009 +0100

    ASoC: Add DAPM widget power decision debugfs files
    
    Currently when built with DEBUG DAPM will dump information about
    the power state decisions it is taking for each widget to dmesg.
    This isn't an ideal way of getting the information - it requires
    a kernel build to turn it on and off and for large hub CODECs the
    volume of information is so large as to be illegible. When the
    output goes to the console it can also cause a noticable impact
    on performance simply to print it out.
    
    Improve the situation by adding a dapm directory to our debugfs
    tree containing a file per widget with the same information in
    it. This still requires a decision to build with debugfs support
    but is easier to navigate and much less intrusive.
    
    In addition to the previously displayed information active streams
    are also shown in these files.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index dbb1702688cd..0758a1b3ca44 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -416,6 +416,7 @@ struct snd_soc_codec {
 #ifdef CONFIG_DEBUG_FS
 	struct dentry *debugfs_reg;
 	struct dentry *debugfs_pop_time;
+	struct dentry *debugfs_dapm;
 #endif
 };
 

commit 06cddefc1f25b847dafe392f3d5781482b3395b5
Merge: b9b5cc26d0b3 27ded041f030
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Fri Aug 7 11:43:58 2009 +0100

    Merge branch 'reg-cache' into for-2.6.32

commit afa2f1066e7288a9e4f8e3fda277da245219dffc
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Fri Jul 10 23:11:24 2009 +0100

    ASoC: Factor out I2C 8 bit address 16 bit data I/O
    
    As part of this refactoring the type of the CODEC hw_read operation
    is changed to match the regular read operation.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index d0b29a509bdd..4a5846e72473 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -373,7 +373,7 @@ struct snd_soc_codec {
 				size_t, unsigned int);
 	int (*volatile_register)(unsigned int);
 	hw_write_t hw_write;
-	hw_read_t hw_read;
+	unsigned int (*hw_read)(struct snd_soc_codec *, unsigned int);
 	void *reg_cache;
 	short reg_cache_size;
 	short reg_cache_step;

commit 7084a42b965d972079201414d19a399e65b26099
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Fri Jul 10 22:24:27 2009 +0100

    ASoC: Add I/O control bus information to factored out cache setup
    
    While writes tend to be able to use a fairly bus independant format to
    do the writes reads are all bus specific. To allow us to factor out
    this code include the bus type as a parameter when setting up the
    cache.
    
    Initially just use this to factor out hw_write_t for I2C.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 27409dd41ae9..d0b29a509bdd 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -187,13 +187,20 @@ typedef int (*hw_read_t)(void *,char* ,int);
 
 extern struct snd_ac97_bus_ops soc_ac97_ops;
 
+enum snd_soc_control_type {
+	SND_SOC_CUSTOM,
+	SND_SOC_I2C,
+	SND_SOC_SPI,
+};
+
 int snd_soc_register_platform(struct snd_soc_platform *platform);
 void snd_soc_unregister_platform(struct snd_soc_platform *platform);
 int snd_soc_register_codec(struct snd_soc_codec *codec);
 void snd_soc_unregister_codec(struct snd_soc_codec *codec);
 int snd_soc_codec_volatile_register(struct snd_soc_codec *codec, int reg);
 int snd_soc_codec_set_cache_io(struct snd_soc_codec *codec,
-			       int addr_bits, int data_bits);
+			       int addr_bits, int data_bits,
+			       enum snd_soc_control_type control);
 
 #ifdef CONFIG_PM
 int snd_soc_suspend_device(struct device *dev);

commit 77ee09c67e051a5ebd19a53ba3945dbdc8d21b3c
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Fri Jul 31 18:26:51 2009 +0100

    ASoC: Allow CODECs to flag invalid registers
    
    This helps CODECs with sparse register maps work better with the
    register cache display interface.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 756fb59772d1..55b330937260 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -385,6 +385,7 @@ struct snd_soc_codec {
 	int (*display_register)(struct snd_soc_codec *, char *,
 				size_t, unsigned int);
 	int (*volatile_register)(unsigned int);
+	int (*readable_register)(unsigned int);
 	hw_write_t hw_write;
 	hw_read_t hw_read;
 	void *reg_cache;

commit 3ce91d5a5a47eca6308c0a64f768c7a4466e0407
Author: Joonyoung Shim <jy0922.shim@samsung.com>
Date:   Wed Jul 15 20:33:50 2009 +0900

    ASoC: add SOC_DOUBLE_R_EXT_TLV control type
    
    This is a macro for double controls with special callback function and
    TLV. The SOC_DOUBLE_R_EXT_TLV needs two registers and one shift for
    double controls.
    
    Signed-off-by: Joonyoung Shim <jy0922.shim@samsung.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 795a6b4a67ee..756fb59772d1 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -146,6 +146,17 @@
 	.private_value = (unsigned long)&(struct soc_mixer_control) \
 		{.reg = xreg, .shift = shift_left, .rshift = shift_right, \
 		.max = xmax, .invert = xinvert} }
+#define SOC_DOUBLE_R_EXT_TLV(xname, reg_left, reg_right, xshift, xmax, xinvert,\
+	 xhandler_get, xhandler_put, tlv_array) \
+{	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname), \
+	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ | \
+		 SNDRV_CTL_ELEM_ACCESS_READWRITE, \
+	.tlv.p = (tlv_array), \
+	.info = snd_soc_info_volsw_2r, \
+	.get = xhandler_get, .put = xhandler_put, \
+	.private_value = (unsigned long)&(struct soc_mixer_control) \
+		{.reg = reg_left, .rreg = reg_right, .shift = xshift, \
+		.max = xmax, .invert = xinvert} }
 #define SOC_SINGLE_BOOL_EXT(xname, xdata, xhandler_get, xhandler_put) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
 	.info = snd_soc_info_bool_ext, \

commit d0af93db12639c425adee795fabadedb52182346
Author: Joonyoung Shim <jy0922.shim@samsung.com>
Date:   Wed Jul 15 20:33:47 2009 +0900

    ASoC: add SOC_DOUBLE_EXT_TLV control type
    
    This is a macro for double controls with special callback function and
    TLV. The SOC_DOUBLE_EXT_TLV needs one register and two shifts for double
    controls.
    
    Signed-off-by: Joonyoung Shim <jy0922.shim@samsung.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 94fcc65609b6..795a6b4a67ee 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -135,6 +135,17 @@
 	.info = snd_soc_info_volsw, \
 	.get = xhandler_get, .put = xhandler_put, \
 	.private_value = SOC_SINGLE_VALUE(xreg, xshift, xmax, xinvert) }
+#define SOC_DOUBLE_EXT_TLV(xname, xreg, shift_left, shift_right, xmax, xinvert,\
+	 xhandler_get, xhandler_put, tlv_array) \
+{	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname), \
+	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ | \
+		 SNDRV_CTL_ELEM_ACCESS_READWRITE, \
+	.tlv.p = (tlv_array), \
+	.info = snd_soc_info_volsw, \
+	.get = xhandler_get, .put = xhandler_put, \
+	.private_value = (unsigned long)&(struct soc_mixer_control) \
+		{.reg = xreg, .shift = shift_left, .rshift = shift_right, \
+		.max = xmax, .invert = xinvert} }
 #define SOC_SINGLE_BOOL_EXT(xname, xdata, xhandler_get, xhandler_put) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
 	.info = snd_soc_info_bool_ext, \

commit 17a52fd60a0a0e617ed94aadb1b19751a8fa219e
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Sun Jul 5 17:24:50 2009 +0100

    ASoC: Begin to factor out register cache I/O functions
    
    A lot of CODECs share the same register data formats and therefore
    replicate the code to manage access to and caching of the register
    map. In order to reduce code duplication centralised versions of
    this code will be introduced with drivers able to configure the use
    of the common code by calling the new snd_soc_codec_set_cache_io()
    API call during startup.
    
    As an initial user the 7 bit address/9 bit data format used by many
    Wolfson devices is supported for write only CODECs and the drivers
    with straightforward register cache implementations are converted to
    use it.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 94fcc65609b6..27409dd41ae9 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -192,6 +192,8 @@ void snd_soc_unregister_platform(struct snd_soc_platform *platform);
 int snd_soc_register_codec(struct snd_soc_codec *codec);
 void snd_soc_unregister_codec(struct snd_soc_codec *codec);
 int snd_soc_codec_volatile_register(struct snd_soc_codec *codec, int reg);
+int snd_soc_codec_set_cache_io(struct snd_soc_codec *codec,
+			       int addr_bits, int data_bits);
 
 #ifdef CONFIG_PM
 int snd_soc_suspend_device(struct device *dev);

commit 096e49d5e6f7bd93395e7ddf7e0239e1644d0505
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Sun Jul 5 15:12:22 2009 +0100

    ASoC: Add CODEC volatile register operation
    
    Add a volatile_register() operation to the CODEC structure providing a
    standard operation to query if a register is volatile. This will be used
    to factor out the register cache I/O operations for the CODECs.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index e6704c0a4404..94fcc65609b6 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -191,6 +191,7 @@ int snd_soc_register_platform(struct snd_soc_platform *platform);
 void snd_soc_unregister_platform(struct snd_soc_platform *platform);
 int snd_soc_register_codec(struct snd_soc_codec *codec);
 void snd_soc_unregister_codec(struct snd_soc_codec *codec);
+int snd_soc_codec_volatile_register(struct snd_soc_codec *codec, int reg);
 
 #ifdef CONFIG_PM
 int snd_soc_suspend_device(struct device *dev);
@@ -361,6 +362,7 @@ struct snd_soc_codec {
 	int (*write)(struct snd_soc_codec *, unsigned int, unsigned int);
 	int (*display_register)(struct snd_soc_codec *, char *,
 				size_t, unsigned int);
+	int (*volatile_register)(unsigned int);
 	hw_write_t hw_write;
 	hw_read_t hw_read;
 	void *reg_cache;

commit 831dc0f10f7b2a4856094ff160c018bf19f77527
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Sat Jun 13 19:55:02 2009 +0100

    ASoC: Add stub suspend and resume calls for ASoC subdevices
    
    Now that ASoC subdevices can be regular devices they can have normal
    suspend and resume calls from their buses.  However, suspending them
    individually is not desirable since this can lead to problems such as
    pops and clicks from devices being suspended with their signals being
    amplified or clocks being stopped suddenly.
    
    This will be resolved by having the normal device model suspend and
    resume calls call into ASoC which will suspend the entire card while any
    of its components are suspended.  At present this is not yet implemented
    but in order to aid the transition of drivers to the standard device
    model this patch adds API calls for the notifications.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 5297ba7e2c41..e6704c0a4404 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -192,6 +192,11 @@ void snd_soc_unregister_platform(struct snd_soc_platform *platform);
 int snd_soc_register_codec(struct snd_soc_codec *codec);
 void snd_soc_unregister_codec(struct snd_soc_codec *codec);
 
+#ifdef CONFIG_PM
+int snd_soc_suspend_device(struct device *dev);
+int snd_soc_resume_device(struct device *dev);
+#endif
+
 /* pcm <-> DAI connect */
 void snd_soc_free_pcms(struct snd_soc_device *socdev);
 int snd_soc_new_pcms(struct snd_soc_device *socdev, int idx, const char *xid);

commit 0e09b67e5886bf549ab14ef73de35d64ac867e2b
Merge: fa44c077eb2a 291f3bbcacf2
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Thu Jun 11 21:04:04 2009 +0100

    Merge branch 'dapm' into for-2.6.32

commit 291f3bbcacf278726911c713e14cedb71c486b16
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Sun Jun 7 13:57:17 2009 +0100

    ASoC: Make DAPM power sequence lists local variables
    
    They are now only accessed within dapm_power_widgets() so can be local
    to that function.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index cf6111d72b17..5964dd65bbd3 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -369,8 +369,6 @@ struct snd_soc_codec {
 	enum snd_soc_bias_level bias_level;
 	enum snd_soc_bias_level suspend_bias_level;
 	struct delayed_work delayed_work;
-	struct list_head up_list;
-	struct list_head down_list;
 
 	/* codec DAI's */
 	struct snd_soc_dai *dai;

commit 46f5822f7841697d4aedaf4672661d7a765172cd
Author: Daniel Ribeiro <drwyrm@gmail.com>
Date:   Sun Jun 7 02:49:11 2009 -0300

    ASoC: Allow 32 bit registers for DAPM
    
    Replace the remaining unsigned shorts with unsigned ints.
    Tested with pcap2 codec (25 bits registers).
    
    Signed-off-by: Daniel Ribeiro <drwyrm@gmail.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index cf6111d72b17..a167b4930447 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -216,9 +216,9 @@ void snd_soc_jack_free_gpios(struct snd_soc_jack *jack, int count,
 
 /* codec register bit access */
 int snd_soc_update_bits(struct snd_soc_codec *codec, unsigned short reg,
-				unsigned short mask, unsigned short value);
+				unsigned int mask, unsigned int value);
 int snd_soc_test_bits(struct snd_soc_codec *codec, unsigned short reg,
-				unsigned short mask, unsigned short value);
+				unsigned int mask, unsigned int value);
 
 int snd_soc_new_ac97_codec(struct snd_soc_codec *codec,
 	struct snd_ac97_bus_ops *ops, int num);

commit 5c82f56736e4c3a9eaf53c94366b056c8622d79e
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Fri May 22 09:41:30 2009 +0100

    AsoC: Make snd_soc_read() and snd_soc_write() functions
    
    Should be no impact on the generated code but it helps the compiler
    print clearer messages.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 2af3213df90c..cf6111d72b17 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -214,10 +214,6 @@ void snd_soc_jack_free_gpios(struct snd_soc_jack *jack, int count,
 			struct snd_soc_jack_gpio *gpios);
 #endif
 
-/* codec IO */
-#define snd_soc_read(codec, reg) codec->read(codec, reg)
-#define snd_soc_write(codec, reg, value) codec->write(codec, reg, value)
-
 /* codec register bit access */
 int snd_soc_update_bits(struct snd_soc_codec *codec, unsigned short reg,
 				unsigned short mask, unsigned short value);
@@ -507,6 +503,19 @@ struct soc_enum {
 	void *dapm;
 };
 
+/* codec IO */
+static inline unsigned int snd_soc_read(struct snd_soc_codec *codec,
+					unsigned int reg)
+{
+	return codec->read(codec, reg);
+}
+
+static inline unsigned int snd_soc_write(struct snd_soc_codec *codec,
+					 unsigned int reg, unsigned int val)
+{
+	return codec->write(codec, reg, val);
+}
+
 #include <sound/soc-dai.h>
 
 #endif

commit 452c5eaa0d5162e02ffee742ea17540887bc2904
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Sun May 17 21:41:23 2009 +0100

    ASoC: Integrate bias management with DAPM power management
    
    Rather than managing the bias level of the system based on if there is
    an active audio stream manage it based on there being an active DAPM
    widget. This simplifies the code a little, moving the power handling
    into one place, and improves audio performance for bypass paths when no
    playbacks or captures are active.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 8309ce81cf3b..2af3213df90c 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -339,6 +339,7 @@ struct snd_soc_codec {
 	struct module *owner;
 	struct mutex mutex;
 	struct device *dev;
+	struct snd_soc_device *socdev;
 
 	struct list_head list;
 

commit 6d3ddc81f5762d54ce7d1db70eb757c6c12fabbc
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Sat May 16 17:47:29 2009 +0100

    ASoC: Split DAPM power checks from sequencing of power changes
    
    DAPM has always applied any changes to the power state of widgets as soon
    as it has determined that they are required. Instead of doing this store
    all the changes that are required on lists of widgets to power up and
    down, then iterate over those lists and apply the changes. This changes
    the sequence in which changes are implemented, doing all power downs
    before power ups and always using the up/down sequences (previously they
    were only used when changes were due to DAC/ADC power events). The error
    handling is also changed so that we continue attempting to power widgets
    if some changes fail.
    
    The main benefit of this is to allow future changes to do optimisations
    over the whole power sequence and to reduce the number of walks of the
    widget graph required to check the power status of widgets.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 6ab80bf7abd2..8309ce81cf3b 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -372,6 +372,8 @@ struct snd_soc_codec {
 	enum snd_soc_bias_level bias_level;
 	enum snd_soc_bias_level suspend_bias_level;
 	struct delayed_work delayed_work;
+	struct list_head up_list;
+	struct list_head down_list;
 
 	/* codec DAI's */
 	struct snd_soc_dai *dai;

commit 7629ad24f2b3df95c8b4cd8869e3c04e1df6c442
Author: Daniel Mack <daniel@caiaq.de>
Date:   Fri Apr 24 16:37:44 2009 +0200

    ASoC: add SOC_DOUBLE_EXT macro
    
    Add a macro for double controls with special callback functions.
    
    Signed-off-by: Daniel Mack <daniel@caiaq.de>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index b1f2f8819fea..6ab80bf7abd2 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -118,6 +118,14 @@
 	.info = snd_soc_info_volsw, \
 	.get = xhandler_get, .put = xhandler_put, \
 	.private_value = SOC_SINGLE_VALUE(xreg, xshift, xmax, xinvert) }
+#define SOC_DOUBLE_EXT(xname, xreg, shift_left, shift_right, xmax, xinvert,\
+	 xhandler_get, xhandler_put) \
+{	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname),\
+	.info = snd_soc_info_volsw, \
+	.get = xhandler_get, .put = xhandler_put, \
+	.private_value = (unsigned long)&(struct soc_mixer_control) \
+		{.reg = xreg, .shift = shift_left, .rshift = shift_right, \
+		 .max = xmax, .invert = xinvert} }
 #define SOC_SINGLE_EXT_TLV(xname, xreg, xshift, xmax, xinvert,\
 	 xhandler_get, xhandler_put, tlv_array) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \

commit 06f409d76f1d382167eb1cadde2e23a73272865d
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Tue Apr 7 18:10:13 2009 +0100

    ASoC: Provide core support for symmetric sample rates
    
    Many devices require symmetric configurations of capture and playback
    data formats, often due to shared clocking but sometimes also due to
    other shared playback and record configuration in the device. Start
    providing core support for this by allowing the DAIs or the machine
    to specify that the sample rates used should be kept symmetric.
    
    A flag symmetric_rates is provided in the snd_soc_dai and
    snd_soc_dai_link structures. If this is set in either of the DAIs or in
    the machine then a constraint will be applied when a stream is already
    open preventing any changes in sample rate.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index a40bc6f316fc..b1f2f8819fea 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -417,6 +417,12 @@ struct snd_soc_dai_link  {
 	/* codec/machine specific init - e.g. add machine controls */
 	int (*init)(struct snd_soc_codec *codec);
 
+	/* Symmetry requirements */
+	unsigned int symmetric_rates:1;
+
+	/* Symmetry data - only valid if symmetry is being enforced */
+	unsigned int rate;
+
 	/* DAI pcm */
 	struct snd_pcm *pcm;
 };

commit ec67624d33d5639bcc6ee6918cb1fc0bd1bac3a8
Author: Lopez Cruz, Misael <x0052729@ti.com>
Date:   Tue Mar 3 15:25:04 2009 -0600

    ASoC: Add GPIO support for jack reporting interface
    
    Add GPIO support to jack reporting framework in ASoC using gpiolib calls.
    The gpio support exports two new functions: snd_soc_jack_add_gpios and
    snd_soc_jack_free_gpios.
    
    Client drivers using gpio feature must pass an array of jack_gpio pins
    belonging to a specific jack to the snd_soc_jack_add_gpios function. The
    framework will request the gpios, set the data direction and request irq.
    The framework will update power status of related jack_pins when an event on
    the gpio pins comes according to the reporting bits defined for each gpio.
    
    All gpio resources allocated when adding jack_gpio pins can be released
    using snd_soc_jack_free_gpios function.
    
    Signed-off-by: Misael Lopez Cruz <x0052729@ti.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 0e7735264169..a40bc6f316fc 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -16,6 +16,8 @@
 #include <linux/platform_device.h>
 #include <linux/types.h>
 #include <linux/workqueue.h>
+#include <linux/interrupt.h>
+#include <linux/kernel.h>
 #include <sound/core.h>
 #include <sound/pcm.h>
 #include <sound/control.h>
@@ -168,6 +170,9 @@ struct soc_enum;
 struct snd_soc_ac97_ops;
 struct snd_soc_jack;
 struct snd_soc_jack_pin;
+#ifdef CONFIG_GPIOLIB
+struct snd_soc_jack_gpio;
+#endif
 
 typedef int (*hw_write_t)(void *,const char* ,int);
 typedef int (*hw_read_t)(void *,char* ,int);
@@ -194,6 +199,12 @@ int snd_soc_jack_new(struct snd_soc_card *card, const char *id, int type,
 void snd_soc_jack_report(struct snd_soc_jack *jack, int status, int mask);
 int snd_soc_jack_add_pins(struct snd_soc_jack *jack, int count,
 			  struct snd_soc_jack_pin *pins);
+#ifdef CONFIG_GPIOLIB
+int snd_soc_jack_add_gpios(struct snd_soc_jack *jack, int count,
+			struct snd_soc_jack_gpio *gpios);
+void snd_soc_jack_free_gpios(struct snd_soc_jack *jack, int count,
+			struct snd_soc_jack_gpio *gpios);
+#endif
 
 /* codec IO */
 #define snd_soc_read(codec, reg) codec->read(codec, reg)
@@ -264,6 +275,27 @@ struct snd_soc_jack_pin {
 	bool invert;
 };
 
+/**
+ * struct snd_soc_jack_gpio - Describes a gpio pin for jack detection
+ *
+ * @gpio:         gpio number
+ * @name:         gpio name
+ * @report:       value to report when jack detected
+ * @invert:       report presence in low state
+ * @debouce_time: debouce time in ms
+ */
+#ifdef CONFIG_GPIOLIB
+struct snd_soc_jack_gpio {
+	unsigned int gpio;
+	const char *name;
+	int report;
+	int invert;
+	int debounce_time;
+	struct snd_soc_jack *jack;
+	struct work_struct work;
+};
+#endif
+
 struct snd_soc_jack {
 	struct snd_jack *jack;
 	struct snd_soc_card *card;

commit 6627a653bceb3a54e55e5cdc478ec5b8d5c9cc44
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Fri Jan 23 22:55:23 2009 +0000

    ASoC: Push the codec runtime storage into the card structure
    
    This is a further stage on the road to refactoring away the ASoC
    platform device.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 7039343e8a78..0e7735264169 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -418,6 +418,8 @@ struct snd_soc_card {
 
 	struct snd_soc_device *socdev;
 
+	struct snd_soc_codec *codec;
+
 	struct snd_soc_platform *platform;
 	struct delayed_work delayed_work;
 	struct work_struct deferred_resume_work;
@@ -427,7 +429,6 @@ struct snd_soc_card {
 struct snd_soc_device {
 	struct device *dev;
 	struct snd_soc_card *card;
-	struct snd_soc_codec *codec;
 	struct snd_soc_codec_device *codec_dev;
 	void *codec_data;
 };

commit 5852973c129cf7c7e6c229abb7250673fc2a50c9
Merge: 3e8e1952e3a3 c6d1662b2294
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Fri Jan 9 11:03:55 2009 +0000

    Merge branch 'for-2.6.29' into for-2.6.30

commit 3e8e1952e3a3dd59b11233a532ca68e6471742d9
Author: Ian Molton <ian@mnementh.co.uk>
Date:   Fri Jan 9 00:23:21 2009 +0000

    ASoC: cleanup duplicated code.
    
    Many codec drivers were implementing cookie-cutter copies of the function
    that adds kcontrols to the codec.
    
    This patch moves this code to a common function snd_soc_add_controls() in
    soc-core.c and updates all drivers using copies of this function to use the
    new common version.
    
    [Edited to raise priority of error log message and document parameters.
     -- broonie]
    
    Signed-off-by: Ian Molton <ian@mnementh.co.uk>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 9c3ef6a3e9fb..9d5a0362a055 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -214,6 +214,8 @@ void snd_soc_free_ac97_codec(struct snd_soc_codec *codec);
  */
 struct snd_kcontrol *snd_soc_cnew(const struct snd_kcontrol_new *_template,
 	void *data, char *long_name);
+int snd_soc_add_controls(struct snd_soc_codec *codec,
+	const struct snd_kcontrol_new *controls, int num_controls);
 int snd_soc_info_enum_double(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_info *uinfo);
 int snd_soc_info_enum_ext(struct snd_kcontrol *kcontrol,

commit 8a2cd6180f8fa00111843c2f4a4f4361995358e0
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Wed Jan 7 17:31:10 2009 +0000

    ASoC: Add jack reporting interface
    
    This patch adds a jack reporting interface to ASoC.  This wraps the ALSA
    core jack detection functionality and provides integration with DAPM to
    automatically update the power state of pins based on the jack state.
    
    Since embedded platforms can have multiple detecton methods used for a
    single jack (eg, separate microphone and headphone detection) the report
    function allows specification of which bits are being updated on a given
    report.
    
    The expected usage is that machine drivers will create jack objects and
    then configure jack detection methods to update that jack.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 9b930d342116..9c3ef6a3e9fb 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -154,6 +154,8 @@ enum snd_soc_bias_level {
 	SND_SOC_BIAS_OFF,
 };
 
+struct snd_jack;
+struct snd_soc_card;
 struct snd_soc_device;
 struct snd_soc_pcm_stream;
 struct snd_soc_ops;
@@ -164,6 +166,8 @@ struct snd_soc_platform;
 struct snd_soc_codec;
 struct soc_enum;
 struct snd_soc_ac97_ops;
+struct snd_soc_jack;
+struct snd_soc_jack_pin;
 
 typedef int (*hw_write_t)(void *,const char* ,int);
 typedef int (*hw_read_t)(void *,char* ,int);
@@ -184,6 +188,13 @@ int snd_soc_init_card(struct snd_soc_device *socdev);
 int snd_soc_set_runtime_hwparams(struct snd_pcm_substream *substream,
 	const struct snd_pcm_hardware *hw);
 
+/* Jack reporting */
+int snd_soc_jack_new(struct snd_soc_card *card, const char *id, int type,
+		     struct snd_soc_jack *jack);
+void snd_soc_jack_report(struct snd_soc_jack *jack, int status, int mask);
+int snd_soc_jack_add_pins(struct snd_soc_jack *jack, int count,
+			  struct snd_soc_jack_pin *pins);
+
 /* codec IO */
 #define snd_soc_read(codec, reg) codec->read(codec, reg)
 #define snd_soc_write(codec, reg, value) codec->write(codec, reg, value)
@@ -239,6 +250,27 @@ int snd_soc_get_volsw_s8(struct snd_kcontrol *kcontrol,
 int snd_soc_put_volsw_s8(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
 
+/**
+ * struct snd_soc_jack_pin - Describes a pin to update based on jack detection
+ *
+ * @pin:    name of the pin to update
+ * @mask:   bits to check for in reported jack status
+ * @invert: if non-zero then pin is enabled when status is not reported
+ */
+struct snd_soc_jack_pin {
+	struct list_head list;
+	const char *pin;
+	int mask;
+	bool invert;
+};
+
+struct snd_soc_jack {
+	struct snd_jack *jack;
+	struct snd_soc_card *card;
+	struct list_head pins;
+	int status;
+};
+
 /* SoC PCM stream information */
 struct snd_soc_pcm_stream {
 	char *stream_name;

commit 741555568f8ba307c626019787c412f4386cafdc
Author: Peter Ujfalusi <peter.ujfalusi@nokia.com>
Date:   Thu Jan 8 13:34:29 2009 +0200

    ASoC: Merge the soc_value_enum to soc_enum struct
    
    Merge the recently introduced soc_value_enum structure to the soc_enum.
    The value based enums are still handled separately from the normal enum types,
    but with the merge some of the newly introduced functions can be removed.
    
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@nokia.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 9b930d342116..24593ac3ea19 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -106,7 +106,7 @@
 	.private_value = (unsigned long)&xenum }
 #define SOC_VALUE_ENUM(xname, xenum) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname,\
-	.info = snd_soc_info_value_enum_double, \
+	.info = snd_soc_info_enum_double, \
 	.get = snd_soc_get_value_enum_double, \
 	.put = snd_soc_put_value_enum_double, \
 	.private_value = (unsigned long)&xenum }
@@ -211,8 +211,6 @@ int snd_soc_get_enum_double(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
 int snd_soc_put_enum_double(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
-int snd_soc_info_value_enum_double(struct snd_kcontrol *kcontrol,
-	struct snd_ctl_elem_info *uinfo);
 int snd_soc_get_value_enum_double(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
 int snd_soc_put_value_enum_double(struct snd_kcontrol *kcontrol,
@@ -414,17 +412,6 @@ struct soc_mixer_control {
 
 /* enumerated kcontrol */
 struct soc_enum {
-	unsigned short reg;
-	unsigned short reg2;
-	unsigned char shift_l;
-	unsigned char shift_r;
-	unsigned int max;
-	const char **texts;
-	void *dapm;
-};
-
-/* semi enumerated kcontrol */
-struct soc_value_enum {
 	unsigned short reg;
 	unsigned short reg2;
 	unsigned char shift_l;

commit 2e72f8e3716bc3bbf4c9b5b987fb5ab3223f60bf
Author: Peter Ujfalusi <peter.ujfalusi@nokia.com>
Date:   Mon Jan 5 09:54:57 2009 +0200

    ASoC: New enum type: value_enum
    
    This patch introduces a new enum type.
    In this enum type each enumerated items referred with a value.
    
    This new enum type can handle enums encoded in bitfield, or any other
    weird ways. twl4030 codec has several mux selection register, where the
    input/output mux is coded in a bitfield. With the normal enum type this type
    of mux can not be handled in a clean way.
    
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@nokia.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index f86e455d3828..9b930d342116 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -94,11 +94,22 @@
 	SOC_ENUM_DOUBLE(xreg, xshift, xshift, xmax, xtexts)
 #define SOC_ENUM_SINGLE_EXT(xmax, xtexts) \
 {	.max = xmax, .texts = xtexts }
+#define SOC_VALUE_ENUM_DOUBLE(xreg, xshift_l, xshift_r, xmask, xmax, xtexts, xvalues) \
+{	.reg = xreg, .shift_l = xshift_l, .shift_r = xshift_r, \
+	.mask = xmask, .max = xmax, .texts = xtexts, .values = xvalues}
+#define SOC_VALUE_ENUM_SINGLE(xreg, xshift, xmask, xmax, xtexts, xvalues) \
+	SOC_VALUE_ENUM_DOUBLE(xreg, xshift, xshift, xmask, xmax, xtexts, xvalues)
 #define SOC_ENUM(xname, xenum) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname,\
 	.info = snd_soc_info_enum_double, \
 	.get = snd_soc_get_enum_double, .put = snd_soc_put_enum_double, \
 	.private_value = (unsigned long)&xenum }
+#define SOC_VALUE_ENUM(xname, xenum) \
+{	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname,\
+	.info = snd_soc_info_value_enum_double, \
+	.get = snd_soc_get_value_enum_double, \
+	.put = snd_soc_put_value_enum_double, \
+	.private_value = (unsigned long)&xenum }
 #define SOC_SINGLE_EXT(xname, xreg, xshift, xmax, xinvert,\
 	 xhandler_get, xhandler_put) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
@@ -200,6 +211,12 @@ int snd_soc_get_enum_double(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
 int snd_soc_put_enum_double(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
+int snd_soc_info_value_enum_double(struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_info *uinfo);
+int snd_soc_get_value_enum_double(struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_value *ucontrol);
+int snd_soc_put_value_enum_double(struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_value *ucontrol);
 int snd_soc_info_volsw(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_info *uinfo);
 int snd_soc_info_volsw_ext(struct snd_kcontrol *kcontrol,
@@ -406,6 +423,19 @@ struct soc_enum {
 	void *dapm;
 };
 
+/* semi enumerated kcontrol */
+struct soc_value_enum {
+	unsigned short reg;
+	unsigned short reg2;
+	unsigned char shift_l;
+	unsigned char shift_r;
+	unsigned int max;
+	unsigned int mask;
+	const char **texts;
+	const unsigned int *values;
+	void *dapm;
+};
+
 #include <sound/soc-dai.h>
 
 #endif

commit 0d0cf00a7fc63cee9a4c4a3b8612879b4f7f42ba
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Wed Dec 10 14:32:45 2008 +0000

    ASoC: Add codec registration API
    
    Another part of the backporting of Liam's ASoC v2 work. Using this is
    more complicated than the other registration types since currently the
    codec is instantiated during the probe of the ASoC device so we can't
    currently readily wait for the codec to register.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index ce3661d07c24..f86e455d3828 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -161,6 +161,8 @@ extern struct snd_ac97_bus_ops soc_ac97_ops;
 
 int snd_soc_register_platform(struct snd_soc_platform *platform);
 void snd_soc_unregister_platform(struct snd_soc_platform *platform);
+int snd_soc_register_codec(struct snd_soc_codec *codec);
+void snd_soc_unregister_codec(struct snd_soc_codec *codec);
 
 /* pcm <-> DAI connect */
 void snd_soc_free_pcms(struct snd_soc_device *socdev);
@@ -247,6 +249,9 @@ struct snd_soc_codec {
 	char *name;
 	struct module *owner;
 	struct mutex mutex;
+	struct device *dev;
+
+	struct list_head list;
 
 	/* callbacks */
 	int (*set_bias_level)(struct snd_soc_codec *,

commit 12a48a8c0087ba39d926cf1d63938ccbdb9752c3
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Wed Dec 3 19:40:30 2008 +0000

    ASoC: Add platform registration API
    
    ASoC v2 allows platform drivers to instantiate independantly of the
    overall ASoC card. This API allows drivers to notify the core when
    they are registered.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 4a578b5d855c..ce3661d07c24 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -149,6 +149,7 @@ struct snd_soc_ops;
 struct snd_soc_dai_mode;
 struct snd_soc_pcm_runtime;
 struct snd_soc_dai;
+struct snd_soc_platform;
 struct snd_soc_codec;
 struct soc_enum;
 struct snd_soc_ac97_ops;
@@ -158,6 +159,9 @@ typedef int (*hw_read_t)(void *,char* ,int);
 
 extern struct snd_ac97_bus_ops soc_ac97_ops;
 
+int snd_soc_register_platform(struct snd_soc_platform *platform);
+void snd_soc_unregister_platform(struct snd_soc_platform *platform);
+
 /* pcm <-> DAI connect */
 void snd_soc_free_pcms(struct snd_soc_device *socdev);
 int snd_soc_new_pcms(struct snd_soc_device *socdev, int idx, const char *xid);
@@ -296,6 +300,7 @@ struct snd_soc_codec_device {
 /* SoC platform interface */
 struct snd_soc_platform {
 	char *name;
+	struct list_head list;
 
 	int (*probe)(struct platform_device *pdev);
 	int (*remove)(struct platform_device *pdev);

commit c5af3a2e192d333997d1e191f3eba7fd2f869681
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Fri Nov 28 13:29:45 2008 +0000

    ASoC: Add card registration API
    
    ASoC v2 allows cards, codecs and platforms to instantiate separately,
    with the overall ASoC device only being instantiated once all the
    required components have registered. As part of backporting Liam's work
    introduce an initial version of the card registration functions. At
    present these do nothing active and are internal only, they will be
    exposed to machine drivers after further backporting.  Adding this now
    allows the datastructures used for dynamic card instantiation to be
    built up gradually.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 79d855d2bddd..4a578b5d855c 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -333,6 +333,11 @@ struct snd_soc_dai_link  {
 /* SoC card */
 struct snd_soc_card {
 	char *name;
+	struct device *dev;
+
+	struct list_head list;
+
+	int instantiated;
 
 	int (*probe)(struct platform_device *pdev);
 	int (*remove)(struct platform_device *pdev);

commit 32c8dabc97d436582298ebd0e33af041c69f5a4b
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Wed Dec 3 19:41:13 2008 +0000

    ASoC: Remove obsolete declaration of struct snd_soc_clock_info
    
    The struct is never defined.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 8ec63c02dc10..79d855d2bddd 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -152,7 +152,6 @@ struct snd_soc_dai;
 struct snd_soc_codec;
 struct soc_enum;
 struct snd_soc_ac97_ops;
-struct snd_soc_clock_info;
 
 typedef int (*hw_write_t)(void *,const char* ,int);
 typedef int (*hw_read_t)(void *,char* ,int);

commit 07c84d0409f3551b79d676630d8ee76bb551598d
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Wed Dec 3 18:17:28 2008 +0000

    ASoC: Remove device from platform suspend and resume operations
    
    None of the platforms are actually using the SoC device so remove it
    (only atmel actually has a suspend method).
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 3ee608dce2f8..8ec63c02dc10 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -300,10 +300,8 @@ struct snd_soc_platform {
 
 	int (*probe)(struct platform_device *pdev);
 	int (*remove)(struct platform_device *pdev);
-	int (*suspend)(struct platform_device *pdev,
-		struct snd_soc_dai *dai);
-	int (*resume)(struct platform_device *pdev,
-		struct snd_soc_dai *dai);
+	int (*suspend)(struct snd_soc_dai *dai);
+	int (*resume)(struct snd_soc_dai *dai);
 
 	/* pcm creation and destruction */
 	int (*pcm_new)(struct snd_card *, struct snd_soc_dai *,

commit 384c89e2e4cb5879b86a38414d1b3bb2b23ec8ee
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Wed Dec 3 17:34:03 2008 +0000

    ASoC: Push debugfs files out of the snd_soc_device structure
    
    This is in preparation for the removal of struct snd_soc_device.
    
    The pop time configuration should really be a property of the card not
    the codec but since DAPM currently uses the codec rather than the card
    using the codec is fine for now.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index ad8141acd6b0..3ee608dce2f8 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -279,6 +279,11 @@ struct snd_soc_codec {
 	/* codec DAI's */
 	struct snd_soc_dai *dai;
 	unsigned int num_dai;
+
+#ifdef CONFIG_DEBUG_FS
+	struct dentry *debugfs_reg;
+	struct dentry *debugfs_pop_time;
+#endif
 };
 
 /* codec device */
@@ -364,9 +369,6 @@ struct snd_soc_device {
 	struct snd_soc_codec *codec;
 	struct snd_soc_codec_device *codec_dev;
 	void *codec_data;
-#ifdef CONFIG_DEBUG_FS
-	struct dentry	*debugfs_root;
-#endif
 };
 
 /* runtime channel data */

commit 87689d567a45f80416feea0a2aa6d3a2a6b8963a
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Tue Dec 2 16:01:14 2008 +0000

    ASoC: Push platform registration down into the card
    
    As part of the deprecation of snd_soc_device push the registration of
    the platform down into the card structure.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 359ec49f8d0d..ad8141acd6b0 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -352,6 +352,7 @@ struct snd_soc_card {
 
 	struct snd_soc_device *socdev;
 
+	struct snd_soc_platform *platform;
 	struct delayed_work delayed_work;
 	struct work_struct deferred_resume_work;
 };
@@ -360,7 +361,6 @@ struct snd_soc_card {
 struct snd_soc_device {
 	struct device *dev;
 	struct snd_soc_card *card;
-	struct snd_soc_platform *platform;
 	struct snd_soc_codec *codec;
 	struct snd_soc_codec_device *codec_dev;
 	void *codec_data;

commit 6308419a199eed66086cd756ab8dc81b88d54a6b
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Tue Dec 2 15:08:03 2008 +0000

    ASoC: Push workqueue data into snd_soc_card
    
    ASoC v2 does not use the struct snd_soc_device at runtime, using struct
    snd_soc_card as the root of the card.  Begin removing data from
    snd_soc_device by pushing the workqueue data into snd_soc_card, using a
    backpointer to the snd_soc_device to keep things going for the time
    being.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 9356c1ce98c1..359ec49f8d0d 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -349,6 +349,11 @@ struct snd_soc_card {
 	/* CPU <--> Codec DAI links  */
 	struct snd_soc_dai_link *dai_link;
 	int num_links;
+
+	struct snd_soc_device *socdev;
+
+	struct delayed_work delayed_work;
+	struct work_struct deferred_resume_work;
 };
 
 /* SoC Device - the audio subsystem */
@@ -358,8 +363,6 @@ struct snd_soc_device {
 	struct snd_soc_platform *platform;
 	struct snd_soc_codec *codec;
 	struct snd_soc_codec_device *codec_dev;
-	struct delayed_work delayed_work;
-	struct work_struct deferred_resume_work;
 	void *codec_data;
 #ifdef CONFIG_DEBUG_FS
 	struct dentry	*debugfs_root;

commit 968a6025aa9f909d487988efb542217a126023a0
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Fri Nov 28 11:49:07 2008 +0000

    ASoC: Rename snd_soc_register_card() to snd_soc_init_card()
    
    Currently ASoC card initialisation is completed by a function called
    snd_soc_register_card().  As part of the work to allow independant
    registration of cards, codecs and machines in ASoC v2 a new function of
    the same name has been added so rename the existing function to
    facilitate the merge of v2.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 444f9c211379..9356c1ce98c1 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -162,7 +162,7 @@ extern struct snd_ac97_bus_ops soc_ac97_ops;
 /* pcm <-> DAI connect */
 void snd_soc_free_pcms(struct snd_soc_device *socdev);
 int snd_soc_new_pcms(struct snd_soc_device *socdev, int idx, const char *xid);
-int snd_soc_register_card(struct snd_soc_device *socdev);
+int snd_soc_init_card(struct snd_soc_device *socdev);
 
 /* set runtime hw params */
 int snd_soc_set_runtime_hwparams(struct snd_pcm_substream *substream,

commit 3ba9e10a6d3b6abf5f5952572cff8f8d5a35ae54
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon Nov 24 18:01:05 2008 +0000

    ASoC: Remove DAI type information
    
    DAI type information is only ever used within ASoC in order to special
    case AC97 and for diagnostic purposes. Since modern CPUs and codecs
    support multi function DAIs which can be configured for several modes
    it is more trouble than it's worth to maintain anything other than a
    flag identifying AC97 DAIs so remove the type field and replace it with
    an ac97_control flag.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index e4465f73aa46..444f9c211379 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -143,14 +143,6 @@ enum snd_soc_bias_level {
 	SND_SOC_BIAS_OFF,
 };
 
-/*
- * Digital Audio Interface (DAI) types
- */
-#define SND_SOC_DAI_AC97	0x1
-#define SND_SOC_DAI_I2S		0x2
-#define SND_SOC_DAI_PCM		0x4
-#define SND_SOC_DAI_AC97_BUS	0x8	/* for custom i.e. non ac97_codec.c */
-
 struct snd_soc_device;
 struct snd_soc_pcm_stream;
 struct snd_soc_ops;

commit a47cbe7263236691ee0bbc392f7fd4ec0da1159f
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Wed Jul 23 14:03:07 2008 +0100

    ASoC: Move DAI structure definitions into new soc-dai.h
    
    ASoC v2 factors most of the contents of soc.h out into separate headers,
    including soc-dai.h for the DAI. Factor the existing DAI API out into
    this file in order to prepare for backporting of the ASoC v2 DAI API.
    Also backport some of Liam's improvements to the documentation.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 3be17b3c650c..e4465f73aa46 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -151,76 +151,6 @@ enum snd_soc_bias_level {
 #define SND_SOC_DAI_PCM		0x4
 #define SND_SOC_DAI_AC97_BUS	0x8	/* for custom i.e. non ac97_codec.c */
 
-/*
- * DAI hardware audio formats
- */
-#define SND_SOC_DAIFMT_I2S		0	/* I2S mode */
-#define SND_SOC_DAIFMT_RIGHT_J	1	/* Right justified mode */
-#define SND_SOC_DAIFMT_LEFT_J	2	/* Left Justified mode */
-#define SND_SOC_DAIFMT_DSP_A	3	/* L data msb after FRM or LRC */
-#define SND_SOC_DAIFMT_DSP_B	4	/* L data msb during FRM or LRC */
-#define SND_SOC_DAIFMT_AC97		5	/* AC97 */
-
-#define SND_SOC_DAIFMT_MSB 	SND_SOC_DAIFMT_LEFT_J
-#define SND_SOC_DAIFMT_LSB	SND_SOC_DAIFMT_RIGHT_J
-
-/*
- * DAI Gating
- */
-#define SND_SOC_DAIFMT_CONT			(0 << 4)	/* continuous clock */
-#define SND_SOC_DAIFMT_GATED		(1 << 4)	/* clock is gated when not Tx/Rx */
-
-/*
- * DAI Sync
- * Synchronous LR (Left Right) clocks and Frame signals.
- */
-#define SND_SOC_DAIFMT_SYNC		(0 << 5)	/* Tx FRM = Rx FRM */
-#define SND_SOC_DAIFMT_ASYNC		(1 << 5)	/* Tx FRM ~ Rx FRM */
-
-/*
- * TDM
- */
-#define SND_SOC_DAIFMT_TDM		(1 << 6)
-
-/*
- * DAI hardware signal inversions
- */
-#define SND_SOC_DAIFMT_NB_NF		(0 << 8)	/* normal bclk + frm */
-#define SND_SOC_DAIFMT_NB_IF		(1 << 8)	/* normal bclk + inv frm */
-#define SND_SOC_DAIFMT_IB_NF		(2 << 8)	/* invert bclk + nor frm */
-#define SND_SOC_DAIFMT_IB_IF		(3 << 8)	/* invert bclk + frm */
-
-/*
- * DAI hardware clock masters
- * This is wrt the codec, the inverse is true for the interface
- * i.e. if the codec is clk and frm master then the interface is
- * clk and frame slave.
- */
-#define SND_SOC_DAIFMT_CBM_CFM	(0 << 12) /* codec clk & frm master */
-#define SND_SOC_DAIFMT_CBS_CFM	(1 << 12) /* codec clk slave & frm master */
-#define SND_SOC_DAIFMT_CBM_CFS	(2 << 12) /* codec clk master & frame slave */
-#define SND_SOC_DAIFMT_CBS_CFS	(3 << 12) /* codec clk & frm slave */
-
-#define SND_SOC_DAIFMT_FORMAT_MASK		0x000f
-#define SND_SOC_DAIFMT_CLOCK_MASK		0x00f0
-#define SND_SOC_DAIFMT_INV_MASK			0x0f00
-#define SND_SOC_DAIFMT_MASTER_MASK		0xf000
-
-
-/*
- * Master Clock Directions
- */
-#define SND_SOC_CLOCK_IN	0
-#define SND_SOC_CLOCK_OUT	1
-
-/*
- * AC97 codec ID's bitmask
- */
-#define SND_SOC_DAI_AC97_ID0	(1 << 0)
-#define SND_SOC_DAI_AC97_ID1	(1 << 1)
-#define SND_SOC_DAI_AC97_ID2	(1 << 2)
-#define SND_SOC_DAI_AC97_ID3	(1 << 3)
-
 struct snd_soc_device;
 struct snd_soc_pcm_stream;
 struct snd_soc_ops;
@@ -260,27 +190,6 @@ int snd_soc_new_ac97_codec(struct snd_soc_codec *codec,
 	struct snd_ac97_bus_ops *ops, int num);
 void snd_soc_free_ac97_codec(struct snd_soc_codec *codec);
 
-/* Digital Audio Interface clocking API.*/
-int snd_soc_dai_set_sysclk(struct snd_soc_dai *dai, int clk_id,
-	unsigned int freq, int dir);
-
-int snd_soc_dai_set_clkdiv(struct snd_soc_dai *dai,
-	int div_id, int div);
-
-int snd_soc_dai_set_pll(struct snd_soc_dai *dai,
-	int pll_id, unsigned int freq_in, unsigned int freq_out);
-
-/* Digital Audio interface formatting */
-int snd_soc_dai_set_fmt(struct snd_soc_dai *dai, unsigned int fmt);
-
-int snd_soc_dai_set_tdm_slot(struct snd_soc_dai *dai,
-	unsigned int mask, int slots);
-
-int snd_soc_dai_set_tristate(struct snd_soc_dai *dai, int tristate);
-
-/* Digital Audio Interface mute */
-int snd_soc_dai_digital_mute(struct snd_soc_dai *dai, int mute);
-
 /*
  *Controls
  */
@@ -338,61 +247,6 @@ struct snd_soc_ops {
 	int (*trigger)(struct snd_pcm_substream *, int);
 };
 
-/* ASoC DAI ops */
-struct snd_soc_dai_ops {
-	/* DAI clocking configuration */
-	int (*set_sysclk)(struct snd_soc_dai *dai,
-		int clk_id, unsigned int freq, int dir);
-	int (*set_pll)(struct snd_soc_dai *dai,
-		int pll_id, unsigned int freq_in, unsigned int freq_out);
-	int (*set_clkdiv)(struct snd_soc_dai *dai, int div_id, int div);
-
-	/* DAI format configuration */
-	int (*set_fmt)(struct snd_soc_dai *dai, unsigned int fmt);
-	int (*set_tdm_slot)(struct snd_soc_dai *dai,
-		unsigned int mask, int slots);
-	int (*set_tristate)(struct snd_soc_dai *dai, int tristate);
-
-	/* digital mute */
-	int (*digital_mute)(struct snd_soc_dai *dai, int mute);
-};
-
-/* SoC  DAI (Digital Audio Interface) */
-struct snd_soc_dai {
-	/* DAI description */
-	char *name;
-	unsigned int id;
-	unsigned char type;
-
-	/* DAI callbacks */
-	int (*probe)(struct platform_device *pdev,
-		     struct snd_soc_dai *dai);
-	void (*remove)(struct platform_device *pdev,
-		       struct snd_soc_dai *dai);
-	int (*suspend)(struct platform_device *pdev,
-		struct snd_soc_dai *dai);
-	int (*resume)(struct platform_device *pdev,
-		struct snd_soc_dai *dai);
-
-	/* ops */
-	struct snd_soc_ops ops;
-	struct snd_soc_dai_ops dai_ops;
-
-	/* DAI capabilities */
-	struct snd_soc_pcm_stream capture;
-	struct snd_soc_pcm_stream playback;
-
-	/* DAI runtime info */
-	struct snd_pcm_runtime *runtime;
-	struct snd_soc_codec *codec;
-	unsigned int active;
-	unsigned char pop_wait:1;
-	void *dma_data;
-
-	/* DAI private data */
-	void *private_data;
-};
-
 /* SoC Audio Codec */
 struct snd_soc_codec {
 	char *name;
@@ -543,4 +397,6 @@ struct soc_enum {
 	void *dapm;
 };
 
+#include <sound/soc-dai.h>
+
 #endif

commit 875065491fba8eb13219f16c36e79a6fb4e15c68
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Tue Nov 18 20:50:34 2008 +0000

    ASoC: Rename snd_soc_card to snd_soc_machine
    
    One of the issues with the ASoC v1 API which has been addressed in the
    ASoC v2 work that Liam Girdwood has done is that the ALSA card provided
    by ASoC is distributed around the ASoC structures. For example, machine
    wide data such as the struct snd_card are maintained as part of the
    CODEC data structure, preventing the use of multiple codecs. This has
    been addressed by refactoring the data structures so that all the data
    for the ALSA card is contained in a single structure snd_soc_card which
    replaces the existing snd_soc_machine and snd_soc_device.
    
    Begin the process of backporting this by renaming struct snd_soc_machine
    to struct snd_soc_card, better reflecting its function and bringing it
    closer to standard ALSA terminology.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 077dfe4e51f0..3be17b3c650c 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -482,8 +482,8 @@ struct snd_soc_dai_link  {
 	struct snd_pcm *pcm;
 };
 
-/* SoC machine */
-struct snd_soc_machine {
+/* SoC card */
+struct snd_soc_card {
 	char *name;
 
 	int (*probe)(struct platform_device *pdev);
@@ -497,7 +497,7 @@ struct snd_soc_machine {
 	int (*resume_post)(struct platform_device *pdev);
 
 	/* callbacks */
-	int (*set_bias_level)(struct snd_soc_machine *,
+	int (*set_bias_level)(struct snd_soc_card *,
 			      enum snd_soc_bias_level level);
 
 	/* CPU <--> Codec DAI links  */
@@ -508,7 +508,7 @@ struct snd_soc_machine {
 /* SoC Device - the audio subsystem */
 struct snd_soc_device {
 	struct device *dev;
-	struct snd_soc_machine *machine;
+	struct snd_soc_card *card;
 	struct snd_soc_platform *platform;
 	struct snd_soc_codec *codec;
 	struct snd_soc_codec_device *codec_dev;

commit ca3ea02e90d63a6a91c1c2a445d6d71f9031a44a
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Tue Nov 18 20:40:36 2008 +0000

    ASoC: Remove unused snd_soc_machine_config declaration
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index fa1b99b45893..077dfe4e51f0 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -228,7 +228,6 @@ struct snd_soc_dai_mode;
 struct snd_soc_pcm_runtime;
 struct snd_soc_dai;
 struct snd_soc_codec;
-struct snd_soc_machine_config;
 struct soc_enum;
 struct snd_soc_ac97_ops;
 struct snd_soc_clock_info;

commit ea913940c39a61214c799cc7093d7b20fe11a94c
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Wed Nov 5 11:13:21 2008 +0000

    ASoC: Remove core version number
    
    Rather than try to remember to keep the core version number updated
    (which hasn't been happening) just remove it.  It was much more useful
    when ASoC was out of tree.
    
    Signed-off-by: Mark brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index da0040b69c2d..fa1b99b45893 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -21,8 +21,6 @@
 #include <sound/control.h>
 #include <sound/ac97_codec.h>
 
-#define SND_SOC_VERSION "0.13.2"
-
 /*
  * Convenience kcontrol builders
  */

commit 04172c0b9ea5861e5cba7909da5297b3aedac9e1
Merge: 5b99e6ccf964 13d622b33dfb
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Oct 31 14:39:49 2008 +0100

    Merge branch 'topic/fix/asoc' into topic/asoc

commit 12ef193d5817504621e503e78d641265f6a86ac4
Author: Troy Kisky <troy.kisky@boundarydevices.com>
Date:   Mon Oct 13 17:42:14 2008 -0700

    ASoC: Allow setting codec register with debugfs filesystem
    
    i.e. echo 6 59 >/sys/kernel/debug/soc-audio.0/codec_reg
    will set register 0x06 to a value of 0x59.
    Also, pop_time debugfs interface setup is moved so that it
    is setup in the same function as codec_reg
    
    Signed-off-by: Troy Kisky <troy.kisky@boundarydevices.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index a1e0357a84d7..d33825d624a5 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -425,6 +425,7 @@ struct snd_soc_codec {
 	short reg_cache_step;
 
 	/* dapm */
+	u32 pop_time;
 	struct list_head dapm_widgets;
 	struct list_head dapm_paths;
 	enum snd_soc_bias_level bias_level;
@@ -516,6 +517,9 @@ struct snd_soc_device {
 	struct delayed_work delayed_work;
 	struct work_struct deferred_resume_work;
 	void *codec_data;
+#ifdef CONFIG_DEBUG_FS
+	struct dentry	*debugfs_root;
+#endif
 };
 
 /* runtime channel data */

commit 762b8df748d83c14070afbf0c6f8c0f4a91a13bf
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Thu Oct 30 12:37:08 2008 +0000

    ALSA: ASoC: Fix mono controls after conversion to support full int masks
    
    When ASoC was converted to support full int width masks SOC_SINGLE_VALUE()
    omitted the assignment of rshift, causing the control operatins to report
    some mono controls as stereo. This happened to work some of the time due
    to a confusion between shift and min in snd_soc_info_volsw().
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index a1e0357a84d7..5e0189876afd 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -28,7 +28,8 @@
  */
 #define SOC_SINGLE_VALUE(xreg, xshift, xmax, xinvert) \
 	((unsigned long)&(struct soc_mixer_control) \
-	{.reg = xreg, .shift = xshift, .max = xmax, .invert = xinvert})
+	{.reg = xreg, .shift = xshift, .rshift = xshift, .max = xmax, \
+	.invert = xinvert})
 #define SOC_SINGLE_VALUE_EXT(xreg, xmax, xinvert) \
 	((unsigned long)&(struct soc_mixer_control) \
 	{.reg = xreg, .max = xmax, .invert = xinvert})

commit 815ecf8dec95d07e260a16ebe8409f4b7c0fdc0f
Author: Jon Smirl <jonsmirl@gmail.com>
Date:   Tue Jul 29 10:22:24 2008 -0400

    ALSA: ASoC: convert use of uint to unsigned int
    
    ASOC: convert use of uint to unsigned int
    
    Signed-off-by: Jon Smirl <jonsmirl@gmail.com>
    Acked-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Jaroslav Kysela <perex@perex.cz>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 5ca231f080a0..a1e0357a84d7 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -527,7 +527,7 @@ struct snd_soc_pcm_runtime {
 /* mixer control */
 struct soc_mixer_control {
 	int min, max;
-	uint reg, rreg, shift, rshift, invert;
+	unsigned int reg, rreg, shift, rshift, invert;
 };
 
 /* enumerated kcontrol */

commit f8ba0b7bfd06a2a5b3c49ff8d71cad31f57b0d51
Author: Jon Smirl <jonsmirl@gmail.com>
Date:   Tue Jul 29 11:42:27 2008 +0100

    ALSA: ASoC: Rename mask to max to reflect usage
    
    Most of the ASoC controls refer to the maximum value that can be set for
    a control as mask but there is no actual requirement for all bits to be
    set at the highest possible value making the name mask misleading.
    Change the code to use max instead.
    
    Signed-off-by: Jon Smirl <jonsmirl@gmail.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Jaroslav Kysela <perex@perex.cz>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index e647a34c8091..5ca231f080a0 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -88,25 +88,25 @@
 	.put    = snd_soc_put_volsw_s8, \
 	.private_value = (unsigned long)&(struct soc_mixer_control) \
 		{.reg = xreg, .min = xmin, .max = xmax} }
-#define SOC_ENUM_DOUBLE(xreg, xshift_l, xshift_r, xmask, xtexts) \
+#define SOC_ENUM_DOUBLE(xreg, xshift_l, xshift_r, xmax, xtexts) \
 {	.reg = xreg, .shift_l = xshift_l, .shift_r = xshift_r, \
-	.mask = xmask, .texts = xtexts }
-#define SOC_ENUM_SINGLE(xreg, xshift, xmask, xtexts) \
-	SOC_ENUM_DOUBLE(xreg, xshift, xshift, xmask, xtexts)
-#define SOC_ENUM_SINGLE_EXT(xmask, xtexts) \
-{	.mask = xmask, .texts = xtexts }
+	.max = xmax, .texts = xtexts }
+#define SOC_ENUM_SINGLE(xreg, xshift, xmax, xtexts) \
+	SOC_ENUM_DOUBLE(xreg, xshift, xshift, xmax, xtexts)
+#define SOC_ENUM_SINGLE_EXT(xmax, xtexts) \
+{	.max = xmax, .texts = xtexts }
 #define SOC_ENUM(xname, xenum) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname,\
 	.info = snd_soc_info_enum_double, \
 	.get = snd_soc_get_enum_double, .put = snd_soc_put_enum_double, \
 	.private_value = (unsigned long)&xenum }
-#define SOC_SINGLE_EXT(xname, xreg, xshift, xmask, xinvert,\
+#define SOC_SINGLE_EXT(xname, xreg, xshift, xmax, xinvert,\
 	 xhandler_get, xhandler_put) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
 	.info = snd_soc_info_volsw, \
 	.get = xhandler_get, .put = xhandler_put, \
-	.private_value = SOC_SINGLE_VALUE(xreg, xshift, xmask, xinvert) }
-#define SOC_SINGLE_EXT_TLV(xname, xreg, xshift, xmask, xinvert,\
+	.private_value = SOC_SINGLE_VALUE(xreg, xshift, xmax, xinvert) }
+#define SOC_SINGLE_EXT_TLV(xname, xreg, xshift, xmax, xinvert,\
 	 xhandler_get, xhandler_put, tlv_array) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
 	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ |\
@@ -114,7 +114,7 @@
 	.tlv.p = (tlv_array), \
 	.info = snd_soc_info_volsw, \
 	.get = xhandler_get, .put = xhandler_put, \
-	.private_value = SOC_SINGLE_VALUE(xreg, xshift, xmask, xinvert) }
+	.private_value = SOC_SINGLE_VALUE(xreg, xshift, xmax, xinvert) }
 #define SOC_SINGLE_BOOL_EXT(xname, xdata, xhandler_get, xhandler_put) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
 	.info = snd_soc_info_bool_ext, \
@@ -536,7 +536,7 @@ struct soc_enum {
 	unsigned short reg2;
 	unsigned char shift_l;
 	unsigned char shift_r;
-	unsigned int mask;
+	unsigned int max;
 	const char **texts;
 	void *dapm;
 };

commit 4eaa9819dc08d7bfd1065ce530e31b18a119dcaf
Author: Jon Smirl <jonsmirl@gmail.com>
Date:   Tue Jul 29 11:42:26 2008 +0100

    ALSA: ASoC: Convert bitfields in ASoC into full int width
    
    Convert bitfields in ASoC into full int width. This is a
    simple mechanical conversion. Two places in the DAPM code
    were fixed to properly use mask.
    
    Signed-off-by: Jon Smirl <jonsmirl@gmail.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Jaroslav Kysela <perex@perex.cz>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 2ce530efcf11..e647a34c8091 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -26,10 +26,12 @@
 /*
  * Convenience kcontrol builders
  */
-#define SOC_SINGLE_VALUE(reg, shift, max, invert) ((reg) | ((shift) << 8) |\
-	((shift) << 12) | ((max) << 16) | ((invert) << 24))
-#define SOC_SINGLE_VALUE_EXT(reg, max, invert) ((reg) | ((max) << 16) |\
-	((invert) << 31))
+#define SOC_SINGLE_VALUE(xreg, xshift, xmax, xinvert) \
+	((unsigned long)&(struct soc_mixer_control) \
+	{.reg = xreg, .shift = xshift, .max = xmax, .invert = xinvert})
+#define SOC_SINGLE_VALUE_EXT(xreg, xmax, xinvert) \
+	((unsigned long)&(struct soc_mixer_control) \
+	{.reg = xreg, .max = xmax, .invert = xinvert})
 #define SOC_SINGLE(xname, reg, shift, max, invert) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
 	.info = snd_soc_info_volsw, .get = snd_soc_get_volsw,\
@@ -43,45 +45,49 @@
 	.info = snd_soc_info_volsw, .get = snd_soc_get_volsw,\
 	.put = snd_soc_put_volsw, \
 	.private_value =  SOC_SINGLE_VALUE(reg, shift, max, invert) }
-#define SOC_DOUBLE(xname, reg, shift_left, shift_right, max, invert) \
+#define SOC_DOUBLE(xname, xreg, shift_left, shift_right, xmax, xinvert) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname),\
 	.info = snd_soc_info_volsw, .get = snd_soc_get_volsw, \
 	.put = snd_soc_put_volsw, \
-	.private_value = (reg) | ((shift_left) << 8) | \
-		((shift_right) << 12) | ((max) << 16) | ((invert) << 24) }
-#define SOC_DOUBLE_R(xname, reg_left, reg_right, shift, max, invert) \
+	.private_value = (unsigned long)&(struct soc_mixer_control) \
+		{.reg = xreg, .shift = shift_left, .rshift = shift_right, \
+		 .max = xmax, .invert = xinvert} }
+#define SOC_DOUBLE_R(xname, reg_left, reg_right, xshift, xmax, xinvert) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname), \
 	.info = snd_soc_info_volsw_2r, \
 	.get = snd_soc_get_volsw_2r, .put = snd_soc_put_volsw_2r, \
-	.private_value = (reg_left) | ((shift) << 8)  | \
-		((max) << 12) | ((invert) << 20) | ((reg_right) << 24) }
-#define SOC_DOUBLE_TLV(xname, reg, shift_left, shift_right, max, invert, tlv_array) \
+	.private_value = (unsigned long)&(struct soc_mixer_control) \
+		{.reg = reg_left, .rreg = reg_right, .shift = xshift, \
+		.max = xmax, .invert = xinvert} }
+#define SOC_DOUBLE_TLV(xname, xreg, shift_left, shift_right, xmax, xinvert, tlv_array) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname),\
 	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ |\
 		 SNDRV_CTL_ELEM_ACCESS_READWRITE,\
 	.tlv.p = (tlv_array), \
 	.info = snd_soc_info_volsw, .get = snd_soc_get_volsw, \
 	.put = snd_soc_put_volsw, \
-	.private_value = (reg) | ((shift_left) << 8) | \
-		((shift_right) << 12) | ((max) << 16) | ((invert) << 24) }
-#define SOC_DOUBLE_R_TLV(xname, reg_left, reg_right, shift, max, invert, tlv_array) \
+	.private_value = (unsigned long)&(struct soc_mixer_control) \
+		{.reg = xreg, .shift = shift_left, .rshift = shift_right,\
+		 .max = xmax, .invert = xinvert} }
+#define SOC_DOUBLE_R_TLV(xname, reg_left, reg_right, xshift, xmax, xinvert, tlv_array) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname),\
 	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ |\
 		 SNDRV_CTL_ELEM_ACCESS_READWRITE,\
 	.tlv.p = (tlv_array), \
 	.info = snd_soc_info_volsw_2r, \
 	.get = snd_soc_get_volsw_2r, .put = snd_soc_put_volsw_2r, \
-	.private_value = (reg_left) | ((shift) << 8)  | \
-		((max) << 12) | ((invert) << 20) | ((reg_right) << 24) }
-#define SOC_DOUBLE_S8_TLV(xname, reg, min, max, tlv_array) \
+	.private_value = (unsigned long)&(struct soc_mixer_control) \
+		{.reg = reg_left, .rreg = reg_right, .shift = xshift, \
+		.max = xmax, .invert = xinvert} }
+#define SOC_DOUBLE_S8_TLV(xname, xreg, xmin, xmax, tlv_array) \
 {	.iface  = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname), \
 	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ | \
 		  SNDRV_CTL_ELEM_ACCESS_READWRITE, \
 	.tlv.p  = (tlv_array), \
 	.info   = snd_soc_info_volsw_s8, .get = snd_soc_get_volsw_s8, \
 	.put    = snd_soc_put_volsw_s8, \
-	.private_value = (reg) | (((signed char)max) << 16) | \
-			 (((signed char)min) << 24) }
+	.private_value = (unsigned long)&(struct soc_mixer_control) \
+		{.reg = xreg, .min = xmin, .max = xmax} }
 #define SOC_ENUM_DOUBLE(xreg, xshift_l, xshift_r, xmask, xtexts) \
 {	.reg = xreg, .shift_l = xshift_l, .shift_r = xshift_r, \
 	.mask = xmask, .texts = xtexts }
@@ -518,6 +524,12 @@ struct snd_soc_pcm_runtime {
 	struct snd_soc_device *socdev;
 };
 
+/* mixer control */
+struct soc_mixer_control {
+	int min, max;
+	uint reg, rreg, shift, rshift, invert;
+};
+
 /* enumerated kcontrol */
 struct soc_enum {
 	unsigned short reg;

commit 58cd33c0f375578cfda25a52ed280caa888b6254
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Tue Jul 29 11:42:25 2008 +0100

    ALSA: ASoC: Allow codecs to override register display
    
    Some codecs have unusual features in their register maps such as very
    large registers representing arrays of coefficients. Support these
    codecs in the register cache sysfs file by allowing them to provide a
    function register_display() overriding the default output for register
    contents.
    
    Also ensure that we don't overflow PAGE_SIZE while writing out the
    register dump.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Jaroslav Kysela <perex@perex.cz>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 1890d87c5204..2ce530efcf11 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -410,6 +410,8 @@ struct snd_soc_codec {
 	void *control_data; /* codec control (i2c/3wire) data */
 	unsigned int (*read)(struct snd_soc_codec *, unsigned int);
 	int (*write)(struct snd_soc_codec *, unsigned int, unsigned int);
+	int (*display_register)(struct snd_soc_codec *, char *,
+				size_t, unsigned int);
 	hw_write_t hw_write;
 	hw_read_t hw_read;
 	void *reg_cache;

commit 8c6529dbf881303920a415c2d14a500218661949
Author: Liam Girdwood <lg@opensource.wolfsonmicro.com>
Date:   Tue Jul 8 13:19:13 2008 +0100

    ALSA: asoc: core - add Digital Audio Interface (DAI) control functions.
    
    This patch adds several functions for DAI control and config
    and replaces the current method of calling function pointers within
    the DAI struct.
    
    Signed-off-by: Liam Girdwood <lg@opensource.wolfsonmicro.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Jaroslav Kysela <perex@perex.cz>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 778e57e74dc8..1890d87c5204 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -256,6 +256,27 @@ int snd_soc_new_ac97_codec(struct snd_soc_codec *codec,
 	struct snd_ac97_bus_ops *ops, int num);
 void snd_soc_free_ac97_codec(struct snd_soc_codec *codec);
 
+/* Digital Audio Interface clocking API.*/
+int snd_soc_dai_set_sysclk(struct snd_soc_dai *dai, int clk_id,
+	unsigned int freq, int dir);
+
+int snd_soc_dai_set_clkdiv(struct snd_soc_dai *dai,
+	int div_id, int div);
+
+int snd_soc_dai_set_pll(struct snd_soc_dai *dai,
+	int pll_id, unsigned int freq_in, unsigned int freq_out);
+
+/* Digital Audio interface formatting */
+int snd_soc_dai_set_fmt(struct snd_soc_dai *dai, unsigned int fmt);
+
+int snd_soc_dai_set_tdm_slot(struct snd_soc_dai *dai,
+	unsigned int mask, int slots);
+
+int snd_soc_dai_set_tristate(struct snd_soc_dai *dai, int tristate);
+
+/* Digital Audio Interface mute */
+int snd_soc_dai_digital_mute(struct snd_soc_dai *dai, int mute);
+
 /*
  *Controls
  */

commit 3c4b266fe642bcaebe2b95edb56c3f8802924ff9
Author: Liam Girdwood <lg@opensource.wolfsonmicro.com>
Date:   Mon Jul 7 16:07:17 2008 +0100

    ALSA: asoc: core - merge structs snd_soc_codec_dai and snd_soc_cpu_dai.
    
    This patch series merges struct snd_soc_codec_dai and struct
    snd_soc_cpu_dai into struct snd_soc_dai in preparation for further
    ASoC v2 patches.
    
    This merger removes duplication in both DAI structures and simplifies
    the API for other users.
    
    Signed-off-by: Liam Girdwood <lg@opensource.wolfsonmicro.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Jaroslav Kysela <perex@perex.cz>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 340223a8f24c..778e57e74dc8 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -221,8 +221,7 @@ struct snd_soc_pcm_stream;
 struct snd_soc_ops;
 struct snd_soc_dai_mode;
 struct snd_soc_pcm_runtime;
-struct snd_soc_codec_dai;
-struct snd_soc_cpu_dai;
+struct snd_soc_dai;
 struct snd_soc_codec;
 struct snd_soc_machine_config;
 struct soc_enum;
@@ -317,50 +316,24 @@ struct snd_soc_ops {
 /* ASoC DAI ops */
 struct snd_soc_dai_ops {
 	/* DAI clocking configuration */
-	int (*set_sysclk)(struct snd_soc_codec_dai *codec_dai,
+	int (*set_sysclk)(struct snd_soc_dai *dai,
 		int clk_id, unsigned int freq, int dir);
-	int (*set_pll)(struct snd_soc_codec_dai *codec_dai,
+	int (*set_pll)(struct snd_soc_dai *dai,
 		int pll_id, unsigned int freq_in, unsigned int freq_out);
-	int (*set_clkdiv)(struct snd_soc_codec_dai *codec_dai,
-		int div_id, int div);
+	int (*set_clkdiv)(struct snd_soc_dai *dai, int div_id, int div);
 
 	/* DAI format configuration */
-	int (*set_fmt)(struct snd_soc_codec_dai *codec_dai,
-		unsigned int fmt);
-	int (*set_tdm_slot)(struct snd_soc_codec_dai *codec_dai,
+	int (*set_fmt)(struct snd_soc_dai *dai, unsigned int fmt);
+	int (*set_tdm_slot)(struct snd_soc_dai *dai,
 		unsigned int mask, int slots);
-	int (*set_tristate)(struct snd_soc_codec_dai *, int tristate);
+	int (*set_tristate)(struct snd_soc_dai *dai, int tristate);
 
 	/* digital mute */
-	int (*digital_mute)(struct snd_soc_codec_dai *, int mute);
+	int (*digital_mute)(struct snd_soc_dai *dai, int mute);
 };
 
-/* SoC Codec DAI */
-struct snd_soc_codec_dai {
-	char *name;
-	int id;
-	unsigned char type;
-
-	/* DAI capabilities */
-	struct snd_soc_pcm_stream playback;
-	struct snd_soc_pcm_stream capture;
-
-	/* DAI runtime info */
-	struct snd_soc_codec *codec;
-	unsigned int active;
-	unsigned char pop_wait:1;
-
-	/* ops */
-	struct snd_soc_ops ops;
-	struct snd_soc_dai_ops dai_ops;
-
-	/* DAI private data */
-	void *private_data;
-};
-
-/* SoC CPU DAI */
-struct snd_soc_cpu_dai {
-
+/* SoC  DAI (Digital Audio Interface) */
+struct snd_soc_dai {
 	/* DAI description */
 	char *name;
 	unsigned int id;
@@ -368,13 +341,13 @@ struct snd_soc_cpu_dai {
 
 	/* DAI callbacks */
 	int (*probe)(struct platform_device *pdev,
-		     struct snd_soc_cpu_dai *dai);
+		     struct snd_soc_dai *dai);
 	void (*remove)(struct platform_device *pdev,
-		       struct snd_soc_cpu_dai *dai);
+		       struct snd_soc_dai *dai);
 	int (*suspend)(struct platform_device *pdev,
-		struct snd_soc_cpu_dai *cpu_dai);
+		struct snd_soc_dai *dai);
 	int (*resume)(struct platform_device *pdev,
-		struct snd_soc_cpu_dai *cpu_dai);
+		struct snd_soc_dai *dai);
 
 	/* ops */
 	struct snd_soc_ops ops;
@@ -386,7 +359,9 @@ struct snd_soc_cpu_dai {
 
 	/* DAI runtime info */
 	struct snd_pcm_runtime *runtime;
-	unsigned char active:1;
+	struct snd_soc_codec *codec;
+	unsigned int active;
+	unsigned char pop_wait:1;
 	void *dma_data;
 
 	/* DAI private data */
@@ -428,7 +403,7 @@ struct snd_soc_codec {
 	struct delayed_work delayed_work;
 
 	/* codec DAI's */
-	struct snd_soc_codec_dai *dai;
+	struct snd_soc_dai *dai;
 	unsigned int num_dai;
 };
 
@@ -447,12 +422,12 @@ struct snd_soc_platform {
 	int (*probe)(struct platform_device *pdev);
 	int (*remove)(struct platform_device *pdev);
 	int (*suspend)(struct platform_device *pdev,
-		struct snd_soc_cpu_dai *cpu_dai);
+		struct snd_soc_dai *dai);
 	int (*resume)(struct platform_device *pdev,
-		struct snd_soc_cpu_dai *cpu_dai);
+		struct snd_soc_dai *dai);
 
 	/* pcm creation and destruction */
-	int (*pcm_new)(struct snd_card *, struct snd_soc_codec_dai *,
+	int (*pcm_new)(struct snd_card *, struct snd_soc_dai *,
 		struct snd_pcm *);
 	void (*pcm_free)(struct snd_pcm *);
 
@@ -466,8 +441,8 @@ struct snd_soc_dai_link  {
 	char *stream_name;		/* Stream name */
 
 	/* DAI */
-	struct snd_soc_codec_dai *codec_dai;
-	struct snd_soc_cpu_dai *cpu_dai;
+	struct snd_soc_dai *codec_dai;
+	struct snd_soc_dai *cpu_dai;
 
 	/* machine stream operations */
 	struct snd_soc_ops *ops;

commit 6ed2597883b1b03ca94f62f0cfe908314cba6d6b
Author: Andy Green <andy@openmoko.com>
Date:   Fri Jun 13 16:24:05 2008 +0100

    ALSA: ASoC: Don't block system resume
    
    On OpenMoko soc-audio resume is taking 700ms of the whole resume time of
    1.3s, dominated by writes to the codec over I2C.  This patch shunts the
    resume guts into a workqueue which then is done asynchronously.
    
    The "card" is locked using the ALSA power state APIs as suggested by
    Mark Brown.
    
    [Added fix for race with resume to suspend and fixed a couple of nits
    from checkpatch -- broonie.]
    
    Signed-off-by: Andy Green <andy@openmoko.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Jaroslav Kysela <perex@perex.cz>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 1f5c62181002..340223a8f24c 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -510,6 +510,7 @@ struct snd_soc_device {
 	struct snd_soc_codec *codec;
 	struct snd_soc_codec_device *codec_dev;
 	struct delayed_work delayed_work;
+	struct work_struct deferred_resume_work;
 	void *codec_data;
 };
 

commit 10144c09a0d6a62e1d56e25f142743c7a00e5dba
Author: Mike Montour <mail@mmontour.net>
Date:   Wed Jun 11 13:47:13 2008 +0100

    ALSA: ASoC: Add SOC_SINGLE_EXT_TLV control type
    
    Signed-off-by: Mike Montour <mail@mmontour.net>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Jaroslav Kysela <perex@perex.cz>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 56d2224c2c07..1f5c62181002 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -100,6 +100,15 @@
 	.info = snd_soc_info_volsw, \
 	.get = xhandler_get, .put = xhandler_put, \
 	.private_value = SOC_SINGLE_VALUE(xreg, xshift, xmask, xinvert) }
+#define SOC_SINGLE_EXT_TLV(xname, xreg, xshift, xmask, xinvert,\
+	 xhandler_get, xhandler_put, tlv_array) \
+{	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
+	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ |\
+		 SNDRV_CTL_ELEM_ACCESS_READWRITE,\
+	.tlv.p = (tlv_array), \
+	.info = snd_soc_info_volsw, \
+	.get = xhandler_get, .put = xhandler_put, \
+	.private_value = SOC_SINGLE_VALUE(xreg, xshift, xmask, xinvert) }
 #define SOC_SINGLE_BOOL_EXT(xname, xdata, xhandler_get, xhandler_put) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
 	.info = snd_soc_info_bool_ext, \

commit bdb92876f0a9d2b431199e385732ede89ff0b97d
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Wed Jun 11 13:47:10 2008 +0100

    ALSA: ASoC: Pass the DAI being configured into CPU DAI probe and remove
    
    This allows per-DAI initialisation to be done by the CPU DAI drivers.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Jaroslav Kysela <perex@perex.cz>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 9fa2093e74eb..56d2224c2c07 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -358,8 +358,10 @@ struct snd_soc_cpu_dai {
 	unsigned char type;
 
 	/* DAI callbacks */
-	int (*probe)(struct platform_device *pdev);
-	void (*remove)(struct platform_device *pdev);
+	int (*probe)(struct platform_device *pdev,
+		     struct snd_soc_cpu_dai *dai);
+	void (*remove)(struct platform_device *pdev,
+		       struct snd_soc_cpu_dai *dai);
 	int (*suspend)(struct platform_device *pdev,
 		struct snd_soc_cpu_dai *cpu_dai);
 	int (*resume)(struct platform_device *pdev,

commit e13ac2e9b18bde51cf32c69c2209df25791ab3e5
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Wed May 28 17:58:05 2008 +0100

    [ALSA] ASoC: Add SOC_DOUBLE_S8_TLV control type
    
    The SOC_DOUBLE_S8_TLV control type was originally implemented in the
    UDA1380 driver by Philipp Zabel and was moved into the core by me.
    
    Signed-off-by: Philipp Zabel <philipp.zabel@gmail.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index bca9538d9e50..9fa2093e74eb 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -73,6 +73,15 @@
 	.get = snd_soc_get_volsw_2r, .put = snd_soc_put_volsw_2r, \
 	.private_value = (reg_left) | ((shift) << 8)  | \
 		((max) << 12) | ((invert) << 20) | ((reg_right) << 24) }
+#define SOC_DOUBLE_S8_TLV(xname, reg, min, max, tlv_array) \
+{	.iface  = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname), \
+	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ | \
+		  SNDRV_CTL_ELEM_ACCESS_READWRITE, \
+	.tlv.p  = (tlv_array), \
+	.info   = snd_soc_info_volsw_s8, .get = snd_soc_get_volsw_s8, \
+	.put    = snd_soc_put_volsw_s8, \
+	.private_value = (reg) | (((signed char)max) << 16) | \
+			 (((signed char)min) << 24) }
 #define SOC_ENUM_DOUBLE(xreg, xshift_l, xshift_r, xmask, xtexts) \
 {	.reg = xreg, .shift_l = xshift_l, .shift_r = xshift_r, \
 	.mask = xmask, .texts = xtexts }
@@ -267,6 +276,12 @@ int snd_soc_get_volsw_2r(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
 int snd_soc_put_volsw_2r(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
+int snd_soc_info_volsw_s8(struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_info *uinfo);
+int snd_soc_get_volsw_s8(struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_value *ucontrol);
+int snd_soc_put_volsw_s8(struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_value *ucontrol);
 
 /* SoC PCM stream information */
 struct snd_soc_pcm_stream {

commit 0be9898adb6f58fee44f0fec0bbc0eac997ea9eb
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon May 19 12:31:28 2008 +0200

    [ALSA] ASoC: Clarify API for bias configuration
    
    Currently the ASoC core configures the bias levels in the system using
    a callback on codecs and machines called 'dapm_event', passing it PCI
    style power levels as SNDRV_CTL_POWER_ constants. This is more obscure
    than it needs to be and has caused confusion to driver authors,
    especially given that DAPM is also performing power management.
    
    Address this by renaming the callback function to 'set_bias_level' and
    using constants explicitly representing the off, standby, pre-on and on
    states which DAPM transitions through.
    
    Also unexport the API for setting bias level: there are currently no
    in-tree users of this API other than the core itself and it is likely
    that the core would need to be extended to cater for any users.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Cc: Jarkko Nikula <jarkko.nikula@nokia.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Jaroslav Kysela <perex@perex.cz>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 73accbcfbd2d..bca9538d9e50 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -102,6 +102,24 @@
 	.get = xhandler_get, .put = xhandler_put, \
 	.private_value = (unsigned long)&xenum }
 
+/*
+ * Bias levels
+ *
+ * @ON:      Bias is fully on for audio playback and capture operations.
+ * @PREPARE: Prepare for audio operations. Called before DAPM switching for
+ *           stream start and stop operations.
+ * @STANDBY: Low power standby state when no playback/capture operations are
+ *           in progress. NOTE: The transition time between STANDBY and ON
+ *           should be as fast as possible and no longer than 10ms.
+ * @OFF:     Power Off. No restrictions on transition times.
+ */
+enum snd_soc_bias_level {
+	SND_SOC_BIAS_ON,
+	SND_SOC_BIAS_PREPARE,
+	SND_SOC_BIAS_STANDBY,
+	SND_SOC_BIAS_OFF,
+};
+
 /*
  * Digital Audio Interface (DAI) types
  */
@@ -356,7 +374,8 @@ struct snd_soc_codec {
 	struct mutex mutex;
 
 	/* callbacks */
-	int (*dapm_event)(struct snd_soc_codec *codec, int event);
+	int (*set_bias_level)(struct snd_soc_codec *,
+			      enum snd_soc_bias_level level);
 
 	/* runtime */
 	struct snd_card *card;
@@ -378,8 +397,8 @@ struct snd_soc_codec {
 	/* dapm */
 	struct list_head dapm_widgets;
 	struct list_head dapm_paths;
-	unsigned int dapm_state;
-	unsigned int suspend_dapm_state;
+	enum snd_soc_bias_level bias_level;
+	enum snd_soc_bias_level suspend_bias_level;
 	struct delayed_work delayed_work;
 
 	/* codec DAI's */
@@ -449,7 +468,8 @@ struct snd_soc_machine {
 	int (*resume_post)(struct platform_device *pdev);
 
 	/* callbacks */
-	int (*dapm_event)(struct snd_soc_machine *, int event);
+	int (*set_bias_level)(struct snd_soc_machine *,
+			      enum snd_soc_bias_level level);
 
 	/* CPU <--> Codec DAI links  */
 	struct snd_soc_dai_link *dai_link;

commit 1ef6ab75c7deef931d6308af282ed7d8e480e77f
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Mon May 19 12:31:55 2008 +0200

    [ALSA] ASoC: Make CPU and codec DAI operations have same type
    
    The CPU and codec DAI operations differ only in the presence of the
    digital mute operation for the codec so they may as well be the same
    type.
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Jaroslav Kysela <perex@perex.cz>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index d3c8c033dff8..73accbcfbd2d 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -272,9 +272,9 @@ struct snd_soc_ops {
 	int (*trigger)(struct snd_pcm_substream *, int);
 };
 
-/* ASoC codec DAI ops */
-struct snd_soc_codec_ops {
-	/* codec DAI clocking configuration */
+/* ASoC DAI ops */
+struct snd_soc_dai_ops {
+	/* DAI clocking configuration */
 	int (*set_sysclk)(struct snd_soc_codec_dai *codec_dai,
 		int clk_id, unsigned int freq, int dir);
 	int (*set_pll)(struct snd_soc_codec_dai *codec_dai,
@@ -282,7 +282,7 @@ struct snd_soc_codec_ops {
 	int (*set_clkdiv)(struct snd_soc_codec_dai *codec_dai,
 		int div_id, int div);
 
-	/* CPU DAI format configuration */
+	/* DAI format configuration */
 	int (*set_fmt)(struct snd_soc_codec_dai *codec_dai,
 		unsigned int fmt);
 	int (*set_tdm_slot)(struct snd_soc_codec_dai *codec_dai,
@@ -293,24 +293,6 @@ struct snd_soc_codec_ops {
 	int (*digital_mute)(struct snd_soc_codec_dai *, int mute);
 };
 
-/* ASoC cpu DAI ops */
-struct snd_soc_cpu_ops {
-	/* CPU DAI clocking configuration */
-	int (*set_sysclk)(struct snd_soc_cpu_dai *cpu_dai,
-		int clk_id, unsigned int freq, int dir);
-	int (*set_clkdiv)(struct snd_soc_cpu_dai *cpu_dai,
-		int div_id, int div);
-	int (*set_pll)(struct snd_soc_cpu_dai *cpu_dai,
-		int pll_id, unsigned int freq_in, unsigned int freq_out);
-
-	/* CPU DAI format configuration */
-	int (*set_fmt)(struct snd_soc_cpu_dai *cpu_dai,
-		unsigned int fmt);
-	int (*set_tdm_slot)(struct snd_soc_cpu_dai *cpu_dai,
-		unsigned int mask, int slots);
-	int (*set_tristate)(struct snd_soc_cpu_dai *, int tristate);
-};
-
 /* SoC Codec DAI */
 struct snd_soc_codec_dai {
 	char *name;
@@ -328,7 +310,7 @@ struct snd_soc_codec_dai {
 
 	/* ops */
 	struct snd_soc_ops ops;
-	struct snd_soc_codec_ops dai_ops;
+	struct snd_soc_dai_ops dai_ops;
 
 	/* DAI private data */
 	void *private_data;
@@ -352,7 +334,7 @@ struct snd_soc_cpu_dai {
 
 	/* ops */
 	struct snd_soc_ops ops;
-	struct snd_soc_cpu_ops dai_ops;
+	struct snd_soc_dai_ops dai_ops;
 
 	/* DAI capabilities */
 	struct snd_soc_pcm_stream capture;

commit 392abe9cb36f04ccdda9c96938077b0d43f2b50b
Author: Philipp Zabel <philipp.zabel@gmail.com>
Date:   Tue May 13 14:03:40 2008 +0200

    [ALSA] ASoC: build fix for snd_soc_info_bool_ext
    
    I suspect that snd_ctl_boolean_mono should have been
    snd_ctl_boolean_mono_info instead. This fixes the build for magician.
    
    Signed-off-by: Philipp Zabel <philipp.zabel@gmail.com>
    Acked-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index e6ea6f750941..d3c8c033dff8 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -238,7 +238,7 @@ int snd_soc_info_volsw(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_info *uinfo);
 int snd_soc_info_volsw_ext(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_info *uinfo);
-#define snd_soc_info_bool_ext		snd_ctl_boolean_mono
+#define snd_soc_info_bool_ext		snd_ctl_boolean_mono_info
 int snd_soc_get_volsw(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
 int snd_soc_put_volsw(struct snd_kcontrol *kcontrol,

commit 0a22b87de0467bbc2ce863d54b55c3a7b649ba74
Author: Mark Brown <broonie@opensource.wolfsonmicro.com>
Date:   Thu Jan 10 14:53:48 2008 +0100

    [ALSA] Bump ASoC core version number
    
    
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Jaroslav Kysela <perex@perex.cz>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 6b51ff2269b4..e6ea6f750941 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -21,7 +21,7 @@
 #include <sound/control.h>
 #include <sound/ac97_codec.h>
 
-#define SND_SOC_VERSION "0.13.1"
+#define SND_SOC_VERSION "0.13.2"
 
 /*
  * Convenience kcontrol builders

commit 4ccab3e72e211c40d868045c7d3216948999bcf7
Author: Liam Girdwood <lg@opensource.wolfsonmicro.com>
Date:   Thu Jan 10 14:39:01 2008 +0100

    [ALSA] soc - Ensure PCMs are suspended
    
    This fixes a bug whereby PCMs were not being suspended when the rest of the
    audio subsystem was suspended.
    
    Signed-off-by: Liam Girdwood <lg@opensource.wolfsonmicro.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Jaroslav Kysela <perex@perex.cz>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 0afcdfe42a46..6b51ff2269b4 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -447,6 +447,9 @@ struct snd_soc_dai_link  {
 
 	/* codec/machine specific init - e.g. add machine controls */
 	int (*init)(struct snd_soc_codec *codec);
+
+	/* DAI pcm */
+	struct snd_pcm *pcm;
 };
 
 /* SoC machine */

commit a7a4ac86b4754f44eb06221f3087debb4775d588
Author: Philipp Zabel <philipp.zabel@gmail.com>
Date:   Thu Jan 10 14:37:42 2008 +0100

    [ALSA] ASoC TLV support
    
    Add TLV support to ASoC.
    
    Signed-off-by: Philipp Zabel <philipp.zabel@gmail.com>
    Signed-off-by: Liam Girdwood <lg@opensource.wolfsonmicro.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Jaroslav Kysela <perex@perex.cz>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index add5f948e383..0afcdfe42a46 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -26,27 +26,53 @@
 /*
  * Convenience kcontrol builders
  */
-#define SOC_SINGLE_VALUE(reg,shift,mask,invert) ((reg) | ((shift) << 8) |\
-	((shift) << 12) | ((mask) << 16) | ((invert) << 24))
-#define SOC_SINGLE_VALUE_EXT(reg,mask,invert) ((reg) | ((mask) << 16) |\
+#define SOC_SINGLE_VALUE(reg, shift, max, invert) ((reg) | ((shift) << 8) |\
+	((shift) << 12) | ((max) << 16) | ((invert) << 24))
+#define SOC_SINGLE_VALUE_EXT(reg, max, invert) ((reg) | ((max) << 16) |\
 	((invert) << 31))
-#define SOC_SINGLE(xname, reg, shift, mask, invert) \
+#define SOC_SINGLE(xname, reg, shift, max, invert) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
 	.info = snd_soc_info_volsw, .get = snd_soc_get_volsw,\
 	.put = snd_soc_put_volsw, \
-	.private_value =  SOC_SINGLE_VALUE(reg, shift, mask, invert) }
-#define SOC_DOUBLE(xname, reg, shift_left, shift_right, mask, invert) \
+	.private_value =  SOC_SINGLE_VALUE(reg, shift, max, invert) }
+#define SOC_SINGLE_TLV(xname, reg, shift, max, invert, tlv_array) \
+{	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
+	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ |\
+		 SNDRV_CTL_ELEM_ACCESS_READWRITE,\
+	.tlv.p = (tlv_array), \
+	.info = snd_soc_info_volsw, .get = snd_soc_get_volsw,\
+	.put = snd_soc_put_volsw, \
+	.private_value =  SOC_SINGLE_VALUE(reg, shift, max, invert) }
+#define SOC_DOUBLE(xname, reg, shift_left, shift_right, max, invert) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname),\
 	.info = snd_soc_info_volsw, .get = snd_soc_get_volsw, \
 	.put = snd_soc_put_volsw, \
 	.private_value = (reg) | ((shift_left) << 8) | \
-		((shift_right) << 12) | ((mask) << 16) | ((invert) << 24) }
-#define SOC_DOUBLE_R(xname, reg_left, reg_right, shift, mask, invert) \
+		((shift_right) << 12) | ((max) << 16) | ((invert) << 24) }
+#define SOC_DOUBLE_R(xname, reg_left, reg_right, shift, max, invert) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname), \
 	.info = snd_soc_info_volsw_2r, \
 	.get = snd_soc_get_volsw_2r, .put = snd_soc_put_volsw_2r, \
 	.private_value = (reg_left) | ((shift) << 8)  | \
-		((mask) << 12) | ((invert) << 20) | ((reg_right) << 24) }
+		((max) << 12) | ((invert) << 20) | ((reg_right) << 24) }
+#define SOC_DOUBLE_TLV(xname, reg, shift_left, shift_right, max, invert, tlv_array) \
+{	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname),\
+	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ |\
+		 SNDRV_CTL_ELEM_ACCESS_READWRITE,\
+	.tlv.p = (tlv_array), \
+	.info = snd_soc_info_volsw, .get = snd_soc_get_volsw, \
+	.put = snd_soc_put_volsw, \
+	.private_value = (reg) | ((shift_left) << 8) | \
+		((shift_right) << 12) | ((max) << 16) | ((invert) << 24) }
+#define SOC_DOUBLE_R_TLV(xname, reg_left, reg_right, shift, max, invert, tlv_array) \
+{	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname),\
+	.access = SNDRV_CTL_ELEM_ACCESS_TLV_READ |\
+		 SNDRV_CTL_ELEM_ACCESS_READWRITE,\
+	.tlv.p = (tlv_array), \
+	.info = snd_soc_info_volsw_2r, \
+	.get = snd_soc_get_volsw_2r, .put = snd_soc_put_volsw_2r, \
+	.private_value = (reg_left) | ((shift) << 8)  | \
+		((max) << 12) | ((invert) << 20) | ((reg_right) << 24) }
 #define SOC_ENUM_DOUBLE(xreg, xshift_l, xshift_r, xmask, xtexts) \
 {	.reg = xreg, .shift_l = xshift_l, .shift_r = xshift_r, \
 	.mask = xmask, .texts = xtexts }
@@ -103,10 +129,22 @@
 #define SND_SOC_DAIFMT_CONT			(0 << 4)	/* continuous clock */
 #define SND_SOC_DAIFMT_GATED		(1 << 4)	/* clock is gated when not Tx/Rx */
 
+/*
+ * DAI Sync
+ * Synchronous LR (Left Right) clocks and Frame signals.
+ */
+#define SND_SOC_DAIFMT_SYNC		(0 << 5)	/* Tx FRM = Rx FRM */
+#define SND_SOC_DAIFMT_ASYNC		(1 << 5)	/* Tx FRM ~ Rx FRM */
+
+/*
+ * TDM
+ */
+#define SND_SOC_DAIFMT_TDM		(1 << 6)
+
 /*
  * DAI hardware signal inversions
  */
-#define SND_SOC_DAIFMT_NB_NF		(0 << 8)	/* normal bit clock + frame */
+#define SND_SOC_DAIFMT_NB_NF		(0 << 8)	/* normal bclk + frm */
 #define SND_SOC_DAIFMT_NB_IF		(1 << 8)	/* normal bclk + inv frm */
 #define SND_SOC_DAIFMT_IB_NF		(2 << 8)	/* invert bclk + nor frm */
 #define SND_SOC_DAIFMT_IB_IF		(3 << 8)	/* invert bclk + frm */

commit 0b4d221b8d56deefca4984d01b3a010107ae1f72
Author: Liam Girdwood <lg@opensource.wolfsonmicro.com>
Date:   Thu Jan 10 14:36:20 2008 +0100

    [ALSA] soc - Add device level DAPM event
    
    Added a device level dapm event so that both the machine and codec are informed
    when dapm events occur.
    
    Signed-off-by: Liam Girdwood <lg@opensource.wolfsonmicro.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Jaroslav Kysela <perex@perex.cz>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index c22c65650405..add5f948e383 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -425,6 +425,9 @@ struct snd_soc_machine {
 	int (*resume_pre)(struct platform_device *pdev);
 	int (*resume_post)(struct platform_device *pdev);
 
+	/* callbacks */
+	int (*dapm_event)(struct snd_soc_machine *, int event);
+
 	/* CPU <--> Codec DAI links  */
 	struct snd_soc_dai_link *dai_link;
 	int num_links;

commit 9004acc70e8c49c50c4c7b652f906f1e0ed5709d
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Jan 8 18:13:27 2008 +0100

    [ALSA] Remove sound/driver.h
    
    This header file exists only for some hacks to adapt alsa-driver
    tree.  It's useless for building in the kernel.  Let's move a few
    lines in it to sound/core.h and remove it.
    With this patch, sound/driver.h isn't removed but has just a single
    compile warning to include it.  This should be really killed in
    future.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Jaroslav Kysela <perex@perex.cz>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index f47ef1f75f18..c22c65650405 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -16,7 +16,6 @@
 #include <linux/platform_device.h>
 #include <linux/types.h>
 #include <linux/workqueue.h>
-#include <sound/driver.h>
 #include <sound/core.h>
 #include <sound/pcm.h>
 #include <sound/control.h>

commit a5ce88909d3007caa7b65996a8f6784350beb2a6
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Jul 23 15:42:26 2007 +0200

    [ALSA] Clean up with common snd_ctl_boolean_*_info callbacks
    
    Clean up codes using the new common snd_ctl_boolean_*_info() callbacks.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Jaroslav Kysela <perex@suse.cz>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index db6edba8ef08..f47ef1f75f18 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -201,8 +201,7 @@ int snd_soc_info_volsw(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_info *uinfo);
 int snd_soc_info_volsw_ext(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_info *uinfo);
-int snd_soc_info_bool_ext(struct snd_kcontrol *kcontrol,
-	struct snd_ctl_elem_info *uinfo);
+#define snd_soc_info_bool_ext		snd_ctl_boolean_mono
 int snd_soc_get_volsw(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol);
 int snd_soc_put_volsw(struct snd_kcontrol *kcontrol,

commit a68660e0c63d8f7ab8725f9e771119c08e9f953b
Author: Liam Girdwood <lg@opensource.wolfsonmicro.com>
Date:   Thu May 10 19:27:27 2007 +0200

    [ALSA] ASoC AC97 device reg bugfix
    
    This patch fixes a bug whereby AC97 bus device data was being clobbered
    when AC97 codecs using the generic ac97_codec.c driver were being
    registered. Codecs that didn't use the generic driver were unaffected
    (e.g. WM9712, WM9713).
    Changes:-
     o Add new AC97 codec class for custom (or need bus dev registration)
    AC97 codecs.
     o Only register/deregister this custom codec device with the AC97 bus.
    The generic AC97 driver already does this for generic codec devices.
    This may be related to bug #3038 :-
    https://bugtrack.alsa-project.org/alsa-bug/view.php?id=3038
    
    Signed-off-by: Liam Girdwood <lg@opensource.wolfsonmicro.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Jaroslav Kysela <perex@suse.cz>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index b1dc364b8f74..db6edba8ef08 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -22,7 +22,7 @@
 #include <sound/control.h>
 #include <sound/ac97_codec.h>
 
-#define SND_SOC_VERSION "0.13.0"
+#define SND_SOC_VERSION "0.13.1"
 
 /*
  * Convenience kcontrol builders
@@ -83,6 +83,7 @@
 #define SND_SOC_DAI_AC97	0x1
 #define SND_SOC_DAI_I2S		0x2
 #define SND_SOC_DAI_PCM		0x4
+#define SND_SOC_DAI_AC97_BUS	0x8	/* for custom i.e. non ac97_codec.c */
 
 /*
  * DAI hardware audio formats
@@ -278,6 +279,7 @@ struct snd_soc_cpu_ops {
 struct snd_soc_codec_dai {
 	char *name;
 	int id;
+	unsigned char type;
 
 	/* DAI capabilities */
 	struct snd_soc_pcm_stream playback;

commit 1c433fbda4896a6455d97b66a4f2646cbdd52a8c
Author: Graeme Gregory <gg@opensource.wolfsonmicro.com>
Date:   Fri Feb 2 17:13:05 2007 +0100

    [ALSA] soc - 0.13 ASoC headers
    
    This patch updates the API's to include the new DAI configuration and
    clocking architecture.
    Changes:-
     o Removed DAI automatic matching and capabilities structure (struct
    snd_soc_dai_mode) and macros.
     o Added DAI operations for codec and CPU interfaces.
     o Removed config_sysclk() function and struct snd_soc_clock_info. No
    longer needed as clocking is now configured manually in the machine
    drivers. Also removed other clocking data from structures.
     o Updated version to 0.13
     o Added shift to SOC_SINGLE_EXT kcontrol macro.
    
    Signed-off-by: Graeme Gregory <gg@opensource.wolfsonmicro.com>
    Signed-off-by: Liam Girdwood <lg@opensource.wolfsonmicro.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Jaroslav Kysela <perex@suse.cz>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index ea836d819ce0..b1dc364b8f74 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -22,7 +22,7 @@
 #include <sound/control.h>
 #include <sound/ac97_codec.h>
 
-#define SND_SOC_VERSION "0.12"
+#define SND_SOC_VERSION "0.13.0"
 
 /*
  * Convenience kcontrol builders
@@ -60,12 +60,12 @@
 	.info = snd_soc_info_enum_double, \
 	.get = snd_soc_get_enum_double, .put = snd_soc_put_enum_double, \
 	.private_value = (unsigned long)&xenum }
-#define SOC_SINGLE_EXT(xname, xreg, xmask, xinvert,\
+#define SOC_SINGLE_EXT(xname, xreg, xshift, xmask, xinvert,\
 	 xhandler_get, xhandler_put) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
-	.info = snd_soc_info_volsw_ext, \
+	.info = snd_soc_info_volsw, \
 	.get = xhandler_get, .put = xhandler_put, \
-	.private_value =  SOC_SINGLE_VALUE_EXT(xreg, xmask, xinvert) }
+	.private_value = SOC_SINGLE_VALUE(xreg, xshift, xmask, xinvert) }
 #define SOC_SINGLE_BOOL_EXT(xname, xdata, xhandler_get, xhandler_put) \
 {	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
 	.info = snd_soc_info_bool_ext, \
@@ -87,20 +87,29 @@
 /*
  * DAI hardware audio formats
  */
-#define SND_SOC_DAIFMT_I2S		(1 << 0)	/* I2S mode */
-#define SND_SOC_DAIFMT_RIGHT_J	(1 << 1)	/* Right justified mode */
-#define SND_SOC_DAIFMT_LEFT_J	(1 << 2)	/* Left Justified mode */
-#define SND_SOC_DAIFMT_DSP_A	(1 << 3)	/* L data msb after FRM or LRC */
-#define SND_SOC_DAIFMT_DSP_B	(1 << 4)	/* L data msb during FRM or LRC */
-#define SND_SOC_DAIFMT_AC97		(1 << 5)	/* AC97 */
+#define SND_SOC_DAIFMT_I2S		0	/* I2S mode */
+#define SND_SOC_DAIFMT_RIGHT_J	1	/* Right justified mode */
+#define SND_SOC_DAIFMT_LEFT_J	2	/* Left Justified mode */
+#define SND_SOC_DAIFMT_DSP_A	3	/* L data msb after FRM or LRC */
+#define SND_SOC_DAIFMT_DSP_B	4	/* L data msb during FRM or LRC */
+#define SND_SOC_DAIFMT_AC97		5	/* AC97 */
+
+#define SND_SOC_DAIFMT_MSB 	SND_SOC_DAIFMT_LEFT_J
+#define SND_SOC_DAIFMT_LSB	SND_SOC_DAIFMT_RIGHT_J
+
+/*
+ * DAI Gating
+ */
+#define SND_SOC_DAIFMT_CONT			(0 << 4)	/* continuous clock */
+#define SND_SOC_DAIFMT_GATED		(1 << 4)	/* clock is gated when not Tx/Rx */
 
 /*
  * DAI hardware signal inversions
  */
-#define SND_SOC_DAIFMT_NB_NF		(1 << 8)	/* normal bit clock + frame */
-#define SND_SOC_DAIFMT_NB_IF		(1 << 9)	/* normal bclk + inv frm */
-#define SND_SOC_DAIFMT_IB_NF		(1 << 10)	/* invert bclk + nor frm */
-#define SND_SOC_DAIFMT_IB_IF		(1 << 11)	/* invert bclk + frm */
+#define SND_SOC_DAIFMT_NB_NF		(0 << 8)	/* normal bit clock + frame */
+#define SND_SOC_DAIFMT_NB_IF		(1 << 8)	/* normal bclk + inv frm */
+#define SND_SOC_DAIFMT_IB_NF		(2 << 8)	/* invert bclk + nor frm */
+#define SND_SOC_DAIFMT_IB_IF		(3 << 8)	/* invert bclk + frm */
 
 /*
  * DAI hardware clock masters
@@ -108,58 +117,22 @@
  * i.e. if the codec is clk and frm master then the interface is
  * clk and frame slave.
  */
-#define SND_SOC_DAIFMT_CBM_CFM	(1 << 12) /* codec clk & frm master */
-#define SND_SOC_DAIFMT_CBS_CFM	(1 << 13) /* codec clk slave & frm master */
-#define SND_SOC_DAIFMT_CBM_CFS	(1 << 14) /* codec clk master & frame slave */
-#define SND_SOC_DAIFMT_CBS_CFS	(1 << 15) /* codec clk & frm slave */
+#define SND_SOC_DAIFMT_CBM_CFM	(0 << 12) /* codec clk & frm master */
+#define SND_SOC_DAIFMT_CBS_CFM	(1 << 12) /* codec clk slave & frm master */
+#define SND_SOC_DAIFMT_CBM_CFS	(2 << 12) /* codec clk master & frame slave */
+#define SND_SOC_DAIFMT_CBS_CFS	(3 << 12) /* codec clk & frm slave */
 
-#define SND_SOC_DAIFMT_FORMAT_MASK		0x00ff
+#define SND_SOC_DAIFMT_FORMAT_MASK		0x000f
+#define SND_SOC_DAIFMT_CLOCK_MASK		0x00f0
 #define SND_SOC_DAIFMT_INV_MASK			0x0f00
-#define SND_SOC_DAIFMT_CLOCK_MASK		0xf000
-
-/*
- * DAI hardware audio direction
- */
-#define SND_SOC_DAIDIR_PLAYBACK		0x1
-#define SND_SOC_DAIDIR_CAPTURE		0x2
-
-/*
- * DAI hardware Time Division Multiplexing (TDM) Slots
- * Left and Right data word positions
- * This is measured in words (sample size) and not bits.
- */
-#define SND_SOC_DAITDM_LRDW(l,r)	((l << 8) | r)
-
-/*
- * DAI hardware clock ratios
- * bit clock can either be a generated by dividing mclk or
- * by multiplying sample rate, hence there are 2 definitions below
- * depending on codec type.
- */
-/* ratio of sample rate to mclk/sysclk */
-#define SND_SOC_FS_ALL			0xffff	/* all mclk supported */
-
-/* bit clock dividers */
-#define SND_SOC_FSBD(x)			(1 << (x - 1))	/* ratio mclk:bclk */
-#define SND_SOC_FSBD_REAL(x)	(ffs(x))
+#define SND_SOC_DAIFMT_MASTER_MASK		0xf000
 
-/* bit clock ratio to (sample rate * channels * word size) */
-#define SND_SOC_FSBW(x)			(1 << (x - 1))
-#define SND_SOC_FSBW_REAL(x)		(ffs(x))
-/* all bclk ratios supported */
-#define SND_SOC_FSB_ALL			~0ULL
 
 /*
- * DAI hardware flags
+ * Master Clock Directions
  */
-/* use bfs mclk divider mode (BCLK = MCLK / x) */
-#define SND_SOC_DAI_BFS_DIV		0x1
-/* use bfs rate mulitplier  (BCLK = RATE * x)*/
-#define SND_SOC_DAI_BFS_RATE	0x2
-/* use bfs rcw multiplier (BCLK = RATE * CHN * WORD SIZE) */
-#define SND_SOC_DAI_BFS_RCW		0x4
-/* capture and playback can use different clocks */
-#define SND_SOC_DAI_ASYNC		0x8
+#define SND_SOC_CLOCK_IN	0
+#define SND_SOC_CLOCK_OUT	1
 
 /*
  * AC97 codec ID's bitmask
@@ -195,7 +168,6 @@ int snd_soc_register_card(struct snd_soc_device *socdev);
 /* set runtime hw params */
 int snd_soc_set_runtime_hwparams(struct snd_pcm_substream *substream,
 	const struct snd_pcm_hardware *hw);
-int snd_soc_get_rate(int rate);
 
 /* codec IO */
 #define snd_soc_read(codec, reg) codec->read(codec, reg)
@@ -244,6 +216,8 @@ int snd_soc_put_volsw_2r(struct snd_kcontrol *kcontrol,
 /* SoC PCM stream information */
 struct snd_soc_pcm_stream {
 	char *stream_name;
+	u64 formats;			/* SNDRV_PCM_FMTBIT_* */
+	unsigned int rates;		/* SNDRV_PCM_RATE_* */
 	unsigned int rate_min;		/* min rate */
 	unsigned int rate_max;		/* max rate */
 	unsigned int channels_min;	/* min channels */
@@ -261,23 +235,43 @@ struct snd_soc_ops {
 	int (*trigger)(struct snd_pcm_substream *, int);
 };
 
-/* SoC DAI hardware mode */
-struct snd_soc_dai_mode {
-	u16 fmt;		/* SND_SOC_DAIFMT_* */
-	u16 tdm;		/* SND_SOC_HWTDM_* */
-	u64 pcmfmt; 	/* SNDRV_PCM_FMTBIT_* */
-	u16 pcmrate;	/* SND_SOC_HWRATE_* */
-	u16 pcmdir:2;	/* SND_SOC_HWDIR_* */
-	u16 flags:8;	/* hw flags */
-	u16 fs;			/* mclk to rate divider */
-	u64 bfs;		/* mclk to bclk dividers */
-	unsigned long priv;		/* private mode data */
+/* ASoC codec DAI ops */
+struct snd_soc_codec_ops {
+	/* codec DAI clocking configuration */
+	int (*set_sysclk)(struct snd_soc_codec_dai *codec_dai,
+		int clk_id, unsigned int freq, int dir);
+	int (*set_pll)(struct snd_soc_codec_dai *codec_dai,
+		int pll_id, unsigned int freq_in, unsigned int freq_out);
+	int (*set_clkdiv)(struct snd_soc_codec_dai *codec_dai,
+		int div_id, int div);
+
+	/* CPU DAI format configuration */
+	int (*set_fmt)(struct snd_soc_codec_dai *codec_dai,
+		unsigned int fmt);
+	int (*set_tdm_slot)(struct snd_soc_codec_dai *codec_dai,
+		unsigned int mask, int slots);
+	int (*set_tristate)(struct snd_soc_codec_dai *, int tristate);
+
+	/* digital mute */
+	int (*digital_mute)(struct snd_soc_codec_dai *, int mute);
 };
 
-/* DAI capabilities */
-struct snd_soc_dai_cap {
-	int num_modes;				/* number of DAI modes */
-	struct snd_soc_dai_mode *mode;	/* array of supported DAI modes */
+/* ASoC cpu DAI ops */
+struct snd_soc_cpu_ops {
+	/* CPU DAI clocking configuration */
+	int (*set_sysclk)(struct snd_soc_cpu_dai *cpu_dai,
+		int clk_id, unsigned int freq, int dir);
+	int (*set_clkdiv)(struct snd_soc_cpu_dai *cpu_dai,
+		int div_id, int div);
+	int (*set_pll)(struct snd_soc_cpu_dai *cpu_dai,
+		int pll_id, unsigned int freq_in, unsigned int freq_out);
+
+	/* CPU DAI format configuration */
+	int (*set_fmt)(struct snd_soc_cpu_dai *cpu_dai,
+		unsigned int fmt);
+	int (*set_tdm_slot)(struct snd_soc_cpu_dai *cpu_dai,
+		unsigned int mask, int slots);
+	int (*set_tristate)(struct snd_soc_cpu_dai *, int tristate);
 };
 
 /* SoC Codec DAI */
@@ -288,22 +282,16 @@ struct snd_soc_codec_dai {
 	/* DAI capabilities */
 	struct snd_soc_pcm_stream playback;
 	struct snd_soc_pcm_stream capture;
-	struct snd_soc_dai_cap caps;
 
 	/* DAI runtime info */
-	struct snd_soc_dai_mode dai_runtime;
-	struct snd_soc_ops ops;
-	unsigned int (*config_sysclk)(struct snd_soc_codec_dai*,
-		struct snd_soc_clock_info *info, unsigned int clk);
-	int (*digital_mute)(struct snd_soc_codec *,
-		struct snd_soc_codec_dai*, int);
-	unsigned int mclk;		/* the audio master clock */
-	unsigned int pll_in;	/* the PLL input clock */
-	unsigned int pll_out;	/* the PLL output clock */
-	unsigned int clk_div;	/* internal clock divider << 1 (for fractions) */
+	struct snd_soc_codec *codec;
 	unsigned int active;
 	unsigned char pop_wait:1;
 
+	/* ops */
+	struct snd_soc_ops ops;
+	struct snd_soc_codec_ops dai_ops;
+
 	/* DAI private data */
 	void *private_data;
 };
@@ -323,20 +311,18 @@ struct snd_soc_cpu_dai {
 		struct snd_soc_cpu_dai *cpu_dai);
 	int (*resume)(struct platform_device *pdev,
 		struct snd_soc_cpu_dai *cpu_dai);
-	unsigned int (*config_sysclk)(struct snd_soc_cpu_dai *cpu_dai,
-		struct snd_soc_clock_info *info, unsigned int clk);
+
+	/* ops */
+	struct snd_soc_ops ops;
+	struct snd_soc_cpu_ops dai_ops;
 
 	/* DAI capabilities */
 	struct snd_soc_pcm_stream capture;
 	struct snd_soc_pcm_stream playback;
-	struct snd_soc_dai_cap caps;
 
 	/* DAI runtime info */
-	struct snd_soc_dai_mode dai_runtime;
-	struct snd_soc_ops ops;
 	struct snd_pcm_runtime *runtime;
 	unsigned char active:1;
-	unsigned int mclk;
 	void *dma_data;
 
 	/* DAI private data */
@@ -417,14 +403,12 @@ struct snd_soc_dai_link  {
 	/* DAI */
 	struct snd_soc_codec_dai *codec_dai;
 	struct snd_soc_cpu_dai *cpu_dai;
-	u32 flags;			/* DAI config preference flags */
+
+	/* machine stream operations */
+	struct snd_soc_ops *ops;
 
 	/* codec/machine specific init - e.g. add machine controls */
 	int (*init)(struct snd_soc_codec *codec);
-
-	/* audio sysclock configuration */
-	unsigned int (*config_sysclk)(struct snd_soc_pcm_runtime *rtd,
-		struct snd_soc_clock_info *info);
 };
 
 /* SoC machine */
@@ -441,9 +425,6 @@ struct snd_soc_machine {
 	int (*resume_pre)(struct platform_device *pdev);
 	int (*resume_post)(struct platform_device *pdev);
 
-	/* machine stream operations */
-	struct snd_soc_ops *ops;
-
 	/* CPU <--> Codec DAI links  */
 	struct snd_soc_dai_link *dai_link;
 	int num_links;
@@ -462,8 +443,7 @@ struct snd_soc_device {
 
 /* runtime channel data */
 struct snd_soc_pcm_runtime {
-	struct snd_soc_codec_dai *codec_dai;
-	struct snd_soc_cpu_dai *cpu_dai;
+	struct snd_soc_dai_link *dai;
 	struct snd_soc_device *socdev;
 };
 
@@ -478,11 +458,4 @@ struct soc_enum {
 	void *dapm;
 };
 
-/* clocking configuration data */
-struct snd_soc_clock_info {
-	unsigned int rate;
-	unsigned int fs;
-	unsigned int bclk_master;
-};
-
 #endif

commit 1321b160fa1cf63fa841d954fe31220366b6647a
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Dec 21 11:02:06 2006 +0100

    [ALSA] soc - Fix delayed_work related changes on 2.6.20 kernel
    
    Fix the changes realted to delayed_work in soc/codecs/wm8750.c.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Jaroslav Kysela <perex@suse.cz>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index c985a111bc3f..ea836d819ce0 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -374,6 +374,7 @@ struct snd_soc_codec {
 	struct list_head dapm_paths;
 	unsigned int dapm_state;
 	unsigned int suspend_dapm_state;
+	struct delayed_work delayed_work;
 
 	/* codec DAI's */
 	struct snd_soc_codec_dai *dai;

commit 4484bb2e93a9ab636d149edc6515c75ea224e2b0
Author: Andrew Morton <akpm@osdl.org>
Date:   Fri Dec 15 09:30:07 2006 +0100

    [ALSA] Fix the soc code after dhowells workqueue changes.
    
    From: Andrew Morton <akpm@osdl.org>
    I converted the workqueues to per-device while I was there.  It seems
    strange to create a new kernel thread (on each CPU!) and to then only
    have a single global work to ever be queued upon it.
    Plus without this, I'd have to use the _NAR stuff, gawd help me.
    Does that workqueue really need to be per-cpu?
    Does that workqueue really need to exist?  Why not use keventd?
    Cc: Takashi Iwai <tiwai@suse.de>
    Cc: David Howells <dhowells@redhat.com>
    
    Signed-off-by: Andrew Morton <akpm@osdl.org>
    Signed-off-by: Jaroslav Kysela <perex@suse.cz>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index 3dfe052e0788..c985a111bc3f 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -15,6 +15,7 @@
 
 #include <linux/platform_device.h>
 #include <linux/types.h>
+#include <linux/workqueue.h>
 #include <sound/driver.h>
 #include <sound/core.h>
 #include <sound/pcm.h>
@@ -454,6 +455,7 @@ struct snd_soc_device {
 	struct snd_soc_platform *platform;
 	struct snd_soc_codec *codec;
 	struct snd_soc_codec_device *codec_dev;
+	struct delayed_work delayed_work;
 	void *codec_data;
 };
 

commit a71a468a50f1385855e28864e26251b02df829bb
Author: Liam Girdwood <lg@opensource.wolfsonmicro.com>
Date:   Thu Oct 19 20:35:56 2006 +0200

    [ALSA] ASoC: Add support for BCLK based on (Rate * Chn * Word Size)
    
    This patch adds support for the DAI BCLK to be generated by multiplying
    Rate * Channels * Word Size (RCW).
    This now gives 3 options for BCLK clocking and synchronisation :-
     1. BCLK = Rate * x
     2. BCLK = MCLK / x
     3. BCLK = Rate * Chn * Word Size.  (New)
    Changes:-
     o Add support for RCW generation of BCLK
     o Update Documentation to include RCW.
     o Update DAI documentation for label = value DAI modes.
     o Add RCW support to wm8731, wm8750 and pxa2xx-i2s drivers.
    
    Signed-off-by: Liam Girdwood <lg@opensource.wolfsonmicro.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Jaroslav Kysela <perex@suse.cz>

diff --git a/include/sound/soc.h b/include/sound/soc.h
index ecdd1fac94b6..3dfe052e0788 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -21,7 +21,7 @@
 #include <sound/control.h>
 #include <sound/ac97_codec.h>
 
-#define SND_SOC_VERSION "0.11.8"
+#define SND_SOC_VERSION "0.12"
 
 /*
  * Convenience kcontrol builders
@@ -141,19 +141,24 @@
 /* bit clock dividers */
 #define SND_SOC_FSBD(x)			(1 << (x - 1))	/* ratio mclk:bclk */
 #define SND_SOC_FSBD_REAL(x)	(ffs(x))
-#define SND_SOC_FSBD_ALL		0xffff /* all bit clock dividers supported */
 
-/* bit clock ratio to sample rate */
-#define SND_SOC_FSB(x)			(1 << ((x - 16) / 16))
-#define SND_SOC_FSB_REAL(x)		(((ffs(x) - 1) * 16) + 16)
+/* bit clock ratio to (sample rate * channels * word size) */
+#define SND_SOC_FSBW(x)			(1 << (x - 1))
+#define SND_SOC_FSBW_REAL(x)		(ffs(x))
 /* all bclk ratios supported */
-#define SND_SOC_FSB_ALL			SND_SOC_FSBD_ALL
+#define SND_SOC_FSB_ALL			~0ULL
 
 /*
  * DAI hardware flags
  */
-/* use bfs mclk divider mode, else sample rate ratio */
-#define SND_SOC_DAI_BFS_DIV	0x1
+/* use bfs mclk divider mode (BCLK = MCLK / x) */
+#define SND_SOC_DAI_BFS_DIV		0x1
+/* use bfs rate mulitplier  (BCLK = RATE * x)*/
+#define SND_SOC_DAI_BFS_RATE	0x2
+/* use bfs rcw multiplier (BCLK = RATE * CHN * WORD SIZE) */
+#define SND_SOC_DAI_BFS_RCW		0x4
+/* capture and playback can use different clocks */
+#define SND_SOC_DAI_ASYNC		0x8
 
 /*
  * AC97 codec ID's bitmask
@@ -264,7 +269,7 @@ struct snd_soc_dai_mode {
 	u16 pcmdir:2;	/* SND_SOC_HWDIR_* */
 	u16 flags:8;	/* hw flags */
 	u16 fs;			/* mclk to rate divider */
-	u32 bfs;		/* mclk to bclk dividers */
+	u64 bfs;		/* mclk to bclk dividers */
 	unsigned long priv;		/* private mode data */
 };
 

commit 808db4a4512bedd45b62de255f7eedb5d5b788b9
Author: Richard Purdie <rpurdie@rpsys.net>
Date:   Fri Oct 6 18:20:14 2006 +0200

    [ALSA] ASoC: core and dapm headers
    
    This patch adds the ASoC and DAPM headers.
    Features:-
     o Defines Digital Audio Interface (DAI) API
     o Defines Codec, Platform and Machine API
     o Defines Dynamic Audio Power Management API
    
    Signed-off-by: Richard Purdie <rpurdie@rpsys.net>
    Signed-off-by: Liam Girdwood <liam.girdwood@wolfsonmicro.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Jaroslav Kysela <perex@suse.cz>

diff --git a/include/sound/soc.h b/include/sound/soc.h
new file mode 100644
index 000000000000..ecdd1fac94b6
--- /dev/null
+++ b/include/sound/soc.h
@@ -0,0 +1,480 @@
+/*
+ * linux/sound/soc.h -- ALSA SoC Layer
+ *
+ * Author:		Liam Girdwood
+ * Created:		Aug 11th 2005
+ * Copyright:	Wolfson Microelectronics. PLC.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+
+#ifndef __LINUX_SND_SOC_H
+#define __LINUX_SND_SOC_H
+
+#include <linux/platform_device.h>
+#include <linux/types.h>
+#include <sound/driver.h>
+#include <sound/core.h>
+#include <sound/pcm.h>
+#include <sound/control.h>
+#include <sound/ac97_codec.h>
+
+#define SND_SOC_VERSION "0.11.8"
+
+/*
+ * Convenience kcontrol builders
+ */
+#define SOC_SINGLE_VALUE(reg,shift,mask,invert) ((reg) | ((shift) << 8) |\
+	((shift) << 12) | ((mask) << 16) | ((invert) << 24))
+#define SOC_SINGLE_VALUE_EXT(reg,mask,invert) ((reg) | ((mask) << 16) |\
+	((invert) << 31))
+#define SOC_SINGLE(xname, reg, shift, mask, invert) \
+{	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
+	.info = snd_soc_info_volsw, .get = snd_soc_get_volsw,\
+	.put = snd_soc_put_volsw, \
+	.private_value =  SOC_SINGLE_VALUE(reg, shift, mask, invert) }
+#define SOC_DOUBLE(xname, reg, shift_left, shift_right, mask, invert) \
+{	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname),\
+	.info = snd_soc_info_volsw, .get = snd_soc_get_volsw, \
+	.put = snd_soc_put_volsw, \
+	.private_value = (reg) | ((shift_left) << 8) | \
+		((shift_right) << 12) | ((mask) << 16) | ((invert) << 24) }
+#define SOC_DOUBLE_R(xname, reg_left, reg_right, shift, mask, invert) \
+{	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = (xname), \
+	.info = snd_soc_info_volsw_2r, \
+	.get = snd_soc_get_volsw_2r, .put = snd_soc_put_volsw_2r, \
+	.private_value = (reg_left) | ((shift) << 8)  | \
+		((mask) << 12) | ((invert) << 20) | ((reg_right) << 24) }
+#define SOC_ENUM_DOUBLE(xreg, xshift_l, xshift_r, xmask, xtexts) \
+{	.reg = xreg, .shift_l = xshift_l, .shift_r = xshift_r, \
+	.mask = xmask, .texts = xtexts }
+#define SOC_ENUM_SINGLE(xreg, xshift, xmask, xtexts) \
+	SOC_ENUM_DOUBLE(xreg, xshift, xshift, xmask, xtexts)
+#define SOC_ENUM_SINGLE_EXT(xmask, xtexts) \
+{	.mask = xmask, .texts = xtexts }
+#define SOC_ENUM(xname, xenum) \
+{	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname,\
+	.info = snd_soc_info_enum_double, \
+	.get = snd_soc_get_enum_double, .put = snd_soc_put_enum_double, \
+	.private_value = (unsigned long)&xenum }
+#define SOC_SINGLE_EXT(xname, xreg, xmask, xinvert,\
+	 xhandler_get, xhandler_put) \
+{	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
+	.info = snd_soc_info_volsw_ext, \
+	.get = xhandler_get, .put = xhandler_put, \
+	.private_value =  SOC_SINGLE_VALUE_EXT(xreg, xmask, xinvert) }
+#define SOC_SINGLE_BOOL_EXT(xname, xdata, xhandler_get, xhandler_put) \
+{	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
+	.info = snd_soc_info_bool_ext, \
+	.get = xhandler_get, .put = xhandler_put, \
+	.private_value = xdata }
+#define SOC_ENUM_EXT(xname, xenum, xhandler_get, xhandler_put) \
+{	.iface = SNDRV_CTL_ELEM_IFACE_MIXER, .name = xname, \
+	.info = snd_soc_info_enum_ext, \
+	.get = xhandler_get, .put = xhandler_put, \
+	.private_value = (unsigned long)&xenum }
+
+/*
+ * Digital Audio Interface (DAI) types
+ */
+#define SND_SOC_DAI_AC97	0x1
+#define SND_SOC_DAI_I2S		0x2
+#define SND_SOC_DAI_PCM		0x4
+
+/*
+ * DAI hardware audio formats
+ */
+#define SND_SOC_DAIFMT_I2S		(1 << 0)	/* I2S mode */
+#define SND_SOC_DAIFMT_RIGHT_J	(1 << 1)	/* Right justified mode */
+#define SND_SOC_DAIFMT_LEFT_J	(1 << 2)	/* Left Justified mode */
+#define SND_SOC_DAIFMT_DSP_A	(1 << 3)	/* L data msb after FRM or LRC */
+#define SND_SOC_DAIFMT_DSP_B	(1 << 4)	/* L data msb during FRM or LRC */
+#define SND_SOC_DAIFMT_AC97		(1 << 5)	/* AC97 */
+
+/*
+ * DAI hardware signal inversions
+ */
+#define SND_SOC_DAIFMT_NB_NF		(1 << 8)	/* normal bit clock + frame */
+#define SND_SOC_DAIFMT_NB_IF		(1 << 9)	/* normal bclk + inv frm */
+#define SND_SOC_DAIFMT_IB_NF		(1 << 10)	/* invert bclk + nor frm */
+#define SND_SOC_DAIFMT_IB_IF		(1 << 11)	/* invert bclk + frm */
+
+/*
+ * DAI hardware clock masters
+ * This is wrt the codec, the inverse is true for the interface
+ * i.e. if the codec is clk and frm master then the interface is
+ * clk and frame slave.
+ */
+#define SND_SOC_DAIFMT_CBM_CFM	(1 << 12) /* codec clk & frm master */
+#define SND_SOC_DAIFMT_CBS_CFM	(1 << 13) /* codec clk slave & frm master */
+#define SND_SOC_DAIFMT_CBM_CFS	(1 << 14) /* codec clk master & frame slave */
+#define SND_SOC_DAIFMT_CBS_CFS	(1 << 15) /* codec clk & frm slave */
+
+#define SND_SOC_DAIFMT_FORMAT_MASK		0x00ff
+#define SND_SOC_DAIFMT_INV_MASK			0x0f00
+#define SND_SOC_DAIFMT_CLOCK_MASK		0xf000
+
+/*
+ * DAI hardware audio direction
+ */
+#define SND_SOC_DAIDIR_PLAYBACK		0x1
+#define SND_SOC_DAIDIR_CAPTURE		0x2
+
+/*
+ * DAI hardware Time Division Multiplexing (TDM) Slots
+ * Left and Right data word positions
+ * This is measured in words (sample size) and not bits.
+ */
+#define SND_SOC_DAITDM_LRDW(l,r)	((l << 8) | r)
+
+/*
+ * DAI hardware clock ratios
+ * bit clock can either be a generated by dividing mclk or
+ * by multiplying sample rate, hence there are 2 definitions below
+ * depending on codec type.
+ */
+/* ratio of sample rate to mclk/sysclk */
+#define SND_SOC_FS_ALL			0xffff	/* all mclk supported */
+
+/* bit clock dividers */
+#define SND_SOC_FSBD(x)			(1 << (x - 1))	/* ratio mclk:bclk */
+#define SND_SOC_FSBD_REAL(x)	(ffs(x))
+#define SND_SOC_FSBD_ALL		0xffff /* all bit clock dividers supported */
+
+/* bit clock ratio to sample rate */
+#define SND_SOC_FSB(x)			(1 << ((x - 16) / 16))
+#define SND_SOC_FSB_REAL(x)		(((ffs(x) - 1) * 16) + 16)
+/* all bclk ratios supported */
+#define SND_SOC_FSB_ALL			SND_SOC_FSBD_ALL
+
+/*
+ * DAI hardware flags
+ */
+/* use bfs mclk divider mode, else sample rate ratio */
+#define SND_SOC_DAI_BFS_DIV	0x1
+
+/*
+ * AC97 codec ID's bitmask
+ */
+#define SND_SOC_DAI_AC97_ID0	(1 << 0)
+#define SND_SOC_DAI_AC97_ID1	(1 << 1)
+#define SND_SOC_DAI_AC97_ID2	(1 << 2)
+#define SND_SOC_DAI_AC97_ID3	(1 << 3)
+
+struct snd_soc_device;
+struct snd_soc_pcm_stream;
+struct snd_soc_ops;
+struct snd_soc_dai_mode;
+struct snd_soc_pcm_runtime;
+struct snd_soc_codec_dai;
+struct snd_soc_cpu_dai;
+struct snd_soc_codec;
+struct snd_soc_machine_config;
+struct soc_enum;
+struct snd_soc_ac97_ops;
+struct snd_soc_clock_info;
+
+typedef int (*hw_write_t)(void *,const char* ,int);
+typedef int (*hw_read_t)(void *,char* ,int);
+
+extern struct snd_ac97_bus_ops soc_ac97_ops;
+
+/* pcm <-> DAI connect */
+void snd_soc_free_pcms(struct snd_soc_device *socdev);
+int snd_soc_new_pcms(struct snd_soc_device *socdev, int idx, const char *xid);
+int snd_soc_register_card(struct snd_soc_device *socdev);
+
+/* set runtime hw params */
+int snd_soc_set_runtime_hwparams(struct snd_pcm_substream *substream,
+	const struct snd_pcm_hardware *hw);
+int snd_soc_get_rate(int rate);
+
+/* codec IO */
+#define snd_soc_read(codec, reg) codec->read(codec, reg)
+#define snd_soc_write(codec, reg, value) codec->write(codec, reg, value)
+
+/* codec register bit access */
+int snd_soc_update_bits(struct snd_soc_codec *codec, unsigned short reg,
+				unsigned short mask, unsigned short value);
+int snd_soc_test_bits(struct snd_soc_codec *codec, unsigned short reg,
+				unsigned short mask, unsigned short value);
+
+int snd_soc_new_ac97_codec(struct snd_soc_codec *codec,
+	struct snd_ac97_bus_ops *ops, int num);
+void snd_soc_free_ac97_codec(struct snd_soc_codec *codec);
+
+/*
+ *Controls
+ */
+struct snd_kcontrol *snd_soc_cnew(const struct snd_kcontrol_new *_template,
+	void *data, char *long_name);
+int snd_soc_info_enum_double(struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_info *uinfo);
+int snd_soc_info_enum_ext(struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_info *uinfo);
+int snd_soc_get_enum_double(struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_value *ucontrol);
+int snd_soc_put_enum_double(struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_value *ucontrol);
+int snd_soc_info_volsw(struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_info *uinfo);
+int snd_soc_info_volsw_ext(struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_info *uinfo);
+int snd_soc_info_bool_ext(struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_info *uinfo);
+int snd_soc_get_volsw(struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_value *ucontrol);
+int snd_soc_put_volsw(struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_value *ucontrol);
+int snd_soc_info_volsw_2r(struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_info *uinfo);
+int snd_soc_get_volsw_2r(struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_value *ucontrol);
+int snd_soc_put_volsw_2r(struct snd_kcontrol *kcontrol,
+	struct snd_ctl_elem_value *ucontrol);
+
+/* SoC PCM stream information */
+struct snd_soc_pcm_stream {
+	char *stream_name;
+	unsigned int rate_min;		/* min rate */
+	unsigned int rate_max;		/* max rate */
+	unsigned int channels_min;	/* min channels */
+	unsigned int channels_max;	/* max channels */
+	unsigned int active:1;		/* stream is in use */
+};
+
+/* SoC audio ops */
+struct snd_soc_ops {
+	int (*startup)(struct snd_pcm_substream *);
+	void (*shutdown)(struct snd_pcm_substream *);
+	int (*hw_params)(struct snd_pcm_substream *, struct snd_pcm_hw_params *);
+	int (*hw_free)(struct snd_pcm_substream *);
+	int (*prepare)(struct snd_pcm_substream *);
+	int (*trigger)(struct snd_pcm_substream *, int);
+};
+
+/* SoC DAI hardware mode */
+struct snd_soc_dai_mode {
+	u16 fmt;		/* SND_SOC_DAIFMT_* */
+	u16 tdm;		/* SND_SOC_HWTDM_* */
+	u64 pcmfmt; 	/* SNDRV_PCM_FMTBIT_* */
+	u16 pcmrate;	/* SND_SOC_HWRATE_* */
+	u16 pcmdir:2;	/* SND_SOC_HWDIR_* */
+	u16 flags:8;	/* hw flags */
+	u16 fs;			/* mclk to rate divider */
+	u32 bfs;		/* mclk to bclk dividers */
+	unsigned long priv;		/* private mode data */
+};
+
+/* DAI capabilities */
+struct snd_soc_dai_cap {
+	int num_modes;				/* number of DAI modes */
+	struct snd_soc_dai_mode *mode;	/* array of supported DAI modes */
+};
+
+/* SoC Codec DAI */
+struct snd_soc_codec_dai {
+	char *name;
+	int id;
+
+	/* DAI capabilities */
+	struct snd_soc_pcm_stream playback;
+	struct snd_soc_pcm_stream capture;
+	struct snd_soc_dai_cap caps;
+
+	/* DAI runtime info */
+	struct snd_soc_dai_mode dai_runtime;
+	struct snd_soc_ops ops;
+	unsigned int (*config_sysclk)(struct snd_soc_codec_dai*,
+		struct snd_soc_clock_info *info, unsigned int clk);
+	int (*digital_mute)(struct snd_soc_codec *,
+		struct snd_soc_codec_dai*, int);
+	unsigned int mclk;		/* the audio master clock */
+	unsigned int pll_in;	/* the PLL input clock */
+	unsigned int pll_out;	/* the PLL output clock */
+	unsigned int clk_div;	/* internal clock divider << 1 (for fractions) */
+	unsigned int active;
+	unsigned char pop_wait:1;
+
+	/* DAI private data */
+	void *private_data;
+};
+
+/* SoC CPU DAI */
+struct snd_soc_cpu_dai {
+
+	/* DAI description */
+	char *name;
+	unsigned int id;
+	unsigned char type;
+
+	/* DAI callbacks */
+	int (*probe)(struct platform_device *pdev);
+	void (*remove)(struct platform_device *pdev);
+	int (*suspend)(struct platform_device *pdev,
+		struct snd_soc_cpu_dai *cpu_dai);
+	int (*resume)(struct platform_device *pdev,
+		struct snd_soc_cpu_dai *cpu_dai);
+	unsigned int (*config_sysclk)(struct snd_soc_cpu_dai *cpu_dai,
+		struct snd_soc_clock_info *info, unsigned int clk);
+
+	/* DAI capabilities */
+	struct snd_soc_pcm_stream capture;
+	struct snd_soc_pcm_stream playback;
+	struct snd_soc_dai_cap caps;
+
+	/* DAI runtime info */
+	struct snd_soc_dai_mode dai_runtime;
+	struct snd_soc_ops ops;
+	struct snd_pcm_runtime *runtime;
+	unsigned char active:1;
+	unsigned int mclk;
+	void *dma_data;
+
+	/* DAI private data */
+	void *private_data;
+};
+
+/* SoC Audio Codec */
+struct snd_soc_codec {
+	char *name;
+	struct module *owner;
+	struct mutex mutex;
+
+	/* callbacks */
+	int (*dapm_event)(struct snd_soc_codec *codec, int event);
+
+	/* runtime */
+	struct snd_card *card;
+	struct snd_ac97 *ac97;  /* for ad-hoc ac97 devices */
+	unsigned int active;
+	unsigned int pcm_devs;
+	void *private_data;
+
+	/* codec IO */
+	void *control_data; /* codec control (i2c/3wire) data */
+	unsigned int (*read)(struct snd_soc_codec *, unsigned int);
+	int (*write)(struct snd_soc_codec *, unsigned int, unsigned int);
+	hw_write_t hw_write;
+	hw_read_t hw_read;
+	void *reg_cache;
+	short reg_cache_size;
+	short reg_cache_step;
+
+	/* dapm */
+	struct list_head dapm_widgets;
+	struct list_head dapm_paths;
+	unsigned int dapm_state;
+	unsigned int suspend_dapm_state;
+
+	/* codec DAI's */
+	struct snd_soc_codec_dai *dai;
+	unsigned int num_dai;
+};
+
+/* codec device */
+struct snd_soc_codec_device {
+	int (*probe)(struct platform_device *pdev);
+	int (*remove)(struct platform_device *pdev);
+	int (*suspend)(struct platform_device *pdev, pm_message_t state);
+	int (*resume)(struct platform_device *pdev);
+};
+
+/* SoC platform interface */
+struct snd_soc_platform {
+	char *name;
+
+	int (*probe)(struct platform_device *pdev);
+	int (*remove)(struct platform_device *pdev);
+	int (*suspend)(struct platform_device *pdev,
+		struct snd_soc_cpu_dai *cpu_dai);
+	int (*resume)(struct platform_device *pdev,
+		struct snd_soc_cpu_dai *cpu_dai);
+
+	/* pcm creation and destruction */
+	int (*pcm_new)(struct snd_card *, struct snd_soc_codec_dai *,
+		struct snd_pcm *);
+	void (*pcm_free)(struct snd_pcm *);
+
+	/* platform stream ops */
+	struct snd_pcm_ops *pcm_ops;
+};
+
+/* SoC machine DAI configuration, glues a codec and cpu DAI together */
+struct snd_soc_dai_link  {
+	char *name;			/* Codec name */
+	char *stream_name;		/* Stream name */
+
+	/* DAI */
+	struct snd_soc_codec_dai *codec_dai;
+	struct snd_soc_cpu_dai *cpu_dai;
+	u32 flags;			/* DAI config preference flags */
+
+	/* codec/machine specific init - e.g. add machine controls */
+	int (*init)(struct snd_soc_codec *codec);
+
+	/* audio sysclock configuration */
+	unsigned int (*config_sysclk)(struct snd_soc_pcm_runtime *rtd,
+		struct snd_soc_clock_info *info);
+};
+
+/* SoC machine */
+struct snd_soc_machine {
+	char *name;
+
+	int (*probe)(struct platform_device *pdev);
+	int (*remove)(struct platform_device *pdev);
+
+	/* the pre and post PM functions are used to do any PM work before and
+	 * after the codec and DAI's do any PM work. */
+	int (*suspend_pre)(struct platform_device *pdev, pm_message_t state);
+	int (*suspend_post)(struct platform_device *pdev, pm_message_t state);
+	int (*resume_pre)(struct platform_device *pdev);
+	int (*resume_post)(struct platform_device *pdev);
+
+	/* machine stream operations */
+	struct snd_soc_ops *ops;
+
+	/* CPU <--> Codec DAI links  */
+	struct snd_soc_dai_link *dai_link;
+	int num_links;
+};
+
+/* SoC Device - the audio subsystem */
+struct snd_soc_device {
+	struct device *dev;
+	struct snd_soc_machine *machine;
+	struct snd_soc_platform *platform;
+	struct snd_soc_codec *codec;
+	struct snd_soc_codec_device *codec_dev;
+	void *codec_data;
+};
+
+/* runtime channel data */
+struct snd_soc_pcm_runtime {
+	struct snd_soc_codec_dai *codec_dai;
+	struct snd_soc_cpu_dai *cpu_dai;
+	struct snd_soc_device *socdev;
+};
+
+/* enumerated kcontrol */
+struct soc_enum {
+	unsigned short reg;
+	unsigned short reg2;
+	unsigned char shift_l;
+	unsigned char shift_r;
+	unsigned int mask;
+	const char **texts;
+	void *dapm;
+};
+
+/* clocking configuration data */
+struct snd_soc_clock_info {
+	unsigned int rate;
+	unsigned int fs;
+	unsigned int bclk_master;
+};
+
+#endif
