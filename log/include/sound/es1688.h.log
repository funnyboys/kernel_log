commit 1a59d1b8e05ea6ab45f7e18897de1ef0e6bc3da6
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon May 27 08:55:05 2019 +0200

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 156
    
    Based on 1 normalized pattern(s):
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license as published by
      the free software foundation either version 2 of the license or at
      your option any later version this program is distributed in the
      hope that it will be useful but without any warranty without even
      the implied warranty of merchantability or fitness for a particular
      purpose see the gnu general public license for more details you
      should have received a copy of the gnu general public license along
      with this program if not write to the free software foundation inc
      59 temple place suite 330 boston ma 02111 1307 usa
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-or-later
    
    has been chosen to replace the boilerplate/reference in 1334 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Reviewed-by: Richard Fontana <rfontana@redhat.com>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190527070033.113240726@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/include/sound/es1688.h b/include/sound/es1688.h
index b34f23a5bb74..099569c31fbb 100644
--- a/include/sound/es1688.h
+++ b/include/sound/es1688.h
@@ -1,25 +1,10 @@
+/* SPDX-License-Identifier: GPL-2.0-or-later */
 #ifndef __SOUND_ES1688_H
 #define __SOUND_ES1688_H
 
 /*
  *  Header file for ES488/ES1688
  *  Copyright (c) by Jaroslav Kysela <perex@perex.cz>
- *
- *
- *   This program is free software; you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation; either version 2 of the License, or
- *   (at your option) any later version.
- *
- *   This program is distributed in the hope that it will be useful,
- *   but WITHOUT ANY WARRANTY; without even the implied warranty of
- *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *   GNU General Public License for more details.
- *
- *   You should have received a copy of the GNU General Public License
- *   along with this program; if not, write to the Free Software
- *   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
- *
  */
 
 #include <sound/control.h>

commit 4b8ab88518726197c8659bc9aca96c6af01dab57
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Fri Jan 2 12:24:37 2015 +0100

    ALSA: es1688: Remove almost always NULL parameter
    
    snd_es1688_pcm() takes a pointer to a pointer of a PCM where if this
    parameter is provided the newly allocated PCM is stored. This PCM is also
    available from the pcm field of the snd_es1688 struct that got passed to the
    same function. This patch updates all callers which passed a pointer to use
    that field instead and then removes the parameter from the function. This
    makes the code a bit shorter and cleaner.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/include/sound/es1688.h b/include/sound/es1688.h
index 1d636a2d8896..b34f23a5bb74 100644
--- a/include/sound/es1688.h
+++ b/include/sound/es1688.h
@@ -115,8 +115,7 @@ int snd_es1688_create(struct snd_card *card,
 		      int mpu_irq,
 		      int dma8,
 		      unsigned short hardware);
-int snd_es1688_pcm(struct snd_card *card, struct snd_es1688 *chip, int device,
-		   struct snd_pcm **rpcm);
+int snd_es1688_pcm(struct snd_card *card, struct snd_es1688 *chip, int device);
 int snd_es1688_mixer(struct snd_card *card, struct snd_es1688 *chip);
 int snd_es1688_reset(struct snd_es1688 *chip);
 

commit a1ce39288e6fbefdd8d607021d02384eb4a20b99
Author: David Howells <dhowells@redhat.com>
Date:   Tue Oct 2 18:01:25 2012 +0100

    UAPI: (Scripted) Convert #include "..." to #include <path/...> in kernel system headers
    
    Convert #include "..." to #include <path/...> in kernel system headers.
    
    Signed-off-by: David Howells <dhowells@redhat.com>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Acked-by: Dave Jones <davej@redhat.com>

diff --git a/include/sound/es1688.h b/include/sound/es1688.h
index f752dd33dfaf..1d636a2d8896 100644
--- a/include/sound/es1688.h
+++ b/include/sound/es1688.h
@@ -22,8 +22,8 @@
  *
  */
 
-#include "control.h"
-#include "pcm.h"
+#include <sound/control.h>
+#include <sound/pcm.h>
 #include <linux/interrupt.h>
 
 #define ES1688_HW_AUTO		0x0000

commit e5b35420ef7e6dc92a6cc5914bc9e5e5c1d48819
Author: Fengguang Wu <fengguang.wu@intel.com>
Date:   Sun Jul 29 19:39:09 2012 +0800

    ALSA: es1688 - freeup resources on init failure
    
    This will fix the following oops:
    
    [    6.169981] genirq: Flags mismatch irq 5. 00000000 (ES1688) vs. 00000000 (ES1688)
    [    6.170851] Pid: 1, comm: swapper Not tainted 3.5.0-00004-gceee0e9 #14
    [    6.170851] Call Trace:
    [    6.170851]  [<c1062237>] ? __setup_irq+0x3c7/0x420
    [    6.170851]  [<c1062486>] ? request_threaded_irq+0x76/0x140
    [    6.170851]  [<c1290220>] ? snd_es1688_ioctl+0x10/0x10
    [    6.170851]  [<c10624c2>] ? request_threaded_irq+0xb2/0x140
    [    6.170851]  [<c1291196>] ? snd_es1688_create+0x96/0x330
    [    6.170851]  [<c138365d>] ? snd_gusextreme_probe+0x18d/0x5a2
    [    6.170851]  [<c11c9d80>] ? __driver_attach+0x80/0x80
    [    6.170851]  [<c10db22f>] ? sysfs_create_link+0xf/0x20
    [    6.170851]  [<c11c9d80>] ? __driver_attach+0x80/0x80
    [    6.170851]  [<c11d1502>] ? isa_bus_probe+0x12/0x20
    [    6.170851]  [<c11c9b95>] ? driver_probe_device+0x55/0x1c0
    [    6.170851]  [<c13ae04f>] ? _raw_spin_unlock+0xf/0x30
    [    6.170851]  [<c13705ea>] ? klist_next+0x6a/0xe0
    [    6.170851]  [<c11d15c1>] ? isa_bus_match+0x21/0x40
    [    6.170851]  [<c11c8a24>] ? bus_for_each_drv+0x34/0x70
    [    6.170851]  [<c11c9e4b>] ? device_attach+0x7b/0x90
    [    6.170851]  [<c11c9d80>] ? __driver_attach+0x80/0x80
    [    6.170851]  [<c11c8bff>] ? bus_probe_device+0x5f/0x80
    [    6.170851]  [<c11c7493>] ? device_add+0x573/0x620
    [    6.170851]  [<c1042820>] ? complete_all+0x40/0x60
    [    6.170851]  [<c13ae08a>] ? _raw_spin_unlock_irqrestore+0x1a/0x30
    [    6.170851]  [<c11d16c6>] ? isa_register_driver+0xb6/0x150
    [    6.170851]  [<c15c9002>] ? alsa_card_gusmax_init+0xf/0xf
    [    6.170851]  [<c15a99bc>] ? do_one_initcall+0x7f/0x12b
    [    6.170851]  [<c15a9b7a>] ? kernel_init+0x112/0x1a9
    [    6.170851]  [<c15a9423>] ? do_early_param+0x77/0x77
    [    6.170851]  [<c15a9a68>] ? do_one_initcall+0x12b/0x12b
    [    6.170851]  [<c13aefbe>] ? kernel_thread_helper+0x6/0xd
    [    6.190170] es1688: can't grab IRQ 5
    [    6.190613] genirq: Flags mismatch irq 5. 00000000 (ES1688) vs. 00000000 (ES1688)
    [    6.191566] Pid: 1, comm: swapper Not tainted 3.5.0-00004-gceee0e9 #14
    [    6.192394] Call Trace:
    [    6.192685]  [<c1062237>] ? __setup_irq+0x3c7/0x420
    [    6.193342]  [<c1062486>] ? request_threaded_irq+0x76/0x140
    [    6.194081]  [<c1290220>] ? snd_es1688_ioctl+0x10/0x10
    [    6.194607]  [<c10624c2>] ? request_threaded_irq+0xb2/0x140
    [    6.194607]  [<c1291196>] ? snd_es1688_create+0x96/0x330
    [    6.194607]  [<c138365d>] ? snd_gusextreme_probe+0x18d/0x5a2
    [    6.194607]  [<c11c9d80>] ? __driver_attach+0x80/0x80
    [    6.194607]  [<c10db22f>] ? sysfs_create_link+0xf/0x20
    [    6.194607]  [<c11c9d80>] ? __driver_attach+0x80/0x80
    [    6.194607]  [<c11d1502>] ? isa_bus_probe+0x12/0x20
    [    6.194607]  [<c11c9b95>] ? driver_probe_device+0x55/0x1c0
    [    6.194607]  [<c13ae04f>] ? _raw_spin_unlock+0xf/0x30
    [    6.194607]  [<c13705ea>] ? klist_next+0x6a/0xe0
    [    6.194607]  [<c11d15c1>] ? isa_bus_match+0x21/0x40
    [    6.194607]  [<c11c8a24>] ? bus_for_each_drv+0x34/0x70
    [    6.194607]  [<c11c9e4b>] ? device_attach+0x7b/0x90
    [    6.194607]  [<c11c9d80>] ? __driver_attach+0x80/0x80
    [    6.194607]  [<c11c8bff>] ? bus_probe_device+0x5f/0x80
    [    6.194607]  [<c11c7493>] ? device_add+0x573/0x620
    [    6.194607]  [<c1042820>] ? complete_all+0x40/0x60
    [    6.194607]  [<c13ae08a>] ? _raw_spin_unlock_irqrestore+0x1a/0x30
    [    6.194607]  [<c11d16c6>] ? isa_register_driver+0xb6/0x150
    [    6.194607]  [<c15c9002>] ? alsa_card_gusmax_init+0xf/0xf
    [    6.194607]  [<c15a99bc>] ? do_one_initcall+0x7f/0x12b
    [    6.194607]  [<c15a9b7a>] ? kernel_init+0x112/0x1a9
    [    6.194607]  [<c15a9423>] ? do_early_param+0x77/0x77
    [    6.194607]  [<c15a9a68>] ? do_one_initcall+0x12b/0x12b
    [    6.194607]  [<c13aefbe>] ? kernel_thread_helper+0x6/0xd
    [    6.210779] es1688: can't grab IRQ 5
    [    6.211305] gusextreme: probe of gusextreme.0 failed with error -16
    
    Signed-off-by: Daniel Mack <zonque@gmail.com>
    Signed-off-by: Fengguang Wu <fengguang.wu@intel.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/include/sound/es1688.h b/include/sound/es1688.h
index 3ec7ecbe2502..f752dd33dfaf 100644
--- a/include/sound/es1688.h
+++ b/include/sound/es1688.h
@@ -29,6 +29,7 @@
 #define ES1688_HW_AUTO		0x0000
 #define ES1688_HW_688		0x0001
 #define ES1688_HW_1688		0x0002
+#define ES1688_HW_UNDEF	0x0003
 
 struct snd_es1688 {
 	unsigned long port;		/* port of ESS chip */

commit a20971b201ac1fcd236400942c98b0106c42c70a
Author: Krzysztof Helt <krzysztof.h1@wp.pl>
Date:   Mon May 10 09:47:32 2010 +0200

    ALSA: Merge es1688 and es968 drivers
    
    The ESS ES968 chip is nothing more then a PnP companion
    for a non-PnP audio chip. It was paired with non-PnP ESS' chips:
    ES688 and ES1688. The ESS' audio chips are handled by the es1688
    driver in native mode. The PnP cards are handled by the ES968
    driver in SB compatible mode.
    
    Move the ES968 chip handling to the es1688 driver so the driver
    can handle both PnP and non-PnP cards. The es968 is removed.
    
    Also, a new PnP id is added for the card I acquired (the change
    was tested on this card).
    
    Signed-off-by: Krzysztof Helt <krzysztof.h1@wp.pl>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/include/sound/es1688.h b/include/sound/es1688.h
index 4c29572effb2..3ec7ecbe2502 100644
--- a/include/sound/es1688.h
+++ b/include/sound/es1688.h
@@ -117,5 +117,6 @@ int snd_es1688_create(struct snd_card *card,
 int snd_es1688_pcm(struct snd_card *card, struct snd_es1688 *chip, int device,
 		   struct snd_pcm **rpcm);
 int snd_es1688_mixer(struct snd_card *card, struct snd_es1688 *chip);
+int snd_es1688_reset(struct snd_es1688 *chip);
 
 #endif /* __SOUND_ES1688_H */

commit 396fa8272601c3d488cb8391c3962a7ee552afd0
Author: Krzysztof Helt <krzysztof.h1@wp.pl>
Date:   Sun May 9 20:35:44 2010 +0200

    ALSA: es1688: allocate snd_es1688 structure as a part of snd_card structure
    
    Allocate the snd_es1688 during the snd_card allocation.
    This allows to remove the card pointer from the snd_es1688 structure.
    
    Signed-off-by: Krzysztof Helt <krzysztof.h1@wp.pl>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/include/sound/es1688.h b/include/sound/es1688.h
index 10fcf1465810..4c29572effb2 100644
--- a/include/sound/es1688.h
+++ b/include/sound/es1688.h
@@ -44,7 +44,6 @@ struct snd_es1688 {
 	unsigned char pad;
 	unsigned int dma_size;
 
-	struct snd_card *card;
 	struct snd_pcm *pcm;
 	struct snd_pcm_substream *playback_substream;
 	struct snd_pcm_substream *capture_substream;
@@ -108,14 +107,15 @@ struct snd_es1688 {
 void snd_es1688_mixer_write(struct snd_es1688 *chip, unsigned char reg, unsigned char data);
 
 int snd_es1688_create(struct snd_card *card,
+		      struct snd_es1688 *chip,
 		      unsigned long port,
 		      unsigned long mpu_port,
 		      int irq,
 		      int mpu_irq,
 		      int dma8,
-		      unsigned short hardware,
-		      struct snd_es1688 ** rchip);
-int snd_es1688_pcm(struct snd_es1688 *chip, int device, struct snd_pcm ** rpcm);
-int snd_es1688_mixer(struct snd_es1688 *chip);
+		      unsigned short hardware);
+int snd_es1688_pcm(struct snd_card *card, struct snd_es1688 *chip, int device,
+		   struct snd_pcm **rpcm);
+int snd_es1688_mixer(struct snd_card *card, struct snd_es1688 *chip);
 
 #endif /* __SOUND_ES1688_H */

commit c1017a4cdb68ae5368fbc9ee42c77f1f5dca8916
Author: Jaroslav Kysela <perex@perex.cz>
Date:   Mon Oct 15 09:50:19 2007 +0200

    [ALSA] Changed Jaroslav Kysela's e-mail from perex@suse.cz to perex@perex.cz
    
    
    Signed-off-by: Jaroslav Kysela <perex@perex.cz>

diff --git a/include/sound/es1688.h b/include/sound/es1688.h
index fc1c47dae3da..10fcf1465810 100644
--- a/include/sound/es1688.h
+++ b/include/sound/es1688.h
@@ -3,7 +3,7 @@
 
 /*
  *  Header file for ES488/ES1688
- *  Copyright (c) by Jaroslav Kysela <perex@suse.cz>
+ *  Copyright (c) by Jaroslav Kysela <perex@perex.cz>
  *
  *
  *   This program is free software; you can redistribute it and/or modify

commit d3a7e476740dc23588ea65fa0df1aacdf8e70003
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Nov 17 14:31:42 2005 +0100

    [ALSA] Remove xxx_t typedefs: ISA ES1688
    
    Modules: ES1688 driver
    
    Remove xxx_t typedefs from the ISA ES1688 driver.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/include/sound/es1688.h b/include/sound/es1688.h
index 604f495bc8b1..fc1c47dae3da 100644
--- a/include/sound/es1688.h
+++ b/include/sound/es1688.h
@@ -30,7 +30,7 @@
 #define ES1688_HW_688		0x0001
 #define ES1688_HW_1688		0x0002
 
-struct _snd_es1688 {
+struct snd_es1688 {
 	unsigned long port;		/* port of ESS chip */
 	struct resource *res_port;
 	unsigned long mpu_port;		/* MPU-401 port of ESS chip */
@@ -44,17 +44,15 @@ struct _snd_es1688 {
 	unsigned char pad;
 	unsigned int dma_size;
 
-	snd_card_t *card;
-	snd_pcm_t *pcm;
-	snd_pcm_substream_t *playback_substream;
-	snd_pcm_substream_t *capture_substream;
+	struct snd_card *card;
+	struct snd_pcm *pcm;
+	struct snd_pcm_substream *playback_substream;
+	struct snd_pcm_substream *capture_substream;
 
 	spinlock_t reg_lock;
 	spinlock_t mixer_lock;
 };
 
-typedef struct _snd_es1688 es1688_t;
-
 /* I/O ports */
 
 #define ES1688P(codec, x) ((codec)->port + e_s_s_ESS1688##x)
@@ -107,17 +105,17 @@ typedef struct _snd_es1688 es1688_t;
 
  */
 
-void snd_es1688_mixer_write(es1688_t *chip, unsigned char reg, unsigned char data);
+void snd_es1688_mixer_write(struct snd_es1688 *chip, unsigned char reg, unsigned char data);
 
-int snd_es1688_create(snd_card_t * card,
+int snd_es1688_create(struct snd_card *card,
 		      unsigned long port,
 		      unsigned long mpu_port,
 		      int irq,
 		      int mpu_irq,
 		      int dma8,
 		      unsigned short hardware,
-		      es1688_t ** rchip);
-int snd_es1688_pcm(es1688_t *chip, int device, snd_pcm_t ** rpcm);
-int snd_es1688_mixer(es1688_t *chip);
+		      struct snd_es1688 ** rchip);
+int snd_es1688_pcm(struct snd_es1688 *chip, int device, struct snd_pcm ** rpcm);
+int snd_es1688_mixer(struct snd_es1688 *chip);
 
 #endif /* __SOUND_ES1688_H */

commit 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2
Author: Linus Torvalds <torvalds@ppc970.osdl.org>
Date:   Sat Apr 16 15:20:36 2005 -0700

    Linux-2.6.12-rc2
    
    Initial git repository build. I'm not bothering with the full history,
    even though we have it. We can create a separate "historical" git
    archive of that later if we want to, and in the meantime it's about
    3.2GB when imported into git - space that would just make the early
    git days unnecessarily complicated, when we don't have a lot of good
    infrastructure for it.
    
    Let it rip!

diff --git a/include/sound/es1688.h b/include/sound/es1688.h
new file mode 100644
index 000000000000..604f495bc8b1
--- /dev/null
+++ b/include/sound/es1688.h
@@ -0,0 +1,123 @@
+#ifndef __SOUND_ES1688_H
+#define __SOUND_ES1688_H
+
+/*
+ *  Header file for ES488/ES1688
+ *  Copyright (c) by Jaroslav Kysela <perex@suse.cz>
+ *
+ *
+ *   This program is free software; you can redistribute it and/or modify
+ *   it under the terms of the GNU General Public License as published by
+ *   the Free Software Foundation; either version 2 of the License, or
+ *   (at your option) any later version.
+ *
+ *   This program is distributed in the hope that it will be useful,
+ *   but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *   GNU General Public License for more details.
+ *
+ *   You should have received a copy of the GNU General Public License
+ *   along with this program; if not, write to the Free Software
+ *   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
+ *
+ */
+
+#include "control.h"
+#include "pcm.h"
+#include <linux/interrupt.h>
+
+#define ES1688_HW_AUTO		0x0000
+#define ES1688_HW_688		0x0001
+#define ES1688_HW_1688		0x0002
+
+struct _snd_es1688 {
+	unsigned long port;		/* port of ESS chip */
+	struct resource *res_port;
+	unsigned long mpu_port;		/* MPU-401 port of ESS chip */
+	int irq;			/* IRQ number of ESS chip */
+	int mpu_irq;			/* MPU IRQ */
+	int dma8;			/* 8-bit DMA */
+	unsigned short version;		/* version of ESS chip */
+	unsigned short hardware;	/* see to ES1688_HW_XXXX */
+
+	unsigned short trigger_value;
+	unsigned char pad;
+	unsigned int dma_size;
+
+	snd_card_t *card;
+	snd_pcm_t *pcm;
+	snd_pcm_substream_t *playback_substream;
+	snd_pcm_substream_t *capture_substream;
+
+	spinlock_t reg_lock;
+	spinlock_t mixer_lock;
+};
+
+typedef struct _snd_es1688 es1688_t;
+
+/* I/O ports */
+
+#define ES1688P(codec, x) ((codec)->port + e_s_s_ESS1688##x)
+
+#define e_s_s_ESS1688RESET	0x6
+#define e_s_s_ESS1688READ	0xa
+#define e_s_s_ESS1688WRITE	0xc
+#define e_s_s_ESS1688COMMAND	0xc
+#define e_s_s_ESS1688STATUS	0xc
+#define e_s_s_ESS1688DATA_AVAIL	0xe
+#define e_s_s_ESS1688DATA_AVAIL_16 0xf
+#define e_s_s_ESS1688MIXER_ADDR	0x4
+#define e_s_s_ESS1688MIXER_DATA	0x5
+#define e_s_s_ESS1688OPL3_LEFT	0x0
+#define e_s_s_ESS1688OPL3_RIGHT	0x2
+#define e_s_s_ESS1688OPL3_BOTH	0x8
+#define e_s_s_ESS1688ENABLE0	0x0
+#define e_s_s_ESS1688ENABLE1	0x9
+#define e_s_s_ESS1688ENABLE2	0xb
+#define e_s_s_ESS1688INIT1	0x7
+
+#define ES1688_DSP_CMD_DMAOFF	0xd0
+#define ES1688_DSP_CMD_SPKON	0xd1
+#define ES1688_DSP_CMD_SPKOFF	0xd3
+#define ES1688_DSP_CMD_DMAON	0xd4
+
+#define ES1688_PCM_DEV		0x14
+#define ES1688_MIC_DEV		0x1a
+#define ES1688_REC_DEV		0x1c
+#define ES1688_MASTER_DEV	0x32
+#define ES1688_FM_DEV		0x36
+#define ES1688_CD_DEV		0x38
+#define ES1688_AUX_DEV		0x3a
+#define ES1688_SPEAKER_DEV	0x3c
+#define ES1688_LINE_DEV		0x3e
+#define ES1688_RECLEV_DEV	0xb4
+
+#define ES1688_MIXS_MASK	0x17
+#define ES1688_MIXS_MIC		0x00
+#define ES1688_MIXS_MIC_MASTER	0x01
+#define ES1688_MIXS_CD		0x02
+#define ES1688_MIXS_AOUT	0x03
+#define ES1688_MIXS_MIC1	0x04
+#define ES1688_MIXS_REC_MIX	0x05
+#define ES1688_MIXS_LINE	0x06
+#define ES1688_MIXS_MASTER	0x07
+#define ES1688_MIXS_MUTE	0x10
+
+/*
+
+ */
+
+void snd_es1688_mixer_write(es1688_t *chip, unsigned char reg, unsigned char data);
+
+int snd_es1688_create(snd_card_t * card,
+		      unsigned long port,
+		      unsigned long mpu_port,
+		      int irq,
+		      int mpu_irq,
+		      int dma8,
+		      unsigned short hardware,
+		      es1688_t ** rchip);
+int snd_es1688_pcm(es1688_t *chip, int device, snd_pcm_t ** rpcm);
+int snd_es1688_mixer(es1688_t *chip);
+
+#endif /* __SOUND_ES1688_H */
