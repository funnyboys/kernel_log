commit 0812a08ac8d054efc6cf2895d3b0e82c8731f8e9
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri May 15 09:48:02 2020 +0900

    ASoC: cleanup dai / component active code
    
    No one is using dai->active, snd_soc_component_is_active().
    Let's remove these.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Link: https://lore.kernel.org/r/87imgy58hp.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc-component.h b/include/sound/soc-component.h
index f39e1084850e..5663891148e3 100644
--- a/include/sound/soc-component.h
+++ b/include/sound/soc-component.h
@@ -389,12 +389,6 @@ static inline void *snd_soc_component_get_drvdata(struct snd_soc_component *c)
 	return dev_get_drvdata(c->dev);
 }
 
-static inline bool snd_soc_component_is_active(
-	struct snd_soc_component *component)
-{
-	return component->active != 0;
-}
-
 static inline unsigned int
 snd_soc_component_active(struct snd_soc_component *component)
 {

commit 488b2ca599f96d46d4a4d730845a247328cb6a28
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri May 15 09:46:42 2020 +0900

    ASoC: soc-component: add snd_soc_component_active()
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Link: https://lore.kernel.org/r/875zcy6n4d.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc-component.h b/include/sound/soc-component.h
index 864983b09846..f39e1084850e 100644
--- a/include/sound/soc-component.h
+++ b/include/sound/soc-component.h
@@ -395,6 +395,12 @@ static inline bool snd_soc_component_is_active(
 	return component->active != 0;
 }
 
+static inline unsigned int
+snd_soc_component_active(struct snd_soc_component *component)
+{
+	return component->active;
+}
+
 /* component pin */
 int snd_soc_component_enable_pin(struct snd_soc_component *component,
 				 const char *pin);

commit e7cbe528391ab6660f747095efb6ee1542e4f205
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Apr 20 16:10:15 2020 +0900

    ASoC: soc-compress: remove snd_compr_ops
    
    snd_compr_ops couldn't care called component,
    but now we can care it via snd_compress_ops.
    All drivers switched to it.
    This patch removes snd_compr_ops.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Tested-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Reviewed-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Link: https://lore.kernel.org/r/87lfmqvdig.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc-component.h b/include/sound/soc-component.h
index 9122b11f51e9..864983b09846 100644
--- a/include/sound/soc-component.h
+++ b/include/sound/soc-component.h
@@ -146,7 +146,6 @@ struct snd_soc_component_driver {
 		    struct snd_pcm_substream *substream,
 		    struct vm_area_struct *vma);
 
-	const struct snd_compr_ops *compr_ops; /* remove me */
 	const struct snd_compress_ops *compress_ops;
 
 	/* probe ordering - for components with runtime dependencies */

commit c6cb522c1461eee41f086839bd3c9cb622cd26ca
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Apr 20 16:07:50 2020 +0900

    ASoC: soc-compress: add snd_compress_ops
    
    Current snd_soc_component_driver has compr_ops, and each driver can
    have callback via it. But, it is mainly created for ALSA, thus, it
    doesn't have "component" as parameter.
    Thus, each callback can't know it is called for which component.
    Each callback currently is getting "component" by using
    snd_soc_rtdcom_lookup() with driver name.
    
            --- ALSA SoC  ---
            ...
            if (component->driver->compr_ops &&
                component->driver->compr_ops->open)
    =>              return component->driver->compr_ops->open(stream);
            ...
    
            --- driver ---
            static int xxx_open(struct snd_compr_stream *stream)
            {
                    struct snd_soc_pcm_runtime *rtd = stream->private_data;
    =>              struct snd_soc_component *component = snd_soc_rtdcom_lookup(..);
                    ...
            }
    
    It works today, but, will not work in the future if we support multi
    CPU/Codec/Platform, because 1 rtd might have multiple same driver
    name component.
    
    To solve this issue, each callback need to be called with component.
    We already have many component driver callbacks.
    This patch adds new snd_compress_ops, and call it with "component".
    
            --- ALSA SoC  ---
            ...
            if (component->driver->compress_ops->open)
    =>              return component->driver->compress_ops->open(
                            component, substream);
                            ~~~~~~~~~
            ...
    
            --- driver ---
            static int xxx_open(struct snd_soc_component *component,
                                struct snd_compr_stream *stream)
            {
    =>              /* it don't need to use snd_soc_rtdcom_lookup() */
                    ...
            }
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Tested-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Reviewed-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Link: https://lore.kernel.org/r/87v9luvdmh.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc-component.h b/include/sound/soc-component.h
index 154d02fbbfed..9122b11f51e9 100644
--- a/include/sound/soc-component.h
+++ b/include/sound/soc-component.h
@@ -25,6 +25,44 @@
 	     order++)
 
 /* component interface */
+struct snd_compress_ops {
+	int (*open)(struct snd_soc_component *component,
+		    struct snd_compr_stream *stream);
+	int (*free)(struct snd_soc_component *component,
+		    struct snd_compr_stream *stream);
+	int (*set_params)(struct snd_soc_component *component,
+			  struct snd_compr_stream *stream,
+			  struct snd_compr_params *params);
+	int (*get_params)(struct snd_soc_component *component,
+			  struct snd_compr_stream *stream,
+			  struct snd_codec *params);
+	int (*set_metadata)(struct snd_soc_component *component,
+			    struct snd_compr_stream *stream,
+			    struct snd_compr_metadata *metadata);
+	int (*get_metadata)(struct snd_soc_component *component,
+			    struct snd_compr_stream *stream,
+			    struct snd_compr_metadata *metadata);
+	int (*trigger)(struct snd_soc_component *component,
+		       struct snd_compr_stream *stream, int cmd);
+	int (*pointer)(struct snd_soc_component *component,
+		       struct snd_compr_stream *stream,
+		       struct snd_compr_tstamp *tstamp);
+	int (*copy)(struct snd_soc_component *component,
+		    struct snd_compr_stream *stream, char __user *buf,
+		    size_t count);
+	int (*mmap)(struct snd_soc_component *component,
+		    struct snd_compr_stream *stream,
+		    struct vm_area_struct *vma);
+	int (*ack)(struct snd_soc_component *component,
+		   struct snd_compr_stream *stream, size_t bytes);
+	int (*get_caps)(struct snd_soc_component *component,
+			struct snd_compr_stream *stream,
+			struct snd_compr_caps *caps);
+	int (*get_codec_caps)(struct snd_soc_component *component,
+			      struct snd_compr_stream *stream,
+			      struct snd_compr_codec_caps *codec);
+};
+
 struct snd_soc_component_driver {
 	const char *name;
 
@@ -108,7 +146,8 @@ struct snd_soc_component_driver {
 		    struct snd_pcm_substream *substream,
 		    struct vm_area_struct *vma);
 
-	const struct snd_compr_ops *compr_ops;
+	const struct snd_compr_ops *compr_ops; /* remove me */
+	const struct snd_compress_ops *compress_ops;
 
 	/* probe ordering - for components with runtime dependencies */
 	int probe_order;

commit fcae40c99fb3d09f4407f549a7f17761abe5e1bc
Author: Baolin Wang <baolin.wang@linaro.org>
Date:   Tue Apr 24 20:06:08 2018 +0800

    ALSA: Replace timespec with timespec64
    
    Since timespec is not year 2038 safe on 32bit system, and we need to
    convert all timespec variables to timespec64 type for sound subsystem.
    
    This patch is used to do preparation for following patches, that will
    convert all structures defined in uapi/sound/asound.h to use 64-bit
    time_t.
    
    Signed-off-by: Baolin Wang <baolin.wang@linaro.org>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>

diff --git a/include/sound/soc-component.h b/include/sound/soc-component.h
index 506f72a6b2c2..154d02fbbfed 100644
--- a/include/sound/soc-component.h
+++ b/include/sound/soc-component.h
@@ -93,8 +93,8 @@ struct snd_soc_component_driver {
 	snd_pcm_uframes_t (*pointer)(struct snd_soc_component *component,
 				     struct snd_pcm_substream *substream);
 	int (*get_time_info)(struct snd_soc_component *component,
-		struct snd_pcm_substream *substream, struct timespec *system_ts,
-		struct timespec *audio_ts,
+		struct snd_pcm_substream *substream, struct timespec64 *system_ts,
+		struct timespec64 *audio_ts,
 		struct snd_pcm_audio_tstamp_config *audio_tstamp_config,
 		struct snd_pcm_audio_tstamp_report *audio_tstamp_report);
 	int (*copy_user)(struct snd_soc_component *component,

commit 09578eacaaa44149738267083ccc050990409f86
Merge: c6b6fc206586 8c4d2a0bfbd2
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Nov 25 14:27:33 2019 +0100

    Merge tag 'asoc-v5.5-2' of https://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound into for-linus
    
    ASoC: More updates for v5.5
    
    Some more development work for v5.5.  Highlights include:
    
     - More cleanups from Morimoto-san.
     - Trigger word detection for RT5677.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 1e5ddb6ba73894e6186e6379dde870979852af6d
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Nov 21 20:07:09 2019 +0100

    ASoC: component: Add sync_stop PCM ops
    
    Add the support of the new PCM sync_stop ops in ASoC component.
    It's optional and can be NULL unless you need the sync operation.
    
    Acked-by: Mark Brown <broonie@kernel.org>
    Link: https://lore.kernel.org/r/20191121190709.29121-3-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/include/sound/soc-component.h b/include/sound/soc-component.h
index 6aa3ecb7b6d3..d9dc8bcc96d0 100644
--- a/include/sound/soc-component.h
+++ b/include/sound/soc-component.h
@@ -88,6 +88,8 @@ struct snd_soc_component_driver {
 		       struct snd_pcm_substream *substream);
 	int (*trigger)(struct snd_soc_component *component,
 		       struct snd_pcm_substream *substream, int cmd);
+	int (*sync_stop)(struct snd_soc_component *component,
+			 struct snd_pcm_substream *substream);
 	snd_pcm_uframes_t (*pointer)(struct snd_soc_component *component,
 				     struct snd_pcm_substream *substream);
 	int (*get_time_info)(struct snd_soc_component *component,
@@ -405,6 +407,7 @@ int snd_soc_component_of_xlate_dai_name(struct snd_soc_component *component,
 int snd_soc_pcm_component_pointer(struct snd_pcm_substream *substream);
 int snd_soc_pcm_component_ioctl(struct snd_pcm_substream *substream,
 				unsigned int cmd, void *arg);
+int snd_soc_pcm_component_sync_stop(struct snd_pcm_substream *substream);
 int snd_soc_pcm_component_copy_user(struct snd_pcm_substream *substream,
 				    int channel, unsigned long pos,
 				    void __user *buf, unsigned long bytes);

commit b2b2afbb48eac7215f951a8a462aa6837e0d495f
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Nov 18 10:50:32 2019 +0900

    ASoC: soc-component: tidyup snd_soc_pcm_component_new/free() parameter
    
    This patch uses rtd instead of pcm at snd_soc_pcm_component_new/free()
    parameter.
    This is prepare for dai_link remove bug fix on topology.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/87pnhqx89j.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc-component.h b/include/sound/soc-component.h
index 6aa3ecb7b6d3..f8fadf0e696a 100644
--- a/include/sound/soc-component.h
+++ b/include/sound/soc-component.h
@@ -412,7 +412,7 @@ struct page *snd_soc_pcm_component_page(struct snd_pcm_substream *substream,
 					unsigned long offset);
 int snd_soc_pcm_component_mmap(struct snd_pcm_substream *substream,
 			       struct vm_area_struct *vma);
-int snd_soc_pcm_component_new(struct snd_pcm *pcm);
-void snd_soc_pcm_component_free(struct snd_pcm *pcm);
+int snd_soc_pcm_component_new(struct snd_soc_pcm_runtime *rtd);
+void snd_soc_pcm_component_free(struct snd_soc_pcm_runtime *rtd);
 
 #endif /* __SOC_COMPONENT_H */

commit e9067bb502787869dabe385727baff233024097b
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Wed Oct 2 14:35:13 2019 +0900

    ASoC: soc-component: remove snd_pcm_ops from component driver
    
    No driver is using snd_pcm_ops on component driver.
    This patch removes it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/8736gb90by.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc-component.h b/include/sound/soc-component.h
index aa2e2cbc1ee5..6aa3ecb7b6d3 100644
--- a/include/sound/soc-component.h
+++ b/include/sound/soc-component.h
@@ -46,11 +46,7 @@ struct snd_soc_component_driver {
 	int (*write)(struct snd_soc_component *component,
 		     unsigned int reg, unsigned int val);
 
-	/* remove me */
 	/* pcm creation and destruction */
-	int (*pcm_new)(struct snd_soc_pcm_runtime *rtd);
-	void (*pcm_free)(struct snd_pcm *pcm);
-
 	int (*pcm_construct)(struct snd_soc_component *component,
 			     struct snd_soc_pcm_runtime *rtd);
 	void (*pcm_destruct)(struct snd_soc_component *component,
@@ -110,7 +106,6 @@ struct snd_soc_component_driver {
 		    struct snd_pcm_substream *substream,
 		    struct vm_area_struct *vma);
 
-	const struct snd_pcm_ops *ops;
 	const struct snd_compr_ops *compr_ops;
 
 	/* probe ordering - for components with runtime dependencies */

commit c64bfc9066007962fca1b9b2d426b1efc171cac9
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Wed Oct 2 14:30:59 2019 +0900

    ASoC: soc-core: add new pcm_construct/pcm_destruct
    
    Current snd_soc_component_driver has pcm_new/pcm_free, but,
    it doesn't have "component" at parameter.
    Thus, each callback can't know it is called for which component.
    Each callback currently is getting "component" by using
    snd_soc_rtdcom_lookup() with driver name.
    
    It works today, but, will not work in the future if we support multi
    CPU/Codec/Platform, because 1 rtd might have multiple same driver
    name component.
    
    To solve this issue, each callback need to be called with component.
    This patch adds new pcm_construct/pcm_destruct with "component"
    parameter.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/87sgobaf3g.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc-component.h b/include/sound/soc-component.h
index a6a3b696d5b0..aa2e2cbc1ee5 100644
--- a/include/sound/soc-component.h
+++ b/include/sound/soc-component.h
@@ -46,10 +46,16 @@ struct snd_soc_component_driver {
 	int (*write)(struct snd_soc_component *component,
 		     unsigned int reg, unsigned int val);
 
+	/* remove me */
 	/* pcm creation and destruction */
 	int (*pcm_new)(struct snd_soc_pcm_runtime *rtd);
 	void (*pcm_free)(struct snd_pcm *pcm);
 
+	int (*pcm_construct)(struct snd_soc_component *component,
+			     struct snd_soc_pcm_runtime *rtd);
+	void (*pcm_destruct)(struct snd_soc_component *component,
+			     struct snd_pcm *pcm);
+
 	/* component wide operations */
 	int (*set_sysclk)(struct snd_soc_component *component,
 			  int clk_id, int source, unsigned int freq, int dir);

commit e2cb4a14541dba3587bb78e0f62da27a0e1ad399
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Wed Oct 2 14:30:48 2019 +0900

    ASoC: soc-core: merge snd_pcm_ops member to component driver
    
    Current snd_soc_component_driver has snd_pcm_ops, and each driver can
    have callback via it (1).
    But, it is mainly created for ALSA, thus, it doesn't have "component"
    as parameter for ALSA SoC (1)(2).
    Thus, each callback can't know it is called for which component.
    Thus, each callback currently is getting "component" by using
    snd_soc_rtdcom_lookup() with driver name (3).
    
            --- ALSA SoC  ---
            ...
            if (component->driver->ops &&
                component->driver->ops->open)
    (1)             return component->driver->ops->open(substream);
            ...
    
            --- driver ---
    (2)     static int xxx_open(struct snd_pcm_substream *substream)
            {
                    struct snd_soc_pcm_runtime *rtd = substream->private_data;
    (3)             struct snd_soc_component *component = snd_soc_rtdcom_lookup(..);
                    ...
            }
    
    It works today, but, will not work in the future if we support multi
    CPU/Codec/Platform, because 1 rtd might have multiple components which
    have same driver name.
    
    To solve this issue, each callback needs to be called with component.
    We already have many component driver callback.
    This patch copies each snd_pcm_ops member under component driver,
    and having "component" as parameter.
    
            --- ALSA SoC  ---
            ...
            if (component->driver->open)
    =>              return component->driver->open(component, substream);
            ...
    
            --- driver ---
    =>      static int xxx_open(struct snd_soc_component *component,
                                struct snd_pcm_substream *substream)
            {
                    ...
            }
    
    *Note*
    
    Only Intel skl-pcm has .get_time_info implementation, but ALSA SoC
    framework doesn't call it so far.
    To keep its implementation, this patch keeps .get_time_info,
    but it is still not called.
    Intel guy need to support it in the future.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/87tv8raf3r.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc-component.h b/include/sound/soc-component.h
index 1a832695f69c..a6a3b696d5b0 100644
--- a/include/sound/soc-component.h
+++ b/include/sound/soc-component.h
@@ -70,6 +70,40 @@ struct snd_soc_component_driver {
 	int (*set_bias_level)(struct snd_soc_component *component,
 			      enum snd_soc_bias_level level);
 
+	int (*open)(struct snd_soc_component *component,
+		    struct snd_pcm_substream *substream);
+	int (*close)(struct snd_soc_component *component,
+		     struct snd_pcm_substream *substream);
+	int (*ioctl)(struct snd_soc_component *component,
+		     struct snd_pcm_substream *substream,
+		     unsigned int cmd, void *arg);
+	int (*hw_params)(struct snd_soc_component *component,
+			 struct snd_pcm_substream *substream,
+			 struct snd_pcm_hw_params *params);
+	int (*hw_free)(struct snd_soc_component *component,
+		       struct snd_pcm_substream *substream);
+	int (*prepare)(struct snd_soc_component *component,
+		       struct snd_pcm_substream *substream);
+	int (*trigger)(struct snd_soc_component *component,
+		       struct snd_pcm_substream *substream, int cmd);
+	snd_pcm_uframes_t (*pointer)(struct snd_soc_component *component,
+				     struct snd_pcm_substream *substream);
+	int (*get_time_info)(struct snd_soc_component *component,
+		struct snd_pcm_substream *substream, struct timespec *system_ts,
+		struct timespec *audio_ts,
+		struct snd_pcm_audio_tstamp_config *audio_tstamp_config,
+		struct snd_pcm_audio_tstamp_report *audio_tstamp_report);
+	int (*copy_user)(struct snd_soc_component *component,
+			 struct snd_pcm_substream *substream, int channel,
+			 unsigned long pos, void __user *buf,
+			 unsigned long bytes);
+	struct page *(*page)(struct snd_soc_component *component,
+			     struct snd_pcm_substream *substream,
+			     unsigned long offset);
+	int (*mmap)(struct snd_soc_component *component,
+		    struct snd_pcm_substream *substream,
+		    struct vm_area_struct *vma);
+
 	const struct snd_pcm_ops *ops;
 	const struct snd_compr_ops *compr_ops;
 

commit fd5d3907197c60464672c8a32edeea66e01f6222
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Sep 20 11:01:42 2019 +0900

    ASoC: soc-component.h: remove GPL explanation from header
    
    soc-component.h already has SPDX License, thus, GPL explanation
    is not needed. This patch removes it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/8736grafp5.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc-component.h b/include/sound/soc-component.h
index 5d80b2eef525..1a832695f69c 100644
--- a/include/sound/soc-component.h
+++ b/include/sound/soc-component.h
@@ -3,10 +3,6 @@
  * soc-component.h
  *
  * Copyright (c) 2019 Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License version 2 as
- * published by the Free Software Foundation.
  */
 #ifndef __SOC_COMPONENT_H
 #define __SOC_COMPONENT_H

commit 79776da0989733a5bac0a1e635e3a284c3f5c745
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Jul 26 13:52:12 2019 +0900

    ASoC: soc-component: add snd_soc_pcm_component_pcm_free()
    
    Current ALSA SoC is directly using component->driver->xxx,
    thus, the code nested deeply, and it makes code difficult to read,
    and is not good for encapsulation.
    
    We want to implement component related function at soc-component.c,
    but, some of them need to care whole snd_soc_pcm_runtime (= rtd)
    connected component.
    
    Let's call component related function which need to care with
    for_each_rtdcom() loop as snd_soc_pcm_component_xxx().
    This patch adds new snd_soc_pcm_component_pcm_free() and use it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/87k1c54czu.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc-component.h b/include/sound/soc-component.h
index d3048ad06582..5d80b2eef525 100644
--- a/include/sound/soc-component.h
+++ b/include/sound/soc-component.h
@@ -382,5 +382,6 @@ struct page *snd_soc_pcm_component_page(struct snd_pcm_substream *substream,
 int snd_soc_pcm_component_mmap(struct snd_pcm_substream *substream,
 			       struct vm_area_struct *vma);
 int snd_soc_pcm_component_new(struct snd_pcm *pcm);
+void snd_soc_pcm_component_free(struct snd_pcm *pcm);
 
 #endif /* __SOC_COMPONENT_H */

commit 7484291e9b7564af65b2581dcdebeeaf98bc86d0
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Jul 26 13:52:08 2019 +0900

    ASoC: soc-component: add snd_soc_pcm_component_pcm_new()
    
    Current ALSA SoC is directly using component->driver->xxx,
    thus, the code nested deeply, and it makes code difficult to read,
    and is not good for encapsulation.
    
    We want to implement component related function at soc-component.c,
    but, some of them need to care whole snd_soc_pcm_runtime (= rtd)
    connected component.
    
    Let's call component related function which need to care with
    for_each_rtdcom() loop as snd_soc_pcm_component_xxx().
    This patch adds new snd_soc_pcm_component_pcm() and use it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/87lfwl4czy.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc-component.h b/include/sound/soc-component.h
index dd1ea5d71998..d3048ad06582 100644
--- a/include/sound/soc-component.h
+++ b/include/sound/soc-component.h
@@ -381,5 +381,6 @@ struct page *snd_soc_pcm_component_page(struct snd_pcm_substream *substream,
 					unsigned long offset);
 int snd_soc_pcm_component_mmap(struct snd_pcm_substream *substream,
 			       struct vm_area_struct *vma);
+int snd_soc_pcm_component_new(struct snd_pcm *pcm);
 
 #endif /* __SOC_COMPONENT_H */

commit 205875e1a12ef9c61e939db9ded90fe3f6352e75
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Jul 26 13:52:04 2019 +0900

    ASoC: soc-component: add snd_soc_pcm_component_mmap()
    
    Current ALSA SoC is directly using component->driver->ops->xxx,
    thus, the code nested deeply, and it makes code difficult to read,
    and is not good for encapsulation.
    
    We want to implement component related function at soc-component.c,
    but, some of them need to care whole snd_soc_pcm_runtime (= rtd)
    connected component.
    
    Let's call component related function which need to care with
    for_each_rtdcom() loop as snd_soc_pcm_component_xxx().
    This patch adds new snd_soc_pcm_component_mmap() and use it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/87muh14d02.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc-component.h b/include/sound/soc-component.h
index 4cab257962a6..dd1ea5d71998 100644
--- a/include/sound/soc-component.h
+++ b/include/sound/soc-component.h
@@ -379,5 +379,7 @@ int snd_soc_pcm_component_copy_user(struct snd_pcm_substream *substream,
 				    void __user *buf, unsigned long bytes);
 struct page *snd_soc_pcm_component_page(struct snd_pcm_substream *substream,
 					unsigned long offset);
+int snd_soc_pcm_component_mmap(struct snd_pcm_substream *substream,
+			       struct vm_area_struct *vma);
 
 #endif /* __SOC_COMPONENT_H */

commit 9c712e4f57229081e837d593fc1e4183b068a41c
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Jul 26 13:52:00 2019 +0900

    ASoC: soc-component: add snd_soc_pcm_component_page()
    
    Current ALSA SoC is directly using component->driver->ops->xxx,
    thus, the code nested deeply, and it makes code difficult to read,
    and is not good for encapsulation.
    
    We want to implement component related function at soc-component.c,
    but, some of them need to care whole snd_soc_pcm_runtime (= rtd)
    connected component.
    
    Let's call component related function which need to care with
    for_each_rtdcom() loop as snd_soc_pcm_component_xxx().
    This patch adds new snd_soc_pcm_component_page() and use it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/87o91h4d06.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc-component.h b/include/sound/soc-component.h
index 6b95d2467053..4cab257962a6 100644
--- a/include/sound/soc-component.h
+++ b/include/sound/soc-component.h
@@ -377,5 +377,7 @@ int snd_soc_pcm_component_ioctl(struct snd_pcm_substream *substream,
 int snd_soc_pcm_component_copy_user(struct snd_pcm_substream *substream,
 				    int channel, unsigned long pos,
 				    void __user *buf, unsigned long bytes);
+struct page *snd_soc_pcm_component_page(struct snd_pcm_substream *substream,
+					unsigned long offset);
 
 #endif /* __SOC_COMPONENT_H */

commit 82d81f5cced36e480b581ae51c595e2deb9f2d56
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Jul 26 13:51:56 2019 +0900

    ASoC: soc-component: add snd_soc_pcm_component_copy_user()
    
    Current ALSA SoC is directly using component->driver->ops->xxx,
    thus, the code nested deeply, and it makes code difficult to read,
    and is not good for encapsulation.
    
    We want to implement component related function at soc-component.c,
    but, some of them need to care whole snd_soc_pcm_runtime (= rtd)
    connected component.
    
    Let's call component related function which need to care with
    for_each_rtdcom() loop as snd_soc_pcm_component_xxx().
    This patch adds new snd_soc_pcm_component_copy_user() and use it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/87pnlx4d0a.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc-component.h b/include/sound/soc-component.h
index 5db4e5d028d0..6b95d2467053 100644
--- a/include/sound/soc-component.h
+++ b/include/sound/soc-component.h
@@ -374,5 +374,8 @@ int snd_soc_component_of_xlate_dai_name(struct snd_soc_component *component,
 int snd_soc_pcm_component_pointer(struct snd_pcm_substream *substream);
 int snd_soc_pcm_component_ioctl(struct snd_pcm_substream *substream,
 				unsigned int cmd, void *arg);
+int snd_soc_pcm_component_copy_user(struct snd_pcm_substream *substream,
+				    int channel, unsigned long pos,
+				    void __user *buf, unsigned long bytes);
 
 #endif /* __SOC_COMPONENT_H */

commit 96a47908d8769479f5217bf3f432ccdc06a29747
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Jul 26 13:51:51 2019 +0900

    ASoC: soc-component: add snd_soc_pcm_component_ioctrl()
    
    Current ALSA SoC is directly using component->driver->ops->xxx,
    thus, the code nested deeply, and it makes code difficult to read,
    and is not good for encapsulation.
    
    We want to implement component related function at soc-component.c,
    but, some of them need to care whole snd_soc_pcm_runtime (= rtd)
    connected component.
    
    Let's call component related function which need to care with
    for_each_rtdcom() loop as snd_soc_pcm_component_xxx().
    This patch adds new snd_soc_pcm_component_ioctrl() and use it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/87r26d4d0f.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc-component.h b/include/sound/soc-component.h
index 38b4be1d99f5..5db4e5d028d0 100644
--- a/include/sound/soc-component.h
+++ b/include/sound/soc-component.h
@@ -372,5 +372,7 @@ int snd_soc_component_of_xlate_dai_name(struct snd_soc_component *component,
 					const char **dai_name);
 
 int snd_soc_pcm_component_pointer(struct snd_pcm_substream *substream);
+int snd_soc_pcm_component_ioctl(struct snd_pcm_substream *substream,
+				unsigned int cmd, void *arg);
 
 #endif /* __SOC_COMPONENT_H */

commit 0035e2565b93e0902a06320ba1716bc1ddd753b3
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Jul 26 13:51:47 2019 +0900

    ASoC: soc-component: add snd_soc_pcm_component_pointer()
    
    Current ALSA SoC is directly using component->driver->ops->xxx,
    thus, the code nested deeply, and it makes code difficult to read,
    and is not good for encapsulation.
    
    We want to implement component related function at soc-component.c,
    but, some of them need to care whole snd_soc_pcm_runtime (= rtd)
    connected component.
    
    Let's call component related function which need to care with
    for_each_rtdcom() loop as snd_soc_pcm_component_xxx().
    This patch adds new snd_soc_pcm_component_pointer() and use it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/87sgqt4d0j.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc-component.h b/include/sound/soc-component.h
index 2aaf12bbbed0..38b4be1d99f5 100644
--- a/include/sound/soc-component.h
+++ b/include/sound/soc-component.h
@@ -371,4 +371,6 @@ int snd_soc_component_of_xlate_dai_name(struct snd_soc_component *component,
 					struct of_phandle_args *args,
 					const char **dai_name);
 
+int snd_soc_pcm_component_pointer(struct snd_pcm_substream *substream);
+
 #endif /* __SOC_COMPONENT_H */

commit 7951b14611851bdae18e9bca18015b1d84731d0d
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Jul 26 13:51:43 2019 +0900

    ASoC: soc-component: move snd_soc_component_set_bias_level()
    
    Current soc-dapm / soc-core are using a long way round to call
    .set_bias_level.
    
            if (driver->set_bias_level)
                    dapm->set_bias_level = ...;
            ...
            if (dapm->set_bias_level)
                    ret = dapm->set_bias_level(...);
    
    We can directly call it via driver->set_bias_level.
    One note here is that both Card and Component have dapm,
    but, Card's dapm doesn't have dapm->component.
    We need to check it.
    
    This patch moves snd_soc_component_set_bias_level() to soc-component.c
    and updates parameters.
    dapm->set_bias_level is no longer needed
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/87tvb94d0n.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc-component.h b/include/sound/soc-component.h
index 1f84f04e2670..2aaf12bbbed0 100644
--- a/include/sound/soc-component.h
+++ b/include/sound/soc-component.h
@@ -285,6 +285,8 @@ void snd_soc_component_seq_notifier(struct snd_soc_component *component,
 				    enum snd_soc_dapm_type type, int subseq);
 int snd_soc_component_stream_event(struct snd_soc_component *component,
 				   int event);
+int snd_soc_component_set_bias_level(struct snd_soc_component *component,
+				     enum snd_soc_bias_level level);
 
 #ifdef CONFIG_REGMAP
 void snd_soc_component_init_regmap(struct snd_soc_component *component,

commit 8e2a990d76aced95c6f01c2d67d8835c86f0ca67
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Jul 26 13:51:39 2019 +0900

    ASoC: soc-component: move snd_soc_component_stream_event()
    
    Current soc-dapm / soc-core are using a long way round to call
    .stream_event.
    
            if (driver->stream_event)
                    dapm->stream_event = ...;
            ...
            if (dapm->stream_event)
                    ret = dapm->stream_event(...);
    
    We can directly call it via driver->stream_event.
    One note here is that both Card and Component have dapm,
    but, Card's dapm doesn't have dapm->component.
    We need to check it.
    
    This patch moves snd_soc_component_stream_event() to soc-component.c
    and updates parameters.
    dapm->stream_event is no longer needed
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/87v9vp4d0r.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc-component.h b/include/sound/soc-component.h
index 7ac903c1e33f..1f84f04e2670 100644
--- a/include/sound/soc-component.h
+++ b/include/sound/soc-component.h
@@ -283,6 +283,8 @@ int snd_soc_component_set_jack(struct snd_soc_component *component,
 
 void snd_soc_component_seq_notifier(struct snd_soc_component *component,
 				    enum snd_soc_dapm_type type, int subseq);
+int snd_soc_component_stream_event(struct snd_soc_component *component,
+				   int event);
 
 #ifdef CONFIG_REGMAP
 void snd_soc_component_init_regmap(struct snd_soc_component *component,

commit 9d415fbf773f162a5c274e671741c6fa94b74287
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Jul 26 13:51:35 2019 +0900

    ASoC: soc-component: move snd_soc_component_seq_notifier()
    
    Current soc-dapm / soc-core are using a long way round to call
    .seq_notifier.
    
            if (driver->seq_notifier)
                    dapm->seq_notifier = ...;
            ...
            if (dapm->seq_notifier)
                    ret = dapm->seq_notifier(...);
    
    We can directly call it via driver->seq_notifier.
    One note here is that both Card and Component have dapm,
    but, Card's dapm doesn't have dapm->component.
    We need to check it.
    
    This patch moves snd_soc_component_seq_notifier() to soc-component.c,
    and updates parameters.
    dapm->seq_notifier is no longer needed
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/87wog54d0v.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc-component.h b/include/sound/soc-component.h
index 3ed2c39e45c2..7ac903c1e33f 100644
--- a/include/sound/soc-component.h
+++ b/include/sound/soc-component.h
@@ -281,6 +281,9 @@ int snd_soc_component_set_pll(struct snd_soc_component *component, int pll_id,
 int snd_soc_component_set_jack(struct snd_soc_component *component,
 			       struct snd_soc_jack *jack, void *data);
 
+void snd_soc_component_seq_notifier(struct snd_soc_component *component,
+				    enum snd_soc_dapm_type type, int subseq);
+
 #ifdef CONFIG_REGMAP
 void snd_soc_component_init_regmap(struct snd_soc_component *component,
 				   struct regmap *regmap);

commit a2a341752558cc67d6fe5c8ada7c16f9c3690f89
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Jul 26 13:51:31 2019 +0900

    ASoC: soc-component: add snd_soc_component_of_xlate_dai_name()
    
    Current ALSA SoC is directly using component->driver->xxx,
    thus, it is deep nested, and makes code difficult to read,
    and is not good for encapsulation.
    This patch adds new snd_soc_component_of_xlate_dai_name() and use it
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/87y30l4d0z.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc-component.h b/include/sound/soc-component.h
index 3f4acd337c4a..3ed2c39e45c2 100644
--- a/include/sound/soc-component.h
+++ b/include/sound/soc-component.h
@@ -360,5 +360,8 @@ int snd_soc_component_probe(struct snd_soc_component *component);
 void snd_soc_component_remove(struct snd_soc_component *component);
 int snd_soc_component_of_xlate_dai_id(struct snd_soc_component *component,
 				      struct device_node *ep);
+int snd_soc_component_of_xlate_dai_name(struct snd_soc_component *component,
+					struct of_phandle_args *args,
+					const char **dai_name);
 
 #endif /* __SOC_COMPONENT_H */

commit 2c7b1704819435d188c7697c6815f788bf9e6200
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Jul 26 13:51:26 2019 +0900

    ASoC: soc-component: add snd_soc_component_of_xlate_dai_id()
    
    Current ALSA SoC is directly using component->driver->xxx,
    thus, it is deep nested, and makes code difficult to read,
    and is not good for encapsulation.
    This patch adds new snd_soc_component_of_xlate_dai_id() and use it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/87zhl14d14.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc-component.h b/include/sound/soc-component.h
index b8480d947901..3f4acd337c4a 100644
--- a/include/sound/soc-component.h
+++ b/include/sound/soc-component.h
@@ -358,5 +358,7 @@ void snd_soc_component_resume(struct snd_soc_component *component);
 int snd_soc_component_is_suspended(struct snd_soc_component *component);
 int snd_soc_component_probe(struct snd_soc_component *component);
 void snd_soc_component_remove(struct snd_soc_component *component);
+int snd_soc_component_of_xlate_dai_id(struct snd_soc_component *component,
+				      struct device_node *ep);
 
 #endif /* __SOC_COMPONENT_H */

commit 03b34dd7d87ce3493cb1837c9e59c3b3aac4724f
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Jul 26 13:51:22 2019 +0900

    ASoC: soc-component: add snd_soc_component_remove()
    
    Current ALSA SoC is directly using component->driver->xxx,
    thus, it is deep nested, and makes code difficult to read,
    and is not good for encapsulation.
    This patch adds new snd_soc_component_remove() and use it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/871ryd5rlo.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc-component.h b/include/sound/soc-component.h
index 34e774efcf69..b8480d947901 100644
--- a/include/sound/soc-component.h
+++ b/include/sound/soc-component.h
@@ -357,5 +357,6 @@ void snd_soc_component_suspend(struct snd_soc_component *component);
 void snd_soc_component_resume(struct snd_soc_component *component);
 int snd_soc_component_is_suspended(struct snd_soc_component *component);
 int snd_soc_component_probe(struct snd_soc_component *component);
+void snd_soc_component_remove(struct snd_soc_component *component);
 
 #endif /* __SOC_COMPONENT_H */

commit 08e837dd9e39bd3e25b1fa1a13f6ba44040e3f0d
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Jul 26 13:51:17 2019 +0900

    ASoC: soc-component: add snd_soc_component_probe()
    
    Current ALSA SoC is directly using component->driver->xxx,
    thus, it is deep nested, and makes code difficult to read,
    and is not good for encapsulation.
    This patch adds new snd_soc_component_probe() and use it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/8736it5rlt.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc-component.h b/include/sound/soc-component.h
index 9600dc4ca6b4..34e774efcf69 100644
--- a/include/sound/soc-component.h
+++ b/include/sound/soc-component.h
@@ -356,5 +356,6 @@ int snd_soc_component_trigger(struct snd_soc_component *component,
 void snd_soc_component_suspend(struct snd_soc_component *component);
 void snd_soc_component_resume(struct snd_soc_component *component);
 int snd_soc_component_is_suspended(struct snd_soc_component *component);
+int snd_soc_component_probe(struct snd_soc_component *component);
 
 #endif /* __SOC_COMPONENT_H */

commit e40fadbcef583808c11d2e86b8ac1c652731468e
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Jul 26 13:51:13 2019 +0900

    ASoC: soc-component: add snd_soc_component_is_suspended()
    
    Current ALSA SoC is directly using component->xxx,
    But, it is not good for encapsulation.
    This patch adds new snd_soc_component_is_suspended() and use it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/874l395rlx.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc-component.h b/include/sound/soc-component.h
index 1e3b70855ba7..9600dc4ca6b4 100644
--- a/include/sound/soc-component.h
+++ b/include/sound/soc-component.h
@@ -355,5 +355,6 @@ int snd_soc_component_trigger(struct snd_soc_component *component,
 			      int cmd);
 void snd_soc_component_suspend(struct snd_soc_component *component);
 void snd_soc_component_resume(struct snd_soc_component *component);
+int snd_soc_component_is_suspended(struct snd_soc_component *component);
 
 #endif /* __SOC_COMPONENT_H */

commit 9a840cbac77a90e8406296aaa132ebf2c84ed9e3
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Jul 26 13:51:08 2019 +0900

    ASoC: soc-component: add snd_soc_component_resume()
    
    Current ALSA SoC is directly using component->driver->xxx,
    thus, it is deep nested, and makes code difficult to read,
    and is not good for encapsulation.
    This patch adds new snd_soc_component_resume() and use it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/875znp5rm2.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc-component.h b/include/sound/soc-component.h
index cdb014f41fd1..1e3b70855ba7 100644
--- a/include/sound/soc-component.h
+++ b/include/sound/soc-component.h
@@ -354,5 +354,6 @@ int snd_soc_component_trigger(struct snd_soc_component *component,
 			      struct snd_pcm_substream *substream,
 			      int cmd);
 void snd_soc_component_suspend(struct snd_soc_component *component);
+void snd_soc_component_resume(struct snd_soc_component *component);
 
 #endif /* __SOC_COMPONENT_H */

commit 66c51573b89d0a5c1089139a2f0dd029a755c37d
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Jul 26 13:50:34 2019 +0900

    ASoC: soc-component: add snd_soc_component_suspend()
    
    Current ALSA SoC is directly using component->driver->xxx,
    thus, it is deep nested, and makes code difficult to read,
    and is not good for encapsulation.
    This patch adds new snd_soc_component_suspend() and use it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/877e855rn0.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc-component.h b/include/sound/soc-component.h
index 302e27a89d47..cdb014f41fd1 100644
--- a/include/sound/soc-component.h
+++ b/include/sound/soc-component.h
@@ -353,5 +353,6 @@ int snd_soc_component_hw_free(struct snd_soc_component *component,
 int snd_soc_component_trigger(struct snd_soc_component *component,
 			      struct snd_pcm_substream *substream,
 			      int cmd);
+void snd_soc_component_suspend(struct snd_soc_component *component);
 
 #endif /* __SOC_COMPONENT_H */

commit 5693d50c830272cb3c4a04d2ce4db502debd1259
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Jul 26 13:50:29 2019 +0900

    ASoC: soc-component: add snd_soc_component_trigger()
    
    Current ALSA SoC is directly using component->driver->ops->xxx,
    thus, it is deep nested, and makes code difficult to read,
    and is not good for encapsulation.
    This patch adds new snd_soc_component_trigger() and use it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/878ssl5rn5.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc-component.h b/include/sound/soc-component.h
index fbcd911ac25e..302e27a89d47 100644
--- a/include/sound/soc-component.h
+++ b/include/sound/soc-component.h
@@ -350,5 +350,8 @@ int snd_soc_component_hw_params(struct snd_soc_component *component,
 				struct snd_pcm_hw_params *params);
 int snd_soc_component_hw_free(struct snd_soc_component *component,
 			      struct snd_pcm_substream *substream);
+int snd_soc_component_trigger(struct snd_soc_component *component,
+			      struct snd_pcm_substream *substream,
+			      int cmd);
 
 #endif /* __SOC_COMPONENT_H */

commit eae7136aa2083699c69de5890fd6c32c501952b5
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Jul 26 13:50:24 2019 +0900

    ASoC: soc-component: add snd_soc_component_hw_free()
    
    Current ALSA SoC is directly using component->driver->ops->xxx,
    thus, it is deep nested, and makes code difficult to read,
    and is not good for encapsulation.
    This patch adds new snd_soc_component_hw_free() and use it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/87a7d15rna.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc-component.h b/include/sound/soc-component.h
index 778a6e7d352d..fbcd911ac25e 100644
--- a/include/sound/soc-component.h
+++ b/include/sound/soc-component.h
@@ -348,5 +348,7 @@ int snd_soc_component_prepare(struct snd_soc_component *component,
 int snd_soc_component_hw_params(struct snd_soc_component *component,
 				struct snd_pcm_substream *substream,
 				struct snd_pcm_hw_params *params);
+int snd_soc_component_hw_free(struct snd_soc_component *component,
+			      struct snd_pcm_substream *substream);
 
 #endif /* __SOC_COMPONENT_H */

commit 245c539a1206d74e8508a07550fb7c99d0817b8c
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Jul 26 13:50:19 2019 +0900

    ASoC: soc-component: add snd_soc_component_hw_params()
    
    Current ALSA SoC is directly using component->driver->ops->xxx,
    thus, it is deep nested, and makes code difficult to read,
    and is not good for encapsulation.
    This patch adds new snd_soc_component_hw_params() and use it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/87blxh5rnf.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc-component.h b/include/sound/soc-component.h
index ff8233014444..778a6e7d352d 100644
--- a/include/sound/soc-component.h
+++ b/include/sound/soc-component.h
@@ -345,5 +345,8 @@ int snd_soc_component_close(struct snd_soc_component *component,
 			    struct snd_pcm_substream *substream);
 int snd_soc_component_prepare(struct snd_soc_component *component,
 			      struct snd_pcm_substream *substream);
+int snd_soc_component_hw_params(struct snd_soc_component *component,
+				struct snd_pcm_substream *substream,
+				struct snd_pcm_hw_params *params);
 
 #endif /* __SOC_COMPONENT_H */

commit 6d53723380ed73a2ced648d6e92774b39e5af1bd
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Jul 26 13:50:13 2019 +0900

    ASoC: soc-component: add snd_soc_component_prepare()
    
    Current ALSA SoC is directly using component->driver->ops->xxx,
    thus, it is deep nested, and makes code difficult to read,
    and is not good for encapsulation.
    This patch adds new snd_soc_component_prepare() and use it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/87d0hx5rnm.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc-component.h b/include/sound/soc-component.h
index 8dacac953884..ff8233014444 100644
--- a/include/sound/soc-component.h
+++ b/include/sound/soc-component.h
@@ -343,5 +343,7 @@ int snd_soc_component_open(struct snd_soc_component *component,
 			   struct snd_pcm_substream *substream);
 int snd_soc_component_close(struct snd_soc_component *component,
 			    struct snd_pcm_substream *substream);
+int snd_soc_component_prepare(struct snd_soc_component *component,
+			      struct snd_pcm_substream *substream);
 
 #endif /* __SOC_COMPONENT_H */

commit 3672beb8cad6beb7b8c017514aef0f4f507debcf
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Jul 26 13:50:07 2019 +0900

    ASoC: soc-component: add snd_soc_component_close()
    
    Current ALSA SoC is directly using component->driver->ops->xxx,
    thus, it is deep nested, and makes code difficult to read,
    and is not good for encapsulation.
    This patch adds new snd_soc_component_close() and use it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/87ef2d5rnr.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc-component.h b/include/sound/soc-component.h
index 156b1a5b6ddd..8dacac953884 100644
--- a/include/sound/soc-component.h
+++ b/include/sound/soc-component.h
@@ -341,5 +341,7 @@ int snd_soc_component_force_enable_pin_unlocked(
 /* component driver ops */
 int snd_soc_component_open(struct snd_soc_component *component,
 			   struct snd_pcm_substream *substream);
+int snd_soc_component_close(struct snd_soc_component *component,
+			    struct snd_pcm_substream *substream);
 
 #endif /* __SOC_COMPONENT_H */

commit ae2f4849286eed48a3aa79a7b73bb5bcd0c9213b
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Jul 26 13:50:01 2019 +0900

    ASoC: soc-component: add snd_soc_component_open()
    
    Current ALSA SoC is directly using component->driver->ops->xxx,
    thus, it is deep nested, and makes code difficult to read,
    and is not good for encapsulation.
    This patch adds new snd_soc_component_open() and use it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/87ftmt5rnx.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc-component.h b/include/sound/soc-component.h
index a76cadf49a16..156b1a5b6ddd 100644
--- a/include/sound/soc-component.h
+++ b/include/sound/soc-component.h
@@ -338,4 +338,8 @@ int snd_soc_component_force_enable_pin_unlocked(
 	struct snd_soc_component *component,
 	const char *pin);
 
+/* component driver ops */
+int snd_soc_component_open(struct snd_soc_component *component,
+			   struct snd_pcm_substream *substream);
+
 #endif /* __SOC_COMPONENT_H */

commit 4a81e8f30d0b422b7f10562952124d719f73b071
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Jul 26 13:49:54 2019 +0900

    ASoC: soc-component: add snd_soc_component_get/put()
    
    ALSA SoC is calling try_module_get()/module_put() based on
    component->driver->module_get_upon_open.
    To keep simple and readable code, we should create its function.
    This patch adds new snd_soc_component_get/put().
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/87h8795ro4.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc-component.h b/include/sound/soc-component.h
index a97d499e5d7a..a76cadf49a16 100644
--- a/include/sound/soc-component.h
+++ b/include/sound/soc-component.h
@@ -287,6 +287,19 @@ void snd_soc_component_init_regmap(struct snd_soc_component *component,
 void snd_soc_component_exit_regmap(struct snd_soc_component *component);
 #endif
 
+#define snd_soc_component_module_get_when_probe(component)\
+	snd_soc_component_module_get(component, 0)
+#define snd_soc_component_module_get_when_open(component)	\
+	snd_soc_component_module_get(component, 1)
+int snd_soc_component_module_get(struct snd_soc_component *component,
+				 int upon_open);
+#define snd_soc_component_module_put_when_remove(component)	\
+	snd_soc_component_module_put(component, 0)
+#define snd_soc_component_module_put_when_close(component)	\
+	snd_soc_component_module_put(component, 1)
+void snd_soc_component_module_put(struct snd_soc_component *component,
+				  int upon_open);
+
 static inline void snd_soc_component_set_drvdata(struct snd_soc_component *c,
 						 void *data)
 {

commit 4ff1fef10f353b928bcc9d56d31fda53f2c43191
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Jul 26 13:49:48 2019 +0900

    ASoC: add soc-component.c
    
    ALSA SoC has many snd_soc_component_xxx(), but these are randomly
    located in many files. Because of it, code is difficult to read.
    This patch creates new soc-component.c, and moves existing
    snd_soc_component_xxx() into it.
    But not yet fully. We need more cleanup it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/87imrp5roa.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/include/sound/soc-component.h b/include/sound/soc-component.h
new file mode 100644
index 000000000000..a97d499e5d7a
--- /dev/null
+++ b/include/sound/soc-component.h
@@ -0,0 +1,328 @@
+/* SPDX-License-Identifier: GPL-2.0
+ *
+ * soc-component.h
+ *
+ * Copyright (c) 2019 Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+#ifndef __SOC_COMPONENT_H
+#define __SOC_COMPONENT_H
+
+#include <sound/soc.h>
+
+/*
+ * Component probe and remove ordering levels for components with runtime
+ * dependencies.
+ */
+#define SND_SOC_COMP_ORDER_FIRST	-2
+#define SND_SOC_COMP_ORDER_EARLY	-1
+#define SND_SOC_COMP_ORDER_NORMAL	 0
+#define SND_SOC_COMP_ORDER_LATE		 1
+#define SND_SOC_COMP_ORDER_LAST		 2
+
+#define for_each_comp_order(order)		\
+	for (order  = SND_SOC_COMP_ORDER_FIRST;	\
+	     order <= SND_SOC_COMP_ORDER_LAST;	\
+	     order++)
+
+/* component interface */
+struct snd_soc_component_driver {
+	const char *name;
+
+	/* Default control and setup, added after probe() is run */
+	const struct snd_kcontrol_new *controls;
+	unsigned int num_controls;
+	const struct snd_soc_dapm_widget *dapm_widgets;
+	unsigned int num_dapm_widgets;
+	const struct snd_soc_dapm_route *dapm_routes;
+	unsigned int num_dapm_routes;
+
+	int (*probe)(struct snd_soc_component *component);
+	void (*remove)(struct snd_soc_component *component);
+	int (*suspend)(struct snd_soc_component *component);
+	int (*resume)(struct snd_soc_component *component);
+
+	unsigned int (*read)(struct snd_soc_component *component,
+			     unsigned int reg);
+	int (*write)(struct snd_soc_component *component,
+		     unsigned int reg, unsigned int val);
+
+	/* pcm creation and destruction */
+	int (*pcm_new)(struct snd_soc_pcm_runtime *rtd);
+	void (*pcm_free)(struct snd_pcm *pcm);
+
+	/* component wide operations */
+	int (*set_sysclk)(struct snd_soc_component *component,
+			  int clk_id, int source, unsigned int freq, int dir);
+	int (*set_pll)(struct snd_soc_component *component, int pll_id,
+		       int source, unsigned int freq_in, unsigned int freq_out);
+	int (*set_jack)(struct snd_soc_component *component,
+			struct snd_soc_jack *jack,  void *data);
+
+	/* DT */
+	int (*of_xlate_dai_name)(struct snd_soc_component *component,
+				 struct of_phandle_args *args,
+				 const char **dai_name);
+	int (*of_xlate_dai_id)(struct snd_soc_component *comment,
+			       struct device_node *endpoint);
+	void (*seq_notifier)(struct snd_soc_component *component,
+			     enum snd_soc_dapm_type type, int subseq);
+	int (*stream_event)(struct snd_soc_component *component, int event);
+	int (*set_bias_level)(struct snd_soc_component *component,
+			      enum snd_soc_bias_level level);
+
+	const struct snd_pcm_ops *ops;
+	const struct snd_compr_ops *compr_ops;
+
+	/* probe ordering - for components with runtime dependencies */
+	int probe_order;
+	int remove_order;
+
+	/*
+	 * signal if the module handling the component should not be removed
+	 * if a pcm is open. Setting this would prevent the module
+	 * refcount being incremented in probe() but allow it be incremented
+	 * when a pcm is opened and decremented when it is closed.
+	 */
+	unsigned int module_get_upon_open:1;
+
+	/* bits */
+	unsigned int idle_bias_on:1;
+	unsigned int suspend_bias_off:1;
+	unsigned int use_pmdown_time:1; /* care pmdown_time at stop */
+	unsigned int endianness:1;
+	unsigned int non_legacy_dai_naming:1;
+
+	/* this component uses topology and ignore machine driver FEs */
+	const char *ignore_machine;
+	const char *topology_name_prefix;
+	int (*be_hw_params_fixup)(struct snd_soc_pcm_runtime *rtd,
+				  struct snd_pcm_hw_params *params);
+	bool use_dai_pcm_id;	/* use DAI link PCM ID as PCM device number */
+	int be_pcm_base;	/* base device ID for all BE PCMs */
+};
+
+struct snd_soc_component {
+	const char *name;
+	int id;
+	const char *name_prefix;
+	struct device *dev;
+	struct snd_soc_card *card;
+
+	unsigned int active;
+
+	unsigned int suspended:1; /* is in suspend PM state */
+
+	struct list_head list;
+	struct list_head card_aux_list; /* for auxiliary bound components */
+	struct list_head card_list;
+
+	const struct snd_soc_component_driver *driver;
+
+	struct list_head dai_list;
+	int num_dai;
+
+	struct regmap *regmap;
+	int val_bytes;
+
+	struct mutex io_mutex;
+
+	/* attached dynamic objects */
+	struct list_head dobj_list;
+
+	/*
+	 * DO NOT use any of the fields below in drivers, they are temporary and
+	 * are going to be removed again soon. If you use them in driver code
+	 * the driver will be marked as BROKEN when these fields are removed.
+	 */
+
+	/* Don't use these, use snd_soc_component_get_dapm() */
+	struct snd_soc_dapm_context dapm;
+
+	/* machine specific init */
+	int (*init)(struct snd_soc_component *component);
+
+#ifdef CONFIG_DEBUG_FS
+	struct dentry *debugfs_root;
+	const char *debugfs_prefix;
+#endif
+};
+
+#define for_each_component_dais(component, dai)\
+	list_for_each_entry(dai, &(component)->dai_list, list)
+#define for_each_component_dais_safe(component, dai, _dai)\
+	list_for_each_entry_safe(dai, _dai, &(component)->dai_list, list)
+
+/**
+ * snd_soc_dapm_to_component() - Casts a DAPM context to the component it is
+ *  embedded in
+ * @dapm: The DAPM context to cast to the component
+ *
+ * This function must only be used on DAPM contexts that are known to be part of
+ * a component (e.g. in a component driver). Otherwise the behavior is
+ * undefined.
+ */
+static inline struct snd_soc_component *snd_soc_dapm_to_component(
+	struct snd_soc_dapm_context *dapm)
+{
+	return container_of(dapm, struct snd_soc_component, dapm);
+}
+
+/**
+ * snd_soc_component_get_dapm() - Returns the DAPM context associated with a
+ *  component
+ * @component: The component for which to get the DAPM context
+ */
+static inline struct snd_soc_dapm_context *snd_soc_component_get_dapm(
+	struct snd_soc_component *component)
+{
+	return &component->dapm;
+}
+
+/**
+ * snd_soc_component_init_bias_level() - Initialize COMPONENT DAPM bias level
+ * @component: The COMPONENT for which to initialize the DAPM bias level
+ * @level: The DAPM level to initialize to
+ *
+ * Initializes the COMPONENT DAPM bias level. See snd_soc_dapm_init_bias_level()
+ */
+static inline void
+snd_soc_component_init_bias_level(struct snd_soc_component *component,
+				  enum snd_soc_bias_level level)
+{
+	snd_soc_dapm_init_bias_level(
+		snd_soc_component_get_dapm(component), level);
+}
+
+/**
+ * snd_soc_component_get_bias_level() - Get current COMPONENT DAPM bias level
+ * @component: The COMPONENT for which to get the DAPM bias level
+ *
+ * Returns: The current DAPM bias level of the COMPONENT.
+ */
+static inline enum snd_soc_bias_level
+snd_soc_component_get_bias_level(struct snd_soc_component *component)
+{
+	return snd_soc_dapm_get_bias_level(
+		snd_soc_component_get_dapm(component));
+}
+
+/**
+ * snd_soc_component_force_bias_level() - Set the COMPONENT DAPM bias level
+ * @component: The COMPONENT for which to set the level
+ * @level: The level to set to
+ *
+ * Forces the COMPONENT bias level to a specific state. See
+ * snd_soc_dapm_force_bias_level().
+ */
+static inline int
+snd_soc_component_force_bias_level(struct snd_soc_component *component,
+				   enum snd_soc_bias_level level)
+{
+	return snd_soc_dapm_force_bias_level(
+		snd_soc_component_get_dapm(component),
+		level);
+}
+
+/**
+ * snd_soc_dapm_kcontrol_component() - Returns the component associated to a
+ * kcontrol
+ * @kcontrol: The kcontrol
+ *
+ * This function must only be used on DAPM contexts that are known to be part of
+ * a COMPONENT (e.g. in a COMPONENT driver). Otherwise the behavior is undefined
+ */
+static inline struct snd_soc_component *snd_soc_dapm_kcontrol_component(
+	struct snd_kcontrol *kcontrol)
+{
+	return snd_soc_dapm_to_component(snd_soc_dapm_kcontrol_dapm(kcontrol));
+}
+
+/**
+ * snd_soc_component_cache_sync() - Sync the register cache with the hardware
+ * @component: COMPONENT to sync
+ *
+ * Note: This function will call regcache_sync()
+ */
+static inline int snd_soc_component_cache_sync(
+	struct snd_soc_component *component)
+{
+	return regcache_sync(component->regmap);
+}
+
+/* component IO */
+int snd_soc_component_read(struct snd_soc_component *component,
+			   unsigned int reg, unsigned int *val);
+unsigned int snd_soc_component_read32(struct snd_soc_component *component,
+				      unsigned int reg);
+int snd_soc_component_write(struct snd_soc_component *component,
+			    unsigned int reg, unsigned int val);
+int snd_soc_component_update_bits(struct snd_soc_component *component,
+				  unsigned int reg, unsigned int mask,
+				  unsigned int val);
+int snd_soc_component_update_bits_async(struct snd_soc_component *component,
+					unsigned int reg, unsigned int mask,
+					unsigned int val);
+void snd_soc_component_async_complete(struct snd_soc_component *component);
+int snd_soc_component_test_bits(struct snd_soc_component *component,
+				unsigned int reg, unsigned int mask,
+				unsigned int value);
+
+/* component wide operations */
+int snd_soc_component_set_sysclk(struct snd_soc_component *component,
+				 int clk_id, int source,
+				 unsigned int freq, int dir);
+int snd_soc_component_set_pll(struct snd_soc_component *component, int pll_id,
+			      int source, unsigned int freq_in,
+			      unsigned int freq_out);
+int snd_soc_component_set_jack(struct snd_soc_component *component,
+			       struct snd_soc_jack *jack, void *data);
+
+#ifdef CONFIG_REGMAP
+void snd_soc_component_init_regmap(struct snd_soc_component *component,
+				   struct regmap *regmap);
+void snd_soc_component_exit_regmap(struct snd_soc_component *component);
+#endif
+
+static inline void snd_soc_component_set_drvdata(struct snd_soc_component *c,
+						 void *data)
+{
+	dev_set_drvdata(c->dev, data);
+}
+
+static inline void *snd_soc_component_get_drvdata(struct snd_soc_component *c)
+{
+	return dev_get_drvdata(c->dev);
+}
+
+static inline bool snd_soc_component_is_active(
+	struct snd_soc_component *component)
+{
+	return component->active != 0;
+}
+
+/* component pin */
+int snd_soc_component_enable_pin(struct snd_soc_component *component,
+				 const char *pin);
+int snd_soc_component_enable_pin_unlocked(struct snd_soc_component *component,
+					  const char *pin);
+int snd_soc_component_disable_pin(struct snd_soc_component *component,
+				  const char *pin);
+int snd_soc_component_disable_pin_unlocked(struct snd_soc_component *component,
+					   const char *pin);
+int snd_soc_component_nc_pin(struct snd_soc_component *component,
+			     const char *pin);
+int snd_soc_component_nc_pin_unlocked(struct snd_soc_component *component,
+				      const char *pin);
+int snd_soc_component_get_pin_status(struct snd_soc_component *component,
+				     const char *pin);
+int snd_soc_component_force_enable_pin(struct snd_soc_component *component,
+				       const char *pin);
+int snd_soc_component_force_enable_pin_unlocked(
+	struct snd_soc_component *component,
+	const char *pin);
+
+#endif /* __SOC_COMPONENT_H */
