commit be6b25d15f5e67bc49b90ed55feb1dd947f4df2c
Author: Ben Guthro <benjamin.guthro@citrix.com>
Date:   Tue Jul 30 08:24:54 2013 -0400

    xen / ACPI: notify xen when reduced hardware sleep is available
    
    Use the acpi_os_prepare_extended_sleep() callback to notify xen
    to make use of the reduced hardware sleep functionality
    
    The xen hypervisor change underlying this is commit 62d1a69
    ("ACPI: support v5 (reduced HW) sleep interface") on the master
    branch of git://xenbits.xen.org/xen.git.
    
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Signed-off-by: Ben Guthro <benjamin.guthro@citrix.com>
    Acked-by: Konrad Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

diff --git a/include/xen/acpi.h b/include/xen/acpi.h
index 46aa3d1c1654..4ddd7dc4a61e 100644
--- a/include/xen/acpi.h
+++ b/include/xen/acpi.h
@@ -75,8 +75,10 @@ static inline int xen_acpi_get_pxm(acpi_handle h)
 	return -ENXIO;
 }
 
-int xen_acpi_notify_hypervisor_state(u8 sleep_state,
+int xen_acpi_notify_hypervisor_sleep(u8 sleep_state,
 				     u32 pm1a_cnt, u32 pm1b_cnd);
+int xen_acpi_notify_hypervisor_extended_sleep(u8 sleep_state,
+				     u32 val_a, u32 val_b);
 
 static inline int xen_acpi_suspend_lowlevel(void)
 {
@@ -93,7 +95,9 @@ static inline void xen_acpi_sleep_register(void)
 {
 	if (xen_initial_domain()) {
 		acpi_os_set_prepare_sleep(
-			&xen_acpi_notify_hypervisor_state);
+			&xen_acpi_notify_hypervisor_sleep);
+		acpi_os_set_prepare_extended_sleep(
+			&xen_acpi_notify_hypervisor_extended_sleep);
 
 		acpi_suspend_lowlevel = xen_acpi_suspend_lowlevel;
 	}

commit 068e0dc7b7c1db9801e3d7f2ba5cb1d2a552a35b
Author: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
Date:   Tue May 14 17:46:12 2013 +0000

    xen / ACPI / sleep: Register an acpi_suspend_lowlevel callback.
    
    We piggyback on "x86/acpi: Provide registration for acpi_suspend_lowlevel."
    to register a Xen version of the callback. The callback does not
    do anything special - except it omits the x86_acpi_suspend_lowlevel.
    
    This is necessary b/c during suspend the generic code tries to write
    cr3 values that clashes with what the hypervisor has set up for the guest.
    
    Signed-off-by: Liang Tang <liang.tang@oracle.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Tested-by: Ben Guthro <benjamin.guthro@citrix.com>
    Acked-by: H. Peter Anvin <hpa@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

diff --git a/include/xen/acpi.h b/include/xen/acpi.h
index 68d73d09b770..46aa3d1c1654 100644
--- a/include/xen/acpi.h
+++ b/include/xen/acpi.h
@@ -78,11 +78,25 @@ static inline int xen_acpi_get_pxm(acpi_handle h)
 int xen_acpi_notify_hypervisor_state(u8 sleep_state,
 				     u32 pm1a_cnt, u32 pm1b_cnd);
 
+static inline int xen_acpi_suspend_lowlevel(void)
+{
+	/*
+	* Xen will save and restore CPU context, so
+	* we can skip that and just go straight to
+	* the suspend.
+	*/
+	acpi_enter_sleep_state(ACPI_STATE_S3);
+	return 0;
+}
+
 static inline void xen_acpi_sleep_register(void)
 {
-	if (xen_initial_domain())
+	if (xen_initial_domain()) {
 		acpi_os_set_prepare_sleep(
 			&xen_acpi_notify_hypervisor_state);
+
+		acpi_suspend_lowlevel = xen_acpi_suspend_lowlevel;
+	}
 }
 #else
 static inline void xen_acpi_sleep_register(void)

commit 268a207563f933ff8e3d876866c324b4247f234e
Author: Liu Jinsong <jinsong.liu@intel.com>
Date:   Thu Feb 14 15:46:26 2013 +0800

    xen/acpi: move xen_acpi_get_pxm under CONFIG_XEN_DOM0
    
    To avoid compile issue and it's meanigfull only under CONFIG_XEN_DOM0.
    
    In file included from linux/arch/x86/xen/enlighten.c:47:0:
            linux/include/xen/acpi.h:75:76: error: unknown type name ‘acpi_handle’
    make[3]: *** [arch/x86/xen/enlighten.o] Error 1
    
    Signed-off-by: Liu Jinsong <jinsong.liu@intel.com>
    [v1: Fixed spelling mistakes]
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>

diff --git a/include/xen/acpi.h b/include/xen/acpi.h
index c962d5f5b38b..68d73d09b770 100644
--- a/include/xen/acpi.h
+++ b/include/xen/acpi.h
@@ -57,21 +57,6 @@ void xen_stub_processor_exit(void);
 void xen_pcpu_hotplug_sync(void);
 int xen_pcpu_id(uint32_t acpi_id);
 
-int xen_acpi_notify_hypervisor_state(u8 sleep_state,
-				     u32 pm1a_cnt, u32 pm1b_cnd);
-
-static inline void xen_acpi_sleep_register(void)
-{
-	if (xen_initial_domain())
-		acpi_os_set_prepare_sleep(
-			&xen_acpi_notify_hypervisor_state);
-}
-#else
-static inline void xen_acpi_sleep_register(void)
-{
-}
-#endif
-
 static inline int xen_acpi_get_pxm(acpi_handle h)
 {
 	unsigned long long pxm;
@@ -90,4 +75,19 @@ static inline int xen_acpi_get_pxm(acpi_handle h)
 	return -ENXIO;
 }
 
+int xen_acpi_notify_hypervisor_state(u8 sleep_state,
+				     u32 pm1a_cnt, u32 pm1b_cnd);
+
+static inline void xen_acpi_sleep_register(void)
+{
+	if (xen_initial_domain())
+		acpi_os_set_prepare_sleep(
+			&xen_acpi_notify_hypervisor_state);
+}
+#else
+static inline void xen_acpi_sleep_register(void)
+{
+}
+#endif
+
 #endif	/* _XEN_ACPI_H */

commit 39adc483d378f79711f291539f20e3797337892d
Author: Liu Jinsong <jinsong.liu@intel.com>
Date:   Fri Jan 25 15:43:34 2013 +0800

    xen/acpi: ACPI cpu hotplug
    
    This patch implement real Xen ACPI cpu hotplug driver as module.
    When loaded, it replaces Xen stub driver.
    
    For booting existed cpus, the driver enumerates them.
    For hotadded cpus, which added at runtime and notify OS via
    device or container event, the driver is invoked to add them,
    parsing cpu information, hypercalling to Xen hypervisor to add
    them, and finally setting up new /sys interface for them.
    
    Signed-off-by: Liu Jinsong <jinsong.liu@intel.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>

diff --git a/include/xen/acpi.h b/include/xen/acpi.h
index dc69c91605b8..c962d5f5b38b 100644
--- a/include/xen/acpi.h
+++ b/include/xen/acpi.h
@@ -54,6 +54,9 @@ void xen_stub_memory_device_exit(void);
 int xen_stub_processor_init(void);
 void xen_stub_processor_exit(void);
 
+void xen_pcpu_hotplug_sync(void);
+int xen_pcpu_id(uint32_t acpi_id);
+
 int xen_acpi_notify_hypervisor_state(u8 sleep_state,
 				     u32 pm1a_cnt, u32 pm1b_cnd);
 

commit 40a58637a4fa10a2faea71f0f30ff0b3d74c6e00
Author: Liu Jinsong <jinsong.liu@intel.com>
Date:   Fri Jan 25 15:42:31 2013 +0800

    xen/acpi: Move xen_acpi_get_pxm to Xen's acpi.h
    
    So that it could be reused by Xen CPU hotplug logic.
    
    Signed-off-by: Liu, Jinsong <jinsong.liu@intel.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>

diff --git a/include/xen/acpi.h b/include/xen/acpi.h
index 2b3103b33725..dc69c91605b8 100644
--- a/include/xen/acpi.h
+++ b/include/xen/acpi.h
@@ -69,4 +69,22 @@ static inline void xen_acpi_sleep_register(void)
 }
 #endif
 
+static inline int xen_acpi_get_pxm(acpi_handle h)
+{
+	unsigned long long pxm;
+	acpi_status status;
+	acpi_handle handle;
+	acpi_handle phandle = h;
+
+	do {
+		handle = phandle;
+		status = acpi_evaluate_integer(handle, "_PXM", NULL, &pxm);
+		if (ACPI_SUCCESS(status))
+			return pxm;
+		status = acpi_get_parent(handle, &phandle);
+	} while (ACPI_SUCCESS(status));
+
+	return -ENXIO;
+}
+
 #endif	/* _XEN_ACPI_H */

commit b22ff77b82598ff131d215627533e09e4a472220
Author: Liu Jinsong <jinsong.liu@intel.com>
Date:   Thu Jan 24 22:12:30 2013 +0800

    xen/stub: driver for CPU hotplug
    
    Add Xen stub driver for CPU hotplug, early occupy to block native,
    will be replaced later by real Xen processor driver module.
    
    Signed-off-by: Liu Jinsong <jinsong.liu@intel.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>

diff --git a/include/xen/acpi.h b/include/xen/acpi.h
index ce7e5264b320..2b3103b33725 100644
--- a/include/xen/acpi.h
+++ b/include/xen/acpi.h
@@ -47,6 +47,13 @@
 int xen_stub_memory_device_init(void);
 void xen_stub_memory_device_exit(void);
 
+#define ACPI_PROCESSOR_CLASS            "processor"
+#define ACPI_PROCESSOR_DEVICE_HID       "ACPI0007"
+#define ACPI_PROCESSOR_DEVICE_NAME      "Processor"
+
+int xen_stub_processor_init(void);
+void xen_stub_processor_exit(void);
+
 int xen_acpi_notify_hypervisor_state(u8 sleep_state,
 				     u32 pm1a_cnt, u32 pm1b_cnd);
 

commit dcb93b96cec723783a81e8cac7df62feaf964792
Author: Liu Jinsong <jinsong.liu@intel.com>
Date:   Thu Jan 24 20:16:59 2013 +0800

    xen/stub: driver for memory hotplug
    
    This patch create a file (xen-stub.c) for Xen stub drivers.
    Xen stub drivers are used to reserve space for Xen drivers, i.e.
    memory hotplug and cpu hotplug, and to block native drivers loaded,
    so that real Xen drivers can be modular and loaded on demand.
    
    This patch is specific for Xen memory hotplug (other Xen logic
    can add stub drivers on their own). The xen stub driver will
    occupied earlier via subsys_initcall (than native memory hotplug
    driver via module_init and so blocking native). Later real Xen
    memory hotplug logic will unregister the stub driver and register
    itself to take effect on demand.
    
    Signed-off-by: Liu Jinsong <jinsong.liu@intel.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>

diff --git a/include/xen/acpi.h b/include/xen/acpi.h
index 48a9c0171b65..ce7e5264b320 100644
--- a/include/xen/acpi.h
+++ b/include/xen/acpi.h
@@ -40,6 +40,13 @@
 #include <xen/xen.h>
 #include <linux/acpi.h>
 
+#define ACPI_MEMORY_DEVICE_CLASS        "memory"
+#define ACPI_MEMORY_DEVICE_HID          "PNP0C80"
+#define ACPI_MEMORY_DEVICE_NAME         "Hotplug Mem Device"
+
+int xen_stub_memory_device_init(void);
+void xen_stub_memory_device_exit(void);
+
 int xen_acpi_notify_hypervisor_state(u8 sleep_state,
 				     u32 pm1a_cnt, u32 pm1b_cnd);
 

commit 211063dc159695bd6072c5393e9bc729481c6ede
Author: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
Date:   Thu Dec 8 17:32:23 2011 +0800

    xen/acpi/sleep: Enable ACPI sleep via the __acpi_os_prepare_sleep
    
    Provide the registration callback to call in the Xen's
    ACPI sleep functionality. This means that during S3/S5
    we make a hypercall XENPF_enter_acpi_sleep with the
    proper PM1A/PM1B registers.
    
    Based of Ke Yu's <ke.yu@intel.com> initial idea.
    [ From http://xenbits.xensource.com/linux-2.6.18-xen.hg
    change c68699484a65 ]
    
    [v1: Added Copyright and license]
    [v2: Added check if PM1A/B the 16-bits MSB contain something. The spec
         only uses 16-bits but might have more in future]
    Signed-off-by: Liang Tang <liang.tang@oracle.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>

diff --git a/include/xen/acpi.h b/include/xen/acpi.h
new file mode 100644
index 000000000000..48a9c0171b65
--- /dev/null
+++ b/include/xen/acpi.h
@@ -0,0 +1,58 @@
+/******************************************************************************
+ * acpi.h
+ * acpi file for domain 0 kernel
+ *
+ * Copyright (c) 2011 Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
+ * Copyright (c) 2011 Yu Ke <ke.yu@intel.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License version 2
+ * as published by the Free Software Foundation; or, when distributed
+ * separately from the Linux kernel or incorporated into other
+ * software packages, subject to the following license:
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this source file (the "Software"), to deal in the Software without
+ * restriction, including without limitation the rights to use, copy, modify,
+ * merge, publish, distribute, sublicense, and/or sell copies of the Software,
+ * and to permit persons to whom the Software is furnished to do so, subject to
+ * the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+ * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
+ * IN THE SOFTWARE.
+ */
+
+#ifndef _XEN_ACPI_H
+#define _XEN_ACPI_H
+
+#include <linux/types.h>
+
+#ifdef CONFIG_XEN_DOM0
+#include <asm/xen/hypervisor.h>
+#include <xen/xen.h>
+#include <linux/acpi.h>
+
+int xen_acpi_notify_hypervisor_state(u8 sleep_state,
+				     u32 pm1a_cnt, u32 pm1b_cnd);
+
+static inline void xen_acpi_sleep_register(void)
+{
+	if (xen_initial_domain())
+		acpi_os_set_prepare_sleep(
+			&xen_acpi_notify_hypervisor_state);
+}
+#else
+static inline void xen_acpi_sleep_register(void)
+{
+}
+#endif
+
+#endif	/* _XEN_ACPI_H */
