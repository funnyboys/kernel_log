commit 81966d83492620bf42d94d580370c59ff8d02772
Author: Eric Biggers <ebiggers@google.com>
Date:   Thu Jan 3 15:26:00 2019 -0800

    fs/proc/util.c: include fs/proc/internal.h for name_to_int()
    
    name_to_int() is defined in fs/proc/util.c and declared in
    fs/proc/internal.h, but the declaration isn't included at the point of
    the definition.  Include the header to enforce that the definition
    matches the declaration.
    
    This addresses a gcc warning when -Wmissing-prototypes is enabled.
    
    Link: http://lkml.kernel.org/r/20181115001833.49371-1-ebiggers@kernel.org
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Reviewed-by: Alexey Dobriyan <adobriyan@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/fs/proc/util.c b/fs/proc/util.c
index b161cfa0f9fa..98f8adc17345 100644
--- a/fs/proc/util.c
+++ b/fs/proc/util.c
@@ -1,4 +1,5 @@
 #include <linux/dcache.h>
+#include "internal.h"
 
 unsigned name_to_int(const struct qstr *qstr)
 {

commit 0746a0bc6e6e76444098cf944848554d21d28cae
Author: Alexey Dobriyan <adobriyan@gmail.com>
Date:   Fri Nov 17 15:26:52 2017 -0800

    proc: use do-while in name_to_int()
    
    Gcc doesn't know that "len" is guaranteed to be >=1 by dcache and
    generates standard while-loop prologue duplicating loop condition.
    
            add/remove: 0/0 grow/shrink: 0/1 up/down: 0/-27 (-27)
            function                                     old     new   delta
            name_to_int                                  104      77     -27
    
    Link: http://lkml.kernel.org/r/20170912195213.GB17730@avx2
    Signed-off-by: Alexey Dobriyan <adobriyan@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/fs/proc/util.c b/fs/proc/util.c
index c29aa497394b..b161cfa0f9fa 100644
--- a/fs/proc/util.c
+++ b/fs/proc/util.c
@@ -8,7 +8,7 @@ unsigned name_to_int(const struct qstr *qstr)
 
 	if (len > 1 && *name == '0')
 		goto out;
-	while (len-- > 0) {
+	do {
 		unsigned c = *name++ - '0';
 		if (c > 9)
 			goto out;
@@ -16,7 +16,7 @@ unsigned name_to_int(const struct qstr *qstr)
 			goto out;
 		n *= 10;
 		n += c;
-	}
+	} while (--len > 0);
 	return n;
 out:
 	return ~0U;

commit 3ee2a19908f27b8fea8ff14ffa8b755585eb7b4a
Author: Alexey Dobriyan <adobriyan@gmail.com>
Date:   Fri Nov 17 15:26:49 2017 -0800

    proc: : uninline name_to_int()
    
    Save ~360 bytes.
    
            add/remove: 1/0 grow/shrink: 0/4 up/down: 104/-463 (-359)
            function                                     old     new   delta
            name_to_int                                    -     104    +104
            proc_pid_lookup                              217     126     -91
            proc_lookupfd_common                         212     121     -91
            proc_task_lookup                             289     194     -95
            __proc_create                                588     402    -186
    
    Link: http://lkml.kernel.org/r/20170912194850.GA17730@avx2
    Signed-off-by: Alexey Dobriyan <adobriyan@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/fs/proc/util.c b/fs/proc/util.c
new file mode 100644
index 000000000000..c29aa497394b
--- /dev/null
+++ b/fs/proc/util.c
@@ -0,0 +1,23 @@
+#include <linux/dcache.h>
+
+unsigned name_to_int(const struct qstr *qstr)
+{
+	const char *name = qstr->name;
+	int len = qstr->len;
+	unsigned n = 0;
+
+	if (len > 1 && *name == '0')
+		goto out;
+	while (len-- > 0) {
+		unsigned c = *name++ - '0';
+		if (c > 9)
+			goto out;
+		if (n >= (~0U-9)/10)
+			goto out;
+		n *= 10;
+		n += c;
+	}
+	return n;
+out:
+	return ~0U;
+}
