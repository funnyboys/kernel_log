commit 88ee9d571b6d8ed345f877e05f685814412e359b
Author: Jan (janneke) Nieuwenhuizen <janneke@gnu.org>
Date:   Mon May 25 21:39:40 2020 +0200

    ext4: support xattr gnu.* namespace for the Hurd
    
    The Hurd gained[0] support for moving the translator and author
    fields out of the inode and into the "gnu.*" xattr namespace.
    
    In anticipation of that, an xattr INDEX was reserved[1].  The Hurd has
    now been brought into compliance[2] with that.
    
    This patch adds support for reading and writing such attributes from
    Linux; you can now do something like
    
        mkdir -p hurd-root/servers/socket
        touch hurd-root/servers/socket/1
        setfattr --name=gnu.translator --value='"/hurd/pflocal\0"' \
            hurd-root/servers/socket/1
        getfattr --name=gnu.translator hurd-root/servers/socket/1
        # file: 1
        gnu.translator="/hurd/pflocal"
    
    to setup a pipe translator, which is being used to create[3] a
    vm-image for the Hurd from GNU Guix.
    
    [0] https://summerofcode.withgoogle.com/projects/#5869799859027968
    [1] https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=3980bd3b406addb327d858aebd19e229ea340b9a
    [2] https://git.savannah.gnu.org/cgit/hurd/hurd.git/commit/?id=a04c7bf83172faa7cb080fbe3b6c04a8415ca645
    [3] https://git.savannah.gnu.org/cgit/guix.git/log/?h=wip-hurd-vm
    
    Signed-off-by: Jan Nieuwenhuizen <janneke@gnu.org>
    Link: https://lore.kernel.org/r/20200525193940.878-1-janneke@gnu.org
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>

diff --git a/fs/ext4/xattr_hurd.c b/fs/ext4/xattr_hurd.c
new file mode 100644
index 000000000000..8cfa74a56361
--- /dev/null
+++ b/fs/ext4/xattr_hurd.c
@@ -0,0 +1,51 @@
+// SPDX-License-Identifier: GPL-2.0
+/*
+ * linux/fs/ext4/xattr_hurd.c
+ * Handler for extended gnu attributes for the Hurd.
+ *
+ * Copyright (C) 2001 by Andreas Gruenbacher, <a.gruenbacher@computer.org>
+ * Copyright (C) 2020 by Jan (janneke) Nieuwenhuizen, <janneke@gnu.org>
+ */
+
+#include <linux/init.h>
+#include <linux/string.h>
+#include "ext4.h"
+#include "xattr.h"
+
+static bool
+ext4_xattr_hurd_list(struct dentry *dentry)
+{
+	return test_opt(dentry->d_sb, XATTR_USER);
+}
+
+static int
+ext4_xattr_hurd_get(const struct xattr_handler *handler,
+		    struct dentry *unused, struct inode *inode,
+		    const char *name, void *buffer, size_t size)
+{
+	if (!test_opt(inode->i_sb, XATTR_USER))
+		return -EOPNOTSUPP;
+
+	return ext4_xattr_get(inode, EXT4_XATTR_INDEX_HURD,
+			      name, buffer, size);
+}
+
+static int
+ext4_xattr_hurd_set(const struct xattr_handler *handler,
+		    struct dentry *unused, struct inode *inode,
+		    const char *name, const void *value,
+		    size_t size, int flags)
+{
+	if (!test_opt(inode->i_sb, XATTR_USER))
+		return -EOPNOTSUPP;
+
+	return ext4_xattr_set(inode, EXT4_XATTR_INDEX_HURD,
+			      name, value, size, flags);
+}
+
+const struct xattr_handler ext4_xattr_hurd_handler = {
+	.prefix	= XATTR_HURD_PREFIX,
+	.list	= ext4_xattr_hurd_list,
+	.get	= ext4_xattr_hurd_get,
+	.set	= ext4_xattr_hurd_set,
+};
