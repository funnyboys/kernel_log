commit 8a7e8ff8ce8ae7d34ed979f41b572bfe7cab421c
Merge: 57f041027909 6d97985072dc
Author: David S. Miller <davem@davemloft.net>
Date:   Sun Jun 2 17:48:58 2019 -0700

    Merge tag 'isdn-removal' of https://git.kernel.org/pub/scm/linux/kernel/git/arnd/playground
    
    Arnd Bergmann says:
    
    ====================
    isdn: deprecate non-mISDN drivers
    
    When isdn4linux came up in the context of another patch series, I
    remembered that we had discussed removing it a while ago.
    
    It turns out that the suggestion from Karsten Keil wa to remove I4L
    in 2018 after the last public ISDN networks are shut down. This has
    happened now (with a very small number of exceptions), so I guess it's
    time to try again.
    
    We currently have three ISDN stacks in the kernel: the original
    isdn4linux (with the hisax driver), the newer CAPI (with four drivers),
    and finally the mISDN stack (supporting roughly the same hardware as
    hisax).
    
    As far as I can tell, anyone using ISDN with mainline kernel drivers in
    the past few years uses mISDN, and this is typically used for voice-only
    PBX installations that don't require a public network.
    
    The older stacks support additional features for data networks, but those
    typically make no sense any more if there is no network to connect to.
    
    My proposal for this time is to kill off isdn4linux entirely, as it seems
    to have been unusable for quite a while. This code has been abandoned
    for many years and it does cause problems for treewide maintenance as
    it tends to do everything that we try to stop doing.
    Birger Harzenetter mentioned that is is still using i4l in order to
    make use of the 'divert' feature that is not part of mISDN, but has
    otherwise moved on to mISDN for normal operation, like apparently
    everyone else.
    
    CAPI in turn is not quite as obsolete, but two of the drivers (avm
    and hysdn) don't seem to be used at all, while another one (gigaset)
    will stop being maintained as Paul Bolle is no longer able to
    test it after the network gets shut down in September.
    All three are now moved into drivers/staging to let others speak
    up in case there are remaining users.
    This leaves Bluetooth CMTP as the only remaining user of CAPI, but
    Marcel Holtmann wishes to keep maintaining it.
    
    For the discussion on version 1, see [2]
    Unfortunately, Karsten Keil as the maintainer has not participated in
    the discussion.
    
          Arnd
    
    [1] https://patchwork.kernel.org/patch/8484861/#17900371
    [2] https://listserv.isdn4linux.de/pipermail/isdn4linux/2019-April/thread.html
    ====================
    
    Signed-off-by: David S. Miller <davem@davemloft.net>

commit 99c2aa151a7182c58f9477a376304c538d9cc5ab
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Apr 18 22:57:08 2019 +0200

    isdn: hdlc: move into mISDN
    
    The last remnant of the isdn4linux interface is now the isdnhdlc
    support, used by the netjet driver. Move it next to that driver.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>

diff --git a/drivers/isdn/hardware/mISDN/isdnhdlc.h b/drivers/isdn/hardware/mISDN/isdnhdlc.h
new file mode 100644
index 000000000000..96521370c782
--- /dev/null
+++ b/drivers/isdn/hardware/mISDN/isdnhdlc.h
@@ -0,0 +1,82 @@
+/*
+ * hdlc.h  --  General purpose ISDN HDLC decoder.
+ *
+ * Implementation of a HDLC decoder/encoder in software.
+ * Necessary because some ISDN devices don't have HDLC
+ * controllers.
+ *
+ * Copyright (C)
+ *	2009	Karsten Keil		<keil@b1-systems.de>
+ *	2002	Wolfgang MÃ¼es		<wolfgang@iksw-muees.de>
+ *	2001	Frode Isaksen		<fisaksen@bewan.com>
+ *	2001	Kai Germaschewski	<kai.germaschewski@gmx.de>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+ */
+
+#ifndef __ISDNHDLC_H__
+#define __ISDNHDLC_H__
+
+struct isdnhdlc_vars {
+	int bit_shift;
+	int hdlc_bits1;
+	int data_bits;
+	int ffbit_shift;	/* encoding only */
+	int state;
+	int dstpos;
+
+	u16 crc;
+
+	u8 cbin;
+	u8 shift_reg;
+	u8 ffvalue;
+
+	/* set if transferring data */
+	u32 data_received:1;
+	/* set if D channel (send idle instead of flags) */
+	u32 dchannel:1;
+	/* set if 56K adaptation */
+	u32 do_adapt56:1;
+	/* set if in closing phase (need to send CRC + flag) */
+	u32 do_closing:1;
+	/* set if data is bitreverse */
+	u32 do_bitreverse:1;
+};
+
+/* Feature Flags */
+#define HDLC_56KBIT	0x01
+#define HDLC_DCHANNEL	0x02
+#define HDLC_BITREVERSE	0x04
+
+/*
+  The return value from isdnhdlc_decode is
+  the frame length, 0 if no complete frame was decoded,
+  or a negative error number
+*/
+#define HDLC_FRAMING_ERROR     1
+#define HDLC_CRC_ERROR         2
+#define HDLC_LENGTH_ERROR      3
+
+extern void	isdnhdlc_rcv_init(struct isdnhdlc_vars *hdlc, u32 features);
+
+extern int	isdnhdlc_decode(struct isdnhdlc_vars *hdlc, const u8 *src,
+			int slen, int *count, u8 *dst, int dsize);
+
+extern void	isdnhdlc_out_init(struct isdnhdlc_vars *hdlc, u32 features);
+
+extern int	isdnhdlc_encode(struct isdnhdlc_vars *hdlc, const u8 *src,
+			u16 slen, int *count, u8 *dst, int dsize);
+
+#endif /* __ISDNHDLC_H__ */
