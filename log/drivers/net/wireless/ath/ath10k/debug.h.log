commit d3ed0cf047cf054fd54589e5d4247f0001c5d85c
Author: Gustavo A. R. Silva <gustavoars@kernel.org>
Date:   Fri May 8 05:55:52 2020 +0300

    ath10k: Replace zero-length array with flexible-array
    
    The current codebase makes use of the zero-length array language
    extension to the C90 standard, but the preferred mechanism to declare
    variable-length types such as these ones is a flexible array member[1][2],
    introduced in C99:
    
    struct foo {
            int stuff;
            struct boo array[];
    };
    
    By making use of the mechanism above, we will get a compiler warning
    in case the flexible array does not occur last in the structure, which
    will help us prevent some kind of undefined behavior bugs from being
    inadvertently introduced[3] to the codebase from now on.
    
    Also, notice that, dynamic memory allocations won't be affected by
    this change:
    
    "Flexible array members have incomplete type, and so the sizeof operator
    may not be applied. As a quirk of the original implementation of
    zero-length arrays, sizeof evaluates to zero."[1]
    
    sizeof(flexible-array-member) triggers a warning because flexible array
    members have incomplete type[1]. There are some instances of code in
    which the sizeof operator is being incorrectly/erroneously applied to
    zero-length arrays and the result is zero. Such instances may be hiding
    some bugs. So, this work (flexible-array member conversions) will also
    help to get completely rid of those sorts of issues.
    
    This issue was found with the help of Coccinelle.
    
    [1] https://gcc.gnu.org/onlinedocs/gcc/Zero-Length.html
    [2] https://github.com/KSPP/linux/issues/21
    [3] commit 76497732932f ("cxgb3/l2t: Fix undefined behaviour")
    
    Signed-off-by: Gustavo A. R. Silva <gustavo@embeddedor.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200507041127.GA31587@embeddedor

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index 4cbfd9279d6f..997c1c80aba7 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -65,7 +65,7 @@ struct ath10k_pktlog_hdr {
 	__le16 log_type; /* Type of log information foll this header */
 	__le16 size; /* Size of variable length log information in bytes */
 	__le32 timestamp;
-	u8 payload[0];
+	u8 payload[];
 } __packed;
 
 /* FIXME: How to calculate the buffer size sanely? */

commit 4913e675630ec1a15c92651f426a63755c71b91b
Author: Wen Gong <wgong@codeaurora.org>
Date:   Thu Apr 23 10:27:58 2020 +0800

    ath10k: enable rx duration report default for wmi tlv
    
    When run command "iw dev wlan0 station dump", the rx duration is 0.
    When firmware indicate WMI_UPDATE_STATS_EVENTID, extended flag of
    statsis not set by default, so firmware do not report rx duration.
    
    one sample:
    localhost # iw wlan0 station dump
    Station c4:04:15:5d:97:22 (on wlan0)
            inactive time:  48 ms
            rx bytes:       21670
            rx packets:     147
            tx bytes:       11529
            tx packets:     100
            tx retries:     88
            tx failed:      36
            beacon loss:    1
            beacon rx:      31
            rx drop misc:   47
            signal:         -72 [-74, -75] dBm
            signal avg:     -71 [-74, -75] dBm
            beacon signal avg:      -71 dBm
            tx bitrate:     54.0 MBit/s MCS 3 40MHz
            rx bitrate:     1.0 MBit/s
            rx duration:    0 us
    
    This patch enable firmware's extened flag of stats by setting flag
    WMI_TLV_STAT_PEER_EXTD of ar->fw_stats_req_mask which is set in
    ath10k_core_init_firmware_features via WMI_REQUEST_STATS_CMDID.
    
    After apply this patch, rx duration show value with the command:
    Station c4:04:15:5d:97:22 (on wlan0)
            inactive time:  883 ms
            rx bytes:       44289
            rx packets:     265
            tx bytes:       10838
            tx packets:     93
            tx retries:     899
            tx failed:      103
            beacon loss:    0
            beacon rx:      78
            rx drop misc:   46
            signal:         -71 [-74, -76] dBm
            signal avg:     -70 [-74, -76] dBm
            beacon signal avg:      -70 dBm
            tx bitrate:     54.0 MBit/s MCS 3 40MHz
            rx bitrate:     1.0 MBit/s
            rx duration:    358004 us
    
    This patch do not have side effect for all chips, because function
    ath10k_debug_fw_stats_request is already exported to debugfs
    "fw_stats" and WMI_REQUEST_STATS_CMDID is safely sent after condition
    checked by ath10k_peer_stats_enabled in ath10k_sta_statistics.
    
    Tested with QCA6174 SDIO with firmware WLAN.RMH.4.4.1-00042.
    
    Signed-off-by: Wen Gong <wgong@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200423022758.5365-1-wgong@codeaurora.org

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index 82f7eb8583d9..4cbfd9279d6f 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -125,6 +125,9 @@ static inline int ath10k_debug_is_extd_tx_stats_enabled(struct ath10k *ar)
 {
 	return ar->debug.enable_extd_tx_stats;
 }
+
+int ath10k_debug_fw_stats_request(struct ath10k *ar);
+
 #else
 
 static inline int ath10k_debug_start(struct ath10k *ar)
@@ -192,6 +195,11 @@ static inline int ath10k_debug_is_extd_tx_stats_enabled(struct ath10k *ar)
 	return 0;
 }
 
+static inline int ath10k_debug_fw_stats_request(struct ath10k *ar)
+{
+	return 0;
+}
+
 #define ATH10K_DFS_STAT_INC(ar, c) do { } while (0)
 
 #define ath10k_debug_get_et_strings NULL

commit 33410a51468fdd8b5c398642c0d22347bc02296b
Author: Ashok Raj Nagarajan <arnagara@codeaurora.org>
Date:   Mon Jun 3 18:09:02 2019 +0300

    ath10k: add support for controlling tx power to a station
    
    This patch will add the support to control the transmit power for traffic
    to a station associated with the AP.
    
    Underlying firmware will enforce that the maximum tx power will be based
    on the regulatory requirements. If the user given transmit power is greater
    than the allowed tx power in the given channel, then the firmware will use
    the maximum tx power in the same channel.
    
    Max and Min tx power values will depends on no of tx chain masks,
    for QCA9984 allowed tx power range values from 6 to 23.
    
    When 0 is sent to the firmware as tx power, it will revert to the default
    tx power for the station.
    
    Tested Hardware : QCA9984
    Tested Firmware : 10.4-3.9.0.2-00046
    
    Co-developed-by: Balaji Pothunoori <bpothuno@codeaurora.org>
    Signed-off-by: Ashok Raj Nagarajan <arnagara@codeaurora.org>
    Signed-off-by: Balaji Pothunoori <bpothuno@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index a5b20397155b..82f7eb8583d9 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -71,6 +71,9 @@ struct ath10k_pktlog_hdr {
 /* FIXME: How to calculate the buffer size sanely? */
 #define ATH10K_FW_STATS_BUF_SIZE (1024 * 1024)
 
+#define ATH10K_TX_POWER_MAX_VAL 70
+#define ATH10K_TX_POWER_MIN_VAL 0
+
 extern unsigned int ath10k_debug_mask;
 
 __printf(2, 3) void ath10k_info(struct ath10k *ar, const char *fmt, ...);

commit 9d740d6380e5030f356e2811b14fe45684c793b1
Author: Venkateswara Naralasetty <vnaralas@codeaurora.org>
Date:   Mon May 27 15:32:13 2019 +0300

    ath10k: Add wrapper function to ath10k debug
    
    ath10k_dbg() is called in ath10k_process_rx() with huge set of arguments
    which is causing CPU overhead even when debug_mask is not set.
    Good improvement was observed in the receive side performance when call
    to ath10k_dbg() is avoided in the RX path.
    
    Since currently all debug messages are sent via tracing infrastructure,
    we cannot entirely avoid calling ath10k_dbg. Therefore, call to
    ath10k_dbg() is made conditional based on tracing config in the driver.
    
    Trasmit performance remains unchanged with this patch; below are some
    experimental results with this patch and tracing disabled.
    
    mesh mode:
    
                    w/o this patch          with this patch
    Traffic       TP      CPU Usage      TP      CPU usage
    
    TCP          840Mbps    76.53%      960Mbps    78.14%
    UDP          1030Mbps   74.58%      1132Mbps   74.31%
    
    Infra mode:
    
                    w/o this patch          with this patch
    Traffic        TP      CPU Usage      TP      CPU usage
    
    TCP Rx       1241Mbps   80.89%      1270Mbps   73.50%
    UDP Rx       1433Mbps   81.77%      1472Mbps   72.80%
    
    Tested platform : IPQ8064
    hardware used   : QCA9984
    firmware ver    : ver 10.4-3.5.3-00057
    
    Signed-off-by: Kan Yan <kyan@chromium.org>
    Signed-off-by: Venkateswara Naralasetty <vnaralas@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index db78e855a80f..a5b20397155b 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -240,18 +240,18 @@ void ath10k_sta_update_rx_tid_stats_ampdu(struct ath10k *ar,
 #endif /* CONFIG_MAC80211_DEBUGFS */
 
 #ifdef CONFIG_ATH10K_DEBUG
-__printf(3, 4) void ath10k_dbg(struct ath10k *ar,
-			       enum ath10k_debug_mask mask,
-			       const char *fmt, ...);
+__printf(3, 4) void __ath10k_dbg(struct ath10k *ar,
+				 enum ath10k_debug_mask mask,
+				 const char *fmt, ...);
 void ath10k_dbg_dump(struct ath10k *ar,
 		     enum ath10k_debug_mask mask,
 		     const char *msg, const char *prefix,
 		     const void *buf, size_t len);
 #else /* CONFIG_ATH10K_DEBUG */
 
-static inline int ath10k_dbg(struct ath10k *ar,
-			     enum ath10k_debug_mask dbg_mask,
-			     const char *fmt, ...)
+static inline int __ath10k_dbg(struct ath10k *ar,
+			       enum ath10k_debug_mask dbg_mask,
+			       const char *fmt, ...)
 {
 	return 0;
 }
@@ -263,4 +263,14 @@ static inline void ath10k_dbg_dump(struct ath10k *ar,
 {
 }
 #endif /* CONFIG_ATH10K_DEBUG */
+
+/* Avoid calling __ath10k_dbg() if debug_mask is not set and tracing
+ * disabled.
+ */
+#define ath10k_dbg(ar, dbg_mask, fmt, ...)			\
+do {								\
+	if ((ath10k_debug_mask & dbg_mask) ||			\
+	    trace_ath10k_log_dbg_enabled())			\
+		__ath10k_dbg(ar, dbg_mask, fmt, ##__VA_ARGS__); \
+} while (0)
 #endif /* _DEBUG_H_ */

commit f0553ca9ceb5ff403623e31b7501d33ec84ce1fa
Author: Kalle Valo <kvalo@codeaurora.org>
Date:   Tue Feb 19 19:45:26 2019 +0200

    ath10k: switch to use SPDX license identifiers
    
    Use SPDX identifiers everywhere in ath10k.
    
    Makefile was incorrectly marked in commit b24413180f56 ("License cleanup: add
    SPDX GPL-2.0 license identifier to files with no license"), fix that as well.
    
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index eecafdbc873f..db78e855a80f 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -1,19 +1,8 @@
+/* SPDX-License-Identifier: ISC */
 /*
  * Copyright (c) 2005-2011 Atheros Communications Inc.
  * Copyright (c) 2011-2017 Qualcomm Atheros, Inc.
  * Copyright (c) 2018, The Linux Foundation. All rights reserved.
- *
- * Permission to use, copy, modify, and/or distribute this software for any
- * purpose with or without fee is hereby granted, provided that the above
- * copyright notice and this permission notice appear in all copies.
- *
- * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
- * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
- * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
- * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
- * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
- * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
- * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
  */
 
 #ifndef _DEBUG_H_

commit 28bbe23740418384e5731e984b79babd763f7181
Author: Kalle Valo <kvalo@codeaurora.org>
Date:   Tue Feb 19 14:11:43 2019 +0200

    ath10k: change 'unsigned long int' to 'unsigned long'
    
    Fixes checkpatch warnings:
    
    Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
    
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index 5cf16d690724..eecafdbc873f 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -213,12 +213,12 @@ void ath10k_sta_add_debugfs(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
 void ath10k_sta_update_rx_duration(struct ath10k *ar,
 				   struct ath10k_fw_stats *stats);
 void ath10k_sta_update_rx_tid_stats(struct ath10k *ar, u8 *first_hdr,
-				    unsigned long int num_msdus,
+				    unsigned long num_msdus,
 				    enum ath10k_pkt_rx_err err,
-				    unsigned long int unchain_cnt,
-				    unsigned long int drop_cnt,
-				    unsigned long int drop_cnt_filter,
-				    unsigned long int queued_msdus);
+				    unsigned long unchain_cnt,
+				    unsigned long drop_cnt,
+				    unsigned long drop_cnt_filter,
+				    unsigned long queued_msdus);
 void ath10k_sta_update_rx_tid_stats_ampdu(struct ath10k *ar,
 					  u16 peer_id, u8 tid,
 					  struct htt_rx_indication_mpdu_range *ranges,
@@ -232,12 +232,12 @@ void ath10k_sta_update_rx_duration(struct ath10k *ar,
 
 static inline
 void ath10k_sta_update_rx_tid_stats(struct ath10k *ar, u8 *first_hdr,
-				    unsigned long int num_msdus,
+				    unsigned long num_msdus,
 				    enum ath10k_pkt_rx_err err,
-				    unsigned long int unchain_cnt,
-				    unsigned long int drop_cnt,
-				    unsigned long int drop_cnt_filter,
-				    unsigned long int queued_msdus)
+				    unsigned long unchain_cnt,
+				    unsigned long drop_cnt,
+				    unsigned long drop_cnt_filter,
+				    unsigned long queued_msdus)
 {
 }
 

commit 35a6657667375d1564f9e9b75491c9e41b04c51f
Author: Govind Singh <govinds@codeaurora.org>
Date:   Thu Oct 11 13:16:14 2018 +0300

    ath10k: add debug mask for QMI layer
    
    Add debug mask to control debug info of ath10k qmi
    messaging layer.
    
    Signed-off-by: Govind Singh <govinds@codeaurora.org>
    Acked-by: Niklas Cassel <niklas.cassel@linaro.org>
    Reviewed-by: Brian Norris <briannorris@chromium.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index 3a6191cff2f9..5cf16d690724 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -44,6 +44,7 @@ enum ath10k_debug_mask {
 	ATH10K_DBG_USB		= 0x00040000,
 	ATH10K_DBG_USB_BULK	= 0x00080000,
 	ATH10K_DBG_SNOC		= 0x00100000,
+	ATH10K_DBG_QMI		= 0x00200000,
 	ATH10K_DBG_ANY		= 0xffffffff,
 };
 

commit 348cd95c8196818613980983b277faae8a3d1fd5
Author: Anilkumar Kolli <akolli@codeaurora.org>
Date:   Tue Sep 4 12:15:14 2018 +0530

    ath10k: add debugfs entry to enable extended tx stats
    
    This patch adds debugfs entry to enable/disable extended
    tx statistics. Extended tx statistics are from peer stats
    feature.
    
    Signed-off-by: Anilkumar Kolli <akolli@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index 0afca5c106b6..3a6191cff2f9 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -128,6 +128,10 @@ static inline u32 ath10k_debug_get_fw_dbglog_level(struct ath10k *ar)
 	return ar->debug.fw_dbglog_level;
 }
 
+static inline int ath10k_debug_is_extd_tx_stats_enabled(struct ath10k *ar)
+{
+	return ar->debug.enable_extd_tx_stats;
+}
 #else
 
 static inline int ath10k_debug_start(struct ath10k *ar)
@@ -190,6 +194,11 @@ static inline u32 ath10k_debug_get_fw_dbglog_level(struct ath10k *ar)
 	return 0;
 }
 
+static inline int ath10k_debug_is_extd_tx_stats_enabled(struct ath10k *ar)
+{
+	return 0;
+}
+
 #define ATH10K_DFS_STAT_INC(ar, c) do { } while (0)
 
 #define ath10k_debug_get_et_strings NULL

commit bc64d05220f3e34cf432a166b83c8fff14cd7a3d
Author: Maharaja Kennadyrajan <mkenna@codeaurora.org>
Date:   Wed Mar 14 12:14:08 2018 +0200

    ath10k: debugfs support to get final TPC stats for 10.4 variants
    
    Export the final Transmit Power Control (TPC) value, which is the
    minimum of control power and existing TPC value to user space via
    a new debugfs file "tpc_stats_final" to help with debugging.
    It works with the new wmi cmd and event introduced in 10.4 firmware
    branch.
    
    WMI command ID: WMI_PDEV_GET_TPC_TABLE_CMDID
    WMI event ID: WMI_PDEV_TPC_TABLE_EVENTID
    
    cat /sys/kernel/debug/ieee80211/phyX/ath10k/tpc_stats_final
    
    $ cat /sys/kernel/debug/ieee80211/phyX/ath10k/tpc_stats_final
    
    TPC config for channel 5180 mode 10
    
    CTL             =  0x 0 Reg. Domain             = 58
    Antenna Gain    =  0 Reg. Max Antenna Gain      =   0
    Power Limit     = 60 Reg. Max Power             = 60
    Num tx chains   =  2 Num supported rates        = 109
    
    ******************* CDD POWER TABLE ****************
    
    No.  Preamble Rate_code tpc_value1 tpc_value2 tpc_value3
    0    CCK      0x40        0          0
    1    CCK      0x41        0          0
    [...]
    107  HTCUP    0x 0       46          46
    108  HTCUP    0x 0       46          46
    
    ******************* STBC POWER TABLE ****************
    
    No.  Preamble Rate_code tpc_value1 tpc_value2 tpc_value3
    0    CCK      0x40        0          0
    1    CCK      0x41        0          0
    [...]
    107  HTCUP    0x 0        46         46
    108  HTCUP    0x 0        46         46
    
    ***********************************
    TXBF not supported
    **********************************
    
    The existing tpc_stats debugfs file provides the dump
    which is minimum of target power and regulatory domain.
    
    cat /sys/kernel/debug/ieee80211/phyX/ath10k/tpc_stats
    
    Hardware_used: QCA4019
    Firmware version: firmware-5.bin_10.4-3.0-00209
    
    Signed-off-by: Maharaja Kennadyrajan <mkenna@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index 7ebb9b1e7e69..0afca5c106b6 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -102,6 +102,9 @@ void ath10k_debug_unregister(struct ath10k *ar);
 void ath10k_debug_fw_stats_process(struct ath10k *ar, struct sk_buff *skb);
 void ath10k_debug_tpc_stats_process(struct ath10k *ar,
 				    struct ath10k_tpc_stats *tpc_stats);
+void
+ath10k_debug_tpc_stats_final_process(struct ath10k *ar,
+				     struct ath10k_tpc_stats_final *tpc_stats);
 void ath10k_debug_dbglog_add(struct ath10k *ar, u8 *buffer, int len);
 
 #define ATH10K_DFS_STAT_INC(ar, c) (ar->debug.dfs_stats.c++)
@@ -165,6 +168,13 @@ static inline void ath10k_debug_tpc_stats_process(struct ath10k *ar,
 	kfree(tpc_stats);
 }
 
+static inline void
+ath10k_debug_tpc_stats_final_process(struct ath10k *ar,
+				     struct ath10k_tpc_stats_final *tpc_stats)
+{
+	kfree(tpc_stats);
+}
+
 static inline void ath10k_debug_dbglog_add(struct ath10k *ar, u8 *buffer,
 					   int len)
 {

commit caee728ab761fa1255ff636aec13c87a3d01364d
Author: Vasanthakumar Thiagarajan <vthiagar@codeaurora.org>
Date:   Wed Mar 14 12:14:06 2018 +0200

    ath10k: add sta rx packet stats per tid
    
    Added per tid sta counters for the following
    
    - Total number MSDUs received from firmware
    - Number of MSDUs received with errors like decryption, crc, mic ,etc.
    - Number of MSDUs dropped in the driver
    - A-MPDU/A-MSDU subframe stats
    - Number of MSDUS passed to mac80211
    
    All stats other than A-MPDU stats are only for received data frames.
    A-MPDU stats might have stats for management frames when monitor
    interface is active where management frames are notified both in wmi
    and HTT interfaces.
    
    These per tid stats can be enabled with tid bitmask through a debugfs
    like below
    
     echo <tid_bitmask> > /sys/kernel/debug/ieee80211/phyX/ath10k/sta_tid_stats_mask
    
     tid 16 (tid_bitmask 0x10000) is used for non-qos data/management frames
    
    The stats are read from
    /sys/kernel/debug/ieee80211/phyX/netdev\:wlanX/stations/<sta_mac>/dump_tid_stats
    
    Sample output:
    
     To enable rx stats for tid 0, 5 and 6,
    
     echo 0x00000061 > /sys/kernel/debug/ieee80211/phy0/ath10k/sta_tid_stats_mask
    
    cat /sys/kernel/debug/ieee80211/phy0/netdev\:wlan15/stations/8c\:fd\:f0\:0a\:8e\:df/dump_tid_stats
    
                    Driver Rx pkt stats per tid, ([tid] count)
                    ------------------------------------------
    MSDUs from FW                   [00] 2567        [05] 3178        [06] 1089
    MSDUs unchained                 [00] 0           [05] 0           [06] 0
    MSDUs locally dropped:chained   [00] 0           [05] 0           [06] 0
    MSDUs locally dropped:filtered  [00] 0           [05] 0           [06] 0
    MSDUs queued for mac80211       [00] 2567        [05] 3178        [06] 1089
    MSDUs with error:fcs_err        [00] 0           [05] 0           [06] 2
    MSDUs with error:tkip_err       [00] 0           [05] 0           [06] 0
    MSDUs with error:crypt_err      [00] 0           [05] 0           [06] 0
    MSDUs with error:peer_idx_inval [00] 0           [05] 0           [06] 0
    
    A-MPDU num subframes upto 10    [00] 2567        [05] 3178        [06] 1087
    A-MPDU num subframes 11-20      [00] 0           [05] 0           [06] 0
    A-MPDU num subframes 21-30      [00] 0           [05] 0           [06] 0
    A-MPDU num subframes 31-40      [00] 0           [05] 0           [06] 0
    A-MPDU num subframes 41-50      [00] 0           [05] 0           [06] 0
    A-MPDU num subframes 51-60      [00] 0           [05] 0           [06] 0
    A-MPDU num subframes >60        [00] 0           [05] 0           [06] 0
    
    A-MSDU num subframes 1          [00] 2567        [05] 3178        [06] 1089
    A-MSDU num subframes 2          [00] 0           [05] 0           [06] 0
    A-MSDU num subframes 3          [00] 0           [05] 0           [06] 0
    A-MSDU num subframes 4          [00] 0           [05] 0           [06] 0
    A-MSDU num subframes >4         [00] 0           [05] 0           [06] 0
    
    Signed-off-by: Vasanthakumar Thiagarajan <vthiagar@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index e54308889e59..7ebb9b1e7e69 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -1,6 +1,7 @@
 /*
  * Copyright (c) 2005-2011 Atheros Communications Inc.
  * Copyright (c) 2011-2017 Qualcomm Atheros, Inc.
+ * Copyright (c) 2018, The Linux Foundation. All rights reserved.
  *
  * Permission to use, copy, modify, and/or distribute this software for any
  * purpose with or without fee is hereby granted, provided that the above
@@ -191,12 +192,42 @@ void ath10k_sta_add_debugfs(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
 			    struct ieee80211_sta *sta, struct dentry *dir);
 void ath10k_sta_update_rx_duration(struct ath10k *ar,
 				   struct ath10k_fw_stats *stats);
+void ath10k_sta_update_rx_tid_stats(struct ath10k *ar, u8 *first_hdr,
+				    unsigned long int num_msdus,
+				    enum ath10k_pkt_rx_err err,
+				    unsigned long int unchain_cnt,
+				    unsigned long int drop_cnt,
+				    unsigned long int drop_cnt_filter,
+				    unsigned long int queued_msdus);
+void ath10k_sta_update_rx_tid_stats_ampdu(struct ath10k *ar,
+					  u16 peer_id, u8 tid,
+					  struct htt_rx_indication_mpdu_range *ranges,
+					  int num_ranges);
 #else
 static inline
 void ath10k_sta_update_rx_duration(struct ath10k *ar,
 				   struct ath10k_fw_stats *stats)
 {
 }
+
+static inline
+void ath10k_sta_update_rx_tid_stats(struct ath10k *ar, u8 *first_hdr,
+				    unsigned long int num_msdus,
+				    enum ath10k_pkt_rx_err err,
+				    unsigned long int unchain_cnt,
+				    unsigned long int drop_cnt,
+				    unsigned long int drop_cnt_filter,
+				    unsigned long int queued_msdus)
+{
+}
+
+static inline
+void ath10k_sta_update_rx_tid_stats_ampdu(struct ath10k *ar,
+					  u16 peer_id, u8 tid,
+					  struct htt_rx_indication_mpdu_range *ranges,
+					  int num_ranges)
+{
+}
 #endif /* CONFIG_MAC80211_DEBUGFS */
 
 #ifdef CONFIG_ATH10K_DEBUG

commit 8b1083d6188222c5efceb120b3334f0d8527c215
Author: Kalle Valo <kvalo@qca.qualcomm.com>
Date:   Fri Dec 22 18:31:13 2017 +0200

    ath10k: update copyright year
    
    Update year for Qualcomm Atheros, Inc. copyrights.
    
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index 58046f89dc52..e54308889e59 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -1,6 +1,6 @@
 /*
  * Copyright (c) 2005-2011 Atheros Communications Inc.
- * Copyright (c) 2011-2013 Qualcomm Atheros, Inc.
+ * Copyright (c) 2011-2017 Qualcomm Atheros, Inc.
  *
  * Permission to use, copy, modify, and/or distribute this software for any
  * purpose with or without fee is hereby granted, provided that the above

commit f25b9f285a0eff7ae5d987acfb1d2407769b67af
Author: Kalle Valo <kvalo@qca.qualcomm.com>
Date:   Fri Dec 22 15:38:43 2017 +0200

    ath10k: refactor firmware crashdump code to coredump.c
    
    In preparation to add RAM dump support. No functional changes, only moving code
    and renaming function names.
    
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index 134fb68ae546..58046f89dc52 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -101,13 +101,8 @@ void ath10k_debug_unregister(struct ath10k *ar);
 void ath10k_debug_fw_stats_process(struct ath10k *ar, struct sk_buff *skb);
 void ath10k_debug_tpc_stats_process(struct ath10k *ar,
 				    struct ath10k_tpc_stats *tpc_stats);
-struct ath10k_fw_crash_data *
-ath10k_debug_get_new_fw_crash_data(struct ath10k *ar);
-
 void ath10k_debug_dbglog_add(struct ath10k *ar, u8 *buffer, int len);
 
-int ath10k_debug_fw_devcoredump(struct ath10k *ar);
-
 #define ATH10K_DFS_STAT_INC(ar, c) (ar->debug.dfs_stats.c++)
 
 void ath10k_debug_get_et_strings(struct ieee80211_hw *hw,
@@ -174,12 +169,6 @@ static inline void ath10k_debug_dbglog_add(struct ath10k *ar, u8 *buffer,
 {
 }
 
-static inline struct ath10k_fw_crash_data *
-ath10k_debug_get_new_fw_crash_data(struct ath10k *ar)
-{
-	return NULL;
-}
-
 static inline u64 ath10k_debug_get_fw_dbglog_mask(struct ath10k *ar)
 {
 	return 0;
@@ -190,11 +179,6 @@ static inline u32 ath10k_debug_get_fw_dbglog_level(struct ath10k *ar)
 	return 0;
 }
 
-static inline int ath10k_debug_fw_devcoredump(struct ath10k *ar)
-{
-	return 0;
-}
-
 #define ATH10K_DFS_STAT_INC(ar, c) do { } while (0)
 
 #define ath10k_debug_get_et_strings NULL

commit b796240409b3f576ae8ebbad9b5679ff2fb5a39c
Author: Govind Singh <govinds@qti.qualcomm.com>
Date:   Thu Dec 21 21:35:21 2017 +0530

    ath10k: Add debug mask for SNOC bus type
    
    WCN3990 target uses SNOC bus.
    Add debug mask for SNOC bus type.
    
    Signed-off-by: Govind Singh <govinds@qti.qualcomm.com>
    Signed-off-by: Rakesh Pillai <pillair@qti.qualcomm.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index 5e662994c49a..134fb68ae546 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -42,6 +42,7 @@ enum ath10k_debug_mask {
 	ATH10K_DBG_SDIO_DUMP	= 0x00020000,
 	ATH10K_DBG_USB		= 0x00040000,
 	ATH10K_DBG_USB_BULK	= 0x00080000,
+	ATH10K_DBG_SNOC		= 0x00100000,
 	ATH10K_DBG_ANY		= 0xffffffff,
 };
 

commit e8123bb74c4ef05027e64124f214b8f01dd13352
Author: Anilkumar Kolli <akolli@qti.qualcomm.com>
Date:   Tue Dec 5 19:01:25 2017 +0530

    ath10k: add per peer tx stats support for 10.2.4
    
    10.2.4 firmware branch (used in QCA988X) does not support
    HTT_10_4_T2H_MSG_TYPE_PEER_STATS and that's why ath10k does not provide
    tranmission rate statistics to user space, instead it just shows
    hardcoded 6 Mbit/s. But pktlog firmware facility provides per peer tx
    statistics. The firmware sends one pktlog event for every four
    PPDUs per peer, which include:
    
    * successful number of packets and bytes transmitted
    * number of packets and bytes dropped
    * retried number of packets and bytes
    * rate info per ppdu
    
    Firmware supports WMI_SERVICE_PEER_STATS, pktlog is enabled through
    ATH10K_FLAG_PEER_STATS, which is nowadays enabled by default in ath10k.
    
    This patch does not impact throughput.
    
    Tested on QCA9880 with firmware version 10.2.4.70.48. This should also
    work with firmware branch 10.2.4-1.0-00029
    
    Parse peer stats from pktlog packets and update the tx rate information
    per STA. This way user space can query about transmit rate with iw:
    
    $iw wlan0 station dump
    Station 3c:a9:f4:72:bb:a4 (on wlan1)
            inactive time:  8210 ms
            rx bytes:       9166
            rx packets:     44
            tx bytes:       1105
            tx packets:     9
            tx retries:     0
            tx failed:      1
            rx drop misc:   3
            signal:         -75 [-75, -87, -88] dBm
            signal avg:     -75 [-75, -85, -88] dBm
            tx bitrate:     39.0 MBit/s MCS 10
            rx bitrate:     26.0 MBit/s MCS 3
            rx duration:    23250 us
            authorized:     yes
            authenticated:  yes
            associated:     yes
            preamble:       short
            WMM/WME:        yes
            MFP:            no
            TDLS peer:      no
            DTIM period:    2
            beacon interval:100
            short preamble: yes
            short slot time:yes
            connected time: 22 seconds
    
    Signed-off-by: Anilkumar Kolli <akolli@qti.qualcomm.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index dd82a61ed1c8..5e662994c49a 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -51,7 +51,8 @@ enum ath10k_pktlog_filter {
 	ATH10K_PKTLOG_RCFIND     = 0x000000004,
 	ATH10K_PKTLOG_RCUPDATE   = 0x000000008,
 	ATH10K_PKTLOG_DBG_PRINT  = 0x000000010,
-	ATH10K_PKTLOG_ANY        = 0x00000001f,
+	ATH10K_PKTLOG_PEER_STATS = 0x000000040,
+	ATH10K_PKTLOG_ANY        = 0x00000005f,
 };
 
 enum ath10k_dbg_aggr_mode {
@@ -60,6 +61,21 @@ enum ath10k_dbg_aggr_mode {
 	ATH10K_DBG_AGGR_MODE_MAX,
 };
 
+/* Types of packet log events */
+enum ath_pktlog_type {
+	ATH_PKTLOG_TYPE_TX_CTRL = 1,
+	ATH_PKTLOG_TYPE_TX_STAT,
+};
+
+struct ath10k_pktlog_hdr {
+	__le16 flags;
+	__le16 missed_cnt;
+	__le16 log_type; /* Type of log information foll this header */
+	__le16 size; /* Size of variable length log information in bytes */
+	__le32 timestamp;
+	u8 payload[0];
+} __packed;
+
 /* FIXME: How to calculate the buffer size sanely? */
 #define ATH10K_FW_STATS_BUF_SIZE (1024 * 1024)
 

commit 6a7f891178c2d2fc3c01e4b7570bd15c0bafd73f
Author: Anilkumar Kolli <akolli@qti.qualcomm.com>
Date:   Tue Dec 5 19:01:23 2017 +0530

    ath10k: remove MAC80211_DEBUGFS dependency on ath10k_sta_statistics
    
    Remove CONFIG_MAC80211_DEBUGFS dependency on ath10k_sta_statistics().
    ath10k_sta_statistics() has per sta tx/rx stats and this should not
    be dependent on MAC80211_DEBUGFS.
    
    No changes in functionality.
    
    Signed-off-by: Anilkumar Kolli <akolli@qti.qualcomm.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index 548ad5483a4a..dd82a61ed1c8 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -190,9 +190,6 @@ void ath10k_sta_add_debugfs(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
 			    struct ieee80211_sta *sta, struct dentry *dir);
 void ath10k_sta_update_rx_duration(struct ath10k *ar,
 				   struct ath10k_fw_stats *stats);
-void ath10k_sta_statistics(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
-			   struct ieee80211_sta *sta,
-			   struct station_info *sinfo);
 #else
 static inline
 void ath10k_sta_update_rx_duration(struct ath10k *ar,

commit b00435e6cda6863c2c7f40c09c6fab21c205f455
Author: Erik Stromdahl <erik.stromdahl@gmail.com>
Date:   Fri Jul 28 15:15:37 2017 +0300

    ath10k: various usb related definitions
    
    Definitions for USB based chipsets
    
    Signed-off-by: Erik Stromdahl <erik.stromdahl@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index 257d10985c6e..548ad5483a4a 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -40,6 +40,8 @@ enum ath10k_debug_mask {
 	ATH10K_DBG_AHB		= 0x00008000,
 	ATH10K_DBG_SDIO		= 0x00010000,
 	ATH10K_DBG_SDIO_DUMP	= 0x00020000,
+	ATH10K_DBG_USB		= 0x00040000,
+	ATH10K_DBG_USB_BULK	= 0x00080000,
 	ATH10K_DBG_ANY		= 0xffffffff,
 };
 

commit 01d6fd6965eaf8d4b3aab681d30e77c53a834162
Author: Erik Stromdahl <erik.stromdahl@gmail.com>
Date:   Wed Apr 26 12:17:55 2017 +0300

    ath10k: various sdio related definitions
    
    Debug masks for SDIO HIF layer.
    Address definitions for SDIO/mbox based chipsets.
    Augmented struct host_interest with more members.
    
    Signed-off-by: Erik Stromdahl <erik.stromdahl@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index 2368f47314ae..257d10985c6e 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -38,6 +38,8 @@ enum ath10k_debug_mask {
 	ATH10K_DBG_WMI_PRINT	= 0x00002000,
 	ATH10K_DBG_PCI_PS	= 0x00004000,
 	ATH10K_DBG_AHB		= 0x00008000,
+	ATH10K_DBG_SDIO		= 0x00010000,
+	ATH10K_DBG_SDIO_DUMP	= 0x00020000,
 	ATH10K_DBG_ANY		= 0xffffffff,
 };
 

commit 727000e6af34748552d13069ce52de2ad3d6c271
Author: Arun Khandavalli <akhandav@qti.qualcomm.com>
Date:   Wed Dec 21 14:19:21 2016 +0200

    ath10k: support dev_coredump for crash dump
    
    Whenever firmware crashes, and both CONFIG_ATH10K_DEBUGFS and
    CONFIG_ALLOW_DEV_COREDUMP are enabled, dump information about the crash via a
    devcoredump device. Dump can be read from userspace for further analysis from:
    
    /sys/class/devcoredump/devcd*/data
    
    As until now we have provided the firmware crash dump file via fw_crash_dump
    debugfs keep it still available but deprecate and a warning print that the user
    should switch to using dev_coredump.
    
    Future improvement would be not to depend on CONFIG_ATH10K_DEBUGFS, as there
    might be systems which want to get the firmware crash dump but not enable
    debugfs. How to handle memory consumption is also something which needs to be
    taken into account.
    
    Signed-off-by: Arun Khandavalli <akhandav@qti.qualcomm.com>
    [kvalo@qca.qualcomm.com: rebase, fixes, improve commit log]
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index 335512b11ca2..2368f47314ae 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -84,6 +84,9 @@ struct ath10k_fw_crash_data *
 ath10k_debug_get_new_fw_crash_data(struct ath10k *ar);
 
 void ath10k_debug_dbglog_add(struct ath10k *ar, u8 *buffer, int len);
+
+int ath10k_debug_fw_devcoredump(struct ath10k *ar);
+
 #define ATH10K_DFS_STAT_INC(ar, c) (ar->debug.dfs_stats.c++)
 
 void ath10k_debug_get_et_strings(struct ieee80211_hw *hw,
@@ -166,6 +169,11 @@ static inline u32 ath10k_debug_get_fw_dbglog_level(struct ath10k *ar)
 	return 0;
 }
 
+static inline int ath10k_debug_fw_devcoredump(struct ath10k *ar)
+{
+	return 0;
+}
+
 #define ATH10K_DFS_STAT_INC(ar, c) do { } while (0)
 
 #define ath10k_debug_get_et_strings NULL

commit ebee76f7fa46851775942624fe6c7b80559a408a
Author: Benjamin Berg <benjamin@sipsolutions.net>
Date:   Wed Sep 28 15:11:58 2016 +0300

    ath10k: allow setting coverage class
    
    Unfortunately ath10k does not generally allow modifying the coverage class
    with the stock firmware and Qualcomm has so far refused to implement this
    feature so that it can be properly supported in ath10k. If we however know
    the registers that need to be modified for proper operation with a higher
    coverage class, then we can do these modifications from the driver.
    
    This is a hack and might cause subtle problems but as it's not enabled by
    default (only when user space changes the coverage class explicitly) it should
    not cause new problems for existing setups. But still this should be considered
    as an experimental feature and used with caution.
    
    This patch implements the support for first generation cards (QCA9880, QCA9887
    and so on) which are based on a core that is similar to ath9k. The registers
    are modified in place and need to be re-written every time the firmware sets
    them. To achieve this the register status is verified after certain WMI events
    from the firmware.
    
    The coverage class may not be modified temporarily right after the card
    re-initializes the registers. This is for example the case during scanning.
    
    Thanks to Sebastian Gottschall <s.gottschall@dd-wrt.com> for initially
    working on a userspace support for this. This patch wouldn't have been
    possible without this documentation.
    
    Signed-off-by: Benjamin Berg <benjamin@sipsolutions.net>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    Signed-off-by: Mathias Kretschmer <mathias.kretschmer@fit.fraunhofer.de>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index c458fa96a6d4..335512b11ca2 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -94,7 +94,19 @@ int ath10k_debug_get_et_sset_count(struct ieee80211_hw *hw,
 void ath10k_debug_get_et_stats(struct ieee80211_hw *hw,
 			       struct ieee80211_vif *vif,
 			       struct ethtool_stats *stats, u64 *data);
+
+static inline u64 ath10k_debug_get_fw_dbglog_mask(struct ath10k *ar)
+{
+	return ar->debug.fw_dbglog_mask;
+}
+
+static inline u32 ath10k_debug_get_fw_dbglog_level(struct ath10k *ar)
+{
+	return ar->debug.fw_dbglog_level;
+}
+
 #else
+
 static inline int ath10k_debug_start(struct ath10k *ar)
 {
 	return 0;
@@ -144,6 +156,16 @@ ath10k_debug_get_new_fw_crash_data(struct ath10k *ar)
 	return NULL;
 }
 
+static inline u64 ath10k_debug_get_fw_dbglog_mask(struct ath10k *ar)
+{
+	return 0;
+}
+
+static inline u32 ath10k_debug_get_fw_dbglog_level(struct ath10k *ar)
+{
+	return 0;
+}
+
 #define ATH10K_DFS_STAT_INC(ar, c) do { } while (0)
 
 #define ath10k_debug_get_et_strings NULL

commit 120a1f02a5c4a3c91a9b082713ca8cd32f9acf76
Author: Mohammed Shafi Shajakhan <mohammed@qti.qualcomm.com>
Date:   Thu Jun 30 15:23:50 2016 +0300

    ath10k: add support for ath10k_sta_statistics support
    
    Enable support for 'drv_sta_statistics' callback.
    Export rx_duration support if available to cfg80211/nl80211
    
    This can also act as a placeholder for any new per STA stats support
    
    Signed-off-by: Mohammed Shafi Shajakhan <mohammed@qti.qualcomm.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index dc549c4cc749..c458fa96a6d4 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -156,6 +156,9 @@ void ath10k_sta_add_debugfs(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
 			    struct ieee80211_sta *sta, struct dentry *dir);
 void ath10k_sta_update_rx_duration(struct ath10k *ar,
 				   struct ath10k_fw_stats *stats);
+void ath10k_sta_statistics(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
+			   struct ieee80211_sta *sta,
+			   struct station_info *sinfo);
 #else
 static inline
 void ath10k_sta_update_rx_duration(struct ath10k *ar,

commit 4a49ae94a448faa71e89fac8f0b276261123387e
Author: Mohammed Shafi Shajakhan <mohammed@qti.qualcomm.com>
Date:   Thu Jun 30 15:23:47 2016 +0300

    ath10k: fix 10.4 extended peer stats update
    
    10.4 'extended peer stats' will be not be appended with normal peer stats
    data and they shall be coming in separate chunks. Fix this by maintaining
    a separate linked list 'extender peer stats' for 10.4 and update
    rx_duration for per station statistics. Also parse through beacon filter
    (if enabled), to make sure we parse the extended peer stats properly.
    This issue was exposed when more than one client is connected and
    extended peer stats for 10.4 is enabled
    
    The order for the stats is as below
    S - standard peer stats, E- extended peer stats, B - beacon filter stats
    
    {S1, S2, S3..} -> {B1, B2, B3..}(if available) -> {E1, E2, E3..}
    
    Fixes: f9575793d44c ("ath10k: enable parsing per station rx duration for 10.4")
    Signed-off-by: Mohammed Shafi Shajakhan <mohammed@qti.qualcomm.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index 75c89e3625ef..dc549c4cc749 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -154,10 +154,12 @@ ath10k_debug_get_new_fw_crash_data(struct ath10k *ar)
 #ifdef CONFIG_MAC80211_DEBUGFS
 void ath10k_sta_add_debugfs(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
 			    struct ieee80211_sta *sta, struct dentry *dir);
-void ath10k_sta_update_rx_duration(struct ath10k *ar, struct list_head *peer);
+void ath10k_sta_update_rx_duration(struct ath10k *ar,
+				   struct ath10k_fw_stats *stats);
 #else
-static inline void ath10k_sta_update_rx_duration(struct ath10k *ar,
-						 struct list_head *peer)
+static inline
+void ath10k_sta_update_rx_duration(struct ath10k *ar,
+				   struct ath10k_fw_stats *stats)
 {
 }
 #endif /* CONFIG_MAC80211_DEBUGFS */

commit 14e105cd4085c7bbf42f0eef8c677ad6c7d78a83
Author: Kalle Valo <kvalo@qca.qualcomm.com>
Date:   Wed Apr 13 14:13:21 2016 +0300

    ath10k: fix checkpatch warnings related to spaces
    
    Fix checkpatch warnings about use of spaces with operators:
    
    spaces preferred around that '*' (ctx:VxV)
    
    This has been recently added to checkpatch.
    
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index 6206edd7c49f..75c89e3625ef 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -57,7 +57,7 @@ enum ath10k_dbg_aggr_mode {
 };
 
 /* FIXME: How to calculate the buffer size sanely? */
-#define ATH10K_FW_STATS_BUF_SIZE (1024*1024)
+#define ATH10K_FW_STATS_BUF_SIZE (1024 * 1024)
 
 extern unsigned int ath10k_debug_mask;
 

commit 0b523ced9a3cd05abf240e913b2d80e7d0fa3478
Author: Raja Mani <rmani@qti.qualcomm.com>
Date:   Wed Jan 27 15:24:25 2016 +0530

    ath10k: add basic skeleton to support ahb
    
    qca4019 uses ahb instead of pci where it slightly differs in device
    enumeration, clock control, reset control, etc. Good thing is that
    ahb also uses copy engine for the data transaction. So, the most of
    the stuff implemented in pci.c/ce.c are reusable in ahb case too.
    
    Device enumeration in ahb case comes through platform driver/device
    model. All resource details like irq, memory map, clocks, etc for
    qca4019 can be fetched from of_node of platform device.
    
    Simply flow would look like,
    
     device tree => platform device (kernel) => platform driver (ath10k)
    
    Device tree entry will have all qca4019 resource details and the same
    info will be passed to kernel. Kernel will prepare new platform device
    for that entry and expose DT info to of_node in platform device.
    Later, ath10k would register platform driver with unique compatible name
    and then kernels binds to corresponding compatible entry & calls ath10k
    ahb probe functions. From there onwards, ath10k will take control of it
    and move forward.
    
    New bool flag CONFIG_ATH10K_AHB is added in Kconfig to conditionally
    enable ahb support in ath10k. On enabling this flag, ath10k_pci.ko
    will have ahb support. This patch adds only basic skeleton and few
    macros to support ahb in the context of qca4019.
    
    Signed-off-by: Raja Mani <rmani@qti.qualcomm.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index f273478e2afb..6206edd7c49f 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -37,6 +37,7 @@ enum ath10k_debug_mask {
 	ATH10K_DBG_TESTMODE	= 0x00001000,
 	ATH10K_DBG_WMI_PRINT	= 0x00002000,
 	ATH10K_DBG_PCI_PS	= 0x00004000,
+	ATH10K_DBG_AHB		= 0x00008000,
 	ATH10K_DBG_ANY		= 0xffffffff,
 };
 

commit 856e7c3084399fb7e029628dbe43dcb9bb7d7b5b
Author: Mohammed Shafi Shajakhan <mohammed@qti.qualcomm.com>
Date:   Wed Jan 13 21:16:34 2016 +0530

    ath10k: add debugfs support for Per STA total rx duration
    
    Add debugfs support for per client total rx duration, track this
    via the report of Peer stats rx duration reported for every 500ms
    
    Signed-off-by: Mohammed Shafi Shajakhan <mohammed@qti.qualcomm.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index 814719cf4f22..f273478e2afb 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -153,6 +153,12 @@ ath10k_debug_get_new_fw_crash_data(struct ath10k *ar)
 #ifdef CONFIG_MAC80211_DEBUGFS
 void ath10k_sta_add_debugfs(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
 			    struct ieee80211_sta *sta, struct dentry *dir);
+void ath10k_sta_update_rx_duration(struct ath10k *ar, struct list_head *peer);
+#else
+static inline void ath10k_sta_update_rx_duration(struct ath10k *ar,
+						 struct list_head *peer)
+{
+}
 #endif /* CONFIG_MAC80211_DEBUGFS */
 
 #ifdef CONFIG_ATH10K_DEBUG

commit 23f591ea9b1c8ce7ddfbf14ffd972c8f33677b2d
Author: Kalle Valo <kvalo@qca.qualcomm.com>
Date:   Wed Nov 25 15:38:27 2015 +0200

    ath10k: split driver info messages during device initialisation
    
    Earlier we printed all the info messages after a successful device
    initialisation and firmware boot, but that's problematic if something goes
    wrong and there's no easy way to know what firmware version was used and so on.
    
    Split the info messages into smaller pieces and print them as soon as we have
    the info available.
    
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index 7de780c4ec8d..814719cf4f22 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -63,6 +63,10 @@ extern unsigned int ath10k_debug_mask;
 __printf(2, 3) void ath10k_info(struct ath10k *ar, const char *fmt, ...);
 __printf(2, 3) void ath10k_err(struct ath10k *ar, const char *fmt, ...);
 __printf(2, 3) void ath10k_warn(struct ath10k *ar, const char *fmt, ...);
+
+void ath10k_debug_print_hwfw_info(struct ath10k *ar);
+void ath10k_debug_print_board_info(struct ath10k *ar);
+void ath10k_debug_print_boot_info(struct ath10k *ar);
 void ath10k_print_driver_info(struct ath10k *ar);
 
 #ifdef CONFIG_ATH10K_DEBUGFS

commit bc6f9ae6043a219b5afadf0391ce77db401a966f
Author: Manikanta Pubbisetty <c_mpubbi@qti.qualcomm.com>
Date:   Fri Oct 16 15:54:52 2015 +0300

    ath10k: make fw stats prints specific to firmware version
    
    The patch makes debug stats prints fw specific by adding a new member
    in wmi_ops. That way it's easier to add fw_stats support to 10.4 firmware.
    
    Signed-off-by: Manikanta Pubbisetty <c_mpubbi@qti.qualcomm.com>
    Signed-off-by: Tamizh Chelvam <c_traja@qti.qualcomm.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index b07639e9b082..7de780c4ec8d 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -55,6 +55,9 @@ enum ath10k_dbg_aggr_mode {
 	ATH10K_DBG_AGGR_MODE_MAX,
 };
 
+/* FIXME: How to calculate the buffer size sanely? */
+#define ATH10K_FW_STATS_BUF_SIZE (1024*1024)
+
 extern unsigned int ath10k_debug_mask;
 
 __printf(2, 3) void ath10k_info(struct ath10k *ar, const char *fmt, ...);

commit 295426669cd68efc84657e6ee426499cfb54346e
Author: Maharaja Kennadyrajan <c_mkenna@qti.qualcomm.com>
Date:   Mon Oct 5 17:56:38 2015 +0300

    ath10k: implement debugfs interface for Transmit Power Control stats
    
    The Transmit Power Control (TPC) dump will show the power control values for
    each rate which makes it easier to debug calibration problems.
    
    Example usage:
    
    # cat /sys/kernel/debug/ieee80211/phy0/ath10k/tpc_stats
    TPC config for channel  5180  mode  10
    
    CTL             = 0x10 Reg. Domain              = 58
    Antenna Gain    = 1    Reg. Max Antenna Gain    = 0
    Power Limit     = 34   Reg. Max Power           = 34
    Num tx chains   = 3    Num supported rates      = 155
    
    **********CDD POWER TABLE*******
    
    No.  Preamble Rate_code tpc_valu1 tpc_value2 tpc_value3
    0       CCK     0x40       0            0       0
    1       CCk     0x41       0            0       0
    
    [...]
    
    154     HTCUP   0x 0       24           0       0
    **********STBC POWER TABLE******
    No.  Preamble Rate_code tpc_valu1 tpc_value2 tpc_value3
    0       CCK     0x40       0            0       0
    
    [...]
    
    154     HTCUP   0x 0       24           24      0
    **********TXBF POWER TABLE******
    
    is used to dump the tx power control stats.
    
    Signed-off-by: Maharaja Kennadyrajan <c_mkenna@qti.qualcomm.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index 53bd6a19eab6..b07639e9b082 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -70,6 +70,8 @@ void ath10k_debug_destroy(struct ath10k *ar);
 int ath10k_debug_register(struct ath10k *ar);
 void ath10k_debug_unregister(struct ath10k *ar);
 void ath10k_debug_fw_stats_process(struct ath10k *ar, struct sk_buff *skb);
+void ath10k_debug_tpc_stats_process(struct ath10k *ar,
+				    struct ath10k_tpc_stats *tpc_stats);
 struct ath10k_fw_crash_data *
 ath10k_debug_get_new_fw_crash_data(struct ath10k *ar);
 
@@ -117,6 +119,12 @@ static inline void ath10k_debug_fw_stats_process(struct ath10k *ar,
 {
 }
 
+static inline void ath10k_debug_tpc_stats_process(struct ath10k *ar,
+						  struct ath10k_tpc_stats *tpc_stats)
+{
+	kfree(tpc_stats);
+}
+
 static inline void ath10k_debug_dbglog_add(struct ath10k *ar, u8 *buffer,
 					   int len)
 {

commit 77258d409ce45890104e3da11d0261402c49aee1
Author: Michal Kazior <michal.kazior@tieto.com>
Date:   Mon May 18 09:38:18 2015 +0000

    ath10k: enable pci soc powersaving
    
    By using SOC_WAKE register it is possible to bring
    down power consumption of QCA61X4 from 36mA to
    16mA when associated and idle.
    
    Currently the sleep threshold/grace period is at a
    very conservative value of 60ms.
    
    Contrary to QCA61X4 the QCA988X firmware doesn't
    have Rx/beacon filtering available for client mode
    and SWBA events are used for beaconing in AP/IBSS
    so the SoC needs to be woken up at least every
    ~100ms in most cases. This means that QCA988X
    is at a disadvantage and the power consumption
    won't drop as much as for QCA61X4.
    
    Due to putting irq-safe spinlocks on every MMIO
    read/write it is expected this can cause a little
    performance regression on some systems. I haven't
    done any thorough measurements but some of my
    tests don't show any extreme degradation.
    
    The patch removes some explicit pci_wake calls
    that were added in 320e14b8db51aa ("ath10k: fix
    some pci wake/sleep issues"). This is safe because
    all MMIO accesses are now wrapped and the device
    is woken up automatically if necessary.
    
    Signed-off-by: Michal Kazior <michal.kazior@tieto.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index a12b8323f9f1..53bd6a19eab6 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -36,6 +36,7 @@ enum ath10k_debug_mask {
 	ATH10K_DBG_REGULATORY	= 0x00000800,
 	ATH10K_DBG_TESTMODE	= 0x00001000,
 	ATH10K_DBG_WMI_PRINT	= 0x00002000,
+	ATH10K_DBG_PCI_PS	= 0x00004000,
 	ATH10K_DBG_ANY		= 0xffffffff,
 };
 

commit f5045988b937e4801e3185f9d95c34a7c050b681
Author: Rajkumar Manoharan <rmanohar@qti.qualcomm.com>
Date:   Mon Jan 12 14:07:27 2015 +0200

    ath10k: Implement sta_add_debugfs
    
    Add per station debugfs files when a station is added to mac80211's
    station list. This helps to group peer specific debugfs entries
    altogether. Right now this callback adds support to test aggregation
    procedures (addba/addba_resp/delba) manually.
    
    To enable automatic aggregation in target,
    echo 0 >/sys/kernel/debug/ieee80211/phyX/netdev:wlanX/
            stations/XX:XX:XX:XX:XX:XX/aggr_mode
    
    For manual mode,
    echo 1 >/sys/kernel/debug/ieee80211/phyX/netdev:wlanX/
            stations/XX:XX:XX:XX:XX:XX/aggr_mode
    
    Signed-off-by: Rajkumar Manoharan <rmanohar@qti.qualcomm.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index 1b87a5dbec53..a12b8323f9f1 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -48,6 +48,12 @@ enum ath10k_pktlog_filter {
 	ATH10K_PKTLOG_ANY        = 0x00000001f,
 };
 
+enum ath10k_dbg_aggr_mode {
+	ATH10K_DBG_AGGR_MODE_AUTO,
+	ATH10K_DBG_AGGR_MODE_MANUAL,
+	ATH10K_DBG_AGGR_MODE_MAX,
+};
+
 extern unsigned int ath10k_debug_mask;
 
 __printf(2, 3) void ath10k_info(struct ath10k *ar, const char *fmt, ...);
@@ -77,7 +83,6 @@ int ath10k_debug_get_et_sset_count(struct ieee80211_hw *hw,
 void ath10k_debug_get_et_stats(struct ieee80211_hw *hw,
 			       struct ieee80211_vif *vif,
 			       struct ethtool_stats *stats, u64 *data);
-
 #else
 static inline int ath10k_debug_start(struct ath10k *ar)
 {
@@ -129,6 +134,10 @@ ath10k_debug_get_new_fw_crash_data(struct ath10k *ar)
 #define ath10k_debug_get_et_stats NULL
 
 #endif /* CONFIG_ATH10K_DEBUGFS */
+#ifdef CONFIG_MAC80211_DEBUGFS
+void ath10k_sta_add_debugfs(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
+			    struct ieee80211_sta *sta, struct dentry *dir);
+#endif /* CONFIG_MAC80211_DEBUGFS */
 
 #ifdef CONFIG_ATH10K_DEBUG
 __printf(3, 4) void ath10k_dbg(struct ath10k *ar,

commit acfe7ecfa40dece73e3dcdc2f606a87988b1472c
Author: Michal Kazior <michal.kazior@tieto.com>
Date:   Thu Nov 27 10:11:17 2014 +0100

    ath10k: make wmi service bitmap non-debug
    
    The service bitmap can be used to determine
    firmware capabilities.
    
    Signed-off-by: Michal Kazior <michal.kazior@tieto.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index 815d325ab930..1b87a5dbec53 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -62,9 +62,6 @@ int ath10k_debug_create(struct ath10k *ar);
 void ath10k_debug_destroy(struct ath10k *ar);
 int ath10k_debug_register(struct ath10k *ar);
 void ath10k_debug_unregister(struct ath10k *ar);
-void ath10k_debug_read_service_map(struct ath10k *ar,
-				   const void *service_map,
-				   size_t map_size);
 void ath10k_debug_fw_stats_process(struct ath10k *ar, struct sk_buff *skb);
 struct ath10k_fw_crash_data *
 ath10k_debug_get_new_fw_crash_data(struct ath10k *ar);
@@ -109,12 +106,6 @@ static inline void ath10k_debug_unregister(struct ath10k *ar)
 {
 }
 
-static inline void ath10k_debug_read_service_map(struct ath10k *ar,
-						 const void *service_map,
-						 size_t map_size)
-{
-}
-
 static inline void ath10k_debug_fw_stats_process(struct ath10k *ar,
 						 struct sk_buff *skb)
 {

commit 3be004c3aa4341c7c2461b37612a3a7a3323579d
Author: Ben Greear <greearb@candelatech.com>
Date:   Tue Sep 23 14:17:19 2014 -0700

    ath10k: add ATH10K_DBG_WMI_PRINT debug level
    
    There are not many of these messages producted by the
    firmware, but they are generally fairly useful, so make it easy to print them
    with a separate debug level.
    
    kvalo: fix commit log, rename debug level
    
    Signed-off-by: Ben Greear <greearb@candelatech.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index 0c934a8378db..815d325ab930 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -35,6 +35,7 @@ enum ath10k_debug_mask {
 	ATH10K_DBG_BMI		= 0x00000400,
 	ATH10K_DBG_REGULATORY	= 0x00000800,
 	ATH10K_DBG_TESTMODE	= 0x00001000,
+	ATH10K_DBG_WMI_PRINT	= 0x00002000,
 	ATH10K_DBG_ANY		= 0xffffffff,
 };
 

commit bfdd7937ab1a3ee0d02dc2d6876c597539a0d37d
Author: Rajkumar Manoharan <rmanohar@qti.qualcomm.com>
Date:   Fri Oct 3 08:02:40 2014 +0300

    ath10k: add tracing for ath10k_htt_pktlog
    
    This is useful for collecting pktlog statistics of tx, rx
    and rate information, so add tracing for the API call.
    
    Signed-off-by: Rajkumar Manoharan <rmanohar@qti.qualcomm.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index ce86ed29e119..0c934a8378db 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -69,7 +69,6 @@ struct ath10k_fw_crash_data *
 ath10k_debug_get_new_fw_crash_data(struct ath10k *ar);
 
 void ath10k_debug_dbglog_add(struct ath10k *ar, u8 *buffer, int len);
-
 #define ATH10K_DFS_STAT_INC(ar, c) (ar->debug.dfs_stats.c++)
 
 void ath10k_debug_get_et_strings(struct ieee80211_hw *hw,

commit 90174455ae058a1dcf1f3d344a9752385803c1d8
Author: Rajkumar Manoharan <rmanohar@qti.qualcomm.com>
Date:   Fri Oct 3 08:02:33 2014 +0300

    ath10k: add support to configure pktlog filter
    
    Add support to configure packet log filters (tx, rx, rate control)
    via debugfs. To disable htt pktlog events set the filters to 0.
    
    ex:
    
    To enable pktlog for all filters
    
       echo 0x1f > /sys/kernel/debug/ieee80211/phy*/ath10k/pktlog_filter
    
    To disable pktlog
    
       echo 0 > /sys/kernel/debug/ieee80211/phy*/ath10k/pktlog_filter
    
    Signed-off-by: Rajkumar Manoharan <rmanohar@qti.qualcomm.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index d6a565d2bb74..ce86ed29e119 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -38,6 +38,15 @@ enum ath10k_debug_mask {
 	ATH10K_DBG_ANY		= 0xffffffff,
 };
 
+enum ath10k_pktlog_filter {
+	ATH10K_PKTLOG_RX         = 0x000000001,
+	ATH10K_PKTLOG_TX         = 0x000000002,
+	ATH10K_PKTLOG_RCFIND     = 0x000000004,
+	ATH10K_PKTLOG_RCUPDATE   = 0x000000008,
+	ATH10K_PKTLOG_DBG_PRINT  = 0x000000010,
+	ATH10K_PKTLOG_ANY        = 0x00000001f,
+};
+
 extern unsigned int ath10k_debug_mask;
 
 __printf(2, 3) void ath10k_info(struct ath10k *ar, const char *fmt, ...);

commit 6cddcc7ac215a3e988ec2cbf303fb0a39220dc3b
Author: Ben Greear <greearb@candelatech.com>
Date:   Mon Sep 29 14:41:46 2014 +0300

    ath10k: support ethtool stats
    
    Add support for reading firmware stats through the ethtool
    API.  This may be easier for applications to manipulate
    compared to parsing a text based debugfs file.
    
    kvalo: remove unneeded ifdefs, call ath10k_debug_fw_stats_request() and added
    simple error handling
    
    Signed-off-by: Ben Greear <greearb@candelatech.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index efbcd29fe9a1..d6a565d2bb74 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -63,6 +63,15 @@ void ath10k_debug_dbglog_add(struct ath10k *ar, u8 *buffer, int len);
 
 #define ATH10K_DFS_STAT_INC(ar, c) (ar->debug.dfs_stats.c++)
 
+void ath10k_debug_get_et_strings(struct ieee80211_hw *hw,
+				 struct ieee80211_vif *vif,
+				 u32 sset, u8 *data);
+int ath10k_debug_get_et_sset_count(struct ieee80211_hw *hw,
+				   struct ieee80211_vif *vif, int sset);
+void ath10k_debug_get_et_stats(struct ieee80211_hw *hw,
+			       struct ieee80211_vif *vif,
+			       struct ethtool_stats *stats, u64 *data);
+
 #else
 static inline int ath10k_debug_start(struct ath10k *ar)
 {
@@ -115,6 +124,10 @@ ath10k_debug_get_new_fw_crash_data(struct ath10k *ar)
 
 #define ATH10K_DFS_STAT_INC(ar, c) do { } while (0)
 
+#define ath10k_debug_get_et_strings NULL
+#define ath10k_debug_get_et_sset_count NULL
+#define ath10k_debug_get_et_stats NULL
+
 #endif /* CONFIG_ATH10K_DEBUGFS */
 
 #ifdef CONFIG_ATH10K_DEBUG

commit 60ef401aaec79c7d110ed825c083421e62e83f3c
Author: Michal Kazior <michal.kazior@tieto.com>
Date:   Thu Sep 25 12:33:48 2014 +0200

    ath10k: rename fw_stats related stuff
    
    The naming was a bit inconsistent.
    
    Signed-off-by: Michal Kazior <michal.kazior@tieto.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index 8d8b68eb04e6..efbcd29fe9a1 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -55,7 +55,7 @@ void ath10k_debug_unregister(struct ath10k *ar);
 void ath10k_debug_read_service_map(struct ath10k *ar,
 				   const void *service_map,
 				   size_t map_size);
-void ath10k_debug_read_target_stats(struct ath10k *ar, struct sk_buff *skb);
+void ath10k_debug_fw_stats_process(struct ath10k *ar, struct sk_buff *skb);
 struct ath10k_fw_crash_data *
 ath10k_debug_get_new_fw_crash_data(struct ath10k *ar);
 
@@ -97,8 +97,8 @@ static inline void ath10k_debug_read_service_map(struct ath10k *ar,
 {
 }
 
-static inline void ath10k_debug_read_target_stats(struct ath10k *ar,
-						  struct sk_buff *skb)
+static inline void ath10k_debug_fw_stats_process(struct ath10k *ar,
+						 struct sk_buff *skb)
 {
 }
 

commit d15fb52006645f9ef1f62313ba19ef29d1a12bf9
Author: Michal Kazior <michal.kazior@tieto.com>
Date:   Thu Sep 25 12:33:47 2014 +0200

    ath10k: split wmi stats parsing
    
    The parsing function was rather complex. Simplify
    by splitting it up into firmware branch specific
    implementations.
    
    While at it move the parsing code into wmi.c where
    it belongs.
    
    Signed-off-by: Michal Kazior <michal.kazior@tieto.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index 4ae0d8030dce..8d8b68eb04e6 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -55,8 +55,7 @@ void ath10k_debug_unregister(struct ath10k *ar);
 void ath10k_debug_read_service_map(struct ath10k *ar,
 				   const void *service_map,
 				   size_t map_size);
-void ath10k_debug_read_target_stats(struct ath10k *ar,
-				    struct wmi_stats_event *ev);
+void ath10k_debug_read_target_stats(struct ath10k *ar, struct sk_buff *skb);
 struct ath10k_fw_crash_data *
 ath10k_debug_get_new_fw_crash_data(struct ath10k *ar);
 
@@ -99,7 +98,7 @@ static inline void ath10k_debug_read_service_map(struct ath10k *ar,
 }
 
 static inline void ath10k_debug_read_target_stats(struct ath10k *ar,
-						  struct wmi_stats_event *ev)
+						  struct sk_buff *skb)
 {
 }
 

commit babcb3edd942927091ef5e5b284ffc657c652023
Author: Joe Perches <joe@perches.com>
Date:   Mon Sep 22 10:35:34 2014 -0700

    ath: change logging functions to return void
    
    The return values are not used by callers of these functions
    so change the functions to return void.
    
    Other miscellanea:
    
    o add __printf verification to wil6210 logging functions
      No format/argument mismatches found
    
    Acked-by: Vladimir Kondratiev <qca_vkondrat@qca.qualcomm.com>
    Signed-off-by: Joe Perches <joe@perches.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index d6276fea1adf..4ae0d8030dce 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -40,9 +40,9 @@ enum ath10k_debug_mask {
 
 extern unsigned int ath10k_debug_mask;
 
-__printf(2, 3) int ath10k_info(struct ath10k *ar, const char *fmt, ...);
-__printf(2, 3) int ath10k_err(struct ath10k *ar, const char *fmt, ...);
-__printf(2, 3) int ath10k_warn(struct ath10k *ar, const char *fmt, ...);
+__printf(2, 3) void ath10k_info(struct ath10k *ar, const char *fmt, ...);
+__printf(2, 3) void ath10k_err(struct ath10k *ar, const char *fmt, ...);
+__printf(2, 3) void ath10k_warn(struct ath10k *ar, const char *fmt, ...);
 void ath10k_print_driver_info(struct ath10k *ar);
 
 #ifdef CONFIG_ATH10K_DEBUGFS

commit 5c01aa3de918c0afc1b338df6d7162d461ad3a55
Author: Michal Kazior <michal.kazior@tieto.com>
Date:   Thu Sep 18 15:21:24 2014 +0200

    ath10k: deduplicate wmi service ready logic
    
    The logic responsible for processing the event is
    no different across different firmware binaries.
    The difference that needs to be dealt with is the
    ABI of data structures.
    
    The intermediate structure uses __le32 to avoid
    extra memory allocations to byteswap
    variable-length substructures (i.e. host mem
    chunks).
    
    Signed-off-by: Michal Kazior <michal.kazior@tieto.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index b3774f7f492c..d6276fea1adf 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -53,7 +53,7 @@ void ath10k_debug_destroy(struct ath10k *ar);
 int ath10k_debug_register(struct ath10k *ar);
 void ath10k_debug_unregister(struct ath10k *ar);
 void ath10k_debug_read_service_map(struct ath10k *ar,
-				   void *service_map,
+				   const void *service_map,
 				   size_t map_size);
 void ath10k_debug_read_target_stats(struct ath10k *ar,
 				    struct wmi_stats_event *ev);
@@ -93,7 +93,7 @@ static inline void ath10k_debug_unregister(struct ath10k *ar)
 }
 
 static inline void ath10k_debug_read_service_map(struct ath10k *ar,
-						 void *service_map,
+						 const void *service_map,
 						 size_t map_size)
 {
 }

commit 43d2a30fa80166243498fc6b8c841828ce52fcc1
Author: Kalle Valo <kvalo@qca.qualcomm.com>
Date:   Wed Sep 10 18:23:30 2014 +0300

    ath10k: add testmode
    
    Add testmode interface for starting and using UTF firmware which is used to run
    factory tests. This is implemented by adding new state ATH10K_STATE_UTF and user
    space can enable this state with ATH10K_TM_CMD_UTF_START command. To go back to
    normal mode user space can send ATH10K_TM_CMD_UTF_STOP.
    
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index 71c80842eea7..b3774f7f492c 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -34,6 +34,7 @@ enum ath10k_debug_mask {
 	ATH10K_DBG_DATA		= 0x00000200,
 	ATH10K_DBG_BMI		= 0x00000400,
 	ATH10K_DBG_REGULATORY	= 0x00000800,
+	ATH10K_DBG_TESTMODE	= 0x00001000,
 	ATH10K_DBG_ANY		= 0xffffffff,
 };
 

commit e13cf7a313a44c7279b4b646b5b7056d702ad0b7
Author: Michal Kazior <michal.kazior@tieto.com>
Date:   Thu Sep 4 09:13:08 2014 +0200

    ath10k: move fw_crash_dump allocation
    
    The fw_crash_data was allocated too late. Upon
    early firmware crash, before registering to
    mac80211, it was possible to crash the whole
    system:
    
     ath10k_pci 0000:00:05.0: device has crashed during init
     BUG: unable to handle kernel NULL pointer dereference at           (null)
     IP: [<ffffffffa0058005>] ath10k_debug_get_new_fw_crash_data+0x15/0x30 [ath10k_core]
     PGD 0
     Oops: 0002 [#1] SMP
     Modules linked in: ath10k_pci(O) ath10k_core(O) ath [last unloaded: ath]
     CPU: 3 PID: 29 Comm: kworker/u8:1 Tainted: G           O   3.17.0-rc2-wl-ath+ #447
     Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011
     Workqueue: ath10k_wq ath10k_core_register_work [ath10k_core]
     task: ffff88001eb01ad0 ti: ffff88001eb60000 task.ti: ffff88001eb60000
     RIP: 0010:[<ffffffffa0058005>]  [<ffffffffa0058005>] ath10k_debug_get_new_fw_crash_data+0x15/0x30 [ath10k_core]
     RSP: 0018:ffff88001eb63ce8  EFLAGS: 00010246
     RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000000
     RDX: 0000000000000000 RSI: ffffc90001a09030 RDI: 0000000000000001
     RBP: ffff88001eb63cf0 R08: 0000000000000000 R09: ffff8800000bb200
     R10: 00000000000001e2 R11: ffff88001eb638de R12: ffff88001d7459a0
     R13: ffff88001d746ab0 R14: 00000000fffe14d4 R15: ffff88001d747c60
     FS:  0000000000000000(0000) GS:ffff88001fd80000(0000) knlGS:0000000000000000
     CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b
     CR2: 0000000000000000 CR3: 000000001df34000 CR4: 00000000000006e0
     Stack:
      ffff88001d7459a0 ffff88001eb63d58 ffffffffa0083bbe ffff880000000010
      ffff88001eb63d68 ffff88001eb63d18 0000000000000002 0000000000059010
      ffffffffa0086fef 00000000deadbeef ffff88001d747a28 ffff88001d7459a0
     Call Trace:
      [<ffffffffa0083bbe>] ath10k_pci_fw_crashed_dump+0x2e/0xd0 [ath10k_pci]
      [<ffffffffa0085410>] __ath10k_pci_hif_power_up+0x5f0/0x700 [ath10k_pci]
      [<ffffffffa0085550>] ath10k_pci_hif_power_up+0x30/0xe0 [ath10k_pci]
      [<ffffffffa005bc7b>] ath10k_core_register_work+0x2b/0x520 [ath10k_core]
      [<ffffffff810689cc>] process_one_work+0x18c/0x3f0
      [<ffffffff81069011>] worker_thread+0x121/0x4a0
      [<ffffffff81068ef0>] ? rescuer_thread+0x2c0/0x2c0
      [<ffffffff8106daf2>] kthread+0xd2/0xf0
      [<ffffffff8106da20>] ? kthread_create_on_node+0x170/0x170
      [<ffffffff81857cfc>] ret_from_fork+0x7c/0xb0
      [<ffffffff8106da20>] ? kthread_create_on_node+0x170/0x170
     Code: 8b 40 38 48 c7 80 00 01 00 00 00 00 00 00 5b 5d c3 0f 1f 44 00 00 0f 1f 44 00 00 55 48 89 e5 53 48 8b 9f 90 1d 00 00 48 8d 7b 01 <c6> 03 01 e8 e3 ec 2b e1 48 8d 7b 18 e8 6a 4f 05 e1 48 89 d8 5b
     RIP  [<ffffffffa0058005>] ath10k_debug_get_new_fw_crash_data+0x15/0x30 [ath10k_core]
      RSP <ffff88001eb63ce8>
     CR2: 0000000000000000
     ---[ end trace 5d0ed15b050bcc1f ]---
     Kernel panic - not syncing: Fatal exception in interrupt
     Kernel Offset: 0x0 from 0xffffffff81000000 (relocation range: 0xffffffff80000000-0xffffffff9fffffff)
     ---[ end Kernel panic - not syncing: Fatal exception in interrupt
    
    To prevent that split debug functions and allocate
    fw_crash_data earlier.
    
    Signed-off-by: Michal Kazior <michal.kazior@tieto.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index 56746539bea2..71c80842eea7 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -49,6 +49,8 @@ int ath10k_debug_start(struct ath10k *ar);
 void ath10k_debug_stop(struct ath10k *ar);
 int ath10k_debug_create(struct ath10k *ar);
 void ath10k_debug_destroy(struct ath10k *ar);
+int ath10k_debug_register(struct ath10k *ar);
+void ath10k_debug_unregister(struct ath10k *ar);
 void ath10k_debug_read_service_map(struct ath10k *ar,
 				   void *service_map,
 				   size_t map_size);
@@ -80,6 +82,15 @@ static inline void ath10k_debug_destroy(struct ath10k *ar)
 {
 }
 
+static inline int ath10k_debug_register(struct ath10k *ar)
+{
+	return 0;
+}
+
+static inline void ath10k_debug_unregister(struct ath10k *ar)
+{
+}
+
 static inline void ath10k_debug_read_service_map(struct ath10k *ar,
 						 void *service_map,
 						 size_t map_size)

commit 7aa7a72a23679abf1cea9b3b65a8921244e769a7
Author: Michal Kazior <michal.kazior@tieto.com>
Date:   Mon Aug 25 12:09:38 2014 +0200

    ath10k: improve logging to include dev id
    
    This makes it a lot easier to log and debug
    messages if there's more than 1 ath10k device on a
    system.
    
    Signed-off-by: Michal Kazior <michal.kazior@tieto.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index 47ee4a623af6..56746539bea2 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -39,9 +39,9 @@ enum ath10k_debug_mask {
 
 extern unsigned int ath10k_debug_mask;
 
-__printf(1, 2) int ath10k_info(const char *fmt, ...);
-__printf(1, 2) int ath10k_err(const char *fmt, ...);
-__printf(1, 2) int ath10k_warn(const char *fmt, ...);
+__printf(2, 3) int ath10k_info(struct ath10k *ar, const char *fmt, ...);
+__printf(2, 3) int ath10k_err(struct ath10k *ar, const char *fmt, ...);
+__printf(2, 3) int ath10k_warn(struct ath10k *ar, const char *fmt, ...);
 void ath10k_print_driver_info(struct ath10k *ar);
 
 #ifdef CONFIG_ATH10K_DEBUGFS
@@ -107,20 +107,24 @@ ath10k_debug_get_new_fw_crash_data(struct ath10k *ar)
 #endif /* CONFIG_ATH10K_DEBUGFS */
 
 #ifdef CONFIG_ATH10K_DEBUG
-__printf(2, 3) void ath10k_dbg(enum ath10k_debug_mask mask,
+__printf(3, 4) void ath10k_dbg(struct ath10k *ar,
+			       enum ath10k_debug_mask mask,
 			       const char *fmt, ...);
-void ath10k_dbg_dump(enum ath10k_debug_mask mask,
+void ath10k_dbg_dump(struct ath10k *ar,
+		     enum ath10k_debug_mask mask,
 		     const char *msg, const char *prefix,
 		     const void *buf, size_t len);
 #else /* CONFIG_ATH10K_DEBUG */
 
-static inline int ath10k_dbg(enum ath10k_debug_mask dbg_mask,
+static inline int ath10k_dbg(struct ath10k *ar,
+			     enum ath10k_debug_mask dbg_mask,
 			     const char *fmt, ...)
 {
 	return 0;
 }
 
-static inline void ath10k_dbg_dump(enum ath10k_debug_mask mask,
+static inline void ath10k_dbg_dump(struct ath10k *ar,
+				   enum ath10k_debug_mask mask,
 				   const char *msg, const char *prefix,
 				   const void *buf, size_t len)
 {

commit 8a0c797edb65249a82fd6f2ede39785282b4901f
Author: Kalle Valo <kvalo@qca.qualcomm.com>
Date:   Mon Aug 25 08:37:45 2014 +0300

    ath10k: print more driver info when firmware crashes
    
    Sometimes users forget to include important info like firmware version,
    so better to print all the info.
    
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index 416c62bbbb26..47ee4a623af6 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -42,6 +42,7 @@ extern unsigned int ath10k_debug_mask;
 __printf(1, 2) int ath10k_info(const char *fmt, ...);
 __printf(1, 2) int ath10k_err(const char *fmt, ...);
 __printf(1, 2) int ath10k_warn(const char *fmt, ...);
+void ath10k_print_driver_info(struct ath10k *ar);
 
 #ifdef CONFIG_ATH10K_DEBUGFS
 int ath10k_debug_start(struct ath10k *ar);

commit 384914b2e5566dfce25f3f38d992708a9ef6f51b
Author: Ben Greear <greearb@candelatech.com>
Date:   Mon Aug 25 08:37:32 2014 +0300

    ath10k: provide firmware crash info via debugfs
    
    Store the firmware registers and other relevant data to a firmware crash dump
    file and provide it to user-space via debugfs. Should help with figuring out
    why the firmware crashed.
    
    kvalo: remove dbglog support, rework and refactor the code to avoid ifdefs and
    otherwise simplify it as well
    
    Signed-off-by: Ben Greear <greearb@candelatech.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index a5824990bd2a..416c62bbbb26 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -53,6 +53,10 @@ void ath10k_debug_read_service_map(struct ath10k *ar,
 				   size_t map_size);
 void ath10k_debug_read_target_stats(struct ath10k *ar,
 				    struct wmi_stats_event *ev);
+struct ath10k_fw_crash_data *
+ath10k_debug_get_new_fw_crash_data(struct ath10k *ar);
+
+void ath10k_debug_dbglog_add(struct ath10k *ar, u8 *buffer, int len);
 
 #define ATH10K_DFS_STAT_INC(ar, c) (ar->debug.dfs_stats.c++)
 
@@ -86,6 +90,17 @@ static inline void ath10k_debug_read_target_stats(struct ath10k *ar,
 {
 }
 
+static inline void ath10k_debug_dbglog_add(struct ath10k *ar, u8 *buffer,
+					   int len)
+{
+}
+
+static inline struct ath10k_fw_crash_data *
+ath10k_debug_get_new_fw_crash_data(struct ath10k *ar)
+{
+	return NULL;
+}
+
 #define ATH10K_DFS_STAT_INC(ar, c) do { } while (0)
 
 #endif /* CONFIG_ATH10K_DEBUGFS */

commit 2e05f01bd1839ca1a3da66be8ed7aebd36fbde77
Author: Kalle Valo <kvalo@qca.qualcomm.com>
Date:   Thu Feb 13 18:13:12 2014 +0200

    ath10k: fix alignment in ath10k_dbg()
    
    Fix a checkpatch warning:
    
    drivers/net/wireless/ath/ath10k/debug.h:95: CHECK: Alignment should match open parenthesis
    
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index 1773c36c71a0..a5824990bd2a 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -92,7 +92,7 @@ static inline void ath10k_debug_read_target_stats(struct ath10k *ar,
 
 #ifdef CONFIG_ATH10K_DEBUG
 __printf(2, 3) void ath10k_dbg(enum ath10k_debug_mask mask,
-				      const char *fmt, ...);
+			       const char *fmt, ...);
 void ath10k_dbg_dump(enum ath10k_debug_mask mask,
 		     const char *msg, const char *prefix,
 		     const void *buf, size_t len);

commit 145babc68eebc4d72cd1a92d92e91739b905b7df
Merge: e08fd975bf26 cfb27d29b61c
Author: John W. Linville <linville@tuxdriver.com>
Date:   Mon Dec 9 15:30:27 2013 -0500

    Merge tag 'for-linville-20131203' of git://github.com/kvalo/ath
    
    Conflicts:
            drivers/net/wireless/ath/ath10k/htc.c
            drivers/net/wireless/ath/ath10k/mac.c

commit 9702c686081240bff1f05150c78335152d37ac8d
Author: Janusz Dziedzic <janusz.dziedzic@tieto.com>
Date:   Wed Nov 20 09:59:41 2013 +0200

    ath10k: add phyerr/dfs handling
    
    Handle phyerr, dfs event, radar_report and fft_report.
    Add also debugfs dfs_simulate_radar and dfs_stats files.
    Use ath dfs pattern detector.
    
    Signed-off-by: Janusz Dziedzic <janusz.dziedzic@tieto.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index 46e640a6968d..92f1a5e1aa71 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -33,6 +33,7 @@ enum ath10k_debug_mask {
 	ATH10K_DBG_MGMT		= 0x00000100,
 	ATH10K_DBG_DATA		= 0x00000200,
 	ATH10K_DBG_BMI		= 0x00000400,
+	ATH10K_DBG_REGULATORY	= 0x00000800,
 	ATH10K_DBG_ANY		= 0xffffffff,
 };
 
@@ -53,6 +54,8 @@ void ath10k_debug_read_service_map(struct ath10k *ar,
 void ath10k_debug_read_target_stats(struct ath10k *ar,
 				    struct wmi_stats_event *ev);
 
+#define ATH10K_DFS_STAT_INC(ar, c) (ar->debug.dfs_stats.c++)
+
 #else
 static inline int ath10k_debug_start(struct ath10k *ar)
 {
@@ -82,6 +85,9 @@ static inline void ath10k_debug_read_target_stats(struct ath10k *ar,
 						  struct wmi_stats_event *ev)
 {
 }
+
+#define ATH10K_DFS_STAT_INC(ar, c) do { } while (0)
+
 #endif /* CONFIG_ATH10K_DEBUGFS */
 
 #ifdef CONFIG_ATH10K_DEBUG

commit 87bc0728d462ae37841a550542829aa65a97e7c2
Merge: f421436a591d 01925efdf7e0
Author: John W. Linville <linville@tuxdriver.com>
Date:   Mon Nov 4 14:51:28 2013 -0500

    Merge branch 'master' of git://git.kernel.org/pub/scm/linux/kernel/git/linville/wireless-next into for-davem
    
    Conflicts:
            drivers/net/wireless/brcm80211/brcmfmac/sdio_host.h

commit 60631c5c10efbf24a77e1ca1ddecdb4e82ed2833
Author: Kalle Valo <kvalo@qca.qualcomm.com>
Date:   Tue Oct 8 21:45:25 2013 +0300

    ath10k: fix ath10k_debug_start() locking
    
    ath10k_debug_start() was not called with conf_mutex, fix that. Also there was a
    deadlock in ath10k_debug_stop(), rename it to ath10k_debug_destroy() and call
    it only when the device is destroyed.
    
    Reported-by: Mohammed Shafi Shajakhan <mohammed@qca.qualcomm.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index fa581486626f..46e640a6968d 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -46,6 +46,7 @@ extern __printf(1, 2) int ath10k_warn(const char *fmt, ...);
 int ath10k_debug_start(struct ath10k *ar);
 void ath10k_debug_stop(struct ath10k *ar);
 int ath10k_debug_create(struct ath10k *ar);
+void ath10k_debug_destroy(struct ath10k *ar);
 void ath10k_debug_read_service_map(struct ath10k *ar,
 				   void *service_map,
 				   size_t map_size);
@@ -67,6 +68,10 @@ static inline int ath10k_debug_create(struct ath10k *ar)
 	return 0;
 }
 
+static inline void ath10k_debug_destroy(struct ath10k *ar)
+{
+}
+
 static inline void ath10k_debug_read_service_map(struct ath10k *ar,
 						 void *service_map,
 						 size_t map_size)

commit 7009deab19d7be03e05f67ceac56cfdfc73aa71c
Merge: 5cde28293891 274dede8c520
Author: David S. Miller <davem@davemloft.net>
Date:   Mon Oct 7 15:40:44 2013 -0400

    Merge git://git.kernel.org/pub/scm/linux/kernel/git/linville/wireless-next
    
    Conflicts:
            drivers/net/wireless/brcm80211/brcmfmac/dhd_bus.h
            drivers/net/wireless/rtlwifi/rtl8188ee/phy.h
            drivers/net/wireless/rtlwifi/rtl8192ce/phy.h
            drivers/net/wireless/rtlwifi/rtl8192de/phy.h
            drivers/net/wireless/rtlwifi/rtl8723ae/phy.h
    
    Just some minor conflicts between the wireless-next changes
    and Joe Perches's "extern" removal from function prototypes
    in header files.
    
    John W. Linville says:
    
    ====================
    Regarding the Bluetooth bits, Gustavo says:
    
    "The big work here is from Marcel and Johan. They did a lot of work
    in the L2CAP, HCI and MGMT layers. The most important ones are the
    addition of a new MGMT command to enable/disable LE advertisement
    and the introduction of the HCI user channel to allow applications
    to get directly and exclusive access to Bluetooth devices."
    
    As to the ath10k bits, Kalle says:
    
    "Bartosz dropped support for qca98xx hw1.0 hardware from ath10k, it's
    just too much to support it. Michal added support for the new firmware
    interface. Marek fixed WEP in AP and IBSS mode. Rest of the changes are
    minor fixes or cleanups."
    
    And also:
    
    "Major changes are:
    
    * throughput improvements including aligning the RX frames correctly and
      optimising HTT layer (Michal)
    
    * remove qca98xx hw1.0 support (Bartosz)
    
    * add support for firmware version 999.999.0.636 (Michal)
    
    * firmware htt statistics support (Kalle)
    
    * fix WEP in AP and IBSS mode (Marek)
    
    * fix a mutex unlock balance in debugfs file (Shafi)
    
    And of course there's a lot of smaller fixes and cleanup."
    
    For the wl12xx bits, Luca says:
    
    "Here are some patches intended for 3.13.  Eliad is upstreaming a bunch
    of patches that have been pending in the internal tree.  Mostly bugfixes
    and other small improvements."
    
    Along with that...
    
    Arend and friends bring us a batch of brcmfmac updates, Larry Finger
    offers some rtlwifi refactoring, and Sujith sends the usual batch of
    ath9k updates.  As usual, there are a number of other small updates
    from a variety of players as well.
    ====================
    
    Signed-off-by: David S. Miller <davem@davemloft.net>

commit a3dabaf02d36dbb4051188b706a3e66e6465c56b
Author: Joe Perches <joe@perches.com>
Date:   Mon Sep 23 11:37:59 2013 -0700

    ath: Remove extern from function prototypes
    
    There are a mix of function prototypes with and without extern
    in the kernel sources.  Standardize on not using extern for
    function prototypes.
    
    Function prototypes don't need to be written with extern.
    extern is assumed by the compiler.  Its use is as unnecessary as
    using auto to declare automatic/local variables in a block.
    
    Signed-off-by: Joe Perches <joe@perches.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index 168140c54028..bb0063320397 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -37,9 +37,9 @@ enum ath10k_debug_mask {
 
 extern unsigned int ath10k_debug_mask;
 
-extern __printf(1, 2) int ath10k_info(const char *fmt, ...);
-extern __printf(1, 2) int ath10k_err(const char *fmt, ...);
-extern __printf(1, 2) int ath10k_warn(const char *fmt, ...);
+__printf(1, 2) int ath10k_info(const char *fmt, ...);
+__printf(1, 2) int ath10k_err(const char *fmt, ...);
+__printf(1, 2) int ath10k_warn(const char *fmt, ...);
 
 #ifdef CONFIG_ATH10K_DEBUGFS
 int ath10k_debug_create(struct ath10k *ar);
@@ -68,7 +68,7 @@ static inline void ath10k_debug_read_target_stats(struct ath10k *ar,
 #endif /* CONFIG_ATH10K_DEBUGFS */
 
 #ifdef CONFIG_ATH10K_DEBUG
-extern __printf(2, 3) void ath10k_dbg(enum ath10k_debug_mask mask,
+__printf(2, 3) void ath10k_dbg(enum ath10k_debug_mask mask,
 				      const char *fmt, ...);
 void ath10k_dbg_dump(enum ath10k_debug_mask mask,
 		     const char *msg, const char *prefix,

commit b52b7688ac85819c9c99bfe0250913fd0053e665
Author: Kalle Valo <kvalo@qca.qualcomm.com>
Date:   Sun Sep 8 17:55:38 2013 +0300

    ath10k: rename ATH10K_DBG_CORE to BOOT
    
    core.c mostly deals with driver and firmware starting related
    actions. And we can use the boot level also in other components,
    like PCI and HTT.
    
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index e40e155abd87..fa581486626f 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -27,7 +27,7 @@ enum ath10k_debug_mask {
 	ATH10K_DBG_HTC		= 0x00000004,
 	ATH10K_DBG_HTT		= 0x00000008,
 	ATH10K_DBG_MAC		= 0x00000010,
-	ATH10K_DBG_CORE		= 0x00000020,
+	ATH10K_DBG_BOOT		= 0x00000020,
 	ATH10K_DBG_PCI_DUMP	= 0x00000040,
 	ATH10K_DBG_HTT_DUMP	= 0x00000080,
 	ATH10K_DBG_MGMT		= 0x00000100,

commit f0bbea9981780e767c90955f47615e6f7382746f
Author: Kalle Valo <kvalo@qca.qualcomm.com>
Date:   Sun Sep 8 17:55:32 2013 +0300

    ath10k: add BMI log level
    
    Also clean BMI log messages and add few more.
    
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index 376a56b093a7..e40e155abd87 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -32,6 +32,7 @@ enum ath10k_debug_mask {
 	ATH10K_DBG_HTT_DUMP	= 0x00000080,
 	ATH10K_DBG_MGMT		= 0x00000100,
 	ATH10K_DBG_DATA		= 0x00000200,
+	ATH10K_DBG_BMI		= 0x00000400,
 	ATH10K_DBG_ANY		= 0xffffffff,
 };
 

commit 4ed998dcbfa971e4c33edca7b2b39ce693014ba8
Author: Bartosz Markowski <bartosz.markowski@tieto.com>
Date:   Mon Sep 9 17:50:45 2013 +0200

    ath10k: define ath10k_debug_start/_stop as static inline
    
    Otherwise if CONFIG_ATH10K_DEBUGFS won't be set we will
    end up with multiple definitions and compilation failure
    in each place the header is included.
    
    Signed-off-by: Bartosz Markowski <bartosz.markowski@tieto.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index 9c442a82c493..376a56b093a7 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -52,12 +52,12 @@ void ath10k_debug_read_target_stats(struct ath10k *ar,
 				    struct wmi_stats_event *ev);
 
 #else
-int ath10k_debug_start(struct ath10k *ar)
+static inline int ath10k_debug_start(struct ath10k *ar)
 {
 	return 0;
 }
 
-void ath10k_debug_stop(struct ath10k *ar)
+static inline void ath10k_debug_stop(struct ath10k *ar)
 {
 }
 

commit db66ea0442daaa4ee5fb8b3083bde1728ca3a9ba
Author: Kalle Valo <kvalo@qca.qualcomm.com>
Date:   Tue Sep 3 11:44:03 2013 +0300

    ath10k: implement ath10k_debug_start/stop()
    
    Needed for the HTT stats implementation.
    
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
index 168140c54028..9c442a82c493 100644
--- a/drivers/net/wireless/ath/ath10k/debug.h
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -42,6 +42,8 @@ extern __printf(1, 2) int ath10k_err(const char *fmt, ...);
 extern __printf(1, 2) int ath10k_warn(const char *fmt, ...);
 
 #ifdef CONFIG_ATH10K_DEBUGFS
+int ath10k_debug_start(struct ath10k *ar);
+void ath10k_debug_stop(struct ath10k *ar);
 int ath10k_debug_create(struct ath10k *ar);
 void ath10k_debug_read_service_map(struct ath10k *ar,
 				   void *service_map,
@@ -50,6 +52,15 @@ void ath10k_debug_read_target_stats(struct ath10k *ar,
 				    struct wmi_stats_event *ev);
 
 #else
+int ath10k_debug_start(struct ath10k *ar)
+{
+	return 0;
+}
+
+void ath10k_debug_stop(struct ath10k *ar)
+{
+}
+
 static inline int ath10k_debug_create(struct ath10k *ar)
 {
 	return 0;

commit 5e3dd157d7e70f0e3cea3f2573ed69fb156a19d5
Author: Kalle Valo <kvalo@qca.qualcomm.com>
Date:   Wed Jun 12 20:52:10 2013 +0300

    ath10k: mac80211 driver for Qualcomm Atheros 802.11ac CQA98xx devices
    
    Here's a new mac80211 driver for Qualcomm Atheros 802.11ac QCA98xx devices.
    A major difference from ath9k is that there's now a firmware and
    that's why we had to implement a new driver.
    
    The wiki page for the driver is:
    
    http://wireless.kernel.org/en/users/Drivers/ath10k
    
    The driver has had many authors, they are listed here alphabetically:
    
    Bartosz Markowski <bartosz.markowski@tieto.com>
    Janusz Dziedzic <janusz.dziedzic@tieto.com>
    Kalle Valo <kvalo@qca.qualcomm.com>
    Marek Kwaczynski <marek.kwaczynski@tieto.com>
    Marek Puzyniak <marek.puzyniak@tieto.com>
    Michal Kazior <michal.kazior@tieto.com>
    Sujith Manoharan <c_manoha@qca.qualcomm.com>
    
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/ath10k/debug.h b/drivers/net/wireless/ath/ath10k/debug.h
new file mode 100644
index 000000000000..168140c54028
--- /dev/null
+++ b/drivers/net/wireless/ath/ath10k/debug.h
@@ -0,0 +1,90 @@
+/*
+ * Copyright (c) 2005-2011 Atheros Communications Inc.
+ * Copyright (c) 2011-2013 Qualcomm Atheros, Inc.
+ *
+ * Permission to use, copy, modify, and/or distribute this software for any
+ * purpose with or without fee is hereby granted, provided that the above
+ * copyright notice and this permission notice appear in all copies.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
+ * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
+ * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
+ * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
+ * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
+ * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
+ * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
+ */
+
+#ifndef _DEBUG_H_
+#define _DEBUG_H_
+
+#include <linux/types.h>
+#include "trace.h"
+
+enum ath10k_debug_mask {
+	ATH10K_DBG_PCI		= 0x00000001,
+	ATH10K_DBG_WMI		= 0x00000002,
+	ATH10K_DBG_HTC		= 0x00000004,
+	ATH10K_DBG_HTT		= 0x00000008,
+	ATH10K_DBG_MAC		= 0x00000010,
+	ATH10K_DBG_CORE		= 0x00000020,
+	ATH10K_DBG_PCI_DUMP	= 0x00000040,
+	ATH10K_DBG_HTT_DUMP	= 0x00000080,
+	ATH10K_DBG_MGMT		= 0x00000100,
+	ATH10K_DBG_DATA		= 0x00000200,
+	ATH10K_DBG_ANY		= 0xffffffff,
+};
+
+extern unsigned int ath10k_debug_mask;
+
+extern __printf(1, 2) int ath10k_info(const char *fmt, ...);
+extern __printf(1, 2) int ath10k_err(const char *fmt, ...);
+extern __printf(1, 2) int ath10k_warn(const char *fmt, ...);
+
+#ifdef CONFIG_ATH10K_DEBUGFS
+int ath10k_debug_create(struct ath10k *ar);
+void ath10k_debug_read_service_map(struct ath10k *ar,
+				   void *service_map,
+				   size_t map_size);
+void ath10k_debug_read_target_stats(struct ath10k *ar,
+				    struct wmi_stats_event *ev);
+
+#else
+static inline int ath10k_debug_create(struct ath10k *ar)
+{
+	return 0;
+}
+
+static inline void ath10k_debug_read_service_map(struct ath10k *ar,
+						 void *service_map,
+						 size_t map_size)
+{
+}
+
+static inline void ath10k_debug_read_target_stats(struct ath10k *ar,
+						  struct wmi_stats_event *ev)
+{
+}
+#endif /* CONFIG_ATH10K_DEBUGFS */
+
+#ifdef CONFIG_ATH10K_DEBUG
+extern __printf(2, 3) void ath10k_dbg(enum ath10k_debug_mask mask,
+				      const char *fmt, ...);
+void ath10k_dbg_dump(enum ath10k_debug_mask mask,
+		     const char *msg, const char *prefix,
+		     const void *buf, size_t len);
+#else /* CONFIG_ATH10K_DEBUG */
+
+static inline int ath10k_dbg(enum ath10k_debug_mask dbg_mask,
+			     const char *fmt, ...)
+{
+	return 0;
+}
+
+static inline void ath10k_dbg_dump(enum ath10k_debug_mask mask,
+				   const char *msg, const char *prefix,
+				   const void *buf, size_t len)
+{
+}
+#endif /* CONFIG_ATH10K_DEBUG */
+#endif /* _DEBUG_H_ */
