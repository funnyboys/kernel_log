commit 2874c5fd284268364ece81a7bd936f3c8168e567
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon May 27 08:55:01 2019 +0200

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 152
    
    Based on 1 normalized pattern(s):
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license as published by
      the free software foundation either version 2 of the license or at
      your option any later version
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-or-later
    
    has been chosen to replace the boilerplate/reference in 3029 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190527070032.746973796@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
index 3afda6561434..890c86e11bcc 100644
--- a/drivers/net/Space.c
+++ b/drivers/net/Space.c
@@ -1,3 +1,4 @@
+// SPDX-License-Identifier: GPL-2.0-or-later
 /*
  * INET		An implementation of the TCP/IP protocol suite for the LINUX
  *		operating system.  INET is implemented using the  BSD Socket
@@ -21,11 +22,6 @@
  *		Paul Gortmaker (06/98):
  *		 - sort probes in a sane way, make sure all (safe) probes
  *		   get run once & failed autoprobes don't autoprobe again.
- *
- *		This program is free software; you can redistribute it and/or
- *		modify it under the terms of the GNU General Public License
- *		as published by the Free Software Foundation; either version
- *		2 of the License, or (at your option) any later version.
  */
 #include <linux/netdevice.h>
 #include <linux/etherdevice.h>

commit 43bf2e6d69dd6c2cea7a28763893a3dff34b7873
Author: Finn Thain <fthain@telegraphics.com.au>
Date:   Thu Mar 1 18:29:28 2018 -0500

    net/mac89x0: Convert to platform_driver
    
    Apparently these Dayna cards don't have a pseudoslot declaration ROM
    which means they can't be probed like NuBus cards.
    
    Cc: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Finn Thain <fthain@telegraphics.com.au>
    Acked-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
index 64333ec999ac..3afda6561434 100644
--- a/drivers/net/Space.c
+++ b/drivers/net/Space.c
@@ -113,9 +113,6 @@ static struct devprobe2 m68k_probes[] __initdata = {
 #endif
 #ifdef CONFIG_MVME147_NET	/* MVME147 internal Ethernet */
 	{mvme147lance_probe, 0},
-#endif
-#ifdef CONFIG_MAC89x0
-	{mac89x0_probe, 0},
 #endif
 	{NULL, 0},
 };

commit 494a973e22954249d35152cce1dcfba6d10c52e4
Author: Finn Thain <fthain@telegraphics.com.au>
Date:   Sun Feb 18 21:39:17 2018 -0500

    net/mac8390: Convert to nubus_driver
    
    This resolves an old bug that constrained this driver to no more than
    one card.
    
    Tested-by: Stan Johnson <userm57@yahoo.com>
    Signed-off-by: Finn Thain <fthain@telegraphics.com.au>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
index 11fe71278f40..64333ec999ac 100644
--- a/drivers/net/Space.c
+++ b/drivers/net/Space.c
@@ -114,9 +114,6 @@ static struct devprobe2 m68k_probes[] __initdata = {
 #ifdef CONFIG_MVME147_NET	/* MVME147 internal Ethernet */
 	{mvme147lance_probe, 0},
 #endif
-#ifdef CONFIG_MAC8390           /* NuBus NS8390-based cards */
-	{mac8390_probe, 0},
-#endif
 #ifdef CONFIG_MAC89x0
 	{mac89x0_probe, 0},
 #endif

commit 6104503cddbbaf341c091fa900d93488d6342ad6
Author: Amit Ghadge <amitg.b14@gmail.com>
Date:   Wed May 18 06:46:30 2016 +0530

    net: Fix coding style warnings and errors.
    
    This is a patch to clean checkpatch warnings and errors
    in the Space.c file.
    Clean up the following warnings and errors.
    
    WARNING :
    * Block comments use * on subsequent lines
    * Missing a blank line after declarations
    * networking block comments don't use an empty /* line, use /*
    * please, no space before tabs
    * please, no spaces at the start of a line
    * line over 80 characters
    
    ERROR :
    * code indent should use tabs where possible
    * space prohibited after that open parenthesis '('
    
    Signed-off-by: Amit Ghadge <amitg.b14@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
index 67977f15af25..11fe71278f40 100644
--- a/drivers/net/Space.c
+++ b/drivers/net/Space.c
@@ -35,8 +35,8 @@
 #include <net/Space.h>
 
 /* A unified ethernet device probe.  This is the easiest way to have every
-   ethernet adaptor have the name "eth[0123...]".
-   */
+ * ethernet adaptor have the name "eth[0123...]".
+ */
 
 struct devprobe2 {
 	struct net_device *(*probe)(int unit);
@@ -46,6 +46,7 @@ struct devprobe2 {
 static int __init probe_list2(int unit, struct devprobe2 *p, int autoprobe)
 {
 	struct net_device *dev;
+
 	for (; p->probe; p++) {
 		if (autoprobe && p->status)
 			continue;
@@ -58,8 +59,7 @@ static int __init probe_list2(int unit, struct devprobe2 *p, int autoprobe)
 	return -ENODEV;
 }
 
-/*
- * ISA probes that touch addresses < 0x400 (including those that also
+/* ISA probes that touch addresses < 0x400 (including those that also
  * look for EISA/PCI cards in addition to ISA cards).
  */
 static struct devprobe2 isa_probes[] __initdata = {
@@ -86,11 +86,11 @@ static struct devprobe2 isa_probes[] __initdata = {
 #endif
 #ifdef CONFIG_CS89x0
 #ifndef CONFIG_CS89x0_PLATFORM
- 	{cs89x0_probe, 0},
+	{cs89x0_probe, 0},
 #endif
 #endif
-#if defined(CONFIG_MVME16x_NET) || defined(CONFIG_BVME6000_NET)	/* Intel I82596 */
-	{i82596_probe, 0},
+#if defined(CONFIG_MVME16x_NET) || defined(CONFIG_BVME6000_NET)	/* Intel */
+	{i82596_probe, 0},					/* I82596 */
 #endif
 #ifdef CONFIG_NI65
 	{ni65_probe, 0},
@@ -118,13 +118,12 @@ static struct devprobe2 m68k_probes[] __initdata = {
 	{mac8390_probe, 0},
 #endif
 #ifdef CONFIG_MAC89x0
- 	{mac89x0_probe, 0},
+	{mac89x0_probe, 0},
 #endif
 	{NULL, 0},
 };
 
-/*
- * Unified ethernet device probe, segmented per architecture and
+/* Unified ethernet device probe, segmented per architecture and
  * per bus interface. This drives the legacy devices only for now.
  */
 
@@ -135,7 +134,7 @@ static void __init ethif_probe2(int unit)
 	if (base_addr == 1)
 		return;
 
-	(void)(	probe_list2(unit, m68k_probes, base_addr == 0) &&
+	(void)(probe_list2(unit, m68k_probes, base_addr == 0) &&
 		probe_list2(unit, isa_probes, base_addr == 0));
 }
 

commit b6835f9c5d3199e6fa17ffad023f4b7dbad4f1a3
Author: Rashika Kheria <rashika.kheria@gmail.com>
Date:   Thu Dec 19 14:22:37 2013 +0530

    drivers: net: Include new header file in sbni.c
    
    Create a new header file include/net/Space.h which contains
    prototype declaration of sbni_probe().
    
    Include the new header file in drivers/net/Space.c and
    drivers/net/wan/sbni.c because they use this function.
    
    This eliminates the following warning in wan/sbni.c:
    drivers/net/wan/sbni.c:224:12: warning: no previous prototype for ‘sbni_probe’ [-Wmissing-prototypes]
    
    Signed-off-by: Rashika Kheria <rashika.kheria@gmail.com>
    Reviewed-by: Josh Triplett <josh@joshtriplett.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
index a7271e093845..67977f15af25 100644
--- a/drivers/net/Space.c
+++ b/drivers/net/Space.c
@@ -32,39 +32,12 @@
 #include <linux/errno.h>
 #include <linux/init.h>
 #include <linux/netlink.h>
+#include <net/Space.h>
 
 /* A unified ethernet device probe.  This is the easiest way to have every
    ethernet adaptor have the name "eth[0123...]".
    */
 
-extern struct net_device *hp100_probe(int unit);
-extern struct net_device *ultra_probe(int unit);
-extern struct net_device *wd_probe(int unit);
-extern struct net_device *ne_probe(int unit);
-extern struct net_device *fmv18x_probe(int unit);
-extern struct net_device *i82596_probe(int unit);
-extern struct net_device *ni65_probe(int unit);
-extern struct net_device *sonic_probe(int unit);
-extern struct net_device *smc_init(int unit);
-extern struct net_device *atarilance_probe(int unit);
-extern struct net_device *sun3lance_probe(int unit);
-extern struct net_device *sun3_82586_probe(int unit);
-extern struct net_device *apne_probe(int unit);
-extern struct net_device *cs89x0_probe(int unit);
-extern struct net_device *mvme147lance_probe(int unit);
-extern struct net_device *tc515_probe(int unit);
-extern struct net_device *lance_probe(int unit);
-extern struct net_device *mac8390_probe(int unit);
-extern struct net_device *mac89x0_probe(int unit);
-extern struct net_device *cops_probe(int unit);
-extern struct net_device *ltpc_probe(void);
-
-/* Fibre Channel adapters */
-extern int iph5526_probe(struct net_device *dev);
-
-/* SBNI adapters */
-extern int sbni_probe(int unit);
-
 struct devprobe2 {
 	struct net_device *(*probe)(int unit);
 	int status;	/* non-zero if autoprobe has failed */

commit dd9589c7c00ab41e49d972dc9a01fcac7dc39961
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Fri Aug 30 06:04:57 2013 -0700

    net/ethernet: Drop H8/300 Ethernet driver
    
    Architecture is gone, so this driver is no longer needed.
    
    Cc: Yoshinori Sato <ysato@users.sourceforge.jp>
    Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Acked-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
index 3a8c7532ee0d..a7271e093845 100644
--- a/drivers/net/Space.c
+++ b/drivers/net/Space.c
@@ -102,8 +102,7 @@ static struct devprobe2 isa_probes[] __initdata = {
 #ifdef CONFIG_WD80x3
 	{wd_probe, 0},
 #endif
-#if defined(CONFIG_NE2000) || \
-    defined(CONFIG_NE_H8300)  /* ISA (use ne2k-pci for PCI cards) */
+#if defined(CONFIG_NE2000) /* ISA (use ne2k-pci for PCI cards) */
 	{ne_probe, 0},
 #endif
 #ifdef CONFIG_LANCE		/* ISA/VLB (use pcnet32 for PCI cards) */

commit 463d413cb7dcd5509bc01e1108c2e2dcf8104683
Author: Paul Gortmaker <paul.gortmaker@windriver.com>
Date:   Mon Jan 21 19:13:26 2013 -0500

    drivers/net: delete old x86 variant of the seeq8005 driver
    
    The last update to the Ethernet HowTo (over 10 years ago) listed this:
    
     ------------------------
       SEEQ 8005
    
       Status: Obsolete, Driver Name: seeq8005
    
       There is little information about the card included in the driver,
       and hence little information to be put here. If you have a question,
       you are probably best trying to e-mail the driver author as listed
       in the source.
    
       It was marked obsolete as of the 2.4 series kernels.
     ------------------------
    
    If it was obsolete over a decade ago, the situation can not have
    improved with the passage of time, so let us act on that.  Even with
    today's improved search engines, I was unable to locate any real
    meaningful information on the ISA implementation of this rare chip.
    
    There are ARM and SGI variants of the driver in tree, but they do
    not depend on the original x86 driver source or header file.  We
    leave those non-x86 drivers to be deleted by the arch maintainers
    when they decide to expire those legacy platforms as a whole.
    
    Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
index 9c30ea4a1254..3a8c7532ee0d 100644
--- a/drivers/net/Space.c
+++ b/drivers/net/Space.c
@@ -45,7 +45,6 @@ extern struct net_device *fmv18x_probe(int unit);
 extern struct net_device *i82596_probe(int unit);
 extern struct net_device *ni65_probe(int unit);
 extern struct net_device *sonic_probe(int unit);
-extern struct net_device *seeq8005_probe(int unit);
 extern struct net_device *smc_init(int unit);
 extern struct net_device *atarilance_probe(int unit);
 extern struct net_device *sun3lance_probe(int unit);
@@ -113,9 +112,6 @@ static struct devprobe2 isa_probes[] __initdata = {
 #ifdef CONFIG_SMC9194
 	{smc_init, 0},
 #endif
-#ifdef CONFIG_SEEQ8005
-	{seeq8005_probe, 0},
-#endif
 #ifdef CONFIG_CS89x0
 #ifndef CONFIG_CS89x0_PLATFORM
  	{cs89x0_probe, 0},

commit 0ffd89e48fc10f9665b07615cde40b1775b24570
Author: Paul Gortmaker <paul.gortmaker@windriver.com>
Date:   Sun Jan 20 17:14:45 2013 -0500

    drivers/net: delete Digital EtherWorks-3 support.
    
    This is another one that makes sense to target for obsolescence, since
    it (a)appeared pre-1995, and (b)was rather rare, and (c)did not
    really have any statistically significant active linux user base.
    
    Removing this ISA 10Mbit driver support is unlikely to be even noticed
    by the user base of 3.9+ linux kernels, especially when the documentation
    clearly indicates the vintage with this text:
    
             "...designed to  work with all kernels > 1.1.33"
    
    Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
index 393b0176c131..9c30ea4a1254 100644
--- a/drivers/net/Space.c
+++ b/drivers/net/Space.c
@@ -43,7 +43,6 @@ extern struct net_device *wd_probe(int unit);
 extern struct net_device *ne_probe(int unit);
 extern struct net_device *fmv18x_probe(int unit);
 extern struct net_device *i82596_probe(int unit);
-extern struct net_device *ewrk3_probe(int unit);
 extern struct net_device *ni65_probe(int unit);
 extern struct net_device *sonic_probe(int unit);
 extern struct net_device *seeq8005_probe(int unit);
@@ -122,9 +121,6 @@ static struct devprobe2 isa_probes[] __initdata = {
  	{cs89x0_probe, 0},
 #endif
 #endif
-#ifdef CONFIG_EWRK3             /* DEC EtherWORKS 3 */
-    	{ewrk3_probe, 0},
-#endif
 #if defined(CONFIG_MVME16x_NET) || defined(CONFIG_BVME6000_NET)	/* Intel I82596 */
 	{i82596_probe, 0},
 #endif

commit fce3cd45e66672744fbd58fd620c5780f3159a53
Author: Paul Gortmaker <paul.gortmaker@windriver.com>
Date:   Mon Jan 14 20:32:46 2013 -0500

    drivers/net: delete the really obsolete 8390 based 10Mbit ISA drivers
    
    This is an area I know all too well, after being author of several 8390
    drivers, and maintainer of all 8390 drivers during a large part of their
    active lifecycle.
    
    To that end, I can say this with a reasonable degree of confidence.
    The drivers deleted here represent the earliest (as in early 1990)
    hardware and/or rare hardware.  The remaining hardware not deleted
    here is the more modern/sane of the lot, with ISA-PnP and jumperless
    "soft configuration" like the wd and smc cards had.
    
    The original ne2000 driver (ne.c) gets a pass at this time since
    AT/LANTIC based cards that could be both ne2000 or wd-like (with
    shared memory) and with jumperless configuration were made in the
    mid to late 1990's, and performed reasonably well for their era.
    
    Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
index 15de20bed4fc..393b0176c131 100644
--- a/drivers/net/Space.c
+++ b/drivers/net/Space.c
@@ -40,14 +40,10 @@
 extern struct net_device *hp100_probe(int unit);
 extern struct net_device *ultra_probe(int unit);
 extern struct net_device *wd_probe(int unit);
-extern struct net_device *el2_probe(int unit);
 extern struct net_device *ne_probe(int unit);
-extern struct net_device *hp_probe(int unit);
-extern struct net_device *hp_plus_probe(int unit);
 extern struct net_device *fmv18x_probe(int unit);
 extern struct net_device *i82596_probe(int unit);
 extern struct net_device *ewrk3_probe(int unit);
-extern struct net_device *e2100_probe(int unit);
 extern struct net_device *ni65_probe(int unit);
 extern struct net_device *sonic_probe(int unit);
 extern struct net_device *seeq8005_probe(int unit);
@@ -108,18 +104,6 @@ static struct devprobe2 isa_probes[] __initdata = {
 #ifdef CONFIG_WD80x3
 	{wd_probe, 0},
 #endif
-#ifdef CONFIG_EL2 		/* 3c503 */
-	{el2_probe, 0},
-#endif
-#ifdef CONFIG_HPLAN
-	{hp_probe, 0},
-#endif
-#ifdef CONFIG_HPLAN_PLUS
-	{hp_plus_probe, 0},
-#endif
-#ifdef CONFIG_E2100		/* Cabletron E21xx series. */
-	{e2100_probe, 0},
-#endif
 #if defined(CONFIG_NE2000) || \
     defined(CONFIG_NE_H8300)  /* ISA (use ne2k-pci for PCI cards) */
 	{ne_probe, 0},

commit bb37f1223a7ba9e0abf21d5392d0bb4aedce78f5
Author: Paul Gortmaker <paul.gortmaker@windriver.com>
Date:   Sun Jan 13 19:41:14 2013 -0500

    drivers/net: delete old fujitsu based eth16i driver
    
    This is another driver for relatively rare 10Mbit hardware that
    originated in the early 1990's.  So we select it for removal at
    this point in time as well.
    
    Cc: Mika Kuoppala <miku@iki.fi>
    Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
index e7d916d5232e..15de20bed4fc 100644
--- a/drivers/net/Space.c
+++ b/drivers/net/Space.c
@@ -45,7 +45,6 @@ extern struct net_device *ne_probe(int unit);
 extern struct net_device *hp_probe(int unit);
 extern struct net_device *hp_plus_probe(int unit);
 extern struct net_device *fmv18x_probe(int unit);
-extern struct net_device *eth16i_probe(int unit);
 extern struct net_device *i82596_probe(int unit);
 extern struct net_device *ewrk3_probe(int unit);
 extern struct net_device *e2100_probe(int unit);
@@ -139,9 +138,6 @@ static struct devprobe2 isa_probes[] __initdata = {
  	{cs89x0_probe, 0},
 #endif
 #endif
-#ifdef CONFIG_ETH16I
-	{eth16i_probe, 0},	/* ICL EtherTeam 16i/32 */
-#endif
 #ifdef CONFIG_EWRK3             /* DEC EtherWORKS 3 */
     	{ewrk3_probe, 0},
 #endif

commit 13a80cb8b72769f163834d4243bd156f1bec37dc
Author: Paul Gortmaker <paul.gortmaker@windriver.com>
Date:   Thu Jan 10 19:19:43 2013 -0500

    drivers/net: delete at1700 ISA 10Mbit driver
    
    These Fujitsu MB86965 based ISA 10Mbit cards were another of the
    relatively rare cards dating from the early 1990s that for one reason
    or another didn't seem to get a lot of use in linux.  So we retire it
    now with a reasonable degree of confidence that it won't impact anyone.
    
    Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
index 4141c6465683..e7d916d5232e 100644
--- a/drivers/net/Space.c
+++ b/drivers/net/Space.c
@@ -44,7 +44,6 @@ extern struct net_device *el2_probe(int unit);
 extern struct net_device *ne_probe(int unit);
 extern struct net_device *hp_probe(int unit);
 extern struct net_device *hp_plus_probe(int unit);
-extern struct net_device *at1700_probe(int unit);
 extern struct net_device *fmv18x_probe(int unit);
 extern struct net_device *eth16i_probe(int unit);
 extern struct net_device *i82596_probe(int unit);
@@ -140,9 +139,6 @@ static struct devprobe2 isa_probes[] __initdata = {
  	{cs89x0_probe, 0},
 #endif
 #endif
-#ifdef CONFIG_AT1700
-	{at1700_probe, 0},
-#endif
 #ifdef CONFIG_ETH16I
 	{eth16i_probe, 0},	/* ICL EtherTeam 16i/32 */
 #endif

commit d2477de7a63a332a8fe75008fa87e05290c5caac
Author: Paul Gortmaker <paul.gortmaker@windriver.com>
Date:   Thu Jan 10 18:25:04 2013 -0500

    drivers/net: delete old 8 bit ISA Racal ni5010 support.
    
    These cards were only available in 8bit format, and in addition
    they only had AUI and BNC(10-Base2) interfaces (i.e. no RJ-45).
    
    In fact, they are so rare, that an internet search on these old
    cards almost comes up empty, unless the "Micom interlan" name
    is used.
    
    This puts them in the equivalent domain as the 3c501, so there
    should be no strong opposition to the driver removal, as nobody
    is seriously using 3.9+ with 8 bit ISA hardware.
    
    In doing so, the whole "ethernet/racal" category becomes empty,
    so we clean up the Makefile/Kconfig and subdir appropriately.
    
    Cc: Andreas Mohr <andi@lisas.de>
    Cc: Jan-Pascal van Best <janpascal@vanbest.org>
    Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
index b69dac1df344..4141c6465683 100644
--- a/drivers/net/Space.c
+++ b/drivers/net/Space.c
@@ -50,7 +50,6 @@ extern struct net_device *eth16i_probe(int unit);
 extern struct net_device *i82596_probe(int unit);
 extern struct net_device *ewrk3_probe(int unit);
 extern struct net_device *e2100_probe(int unit);
-extern struct net_device *ni5010_probe(int unit);
 extern struct net_device *ni65_probe(int unit);
 extern struct net_device *sonic_probe(int unit);
 extern struct net_device *seeq8005_probe(int unit);
@@ -153,9 +152,6 @@ static struct devprobe2 isa_probes[] __initdata = {
 #if defined(CONFIG_MVME16x_NET) || defined(CONFIG_BVME6000_NET)	/* Intel I82596 */
 	{i82596_probe, 0},
 #endif
-#ifdef CONFIG_NI5010
-	{ni5010_probe, 0},
-#endif
 #ifdef CONFIG_NI65
 	{ni65_probe, 0},
 #endif

commit 04861c535d1f5bad0fd537820116c0429a2dfe4b
Author: Paul Gortmaker <paul.gortmaker@windriver.com>
Date:   Thu Jan 10 18:12:04 2013 -0500

    drivers/net: delete Racal Interlan ISA ni52 (i825xx) driver
    
    Like the other drivers that were in the ISA i825xx family, the ni52
    was rather rare, not widely used, and hence perhaps not as reliable
    as the more mainstream ISA drivers that were heavily used.  Given
    that, it is chosen for retirement at this time as well.
    
    Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
index 726b17b79610..b69dac1df344 100644
--- a/drivers/net/Space.c
+++ b/drivers/net/Space.c
@@ -51,7 +51,6 @@ extern struct net_device *i82596_probe(int unit);
 extern struct net_device *ewrk3_probe(int unit);
 extern struct net_device *e2100_probe(int unit);
 extern struct net_device *ni5010_probe(int unit);
-extern struct net_device *ni52_probe(int unit);
 extern struct net_device *ni65_probe(int unit);
 extern struct net_device *sonic_probe(int unit);
 extern struct net_device *seeq8005_probe(int unit);
@@ -157,9 +156,6 @@ static struct devprobe2 isa_probes[] __initdata = {
 #ifdef CONFIG_NI5010
 	{ni5010_probe, 0},
 #endif
-#ifdef CONFIG_NI52
-	{ni52_probe, 0},
-#endif
 #ifdef CONFIG_NI65
 	{ni65_probe, 0},
 #endif

commit f84932d8313af16a37cf25412b7d9054d01d3bea
Author: Paul Gortmaker <paul.gortmaker@windriver.com>
Date:   Wed Jan 9 21:01:40 2013 -0500

    drivers/net: delete ISA intel eexpress and eepro i825xx drivers
    
    These old drivers should not be confused with the very common PCI
    cards that are supported by e100.c -- these older 10Mbit ISA only
    drivers were not as commonly used as some of the other ISA drivers,
    simply due to hardware availability and pricing.
    
    Given the rarity of the hardware, and the subsequent less extensive
    use of the drivers, it makes sense to obsolete them at this point
    in time, along with other rare/experimental ISA drivers.
    
    Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
index ac66a6af7138..726b17b79610 100644
--- a/drivers/net/Space.c
+++ b/drivers/net/Space.c
@@ -44,8 +44,6 @@ extern struct net_device *el2_probe(int unit);
 extern struct net_device *ne_probe(int unit);
 extern struct net_device *hp_probe(int unit);
 extern struct net_device *hp_plus_probe(int unit);
-extern struct net_device *express_probe(int unit);
-extern struct net_device *eepro_probe(int unit);
 extern struct net_device *at1700_probe(int unit);
 extern struct net_device *fmv18x_probe(int unit);
 extern struct net_device *eth16i_probe(int unit);
@@ -150,12 +148,6 @@ static struct devprobe2 isa_probes[] __initdata = {
 #ifdef CONFIG_ETH16I
 	{eth16i_probe, 0},	/* ICL EtherTeam 16i/32 */
 #endif
-#ifdef CONFIG_EEXPRESS		/* Intel EtherExpress */
-	{express_probe, 0},
-#endif
-#ifdef CONFIG_EEXPRESS_PRO	/* Intel EtherExpress Pro/10 */
-	{eepro_probe, 0},
-#endif
 #ifdef CONFIG_EWRK3             /* DEC EtherWORKS 3 */
     	{ewrk3_probe, 0},
 #endif

commit 0e245dbaac9fa1c2fd0f4e2af7b9f6d874083a8b
Author: Paul Gortmaker <paul.gortmaker@windriver.com>
Date:   Wed Jan 9 20:51:58 2013 -0500

    drivers/net: delete the 3Com 3c505/3c507 intel i825xx support
    
    For those of us who were around in the early to mid 1990's, we
    will remember that the i825xx ethernet support was not something
    that was considered sufficiently vetted for 24/7 use.
    
    Folks might be inclined to use *functional* ISA hardware on some
    near expired P3 ISA machines for dedicated workhorse applications,
    but the odds of using (and relying on) one of these old/experimental
    drivers is essentially nil.  So lets remove them.
    
    Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
index d48712751357..ac66a6af7138 100644
--- a/drivers/net/Space.c
+++ b/drivers/net/Space.c
@@ -51,8 +51,6 @@ extern struct net_device *fmv18x_probe(int unit);
 extern struct net_device *eth16i_probe(int unit);
 extern struct net_device *i82596_probe(int unit);
 extern struct net_device *ewrk3_probe(int unit);
-extern struct net_device *el16_probe(int unit);
-extern struct net_device *elplus_probe(int unit);
 extern struct net_device *e2100_probe(int unit);
 extern struct net_device *ni5010_probe(int unit);
 extern struct net_device *ni52_probe(int unit);
@@ -164,12 +162,6 @@ static struct devprobe2 isa_probes[] __initdata = {
 #if defined(CONFIG_MVME16x_NET) || defined(CONFIG_BVME6000_NET)	/* Intel I82596 */
 	{i82596_probe, 0},
 #endif
-#ifdef CONFIG_EL16		/* 3c507 */
-	{el16_probe, 0},
-#endif
-#ifdef CONFIG_ELPLUS		/* 3c505 */
-	{elplus_probe, 0},
-#endif
 #ifdef CONFIG_NI5010
 	{ni5010_probe, 0},
 #endif

commit 168e06ae26dd327df347e70b7244218ff1766a1f
Author: Paul Gortmaker <paul.gortmaker@windriver.com>
Date:   Wed Jan 9 20:30:26 2013 -0500

    drivers/net: delete old parallel port de600/de620 drivers
    
    The parallel port is largely replaced by USB, and even in the
    day where these drivers were current, the documented speed was
    less than 100kB/s.  Let us not pretend that anyone cares about
    these drivers anymore, or worse - pretend that anyone is using
    them on a modern kernel.
    
    As a side bonus, this is the end of legacy parallel port ethernet,
    so we get to drop the whole chunk relating to that in the legacy
    Space.c file containing the non-PCI unified probe dispatch.
    
    Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
index 64cd86efab96..d48712751357 100644
--- a/drivers/net/Space.c
+++ b/drivers/net/Space.c
@@ -73,9 +73,6 @@ extern struct net_device *mac89x0_probe(int unit);
 extern struct net_device *cops_probe(int unit);
 extern struct net_device *ltpc_probe(void);
 
-/* Detachable devices ("pocket adaptors") */
-extern struct net_device *de620_probe(int unit);
-
 /* Fibre Channel adapters */
 extern int iph5526_probe(struct net_device *dev);
 
@@ -185,13 +182,6 @@ static struct devprobe2 isa_probes[] __initdata = {
 	{NULL, 0},
 };
 
-static struct devprobe2 parport_probes[] __initdata = {
-#ifdef CONFIG_DE620		/* D-Link DE-620 adapter */
-	{de620_probe, 0},
-#endif
-	{NULL, 0},
-};
-
 static struct devprobe2 m68k_probes[] __initdata = {
 #ifdef CONFIG_ATARILANCE	/* Lance-based Atari ethernet boards */
 	{atarilance_probe, 0},
@@ -230,8 +220,7 @@ static void __init ethif_probe2(int unit)
 		return;
 
 	(void)(	probe_list2(unit, m68k_probes, base_addr == 0) &&
-		probe_list2(unit, isa_probes, base_addr == 0) &&
-		probe_list2(unit, parport_probes, base_addr == 0));
+		probe_list2(unit, isa_probes, base_addr == 0));
 }
 
 /*  Statically configured drivers -- order matters here. */

commit de8270ff4642f78ff62e9bae20e6ebf39677880c
Author: Paul Gortmaker <paul.gortmaker@windriver.com>
Date:   Wed Jan 9 20:25:05 2013 -0500

    drivers/net: delete old 8bit ISA 3c501 driver.
    
    It was amusing that linux was able to make use of this 1980's
    technology on machines long past its intended lifespan, but
    it probably should go now.
    
    To set some context, the 3c501 was designed in the 1980's to be
    used on 8088 PC-XT 8bit ISA machines.  It was built using a large
    number of discrete TTL components and truly looks like a relic
    of the ancient past before large scale integration was common.
    
    But from a functional point of view, the real issue, as stated
    in the (also obsolete) Ethernet-HowTo, is that "...the 3c501 can
    only do one thing at a time -- while you are removing one packet
    from the single-packet buffer it cannot receive another packet,
    nor can it receive a packet while loading a transmit packet."
    
    You know things are not good when the Kconfig help text suggests
    you make a cron job doing a ping every minute.
    
    Hardware that old and crippled is simply not going to be used by
    anyone in a time where 10 year old 100Mbit PCI cards (that are
    still functional) are largely give-away items.
    
    Cc: Alan Cox <alan@linux.intel.com>
    Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
index c6e51943caaf..64cd86efab96 100644
--- a/drivers/net/Space.c
+++ b/drivers/net/Space.c
@@ -51,7 +51,6 @@ extern struct net_device *fmv18x_probe(int unit);
 extern struct net_device *eth16i_probe(int unit);
 extern struct net_device *i82596_probe(int unit);
 extern struct net_device *ewrk3_probe(int unit);
-extern struct net_device *el1_probe(int unit);
 extern struct net_device *el16_probe(int unit);
 extern struct net_device *elplus_probe(int unit);
 extern struct net_device *e2100_probe(int unit);
@@ -168,9 +167,6 @@ static struct devprobe2 isa_probes[] __initdata = {
 #if defined(CONFIG_MVME16x_NET) || defined(CONFIG_BVME6000_NET)	/* Intel I82596 */
 	{i82596_probe, 0},
 #endif
-#ifdef CONFIG_EL1		/* 3c501 */
-	{el1_probe, 0},
-#endif
 #ifdef CONFIG_EL16		/* 3c507 */
 	{el16_probe, 0},
 #endif

commit 6e07ba3e6ad939c89befc2588e72bf37038f7f53
Author: Paul Gortmaker <paul.gortmaker@windriver.com>
Date:   Tue Jan 8 22:00:39 2013 -0500

    drivers/net: delete 486 Apricot support
    
    The Apricot was a 486 PC with 4MB RAM, and an on-board ethernet
    via an intel i82596 hard-wired to i/o 0x300.
    
    Those who were using linux in the 1990's will recall that the
    i82596 driver was not one of the more stable or widely used
    drivers of its day.  Combine that with the extremely limited
    resources of the platform, and it is truly time to expire the
    support for this thing.
    
    There are some old m68k targets who were also using this chip,
    so rather than poll the m68k user base, we simply cut out the
    x86/Apricot support here in this commit.
    
    Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
index 5637c2671415..c6e51943caaf 100644
--- a/drivers/net/Space.c
+++ b/drivers/net/Space.c
@@ -165,7 +165,7 @@ static struct devprobe2 isa_probes[] __initdata = {
 #ifdef CONFIG_EWRK3             /* DEC EtherWORKS 3 */
     	{ewrk3_probe, 0},
 #endif
-#if defined(CONFIG_APRICOT) || defined(CONFIG_MVME16x_NET) || defined(CONFIG_BVME6000_NET)	/* Intel I82596 */
+#if defined(CONFIG_MVME16x_NET) || defined(CONFIG_BVME6000_NET)	/* Intel I82596 */
 	{i82596_probe, 0},
 #endif
 #ifdef CONFIG_EL1		/* 3c501 */

commit a66f566afc3a06f7588cd7a2c93125fce494162b
Author: Paul Gortmaker <paul.gortmaker@windriver.com>
Date:   Sun Jan 13 18:55:05 2013 +0000

    drivers/net: Clean up orphaned probes in Space.c
    
    The removal of the 8390 EISA drivers actually comprises the
    complete content of the EISA probe block, so we can now remove
    that block, and its hook into the unified probe.  Note that
    the deleted comment mentions PCI probes, but they long since
    moved elsewhere, so no PCI probes are touched here.
    
    We get rid of the orphaned EISA probe prototypes, and a couple
    of left over MCA probe prototypes at the same time.
    
    Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
index e3f0faca98d0..5637c2671415 100644
--- a/drivers/net/Space.c
+++ b/drivers/net/Space.c
@@ -37,10 +37,8 @@
    ethernet adaptor have the name "eth[0123...]".
    */
 
-extern struct net_device *ne2_probe(int unit);
 extern struct net_device *hp100_probe(int unit);
 extern struct net_device *ultra_probe(int unit);
-extern struct net_device *ultra32_probe(int unit);
 extern struct net_device *wd_probe(int unit);
 extern struct net_device *el2_probe(int unit);
 extern struct net_device *ne_probe(int unit);
@@ -55,11 +53,7 @@ extern struct net_device *i82596_probe(int unit);
 extern struct net_device *ewrk3_probe(int unit);
 extern struct net_device *el1_probe(int unit);
 extern struct net_device *el16_probe(int unit);
-extern struct net_device *elmc_probe(int unit);
 extern struct net_device *elplus_probe(int unit);
-extern struct net_device *ac3200_probe(int unit);
-extern struct net_device *es_probe(int unit);
-extern struct net_device *lne390_probe(int unit);
 extern struct net_device *e2100_probe(int unit);
 extern struct net_device *ni5010_probe(int unit);
 extern struct net_device *ni52_probe(int unit);
@@ -77,7 +71,6 @@ extern struct net_device *tc515_probe(int unit);
 extern struct net_device *lance_probe(int unit);
 extern struct net_device *mac8390_probe(int unit);
 extern struct net_device *mac89x0_probe(int unit);
-extern struct net_device *mc32_probe(int unit);
 extern struct net_device *cops_probe(int unit);
 extern struct net_device *ltpc_probe(void);
 
@@ -110,29 +103,6 @@ static int __init probe_list2(int unit, struct devprobe2 *p, int autoprobe)
 	return -ENODEV;
 }
 
-/*
- * This is a bit of an artificial separation as there are PCI drivers
- * that also probe for EISA cards (in the PCI group) and there are ISA
- * drivers that probe for EISA cards (in the ISA group).  These are the
- * legacy EISA only driver probes, and also the legacy PCI probes
- */
-
-static struct devprobe2 eisa_probes[] __initdata = {
-#ifdef CONFIG_ULTRA32
-	{ultra32_probe, 0},
-#endif
-#ifdef CONFIG_AC3200
-	{ac3200_probe, 0},
-#endif
-#ifdef CONFIG_ES3210
-	{es_probe, 0},
-#endif
-#ifdef CONFIG_LNE390
-	{lne390_probe, 0},
-#endif
-	{NULL, 0},
-};
-
 /*
  * ISA probes that touch addresses < 0x400 (including those that also
  * look for EISA/PCI cards in addition to ISA cards).
@@ -264,7 +234,6 @@ static void __init ethif_probe2(int unit)
 		return;
 
 	(void)(	probe_list2(unit, m68k_probes, base_addr == 0) &&
-		probe_list2(unit, eisa_probes, base_addr == 0) &&
 		probe_list2(unit, isa_probes, base_addr == 0) &&
 		probe_list2(unit, parport_probes, base_addr == 0));
 }

commit a5e371f61ad33c07b28e7c9b60c78d71fdd34e2a
Author: Paul Gortmaker <paul.gortmaker@windriver.com>
Date:   Wed May 16 19:48:42 2012 -0400

    drivers/net: delete all code/drivers depending on CONFIG_MCA
    
    The support for CONFIG_MCA is being removed, since the 20
    year old hardware simply isn't capable of meeting today's
    software demands on CPU and memory resources.
    
    This commit removes any MCA specific net drivers, and removes
    any MCA specific probe/support code from drivers that were
    doing a dual ISA/MCA role.
    
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: James Bottomley <James.Bottomley@HansenPartnership.com>
    Cc: netdev@vger.kernel.org
    Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
index 486e2dc366e0..e3f0faca98d0 100644
--- a/drivers/net/Space.c
+++ b/drivers/net/Space.c
@@ -133,22 +133,9 @@ static struct devprobe2 eisa_probes[] __initdata = {
 	{NULL, 0},
 };
 
-static struct devprobe2 mca_probes[] __initdata = {
-#ifdef CONFIG_NE2_MCA
-	{ne2_probe, 0},
-#endif
-#ifdef CONFIG_ELMC		/* 3c523 */
-	{elmc_probe, 0},
-#endif
-#ifdef CONFIG_ELMC_II		/* 3c527 */
-	{mc32_probe, 0},
-#endif
-	{NULL, 0},
-};
-
 /*
  * ISA probes that touch addresses < 0x400 (including those that also
- * look for EISA/PCI/MCA cards in addition to ISA cards).
+ * look for EISA/PCI cards in addition to ISA cards).
  */
 static struct devprobe2 isa_probes[] __initdata = {
 #if defined(CONFIG_HP100) && defined(CONFIG_ISA)	/* ISA, EISA */
@@ -278,7 +265,6 @@ static void __init ethif_probe2(int unit)
 
 	(void)(	probe_list2(unit, m68k_probes, base_addr == 0) &&
 		probe_list2(unit, eisa_probes, base_addr == 0) &&
-		probe_list2(unit, mca_probes, base_addr == 0) &&
 		probe_list2(unit, isa_probes, base_addr == 0) &&
 		probe_list2(unit, parport_probes, base_addr == 0));
 }

commit ee446fd5e6dafee4a16fd1bd345d2571dcfd6f5d
Author: Paul Gortmaker <paul.gortmaker@windriver.com>
Date:   Wed May 9 22:41:59 2012 -0400

    tokenring: delete all remaining driver support
    
    This represents the mass deletion of the of the tokenring support.
    
    It gets rid of:
      - the net/tr.c which the drivers depended on
      - the drivers/net component
      - the Kbuild infrastructure around it
      - any tokenring related CONFIG_ settings in any defconfigs
      - the tokenring headers in the include/linux dir
      - the firmware associated with the tokenring drivers.
      - any associated token ring documentation.
    
    Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
index 88bbd8ffa7fe..486e2dc366e0 100644
--- a/drivers/net/Space.c
+++ b/drivers/net/Space.c
@@ -29,7 +29,6 @@
  */
 #include <linux/netdevice.h>
 #include <linux/etherdevice.h>
-#include <linux/trdevice.h>
 #include <linux/errno.h>
 #include <linux/init.h>
 #include <linux/netlink.h>
@@ -284,46 +283,6 @@ static void __init ethif_probe2(int unit)
 		probe_list2(unit, parport_probes, base_addr == 0));
 }
 
-#ifdef CONFIG_TR
-/* Token-ring device probe */
-extern int ibmtr_probe_card(struct net_device *);
-extern struct net_device *smctr_probe(int unit);
-
-static struct devprobe2 tr_probes2[] __initdata = {
-#ifdef CONFIG_SMCTR
-	{smctr_probe, 0},
-#endif
-	{NULL, 0},
-};
-
-static __init int trif_probe(int unit)
-{
-	int err = -ENODEV;
-#ifdef CONFIG_IBMTR
-	struct net_device *dev = alloc_trdev(0);
-	if (!dev)
-		return -ENOMEM;
-
-	sprintf(dev->name, "tr%d", unit);
-	netdev_boot_setup_check(dev);
-	err = ibmtr_probe_card(dev);
-	if (err)
-		free_netdev(dev);
-#endif
-	return err;
-}
-
-static void __init trif_probe2(int unit)
-{
-	unsigned long base_addr = netdev_boot_base("tr", unit);
-
-	if (base_addr == 1)
-		return;
-	probe_list2(unit, tr_probes2, base_addr == 0);
-}
-#endif
-
-
 /*  Statically configured drivers -- order matters here. */
 static int __init net_olddevs_init(void)
 {
@@ -332,11 +291,6 @@ static int __init net_olddevs_init(void)
 #ifdef CONFIG_SBNI
 	for (num = 0; num < 8; ++num)
 		sbni_probe(num);
-#endif
-#ifdef CONFIG_TR
-	for (num = 0; num < 8; ++num)
-		if (!trif_probe(num))
-			trif_probe2(num);
 #endif
 	for (num = 0; num < 8; ++num)
 		ethif_probe2(num);

commit e9460a9e811dddd9ea1ae9838d9b53bfaf78cd2c
Author: Jaccon Bastiaansen <jaccon.bastiaansen@gmail.com>
Date:   Thu Jan 26 21:46:15 2012 +0100

    CS89x0 : add platform driver support
    
    The CS89x0 ethernet controller is used on a number of evaluation
    boards, such as the MX31ADS. The current driver has memory address and
    IRQ settings for each board on which this controller is used. Driver
    updates are therefore required to support other boards that also use
    the CS89x0. To avoid these driver updates, a better mechanism
    (platform driver support) is added to communicate the board dependent
    settings to the driver.
    
    Signed-off-by: Jaccon Bastiaansen <jaccon.bastiaansen@gmail.com>
    Acked-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
index 068c3563e00f..88bbd8ffa7fe 100644
--- a/drivers/net/Space.c
+++ b/drivers/net/Space.c
@@ -190,8 +190,10 @@ static struct devprobe2 isa_probes[] __initdata = {
 	{seeq8005_probe, 0},
 #endif
 #ifdef CONFIG_CS89x0
+#ifndef CONFIG_CS89x0_PLATFORM
  	{cs89x0_probe, 0},
 #endif
+#endif
 #ifdef CONFIG_AT1700
 	{at1700_probe, 0},
 #endif

commit f08c3117c349ea56bd57be347b0b5f8be8c3143c
Author: Paul Gortmaker <paul.gortmaker@windriver.com>
Date:   Sat Jan 1 13:15:01 2011 +0000

    net/Space: delete orphaned externs from deleted drivers
    
    The drivers associated with the prototypes in this commit have
    been deleted some time ago, but the externs escaped detection.
    Using a simple "git grep" shows that these references are
    historical artefacts, only mentioned by the deleted lines.
    
    Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
index 9bb405bd664e..068c3563e00f 100644
--- a/drivers/net/Space.c
+++ b/drivers/net/Space.c
@@ -55,8 +55,6 @@ extern struct net_device *eth16i_probe(int unit);
 extern struct net_device *i82596_probe(int unit);
 extern struct net_device *ewrk3_probe(int unit);
 extern struct net_device *el1_probe(int unit);
-extern struct net_device *wavelan_probe(int unit);
-extern struct net_device *arlan_probe(int unit);
 extern struct net_device *el16_probe(int unit);
 extern struct net_device *elmc_probe(int unit);
 extern struct net_device *elplus_probe(int unit);
@@ -68,7 +66,6 @@ extern struct net_device *ni5010_probe(int unit);
 extern struct net_device *ni52_probe(int unit);
 extern struct net_device *ni65_probe(int unit);
 extern struct net_device *sonic_probe(int unit);
-extern struct net_device *SK_init(int unit);
 extern struct net_device *seeq8005_probe(int unit);
 extern struct net_device *smc_init(int unit);
 extern struct net_device *atarilance_probe(int unit);
@@ -76,8 +73,6 @@ extern struct net_device *sun3lance_probe(int unit);
 extern struct net_device *sun3_82586_probe(int unit);
 extern struct net_device *apne_probe(int unit);
 extern struct net_device *cs89x0_probe(int unit);
-extern struct net_device *hplance_probe(int unit);
-extern struct net_device *bagetlance_probe(int unit);
 extern struct net_device *mvme147lance_probe(int unit);
 extern struct net_device *tc515_probe(int unit);
 extern struct net_device *lance_probe(int unit);

commit 2a710b59a93d5fa3f02283491084fc37e042fdc1
Author: Christoph Egger <siccegge@cs.fau.de>
Date:   Wed Jul 14 12:17:35 2010 -0700

    net: Removing dead {AR,WAVE}LAN
    
    {AR,WAVE}LAN doesn't exist in Kconfig, therefore removing all
    references for it from the source code.
    
    Signed-off-by: Christoph Egger <siccegge@cs.fau.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
index 3b79c6cf21a3..9bb405bd664e 100644
--- a/drivers/net/Space.c
+++ b/drivers/net/Space.c
@@ -218,12 +218,6 @@ static struct devprobe2 isa_probes[] __initdata = {
 #ifdef CONFIG_EL1		/* 3c501 */
 	{el1_probe, 0},
 #endif
-#ifdef CONFIG_WAVELAN		/* WaveLAN */
-	{wavelan_probe, 0},
-#endif
-#ifdef CONFIG_ARLAN		/* Aironet */
-	{arlan_probe, 0},
-#endif
 #ifdef CONFIG_EL16		/* 3c507 */
 	{el16_probe, 0},
 #endif

commit 56a68a500fcab9e3a9a49ca7fbef14230ab7d144
Author: Adrian Bunk <bunk@stusta.de>
Date:   Fri Jul 13 07:54:30 2007 +0200

    more ACSI removal
    
    This patch removes some code that became dead code after the ATARI_ACSI
    removal.
    
    It also indirectly fixes the following bug introduced by
    commit c2bcf3b8978c291e1b7f6499475c8403a259d4d6:
    
     config ATARI_SLM
            tristate "Atari SLM laser printer support"
    -       depends on ATARI && ATARI_ACSI!=n
    +       depends on ATARI
    
    Acked-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Adrian Bunk <bunk@stusta.de>
    Signed-off-by: Jens Axboe <jens.axboe@oracle.com>

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
index 1c3e293fbaf7..3b79c6cf21a3 100644
--- a/drivers/net/Space.c
+++ b/drivers/net/Space.c
@@ -75,8 +75,6 @@ extern struct net_device *atarilance_probe(int unit);
 extern struct net_device *sun3lance_probe(int unit);
 extern struct net_device *sun3_82586_probe(int unit);
 extern struct net_device *apne_probe(int unit);
-extern struct net_device *bionet_probe(int unit);
-extern struct net_device *pamsnet_probe(int unit);
 extern struct net_device *cs89x0_probe(int unit);
 extern struct net_device *hplance_probe(int unit);
 extern struct net_device *bagetlance_probe(int unit);
@@ -264,12 +262,6 @@ static struct devprobe2 m68k_probes[] __initdata = {
 #ifdef CONFIG_APNE		/* A1200 PCMCIA NE2000 */
 	{apne_probe, 0},
 #endif
-#ifdef CONFIG_ATARI_BIONET	/* Atari Bionet Ethernet board */
-	{bionet_probe, 0},
-#endif
-#ifdef CONFIG_ATARI_PAMSNET	/* Atari PAMsNet Ethernet board */
-	{pamsnet_probe, 0},
-#endif
 #ifdef CONFIG_MVME147_NET	/* MVME147 internal Ethernet */
 	{mvme147lance_probe, 0},
 #endif

commit 8b6aaab8c8bdbe011aac79af218dd1e657984bab
Author: Finn Thain <fthain@telegraphics.com.au>
Date:   Tue May 1 22:33:01 2007 +0200

    m68k: macmace fixes
    
    Fix a race condition in the transmit code, where the dma interrupt could update
    the free tx buffer count concurrently and wedge the tx queue.
    
    Fix the misuse of the rx frame status and rx frame length registers: no more
    "fifo overrun" errors caused by the OFLOW bit being tested in the frame length
    register (instead of the status register), and no more missed packets due to
    incorrect length taken from status register (instead of the frame length
    register).
    
    Fix a panic (skb_over_panic BUG) caused by allocating and then copying an
    incoming packet while the packet length register was changing.
    
    Cut-and-paste the reset code from the powermac mace driver (mace.c), so the NIC
    functions when MacOS does not initialise it (important for anyone wanting to
    use the Emile boot loader).
    
    Cut-and-paste the error counting and timeout recovery code from mace.c.
    
    Fix over allocation of rx buffer memory (it's page order, not page count).
    
    Converted to driver model.
    
    Converted to DMA API.
    
    Since I've run out of ways to make it fail, and since it performs well now,
    promote the driver from EXPERIMENTAL status. Tested on both quadra 840av and
    660av.
    
    Signed-off-by: Finn Thain <fthain@telegraphics.com.au>
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
index dd8ed456c8b2..1c3e293fbaf7 100644
--- a/drivers/net/Space.c
+++ b/drivers/net/Space.c
@@ -83,7 +83,6 @@ extern struct net_device *bagetlance_probe(int unit);
 extern struct net_device *mvme147lance_probe(int unit);
 extern struct net_device *tc515_probe(int unit);
 extern struct net_device *lance_probe(int unit);
-extern struct net_device *mace_probe(int unit);
 extern struct net_device *mac8390_probe(int unit);
 extern struct net_device *mac89x0_probe(int unit);
 extern struct net_device *mc32_probe(int unit);
@@ -274,9 +273,6 @@ static struct devprobe2 m68k_probes[] __initdata = {
 #ifdef CONFIG_MVME147_NET	/* MVME147 internal Ethernet */
 	{mvme147lance_probe, 0},
 #endif
-#ifdef CONFIG_MACMACE		/* Mac 68k Quadra AV builtin Ethernet */
-	{mace_probe, 0},
-#endif
 #ifdef CONFIG_MAC8390           /* NuBus NS8390-based cards */
 	{mac8390_probe, 0},
 #endif

commit 95f48a71a254fa81ae4be1307ce3bb8361521a7d
Author: Adrian Bunk <bunk@stusta.de>
Date:   Tue Dec 19 13:08:48 2006 -0800

    remove the broken SKMC driver
    
    The SKMC driver has:
    - already been marked as BROKEN in 2.6.0 three years ago and
    - is still marked as BROKEN.
    
    Drivers that had been marked as BROKEN for such a long time seem to be
    unlikely to be revived in the forseeable future.
    
    But if anyone wants to ever revive this driver, the code is still
    present in the older kernel releases.
    
    Signed-off-by: Adrian Bunk <bunk@stusta.de>
    Cc: Jeff Garzik <jeff@garzik.org>
    Signed-off-by: Andrew Morton <akpm@osdl.org>
    Signed-off-by: Jeff Garzik <jeff@garzik.org>

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
index 9305eb9b1b98..dd8ed456c8b2 100644
--- a/drivers/net/Space.c
+++ b/drivers/net/Space.c
@@ -59,7 +59,6 @@ extern struct net_device *wavelan_probe(int unit);
 extern struct net_device *arlan_probe(int unit);
 extern struct net_device *el16_probe(int unit);
 extern struct net_device *elmc_probe(int unit);
-extern struct net_device *skmca_probe(int unit);
 extern struct net_device *elplus_probe(int unit);
 extern struct net_device *ac3200_probe(int unit);
 extern struct net_device *es_probe(int unit);
@@ -152,9 +151,6 @@ static struct devprobe2 mca_probes[] __initdata = {
 #endif
 #ifdef CONFIG_ELMC_II		/* 3c527 */
 	{mc32_probe, 0},
-#endif
-#ifdef CONFIG_SKMC              /* SKnet Microchannel */
-        {skmca_probe, 0},
 #endif
 	{NULL, 0},
 };

commit 60903f2c6616939afd0335b49697beeb7219657e
Author: Adrian Bunk <bunk@stusta.de>
Date:   Tue Jan 2 00:35:48 2007 -0800

    [NET] drivers/net/loopback.c: convert to module_init()
    
    This patch converts drivers/net/loopback.c to using module_init().
    
    Signed-off-by: Adrian Bunk <bunk@stusta.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
index 602ed31a5dd9..9305eb9b1b98 100644
--- a/drivers/net/Space.c
+++ b/drivers/net/Space.c
@@ -349,22 +349,11 @@ static void __init trif_probe2(int unit)
 #endif
 
 
-/*
- *	The loopback device is global so it can be directly referenced
- *	by the network code. Also, it must be first on device list.
- */
-extern int loopback_init(void);
-
 /*  Statically configured drivers -- order matters here. */
 static int __init net_olddevs_init(void)
 {
 	int num;
 
-	if (loopback_init()) {
-		printk(KERN_ERR "Network loopback device setup failed\n");
-	}
-
-
 #ifdef CONFIG_SBNI
 	for (num = 0; num < 8; ++num)
 		sbni_probe(num);

commit 90833aa4f496d69ca374af6acef7d1614c8693ff
Author: Adrian Bunk <bunk@stusta.de>
Date:   Mon Nov 13 16:02:22 2006 -0800

    [NET]: The scheduled removal of the frame diverter.
    
    This patch contains the scheduled removal of the frame diverter.
    
    Signed-off-by: Adrian Bunk <bunk@stusta.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
index a67f5efc983f..602ed31a5dd9 100644
--- a/drivers/net/Space.c
+++ b/drivers/net/Space.c
@@ -33,7 +33,6 @@
 #include <linux/errno.h>
 #include <linux/init.h>
 #include <linux/netlink.h>
-#include <linux/divert.h>
 
 /* A unified ethernet device probe.  This is the easiest way to have every
    ethernet adaptor have the name "eth[0123...]".

commit 7525d4bf991879f489c59988cbf162558b9d6489
Author: Jeff Garzik <jeff@garzik.org>
Date:   Mon Oct 2 21:08:22 2006 -0400

    [PATCH] hp100: fix conditional compilation mess
    
    The previous hp100 changeset attempted to kill warnings, but was only
    tested on !CONFIG_ISA platforms.  The correct conditional compilation
    setup involves tested CONFIG_ISA rather than just MODULE.
    
    Fixes link on CONFIG_ISA platforms (i386) in current -git.
    
    Signed-off-by: Jeff Garzik <jeff@garzik.org>
    Signed-off-by: Linus Torvalds <torvalds@osdl.org>

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
index 9953201c670d..a67f5efc983f 100644
--- a/drivers/net/Space.c
+++ b/drivers/net/Space.c
@@ -165,7 +165,7 @@ static struct devprobe2 mca_probes[] __initdata = {
  * look for EISA/PCI/MCA cards in addition to ISA cards).
  */
 static struct devprobe2 isa_probes[] __initdata = {
-#ifdef CONFIG_HP100 		/* ISA, EISA & PCI */
+#if defined(CONFIG_HP100) && defined(CONFIG_ISA)	/* ISA, EISA */
 	{hp100_probe, 0},
 #endif
 #ifdef CONFIG_3C515

commit 6aa20a2235535605db6d6d2bd850298b2fe7f31e
Author: Jeff Garzik <jeff@garzik.org>
Date:   Wed Sep 13 13:24:59 2006 -0400

    drivers/net: Trim trailing whitespace
    
    Signed-off-by: Jeff Garzik <jeff@garzik.org>

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
index a8c245a82261..9953201c670d 100644
--- a/drivers/net/Space.c
+++ b/drivers/net/Space.c
@@ -18,7 +18,7 @@
  *		- struct init cleanup, enable multiple ISA autoprobes.
  *		Arnaldo Carvalho de Melo <acme@conectiva.com.br> - 09/1999
  *		- fix sbni: s/device/net_device/
- *		Paul Gortmaker (06/98): 
+ *		Paul Gortmaker (06/98):
  *		 - sort probes in a sane way, make sure all (safe) probes
  *		   get run once & failed autoprobes don't autoprobe again.
  *
@@ -91,7 +91,7 @@ extern struct net_device *mac89x0_probe(int unit);
 extern struct net_device *mc32_probe(int unit);
 extern struct net_device *cops_probe(int unit);
 extern struct net_device *ltpc_probe(void);
-  
+
 /* Detachable devices ("pocket adaptors") */
 extern struct net_device *de620_probe(int unit);
 
@@ -129,10 +129,10 @@ static int __init probe_list2(int unit, struct devprobe2 *p, int autoprobe)
  */
 
 static struct devprobe2 eisa_probes[] __initdata = {
-#ifdef CONFIG_ULTRA32 
-	{ultra32_probe, 0},	
+#ifdef CONFIG_ULTRA32
+	{ultra32_probe, 0},
 #endif
-#ifdef CONFIG_AC3200	
+#ifdef CONFIG_AC3200
 	{ac3200_probe, 0},
 #endif
 #ifdef CONFIG_ES3210
@@ -167,14 +167,14 @@ static struct devprobe2 mca_probes[] __initdata = {
 static struct devprobe2 isa_probes[] __initdata = {
 #ifdef CONFIG_HP100 		/* ISA, EISA & PCI */
 	{hp100_probe, 0},
-#endif	
+#endif
 #ifdef CONFIG_3C515
 	{tc515_probe, 0},
 #endif
-#ifdef CONFIG_ULTRA 
+#ifdef CONFIG_ULTRA
 	{ultra_probe, 0},
 #endif
-#ifdef CONFIG_WD80x3 
+#ifdef CONFIG_WD80x3
 	{wd_probe, 0},
 #endif
 #ifdef CONFIG_EL2 		/* 3c503 */
@@ -199,7 +199,7 @@ static struct devprobe2 isa_probes[] __initdata = {
 #ifdef CONFIG_SMC9194
 	{smc_init, 0},
 #endif
-#ifdef CONFIG_SEEQ8005 
+#ifdef CONFIG_SEEQ8005
 	{seeq8005_probe, 0},
 #endif
 #ifdef CONFIG_CS89x0
@@ -295,7 +295,7 @@ static struct devprobe2 m68k_probes[] __initdata = {
  * Unified ethernet device probe, segmented per architecture and
  * per bus interface. This drives the legacy devices only for now.
  */
- 
+
 static void __init ethif_probe2(int unit)
 {
 	unsigned long base_addr = netdev_boot_base("eth", unit);
@@ -349,7 +349,7 @@ static void __init trif_probe2(int unit)
 }
 #endif
 
-	
+
 /*
  *	The loopback device is global so it can be directly referenced
  *	by the network code. Also, it must be first on device list.
@@ -365,7 +365,7 @@ static int __init net_olddevs_init(void)
 		printk(KERN_ERR "Network loopback device setup failed\n");
 	}
 
-	
+
 #ifdef CONFIG_SBNI
 	for (num = 0; num < 8; ++num)
 		sbni_probe(num);

commit 6ab3d5624e172c553004ecc862bfeac16d9d68b7
Author: Jörn Engel <joern@wohnheim.fh-wedel.de>
Date:   Fri Jun 30 19:25:36 2006 +0200

    Remove obsolete #include <linux/config.h>
    
    Signed-off-by: Jörn Engel <joern@wohnheim.fh-wedel.de>
    Signed-off-by: Adrian Bunk <bunk@stusta.de>

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
index 60304f7e7e5b..a8c245a82261 100644
--- a/drivers/net/Space.c
+++ b/drivers/net/Space.c
@@ -27,7 +27,6 @@
  *		as published by the Free Software Foundation; either version
  *		2 of the License, or (at your option) any later version.
  */
-#include <linux/config.h>
 #include <linux/netdevice.h>
 #include <linux/etherdevice.h>
 #include <linux/trdevice.h>

commit efcce839360fb3a7b6dedeacaec80f68b0f2d052
Author: Finn Thain <fthain@telegraphics.com.au>
Date:   Sat Aug 20 15:53:22 2005 +1000

    [PATCH] macsonic/jazzsonic network drivers update
    
    The purpose of this patch:
    
    - Adopt the DMA API (jazzsonic, macsonic & core driver).
    
    - Adopt the driver model (macsonic).
    
    This part was cribbed from jazzsonic. As a consequence, macsonic once
    again works as a module. Driver model is also used by the DMA calls.
    
    - Support 16 bit cards (macsonic & core driver, also affects jazzsonic)
    
    This code was adapted from the mac68k linux 2.2 kernel, where it has
    languished for a long time.
    
    - Support more 32-bit mac cards (macsonic)
    
    Also from mac68k repo.
    
    - Zero-copy buffer handling (core driver)
    
    Provides a nice performance improvement. The new algorithm incidentally
    helped to replace the old Jazz DMA code.
    
    The patch was tested on a variety of macs (several 32-bit quadra built-in
    NICs, a 16-bit LC PDS NIC and a 16-bit comm-slot NIC), and also on MIPS
    Jazz.
    
    Signed-off-by: Finn Thain <fthain@telegraphics.com.au>
    Acked-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Jeff Garzik <jgarzik@pobox.com>

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
index b28e5fde0b9e..60304f7e7e5b 100644
--- a/drivers/net/Space.c
+++ b/drivers/net/Space.c
@@ -87,7 +87,6 @@ extern struct net_device *mvme147lance_probe(int unit);
 extern struct net_device *tc515_probe(int unit);
 extern struct net_device *lance_probe(int unit);
 extern struct net_device *mace_probe(int unit);
-extern struct net_device *macsonic_probe(int unit);
 extern struct net_device *mac8390_probe(int unit);
 extern struct net_device *mac89x0_probe(int unit);
 extern struct net_device *mc32_probe(int unit);
@@ -284,9 +283,6 @@ static struct devprobe2 m68k_probes[] __initdata = {
 #ifdef CONFIG_MACMACE		/* Mac 68k Quadra AV builtin Ethernet */
 	{mace_probe, 0},
 #endif
-#ifdef CONFIG_MACSONIC		/* Mac SONIC-based Ethernet of all sorts */ 
-	{macsonic_probe, 0},
-#endif
 #ifdef CONFIG_MAC8390           /* NuBus NS8390-based cards */
 	{mac8390_probe, 0},
 #endif

commit 3d52365c4f62edb9ff9710e1c57952e957b2879f
Author: Jochen Friedrich <jochen@scram.de>
Date:   Fri Aug 19 15:51:46 2005 +0200

    [PATCH] tms380tr: remove prototypes in Space.c
    
    Cleanup: remove two prototypes.
    
    Signed-off-by: Jochen Friedrich <jochen@scram.de>
    Signed-off-by: Jeff Garzik <jgarzik@pobox.com>

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
index 11c44becc08f..b28e5fde0b9e 100644
--- a/drivers/net/Space.c
+++ b/drivers/net/Space.c
@@ -318,8 +318,6 @@ static void __init ethif_probe2(int unit)
 #ifdef CONFIG_TR
 /* Token-ring device probe */
 extern int ibmtr_probe_card(struct net_device *);
-extern struct net_device *sk_isa_probe(int unit);
-extern struct net_device *proteon_probe(int unit);
 extern struct net_device *smctr_probe(int unit);
 
 static struct devprobe2 tr_probes2[] __initdata = {

commit 504ff16cecf2a788181eddc9d6e47d94ce50a9f6
Author: Jochen Friedrich <jochen@scram.de>
Date:   Wed Jul 27 01:14:50 2005 -0700

    [PATCH] tms380tr: move to DMA API
    
    This patch makes tms380tr use the new DMA API.  Now that on Alpha, this API
    also supports bus master DMA for ISA (platform) devices, i changed the
    driver to use this new API.
    
    This also works around a bug in the firmware loader: The example provided
    in Documentation/firmware_class no longer works, as the firmware loader now
    calls get_kobj_path_length() and the kernel promptly oopses, as the
    home-grown device doesn't have a parent.  Of course, this doesn't happen
    with a "real" device which has its bus (or pseudo bus in the case of
    platform) as parent.
    
    Converted tms380tr to use new DMA API:
      - proteon.c, skisa.c: use platform pseudo bus to create a struct device
      - Space.c: delete init hooks
      - abyss.c, tmspci.c: pass struct device to tms380tr.c
      - tms380tr.c, tms380tr.h: new DMA API, use real device fo firmware loader
    
    Signed-off-by: Jochen Friedrich <jochen@scram.de>
    Cc: Jeff Garzik <jgarzik@pobox.com>
    Signed-off-by: Andrew Morton <akpm@osdl.org>
    Signed-off-by: Jeff Garzik <jgarzik@pobox.com>

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
index 3707df6b0cfa..11c44becc08f 100644
--- a/drivers/net/Space.c
+++ b/drivers/net/Space.c
@@ -323,12 +323,6 @@ extern struct net_device *proteon_probe(int unit);
 extern struct net_device *smctr_probe(int unit);
 
 static struct devprobe2 tr_probes2[] __initdata = {
-#ifdef CONFIG_SKISA
-	{sk_isa_probe, 0},
-#endif
-#ifdef CONFIG_PROTEON
-	{proteon_probe, 0},
-#endif
 #ifdef CONFIG_SMCTR
 	{smctr_probe, 0},
 #endif

commit 5aa83a4c0a1568257ff7e249d39af64f75978b97
Author: Adrian Bunk <bunk@stusta.de>
Date:   Thu May 12 22:27:35 2005 -0400

      [PATCH] remove two obsolete net drivers
    
      The options FMV18X and SK_G16 do depend on the non-available
      CONFIG_OBSOLETE even in kernel 2.4 - IOW, the last time it was able to
      select them was in kernel 2.2 (or even before).
    
      Since it seems noone misses these drivers, this patch removes them.
    
      Signed-off-by: Adrian Bunk <bunk@stusta.de>
      Signed-off-by: Jeff Garzik <jgarzik@pobox.com>

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
index fb433325aa27..3707df6b0cfa 100644
--- a/drivers/net/Space.c
+++ b/drivers/net/Space.c
@@ -210,9 +210,6 @@ static struct devprobe2 isa_probes[] __initdata = {
 #ifdef CONFIG_AT1700
 	{at1700_probe, 0},
 #endif
-#ifdef CONFIG_FMV18X		/* Fujitsu FMV-181/182 */
-	{fmv18x_probe, 0},
-#endif
 #ifdef CONFIG_ETH16I
 	{eth16i_probe, 0},	/* ICL EtherTeam 16i/32 */
 #endif
@@ -243,9 +240,6 @@ static struct devprobe2 isa_probes[] __initdata = {
 #ifdef CONFIG_ELPLUS		/* 3c505 */
 	{elplus_probe, 0},
 #endif
-#ifdef CONFIG_SK_G16
-	{SK_init, 0},
-#endif
 #ifdef CONFIG_NI5010
 	{ni5010_probe, 0},
 #endif

commit 02c30a84e6298b6b20a56f0896ac80b47839e134
Author: Jesper Juhl <juhl-lkml@dif.dk>
Date:   Thu May 5 16:16:16 2005 -0700

    [PATCH] update Ross Biro bouncing email address
    
    Ross moved.  Remove the bad email address so people will find the correct
    one in ./CREDITS.
    
    Signed-off-by: Jesper Juhl <juhl-lkml@dif.dk>
    Signed-off-by: Andrew Morton <akpm@osdl.org>
    Signed-off-by: Linus Torvalds <torvalds@osdl.org>

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
index fc519377b5aa..fb433325aa27 100644
--- a/drivers/net/Space.c
+++ b/drivers/net/Space.c
@@ -7,7 +7,7 @@
  *
  * Version:	@(#)Space.c	1.0.7	08/12/93
  *
- * Authors:	Ross Biro, <bir7@leland.Stanford.Edu>
+ * Authors:	Ross Biro
  *		Fred N. van Kempen, <waltje@uWalt.NL.Mugnet.ORG>
  *		Donald J. Becker, <becker@scyld.com>
  *

commit 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2
Author: Linus Torvalds <torvalds@ppc970.osdl.org>
Date:   Sat Apr 16 15:20:36 2005 -0700

    Linux-2.6.12-rc2
    
    Initial git repository build. I'm not bothering with the full history,
    even though we have it. We can create a separate "historical" git
    archive of that later if we want to, and in the meantime it's about
    3.2GB when imported into git - space that would just make the early
    git days unnecessarily complicated, when we don't have a lot of good
    infrastructure for it.
    
    Let it rip!

diff --git a/drivers/net/Space.c b/drivers/net/Space.c
new file mode 100644
index 000000000000..fc519377b5aa
--- /dev/null
+++ b/drivers/net/Space.c
@@ -0,0 +1,412 @@
+/*
+ * INET		An implementation of the TCP/IP protocol suite for the LINUX
+ *		operating system.  INET is implemented using the  BSD Socket
+ *		interface as the means of communication with the user level.
+ *
+ *		Holds initial configuration information for devices.
+ *
+ * Version:	@(#)Space.c	1.0.7	08/12/93
+ *
+ * Authors:	Ross Biro, <bir7@leland.Stanford.Edu>
+ *		Fred N. van Kempen, <waltje@uWalt.NL.Mugnet.ORG>
+ *		Donald J. Becker, <becker@scyld.com>
+ *
+ * Changelog:
+ *		Stephen Hemminger (09/2003)
+ *		- get rid of pre-linked dev list, dynamic device allocation
+ *		Paul Gortmaker (03/2002)
+ *		- struct init cleanup, enable multiple ISA autoprobes.
+ *		Arnaldo Carvalho de Melo <acme@conectiva.com.br> - 09/1999
+ *		- fix sbni: s/device/net_device/
+ *		Paul Gortmaker (06/98): 
+ *		 - sort probes in a sane way, make sure all (safe) probes
+ *		   get run once & failed autoprobes don't autoprobe again.
+ *
+ *		This program is free software; you can redistribute it and/or
+ *		modify it under the terms of the GNU General Public License
+ *		as published by the Free Software Foundation; either version
+ *		2 of the License, or (at your option) any later version.
+ */
+#include <linux/config.h>
+#include <linux/netdevice.h>
+#include <linux/etherdevice.h>
+#include <linux/trdevice.h>
+#include <linux/errno.h>
+#include <linux/init.h>
+#include <linux/netlink.h>
+#include <linux/divert.h>
+
+/* A unified ethernet device probe.  This is the easiest way to have every
+   ethernet adaptor have the name "eth[0123...]".
+   */
+
+extern struct net_device *ne2_probe(int unit);
+extern struct net_device *hp100_probe(int unit);
+extern struct net_device *ultra_probe(int unit);
+extern struct net_device *ultra32_probe(int unit);
+extern struct net_device *wd_probe(int unit);
+extern struct net_device *el2_probe(int unit);
+extern struct net_device *ne_probe(int unit);
+extern struct net_device *hp_probe(int unit);
+extern struct net_device *hp_plus_probe(int unit);
+extern struct net_device *express_probe(int unit);
+extern struct net_device *eepro_probe(int unit);
+extern struct net_device *at1700_probe(int unit);
+extern struct net_device *fmv18x_probe(int unit);
+extern struct net_device *eth16i_probe(int unit);
+extern struct net_device *i82596_probe(int unit);
+extern struct net_device *ewrk3_probe(int unit);
+extern struct net_device *el1_probe(int unit);
+extern struct net_device *wavelan_probe(int unit);
+extern struct net_device *arlan_probe(int unit);
+extern struct net_device *el16_probe(int unit);
+extern struct net_device *elmc_probe(int unit);
+extern struct net_device *skmca_probe(int unit);
+extern struct net_device *elplus_probe(int unit);
+extern struct net_device *ac3200_probe(int unit);
+extern struct net_device *es_probe(int unit);
+extern struct net_device *lne390_probe(int unit);
+extern struct net_device *e2100_probe(int unit);
+extern struct net_device *ni5010_probe(int unit);
+extern struct net_device *ni52_probe(int unit);
+extern struct net_device *ni65_probe(int unit);
+extern struct net_device *sonic_probe(int unit);
+extern struct net_device *SK_init(int unit);
+extern struct net_device *seeq8005_probe(int unit);
+extern struct net_device *smc_init(int unit);
+extern struct net_device *atarilance_probe(int unit);
+extern struct net_device *sun3lance_probe(int unit);
+extern struct net_device *sun3_82586_probe(int unit);
+extern struct net_device *apne_probe(int unit);
+extern struct net_device *bionet_probe(int unit);
+extern struct net_device *pamsnet_probe(int unit);
+extern struct net_device *cs89x0_probe(int unit);
+extern struct net_device *hplance_probe(int unit);
+extern struct net_device *bagetlance_probe(int unit);
+extern struct net_device *mvme147lance_probe(int unit);
+extern struct net_device *tc515_probe(int unit);
+extern struct net_device *lance_probe(int unit);
+extern struct net_device *mace_probe(int unit);
+extern struct net_device *macsonic_probe(int unit);
+extern struct net_device *mac8390_probe(int unit);
+extern struct net_device *mac89x0_probe(int unit);
+extern struct net_device *mc32_probe(int unit);
+extern struct net_device *cops_probe(int unit);
+extern struct net_device *ltpc_probe(void);
+  
+/* Detachable devices ("pocket adaptors") */
+extern struct net_device *de620_probe(int unit);
+
+/* Fibre Channel adapters */
+extern int iph5526_probe(struct net_device *dev);
+
+/* SBNI adapters */
+extern int sbni_probe(int unit);
+
+struct devprobe2 {
+	struct net_device *(*probe)(int unit);
+	int status;	/* non-zero if autoprobe has failed */
+};
+
+static int __init probe_list2(int unit, struct devprobe2 *p, int autoprobe)
+{
+	struct net_device *dev;
+	for (; p->probe; p++) {
+		if (autoprobe && p->status)
+			continue;
+		dev = p->probe(unit);
+		if (!IS_ERR(dev))
+			return 0;
+		if (autoprobe)
+			p->status = PTR_ERR(dev);
+	}
+	return -ENODEV;
+}
+
+/*
+ * This is a bit of an artificial separation as there are PCI drivers
+ * that also probe for EISA cards (in the PCI group) and there are ISA
+ * drivers that probe for EISA cards (in the ISA group).  These are the
+ * legacy EISA only driver probes, and also the legacy PCI probes
+ */
+
+static struct devprobe2 eisa_probes[] __initdata = {
+#ifdef CONFIG_ULTRA32 
+	{ultra32_probe, 0},	
+#endif
+#ifdef CONFIG_AC3200	
+	{ac3200_probe, 0},
+#endif
+#ifdef CONFIG_ES3210
+	{es_probe, 0},
+#endif
+#ifdef CONFIG_LNE390
+	{lne390_probe, 0},
+#endif
+	{NULL, 0},
+};
+
+static struct devprobe2 mca_probes[] __initdata = {
+#ifdef CONFIG_NE2_MCA
+	{ne2_probe, 0},
+#endif
+#ifdef CONFIG_ELMC		/* 3c523 */
+	{elmc_probe, 0},
+#endif
+#ifdef CONFIG_ELMC_II		/* 3c527 */
+	{mc32_probe, 0},
+#endif
+#ifdef CONFIG_SKMC              /* SKnet Microchannel */
+        {skmca_probe, 0},
+#endif
+	{NULL, 0},
+};
+
+/*
+ * ISA probes that touch addresses < 0x400 (including those that also
+ * look for EISA/PCI/MCA cards in addition to ISA cards).
+ */
+static struct devprobe2 isa_probes[] __initdata = {
+#ifdef CONFIG_HP100 		/* ISA, EISA & PCI */
+	{hp100_probe, 0},
+#endif	
+#ifdef CONFIG_3C515
+	{tc515_probe, 0},
+#endif
+#ifdef CONFIG_ULTRA 
+	{ultra_probe, 0},
+#endif
+#ifdef CONFIG_WD80x3 
+	{wd_probe, 0},
+#endif
+#ifdef CONFIG_EL2 		/* 3c503 */
+	{el2_probe, 0},
+#endif
+#ifdef CONFIG_HPLAN
+	{hp_probe, 0},
+#endif
+#ifdef CONFIG_HPLAN_PLUS
+	{hp_plus_probe, 0},
+#endif
+#ifdef CONFIG_E2100		/* Cabletron E21xx series. */
+	{e2100_probe, 0},
+#endif
+#if defined(CONFIG_NE2000) || \
+    defined(CONFIG_NE_H8300)  /* ISA (use ne2k-pci for PCI cards) */
+	{ne_probe, 0},
+#endif
+#ifdef CONFIG_LANCE		/* ISA/VLB (use pcnet32 for PCI cards) */
+	{lance_probe, 0},
+#endif
+#ifdef CONFIG_SMC9194
+	{smc_init, 0},
+#endif
+#ifdef CONFIG_SEEQ8005 
+	{seeq8005_probe, 0},
+#endif
+#ifdef CONFIG_CS89x0
+ 	{cs89x0_probe, 0},
+#endif
+#ifdef CONFIG_AT1700
+	{at1700_probe, 0},
+#endif
+#ifdef CONFIG_FMV18X		/* Fujitsu FMV-181/182 */
+	{fmv18x_probe, 0},
+#endif
+#ifdef CONFIG_ETH16I
+	{eth16i_probe, 0},	/* ICL EtherTeam 16i/32 */
+#endif
+#ifdef CONFIG_EEXPRESS		/* Intel EtherExpress */
+	{express_probe, 0},
+#endif
+#ifdef CONFIG_EEXPRESS_PRO	/* Intel EtherExpress Pro/10 */
+	{eepro_probe, 0},
+#endif
+#ifdef CONFIG_EWRK3             /* DEC EtherWORKS 3 */
+    	{ewrk3_probe, 0},
+#endif
+#if defined(CONFIG_APRICOT) || defined(CONFIG_MVME16x_NET) || defined(CONFIG_BVME6000_NET)	/* Intel I82596 */
+	{i82596_probe, 0},
+#endif
+#ifdef CONFIG_EL1		/* 3c501 */
+	{el1_probe, 0},
+#endif
+#ifdef CONFIG_WAVELAN		/* WaveLAN */
+	{wavelan_probe, 0},
+#endif
+#ifdef CONFIG_ARLAN		/* Aironet */
+	{arlan_probe, 0},
+#endif
+#ifdef CONFIG_EL16		/* 3c507 */
+	{el16_probe, 0},
+#endif
+#ifdef CONFIG_ELPLUS		/* 3c505 */
+	{elplus_probe, 0},
+#endif
+#ifdef CONFIG_SK_G16
+	{SK_init, 0},
+#endif
+#ifdef CONFIG_NI5010
+	{ni5010_probe, 0},
+#endif
+#ifdef CONFIG_NI52
+	{ni52_probe, 0},
+#endif
+#ifdef CONFIG_NI65
+	{ni65_probe, 0},
+#endif
+	{NULL, 0},
+};
+
+static struct devprobe2 parport_probes[] __initdata = {
+#ifdef CONFIG_DE620		/* D-Link DE-620 adapter */
+	{de620_probe, 0},
+#endif
+	{NULL, 0},
+};
+
+static struct devprobe2 m68k_probes[] __initdata = {
+#ifdef CONFIG_ATARILANCE	/* Lance-based Atari ethernet boards */
+	{atarilance_probe, 0},
+#endif
+#ifdef CONFIG_SUN3LANCE         /* sun3 onboard Lance chip */
+	{sun3lance_probe, 0},
+#endif
+#ifdef CONFIG_SUN3_82586        /* sun3 onboard Intel 82586 chip */
+	{sun3_82586_probe, 0},
+#endif
+#ifdef CONFIG_APNE		/* A1200 PCMCIA NE2000 */
+	{apne_probe, 0},
+#endif
+#ifdef CONFIG_ATARI_BIONET	/* Atari Bionet Ethernet board */
+	{bionet_probe, 0},
+#endif
+#ifdef CONFIG_ATARI_PAMSNET	/* Atari PAMsNet Ethernet board */
+	{pamsnet_probe, 0},
+#endif
+#ifdef CONFIG_MVME147_NET	/* MVME147 internal Ethernet */
+	{mvme147lance_probe, 0},
+#endif
+#ifdef CONFIG_MACMACE		/* Mac 68k Quadra AV builtin Ethernet */
+	{mace_probe, 0},
+#endif
+#ifdef CONFIG_MACSONIC		/* Mac SONIC-based Ethernet of all sorts */ 
+	{macsonic_probe, 0},
+#endif
+#ifdef CONFIG_MAC8390           /* NuBus NS8390-based cards */
+	{mac8390_probe, 0},
+#endif
+#ifdef CONFIG_MAC89x0
+ 	{mac89x0_probe, 0},
+#endif
+	{NULL, 0},
+};
+
+/*
+ * Unified ethernet device probe, segmented per architecture and
+ * per bus interface. This drives the legacy devices only for now.
+ */
+ 
+static void __init ethif_probe2(int unit)
+{
+	unsigned long base_addr = netdev_boot_base("eth", unit);
+
+	if (base_addr == 1)
+		return;
+
+	(void)(	probe_list2(unit, m68k_probes, base_addr == 0) &&
+		probe_list2(unit, eisa_probes, base_addr == 0) &&
+		probe_list2(unit, mca_probes, base_addr == 0) &&
+		probe_list2(unit, isa_probes, base_addr == 0) &&
+		probe_list2(unit, parport_probes, base_addr == 0));
+}
+
+#ifdef CONFIG_TR
+/* Token-ring device probe */
+extern int ibmtr_probe_card(struct net_device *);
+extern struct net_device *sk_isa_probe(int unit);
+extern struct net_device *proteon_probe(int unit);
+extern struct net_device *smctr_probe(int unit);
+
+static struct devprobe2 tr_probes2[] __initdata = {
+#ifdef CONFIG_SKISA
+	{sk_isa_probe, 0},
+#endif
+#ifdef CONFIG_PROTEON
+	{proteon_probe, 0},
+#endif
+#ifdef CONFIG_SMCTR
+	{smctr_probe, 0},
+#endif
+	{NULL, 0},
+};
+
+static __init int trif_probe(int unit)
+{
+	int err = -ENODEV;
+#ifdef CONFIG_IBMTR
+	struct net_device *dev = alloc_trdev(0);
+	if (!dev)
+		return -ENOMEM;
+
+	sprintf(dev->name, "tr%d", unit);
+	netdev_boot_setup_check(dev);
+	err = ibmtr_probe_card(dev);
+	if (err)
+		free_netdev(dev);
+#endif
+	return err;
+}
+
+static void __init trif_probe2(int unit)
+{
+	unsigned long base_addr = netdev_boot_base("tr", unit);
+
+	if (base_addr == 1)
+		return;
+	probe_list2(unit, tr_probes2, base_addr == 0);
+}
+#endif
+
+	
+/*
+ *	The loopback device is global so it can be directly referenced
+ *	by the network code. Also, it must be first on device list.
+ */
+extern int loopback_init(void);
+
+/*  Statically configured drivers -- order matters here. */
+static int __init net_olddevs_init(void)
+{
+	int num;
+
+	if (loopback_init()) {
+		printk(KERN_ERR "Network loopback device setup failed\n");
+	}
+
+	
+#ifdef CONFIG_SBNI
+	for (num = 0; num < 8; ++num)
+		sbni_probe(num);
+#endif
+#ifdef CONFIG_TR
+	for (num = 0; num < 8; ++num)
+		if (!trif_probe(num))
+			trif_probe2(num);
+#endif
+	for (num = 0; num < 8; ++num)
+		ethif_probe2(num);
+
+#ifdef CONFIG_COPS
+	cops_probe(0);
+	cops_probe(1);
+	cops_probe(2);
+#endif
+#ifdef CONFIG_LTPC
+	ltpc_probe();
+#endif
+
+	return 0;
+}
+
+device_initcall(net_olddevs_init);
