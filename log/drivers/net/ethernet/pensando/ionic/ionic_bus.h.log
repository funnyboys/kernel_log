commit 1d062b7b6f6408fd43f447f90338cfade4168170
Author: Shannon Nelson <snelson@pensando.io>
Date:   Tue Sep 3 15:28:09 2019 -0700

    ionic: Add basic adminq support
    
    Most of the NIC configuration happens through the AdminQ message
    queue.  NAPI is used for basic interrupt handling and message
    queue management.  These routines are set up to be shared among
    different types of queues when used in slow-path handling.
    
    Signed-off-by: Shannon Nelson <snelson@pensando.io>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/ethernet/pensando/ionic/ionic_bus.h b/drivers/net/ethernet/pensando/ionic/ionic_bus.h
index 6b29e94f81d6..2f4d08c64910 100644
--- a/drivers/net/ethernet/pensando/ionic/ionic_bus.h
+++ b/drivers/net/ethernet/pensando/ionic/ionic_bus.h
@@ -4,6 +4,7 @@
 #ifndef _IONIC_BUS_H_
 #define _IONIC_BUS_H_
 
+int ionic_bus_get_irq(struct ionic *ionic, unsigned int num);
 const char *ionic_bus_info(struct ionic *ionic);
 int ionic_bus_alloc_irq_vectors(struct ionic *ionic, unsigned int nintrs);
 void ionic_bus_free_irq_vectors(struct ionic *ionic);

commit 6461b446f2a0f40c038f1d09c69d1e5565a84a43
Author: Shannon Nelson <snelson@pensando.io>
Date:   Tue Sep 3 15:28:08 2019 -0700

    ionic: Add interrupts and doorbells
    
    The ionic interrupt model is based on interrupt control blocks
    accessed through the PCI BAR.  Doorbell registers are used by
    the driver to signal to the NIC that requests are waiting on
    the message queues.  Interrupts are used by the NIC to signal
    to the driver that answers are waiting on the completion queues.
    
    Signed-off-by: Shannon Nelson <snelson@pensando.io>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/ethernet/pensando/ionic/ionic_bus.h b/drivers/net/ethernet/pensando/ionic/ionic_bus.h
index 3b1e2d0ebf8f..6b29e94f81d6 100644
--- a/drivers/net/ethernet/pensando/ionic/ionic_bus.h
+++ b/drivers/net/ethernet/pensando/ionic/ionic_bus.h
@@ -9,5 +9,7 @@ int ionic_bus_alloc_irq_vectors(struct ionic *ionic, unsigned int nintrs);
 void ionic_bus_free_irq_vectors(struct ionic *ionic);
 int ionic_bus_register_driver(void);
 void ionic_bus_unregister_driver(void);
+void __iomem *ionic_bus_map_dbpage(struct ionic *ionic, int page_num);
+void ionic_bus_unmap_dbpage(struct ionic *ionic, void __iomem *page);
 
 #endif /* _IONIC_BUS_H_ */

commit 1a58e196467f842a40ff3ecfe818ebf7604e04a6
Author: Shannon Nelson <snelson@pensando.io>
Date:   Tue Sep 3 15:28:07 2019 -0700

    ionic: Add basic lif support
    
    The LIF is the Logical Interface, which represents the external
    connections.  The NIC can multiplex many LIFs to a single port,
    but in most setups, LIF0 is the primary control for the port.
    
    Signed-off-by: Shannon Nelson <snelson@pensando.io>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/ethernet/pensando/ionic/ionic_bus.h b/drivers/net/ethernet/pensando/ionic/ionic_bus.h
index 24b4c01ec03f..3b1e2d0ebf8f 100644
--- a/drivers/net/ethernet/pensando/ionic/ionic_bus.h
+++ b/drivers/net/ethernet/pensando/ionic/ionic_bus.h
@@ -5,6 +5,8 @@
 #define _IONIC_BUS_H_
 
 const char *ionic_bus_info(struct ionic *ionic);
+int ionic_bus_alloc_irq_vectors(struct ionic *ionic, unsigned int nintrs);
+void ionic_bus_free_irq_vectors(struct ionic *ionic);
 int ionic_bus_register_driver(void);
 void ionic_bus_unregister_driver(void);
 

commit fbfb8031533c924c2f3fef73759b4cf75a0e6aa7
Author: Shannon Nelson <snelson@pensando.io>
Date:   Tue Sep 3 15:28:05 2019 -0700

    ionic: Add hardware init and device commands
    
    The ionic device has a small set of PCI registers, including a
    device control and data space, and a large set of message
    commands.
    
    Also adds new DEVLINK_INFO_VERSION_GENERIC tags for
    ASIC_ID, ASIC_REV, and FW.
    
    Signed-off-by: Shannon Nelson <snelson@pensando.io>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/ethernet/pensando/ionic/ionic_bus.h b/drivers/net/ethernet/pensando/ionic/ionic_bus.h
index 94ba0afc6f38..24b4c01ec03f 100644
--- a/drivers/net/ethernet/pensando/ionic/ionic_bus.h
+++ b/drivers/net/ethernet/pensando/ionic/ionic_bus.h
@@ -4,6 +4,7 @@
 #ifndef _IONIC_BUS_H_
 #define _IONIC_BUS_H_
 
+const char *ionic_bus_info(struct ionic *ionic);
 int ionic_bus_register_driver(void);
 void ionic_bus_unregister_driver(void);
 

commit df69ba43217d3cf4215c83c0627ce98a26e56e7c
Author: Shannon Nelson <snelson@pensando.io>
Date:   Tue Sep 3 15:28:04 2019 -0700

    ionic: Add basic framework for IONIC Network device driver
    
    This patch adds a basic driver framework for the Pensando IONIC
    network device.  There is no functionality right now other than
    the ability to load and unload.
    
    Signed-off-by: Shannon Nelson <snelson@pensando.io>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/ethernet/pensando/ionic/ionic_bus.h b/drivers/net/ethernet/pensando/ionic/ionic_bus.h
new file mode 100644
index 000000000000..94ba0afc6f38
--- /dev/null
+++ b/drivers/net/ethernet/pensando/ionic/ionic_bus.h
@@ -0,0 +1,10 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+/* Copyright(c) 2017 - 2019 Pensando Systems, Inc */
+
+#ifndef _IONIC_BUS_H_
+#define _IONIC_BUS_H_
+
+int ionic_bus_register_driver(void);
+void ionic_bus_unregister_driver(void);
+
+#endif /* _IONIC_BUS_H_ */
