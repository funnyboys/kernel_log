commit 9fb16955fb661945ddffce4504dcffbe55cd518a
Merge: 1f074e677a34 1b649e0bcae7
Author: David S. Miller <davem@davemloft.net>
Date:   Wed Mar 25 18:58:11 2020 -0700

    Merge git://git.kernel.org/pub/scm/linux/kernel/git/netdev/net
    
    Overlapping header include additions in macsec.c
    
    A bug fix in 'net' overlapping with the removal of 'version'
    string in ena_netdev.c
    
    Overlapping test additions in selftests Makefile
    
    Overlapping PCI ID table adjustments in iwlwifi driver.
    
    Signed-off-by: David S. Miller <davem@davemloft.net>

commit 187a9830c921d92c4a9a8e2921ecc4b35a97532c
Author: Aya Levin <ayal@mellanox.com>
Date:   Thu Mar 19 13:25:17 2020 +0200

    net/mlx5e: Do not recover from a non-fatal syndrome
    
    For non-fatal syndromes like LOCAL_LENGTH_ERR, recovery shouldn't be
    triggered. In these scenarios, the RQ is not actually in ERR state.
    This misleads the recovery flow which assumes that the RQ is really in
    error state and no more completions arrive, causing crashes on bad page
    state.
    
    Fixes: 8276ea1353a4 ("net/mlx5e: Report and recover from CQE with error on RQ")
    Signed-off-by: Aya Levin <ayal@mellanox.com>
    Reviewed-by: Tariq Toukan <tariqt@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>

diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en/health.h b/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
index d3693fa547ac..e54f70d9af22 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
@@ -10,8 +10,7 @@
 
 static inline bool cqe_syndrome_needs_recover(u8 syndrome)
 {
-	return syndrome == MLX5_CQE_SYNDROME_LOCAL_LENGTH_ERR ||
-	       syndrome == MLX5_CQE_SYNDROME_LOCAL_QP_OP_ERR ||
+	return syndrome == MLX5_CQE_SYNDROME_LOCAL_QP_OP_ERR ||
 	       syndrome == MLX5_CQE_SYNDROME_LOCAL_PROT_ERR ||
 	       syndrome == MLX5_CQE_SYNDROME_WR_FLUSH_ERR;
 }

commit 5f29458b77d51c104554575b73184c243930aa87
Author: Aya Levin <ayal@mellanox.com>
Date:   Tue Feb 11 14:32:45 2020 -0800

    net/mlx5e: Support dump callback in TX reporter
    
    Add support for SQ's FW dump on TX reporter's events. Use Resource dump
    API to retrieve the relevant data: SX slice, SQ dump and SQ buffer. Wrap
    it in formatted messages and store the binary output in devlink core.
    
    Example:
    $ devlink health dump show pci/0000:00:0b.0 reporter tx
    SX Slice:
       data:
         00 00 00 00 00 00 00 80 00 01 00 00 00 00 ad de
         22 01 00 00 00 00 ad de 00 00 00 00 00 00 00 00
         00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
         ff ff ff ff 01 00 00 00 00 00 00 00 00 00 00 00
         00 02 01 00 00 00 00 80 00 01 00 00 00 00 ad de
         22 01 00 00 00 00 ad de 00 20 40 90 81 88 ff ff
         00 00 00 00 00 00 00 00 15 00 15 00 00 00 00 00
         ff ff ff ff 01 00 00 00 00 00 00 00 00 00 00 00
         00 00 00 00 00 00 00 80 81 ae 41 06 00 ea ff ff
      SQs:
        SQ:
          index: 1511
          data:
            00 00 00 00 00 00 00 80 00 01 00 00 00 00 ad de
            22 01 00 00 00 00 ad de 00 00 00 00 00 00 00 00
            00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
            ff ff ff ff 01 00 00 00 00 00 00 00 00 00 00 00
            00 02 01 00 00 00 00 80 00 01 00 00 00 00 ad de
            22 01 00 00 00 00 ad de 00 20 40 90 81 88 ff ff
            00 00 00 00 00 00 00 00 15 00 15 00 00 00 00 00
            ff ff ff ff 01 00 00 00 00 00 00 00 00 00 00 00
            00 00 00 00 00 00 00 80 81 ae 41 06 00 ea ff ff
        SQ:
          index: 1516
          data:
            00 00 00 00 00 00 00 80 00 01 00 00 00 00 ad de
            22 01 00 00 00 00 ad de 00 00 00 00 00 00 00 00
            00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
            ff ff ff ff 01 00 00 00 00 00 00 00 00 00 00 00
            00 02 01 00 00 00 00 80 00 01 00 00 00 00 ad de
            22 01 00 00 00 00 ad de 00 20 40 90 81 88 ff ff
            00 00 00 00 00 00 00 00 15 00 15 00 00 00 00 00
            ff ff ff ff 01 00 00 00 00 00 00 00 00 00 00 00
            00 00 00 00 00 00 00 80 81 ae 41 06 00 ea ff ff
    
    $ devlink health dump show pci/0000:00:0b.0 reporter tx -jp
    {
        "SX Slice": {
            "data": [ 0,0,0,0,0,0,0,128,0,1,0,0,0,0,173,222,34,1,0,0,0,0,173,222,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,1,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,0,128,0,1,0,0,0,0,173,222,34,1,0,0,0,0,173,222,0,32,64,144,129,136,255,255,0,0,0,0,0,0,0,0,21,0,21,0,0,0,0,0,255,255,255,255,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,129,174,65,6,0,234,255,255],
            },
        "SQs": [ {
                "SQ": {
                    "index": 1511,
                    "data": [ 0,0,0,0,0,0,0,128,0,1,0,0,0,0,173,222,34,1,0,0,0,0,173,222,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,1,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,0,128,0,1,0,0,0,0,173,222,34,1,0,0,0,0,173,222,0,32,64,144,129,136,255,255,0,0,0,0,0,0,0,0,21,0,21,0,0,0,0,0,255,255,255,255,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,129,174,65,6,0,234,255,255]
                }
            },{
                "SQ": {
                    "index": 1516,
                    "data": [ 0,0,0,0,0,0,0,128,0,1,0,0,0,0,173,222,34,1,0,0,0,0,173,222,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,1,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,0,128,0,1,0,0,0,0,173,222,34,1,0,0,0,0,173,222,0,32,64,144,129,136,255,255,0,0,0,0,0,0,0,0,21,0,21,0,0,0,0,0,255,255,255,255,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,129,174,65,6,0,234,255,255]
                }
            } ]
    }
    
    Signed-off-by: Aya Levin <ayal@mellanox.com>
    Reviewed-by: Moshe Shemesh <moshe@mellanox.com>
    Acked-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>

diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en/health.h b/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
index d3693fa547ac..e90e3aec422f 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
@@ -5,6 +5,7 @@
 #define __MLX5E_EN_HEALTH_H
 
 #include "en.h"
+#include "diag/rsc_dump.h"
 
 #define MLX5E_RX_ERR_CQE(cqe) (get_cqe_opcode(cqe) != MLX5_CQE_RESP_SEND)
 
@@ -36,6 +37,7 @@ void mlx5e_reporter_rx_timeout(struct mlx5e_rq *rq);
 
 struct mlx5e_err_ctx {
 	int (*recover)(void *ctx);
+	int (*dump)(struct mlx5e_priv *priv, struct devlink_fmsg *fmsg, void *ctx);
 	void *ctx;
 };
 
@@ -48,6 +50,8 @@ int mlx5e_health_report(struct mlx5e_priv *priv,
 int mlx5e_health_create_reporters(struct mlx5e_priv *priv);
 void mlx5e_health_destroy_reporters(struct mlx5e_priv *priv);
 void mlx5e_health_channels_update(struct mlx5e_priv *priv);
-
-
+int mlx5e_health_rsc_fmsg_dump(struct mlx5e_priv *priv, struct mlx5_rsc_key *key,
+			       struct devlink_fmsg *fmsg);
+int mlx5e_health_queue_dump(struct mlx5e_priv *priv, struct devlink_fmsg *fmsg,
+			    int queue_idx, char *lbl);
 #endif

commit 8276ea1353a4968a212f04ddf16659223e5408d9
Author: Aya Levin <ayal@mellanox.com>
Date:   Wed Jun 26 23:21:40 2019 +0300

    net/mlx5e: Report and recover from CQE with error on RQ
    
    Add support for report and recovery from error on completion on RQ by
    setting the queue back to ready state. Handle only errors with a
    syndrome indicating the RQ might enter error state and could be
    recovered.
    
    Signed-off-by: Aya Levin <ayal@mellanox.com>
    Reviewed-by: Tariq Toukan <tariqt@mellanox.com>
    Acked-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>

diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en/health.h b/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
index 52e9ca37cf46..d3693fa547ac 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
@@ -8,6 +8,14 @@
 
 #define MLX5E_RX_ERR_CQE(cqe) (get_cqe_opcode(cqe) != MLX5_CQE_RESP_SEND)
 
+static inline bool cqe_syndrome_needs_recover(u8 syndrome)
+{
+	return syndrome == MLX5_CQE_SYNDROME_LOCAL_LENGTH_ERR ||
+	       syndrome == MLX5_CQE_SYNDROME_LOCAL_QP_OP_ERR ||
+	       syndrome == MLX5_CQE_SYNDROME_LOCAL_PROT_ERR ||
+	       syndrome == MLX5_CQE_SYNDROME_WR_FLUSH_ERR;
+}
+
 int mlx5e_reporter_tx_create(struct mlx5e_priv *priv);
 void mlx5e_reporter_tx_destroy(struct mlx5e_priv *priv);
 void mlx5e_reporter_tx_err_cqe(struct mlx5e_txqsq *sq);
@@ -21,6 +29,7 @@ int mlx5e_reporter_named_obj_nest_end(struct devlink_fmsg *fmsg);
 int mlx5e_reporter_rx_create(struct mlx5e_priv *priv);
 void mlx5e_reporter_rx_destroy(struct mlx5e_priv *priv);
 void mlx5e_reporter_icosq_cqe_err(struct mlx5e_icosq *icosq);
+void mlx5e_reporter_rq_cqe_err(struct mlx5e_rq *rq);
 void mlx5e_reporter_rx_timeout(struct mlx5e_rq *rq);
 
 #define MLX5E_REPORTER_PER_Q_MAX_LEN 256

commit 0a35ab3e138296cfe192628520e4d5f3ff23e730
Author: Saeed Mahameed <saeedm@mellanox.com>
Date:   Fri Jun 14 15:21:15 2019 -0700

    net/mlx5e: RX, Handle CQE with error at the earliest stage
    
    Just to be aligned with the MPWQE handlers, handle RX WQE with error
    for legacy RQs in the top RX handlers, just before calling skb_from_cqe().
    
    CQE error handling will now be called at the same stage regardless of
    the RQ type or netdev mode NIC, Representor, IPoIB, etc ..
    
    This will be useful for down stream patch to improve error CQE
    handling.
    
    Signed-off-by: Aya Levin <ayal@mellanox.com>
    Reviewed-by: Tariq Toukan <tariqt@mellanox.com>
    Acked-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>

diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en/health.h b/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
index b4a2d9be17d6..52e9ca37cf46 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
@@ -6,6 +6,8 @@
 
 #include "en.h"
 
+#define MLX5E_RX_ERR_CQE(cqe) (get_cqe_opcode(cqe) != MLX5_CQE_RESP_SEND)
+
 int mlx5e_reporter_tx_create(struct mlx5e_priv *priv);
 void mlx5e_reporter_tx_destroy(struct mlx5e_priv *priv);
 void mlx5e_reporter_tx_err_cqe(struct mlx5e_txqsq *sq);

commit 32c57fb26863b48982e33aa95f3b5b23f24b1feb
Author: Aya Levin <ayal@mellanox.com>
Date:   Tue Jun 25 21:42:27 2019 +0300

    net/mlx5e: Report and recover from rx timeout
    
    Add support for report and recovery from rx timeout. On driver open we
    post NOP work request on the rx channels to trigger napi in order to
    fillup the rx rings. In case napi wasn't scheduled due to a lost
    interrupt, perform EQ recovery.
    
    Signed-off-by: Aya Levin <ayal@mellanox.com>
    Reviewed-by: Tariq Toukan <tariqt@mellanox.com>
    Acked-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>

diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en/health.h b/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
index 8acd9dc520cf..b4a2d9be17d6 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
@@ -19,6 +19,7 @@ int mlx5e_reporter_named_obj_nest_end(struct devlink_fmsg *fmsg);
 int mlx5e_reporter_rx_create(struct mlx5e_priv *priv);
 void mlx5e_reporter_rx_destroy(struct mlx5e_priv *priv);
 void mlx5e_reporter_icosq_cqe_err(struct mlx5e_icosq *icosq);
+void mlx5e_reporter_rx_timeout(struct mlx5e_rq *rq);
 
 #define MLX5E_REPORTER_PER_Q_MAX_LEN 256
 

commit be5323c8379f488f1de53206edeaf80fc20d7686
Author: Aya Levin <ayal@mellanox.com>
Date:   Tue Jun 25 17:44:28 2019 +0300

    net/mlx5e: Report and recover from CQE error on ICOSQ
    
    Add support for report and recovery from error on completion on ICOSQ.
    Deactivate RQ and flush, then deactivate ICOSQ. Set the queue back to
    ready state (firmware) and reset the ICOSQ and the RQ (software
    resources). Finally, activate the ICOSQ and the RQ.
    
    Signed-off-by: Aya Levin <ayal@mellanox.com>
    Reviewed-by: Tariq Toukan <tariqt@mellanox.com>
    Acked-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>

diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en/health.h b/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
index a751c5316baf..8acd9dc520cf 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
@@ -18,6 +18,7 @@ int mlx5e_reporter_named_obj_nest_end(struct devlink_fmsg *fmsg);
 
 int mlx5e_reporter_rx_create(struct mlx5e_priv *priv);
 void mlx5e_reporter_rx_destroy(struct mlx5e_priv *priv);
+void mlx5e_reporter_icosq_cqe_err(struct mlx5e_icosq *icosq);
 
 #define MLX5E_REPORTER_PER_Q_MAX_LEN 256
 

commit 9032e7192eac8e657b52cf1c89fe730308b72c2a
Author: Aya Levin <ayal@mellanox.com>
Date:   Tue Jun 25 16:26:46 2019 +0300

    net/mlx5e: Add support to rx reporter diagnose
    
    Add rx reporter, which supports diagnose call-back. Diagnostics output
    include: information common to all RQs: RQ type, RQ size, RQ stride
    size, CQ size and CQ stride size. In addition advertise information per
    RQ and its related icosq and attached CQ.
    
    $ devlink health diagnose pci/0000:00:0b.0 reporter rx
     Common config:
       RQ:
         type: 2 stride size: 2048 size: 8
       CQ:
         stride size: 64 size: 1024
     RQs:
       channel ix: 0 rqn: 4308 HW state: 1 SW state: 3 posted WQEs: 7 cc: 7 ICOSQ HW state: 1
       CQ:
         cqn: 1032 HW status: 0
       channel ix: 1 rqn: 4313 HW state: 1 SW state: 3 posted WQEs: 7 cc: 7 ICOSQ HW state: 1
       CQ:
         cqn: 1036 HW status: 0
       channel ix: 2 rqn: 4318 HW state: 1 SW state: 3 posted WQEs: 7 cc: 7 ICOSQ HW state: 1
       CQ:
         cqn: 1040 HW status: 0
       channel ix: 3 rqn: 4323 HW state: 1 SW state: 3 posted WQEs: 7 cc: 7 ICOSQ HW state: 1
       CQ:
         cqn: 1044 HW status: 0
    
    $ devlink health diagnose pci/0000:00:0b.0 reporter rx -jp
    {
        "Common config": {
            "RQ": {
                "type": 2,
                "stride size": 2048,
                "size": 8
            },
            "CQ": {
                "stride size": 64,
                "size": 1024
            }
        },
        "RQs": [ {
                "channel ix": 0,
                "rqn": 4308,
                "HW state": 1,
                "SW state": 3,
                "posted WQEs": 7,
                "cc": 7,
                "ICOSQ HW state": 1,
                "CQ": {
                    "cqn": 1032,
                    "HW status": 0
                }
            },{
                "channel ix": 1,
                "rqn": 4313,
                "HW state": 1,
                "SW state": 3,
                "posted WQEs": 7,
                "cc": 7,
                "ICOSQ HW state": 1,
                "CQ": {
                    "cqn": 1036,
                    "HW status": 0
                }
            },{
                "channel ix": 2,
                "rqn": 4318,
                "HW state": 1,
                "SW state": 3,
                "posted WQEs": 7,
                "cc": 7,
                "ICOSQ HW state": 1,
                "CQ": {
                    "cqn": 1040,
                    "HW status": 0
                }
            },{
                "channel ix": 3,
                "rqn": 4323,
                "HW state": 1,
                "SW state": 3,
                "posted WQEs": 7,
                "cc": 7,
                "ICOSQ HW state": 1,
                "CQ": {
                    "cqn": 1044,
                    "HW status": 0
                }
            } ]
    }
    
    Signed-off-by: Aya Levin <ayal@mellanox.com>
    Reviewed-by: Tariq Toukan <tariqt@mellanox.com>
    Acked-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>

diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en/health.h b/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
index b2c0ccc79b22..a751c5316baf 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
@@ -16,6 +16,9 @@ int mlx5e_reporter_cq_common_diagnose(struct mlx5e_cq *cq, struct devlink_fmsg *
 int mlx5e_reporter_named_obj_nest_start(struct devlink_fmsg *fmsg, char *name);
 int mlx5e_reporter_named_obj_nest_end(struct devlink_fmsg *fmsg);
 
+int mlx5e_reporter_rx_create(struct mlx5e_priv *priv);
+void mlx5e_reporter_rx_destroy(struct mlx5e_priv *priv);
+
 #define MLX5E_REPORTER_PER_Q_MAX_LEN 256
 
 struct mlx5e_err_ctx {

commit 11af6a6d09e9a90e05f4a21564232b30c6c25d69
Author: Aya Levin <ayal@mellanox.com>
Date:   Thu Jul 11 17:17:36 2019 +0300

    net/mlx5e: Add helper functions for reporter's basics
    
    Introduce helper functions for create and destroy reporters and update
    channels. In the following patch, rx reporter is added and it will use
    these helpers too.
    
    Signed-off-by: Aya Levin <ayal@mellanox.com>
    Reviewed-by: Tariq Toukan <tariqt@mellanox.com>
    Acked-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>

diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en/health.h b/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
index 6725d417aaf5..b2c0ccc79b22 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
@@ -29,5 +29,9 @@ int mlx5e_health_recover_channels(struct mlx5e_priv *priv);
 int mlx5e_health_report(struct mlx5e_priv *priv,
 			struct devlink_health_reporter *reporter, char *err_str,
 			struct mlx5e_err_ctx *err_ctx);
+int mlx5e_health_create_reporters(struct mlx5e_priv *priv);
+void mlx5e_health_destroy_reporters(struct mlx5e_priv *priv);
+void mlx5e_health_channels_update(struct mlx5e_priv *priv);
+
 
 #endif

commit 2bf09e60ae5ef68c2282f97baf37b7dbd9cc1d48
Author: Aya Levin <ayal@mellanox.com>
Date:   Sun Jun 30 15:08:00 2019 +0300

    net/mlx5e: Add cq info to tx reporter diagnose
    
    Add cq information to general diagnose output: CQ size and stride size.
    Per SQ add information about the related CQ: cqn and CQ's HW status.
    
    $ devlink health diagnose pci/0000:00:0b.0 reporter tx
     Common Config:
       SQ:
         stride size: 64 size: 1024
       CQ:
         stride size: 64 size: 1024
     SQs:
       channel ix: 0 tc: 0 txq ix: 0 sqn: 4307 HW state: 1 stopped: false cc: 0 pc: 0
       CQ:
         cqn: 1030 HW status: 0
       channel ix: 1 tc: 0 txq ix: 1 sqn: 4312 HW state: 1 stopped: false cc: 0 pc: 0
       CQ:
         cqn: 1034 HW status: 0
       channel ix: 2 tc: 0 txq ix: 2 sqn: 4317 HW state: 1 stopped: false cc: 0 pc: 0
       CQ:
         cqn: 1038 HW status: 0
       channel ix: 3 tc: 0 txq ix: 3 sqn: 4322 HW state: 1 stopped: false cc: 0 pc: 0
       CQ:
         cqn: 1042 HW status: 0
    
    $ devlink health diagnose pci/0000:00:0b.0 reporter tx -jp
    {
        "Common Config": {
            "SQ": {
                "stride size": 64,
                "size": 1024
            },
            "CQ": {
                "stride size": 64,
                "size": 1024
            }
        },
        "SQs": [ {
                "channel ix": 0,
                "tc": 0,
                "txq ix": 0,
                "sqn": 4307,
                "HW state": 1,
                "stopped": false,
                "cc": 0,
                "pc": 0,
                "CQ": {
                    "cqn": 1030,
                    "HW status": 0
                }
            },{
                "channel ix": 1,
                "tc": 0,
                "txq ix": 1,
                "sqn": 4312,
                "HW state": 1,
                "stopped": false,
                "cc": 0,
                "pc": 0,
                "CQ": {
                    "cqn": 1034,
                    "HW status": 0
                }
            },{
                "channel ix": 2,
                "tc": 0,
                "txq ix": 2,
                "sqn": 4317,
                "HW state": 1,
                "stopped": false,
                "cc": 0,
                "pc": 0,
                "CQ": {
                    "cqn": 1038,
                    "HW status": 0
                }
            },{
                "channel ix": 3,
                "tc": 0,
                "txq ix": 3,
                "sqn": 4322,
                "HW state": 1,
                "stopped": false,
                "cc": 0,
                "pc": 0,
                "CQ": {
                    "cqn": 1042,
                    "HW status": 0
            } ]
    }
    
    Signed-off-by: Aya Levin <ayal@mellanox.com>
    Reviewed-by: Tariq Toukan <tariqt@mellanox.com>
    Acked-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>

diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en/health.h b/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
index 112771ad516c..6725d417aaf5 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
@@ -11,6 +11,8 @@ void mlx5e_reporter_tx_destroy(struct mlx5e_priv *priv);
 void mlx5e_reporter_tx_err_cqe(struct mlx5e_txqsq *sq);
 int mlx5e_reporter_tx_timeout(struct mlx5e_txqsq *sq);
 
+int mlx5e_reporter_cq_diagnose(struct mlx5e_cq *cq, struct devlink_fmsg *fmsg);
+int mlx5e_reporter_cq_common_diagnose(struct mlx5e_cq *cq, struct devlink_fmsg *fmsg);
 int mlx5e_reporter_named_obj_nest_start(struct devlink_fmsg *fmsg, char *name);
 int mlx5e_reporter_named_obj_nest_end(struct devlink_fmsg *fmsg);
 

commit 2d708887a4b1cb142c3179b3b1030dab047467b6
Author: Aya Levin <ayal@mellanox.com>
Date:   Sun Jun 30 11:34:15 2019 +0300

    net/mlx5e: Extend tx reporter diagnostics output
    
    Enhance tx reporter's diagnostics output to include: information common
    to all SQs: SQ size, SQ stride size.
    In addition add channel ix, tc, txq ix, cc and pc.
    
    $ devlink health diagnose pci/0000:00:0b.0 reporter tx
     Common config:
       SQ:
         stride size: 64 size: 1024
     SQs:
       channel ix: 0 tc: 0 txq ix: 0 sqn: 4307 HW state: 1 stopped: false cc: 0 pc: 0
       channel ix: 1 tc: 0 txq ix: 1 sqn: 4312 HW state: 1 stopped: false cc: 0 pc: 0
       channel ix: 2 tc: 0 txq ix: 2 sqn: 4317 HW state: 1 stopped: false cc: 0 pc: 0
       channel ix: 3 tc: 0 txq ix: 3 sqn: 4322 HW state: 1 stopped: false cc: 0 pc: 0
    
    $ devlink health diagnose pci/0000:00:0b.0 reporter tx -jp
    {
        "Common config": {
            "SQ": {
                "stride size": 64,
                "size": 1024
            }
        },
        "SQs": [ {
                "channel ix": 0,
                "tc": 0,
                "txq ix": 0,
                "sqn": 4307,
                "HW state": 1,
                "stopped": false,
                "cc": 0,
                "pc": 0
            },{
                "channel ix": 1,
                "tc": 0,
                "txq ix": 1,
                "sqn": 4312,
                "HW state": 1,
                "stopped": false,
                "cc": 0,
                "pc": 0
            },{
                "channel ix": 2,
                "tc": 0,
                "txq ix": 2,
                "sqn": 4317,
                "HW state": 1,
                "stopped": false,
                "cc": 0,
                "pc": 0
            },{
                "channel ix": 3,
                "tc": 0,
                "txq ix": 3,
                "sqn": 4322,
                "HW state": 1,
                "stopped": false,
                "cc": 0,
                "pc": 0
             } ]
    }
    
    Signed-off-by: Aya Levin <ayal@mellanox.com>
    Reviewed-by: Tariq Toukan <tariqt@mellanox.com>
    Acked-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>

diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en/health.h b/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
index 386bda6104aa..112771ad516c 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
@@ -11,6 +11,9 @@ void mlx5e_reporter_tx_destroy(struct mlx5e_priv *priv);
 void mlx5e_reporter_tx_err_cqe(struct mlx5e_txqsq *sq);
 int mlx5e_reporter_tx_timeout(struct mlx5e_txqsq *sq);
 
+int mlx5e_reporter_named_obj_nest_start(struct devlink_fmsg *fmsg, char *name);
+int mlx5e_reporter_named_obj_nest_end(struct devlink_fmsg *fmsg);
+
 #define MLX5E_REPORTER_PER_Q_MAX_LEN 256
 
 struct mlx5e_err_ctx {

commit c50de4af1d635fab3a5c8bd358f55623c01f7ee5
Author: Aya Levin <ayal@mellanox.com>
Date:   Mon Jul 1 15:08:13 2019 +0300

    net/mlx5e: Generalize tx reporter's functionality
    
    Prepare for code sharing with rx reporter, which is added in the
    following patches in the set. Introduce a generic error_ctx for
    agnostic recovery despatch.
    
    Signed-off-by: Aya Levin <ayal@mellanox.com>
    Reviewed-by: Tariq Toukan <tariqt@mellanox.com>
    Acked-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>

diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en/health.h b/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
index c7a5a149011e..386bda6104aa 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
@@ -11,4 +11,18 @@ void mlx5e_reporter_tx_destroy(struct mlx5e_priv *priv);
 void mlx5e_reporter_tx_err_cqe(struct mlx5e_txqsq *sq);
 int mlx5e_reporter_tx_timeout(struct mlx5e_txqsq *sq);
 
+#define MLX5E_REPORTER_PER_Q_MAX_LEN 256
+
+struct mlx5e_err_ctx {
+	int (*recover)(void *ctx);
+	void *ctx;
+};
+
+int mlx5e_health_sq_to_ready(struct mlx5e_channel *channel, u32 sqn);
+int mlx5e_health_channel_eq_recover(struct mlx5_eq_comp *eq, struct mlx5e_channel *channel);
+int mlx5e_health_recover_channels(struct mlx5e_priv *priv);
+int mlx5e_health_report(struct mlx5e_priv *priv,
+			struct devlink_health_reporter *reporter, char *err_str,
+			struct mlx5e_err_ctx *err_ctx);
+
 #endif

commit 06293ae4fa0a1b62bf3bb8add8f9bbe8815b0aba
Author: Aya Levin <ayal@mellanox.com>
Date:   Mon Jul 1 15:51:51 2019 +0300

    net/mlx5e: Change naming convention for reporter's functions
    
    Change from mlx5e_tx_reporter_* to mlx5e_reporter_tx_*. In the following
    patches in the set rx reporter is added, the new naming convention is
    more uniformed.
    
    Signed-off-by: Aya Levin <ayal@mellanox.com>
    Reviewed-by: Tariq Toukan <tariqt@mellanox.com>
    Acked-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>

diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en/health.h b/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
index cee840e40a05..c7a5a149011e 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
@@ -6,9 +6,9 @@
 
 #include "en.h"
 
-int mlx5e_tx_reporter_create(struct mlx5e_priv *priv);
-void mlx5e_tx_reporter_destroy(struct mlx5e_priv *priv);
-void mlx5e_tx_reporter_err_cqe(struct mlx5e_txqsq *sq);
-int mlx5e_tx_reporter_timeout(struct mlx5e_txqsq *sq);
+int mlx5e_reporter_tx_create(struct mlx5e_priv *priv);
+void mlx5e_reporter_tx_destroy(struct mlx5e_priv *priv);
+void mlx5e_reporter_tx_err_cqe(struct mlx5e_txqsq *sq);
+int mlx5e_reporter_tx_timeout(struct mlx5e_txqsq *sq);
 
 #endif

commit 4edc17fdfdf15c2971d15cbfa4d6f2f5f537ee5e
Author: Aya Levin <ayal@mellanox.com>
Date:   Mon Jul 1 14:53:34 2019 +0300

    net/mlx5e: Rename reporter header file
    
    Rename reporter.h -> health.h so patches in the set can use it for
    health related functionality.
    
    Signed-off-by: Aya Levin <ayal@mellanox.com>
    Reviewed-by: Tariq Toukan <tariqt@mellanox.com>
    Acked-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>

diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en/health.h b/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
new file mode 100644
index 000000000000..cee840e40a05
--- /dev/null
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/health.h
@@ -0,0 +1,14 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+/* Copyright (c) 2019 Mellanox Technologies. */
+
+#ifndef __MLX5E_EN_HEALTH_H
+#define __MLX5E_EN_HEALTH_H
+
+#include "en.h"
+
+int mlx5e_tx_reporter_create(struct mlx5e_priv *priv);
+void mlx5e_tx_reporter_destroy(struct mlx5e_priv *priv);
+void mlx5e_tx_reporter_err_cqe(struct mlx5e_txqsq *sq);
+int mlx5e_tx_reporter_timeout(struct mlx5e_txqsq *sq);
+
+#endif
