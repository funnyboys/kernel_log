commit ac004b8321281b9da7d9a99674241e60e49ffc8a
Author: Roi Dayan <roid@mellanox.com>
Date:   Sun Nov 11 17:50:16 2018 +0200

    net/mlx5e: E-Switch, Add peer miss rules
    
    In the sriov offloads mode, packets that are not matched by any
    other rule are sent towards the e-switch vport manager for further
    processing.
    
    Under upcoming patches (e.g for uplink LAG), packets sent from VF
    vports belonging to esw0 (e-switch related to PF0) might end up in
    esw1 (e-switch related to PF1) due to muxing logic applied by the
    FW.
    
    In such a case we still want the missed packet to be sent to the
    "base" esw manager vport in order to present the control plane a
    consistent view of the source (VF reresentor) port.
    
    Signed-off-by: Roi Dayan <roid@mellanox.com>
    Signed-off-by: Aviv Heller <avivh@mellanox.com>
    Signed-off-by: Shahar Klein <shahark@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>

diff --git a/drivers/net/ethernet/mellanox/mlx5/core/lib/devcom.h b/drivers/net/ethernet/mellanox/mlx5/core/lib/devcom.h
index f2d338b187a6..939d5bf1581b 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/lib/devcom.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/lib/devcom.h
@@ -7,6 +7,8 @@
 #include <linux/mlx5/driver.h>
 
 enum mlx5_devcom_components {
+	MLX5_DEVCOM_ESW_OFFLOADS,
+
 	MLX5_DEVCOM_NUM_COMPONENTS,
 };
 

commit fadd59fc50d010145f251db583c7ccef37393d19
Author: Aviv Heller <avivh@mellanox.com>
Date:   Tue Dec 4 21:24:46 2018 +0200

    net/mlx5: Introduce inter-device communication mechanism
    
    This introduces devcom, a generic mechanism for performing operations
    on both physical functions of the same Connect-X card.
    
    The first user of this API is merged eswitch, which will be introduced
    in subsequent patches.
    
    Signed-off-by: Aviv Heller <avivh@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>

diff --git a/drivers/net/ethernet/mellanox/mlx5/core/lib/devcom.h b/drivers/net/ethernet/mellanox/mlx5/core/lib/devcom.h
new file mode 100644
index 000000000000..f2d338b187a6
--- /dev/null
+++ b/drivers/net/ethernet/mellanox/mlx5/core/lib/devcom.h
@@ -0,0 +1,44 @@
+/* SPDX-License-Identifier: GPL-2.0 OR Linux-OpenIB */
+/* Copyright (c) 2018 Mellanox Technologies */
+
+#ifndef __LIB_MLX5_DEVCOM_H__
+#define __LIB_MLX5_DEVCOM_H__
+
+#include <linux/mlx5/driver.h>
+
+enum mlx5_devcom_components {
+	MLX5_DEVCOM_NUM_COMPONENTS,
+};
+
+typedef int (*mlx5_devcom_event_handler_t)(int event,
+					   void *my_data,
+					   void *event_data);
+
+struct mlx5_devcom *mlx5_devcom_register_device(struct mlx5_core_dev *dev);
+void mlx5_devcom_unregister_device(struct mlx5_devcom *devcom);
+
+void mlx5_devcom_register_component(struct mlx5_devcom *devcom,
+				    enum mlx5_devcom_components id,
+				    mlx5_devcom_event_handler_t handler,
+				    void *data);
+void mlx5_devcom_unregister_component(struct mlx5_devcom *devcom,
+				      enum mlx5_devcom_components id);
+
+int mlx5_devcom_send_event(struct mlx5_devcom *devcom,
+			   enum mlx5_devcom_components id,
+			   int event,
+			   void *event_data);
+
+void mlx5_devcom_set_paired(struct mlx5_devcom *devcom,
+			    enum mlx5_devcom_components id,
+			    bool paired);
+bool mlx5_devcom_is_paired(struct mlx5_devcom *devcom,
+			   enum mlx5_devcom_components id);
+
+void *mlx5_devcom_get_peer_data(struct mlx5_devcom *devcom,
+				enum mlx5_devcom_components id);
+void mlx5_devcom_release_peer_data(struct mlx5_devcom *devcom,
+				   enum mlx5_devcom_components id);
+
+#endif
+
