commit 9e68cb0359b20f99c7b070f1d3305e5e0a9fae6d
Author: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
Date:   Sun Apr 26 16:24:39 2020 -0400

    bnxt_en: Reduce BNXT_MSIX_VEC_MAX value to supported CQs per PF.
    
    Broadcom adapters support only maximum of 512 CQs per PF. If user sets
    MSIx vectors more than supported CQs, firmware is setting incorrect value
    for msix_vec_per_pf_max parameter. Fix it by reducing the BNXT_MSIX_VEC_MAX
    value to 512, even though the maximum # of MSIx vectors supported by adapter
    are 1280.
    
    Fixes: f399e8497826 ("bnxt_en: Use msix_vec_per_pf_max and msix_vec_per_pf_min devlink params.")
    Signed-off-by: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h b/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h
index 95f893f2a74d..d5c8bd49383a 100644
--- a/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h
+++ b/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h
@@ -43,7 +43,7 @@ static inline void bnxt_link_bp_to_dl(struct bnxt *bp, struct devlink *dl)
 #define BNXT_NVM_CFG_VER_BITS		24
 #define BNXT_NVM_CFG_VER_BYTES		4
 
-#define BNXT_MSIX_VEC_MAX	1280
+#define BNXT_MSIX_VEC_MAX	512
 #define BNXT_MSIX_VEC_MIN_MAX	128
 
 enum bnxt_nvm_dir_type {

commit 9599e036b161243d7c62399a1b6c250573e08a43
Author: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
Date:   Mon Jan 27 04:56:26 2020 -0500

    bnxt_en: Add support for devlink info command
    
    Display the following information via devlink info command:
      - Driver name
      - Board id
      - Broad revision
      - Board Serial number
      - Board FW version
      - FW parameter set version
      - FW App version
      - FW management version
      - FW RoCE version
    
      Standard output example:
      $ devlink dev info pci/0000:3b:00.0
      pci/0000:3b:00.0:
      driver bnxt_en
      serial_number 00-10-18-FF-FE-AD-05-00
      versions:
          fixed:
            asic.id D802
            asic.rev 1
          running:
            fw 216.1.124.0
            fw.psid 0.0.0
            fw.app 216.1.122.0
            fw.mgmt 864.0.32.0
            fw.roce 216.1.15.0
    
    [ This version has incorporated changes suggested by Jakub Kicinski to
      use generic devlink version tags. ]
    
    v2: Use fw.psid
    
    Cc: Jiri Pirko <jiri@mellanox.com>
    Cc: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h b/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h
index 08aaa4441c78..95f893f2a74d 100644
--- a/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h
+++ b/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h
@@ -38,6 +38,10 @@ static inline void bnxt_link_bp_to_dl(struct bnxt *bp, struct devlink *dl)
 #define NVM_OFF_IGNORE_ARI		164
 #define NVM_OFF_DIS_GRE_VER_CHECK	171
 #define NVM_OFF_ENABLE_SRIOV		401
+#define NVM_OFF_NVM_CFG_VER		602
+
+#define BNXT_NVM_CFG_VER_BITS		24
+#define BNXT_NVM_CFG_VER_BYTES		4
 
 #define BNXT_MSIX_VEC_MAX	1280
 #define BNXT_MSIX_VEC_MIN_MAX	128

commit 737d7a6c55964955604b9de398dac3791bab5a64
Author: Vikas Gupta <vikas.gupta@broadcom.com>
Date:   Thu Jan 2 21:18:11 2020 +0530

    bnxt_en: Call recovery done after reset is successfully done
    
    Return EINPROGRESS to devlink health reporter recover as we are not yet
    done and call devlink_health_reporter_recovery_done once reset is
    successfully completed from workqueue context.
    
    Signed-off-by: Vikas Gupta <vikas.gupta@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h b/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h
index 6db6c3dac472..08aaa4441c78 100644
--- a/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h
+++ b/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h
@@ -58,6 +58,7 @@ struct bnxt_dl_nvm_param {
 
 void bnxt_devlink_health_report(struct bnxt *bp, unsigned long event);
 void bnxt_dl_health_status_update(struct bnxt *bp, bool healthy);
+void bnxt_dl_health_recovery_done(struct bnxt *bp);
 void bnxt_dl_fw_reporters_create(struct bnxt *bp);
 void bnxt_dl_fw_reporters_destroy(struct bnxt *bp, bool all);
 int bnxt_dl_register(struct bnxt *bp);

commit 937f188c1f4f89b3fa93ba31fc8587dc1fb14a22
Author: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
Date:   Tue Dec 10 02:49:12 2019 -0500

    bnxt_en: Fix the logic that creates the health reporters.
    
    Fix the logic to properly check the fw capabilities and create the
    devlink health reporters only when needed.  The current code creates
    the reporters unconditionally as long as bp->fw_health is valid, and
    that's not correct.
    
    Call bnxt_dl_fw_reporters_create() directly from the init and reset
    code path instead of from bnxt_dl_register().  This allows the
    reporters to be adjusted when capabilities change.  The same
    applies to bnxt_dl_fw_reporters_destroy().
    
    Fixes: 6763c779c2d8 ("bnxt_en: Add new FW devlink_health_reporter")
    Signed-off-by: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h b/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h
index 665d4bdcd8c0..6db6c3dac472 100644
--- a/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h
+++ b/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h
@@ -58,6 +58,8 @@ struct bnxt_dl_nvm_param {
 
 void bnxt_devlink_health_report(struct bnxt *bp, unsigned long event);
 void bnxt_dl_health_status_update(struct bnxt *bp, bool healthy);
+void bnxt_dl_fw_reporters_create(struct bnxt *bp);
+void bnxt_dl_fw_reporters_destroy(struct bnxt *bp, bool all);
 int bnxt_dl_register(struct bnxt *bp);
 void bnxt_dl_unregister(struct bnxt *bp);
 

commit e4e38237d7e39e84d4db4a5cf0aa1ce7fbfaa5d6
Author: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
Date:   Mon Nov 18 03:56:40 2019 -0500

    bnxt_en: Report health status update after reset is done
    
    Report health status update to devlink health reporter, once
    reset is completed.
    
    Cc: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h b/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h
index 2f4fd0a7d04b..665d4bdcd8c0 100644
--- a/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h
+++ b/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h
@@ -57,6 +57,7 @@ struct bnxt_dl_nvm_param {
 };
 
 void bnxt_devlink_health_report(struct bnxt *bp, unsigned long event);
+void bnxt_dl_health_status_update(struct bnxt *bp, bool healthy);
 int bnxt_dl_register(struct bnxt *bp);
 void bnxt_dl_unregister(struct bnxt *bp);
 

commit c329230ce886f449a6e559b636096b75ab00d18a
Author: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
Date:   Mon Oct 21 01:34:25 2019 -0400

    bnxt_en: Fix the size of devlink MSIX parameters.
    
    The current code that rounds up the NVRAM parameter bit size to the next
    byte size for the devlink parameter is not always correct.  The MSIX
    devlink parameters are 4 bytes and we don't get the correct size
    using this method.
    
    Fix it by adding a new dl_num_bytes member to the bnxt_dl_nvm_param
    structure which statically provides bytesize information according
    to the devlink parameter type definition.
    
    Fixes: 782a624d00fa ("bnxt_en: Add bnxt_en initial port params table and register it")
    Cc: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>

diff --git a/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h b/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h
index b97e0baeb42d..2f4fd0a7d04b 100644
--- a/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h
+++ b/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h
@@ -52,7 +52,8 @@ struct bnxt_dl_nvm_param {
 	u16 id;
 	u16 offset;
 	u16 dir_type;
-	u16 num_bits;
+	u16 nvm_num_bits;
+	u8 dl_num_bytes;
 };
 
 void bnxt_devlink_health_report(struct bnxt *bp, unsigned long event);

commit 657a33c8a0a2342e91259b28356838dc89216b19
Author: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
Date:   Thu Aug 29 23:55:00 2019 -0400

    bnxt_en: Add devlink health reset reporter.
    
    Add devlink health reporter for the firmware reset event.  Once we get
    the notification from firmware about the impending reset, the driver
    will report this to devlink and the call to bnxt_fw_reset() will be
    initiated to complete the reset sequence.
    
    Cc: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h b/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h
index 5b6b2c7d97cf..b97e0baeb42d 100644
--- a/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h
+++ b/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h
@@ -55,6 +55,7 @@ struct bnxt_dl_nvm_param {
 	u16 num_bits;
 };
 
+void bnxt_devlink_health_report(struct bnxt *bp, unsigned long event);
 int bnxt_dl_register(struct bnxt *bp);
 void bnxt_dl_unregister(struct bnxt *bp);
 

commit 2dc0865e9ac7150e2d3b29afdc32d04b99f37902
Author: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
Date:   Thu Oct 4 11:13:50 2018 +0530

    bnxt_en: Add a driver specific gre_ver_check devlink parameter.
    
    This patch adds following driver-specific permanent mode boolean
    parameter.
    
    gre_ver_check - Generic Routing Encapsulation(GRE) version check
    will be enabled in the device. If disabled, device skips version
    checking for GRE packets.
    
    Cc: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h b/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h
index 2bfd0823cb02..5b6b2c7d97cf 100644
--- a/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h
+++ b/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h
@@ -36,6 +36,7 @@ static inline void bnxt_link_bp_to_dl(struct bnxt *bp, struct devlink *dl)
 #define NVM_OFF_MSIX_VEC_PER_PF_MAX	108
 #define NVM_OFF_MSIX_VEC_PER_PF_MIN	114
 #define NVM_OFF_IGNORE_ARI		164
+#define NVM_OFF_DIS_GRE_VER_CHECK	171
 #define NVM_OFF_ENABLE_SRIOV		401
 
 #define BNXT_MSIX_VEC_MAX	1280

commit f399e8497826d35e4d83785cdff33ad779ffa62f
Author: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
Date:   Thu Oct 4 11:13:49 2018 +0530

    bnxt_en: Use msix_vec_per_pf_max and msix_vec_per_pf_min devlink params.
    
    This patch adds support for following generic permanent mode
    devlink parameters. They can be modified using devlink param
    commands.
    
    msix_vec_per_pf_max - This param sets the number of MSIX vectors
    that the device requests from the host on driver initialization.
    This value is set in the device which limits MSIX vectors per PF.
    
    msix_vec_per_pf_min - This param sets the number of minimal MSIX
    vectors required for the device initialization. Value 0 indicates
    a default value is selected. This value is set in the device which
    limits MSIX vectors per PF.
    
    Cc: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h b/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h
index 3d07c8f8b240..2bfd0823cb02 100644
--- a/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h
+++ b/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h
@@ -33,9 +33,14 @@ static inline void bnxt_link_bp_to_dl(struct bnxt *bp, struct devlink *dl)
 	}
 }
 
+#define NVM_OFF_MSIX_VEC_PER_PF_MAX	108
+#define NVM_OFF_MSIX_VEC_PER_PF_MIN	114
 #define NVM_OFF_IGNORE_ARI		164
 #define NVM_OFF_ENABLE_SRIOV		401
 
+#define BNXT_MSIX_VEC_MAX	1280
+#define BNXT_MSIX_VEC_MIN_MAX	128
+
 enum bnxt_nvm_dir_type {
 	BNXT_NVM_SHARED_CFG = 40,
 	BNXT_NVM_PORT_CFG,

commit 7d859234875d236a363101e90aaaf52a790f4590
Author: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
Date:   Thu Oct 4 11:13:47 2018 +0530

    bnxt_en: Use ignore_ari devlink parameter
    
    This patch adds support for ignore_ari generic permanent mode
    devlink parameter. This parameter is disabled by default. It can be
    enabled using devlink param commands.
    
    ignore_ari - If enabled, device ignores ARI(Alternate Routing ID)
    capability, even when platforms has the support and creates same number
    of partitions when platform does not support ARI capability.
    
    Cc: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h b/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h
index 2f68dc048390..3d07c8f8b240 100644
--- a/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h
+++ b/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h
@@ -33,6 +33,7 @@ static inline void bnxt_link_bp_to_dl(struct bnxt *bp, struct devlink *dl)
 	}
 }
 
+#define NVM_OFF_IGNORE_ARI		164
 #define NVM_OFF_ENABLE_SRIOV		401
 
 enum bnxt_nvm_dir_type {

commit 6354b95eb871beee89b8679a1f576fccc132cf90
Author: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
Date:   Wed Jul 4 14:30:37 2018 +0300

    bnxt_en: Add bnxt_en initial params table and register it.
    
    Create initial devlink parameters table for bnxt_en.
    Table consists of a permanent generic parameter.
    
    enable_sriov - Enables Single-Root Input/Output Virtualization(SR-IOV)
    characteristic of the device.
    
    Reviewed-by: Jiri Pirko <jiri@mellanox.com>
    Reviewed-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h b/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h
index e92a35d8b642..2f68dc048390 100644
--- a/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h
+++ b/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h
@@ -33,6 +33,21 @@ static inline void bnxt_link_bp_to_dl(struct bnxt *bp, struct devlink *dl)
 	}
 }
 
+#define NVM_OFF_ENABLE_SRIOV		401
+
+enum bnxt_nvm_dir_type {
+	BNXT_NVM_SHARED_CFG = 40,
+	BNXT_NVM_PORT_CFG,
+	BNXT_NVM_FUNC_CFG,
+};
+
+struct bnxt_dl_nvm_param {
+	u16 id;
+	u16 offset;
+	u16 dir_type;
+	u16 num_bits;
+};
+
 int bnxt_dl_register(struct bnxt *bp);
 void bnxt_dl_unregister(struct bnxt *bp);
 

commit 3c467bf399106030d5a97d844ee119caec04e817
Author: Steve Lin <steven.lin1@broadcom.com>
Date:   Thu Oct 19 10:45:56 2017 -0400

    bnxt: Move generic devlink code to new file
    
    Moving generic devlink code (registration) out of VF-R code
    into new bnxt_devlink file, in preparation for future work
    to add additional devlink functionality to bnxt.
    
    Signed-off-by: Steve Lin <steven.lin1@broadcom.com>
    Acked-by: Andy Gospodarek <gospo@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h b/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h
new file mode 100644
index 000000000000..e92a35d8b642
--- /dev/null
+++ b/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.h
@@ -0,0 +1,39 @@
+/* Broadcom NetXtreme-C/E network driver.
+ *
+ * Copyright (c) 2017 Broadcom Limited
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation.
+ */
+
+#ifndef BNXT_DEVLINK_H
+#define BNXT_DEVLINK_H
+
+/* Struct to hold housekeeping info needed by devlink interface */
+struct bnxt_dl {
+	struct bnxt *bp;	/* back ptr to the controlling dev */
+};
+
+static inline struct bnxt *bnxt_get_bp_from_dl(struct devlink *dl)
+{
+	return ((struct bnxt_dl *)devlink_priv(dl))->bp;
+}
+
+/* To clear devlink pointer from bp, pass NULL dl */
+static inline void bnxt_link_bp_to_dl(struct bnxt *bp, struct devlink *dl)
+{
+	bp->dl = dl;
+
+	/* add a back pointer in dl to bp */
+	if (dl) {
+		struct bnxt_dl *bp_dl = devlink_priv(dl);
+
+		bp_dl->bp = bp;
+	}
+}
+
+int bnxt_dl_register(struct bnxt *bp);
+void bnxt_dl_unregister(struct bnxt *bp);
+
+#endif /* BNXT_DEVLINK_H */
