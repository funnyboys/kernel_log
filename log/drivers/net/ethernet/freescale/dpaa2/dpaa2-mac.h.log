commit 37556a4ac48369cd87c6635c2fe42bff51b71723
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Wed Feb 26 10:24:01 2020 +0000

    net: dpaa2-mac: use resolved link config in mac_link_up()
    
    Convert the DPAA2 ethernet driver to use the finalised link parameters
    in mac_link_up() rather than the parameters in mac_config(), which are
    more suited to the needs of the DPAA2 MC firmware than those available
    via mac_config().
    
    Tested-by: Ioana Ciornei <ioana.ciornei@nxp.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/ethernet/freescale/dpaa2/dpaa2-mac.h b/drivers/net/ethernet/freescale/dpaa2/dpaa2-mac.h
index 4da8079b9155..2130d9c7d40e 100644
--- a/drivers/net/ethernet/freescale/dpaa2/dpaa2-mac.h
+++ b/drivers/net/ethernet/freescale/dpaa2/dpaa2-mac.h
@@ -20,6 +20,7 @@ struct dpaa2_mac {
 	struct phylink_config phylink_config;
 	struct phylink *phylink;
 	phy_interface_t if_mode;
+	enum dpmac_link_type if_link_type;
 };
 
 bool dpaa2_mac_is_type_fixed(struct fsl_mc_device *dpmac_dev,

commit 991df1fbb0dc3b44a88b4775b32d95839bf779e6
Author: Ioana Ciornei <ioana.ciornei@nxp.com>
Date:   Thu Nov 7 12:44:48 2019 +0200

    dpaa2-eth: add ethtool MAC counters
    
    When a DPNI is connected to a MAC, export its associated counters.
    Ethtool related functions are added in dpaa2_mac for returning the
    number of counters, their strings and also their values.
    
    Signed-off-by: Ioana Ciornei <ioana.ciornei@nxp.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/ethernet/freescale/dpaa2/dpaa2-mac.h b/drivers/net/ethernet/freescale/dpaa2/dpaa2-mac.h
index 8634d0de7ef3..4da8079b9155 100644
--- a/drivers/net/ethernet/freescale/dpaa2/dpaa2-mac.h
+++ b/drivers/net/ethernet/freescale/dpaa2/dpaa2-mac.h
@@ -29,4 +29,10 @@ int dpaa2_mac_connect(struct dpaa2_mac *mac);
 
 void dpaa2_mac_disconnect(struct dpaa2_mac *mac);
 
+int dpaa2_mac_get_sset_count(void);
+
+void dpaa2_mac_get_strings(u8 *data);
+
+void dpaa2_mac_get_ethtool_stats(struct dpaa2_mac *mac, u64 *data);
+
 #endif /* DPAA2_MAC_H */

commit 71947923089353f23f4f210864903c4dcf2c1696
Author: Ioana Ciornei <ioana.ciornei@nxp.com>
Date:   Thu Oct 31 01:18:31 2019 +0200

    dpaa2-eth: add MAC/PHY support through phylink
    
    The dpaa2-eth driver now has support for connecting to its associated
    PHY device found through standard OF bindings.
    
    This happens when the DPNI object (that the driver probes on) gets
    connected to a DPMAC. When that happens, the device tree is looked up by
    the DPMAC ID, and the associated PHY bindings are found.
    
    The old logic of handling the net device's link state by hand still
    needs to be kept, as the DPNI can be connected to other devices on the
    bus than a DPMAC: other DPNI, DPSW ports, etc. This logic is only
    engaged when there is no DPMAC (and therefore no phylink instance)
    attached.
    
    The MC firmware support multiple type of DPMAC links: TYPE_FIXED,
    TYPE_PHY. The TYPE_FIXED mode does not require any DPMAC management from
    Linux side, and as such, the driver will not handle such a DPMAC.
    
    Although PHYLINK typically handles SFP cages and in-band AN modes, for
    the moment the driver only supports the RGMII interfaces found on the
    LX2160A. Support for other modes will come later.
    
    Signed-off-by: Ioana Ciornei <ioana.ciornei@nxp.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/ethernet/freescale/dpaa2/dpaa2-mac.h b/drivers/net/ethernet/freescale/dpaa2/dpaa2-mac.h
new file mode 100644
index 000000000000..8634d0de7ef3
--- /dev/null
+++ b/drivers/net/ethernet/freescale/dpaa2/dpaa2-mac.h
@@ -0,0 +1,32 @@
+/* SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause) */
+/* Copyright 2019 NXP */
+#ifndef DPAA2_MAC_H
+#define DPAA2_MAC_H
+
+#include <linux/of.h>
+#include <linux/of_mdio.h>
+#include <linux/of_net.h>
+#include <linux/phylink.h>
+
+#include "dpmac.h"
+#include "dpmac-cmd.h"
+
+struct dpaa2_mac {
+	struct fsl_mc_device *mc_dev;
+	struct dpmac_link_state state;
+	struct net_device *net_dev;
+	struct fsl_mc_io *mc_io;
+
+	struct phylink_config phylink_config;
+	struct phylink *phylink;
+	phy_interface_t if_mode;
+};
+
+bool dpaa2_mac_is_type_fixed(struct fsl_mc_device *dpmac_dev,
+			     struct fsl_mc_io *mc_io);
+
+int dpaa2_mac_connect(struct dpaa2_mac *mac);
+
+void dpaa2_mac_disconnect(struct dpaa2_mac *mac);
+
+#endif /* DPAA2_MAC_H */
