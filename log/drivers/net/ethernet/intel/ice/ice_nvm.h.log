commit d3112cd1abec7a28bbe885c2151875bcff4e9092
Author: Tony Nguyen <anthony.l.nguyen@intel.com>
Date:   Fri May 15 17:42:26 2020 -0700

    ice: Declare functions static
    
    ice_get_pfa_module_tlv() and ice_read_sr_word() are not being called
    outside of their file. Declare them as static.
    
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>

diff --git a/drivers/net/ethernet/intel/ice/ice_nvm.h b/drivers/net/ethernet/intel/ice/ice_nvm.h
index 999f273ba6ad..165eda07b93d 100644
--- a/drivers/net/ethernet/intel/ice/ice_nvm.h
+++ b/drivers/net/ethernet/intel/ice/ice_nvm.h
@@ -11,10 +11,6 @@ enum ice_status
 ice_read_flat_nvm(struct ice_hw *hw, u32 offset, u32 *length, u8 *data,
 		  bool read_shadow_ram);
 enum ice_status
-ice_get_pfa_module_tlv(struct ice_hw *hw, u16 *module_tlv, u16 *module_tlv_len,
-		       u16 module_type);
-enum ice_status
 ice_read_pba_string(struct ice_hw *hw, u8 *pba_num, u32 pba_num_size);
 enum ice_status ice_init_nvm(struct ice_hw *hw);
-enum ice_status ice_read_sr_word(struct ice_hw *hw, u16 offset, u16 *data);
 #endif /* _ICE_NVM_H_ */

commit e961b679fb0b25004f5a57db0ccb34256391646b
Author: Jacob Keller <jacob.e.keller@intel.com>
Date:   Wed Mar 11 18:58:18 2020 -0700

    ice: add board identifier info to devlink .info_get
    
    Export a unique board identifier using "board.id" for devlink's
    .info_get command.
    
    Obtain this by reading the NVM for the PBA identification string.
    
    Signed-off-by: Jacob Keller <jacob.e.keller@intel.com>
    Reviewed-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
    Acked-by: Jakub Kicinski <kuba@kernel.org>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>

diff --git a/drivers/net/ethernet/intel/ice/ice_nvm.h b/drivers/net/ethernet/intel/ice/ice_nvm.h
index 7375f6b96919..999f273ba6ad 100644
--- a/drivers/net/ethernet/intel/ice/ice_nvm.h
+++ b/drivers/net/ethernet/intel/ice/ice_nvm.h
@@ -10,6 +10,11 @@ void ice_release_nvm(struct ice_hw *hw);
 enum ice_status
 ice_read_flat_nvm(struct ice_hw *hw, u32 offset, u32 *length, u8 *data,
 		  bool read_shadow_ram);
+enum ice_status
+ice_get_pfa_module_tlv(struct ice_hw *hw, u16 *module_tlv, u16 *module_tlv_len,
+		       u16 module_type);
+enum ice_status
+ice_read_pba_string(struct ice_hw *hw, u8 *pba_num, u32 pba_num_size);
 enum ice_status ice_init_nvm(struct ice_hw *hw);
 enum ice_status ice_read_sr_word(struct ice_hw *hw, u16 offset, u16 *data);
 #endif /* _ICE_NVM_H_ */

commit 84a2479822ddc94845ca3f6a9874106b694eb1ed
Author: Jesse Brandeburg <jesse.brandeburg@intel.com>
Date:   Wed Mar 11 18:58:14 2020 -0700

    ice: implement full NVM read from ETHTOOL_GEEPROM
    
    The current implementation of .get_eeprom only enables reading from the
    Shadow RAM portion of the NVM contents. Implement support for reading
    the entire flash contents instead of only the initial portion contained
    in the Shadow RAM.
    
    A complete dump can take several seconds, but the ETHTOOL_GEEPROM ioctl
    is capable of reading only a limited portion at a time by specifying the
    offset and length to read.
    
    In order to perform the reads directly, several functions are made non
    static. Additionally, the unused ice_read_sr_buf_aq and ice_read_sr_buf
    functions are removed.
    
    Signed-off-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
    Signed-off-by: Jacob Keller <jacob.e.keller@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>

diff --git a/drivers/net/ethernet/intel/ice/ice_nvm.h b/drivers/net/ethernet/intel/ice/ice_nvm.h
index 4245ef988edf..7375f6b96919 100644
--- a/drivers/net/ethernet/intel/ice/ice_nvm.h
+++ b/drivers/net/ethernet/intel/ice/ice_nvm.h
@@ -4,8 +4,12 @@
 #ifndef _ICE_NVM_H_
 #define _ICE_NVM_H_
 
+enum ice_status
+ice_acquire_nvm(struct ice_hw *hw, enum ice_aq_res_access_type access);
+void ice_release_nvm(struct ice_hw *hw);
 enum ice_status
 ice_read_flat_nvm(struct ice_hw *hw, u32 offset, u32 *length, u8 *data,
 		  bool read_shadow_ram);
+enum ice_status ice_init_nvm(struct ice_hw *hw);
 enum ice_status ice_read_sr_word(struct ice_hw *hw, u16 offset, u16 *data);
 #endif /* _ICE_NVM_H_ */

commit e94509906d6b7babc44579738bfedf10add16a3b
Author: Jacob Keller <jacob.e.keller@intel.com>
Date:   Wed Mar 11 18:58:11 2020 -0700

    ice: create function to read a section of the NVM and Shadow RAM
    
    The NVM contents are read via firmware by using the ice_aq_read_nvm
    function. This function has a couple of limits:
    
    1) The AdminQ commands can only take buffers sized up to 4Kb. Thus, any
       larger read must be split into multiple reads.
    2) when reading from the Shadow RAM, reads must not cross sector
       boundaries. The sectors are also 4Kb in size.
    
    Implement the ice_read_flat_nvm function to read portions of the NVM by
    flat offset. That is, to read using offsets from the start of the NVM
    rather than from a specific module.
    
    This function will be able to read both from the NVM and from the Shadow
    RAM. For simplicity NVM reads will always be broken up to not cross 4Kb
    page boundaries, even though this is not required unless reading from
    the Shadow RAM.
    
    Use this new function as the implementation of ice_read_sr_word_aq.
    
    The ice_read_sr_buf_aq function is not modified here. This is because
    a following change will remove the only caller of that function in favor
    of directly using ice_read_flat_nvm. Thus, there is little benefit to
    changing it now only to remove it momentarily. At the same time, the
    ice_read_sr_aq function will also be removed.
    
    Signed-off-by: Jacob Keller <jacob.e.keller@intel.com>
    Reviewed-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>

diff --git a/drivers/net/ethernet/intel/ice/ice_nvm.h b/drivers/net/ethernet/intel/ice/ice_nvm.h
index a9fa011c22c6..4245ef988edf 100644
--- a/drivers/net/ethernet/intel/ice/ice_nvm.h
+++ b/drivers/net/ethernet/intel/ice/ice_nvm.h
@@ -4,5 +4,8 @@
 #ifndef _ICE_NVM_H_
 #define _ICE_NVM_H_
 
+enum ice_status
+ice_read_flat_nvm(struct ice_hw *hw, u32 offset, u32 *length, u8 *data,
+		  bool read_shadow_ram);
 enum ice_status ice_read_sr_word(struct ice_hw *hw, u16 offset, u16 *data);
 #endif /* _ICE_NVM_H_ */

commit 031f21475297042d86534246c1b2948fc58172b6
Author: Md Fahad Iqbal Polash <md.fahad.iqbal.polash@intel.com>
Date:   Wed Oct 9 07:09:42 2019 -0700

    ice: Update Boot Configuration Section read of NVM
    
    The Boot Configuration Section Block has been moved to the Preserved Field
    Area (PFA) of NVM. Update the NVM reads that involves Boot Configuration
    Section.
    
    Signed-off-by: Md Fahad Iqbal Polash <md.fahad.iqbal.polash@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>

diff --git a/drivers/net/ethernet/intel/ice/ice_nvm.h b/drivers/net/ethernet/intel/ice/ice_nvm.h
new file mode 100644
index 000000000000..a9fa011c22c6
--- /dev/null
+++ b/drivers/net/ethernet/intel/ice/ice_nvm.h
@@ -0,0 +1,8 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+/* Copyright (c) 2019, Intel Corporation. */
+
+#ifndef _ICE_NVM_H_
+#define _ICE_NVM_H_
+
+enum ice_status ice_read_sr_word(struct ice_hw *hw, u16 offset, u16 *data);
+#endif /* _ICE_NVM_H_ */
