commit 9cfbfa701b55868cda4d638164887d5c74c7bfdd
Author: Cathy Zhou <cathy.zhou@oracle.com>
Date:   Fri Apr 13 11:28:37 2018 -0700

    ixgbe: cleanup sparse warnings
    
    Sparse complains valid conversions between restricted types, force
    attribute is used to avoid those warnings.
    
    Signed-off-by: Cathy Zhou <cathy.zhou@oracle.com>
    Reviewed-by: Shannon Nelson <shannon.nelson@oracle.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>

diff --git a/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h b/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h
index fcae520647ce..1e6cf220f543 100644
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h
@@ -29,8 +29,8 @@ static inline int ixgbe_mat_prgm_sip(struct ixgbe_fdir_filter *input,
 				     union ixgbe_atr_input *mask,
 				     u32 val, u32 m)
 {
-	input->filter.formatted.src_ip[0] = val;
-	mask->formatted.src_ip[0] = m;
+	input->filter.formatted.src_ip[0] = (__force __be32)val;
+	mask->formatted.src_ip[0] = (__force __be32)m;
 	return 0;
 }
 
@@ -38,8 +38,8 @@ static inline int ixgbe_mat_prgm_dip(struct ixgbe_fdir_filter *input,
 				     union ixgbe_atr_input *mask,
 				     u32 val, u32 m)
 {
-	input->filter.formatted.dst_ip[0] = val;
-	mask->formatted.dst_ip[0] = m;
+	input->filter.formatted.dst_ip[0] = (__force __be32)val;
+	mask->formatted.dst_ip[0] = (__force __be32)m;
 	return 0;
 }
 
@@ -55,10 +55,10 @@ static inline int ixgbe_mat_prgm_ports(struct ixgbe_fdir_filter *input,
 				       union ixgbe_atr_input *mask,
 				       u32 val, u32 m)
 {
-	input->filter.formatted.src_port = val & 0xffff;
-	mask->formatted.src_port = m & 0xffff;
-	input->filter.formatted.dst_port = val >> 16;
-	mask->formatted.dst_port = m >> 16;
+	input->filter.formatted.src_port = (__force __be16)(val & 0xffff);
+	mask->formatted.src_port = (__force __be16)(m & 0xffff);
+	input->filter.formatted.dst_port = (__force __be16)(val >> 16);
+	mask->formatted.dst_port = (__force __be16)(m >> 16);
 
 	return 0;
 };

commit 51dce24bcdbdc493a87a17bcaf898b1f1d2fa600
Author: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
Date:   Thu Apr 26 08:08:09 2018 -0700

    net: intel: Cleanup the copyright/license headers
    
    After many years of having a ~30 line copyright and license header to our
    source files, we are finally able to reduce that to one line with the
    advent of the SPDX identifier.
    
    Also caught a few files missing the SPDX license identifier, so fixed
    them up.
    
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Acked-by: Shannon Nelson <shannon.nelson@oracle.com>
    Acked-by: Richard Cochran <richardcochran@gmail.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h b/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h
index 72446644f9fa..fcae520647ce 100644
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h
@@ -1,29 +1,5 @@
 /* SPDX-License-Identifier: GPL-2.0 */
-/*******************************************************************************
- *
- * Intel 10 Gigabit PCI Express Linux drive
- * Copyright(c) 2016 Intel Corporation.
- *
- * This program is free software; you can redistribute it and/or modify it
- * under the terms and conditions of the GNU General Public License,
- * version 2, as published by the Free Software Foundation.
- *
- * This program is distributed in the hope it will be useful, but WITHOUT
- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
- * more details.
- *
- * You should have received a copy of the GNU General Public License along
- * with this program.  If not, see <http://www.gnu.org/licenses/>.
- *
- * The full GNU General Public License is included in this distribution in
- * the file called "COPYING".
- *
- * Contact Information:
- * e1000-devel Mailing List <e1000-devel@lists.sourceforge.net>
- * Intel Corporation, 5200 N.E. Elam Young Parkway, Hillsboro, OR 97124-6497
- *
- ******************************************************************************/
+/* Copyright(c) 1999 - 2018 Intel Corporation. */
 
 #ifndef _IXGBE_MODEL_H_
 #define _IXGBE_MODEL_H_

commit ae06c70b135886d7d6252f3090146f01a3f3b80c
Author: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
Date:   Thu Mar 22 10:08:48 2018 -0700

    intel: add SPDX identifiers to all the Intel drivers
    
    Add the SPDX identifiers to all the Intel wired LAN driver files, as
    outlined in Documentation/process/license-rules.rst.
    
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h b/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h
index 538a1c5475b6..72446644f9fa 100644
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h
@@ -1,3 +1,4 @@
+/* SPDX-License-Identifier: GPL-2.0 */
 /*******************************************************************************
  *
  * Intel 10 Gigabit PCI Express Linux drive

commit 1ecedc926be12a91271e41913ebeba8cf32e9a6c
Author: Amritha Nambiar <amritha.nambiar@intel.com>
Date:   Fri May 6 19:09:51 2016 -0700

    ixgbe: Fix deleting link filters for cls_u32 offloads
    
    On deleting filters which are links to a child hash table, the filters
    in the child hash table must be cleared from the hardware if there
    is no link between the parent and child hash table.
    
    Verified with the following filters:
    
    Create a child hash table:
            handle 1: u32 divisor 1
    
    Link to the child hash table from parent hash table:
            handle 800:0:10 u32 ht 800: link 1: \
            offset at 0 mask 0f00 shift 6 plus 0 eat \
            match ip protocol 6 ff match ip dst 15.0.0.1/32
    
    Add filters into child hash table:
            handle 1:0:2 u32 ht 1: \
            match tcp src 22 ffff action drop
            handle 1:0:3 u32 ht 1: \
            match tcp src 33 ffff action drop
    
    Delete link filter from parent hash table:
            handle 800:0:10 u32
    
    Signed-off-by: Amritha Nambiar <amritha.nambiar@intel.com>
    Acked-by: Sridhar Samudrala <sridhar.samudrala@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>

diff --git a/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h b/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h
index a8bed3d887f7..538a1c5475b6 100644
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h
@@ -42,8 +42,12 @@ struct ixgbe_jump_table {
 	struct ixgbe_mat_field *mat;
 	struct ixgbe_fdir_filter *input;
 	union ixgbe_atr_input *mask;
+	u32 link_hdl;
+	unsigned long child_loc_map[32];
 };
 
+#define IXGBE_MAX_HW_ENTRIES 2045
+
 static inline int ixgbe_mat_prgm_sip(struct ixgbe_fdir_filter *input,
 				     union ixgbe_atr_input *mask,
 				     u32 val, u32 m)

commit 1cdaaf5405ba910275fca720cab7f24a48fbdb14
Author: Amritha Nambiar <amritha.nambiar@intel.com>
Date:   Thu Apr 14 19:08:53 2016 -0400

    ixgbe: Match on multiple headers for cls_u32 offloads
    
    Adds support to set filters with multiple header fields (L3,L4)to match on.
    This is achieved in the following order:
    1. Create a leaf hash table for the next header.
    2. Create a link to the leaf hash table from the base hash table with
       matches on next header type and current header fields.
    3. Add filter in leaf hash table with match on next header fields and
       action.
    
    Verified with the following filters :
    
    Match TCP and DIP:
            handle 1: u32 divisor 1
            u32 ht 800: order 1 link 1: \
            offset at 0 mask 0f00 shift 6 plus 0 eat \
            match ip protocol 6 ff match ip dst 10.0.0.1/32
            match tcp src 28 ffff action drop
    
    Delete the filter:
    
    Match on DIP, SIP, UDP (SPort, DPort):
            handle 2: u32 divisor 1
            u32 ht 800: order 2 link 2: \
            offset at 0 mask 0f00 shift 6 plus 0 eat \
            match ip dst 15.0.0.2/32 match ip protocol 17 ff \
            match ip src 15.0.0.1/32
            match udp src 30 ffff match udp dst 32 ffff action drop
    
    Signed-off-by: Amritha Nambiar <amritha.nambiar@intel.com>
    Acked-by: Sridhar Samudrala <sridhar.samudrala@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>

diff --git a/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h b/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h
index 60adde55a8c3..a8bed3d887f7 100644
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h
@@ -38,6 +38,12 @@ struct ixgbe_mat_field {
 	unsigned int type;
 };
 
+struct ixgbe_jump_table {
+	struct ixgbe_mat_field *mat;
+	struct ixgbe_fdir_filter *input;
+	union ixgbe_atr_input *mask;
+};
+
 static inline int ixgbe_mat_prgm_sip(struct ixgbe_fdir_filter *input,
 				     union ixgbe_atr_input *mask,
 				     u32 val, u32 m)

commit 4ae7834221679bff2d7f75ba80a20673cecb38ad
Author: Amritha Nambiar <amritha.nambiar@intel.com>
Date:   Wed Mar 9 18:32:16 2016 -0500

    ixgbe: Extend cls_u32 offload to support UDP headers
    
    Added support to match on UDP fields in the transport layer.
    Extended core logic to support multiple headers.
    
    Verified with the following filters :
    
            handle 1: u32 divisor 1
            u32 ht 800: order 1 link 1: \
            offset at 0 mask 0f00 shift 6 plus 0 eat match ip protocol 6 ff
            u32 ht 1: order 2 \
            match tcp src 1024 ffff match tcp dst 23 ffff action drop
            handle 2: u32 divisor 1
            u32 ht 800: order 3 link 2: \
            offset at 0 mask 0f00 shift 6 plus 0 eat match ip protocol 17 ff
            u32 ht 2: order 4 \
            match udp src 1025 ffff match udp dst 24 ffff action drop
    
    Signed-off-by: Amritha Nambiar <amritha.nambiar@intel.com>
    Acked-by: John Fastabend <john.r.fastabend@intel.com>
    Acked-by: Sridhar Samudrala <sridhar.samudrala@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>

diff --git a/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h b/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h
index 74c53ad9d268..60adde55a8c3 100644
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h
@@ -82,6 +82,12 @@ static struct ixgbe_mat_field ixgbe_tcp_fields[] = {
 	{ .val = NULL } /* terminal node */
 };
 
+static struct ixgbe_mat_field ixgbe_udp_fields[] = {
+	{.off = 0, .val = ixgbe_mat_prgm_ports,
+	 .type = IXGBE_ATR_FLOW_TYPE_UDPV4},
+	{ .val = NULL } /* terminal node */
+};
+
 struct ixgbe_nexthdr {
 	/* offset, shift, and mask of position to next header */
 	unsigned int o;
@@ -98,6 +104,8 @@ struct ixgbe_nexthdr {
 static struct ixgbe_nexthdr ixgbe_ipv4_jumps[] = {
 	{ .o = 0, .s = 6, .m = 0xf,
 	  .off = 8, .val = 0x600, .mask = 0xff00, .jump = ixgbe_tcp_fields},
+	{ .o = 0, .s = 6, .m = 0xf,
+	  .off = 8, .val = 0x1100, .mask = 0xff00, .jump = ixgbe_udp_fields},
 	{ .jump = NULL } /* terminal node */
 };
 #endif /* _IXGBE_MODEL_H_ */

commit b5aea3de88e526a46839b7ccf049fab4f8ad7a4b
Author: Sridhar Samudrala <sridhar.samudrala@intel.com>
Date:   Mon Mar 7 09:41:49 2016 -0800

    ixgbe: Fix cls_u32 offload support for L4 ports
    
    Fix support for 16 bit source/dest port matches in ixgbe model.
    u32 uses a single 32-bit key value for both source and destination ports
    starting at offset 0. So replace the 2 functions with a single function
    that takes this key value/mask to program both source and dest ports.
    
    Verified with the following filter:
    
     #tc qdisc add dev p4p1 ingress
     #tc filter add dev p4p1 parent ffff: protocol ip prio 99 \
            handle 1: u32 divisor 1
     #tc filter add dev p4p1 parent ffff: protocol ip prio 99 \
            handle 800:0:10 u32 ht 800: link 1: \
            offset at 0 mask 0f00 shift 6 plus 0 eat match ip protocol 6 ff
     #tc filter add dev p4p1 parent ffff: protocol ip prio 99 \
            handle 1:0:10 u32 ht 1: \
            match tcp src 1024 ffff match tcp dst 80 ffff action drop
     #tc filter add dev p4p1 parent ffff: protocol ip prio 99 \
            handle 1:0:11 u32 ht 1: \
            match tcp src 1025 ffff action drop
     #tc filter add dev p4p1 parent ffff: protocol ip prio 99 \
            handle 1:0:12 u32 ht 1: \
            match tcp dst 81 ffff action drop
    
    Signed-off-by: Sridhar Samudrala <sridhar.samudrala@intel.com>
    Acked-by: John Fastabend <john.r.fastabend@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>

diff --git a/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h b/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h
index 61f729073978..74c53ad9d268 100644
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h
@@ -64,28 +64,20 @@ static struct ixgbe_mat_field ixgbe_ipv4_fields[] = {
 	{ .val = NULL } /* terminal node */
 };
 
-static inline int ixgbe_mat_prgm_sport(struct ixgbe_fdir_filter *input,
+static inline int ixgbe_mat_prgm_ports(struct ixgbe_fdir_filter *input,
 				       union ixgbe_atr_input *mask,
 				       u32 val, u32 m)
 {
 	input->filter.formatted.src_port = val & 0xffff;
 	mask->formatted.src_port = m & 0xffff;
-	return 0;
-};
+	input->filter.formatted.dst_port = val >> 16;
+	mask->formatted.dst_port = m >> 16;
 
-static inline int ixgbe_mat_prgm_dport(struct ixgbe_fdir_filter *input,
-				       union ixgbe_atr_input *mask,
-				       u32 val, u32 m)
-{
-	input->filter.formatted.dst_port = val & 0xffff;
-	mask->formatted.dst_port = m & 0xffff;
 	return 0;
 };
 
 static struct ixgbe_mat_field ixgbe_tcp_fields[] = {
-	{.off = 0, .val = ixgbe_mat_prgm_sport,
-	 .type = IXGBE_ATR_FLOW_TYPE_TCPV4},
-	{.off = 2, .val = ixgbe_mat_prgm_dport,
+	{.off = 0, .val = ixgbe_mat_prgm_ports,
 	 .type = IXGBE_ATR_FLOW_TYPE_TCPV4},
 	{ .val = NULL } /* terminal node */
 };

commit ebd83ad818d2d4502d5e343388000d5dc829b7a8
Author: Sridhar Samudrala <sridhar.samudrala@intel.com>
Date:   Mon Mar 7 09:41:48 2016 -0800

    ixgbe: Fix cls_u32 offload support for fields with masks
    
    Remove the incorrect check for mask in ixgbe_configure_clsu32 and
    drop the 'mask' field that is not required in struct ixgbe_mat_field
    
    Verified with the following filters:
    
     #tc qdisc add dev p4p1 ingress
     #tc filter add dev p4p1 parent ffff: protocol ip prio 99 \
            handle 800:0:1 u32 ht 800: \
            match ip dst 10.0.0.1/8 match ip src 10.0.0.2/8 action drop
     #tc filter add dev p4p1 parent ffff: protocol ip prio 99 \
            handle 800:0:2 u32 ht 800: \
            match ip dst 11.0.0.1/16 match ip src 11.0.0.2/16 action drop
     #tc filter add dev p4p1 parent ffff: protocol ip prio 99 \
            handle 800:0:3 u32 ht 800: \
            match ip dst 12.0.0.1/24 match ip src 12.0.0.2/24 action drop
     #tc filter add dev p4p1 parent ffff: protocol ip prio 99 \
            handle 800:0:4 u32 ht 800: \
            match ip dst 13.0.0.1/32 match ip src 13.0.0.2/32 action drop
    
    Signed-off-by: Sridhar Samudrala <sridhar.samudrala@intel.com>
    Acked-by: John Fastabend <john.r.fastabend@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>

diff --git a/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h b/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h
index ce48872d4782..61f729073978 100644
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h
@@ -32,7 +32,6 @@
 
 struct ixgbe_mat_field {
 	unsigned int off;
-	unsigned int mask;
 	int (*val)(struct ixgbe_fdir_filter *input,
 		   union ixgbe_atr_input *mask,
 		   u32 val, u32 m);
@@ -58,9 +57,9 @@ static inline int ixgbe_mat_prgm_dip(struct ixgbe_fdir_filter *input,
 }
 
 static struct ixgbe_mat_field ixgbe_ipv4_fields[] = {
-	{ .off = 12, .mask = -1, .val = ixgbe_mat_prgm_sip,
+	{ .off = 12, .val = ixgbe_mat_prgm_sip,
 	  .type = IXGBE_ATR_FLOW_TYPE_IPV4},
-	{ .off = 16, .mask = -1, .val = ixgbe_mat_prgm_dip,
+	{ .off = 16, .val = ixgbe_mat_prgm_dip,
 	  .type = IXGBE_ATR_FLOW_TYPE_IPV4},
 	{ .val = NULL } /* terminal node */
 };
@@ -84,9 +83,9 @@ static inline int ixgbe_mat_prgm_dport(struct ixgbe_fdir_filter *input,
 };
 
 static struct ixgbe_mat_field ixgbe_tcp_fields[] = {
-	{.off = 0, .mask = 0xffff, .val = ixgbe_mat_prgm_sport,
+	{.off = 0, .val = ixgbe_mat_prgm_sport,
 	 .type = IXGBE_ATR_FLOW_TYPE_TCPV4},
-	{.off = 2, .mask = 0xffff, .val = ixgbe_mat_prgm_dport,
+	{.off = 2, .val = ixgbe_mat_prgm_dport,
 	 .type = IXGBE_ATR_FLOW_TYPE_TCPV4},
 	{ .val = NULL } /* terminal node */
 };

commit a92265ce1cea3832a47103ae16afa328a396e9af
Author: John Fastabend <john.fastabend@gmail.com>
Date:   Wed Feb 17 14:35:23 2016 -0800

    ixgbe: fix dates on header of ixgbe_model.h
    
    Fixes: 9d35cf062e05 ("net: ixgbe: add minimal parser details for ixgbe")
    Reported-by: Mark Rustad <mark.d.rustad@intel.com>
    Signed-off-by: John Fastabend <john.r.fastabend@intel.com>
    Acked-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h b/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h
index 62ea2e712760..ce48872d4782 100644
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h
@@ -1,7 +1,7 @@
 /*******************************************************************************
  *
  * Intel 10 Gigabit PCI Express Linux drive
- * Copyright(c) 2013 - 2015 Intel Corporation.
+ * Copyright(c) 2016 Intel Corporation.
  *
  * This program is free software; you can redistribute it and/or modify it
  * under the terms and conditions of the GNU General Public License,

commit fa477f4cb3de7bdd3899029803ebfcf269ba8c85
Author: John Fastabend <john.fastabend@gmail.com>
Date:   Wed Feb 17 14:34:53 2016 -0800

    ixgbe: use u32 instead of __u32 in model header
    
    I incorrectly used __u32 types where we should be using u32 types when
    I added the ixgbe_model.h file.
    
    Fixes: 9d35cf062e05 ("net: ixgbe: add minimal parser details for ixgbe")
    Suggested-by: Jamal Hadi Salim <jhs@mojatatu.com>
    Signed-off-by: John Fastabend <john.r.fastabend@intel.com>
    Acked-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h b/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h
index 43ebec4362f5..62ea2e712760 100644
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h
@@ -35,13 +35,13 @@ struct ixgbe_mat_field {
 	unsigned int mask;
 	int (*val)(struct ixgbe_fdir_filter *input,
 		   union ixgbe_atr_input *mask,
-		   __u32 val, __u32 m);
+		   u32 val, u32 m);
 	unsigned int type;
 };
 
 static inline int ixgbe_mat_prgm_sip(struct ixgbe_fdir_filter *input,
 				     union ixgbe_atr_input *mask,
-				     __u32 val, __u32 m)
+				     u32 val, u32 m)
 {
 	input->filter.formatted.src_ip[0] = val;
 	mask->formatted.src_ip[0] = m;
@@ -50,7 +50,7 @@ static inline int ixgbe_mat_prgm_sip(struct ixgbe_fdir_filter *input,
 
 static inline int ixgbe_mat_prgm_dip(struct ixgbe_fdir_filter *input,
 				     union ixgbe_atr_input *mask,
-				     __u32 val, __u32 m)
+				     u32 val, u32 m)
 {
 	input->filter.formatted.dst_ip[0] = val;
 	mask->formatted.dst_ip[0] = m;
@@ -67,7 +67,7 @@ static struct ixgbe_mat_field ixgbe_ipv4_fields[] = {
 
 static inline int ixgbe_mat_prgm_sport(struct ixgbe_fdir_filter *input,
 				       union ixgbe_atr_input *mask,
-				       __u32 val, __u32 m)
+				       u32 val, u32 m)
 {
 	input->filter.formatted.src_port = val & 0xffff;
 	mask->formatted.src_port = m & 0xffff;
@@ -76,7 +76,7 @@ static inline int ixgbe_mat_prgm_sport(struct ixgbe_fdir_filter *input,
 
 static inline int ixgbe_mat_prgm_dport(struct ixgbe_fdir_filter *input,
 				       union ixgbe_atr_input *mask,
-				       __u32 val, __u32 m)
+				       u32 val, u32 m)
 {
 	input->filter.formatted.dst_port = val & 0xffff;
 	mask->formatted.dst_port = m & 0xffff;
@@ -94,12 +94,12 @@ static struct ixgbe_mat_field ixgbe_tcp_fields[] = {
 struct ixgbe_nexthdr {
 	/* offset, shift, and mask of position to next header */
 	unsigned int o;
-	__u32 s;
-	__u32 m;
+	u32 s;
+	u32 m;
 	/* match criteria to make this jump*/
 	unsigned int off;
-	__u32 val;
-	__u32 mask;
+	u32 val;
+	u32 mask;
 	/* location of jump to make */
 	struct ixgbe_mat_field *jump;
 };

commit 9d35cf062e05be8b8b2b7dbc943cd95352cd90cb
Author: John Fastabend <john.fastabend@gmail.com>
Date:   Tue Feb 16 21:18:28 2016 -0800

    net: ixgbe: add minimal parser details for ixgbe
    
    This adds an ixgbe data structure that is used to determine what
    headers:fields can be matched and in what order they are supported.
    
    For hardware devices this can be a bit tricky because typically
    only pre-programmed (firmware, ucode, rtl) parse graphs will be
    supported and we don't yet have an interface to change these from
    the OS. So its sort of a you get whatever your friendly vendor
    provides affair at the moment.
    
    In the future we can add the get routines and set routines to
    update this data structure. One interesting thing to note here
    is the data structure here identifies ethernet, ip, and tcp
    fields without having to hardcode them as enumerations or use
    other identifiers.
    
    Signed-off-by: John Fastabend <john.r.fastabend@intel.com>
    Acked-by: Jamal Hadi Salim <jhs@mojatatu.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h b/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h
new file mode 100644
index 000000000000..43ebec4362f5
--- /dev/null
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_model.h
@@ -0,0 +1,112 @@
+/*******************************************************************************
+ *
+ * Intel 10 Gigabit PCI Express Linux drive
+ * Copyright(c) 2013 - 2015 Intel Corporation.
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms and conditions of the GNU General Public License,
+ * version 2, as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ * The full GNU General Public License is included in this distribution in
+ * the file called "COPYING".
+ *
+ * Contact Information:
+ * e1000-devel Mailing List <e1000-devel@lists.sourceforge.net>
+ * Intel Corporation, 5200 N.E. Elam Young Parkway, Hillsboro, OR 97124-6497
+ *
+ ******************************************************************************/
+
+#ifndef _IXGBE_MODEL_H_
+#define _IXGBE_MODEL_H_
+
+#include "ixgbe.h"
+#include "ixgbe_type.h"
+
+struct ixgbe_mat_field {
+	unsigned int off;
+	unsigned int mask;
+	int (*val)(struct ixgbe_fdir_filter *input,
+		   union ixgbe_atr_input *mask,
+		   __u32 val, __u32 m);
+	unsigned int type;
+};
+
+static inline int ixgbe_mat_prgm_sip(struct ixgbe_fdir_filter *input,
+				     union ixgbe_atr_input *mask,
+				     __u32 val, __u32 m)
+{
+	input->filter.formatted.src_ip[0] = val;
+	mask->formatted.src_ip[0] = m;
+	return 0;
+}
+
+static inline int ixgbe_mat_prgm_dip(struct ixgbe_fdir_filter *input,
+				     union ixgbe_atr_input *mask,
+				     __u32 val, __u32 m)
+{
+	input->filter.formatted.dst_ip[0] = val;
+	mask->formatted.dst_ip[0] = m;
+	return 0;
+}
+
+static struct ixgbe_mat_field ixgbe_ipv4_fields[] = {
+	{ .off = 12, .mask = -1, .val = ixgbe_mat_prgm_sip,
+	  .type = IXGBE_ATR_FLOW_TYPE_IPV4},
+	{ .off = 16, .mask = -1, .val = ixgbe_mat_prgm_dip,
+	  .type = IXGBE_ATR_FLOW_TYPE_IPV4},
+	{ .val = NULL } /* terminal node */
+};
+
+static inline int ixgbe_mat_prgm_sport(struct ixgbe_fdir_filter *input,
+				       union ixgbe_atr_input *mask,
+				       __u32 val, __u32 m)
+{
+	input->filter.formatted.src_port = val & 0xffff;
+	mask->formatted.src_port = m & 0xffff;
+	return 0;
+};
+
+static inline int ixgbe_mat_prgm_dport(struct ixgbe_fdir_filter *input,
+				       union ixgbe_atr_input *mask,
+				       __u32 val, __u32 m)
+{
+	input->filter.formatted.dst_port = val & 0xffff;
+	mask->formatted.dst_port = m & 0xffff;
+	return 0;
+};
+
+static struct ixgbe_mat_field ixgbe_tcp_fields[] = {
+	{.off = 0, .mask = 0xffff, .val = ixgbe_mat_prgm_sport,
+	 .type = IXGBE_ATR_FLOW_TYPE_TCPV4},
+	{.off = 2, .mask = 0xffff, .val = ixgbe_mat_prgm_dport,
+	 .type = IXGBE_ATR_FLOW_TYPE_TCPV4},
+	{ .val = NULL } /* terminal node */
+};
+
+struct ixgbe_nexthdr {
+	/* offset, shift, and mask of position to next header */
+	unsigned int o;
+	__u32 s;
+	__u32 m;
+	/* match criteria to make this jump*/
+	unsigned int off;
+	__u32 val;
+	__u32 mask;
+	/* location of jump to make */
+	struct ixgbe_mat_field *jump;
+};
+
+static struct ixgbe_nexthdr ixgbe_ipv4_jumps[] = {
+	{ .o = 0, .s = 6, .m = 0xf,
+	  .off = 8, .val = 0x600, .mask = 0xff00, .jump = ixgbe_tcp_fields},
+	{ .jump = NULL } /* terminal node */
+};
+#endif /* _IXGBE_MODEL_H_ */
