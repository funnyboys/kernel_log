commit 13209a8f7304a34158f4366e8ea07a1965c05ac7
Merge: 316107119f47 98790bbac4db
Author: David S. Miller <davem@davemloft.net>
Date:   Sun May 24 13:47:27 2020 -0700

    Merge git://git.kernel.org/pub/scm/linux/kernel/git/netdev/net
    
    The MSCC bug fix in 'net' had to be slightly adjusted because the
    register accesses are done slightly differently in net-next.
    
    Signed-off-by: David S. Miller <davem@davemloft.net>

commit b4024c9e5c57902155d3b5e7de482e245f492bff
Author: Claudiu Manoil <claudiu.manoil@nxp.com>
Date:   Fri May 22 11:54:34 2020 +0300

    felix: Fix initialization of ioremap resources
    
    The caller of devm_ioremap_resource(), either accidentally
    or by wrong assumption, is writing back derived resource data
    to global static resource initialization tables that should
    have been constant.  Meaning that after it computes the final
    physical start address it saves the address for no reason
    in the static tables.  This doesn't affect the first driver
    probing after reboot, but it breaks consecutive driver reloads
    (i.e. driver unbind & bind) because the initialization tables
    no longer have the correct initial values.  So the next probe()
    will map the device registers to wrong physical addresses,
    causing ARM SError async exceptions.
    This patch fixes all of the above.
    
    Fixes: 56051948773e ("net: dsa: ocelot: add driver for Felix switch family")
    Signed-off-by: Claudiu Manoil <claudiu.manoil@nxp.com>
    Reviewed-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Tested-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/dsa/ocelot/felix.h b/drivers/net/dsa/ocelot/felix.h
index 9af106513e53..730a8a90e1f7 100644
--- a/drivers/net/dsa/ocelot/felix.h
+++ b/drivers/net/dsa/ocelot/felix.h
@@ -8,9 +8,9 @@
 
 /* Platform-specific information */
 struct felix_info {
-	struct resource			*target_io_res;
-	struct resource			*port_io_res;
-	struct resource			*imdio_res;
+	const struct resource		*target_io_res;
+	const struct resource		*port_io_res;
+	const struct resource		*imdio_res;
 	const struct reg_field		*regfields;
 	const u32 *const		*map;
 	const struct ocelot_ops		*ops;

commit de143c0e274b95ba0513acf8e60b3b87d24335fa
Author: Xiaoliang Yang <xiaoliang.yang_1@nxp.com>
Date:   Wed May 13 10:25:09 2020 +0800

    net: dsa: felix: Configure Time-Aware Scheduler via taprio offload
    
    Ocelot VSC9959 switch supports time-based egress shaping in hardware
    according to IEEE 802.1Qbv. This patch add support for TAS configuration
    on egress port of VSC9959 switch.
    
    Felix driver is an instance of Ocelot family, with a DSA front-end. The
    patch uses tc taprio hardware offload to setup TAS set function on felix
    driver.
    
    Signed-off-by: Xiaoliang Yang <xiaoliang.yang_1@nxp.com>
    Reviewed-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/dsa/ocelot/felix.h b/drivers/net/dsa/ocelot/felix.h
index b94386fa8d63..352f7b940af7 100644
--- a/drivers/net/dsa/ocelot/felix.h
+++ b/drivers/net/dsa/ocelot/felix.h
@@ -20,6 +20,7 @@ struct felix_info {
 	const struct ocelot_stat_layout	*stats_layout;
 	unsigned int			num_stats;
 	int				num_ports;
+	int                             num_tx_queues;
 	struct vcap_field		*vcap_is2_keys;
 	struct vcap_field		*vcap_is2_actions;
 	const struct vcap_props		*vcap;
@@ -35,6 +36,10 @@ struct felix_info {
 				  struct phylink_link_state *state);
 	int	(*prevalidate_phy_mode)(struct ocelot *ocelot, int port,
 					phy_interface_t phy_mode);
+	int	(*port_setup_tc)(struct dsa_switch *ds, int port,
+				 enum tc_setup_type type, void *type_data);
+	void	(*port_sched_speed_set)(struct ocelot *ocelot, int port,
+					u32 speed);
 };
 
 extern struct felix_info		felix_info_vsc9959;

commit 3793faad7b5b730941b2efbc252d14374b60843a
Merge: ae1804de93f6 a811c1fa0a02
Author: David S. Miller <davem@davemloft.net>
Date:   Wed May 6 22:10:13 2020 -0700

    Merge git://git.kernel.org/pub/scm/linux/kernel/git/netdev/net
    
    Conflicts were all overlapping changes.
    
    Signed-off-by: David S. Miller <davem@davemloft.net>

commit 21ce7f3e16fbf89faaf149cfe0f730edfc553914
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Mon May 4 01:20:26 2020 +0300

    net: dsa: ocelot: the MAC table on Felix is twice as large
    
    When running 'bridge fdb dump' on Felix, sometimes learnt and static MAC
    addresses would appear, sometimes they wouldn't.
    
    Turns out, the MAC table has 4096 entries on VSC7514 (Ocelot) and 8192
    entries on VSC9959 (Felix), so the existing code from the Ocelot common
    library only dumped half of Felix's MAC table. They are both organized
    as a 4-way set-associative TCAM, so we just need a single variable
    indicating the correct number of rows.
    
    Fixes: 56051948773e ("net: dsa: ocelot: add driver for Felix switch family")
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/dsa/ocelot/felix.h b/drivers/net/dsa/ocelot/felix.h
index 82d46f260041..9af106513e53 100644
--- a/drivers/net/dsa/ocelot/felix.h
+++ b/drivers/net/dsa/ocelot/felix.h
@@ -15,6 +15,7 @@ struct felix_info {
 	const u32 *const		*map;
 	const struct ocelot_ops		*ops;
 	int				shared_queue_sz;
+	int				num_mact_rows;
 	const struct ocelot_stat_layout	*stats_layout;
 	unsigned int			num_stats;
 	int				num_ports;

commit 3c7b51bd39b2078870baeeb98ad8190f447c2ed2
Author: Xiaoliang Yang <xiaoliang.yang_1@nxp.com>
Date:   Tue Apr 21 21:13:47 2020 +0300

    net: dsa: felix: allow flooding for all traffic classes
    
    Right now it can be seen that the VSC9959 (Felix) switch will not flood
    frames if they have a VLAN tag with a PCP of 1-7 (nonzero).
    
    It turns out that Felix is quite different from its cousin, Ocelot, in
    that frame flooding can be allowed/denied per traffic class. Where
    Ocelot has 1 instance of the ANA_FLOODING register, Felix has 8.
    
    The approach that this driver is going to take is "thanks, but no
    thanks". We have no use case of limiting the flooding domain based on
    traffic class, so we just want to allow packets to be flooded, no matter
    what traffic class they have.
    
    So we copy the line of code from ocelot.c which does the one-shot
    initialization of the flooding PGIDs, and we add it to felix.c as well -
    except replicated 8 times.
    
    Signed-off-by: Xiaoliang Yang <xiaoliang.yang_1@nxp.com>
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/dsa/ocelot/felix.h b/drivers/net/dsa/ocelot/felix.h
index 82d46f260041..2ad793c0e1df 100644
--- a/drivers/net/dsa/ocelot/felix.h
+++ b/drivers/net/dsa/ocelot/felix.h
@@ -5,6 +5,7 @@
 #define _MSCC_FELIX_H
 
 #define ocelot_to_felix(o)		container_of((o), struct felix, ocelot)
+#define FELIX_NUM_TC			8
 
 /* Platform-specific information */
 struct felix_info {

commit 07d985eef07348345870f1062797852cb4489b83
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Sat Feb 29 16:31:14 2020 +0200

    net: dsa: felix: Wire up the ocelot cls_flower methods
    
    Export the cls_flower methods from the ocelot driver and hook them up to
    the DSA passthrough layer.
    
    Tables for the VCAP IS2 parameters, as well as half key packing (field
    offsets and lengths) need to be defined for the VSC9959 core, as they
    are different from Ocelot, mainly due to the different port count.
    
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/dsa/ocelot/felix.h b/drivers/net/dsa/ocelot/felix.h
index 3a7580015b62..82d46f260041 100644
--- a/drivers/net/dsa/ocelot/felix.h
+++ b/drivers/net/dsa/ocelot/felix.h
@@ -18,6 +18,9 @@ struct felix_info {
 	const struct ocelot_stat_layout	*stats_layout;
 	unsigned int			num_stats;
 	int				num_ports;
+	struct vcap_field		*vcap_is2_keys;
+	struct vcap_field		*vcap_is2_actions;
+	const struct vcap_props		*vcap;
 	int				switch_pci_bar;
 	int				imdio_pci_bar;
 	int	(*mdio_bus_alloc)(struct ocelot *ocelot);

commit bdeced75b13f8a0fc8e32b70e517a8dbb7d51738
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Mon Jan 6 03:34:17 2020 +0200

    net: dsa: felix: Add PCS operations for PHYLINK
    
    Layerscape SoCs traditionally expose the SerDes configuration/status for
    Ethernet protocols (PCS for SGMII/USXGMII/10GBase-R etc etc) in a register
    format that is compatible with clause 22 or clause 45 (depending on
    SerDes protocol). Each MAC has its own internal MDIO bus on which there
    is one or more of these PCS's, responding to commands at a configurable
    PHY address. The per-port internal MDIO bus (which is just for PCSs) is
    totally separate and has nothing to do with the dedicated external MDIO
    controller (which is just for PHYs), but the register map for the MDIO
    controller is the same.
    
    The VSC9959 (Felix) switch instantiated in the LS1028A is integrated
    in hardware with the ENETC PCS of its DSA master, and reuses its MDIO
    controller driver, so Felix has been made to depend on it in Kconfig.
    
     +------------------------------------------------------------------------+
     |                   +--------+ GMII (typically disabled via RCW)         |
     | ENETC PCI         |  ENETC |--------------------------+                |
     | Root Complex      | port 3 |-----------------------+  |                |
     | Integrated        +--------+                       |  |                |
     | Endpoint                                           |  |                |
     |                   +--------+ 2.5G GMII             |  |                |
     |                   |  ENETC |--------------+        |  |                |
     |                   | port 2 |-----------+  |        |  |                |
     |                   +--------+           |  |        |  |                |
     |                                     +--------+  +--------+             |
     |                                     |  Felix |  |  Felix |             |
     |                                     | port 4 |  | port 5 |             |
     |                                     +--------+  +--------+             |
     |                                                                        |
     | +--------+  +--------+  +--------+  +--------+  +--------+  +--------+ |
     | |  ENETC |  |  ENETC |  |  Felix |  |  Felix |  |  Felix |  |  Felix | |
     | | port 0 |  | port 1 |  | port 0 |  | port 1 |  | port 2 |  | port 3 | |
     +------------------------------------------------------------------------+
     |    ||||  SerDes |          ||||        ||||        ||||        ||||    |
     | +--------+block |       +--------------------------------------------+ |
     | |  ENETC |      |       |       ENETC port 2 internal MDIO bus       | |
     | | port 0 |      |       |  PCS         PCS          PCS        PCS   | |
     | |   PCS  |      |       |   0           1            2          3    | |
     +-----------------|------------------------------------------------------+
            v          v           v           v            v          v
         SGMII/      RGMII    QSGMII/QSXGMII/4xSGMII/4x1000Base-X/4x2500Base-X
        USXGMII/   (bypasses
      1000Base-X/   SerDes)
      2500Base-X
    
    In the LS1028A SoC described above, the VSC9959 Felix switch is PF5 of
    the ENETC root complex, and has 2 BARs:
    - BAR 4: the switch's effective registers
    - BAR 0: the MDIO controller register map lended from ENETC port 2
             (PF2), for accessing its associated PCS's.
    
    This explanation is necessary because the patch does some renaming
    "pci_bar" -> "switch_pci_bar" for clarity, which would otherwise appear
    a bit obtuse.
    
    The fact that the internal MDIO bus is "borrowed" is relevant because
    the register map is found in PF5 (the switch) but it triggers an access
    fault if PF2 (the ENETC DSA master) is not enabled. This is not treated
    in any way (and I don't think it can be treated).
    
    All of this is so SoC-specific, that it was contained as much as
    possible in the platform-integration file felix_vsc9959.c.
    
    We need to parse and pre-validate the device tree because of 2 reasons:
    - The PHY mode (SerDes protocol) cannot change at runtime due to SoC
      design.
    - There is a circular dependency in that we need to know what clause the
      PCS speaks in order to find it on the internal MDIO bus. But the
      clause of the PCS depends on what phy-mode it is configured for.
    
    The goal of this patch is to make steps towards removing the bootloader
    dependency for SGMII PCS pre-configuration, as well as to add support
    for monitoring the in-band SGMII AN between the PCS and the system-side
    link partner (PHY or other MAC).
    
    In practice the bootloader dependency is not completely removed. U-Boot
    pre-programs the PHY address at which each PCS can be found on the
    internal MDIO bus (MDEV_PORT). This is needed because the PCS of each
    port has the same out-of-reset PHY address of zero. The SerDes register
    for changing MDEV_PORT is pretty deep in the SoC (outside the addresses
    of the ENETC PCI BARs) and therefore inaccessible to us from here.
    
    Felix VSC9959 and Ocelot VSC7514 are integrated very differently in
    their respective SoCs, and for that reason Felix does not use the Ocelot
    core library for PHYLINK. On one hand we don't want to impose the
    fixed phy-mode limitation to Ocelot, and on the other hand Felix doesn't
    need to force the MAC link speed the way Ocelot does, since the MAC is
    connected to the PCS through a fixed GMII, and the PCS is the one who
    does the rate adaptation at lower link speeds, which the MAC does not
    even need to know about. In fact changing the GMII speed for Felix
    irrecoverably breaks transmission through that port until a reset.
    
    The pair with ENETC port 3 and Felix port 5 is optional and doesn't
    support tagging. When we enable it, swp5 is a regular slave port, albeit
    an internal one. The trouble is that it doesn't work, and that is
    because the DSA PHYLIB adaptation layer doesn't treat fixed-link slave
    ports. So that is yet another reason for wanting to convert Felix to the
    native PHYLINK API.
    
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/dsa/ocelot/felix.h b/drivers/net/dsa/ocelot/felix.h
index 204296e51d0c..3a7580015b62 100644
--- a/drivers/net/dsa/ocelot/felix.h
+++ b/drivers/net/dsa/ocelot/felix.h
@@ -10,6 +10,7 @@
 struct felix_info {
 	struct resource			*target_io_res;
 	struct resource			*port_io_res;
+	struct resource			*imdio_res;
 	const struct reg_field		*regfields;
 	const u32 *const		*map;
 	const struct ocelot_ops		*ops;
@@ -17,7 +18,18 @@ struct felix_info {
 	const struct ocelot_stat_layout	*stats_layout;
 	unsigned int			num_stats;
 	int				num_ports;
-	int				pci_bar;
+	int				switch_pci_bar;
+	int				imdio_pci_bar;
+	int	(*mdio_bus_alloc)(struct ocelot *ocelot);
+	void	(*mdio_bus_free)(struct ocelot *ocelot);
+	void	(*pcs_init)(struct ocelot *ocelot, int port,
+			    unsigned int link_an_mode,
+			    const struct phylink_link_state *state);
+	void	(*pcs_an_restart)(struct ocelot *ocelot, int port);
+	void	(*pcs_link_state)(struct ocelot *ocelot, int port,
+				  struct phylink_link_state *state);
+	int	(*prevalidate_phy_mode)(struct ocelot *ocelot, int port,
+					phy_interface_t phy_mode);
 };
 
 extern struct felix_info		felix_info_vsc9959;
@@ -32,6 +44,8 @@ struct felix {
 	struct pci_dev			*pdev;
 	struct felix_info		*info;
 	struct ocelot			ocelot;
+	struct mii_bus			*imdio;
+	struct phy_device		**pcs;
 };
 
 #endif

commit 56051948773eeb4224fbda88102e891d1ad5cefd
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Thu Nov 14 17:03:30 2019 +0200

    net: dsa: ocelot: add driver for Felix switch family
    
    This supports an Ethernet switching core from Vitesse / Microsemi /
    Microchip (VSC9959) which is part of the Ocelot family (a brand name),
    and whose code name is Felix. The switch can be (and is) integrated on
    different SoCs as a PCIe endpoint device.
    
    The functionality is provided by the core of the Ocelot switch driver
    (drivers/net/ethernet/mscc). In this regard, the current driver is an
    instance of Microsemi's Ocelot core driver, with a DSA front-end. It
    inherits its name from VSC9959's code name, to distinguish itself from
    the switchdev ocelot driver.
    
    The patch adds the logic for probing a PCI device and defines the
    register map for the VSC9959 switch core, since it has some differences
    in register addresses and bitfield mappings compared to the other Ocelot
    switches (VSC7511, VSC7512, VSC7513, VSC7514).
    
    The Felix driver declares the register map as part of the "instance
    table". Currently the VSC9959 inside NXP LS1028A is the only instance,
    but presumably it can support other switches in the Ocelot family, when
    used in DSA mode (Linux running on the external CPU, and not on the
    embedded MIPS).
    
    In a few cases, some h/w operations have to be done differently on
    VSC9959 due to missing bitfields.  This is the case for the switch core
    reset and init.  Because for this operation Ocelot uses some bits that
    are not present on Felix, the latter has to use a register from the
    global registers block (GCB) instead.
    
    Although it is a PCI driver, it relies on DT bindings for compatibility
    with DSA (CPU port link, PHY library). It does not have any custom
    device tree bindings, since we would like to minimize its dependency on
    device tree though.
    
    Signed-off-by: Claudiu Manoil <claudiu.manoil@nxp.com>
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/dsa/ocelot/felix.h b/drivers/net/dsa/ocelot/felix.h
new file mode 100644
index 000000000000..204296e51d0c
--- /dev/null
+++ b/drivers/net/dsa/ocelot/felix.h
@@ -0,0 +1,37 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+/* Copyright 2019 NXP Semiconductors
+ */
+#ifndef _MSCC_FELIX_H
+#define _MSCC_FELIX_H
+
+#define ocelot_to_felix(o)		container_of((o), struct felix, ocelot)
+
+/* Platform-specific information */
+struct felix_info {
+	struct resource			*target_io_res;
+	struct resource			*port_io_res;
+	const struct reg_field		*regfields;
+	const u32 *const		*map;
+	const struct ocelot_ops		*ops;
+	int				shared_queue_sz;
+	const struct ocelot_stat_layout	*stats_layout;
+	unsigned int			num_stats;
+	int				num_ports;
+	int				pci_bar;
+};
+
+extern struct felix_info		felix_info_vsc9959;
+
+enum felix_instance {
+	FELIX_INSTANCE_VSC9959		= 0,
+};
+
+/* DSA glue / front-end for struct ocelot */
+struct felix {
+	struct dsa_switch		*ds;
+	struct pci_dev			*pdev;
+	struct felix_info		*info;
+	struct ocelot			ocelot;
+};
+
+#endif
