commit 80503b23b23b5b2228d8750b786eb182f2fa28d2
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Fri May 24 12:04:09 2019 +0200

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 149
    
    Based on 1 normalized pattern(s):
    
      licensed under the gpl 2 or later
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-or-later
    
    has been chosen to replace the boilerplate/reference in 82 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Reviewed-by: Kate Stewart <kstewart@linuxfoundation.org>
    Reviewed-by: Richard Fontana <rfontana@redhat.com>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190524100845.150836982@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/input/touchscreen/ad7879.h b/drivers/input/touchscreen/ad7879.h
index 7e43066a4b68..ae8aa1428e56 100644
--- a/drivers/input/touchscreen/ad7879.h
+++ b/drivers/input/touchscreen/ad7879.h
@@ -1,9 +1,8 @@
+/* SPDX-License-Identifier: GPL-2.0-or-later */
 /*
  * AD7879/AD7889 touchscreen (bus interfaces)
  *
  * Copyright (C) 2008-2010 Michael Hennerich, Analog Devices Inc.
- *
- * Licensed under the GPL-2 or later.
  */
 
 #ifndef _AD7879_H_

commit 4e34025b340174e220646d82a3e81641fc02f42b
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Tue Feb 28 11:43:52 2017 -0800

    Input: ad7879 - return plain error code from ad7879_probe()
    
    With the switch to devm, there is no need for ad7879_probe() to return the
    touchscreen structure, we can use plain error code. This also fixes issue
    introduced with devm concersion, where we returned 0 on success (which
    worked OK since IS_ERR(0) would not trigger, but was not correct
    regardless).
    
    Fixes: 381f688eee3d ("Input: ad7879 - use more devm interfaces")
    Acked-by: Michael Hennerich <michael.hennerich@analog.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>

diff --git a/drivers/input/touchscreen/ad7879.h b/drivers/input/touchscreen/ad7879.h
index d3d2e9dc31ae..7e43066a4b68 100644
--- a/drivers/input/touchscreen/ad7879.h
+++ b/drivers/input/touchscreen/ad7879.h
@@ -11,13 +11,12 @@
 
 #include <linux/types.h>
 
-struct ad7879;
 struct device;
 struct regmap;
 
 extern const struct dev_pm_ops ad7879_pm_ops;
 
-struct ad7879 *ad7879_probe(struct device *dev, struct regmap *regmap,
-			    int irq, u16 bustype, u8 devid);
+int ad7879_probe(struct device *dev, struct regmap *regmap,
+		 int irq, u16 bustype, u8 devid);
 
 #endif

commit 069b2e2cd7ef5b42e1ab8ee991347f9dbf9f51d1
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Fri Feb 17 09:29:40 2017 -0800

    Input: ad7879 - use more devm interfaces
    
    gpiochip_add now has a managed version, and we can remove sysfs attribute
    group via devm_add_action_or_reset (at least until we have devm version of
    sysfs_create_group). This allows us to get rid of ad7879_remove().
    
    Reviewed-by: Michael Hennerich <michael.hennerich@analog.com>
    Tested-by: Michael Hennerich <michael.hennerich@analog.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>

diff --git a/drivers/input/touchscreen/ad7879.h b/drivers/input/touchscreen/ad7879.h
index 1131f8aa118b..d3d2e9dc31ae 100644
--- a/drivers/input/touchscreen/ad7879.h
+++ b/drivers/input/touchscreen/ad7879.h
@@ -19,6 +19,5 @@ extern const struct dev_pm_ops ad7879_pm_ops;
 
 struct ad7879 *ad7879_probe(struct device *dev, struct regmap *regmap,
 			    int irq, u16 bustype, u8 devid);
-void ad7879_remove(struct ad7879 *);
 
 #endif

commit 404a24c35db8c44dce91010023f12b73f2f44441
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Thu Feb 16 23:22:38 2017 -0800

    Input: ad7879 - convert to use regmap
    
    Instead of rolling our own infrastructure to provide uniform access to I2C
    and SPI buses, let's switch to using regmap.
    
    Reviewed-by: Michael Hennerich <michael.hennerich@analog.com>
    Tested-by: Michael Hennerich <michael.hennerich@analog.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>

diff --git a/drivers/input/touchscreen/ad7879.h b/drivers/input/touchscreen/ad7879.h
index 6fd13c48d373..1131f8aa118b 100644
--- a/drivers/input/touchscreen/ad7879.h
+++ b/drivers/input/touchscreen/ad7879.h
@@ -13,18 +13,12 @@
 
 struct ad7879;
 struct device;
-
-struct ad7879_bus_ops {
-	u16 bustype;
-	int (*read)(struct device *dev, u8 reg);
-	int (*multi_read)(struct device *dev, u8 first_reg, u8 count, u16 *buf);
-	int (*write)(struct device *dev, u8 reg, u16 val);
-};
+struct regmap;
 
 extern const struct dev_pm_ops ad7879_pm_ops;
 
-struct ad7879 *ad7879_probe(struct device *dev, u8 devid, unsigned irq,
-			    const struct ad7879_bus_ops *bops);
+struct ad7879 *ad7879_probe(struct device *dev, struct regmap *regmap,
+			    int irq, u16 bustype, u8 devid);
 void ad7879_remove(struct ad7879 *);
 
 #endif

commit 8672bd93d3d67b18a2b067ece30dabcda11f8cde
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Mon Nov 14 00:32:09 2011 -0800

    Input: ad7879 - consolidate PM methods
    
    The PM methods are basically the same for SPI and I2C busses, so let's
    use the same dev_pm_ops for both of them.
    
    Acked-by: Michael Hennerich <michael.hennerich@analog.com>
    Signed-off-by: Dmitry Torokhov <dtor@mail.ru>

diff --git a/drivers/input/touchscreen/ad7879.h b/drivers/input/touchscreen/ad7879.h
index 6b45a27236c7..6fd13c48d373 100644
--- a/drivers/input/touchscreen/ad7879.h
+++ b/drivers/input/touchscreen/ad7879.h
@@ -21,8 +21,8 @@ struct ad7879_bus_ops {
 	int (*write)(struct device *dev, u8 reg, u16 val);
 };
 
-void ad7879_suspend(struct ad7879 *);
-void ad7879_resume(struct ad7879 *);
+extern const struct dev_pm_ops ad7879_pm_ops;
+
 struct ad7879 *ad7879_probe(struct device *dev, u8 devid, unsigned irq,
 			    const struct ad7879_bus_ops *bops);
 void ad7879_remove(struct ad7879 *);

commit 14fbbc36d126d7ec7717144def386b9fc4c7fba2
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Wed Jun 30 14:50:51 2010 -0700

    Input: ad7879 - add open and close methods
    
    Tested-by: Michael Hennerich <michael.hennerich@analog.com>
    Signed-off-by: Dmitry Torokhov <dtor@mail.ru>

diff --git a/drivers/input/touchscreen/ad7879.h b/drivers/input/touchscreen/ad7879.h
index 169f155db3b9..6b45a27236c7 100644
--- a/drivers/input/touchscreen/ad7879.h
+++ b/drivers/input/touchscreen/ad7879.h
@@ -21,8 +21,8 @@ struct ad7879_bus_ops {
 	int (*write)(struct device *dev, u8 reg, u16 val);
 };
 
-void ad7879_disable(struct ad7879 *);
-void ad7879_enable(struct ad7879 *);
+void ad7879_suspend(struct ad7879 *);
+void ad7879_resume(struct ad7879 *);
 struct ad7879 *ad7879_probe(struct device *dev, u8 devid, unsigned irq,
 			    const struct ad7879_bus_ops *bops);
 void ad7879_remove(struct ad7879 *);

commit 4397c98a8a60ba029f2d0051d0cbafe600f05d8c
Author: Mike Frysinger <vapier@gentoo.org>
Date:   Wed Jun 30 01:40:52 2010 -0700

    Input: ad7879 - split bus logic out
    
    The ad7879 driver is using the old bus method of only supporting one
    at a time (I2C or SPI). So refactor it like the other input drivers
    that support multiple busses simultaneously.
    
    Signed-off-by: Mike Frysinger <vapier@gentoo.org>
    Signed-off-by: Michael Hennerich <michael.hennerich@analog.com>
    Signed-off-by: Dmitry Torokhov <dtor@mail.ru>

diff --git a/drivers/input/touchscreen/ad7879.h b/drivers/input/touchscreen/ad7879.h
new file mode 100644
index 000000000000..169f155db3b9
--- /dev/null
+++ b/drivers/input/touchscreen/ad7879.h
@@ -0,0 +1,30 @@
+/*
+ * AD7879/AD7889 touchscreen (bus interfaces)
+ *
+ * Copyright (C) 2008-2010 Michael Hennerich, Analog Devices Inc.
+ *
+ * Licensed under the GPL-2 or later.
+ */
+
+#ifndef _AD7879_H_
+#define _AD7879_H_
+
+#include <linux/types.h>
+
+struct ad7879;
+struct device;
+
+struct ad7879_bus_ops {
+	u16 bustype;
+	int (*read)(struct device *dev, u8 reg);
+	int (*multi_read)(struct device *dev, u8 first_reg, u8 count, u16 *buf);
+	int (*write)(struct device *dev, u8 reg, u16 val);
+};
+
+void ad7879_disable(struct ad7879 *);
+void ad7879_enable(struct ad7879 *);
+struct ad7879 *ad7879_probe(struct device *dev, u8 devid, unsigned irq,
+			    const struct ad7879_bus_ops *bops);
+void ad7879_remove(struct ad7879 *);
+
+#endif
