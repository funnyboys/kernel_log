commit 817ed5748e40bbc5b5f2aa0c3094c4a7adfb8881
Author: Robert Jarzmik <robert.jarzmik@free.fr>
Date:   Thu Sep 1 08:31:08 2016 +0200

    pcmcia: lubbock: fix sockets configuration
    
    On lubbock board, the probe of the driver crashes by dereferencing very
    early a platform_data structure which is not set, in
    pxa2xx_configure_sockets().
    
    The stack fixed is :
    [    0.244353] SA1111 Microprocessor Companion Chip: silicon revision 1, metal revision 1
    [    0.256321] sa1111 sa1111: Providing IRQ336-390
    [    0.340899] clocksource: Switched to clocksource oscr0
    [    0.472263] Unable to handle kernel NULL pointer dereference at virtual address 00000004
    [    0.480469] pgd = c0004000
    [    0.483432] [00000004] *pgd=00000000
    [    0.487105] Internal error: Oops: f5 [#1] ARM
    [    0.491497] Modules linked in:
    [    0.494650] CPU: 0 PID: 1 Comm: swapper Not tainted 4.8.0-rc3-00080-g1aaa68426f0c-dirty #2068
    [    0.503229] Hardware name: Intel DBPXA250 Development Platform (aka Lubbock)
    [    0.510344] task: c3e42000 task.stack: c3e44000
    [    0.514984] PC is at pxa2xx_configure_sockets+0x4/0x24 (drivers/pcmcia/pxa2xx_base.c:227)
    [    0.520193] LR is at pcmcia_lubbock_init+0x1c/0x38
    [    0.525079] pc : [<c0247c30>]    lr : [<c02479b0>]    psr: a0000053
    [    0.525079] sp : c3e45e70  ip : 100019ff  fp : 00000000
    [    0.536651] r10: c0828900  r9 : c0434838  r8 : 00000000
    [    0.541953] r7 : c0820700  r6 : c0857b30  r5 : c3ec1400  r4 : c0820758
    [    0.548549] r3 : 00000000  r2 : 0000000c  r1 : c3c09c40  r0 : c3ec1400
    [    0.555154] Flags: NzCv  IRQs on  FIQs off  Mode SVC_32  ISA ARM  Segment none
    [    0.562450] Control: 0000397f  Table: a0004000  DAC: 00000053
    [    0.568257] Process swapper (pid: 1, stack limit = 0xc3e44190)
    [    0.574154] Stack: (0xc3e45e70 to 0xc3e46000)
    [    0.578610] 5e60:                                     c4849800 00000000 c3ec1400 c024769c
    [    0.586928] 5e80: 00000000 c3ec140c c3c0ee0c c3ec1400 c3ec1434 c020c410 c3ec1400 c3ec1434
    [    0.595244] 5ea0: c0820700 c080b408 c0828900 c020c5f8 00000000 c0820700 c020c578 c020ac5c
    [    0.603560] 5ec0: c3e687cc c3e71e10 c0820700 00000000 c3c02de0 c020bae4 c03c62f7 c03c62f7
    [    0.611872] 5ee0: c3e68780 c0820700 c042e034 00000000 c043c440 c020cdec c080b408 00000005
    [    0.620188] 5f00: c042e034 c00096c0 c0034440 c01c730c 20000053 ffffffff 00000000 00000000
    [    0.628502] 5f20: 00000000 c3ffcb87 c3ffcb90 c00346ac c3e66ba0 c03f7914 00000092 00000005
    [    0.636811] 5f40: 00000005 c03f847c 00000091 c03f847c 00000000 00000005 c0434828 00000005
    [    0.645125] 5f60: c043482c 00000092 c043c440 c0828900 c0434838 c0418d2c 00000005 00000005
    [    0.653430] 5f80: 00000000 c041858c 00000000 c032e9f0 00000000 00000000 00000000 00000000
    [    0.661729] 5fa0: 00000000 c032e9f8 00000000 c000f0f0 00000000 00000000 00000000 00000000
    [    0.670020] 5fc0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
    [    0.678311] 5fe0: 00000000 00000000 00000000 00000000 00000013 00000000 00000000 00000000
    [    0.686673] (pxa2xx_configure_sockets) from pcmcia_lubbock_init (/drivers/pcmcia/sa1111_lubbock.c:161)
    [    0.696026] (pcmcia_lubbock_init) from pcmcia_probe (/drivers/pcmcia/sa1111_generic.c:213)
    [    0.704358] (pcmcia_probe) from driver_probe_device (/drivers/base/dd.c:378 /drivers/base/dd.c:499)
    [    0.712848] (driver_probe_device) from __driver_attach (/./include/linux/device.h:983 /drivers/base/dd.c:733)
    [    0.721414] (__driver_attach) from bus_for_each_dev (/drivers/base/bus.c:313)
    [    0.729723] (bus_for_each_dev) from bus_add_driver (/drivers/base/bus.c:708)
    [    0.738036] (bus_add_driver) from driver_register (/drivers/base/driver.c:169)
    [    0.746185] (driver_register) from do_one_initcall (/init/main.c:778)
    [    0.754561] (do_one_initcall) from kernel_init_freeable (/init/main.c:843 /init/main.c:851 /init/main.c:869 /init/main.c:1016)
    [    0.763409] (kernel_init_freeable) from kernel_init (/init/main.c:944)
    [    0.771660] (kernel_init) from ret_from_fork (/arch/arm/kernel/entry-common.S:119)
    [ 0.779347] Code: c03c6305 c03c631e c03c632e e5903048 (e993000c)
    All code
    ========
       0:   c03c6305        eorsgt  r6, ip, r5, lsl #6
       4:   c03c631e        eorsgt  r6, ip, lr, lsl r3
       8:   c03c632e        eorsgt  r6, ip, lr, lsr #6
       c:   e5903048        ldr     r3, [r0, #72]   ; 0x48
      10:*  e993000c        ldmib   r3, {r2, r3}            <-- trapping instruction
    
    Signed-off-by: Robert Jarzmik <robert.jarzmik@free.fr>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>

diff --git a/drivers/pcmcia/pxa2xx_base.h b/drivers/pcmcia/pxa2xx_base.h
index b609b45469ed..e58c7a415418 100644
--- a/drivers/pcmcia/pxa2xx_base.h
+++ b/drivers/pcmcia/pxa2xx_base.h
@@ -1,4 +1,4 @@
 int pxa2xx_drv_pcmcia_add_one(struct soc_pcmcia_socket *skt);
 void pxa2xx_drv_pcmcia_ops(struct pcmcia_low_level *ops);
-void pxa2xx_configure_sockets(struct device *dev);
+void pxa2xx_configure_sockets(struct device *dev, struct pcmcia_low_level *ops);
 

commit 5b703683b6cc3cb97bbe6b1b14898b273eb59279
Author: Pavel Machek <pma@sysgo.com>
Date:   Fri Feb 4 09:03:43 2011 +0100

    pcmcia vs. MECR on pxa25x/sa1111
    
    After 2.6.34 changes, __pxa2xx_drv_pcmcia_probe() was replaced by
    sa1111_pcmcia_add(). That unfortunately means that configure_sockets()
    is not called, leading to MECR not being set properly, leading to
    strange crashes.
    
    Tested on pxa255+sa1111, I do not have lubbock board nearby. Perhaps
    cleaner solution exists?
    
    Signed-off-by: Pavel Machek <pma@sysgo.com>
    Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>

diff --git a/drivers/pcmcia/pxa2xx_base.h b/drivers/pcmcia/pxa2xx_base.h
index bb62ea87b8f9..b609b45469ed 100644
--- a/drivers/pcmcia/pxa2xx_base.h
+++ b/drivers/pcmcia/pxa2xx_base.h
@@ -1,3 +1,4 @@
 int pxa2xx_drv_pcmcia_add_one(struct soc_pcmcia_socket *skt);
 void pxa2xx_drv_pcmcia_ops(struct pcmcia_low_level *ops);
+void pxa2xx_configure_sockets(struct device *dev);
 

commit d0d26c33b63c7ec10c3fdf9c7ce0aa035f0b3200
Author: Russell King <rmk+kernel@arm.linux.org.uk>
Date:   Sat Dec 12 10:07:34 2009 +0000

    PCMCIA: fix pxa2xx_lubbock modular build error
    
    ERROR: "pxa2xx_drv_pcmcia_ops" [drivers/pcmcia/pxa2xx_lubbock_cs.ko] undefined!
    ERROR: "pxa2xx_drv_pcmcia_add_one" [drivers/pcmcia/pxa2xx_lubbock_cs.ko] undefined!
    
    We also remove __pxa2xx_drv_pcmcia_probe and its export, since this is
    no longer required.
    
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>

diff --git a/drivers/pcmcia/pxa2xx_base.h b/drivers/pcmcia/pxa2xx_base.h
index cb5efaec886f..bb62ea87b8f9 100644
--- a/drivers/pcmcia/pxa2xx_base.h
+++ b/drivers/pcmcia/pxa2xx_base.h
@@ -1,6 +1,3 @@
-/* temporary measure */
-extern int __pxa2xx_drv_pcmcia_probe(struct device *);
-
 int pxa2xx_drv_pcmcia_add_one(struct soc_pcmcia_socket *skt);
 void pxa2xx_drv_pcmcia_ops(struct pcmcia_low_level *ops);
 

commit 701a5dc05ad99a06958b3f97cb69d99b47cebee3
Author: Russell King - ARM Linux <linux@arm.linux.org.uk>
Date:   Sun Mar 29 19:42:44 2009 +0100

    PCMCIA: sa1111: wrap soc_pcmcia_socket to contain sa1111 specific data
    
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
    Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>

diff --git a/drivers/pcmcia/pxa2xx_base.h b/drivers/pcmcia/pxa2xx_base.h
index 235d681652c3..cb5efaec886f 100644
--- a/drivers/pcmcia/pxa2xx_base.h
+++ b/drivers/pcmcia/pxa2xx_base.h
@@ -1,3 +1,6 @@
 /* temporary measure */
 extern int __pxa2xx_drv_pcmcia_probe(struct device *);
 
+int pxa2xx_drv_pcmcia_add_one(struct soc_pcmcia_socket *skt);
+void pxa2xx_drv_pcmcia_ops(struct pcmcia_low_level *ops);
+

commit 9468613b2bb0a386af563953b613efc6c77bd8c1
Author: Russell King <rmk@dyn-67.arm.linux.org.uk>
Date:   Sat Oct 28 22:42:56 2006 +0100

    [ARM] Fix suspend oops caused by PXA2xx PCMCIA driver
    
    The PXA2xx PCMCIA driver was registering a device_driver with the
    platform_bus_type.  Unfortunately, this causes data outside the
    device_driver structure to be dereferenced as if it were a
    platform_driver structure, causing an oops.  Convert the PXA2xx
    core driver to use the proper platform_driver structure.
    
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>

diff --git a/drivers/pcmcia/pxa2xx_base.h b/drivers/pcmcia/pxa2xx_base.h
index e46cff345d47..235d681652c3 100644
--- a/drivers/pcmcia/pxa2xx_base.h
+++ b/drivers/pcmcia/pxa2xx_base.h
@@ -1,3 +1,3 @@
 /* temporary measure */
-extern int pxa2xx_drv_pcmcia_probe(struct device *);
+extern int __pxa2xx_drv_pcmcia_probe(struct device *);
 

commit 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2
Author: Linus Torvalds <torvalds@ppc970.osdl.org>
Date:   Sat Apr 16 15:20:36 2005 -0700

    Linux-2.6.12-rc2
    
    Initial git repository build. I'm not bothering with the full history,
    even though we have it. We can create a separate "historical" git
    archive of that later if we want to, and in the meantime it's about
    3.2GB when imported into git - space that would just make the early
    git days unnecessarily complicated, when we don't have a lot of good
    infrastructure for it.
    
    Let it rip!

diff --git a/drivers/pcmcia/pxa2xx_base.h b/drivers/pcmcia/pxa2xx_base.h
new file mode 100644
index 000000000000..e46cff345d47
--- /dev/null
+++ b/drivers/pcmcia/pxa2xx_base.h
@@ -0,0 +1,3 @@
+/* temporary measure */
+extern int pxa2xx_drv_pcmcia_probe(struct device *);
+
