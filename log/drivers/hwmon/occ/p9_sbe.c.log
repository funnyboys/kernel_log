commit e2f05d608653cb212edea136ad82107c6be56e1d
Author: Eddie James <eajames@linux.ibm.com>
Date:   Mon Jan 28 10:23:23 2019 -0600

    hwmon: (occ) Fix license headers
    
    Files have inconsistent license information.
    
    Signed-off-by: Eddie James <eajames@linux.ibm.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>

diff --git a/drivers/hwmon/occ/p9_sbe.c b/drivers/hwmon/occ/p9_sbe.c
index b65c1d1dfb54..f6387cc0b754 100644
--- a/drivers/hwmon/occ/p9_sbe.c
+++ b/drivers/hwmon/occ/p9_sbe.c
@@ -1,4 +1,5 @@
-// SPDX-License-Identifier: GPL-2.0
+// SPDX-License-Identifier: GPL-2.0+
+// Copyright IBM Corp 2019
 
 #include <linux/device.h>
 #include <linux/errno.h>

commit df04ced684d48f6ec5729ccd034702952160c6b3
Author: Eddie James <eajames@linux.vnet.ibm.com>
Date:   Thu Nov 8 15:05:29 2018 -0600

    hwmon (occ): Add sysfs attributes for additional OCC data
    
    The OCC provides a variety of additional information about the state of
    the host processor, such as throttling, error conditions, and the number
    of OCCs detected in the system. This information is essential to service
    processor applications such as fan control and host management.
    Therefore, export this data in the form of sysfs attributes attached to
    the platform device (to which the hwmon device is also attached).
    
    Signed-off-by: Eddie James <eajames@linux.ibm.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>

diff --git a/drivers/hwmon/occ/p9_sbe.c b/drivers/hwmon/occ/p9_sbe.c
index b33f4fe63fbb..b65c1d1dfb54 100644
--- a/drivers/hwmon/occ/p9_sbe.c
+++ b/drivers/hwmon/occ/p9_sbe.c
@@ -86,6 +86,7 @@ static int p9_sbe_occ_remove(struct platform_device *pdev)
 	struct p9_sbe_occ *ctx = to_p9_sbe_occ(occ);
 
 	ctx->sbe = NULL;
+	occ_shutdown(occ);
 
 	return 0;
 }

commit c10e753d43ebd1d17e1c62bcee20c6124c2c7cca
Author: Eddie James <eajames@linux.vnet.ibm.com>
Date:   Thu Nov 8 15:05:27 2018 -0600

    hwmon (occ): Add sensor types and versions
    
    Add structures to define all sensor types and versions. Add sysfs show
    and store functions for each sensor type. Add a method to construct the
    "set user power cap" command and send it to the OCC. Add rate limit to
    polling the OCC (in case user-space reads our hwmon entries rapidly).
    
    Signed-off-by: Eddie James <eajames@linux.ibm.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>

diff --git a/drivers/hwmon/occ/p9_sbe.c b/drivers/hwmon/occ/p9_sbe.c
index 0ed5e22143ae..b33f4fe63fbb 100644
--- a/drivers/hwmon/occ/p9_sbe.c
+++ b/drivers/hwmon/occ/p9_sbe.c
@@ -69,6 +69,7 @@ static int p9_sbe_occ_probe(struct platform_device *pdev)
 	occ->bus_dev = &pdev->dev;
 	platform_set_drvdata(pdev, occ);
 
+	occ->powr_sample_time_us = 500;
 	occ->poll_cmd_data = 0x20;		/* P9 OCC poll data */
 	occ->send_cmd = p9_sbe_occ_send_cmd;
 

commit 88be37c07c1524102aed5736094cfacf24407b46
Author: Eddie James <eajames@linux.vnet.ibm.com>
Date:   Thu Nov 8 15:05:25 2018 -0600

    hwmon (occ): Add command transport method for P8 and P9
    
    For the P8 OCC, add the procedure to send a command to the OCC over I2C
    bus. This involves writing the OCC command registers with serial
    communication operations (SCOMs) interpreted by the I2C slave. For the
    P9 OCC, add a procedure to use the OCC in-kernel API to send a command
    to the OCC through the SBE.
    
    Signed-off-by: Eddie James <eajames@linux.ibm.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>

diff --git a/drivers/hwmon/occ/p9_sbe.c b/drivers/hwmon/occ/p9_sbe.c
index c2fa34e30544..0ed5e22143ae 100644
--- a/drivers/hwmon/occ/p9_sbe.c
+++ b/drivers/hwmon/occ/p9_sbe.c
@@ -2,6 +2,7 @@
 
 #include <linux/device.h>
 #include <linux/errno.h>
+#include <linux/fsi-occ.h>
 #include <linux/module.h>
 #include <linux/platform_device.h>
 
@@ -16,7 +17,42 @@ struct p9_sbe_occ {
 
 static int p9_sbe_occ_send_cmd(struct occ *occ, u8 *cmd)
 {
-	return -EOPNOTSUPP;
+	struct occ_response *resp = &occ->resp;
+	struct p9_sbe_occ *ctx = to_p9_sbe_occ(occ);
+	size_t resp_len = sizeof(*resp);
+	int rc;
+
+	rc = fsi_occ_submit(ctx->sbe, cmd, 8, resp, &resp_len);
+	if (rc < 0)
+		return rc;
+
+	switch (resp->return_status) {
+	case OCC_RESP_CMD_IN_PRG:
+		rc = -ETIMEDOUT;
+		break;
+	case OCC_RESP_SUCCESS:
+		rc = 0;
+		break;
+	case OCC_RESP_CMD_INVAL:
+	case OCC_RESP_CMD_LEN_INVAL:
+	case OCC_RESP_DATA_INVAL:
+	case OCC_RESP_CHKSUM_ERR:
+		rc = -EINVAL;
+		break;
+	case OCC_RESP_INT_ERR:
+	case OCC_RESP_BAD_STATE:
+	case OCC_RESP_CRIT_EXCEPT:
+	case OCC_RESP_CRIT_INIT:
+	case OCC_RESP_CRIT_WATCHDOG:
+	case OCC_RESP_CRIT_OCB:
+	case OCC_RESP_CRIT_HW:
+		rc = -EREMOTEIO;
+		break;
+	default:
+		rc = -EPROTO;
+	}
+
+	return rc;
 }
 
 static int p9_sbe_occ_probe(struct platform_device *pdev)

commit 5b5513b8800291226a8fa63fd22a14cc235b313e
Author: Eddie James <eajames@linux.vnet.ibm.com>
Date:   Thu Nov 8 15:05:24 2018 -0600

    hwmon: Add On-Chip Controller (OCC) hwmon driver
    
    The OCC is a device embedded on a POWER processor that collects and
    aggregates sensor data from the processor and system. The OCC can
    provide the raw sensor data as well as perform thermal and power
    management on the system.
    
    This driver provides a hwmon interface to the OCC from a service
    processor (e.g. a BMC). The driver supports both POWER8 and POWER9 OCCs.
    Communications with the POWER8 OCC are established over standard I2C
    bus. The driver communicates with the POWER9 OCC through the FSI-based
    OCC driver, which handles the lower-level communication details.
    
    This patch lays out the structure of the OCC hwmon driver. There are two
    platform drivers, one each for P8 and P9 OCCs. These are probed through
    the I2C tree and the FSI-based OCC driver, respectively. The patch also
    defines the first common structures and methods between the two OCC
    versions.
    
    Signed-off-by: Eddie James <eajames@linux.ibm.com>
    [groeck: Fix up SPDX license identifier]
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>

diff --git a/drivers/hwmon/occ/p9_sbe.c b/drivers/hwmon/occ/p9_sbe.c
new file mode 100644
index 000000000000..c2fa34e30544
--- /dev/null
+++ b/drivers/hwmon/occ/p9_sbe.c
@@ -0,0 +1,68 @@
+// SPDX-License-Identifier: GPL-2.0
+
+#include <linux/device.h>
+#include <linux/errno.h>
+#include <linux/module.h>
+#include <linux/platform_device.h>
+
+#include "common.h"
+
+struct p9_sbe_occ {
+	struct occ occ;
+	struct device *sbe;
+};
+
+#define to_p9_sbe_occ(x)	container_of((x), struct p9_sbe_occ, occ)
+
+static int p9_sbe_occ_send_cmd(struct occ *occ, u8 *cmd)
+{
+	return -EOPNOTSUPP;
+}
+
+static int p9_sbe_occ_probe(struct platform_device *pdev)
+{
+	int rc;
+	struct occ *occ;
+	struct p9_sbe_occ *ctx = devm_kzalloc(&pdev->dev, sizeof(*ctx),
+					      GFP_KERNEL);
+	if (!ctx)
+		return -ENOMEM;
+
+	ctx->sbe = pdev->dev.parent;
+	occ = &ctx->occ;
+	occ->bus_dev = &pdev->dev;
+	platform_set_drvdata(pdev, occ);
+
+	occ->poll_cmd_data = 0x20;		/* P9 OCC poll data */
+	occ->send_cmd = p9_sbe_occ_send_cmd;
+
+	rc = occ_setup(occ, "p9_occ");
+	if (rc == -ESHUTDOWN)
+		rc = -ENODEV;	/* Host is shutdown, don't spew errors */
+
+	return rc;
+}
+
+static int p9_sbe_occ_remove(struct platform_device *pdev)
+{
+	struct occ *occ = platform_get_drvdata(pdev);
+	struct p9_sbe_occ *ctx = to_p9_sbe_occ(occ);
+
+	ctx->sbe = NULL;
+
+	return 0;
+}
+
+static struct platform_driver p9_sbe_occ_driver = {
+	.driver = {
+		.name = "occ-hwmon",
+	},
+	.probe	= p9_sbe_occ_probe,
+	.remove = p9_sbe_occ_remove,
+};
+
+module_platform_driver(p9_sbe_occ_driver);
+
+MODULE_AUTHOR("Eddie James <eajames@linux.ibm.com>");
+MODULE_DESCRIPTION("BMC P9 OCC hwmon driver");
+MODULE_LICENSE("GPL");
