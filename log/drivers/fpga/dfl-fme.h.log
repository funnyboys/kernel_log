commit 724142f8c42a7b01dbf9738eb00d7addbad6f862
Author: Wu Hao <hao.wu@intel.com>
Date:   Mon Apr 27 09:06:23 2020 +0800

    fpga: dfl: fme: add performance reporting support
    
    This patch adds support for performance reporting private feature
    for FPGA Management Engine (FME). Now it supports several different
    performance counters, including 'basic', 'cache', 'fabric', 'vtd'
    and 'vtd_sip'. It allows user to use standard linux tools to access
    these performance counters.
    
    e.g. List all events by "perf list"
    
      perf list | grep fme
    
      dfl_fme0/cache_read_hit/                     [Kernel PMU event]
      dfl_fme0/cache_read_miss/                    [Kernel PMU event]
      ...
    
      dfl_fme0/fab_mmio_read/                      [Kernel PMU event]
      dfl_fme0/fab_mmio_write/                     [Kernel PMU event]
      ...
    
      dfl_fme0/fab_port_mmio_read,portid=?/        [Kernel PMU event]
      dfl_fme0/fab_port_mmio_write,portid=?/       [Kernel PMU event]
      ...
    
      dfl_fme0/vtd_port_devtlb_1g_fill,portid=?/   [Kernel PMU event]
      dfl_fme0/vtd_port_devtlb_2m_fill,portid=?/   [Kernel PMU event]
      ...
    
      dfl_fme0/vtd_sip_iotlb_1g_hit/               [Kernel PMU event]
      dfl_fme0/vtd_sip_iotlb_1g_miss/              [Kernel PMU event]
      ...
    
      dfl_fme0/clock                               [Kernel PMU event]
      ...
    
    e.g. check increased counter value after run one application using
    "perf stat" command.
    
     perf stat -e dfl_fme0/fab_mmio_read/,dfl_fme0/fab_mmio_write/ ./test
    
     Performance counter stats for './test':
    
                     1      dfl_fme0/fab_mmio_read/
                     2      dfl_fme0/fab_mmio_write/
    
           1.009496520 seconds time elapsed
    
    Please note that fabric counters support both fab_* and fab_port_*, but
    actually they are sharing one set of performance counters in hardware.
    If user wants to monitor overall data events on fab_* then fab_port_*
    can't be supported at the same time, see example below:
    
    perf stat -e dfl_fme0/fab_mmio_read/,dfl_fme0/fab_port_mmio_write,portid=0/
    
     Performance counter stats for 'system wide':
    
                     0      dfl_fme0/fab_mmio_read/
       <not supported>      dfl_fme0/fab_port_mmio_write,portid=0/
    
           2.141064085 seconds time elapsed
    
    Signed-off-by: Luwei Kang <luwei.kang@intel.com>
    Signed-off-by: Xu Yilun <yilun.xu@intel.com>
    Signed-off-by: Wu Hao <hao.wu@intel.com>
    Link: https://lore.kernel.org/r/1587949583-12058-3-git-send-email-hao.wu@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/fpga/dfl-fme.h b/drivers/fpga/dfl-fme.h
index 6685c8ef965b..4195dd68193e 100644
--- a/drivers/fpga/dfl-fme.h
+++ b/drivers/fpga/dfl-fme.h
@@ -38,5 +38,7 @@ extern const struct dfl_feature_id fme_pr_mgmt_id_table[];
 extern const struct dfl_feature_ops fme_global_err_ops;
 extern const struct dfl_feature_id fme_global_err_id_table[];
 extern const struct attribute_group fme_global_err_group;
+extern const struct dfl_feature_ops fme_perf_ops;
+extern const struct dfl_feature_id fme_perf_id_table[];
 
 #endif /* __DFL_FME_H */

commit cb3c2c47e3b8068e5d46ad829318cd077406fc9d
Author: Wu Hao <hao.wu@intel.com>
Date:   Mon Aug 12 10:50:03 2019 +0800

    fpga: dfl: fme: add global error reporting support
    
    This patch adds support for global error reporting for FPGA
    Management Engine (FME), it introduces sysfs interfaces to
    report different error detected by the hardware, and allow
    user to clear errors or inject error for testing purpose.
    
    Signed-off-by: Luwei Kang <luwei.kang@intel.com>
    Signed-off-by: Ananda Ravuri <ananda.ravuri@intel.com>
    Signed-off-by: Xu Yilun <yilun.xu@intel.com>
    Signed-off-by: Wu Hao <hao.wu@intel.com>
    Acked-by: Alan Tull <atull@kernel.org>
    Signed-off-by: Moritz Fischer <mdf@kernel.org>

diff --git a/drivers/fpga/dfl-fme.h b/drivers/fpga/dfl-fme.h
index e4131e857dae..6685c8ef965b 100644
--- a/drivers/fpga/dfl-fme.h
+++ b/drivers/fpga/dfl-fme.h
@@ -35,5 +35,8 @@ struct dfl_fme {
 
 extern const struct dfl_feature_ops fme_pr_mgmt_ops;
 extern const struct dfl_feature_id fme_pr_mgmt_id_table[];
+extern const struct dfl_feature_ops fme_global_err_ops;
+extern const struct dfl_feature_id fme_global_err_id_table[];
+extern const struct attribute_group fme_global_err_group;
 
 #endif /* __DFL_FME_H */

commit 15bbb300fcef4e62e4f6063cc29e698796027b98
Author: Wu Hao <hao.wu@intel.com>
Date:   Sun Aug 4 18:20:15 2019 +0800

    fpga: dfl: add id_table for dfl private feature driver
    
    This patch adds id_table for each dfl private feature driver,
    it allows to reuse same private feature driver to match and support
    multiple dfl private features.
    
    Signed-off-by: Xu Yilun <yilun.xu@intel.com>
    Signed-off-by: Wu Hao <hao.wu@intel.com>
    Acked-by: Moritz Fischer <mdf@kernel.org>
    Acked-by: Alan Tull <atull@kernel.org>
    Signed-off-by: Moritz Fischer <mdf@kernel.org>
    Link: https://lore.kernel.org/r/1564914022-3710-6-git-send-email-hao.wu@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/fpga/dfl-fme.h b/drivers/fpga/dfl-fme.h
index 5394a216c5c0..e4131e857dae 100644
--- a/drivers/fpga/dfl-fme.h
+++ b/drivers/fpga/dfl-fme.h
@@ -33,6 +33,7 @@ struct dfl_fme {
 	struct dfl_feature_platform_data *pdata;
 };
 
-extern const struct dfl_feature_ops pr_mgmt_ops;
+extern const struct dfl_feature_ops fme_pr_mgmt_ops;
+extern const struct dfl_feature_id fme_pr_mgmt_id_table[];
 
 #endif /* __DFL_FME_H */

commit 29de76240e861d52b75405166337e94184f1875d
Author: Kang Luwei <luwei.kang@intel.com>
Date:   Sat Jun 30 08:53:24 2018 +0800

    fpga: dfl: fme: add partial reconfiguration sub feature support
    
    Partial Reconfiguration (PR) is the most important function for FME. It
    allows reconfiguration for given Port/Accelerated Function Unit (AFU).
    
    It creates platform devices for fpga-mgr, fpga-regions and fpga-bridges,
    and invokes fpga-region's interface (fpga_region_program_fpga) for PR
    operation once PR request received via ioctl. Below user space interface
    is exposed by this sub feature.
    
    Ioctl interface:
    * DFL_FPGA_FME_PORT_PR
      Do partial reconfiguration per information from userspace, including
      target port(AFU), buffer size and address info. It returns error code
      to userspace if failed. For detailed PR error information, user needs
      to read fpga-mgr's status sysfs interface.
    
    Signed-off-by: Tim Whisonant <tim.whisonant@intel.com>
    Signed-off-by: Enno Luebbers <enno.luebbers@intel.com>
    Signed-off-by: Shiva Rao <shiva.rao@intel.com>
    Signed-off-by: Christopher Rauer <christopher.rauer@intel.com>
    Signed-off-by: Kang Luwei <luwei.kang@intel.com>
    Signed-off-by: Xiao Guangrong <guangrong.xiao@linux.intel.com>
    Signed-off-by: Wu Hao <hao.wu@intel.com>
    Acked-by: Alan Tull <atull@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/fpga/dfl-fme.h b/drivers/fpga/dfl-fme.h
new file mode 100644
index 000000000000..5394a216c5c0
--- /dev/null
+++ b/drivers/fpga/dfl-fme.h
@@ -0,0 +1,38 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+/*
+ * Header file for FPGA Management Engine (FME) Driver
+ *
+ * Copyright (C) 2017-2018 Intel Corporation, Inc.
+ *
+ * Authors:
+ *   Kang Luwei <luwei.kang@intel.com>
+ *   Xiao Guangrong <guangrong.xiao@linux.intel.com>
+ *   Wu Hao <hao.wu@intel.com>
+ *   Joseph Grecco <joe.grecco@intel.com>
+ *   Enno Luebbers <enno.luebbers@intel.com>
+ *   Tim Whisonant <tim.whisonant@intel.com>
+ *   Ananda Ravuri <ananda.ravuri@intel.com>
+ *   Henry Mitchel <henry.mitchel@intel.com>
+ */
+
+#ifndef __DFL_FME_H
+#define __DFL_FME_H
+
+/**
+ * struct dfl_fme - dfl fme private data
+ *
+ * @mgr: FME's FPGA manager platform device.
+ * @region_list: linked list of FME's FPGA regions.
+ * @bridge_list: linked list of FME's FPGA bridges.
+ * @pdata: fme platform device's pdata.
+ */
+struct dfl_fme {
+	struct platform_device *mgr;
+	struct list_head region_list;
+	struct list_head bridge_list;
+	struct dfl_feature_platform_data *pdata;
+};
+
+extern const struct dfl_feature_ops pr_mgmt_ops;
+
+#endif /* __DFL_FME_H */
