commit f5e4e5e7ae9cab22d62bc870be78c9daf38ab645
Author: Ioannis Valasakis <code@wizofe.uk>
Date:   Fri Nov 9 13:54:00 2018 +0000

    staging: greybus: correct SPDX License Identifier
    
    Replace SPDX License Identifier comments with C comments.
    Reported by checkpatch.
    
    Signed-off-by: Ioannis Valasakis <code@wizofe.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/greybus/arche_platform.h b/drivers/staging/greybus/arche_platform.h
index 02056351d25a..9d997f2d6517 100644
--- a/drivers/staging/greybus/arche_platform.h
+++ b/drivers/staging/greybus/arche_platform.h
@@ -1,4 +1,4 @@
-// SPDX-License-Identifier: GPL-2.0
+/* SPDX-License-Identifier: GPL-2.0 */
 /*
  * Arche Platform driver to enable Unipro link.
  *

commit 863dbc52e7f0e5acd7b4883f3933543a81c474c7
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Nov 7 14:58:42 2017 +0100

    staging: greybus: Remove redundant license text
    
    Now that the SPDX tag is in all greybus files, that identifies the
    license in a specific and legally-defined manner.  So the extra GPL text
    wording can be removed as it is no longer needed at all.
    
    This is done on a quest to remove the 700+ different ways that files in
    the kernel describe the GPL license text.  And there's unneeded stuff
    like the address (sometimes incorrect) for the FSF which is never
    needed.
    
    No copyright headers or other non-license-description text was removed.
    
    Cc: Vaibhav Hiremath <hvaibhav.linux@gmail.com>
    Reviewed-by: Alex Elder <elder@linaro.org>
    Acked-by: Vaibhav Agarwal <vaibhav.sr@gmail.com>
    Acked-by: David Lin <dtwlin@gmail.com>
    Acked-by: Johan Hovold <johan@kernel.org>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Acked-by: Mark Greer <mgreer@animalcreek.com>
    Acked-by: Rui Miguel Silva <rmfrfs@gmail.com>
    Acked-by: "Bryan O'Donoghue" <pure.logic@nexus-software.ie>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/greybus/arche_platform.h b/drivers/staging/greybus/arche_platform.h
index 933be229b6d9..02056351d25a 100644
--- a/drivers/staging/greybus/arche_platform.h
+++ b/drivers/staging/greybus/arche_platform.h
@@ -4,8 +4,6 @@
  *
  * Copyright 2015-2016 Google Inc.
  * Copyright 2015-2016 Linaro Ltd.
- *
- * Released under the GPLv2 only.
  */
 
 #ifndef __ARCHE_PLATFORM_H

commit eb50fd3a22c770f36be275295b782f3ea52e3215
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Nov 7 14:58:41 2017 +0100

    staging: greybus: add SPDX identifiers to all greybus driver files
    
    It's good to have SPDX identifiers in all files to make it easier to
    audit the kernel tree for correct licenses.
    
    Update the drivers/staging/greybus files files with the correct SPDX
    license identifier based on the license text in the file itself.  The
    SPDX identifier is a legally binding shorthand, which can be used
    instead of the full boiler plate text.
    
    This work is based on a script and data from Thomas Gleixner, Philippe
    Ombredanne, and Kate Stewart.
    
    Cc: Vaibhav Hiremath <hvaibhav.linux@gmail.com>
    Cc: "Bryan O'Donoghue" <pure.logic@nexus-software.ie>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Kate Stewart <kstewart@linuxfoundation.org>
    Cc: Philippe Ombredanne <pombredanne@nexb.com>
    Acked-by: Vaibhav Agarwal <vaibhav.sr@gmail.com>
    Acked-by: David Lin <dtwlin@gmail.com>
    Reviewed-by: Alex Elder <elder@linaro.org>
    Acked-by: Johan Hovold <johan@kernel.org>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Acked-by: Mark Greer <mgreer@animalcreek.com>
    Acked-by: Rui Miguel Silva <rmfrfs@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/greybus/arche_platform.h b/drivers/staging/greybus/arche_platform.h
index bcffc69d0960..933be229b6d9 100644
--- a/drivers/staging/greybus/arche_platform.h
+++ b/drivers/staging/greybus/arche_platform.h
@@ -1,3 +1,4 @@
+// SPDX-License-Identifier: GPL-2.0
 /*
  * Arche Platform driver to enable Unipro link.
  *

commit 1e029b836108d0b68ba574482604247c97cb4757
Author: Johan Hovold <johan@kernel.org>
Date:   Tue May 16 10:01:38 2017 +0200

    staging: greybus: arche: remove timesync remains
    
    Remove the remaining timesync bits that were left in the arche platform
    driver and which prevented the driver from being compiled.
    
    Fixes: bdfb95c4baab ("staging: greybus: remove timesync protocol support")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/greybus/arche_platform.h b/drivers/staging/greybus/arche_platform.h
index c0591df9b9d6..bcffc69d0960 100644
--- a/drivers/staging/greybus/arche_platform.h
+++ b/drivers/staging/greybus/arche_platform.h
@@ -15,14 +15,8 @@ enum arche_platform_state {
 	ARCHE_PLATFORM_STATE_ACTIVE,
 	ARCHE_PLATFORM_STATE_STANDBY,
 	ARCHE_PLATFORM_STATE_FW_FLASHING,
-	ARCHE_PLATFORM_STATE_TIME_SYNC,
 };
 
-int arche_platform_change_state(enum arche_platform_state state,
-				struct gb_timesync_svc *pdata);
-
-extern int (*arche_platform_change_state_cb)(enum arche_platform_state state,
-					     struct gb_timesync_svc *pdata);
 int __init arche_apb_init(void);
 void __exit arche_apb_exit(void);
 
@@ -31,7 +25,5 @@ int apb_ctrl_coldboot(struct device *dev);
 int apb_ctrl_fw_flashing(struct device *dev);
 int apb_ctrl_standby_boot(struct device *dev);
 void apb_ctrl_poweroff(struct device *dev);
-void apb_bootret_assert(struct device *dev);
-void apb_bootret_deassert(struct device *dev);
 
 #endif	/* __ARCHE_PLATFORM_H */

commit bdfb95c4baab7ce58cb40dae71003a457b359772
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Jan 5 18:39:12 2017 +0100

    staging: greybus: remove timesync protocol support
    
    While the timesync protocol was a great idea, it never ended up getting
    implemented by any known hardware devices.  It's also a bit
    "interesting" in how it ties into the platform controller.
    
    So, just remove it for now.  It's not needed, no one uses it, and it's a
    stumbling block in getting the greybus core code merged out of the
    staging tree.  If anyone wants it in the future, reverting this patch is
    a great place to start from.
    
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Reviewed-by: Johan Hovold <johan@kernel.org>
    Reviewed-by: Alex Elder <elder@kernel.org>
    Acked-by: Bryan O'Donoghue <pure.logic@nexus-software.ie>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/greybus/arche_platform.h b/drivers/staging/greybus/arche_platform.h
index bd12345b82a2..c0591df9b9d6 100644
--- a/drivers/staging/greybus/arche_platform.h
+++ b/drivers/staging/greybus/arche_platform.h
@@ -10,8 +10,6 @@
 #ifndef __ARCHE_PLATFORM_H
 #define __ARCHE_PLATFORM_H
 
-#include "timesync.h"
-
 enum arche_platform_state {
 	ARCHE_PLATFORM_STATE_OFF,
 	ARCHE_PLATFORM_STATE_ACTIVE,

commit 970dc85bd95d931def5926ae81b5aa84ef14fb7c
Author: Bryan O'Donoghue <bryan.odonoghue@linaro.org>
Date:   Sun Jun 5 14:03:26 2016 +0100

    greybus: timesync: Add timesync core driver
    
    This patch adds the core timesync functionality.
    
    0. arche-platform.c/arche-apb-ctrl.c
       Modifies the platform layer to hook the incoming TIME_SYNC signal up to
       the timesync strobe IRQ handler. If the arche-platform driver can't
       satisfy the request for the wake-detect line, it will return -EAGAIN and
       the calling work-queue must reschedule the attempt to get exclusive
       access to the wake-detect pin logic. A private data field is added to
       the arche-platform driver to enable passing of a timesync pointer to the
       ISR responsible for synchronizing time.
    
    1. timesync.c
       A new file added which contains all of the logic associated with sending
       greybus commands to SVC, APBx or Interfaces to enable, disable and
       disseminate timing information.
    
    2. timesync_platform.c
       Any platform/arch specific code goes into timesync_platform.c.
       Originally the idea was to keep the x86 and ARM arch dependencies in a
       timesync_platform_arch.c file - however with further refinement that's
       currently not necessary however just-in-case it becomes necessary to
       resuscitate arch or platform specific methods for accessing timer
       resources that access shouldn't be part of the core timesync.c logic and
       so for the moment we access these timer resources through a thin access
       layer in timesync_platform.c. Expect this to go away long term ideally.
    
    Signed-off-by: Bryan O'Donoghue <bryan.odonoghue@linaro.org>
    Acked-by: Alex Elder <elder@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@google.com>

diff --git a/drivers/staging/greybus/arche_platform.h b/drivers/staging/greybus/arche_platform.h
index 0f2d29208f7f..bd12345b82a2 100644
--- a/drivers/staging/greybus/arche_platform.h
+++ b/drivers/staging/greybus/arche_platform.h
@@ -10,6 +10,8 @@
 #ifndef __ARCHE_PLATFORM_H
 #define __ARCHE_PLATFORM_H
 
+#include "timesync.h"
+
 enum arche_platform_state {
 	ARCHE_PLATFORM_STATE_OFF,
 	ARCHE_PLATFORM_STATE_ACTIVE,
@@ -18,8 +20,11 @@ enum arche_platform_state {
 	ARCHE_PLATFORM_STATE_TIME_SYNC,
 };
 
-int arche_platform_change_state(enum arche_platform_state state);
+int arche_platform_change_state(enum arche_platform_state state,
+				struct gb_timesync_svc *pdata);
 
+extern int (*arche_platform_change_state_cb)(enum arche_platform_state state,
+					     struct gb_timesync_svc *pdata);
 int __init arche_apb_init(void);
 void __exit arche_apb_exit(void);
 
@@ -28,5 +33,7 @@ int apb_ctrl_coldboot(struct device *dev);
 int apb_ctrl_fw_flashing(struct device *dev);
 int apb_ctrl_standby_boot(struct device *dev);
 void apb_ctrl_poweroff(struct device *dev);
+void apb_bootret_assert(struct device *dev);
+void apb_bootret_deassert(struct device *dev);
 
 #endif	/* __ARCHE_PLATFORM_H */

commit 886aba558b9e63c7025cabfaff8ca17f9fc02985
Author: Vaibhav Hiremath <vaibhav.hiremath@linaro.org>
Date:   Thu May 5 15:34:58 2016 +0100

    greybus: arche-platform: Export fn to allow timesync driver to change the state
    
    With the addition of the timesync driver and looking at the hardware
    interfaces we have, its clear we need to add a new arche-platform state.
    
    This patch adds ARCHE_PLATFORM_STATE_TIME_SYNC to the arche-platform driver
    to facilitate transition to the TIME_SYNC state if-and-only-if the
    arche-platform driver is in the ACTIVE state.
    
    This is mainly needed as wake/detect lines are shared between TIMESYNC
    operation and basic control functionality of APBs. So during TIMESYNC
    we want to make sure that the events on wake/detect lines are
    ignored by the arche-platform APB reset logic.
    
    This patch adds one exported function, which can be invoked from
    timesync driver code, allowing, switching between
    ARCHE_PLATFORM_STATE_TIME_SYNC <=> ARCHE_PLATFORM_STATE_ACTIVE states.
    
    [ bryan.odonoghue@linaro.org: Added mutex, massaged commit text ]
    
    Reviewed-by: Vaibhav Hiremath <vaibhav.hiremath@linaro.org>
    Signed-off-by: Vaibhav Hiremath <vaibhav.hiremath@linaro.org>
    Signed-off-by: Bryan O'Donoghue <bryan.odonoghue@linaro.org>
    Suggested-by: Alex Elder <elder@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@google.com>

diff --git a/drivers/staging/greybus/arche_platform.h b/drivers/staging/greybus/arche_platform.h
index 69b627b978b8..0f2d29208f7f 100644
--- a/drivers/staging/greybus/arche_platform.h
+++ b/drivers/staging/greybus/arche_platform.h
@@ -15,8 +15,10 @@ enum arche_platform_state {
 	ARCHE_PLATFORM_STATE_ACTIVE,
 	ARCHE_PLATFORM_STATE_STANDBY,
 	ARCHE_PLATFORM_STATE_FW_FLASHING,
+	ARCHE_PLATFORM_STATE_TIME_SYNC,
 };
 
+int arche_platform_change_state(enum arche_platform_state state);
 
 int __init arche_apb_init(void);
 void __exit arche_apb_exit(void);

commit 7b62b61c752a4700ecf11d63a7ec40aeb3cee66c
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Wed Apr 20 11:48:37 2016 +0530

    greybus: arche-ctrl: Don't expose driver internals to arche-platform driver
    
    We have chosen the *ugly* way of registering two platform drivers from
    the module_init() of only one of them, so that we can avoid having two
    separate modules for them.
    
    But we should still be doing this in a sane way. There is no need to
    expose internals of arche-ctrl to arche-platform, like PM-ops, probe,
    resume, id-table, etc. Just expose an init and a exit callback.
    
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Reviewed-by: Vaibhav Hiremath <vaibhav.hiremath@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@google.com>

diff --git a/drivers/staging/greybus/arche_platform.h b/drivers/staging/greybus/arche_platform.h
index 700c548d68db..69b627b978b8 100644
--- a/drivers/staging/greybus/arche_platform.h
+++ b/drivers/staging/greybus/arche_platform.h
@@ -18,8 +18,8 @@ enum arche_platform_state {
 };
 
 
-int arche_apb_ctrl_probe(struct platform_device *pdev);
-int arche_apb_ctrl_remove(struct platform_device *pdev);
+int __init arche_apb_init(void);
+void __exit arche_apb_exit(void);
 
 /* Operational states for the APB device */
 int apb_ctrl_coldboot(struct device *dev);
@@ -27,7 +27,4 @@ int apb_ctrl_fw_flashing(struct device *dev);
 int apb_ctrl_standby_boot(struct device *dev);
 void apb_ctrl_poweroff(struct device *dev);
 
-
-extern const struct dev_pm_ops arche_apb_ctrl_pm_ops;
-
 #endif	/* __ARCHE_PLATFORM_H */

commit 65fd5a5018c8c5b7ddf14dffa75474b3a9040851
Author: Vaibhav Hiremath <vaibhav.hiremath@linaro.org>
Date:   Sat Feb 13 02:04:16 2016 +0530

    greybus: arche-apb-ctrl: Export operational fns from driver
    
    In order to use single wake/detect line for both APB's we need to have
    access to APB operational functions to parent/SVC driver.
    So export coldboot, standby_boot, fw_flashing and poweroff operation
    functions from the driver.
    
    Testing Done: Tested on EVT1.2 and DB3.5 platform
    
    Signed-off-by: Vaibhav Hiremath <vaibhav.hiremath@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@google.com>

diff --git a/drivers/staging/greybus/arche_platform.h b/drivers/staging/greybus/arche_platform.h
index 27deeb7cd157..700c548d68db 100644
--- a/drivers/staging/greybus/arche_platform.h
+++ b/drivers/staging/greybus/arche_platform.h
@@ -17,8 +17,17 @@ enum arche_platform_state {
 	ARCHE_PLATFORM_STATE_FW_FLASHING,
 };
 
+
 int arche_apb_ctrl_probe(struct platform_device *pdev);
 int arche_apb_ctrl_remove(struct platform_device *pdev);
+
+/* Operational states for the APB device */
+int apb_ctrl_coldboot(struct device *dev);
+int apb_ctrl_fw_flashing(struct device *dev);
+int apb_ctrl_standby_boot(struct device *dev);
+void apb_ctrl_poweroff(struct device *dev);
+
+
 extern const struct dev_pm_ops arche_apb_ctrl_pm_ops;
 
 #endif	/* __ARCHE_PLATFORM_H */

commit 7691fed20e7301bd89b04d38f88262c83279817a
Author: Vaibhav Hiremath <vaibhav.hiremath@linaro.org>
Date:   Sat Feb 13 02:04:08 2016 +0530

    greybus: arche-platform: Introduce FW_FLASHING state
    
    Introduce FW_FLASHING state to arche-platform driver, to enable
    user space to flash/upgrade SVC firmware.
    
    Command to enter into flashing state:
    
      # echo fw_flashing > /sys/devices/arche_platform.*/state
    
    Testing Done: Tested on EVT1.2 and DB3.5 platform.
    
    Signed-off-by: Vaibhav Hiremath <vaibhav.hiremath@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@google.com>

diff --git a/drivers/staging/greybus/arche_platform.h b/drivers/staging/greybus/arche_platform.h
index 33c4bb8bca93..27deeb7cd157 100644
--- a/drivers/staging/greybus/arche_platform.h
+++ b/drivers/staging/greybus/arche_platform.h
@@ -14,6 +14,7 @@ enum arche_platform_state {
 	ARCHE_PLATFORM_STATE_OFF,
 	ARCHE_PLATFORM_STATE_ACTIVE,
 	ARCHE_PLATFORM_STATE_STANDBY,
+	ARCHE_PLATFORM_STATE_FW_FLASHING,
 };
 
 int arche_apb_ctrl_probe(struct platform_device *pdev);

commit a821adb47d28e22f96716b0ab8c4a8d5f7d3dadb
Author: Vaibhav Hiremath <vaibhav.hiremath@linaro.org>
Date:   Sat Feb 13 02:04:02 2016 +0530

    greybus: arche-platform: make apb_state common to both platform drivers
    
    Make 'enum apb_state' common to both platform drivers, so that
    both drivers can make use of same state and user will have
    unified control configuration across devices (SVC, APB1 and APB2)
    
    Testing Done: Tested on EVT1.2 and DB3.5 platform.
    
    Signed-off-by: Vaibhav Hiremath <vaibhav.hiremath@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@google.com>

diff --git a/drivers/staging/greybus/arche_platform.h b/drivers/staging/greybus/arche_platform.h
index 22a968a9197e..33c4bb8bca93 100644
--- a/drivers/staging/greybus/arche_platform.h
+++ b/drivers/staging/greybus/arche_platform.h
@@ -10,6 +10,12 @@
 #ifndef __ARCHE_PLATFORM_H
 #define __ARCHE_PLATFORM_H
 
+enum arche_platform_state {
+	ARCHE_PLATFORM_STATE_OFF,
+	ARCHE_PLATFORM_STATE_ACTIVE,
+	ARCHE_PLATFORM_STATE_STANDBY,
+};
+
 int arche_apb_ctrl_probe(struct platform_device *pdev);
 int arche_apb_ctrl_remove(struct platform_device *pdev);
 extern const struct dev_pm_ops arche_apb_ctrl_pm_ops;

commit 1e5dd1f8279a8a934b9df7adec47b944fe6b10f4
Author: Greg Kroah-Hartman <gregkh@google.com>
Date:   Wed Dec 30 13:38:33 2015 -0800

    greybus: arche-platform: merge arche-apb-ctrl and arche-platform
    
    No need to have two separate arche platform drivers, that's just crazy,
    so merge them both together to be only one kernel module.
    
    Signed-off-by: Greg Kroah-Hartman <gregkh@google.com>
    Reviewed-by: Vaibhav Hiremath <vaibhav.hiremath@linaro.org>
    Tested-by: Vaibhav Hiremath <vaibhav.hiremath@linaro.org>

diff --git a/drivers/staging/greybus/arche_platform.h b/drivers/staging/greybus/arche_platform.h
new file mode 100644
index 000000000000..22a968a9197e
--- /dev/null
+++ b/drivers/staging/greybus/arche_platform.h
@@ -0,0 +1,17 @@
+/*
+ * Arche Platform driver to enable Unipro link.
+ *
+ * Copyright 2015-2016 Google Inc.
+ * Copyright 2015-2016 Linaro Ltd.
+ *
+ * Released under the GPLv2 only.
+ */
+
+#ifndef __ARCHE_PLATFORM_H
+#define __ARCHE_PLATFORM_H
+
+int arche_apb_ctrl_probe(struct platform_device *pdev);
+int arche_apb_ctrl_remove(struct platform_device *pdev);
+extern const struct dev_pm_ops arche_apb_ctrl_pm_ops;
+
+#endif	/* __ARCHE_PLATFORM_H */
