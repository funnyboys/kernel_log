commit b69839391d444882d83c85a531da8b4e75a2b2e6
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Nov 7 14:58:44 2017 +0100

    staging: comedi: drivers: Remove redundant license text
    
    Now that the SPDX tag is in all comedi files, that identifies the
    license in a specific and legally-defined manner.  So the extra GPL text
    wording can be removed as it is no longer needed at all.
    
    This is done on a quest to remove the 700+ different ways that files in
    the kernel describe the GPL license text.  And there's unneeded stuff
    like the address (sometimes incorrect) for the FSF which is never
    needed.
    
    No copyright headers or other non-license-description text was removed.
    
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Cc: H Hartley Sweeten <hsweeten@visionengravers.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index e0c5fb18c7d6..41cc784320a9 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -6,16 +6,6 @@
  *
  * COMEDI - Linux Control and Measurement Device Interface
  * Copyright (C) 1999 Dan Block
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
  */
 
 /*

commit e184e2bed8fc895ce930624524d319289c1f1082
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Nov 7 14:58:43 2017 +0100

    staging: comedi: add SPDX identifiers to all greybus driver files
    
    It's good to have SPDX identifiers in all files to make it easier to
    audit the kernel tree for correct licenses.
    
    Update the drivers/staging/comedi files files with the correct SPDX
    license identifier based on the license text in the file itself.  The
    SPDX identifier is a legally binding shorthand, which can be used
    instead of the full boiler plate text.
    
    This work is based on a script and data from Thomas Gleixner, Philippe
    Ombredanne, and Kate Stewart.
    
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Cc: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Kate Stewart <kstewart@linuxfoundation.org>
    Cc: Philippe Ombredanne <pombredanne@nexb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index 8ee732571588..e0c5fb18c7d6 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -1,3 +1,4 @@
+// SPDX-License-Identifier: GPL-2.0+
 /*
  * c6xdigio.c
  * Hardware driver for Mechatronic Systems Inc. C6x_DIGIO DSP daughter card.

commit 9bc9e60e4f48b2917718d0dcf8a3cbb9f7687dd7
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Mar 30 12:34:53 2016 -0700

    staging: comedi: c6xdigio: Prefer using the BIT macro
    
    Fix the checkpatch.pl issues.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index 1a109e30d8ff..8ee732571588 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -47,8 +47,8 @@
  */
 #define C6XDIGIO_DATA_REG	0x00
 #define C6XDIGIO_DATA_CHAN(x)	(((x) + 1) << 4)
-#define C6XDIGIO_DATA_PWM	(1 << 5)
-#define C6XDIGIO_DATA_ENCODER	(1 << 6)
+#define C6XDIGIO_DATA_PWM	BIT(5)
+#define C6XDIGIO_DATA_ENCODER	BIT(6)
 #define C6XDIGIO_STATUS_REG	0x01
 #define C6XDIGIO_CTRL_REG	0x02
 

commit cd07d33a66a0c88bc53dcceab910f1b7d18b1c80
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Mon Jan 5 17:54:35 2015 +0000

    staging: comedi: c6xdigio: rewrite "Devices:" line
    
    Rewrite the "Devices:" line in the comedi "driver" comment to conform to
    the usual comedi format for this line.  The line should be a
    comma-separated list where the first item is in the following format:
    
      [Manufacturer] BOARD-NAME (comedi-board-name)
    
    The "[Manufacturer]" and/or "(comedi-board-name)" parts may be omitted
    from following items, in which case the parts from the preceding item
    are used.  The "Devices:" line may be continued continued over several
    lines by using one or more spaces at the start of each continuation line
    (not counting the space after the "*" in the block comment).
    
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Reviewed-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index e7cb7032a910..1a109e30d8ff 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -22,7 +22,7 @@
  * Description: Mechatronic Systems Inc. C6x_DIGIO DSP daughter card
  * Author: Dan Block
  * Status: unknown
- * Devices: (Mechatronic Systems Inc.) C6x_DIGIO DSP daughter card [c6xdigio]
+ * Devices: [Mechatronic Systems Inc.] C6x_DIGIO DSP daughter card (c6xdigio)
  * Updated: Sun Nov 20 20:18:34 EST 2005
  *
  * Configuration Options:

commit ef49d8329e25ee1686520315713b86419cddcb45
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Thu Oct 30 11:19:34 2014 -0700

    staging: comedi: drivers: replace SDF_WRITEABLE with SDF_WRITABLE
    
    As indicated in the comedi.h uapi header, SDF_WRITEABLE was a spelling
    error in the API, SDF_WRITABLE is prefered.
    
    For aesthetics, replace all the SDF_WRITEABLE uses with SDF_WRITABLE.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index e03dd6e71415..e7cb7032a910 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -265,7 +265,7 @@ static int c6xdigio_attach(struct comedi_device *dev,
 	s = &dev->subdevices[0];
 	/* pwm output subdevice */
 	s->type		= COMEDI_SUBD_PWM;
-	s->subdev_flags	= SDF_WRITEABLE;
+	s->subdev_flags	= SDF_WRITABLE;
 	s->n_chan	= 2;
 	s->maxdata	= 500;
 	s->range_table	= &range_unknown;

commit 82604bfb70d6ff6fb4902f7320529863a80b8007
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Mon Mar 10 14:07:42 2014 -0700

    staging: comedi: c6xdigio: update the MODULE_DESCRIPTION
    
    Change the generic MODULE_DESCRIPTION text to something more
    specific for this driver.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index 0551cca9faaf..e03dd6e71415 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -303,5 +303,5 @@ static struct comedi_driver c6xdigio_driver = {
 module_comedi_driver(c6xdigio_driver);
 
 MODULE_AUTHOR("Comedi http://www.comedi.org");
-MODULE_DESCRIPTION("Comedi low-level driver");
+MODULE_DESCRIPTION("Comedi driver for the C6x_DIGIO DSP daughter card");
 MODULE_LICENSE("GPL");

commit cc284a09b57fcdc80ebe21ab9119ce6a897f0bdc
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Mar 10 14:07:41 2014 -0700

    staging: comedi: c6xdigio: tidy up the multi-line comments
    
    Reformat the multi-line comments at the beginning of the code to
    follow the CodingStyle.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index 4114cf240b5b..0551cca9faaf 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -1,34 +1,33 @@
 /*
-   comedi/drivers/c6xdigio.c
-
-   Hardware driver for Mechatronic Systems Inc. C6x_DIGIO DSP daughter card.
-   (http://robot0.ge.uiuc.edu/~spong/mecha/)
-
-   COMEDI - Linux Control and Measurement Device Interface
-   Copyright (C) 1999 Dan Block
-
-   This program is free software; you can redistribute it and/or modify
-   it under the terms of the GNU General Public License as published by
-   the Free Software Foundation; either version 2 of the License, or
-   (at your option) any later version.
-
-   This program is distributed in the hope that it will be useful,
-   but WITHOUT ANY WARRANTY; without even the implied warranty of
-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-   GNU General Public License for more details.
+ * c6xdigio.c
+ * Hardware driver for Mechatronic Systems Inc. C6x_DIGIO DSP daughter card.
+ * http://web.archive.org/web/%2A/http://robot0.ge.uiuc.edu/~spong/mecha/
+ *
+ * COMEDI - Linux Control and Measurement Device Interface
+ * Copyright (C) 1999 Dan Block
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
  */
-/*
-Driver: c6xdigio
-Description: Mechatronic Systems Inc. C6x_DIGIO DSP daughter card
-Author: Dan Block
-Status: unknown
-Devices: [Mechatronic Systems Inc.] C6x_DIGIO DSP daughter card (c6xdigio)
-Updated: Sun Nov 20 20:18:34 EST 2005
-
-This driver will not work with a 2.4 kernel.
-http://robot0.ge.uiuc.edu/~spong/mecha/
 
-*/
+/*
+ * Driver: c6xdigio
+ * Description: Mechatronic Systems Inc. C6x_DIGIO DSP daughter card
+ * Author: Dan Block
+ * Status: unknown
+ * Devices: (Mechatronic Systems Inc.) C6x_DIGIO DSP daughter card [c6xdigio]
+ * Updated: Sun Nov 20 20:18:34 EST 2005
+ *
+ * Configuration Options:
+ *	[0] - base address
+ */
 
 #include <linux/kernel.h>
 #include <linux/module.h>

commit 8d9c93b4481f03a4f7658b97d6dc8996470a71e5
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Mar 10 14:07:40 2014 -0700

    staging: comedi: c6xdigio: add readback of last pwm channel values
    
    Add and (*insn_read) for the PWM subdevice to allow reading back the
    last value written to the channels.
    
    There are only 2 PWM channels and they have a maxdata of 500. Pack
    the last values in the subdevice 'state' instead of adding a private
    data struct to this driver.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index 20a5dfee9ed2..4114cf240b5b 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -162,13 +162,41 @@ static int c6xdigio_pwm_insn_write(struct comedi_device *dev,
 				   unsigned int *data)
 {
 	unsigned int chan = CR_CHAN(insn->chanspec);
+	unsigned int val = (s->state >> (16 * chan)) & 0xffff;
 	int i;
 
 	for (i = 0; i < insn->n; i++) {
-		c6xdigio_pwm_write(dev, chan, data[i]);
-		/*    devpriv->ao_readback[chan] = data[i]; */
+		val = data[i];
+		c6xdigio_pwm_write(dev, chan, val);
 	}
-	return i;
+
+	/*
+	 * There are only 2 PWM channels and they have a maxdata of 500.
+	 * Instead of allocating private data to save the values in for
+	 * readback this driver just packs the values for the two channels
+	 * in the s->state.
+	 */
+	s->state &= (0xffff << (16 * chan));
+	s->state |= (val << (16 * chan));
+
+	return insn->n;
+}
+
+static int c6xdigio_pwm_insn_read(struct comedi_device *dev,
+				  struct comedi_subdevice *s,
+				  struct comedi_insn *insn,
+				  unsigned int *data)
+{
+	unsigned int chan = CR_CHAN(insn->chanspec);
+	unsigned int val;
+	int i;
+
+	val = (s->state >> (16 * chan)) & 0xffff;
+
+	for (i = 0; i < insn->n; i++)
+		data[i] = val;
+
+	return insn->n;
 }
 
 static int c6xdigio_encoder_insn_read(struct comedi_device *dev,
@@ -243,6 +271,7 @@ static int c6xdigio_attach(struct comedi_device *dev,
 	s->maxdata	= 500;
 	s->range_table	= &range_unknown;
 	s->insn_write	= c6xdigio_pwm_insn_write;
+	s->insn_read	= c6xdigio_pwm_insn_read;
 
 	s = &dev->subdevices[1];
 	/* encoder (counter) subdevice */

commit a7b31d3996a866408ebd6d16992d166b0207c7c1
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Mar 10 14:07:39 2014 -0700

    staging: comedi: c6xdigio: use comedi_offset_munge()
    
    The value read from the encoders is in two's complement format. Use
    the comedi_offset_munge() helper to convert the value to offset binary.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index 3937e649f4cc..20a5dfee9ed2 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -153,7 +153,7 @@ static int c6xdigio_encoder_read(struct comedi_device *dev,
 
 	c6xdigio_write_data(dev, 0x00, 0x80);
 
-	return val ^ 0x800000;
+	return val;
 }
 
 static int c6xdigio_pwm_insn_write(struct comedi_device *dev,
@@ -177,12 +177,17 @@ static int c6xdigio_encoder_insn_read(struct comedi_device *dev,
 				      unsigned int *data)
 {
 	unsigned int chan = CR_CHAN(insn->chanspec);
-	int n;
+	unsigned int val;
+	int i;
 
-	for (n = 0; n < insn->n; n++)
-		data[n] = (c6xdigio_encoder_read(dev, chan) & 0xffffff);
+	for (i = 0; i < insn->n; i++) {
+		val = c6xdigio_encoder_read(dev, chan);
+
+		/* munge two's complement value to offset binary */
+		data[i] = comedi_offset_munge(s, val);
+	}
 
-	return n;
+	return insn->n;
 }
 
 static void c6xdigio_init(struct comedi_device *dev)

commit c034f1f6774d47bcc3ab1e17f5c892e94674d38a
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Mar 10 14:07:38 2014 -0700

    staging: comedi: c6xdigio: consolidate the board_init()
    
    For aesthetics, rename this function so it has namespace associated
    with the driver.
    
    Absorb the c6xdigio_pwm_init() and c6xdigio_encoder_reset() helpers.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index 63187c5d9ddf..3937e649f4cc 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -93,14 +93,6 @@ static int c6xdigio_get_encoder_bits(struct comedi_device *dev,
 	return c6xdigio_write_data(dev, cmd, status);
 }
 
-static void c6xdigio_pwm_init(struct comedi_device *dev)
-{
-	c6xdigio_write_data(dev, 0x70, 0x00);
-	c6xdigio_write_data(dev, 0x74, 0x80);
-	c6xdigio_write_data(dev, 0x70, 0x00);
-	c6xdigio_write_data(dev, 0x00, 0x80);
-}
-
 static void c6xdigio_pwm_write(struct comedi_device *dev,
 			       unsigned int chan, unsigned int val)
 {
@@ -164,14 +156,6 @@ static int c6xdigio_encoder_read(struct comedi_device *dev,
 	return val ^ 0x800000;
 }
 
-static void c6xdigio_encoder_reset(struct comedi_device *dev)
-{
-	c6xdigio_write_data(dev, 0x68, 0x00);
-	c6xdigio_write_data(dev, 0x6c, 0x80);
-	c6xdigio_write_data(dev, 0x68, 0x00);
-	c6xdigio_write_data(dev, 0x00, 0x80);
-}
-
 static int c6xdigio_pwm_insn_write(struct comedi_device *dev,
 				   struct comedi_subdevice *s,
 				   struct comedi_insn *insn,
@@ -201,10 +185,19 @@ static int c6xdigio_encoder_insn_read(struct comedi_device *dev,
 	return n;
 }
 
-static void board_init(struct comedi_device *dev)
+static void c6xdigio_init(struct comedi_device *dev)
 {
-	c6xdigio_pwm_init(dev);
-	c6xdigio_encoder_reset(dev);
+	/* Initialize the PWM */
+	c6xdigio_write_data(dev, 0x70, 0x00);
+	c6xdigio_write_data(dev, 0x74, 0x80);
+	c6xdigio_write_data(dev, 0x70, 0x00);
+	c6xdigio_write_data(dev, 0x00, 0x80);
+
+	/* Reset the encoders */
+	c6xdigio_write_data(dev, 0x68, 0x00);
+	c6xdigio_write_data(dev, 0x6c, 0x80);
+	c6xdigio_write_data(dev, 0x68, 0x00);
+	c6xdigio_write_data(dev, 0x00, 0x80);
 }
 
 static const struct pnp_device_id c6xdigio_pnp_tbl[] = {
@@ -257,7 +250,7 @@ static int c6xdigio_attach(struct comedi_device *dev,
 
 	/*  I will call this init anyway but more than likely the DSP board */
 	/*  will not be connected when device driver is loaded. */
-	board_init(dev);
+	c6xdigio_init(dev);
 
 	return 0;
 }

commit 3ccdcf3255fde9d9d3ffcd91877bd65304ed4528
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Mar 10 14:07:37 2014 -0700

    staging: comedi: c6xdigio: tidy up subdevice 1 init
    
    Remove the commented out init of the 'trig'.
    
    For aesthetics, add some whitespace to the init and rename the 'insn_read'
    function.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index 6207bc1086f6..63187c5d9ddf 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -187,9 +187,10 @@ static int c6xdigio_pwm_insn_write(struct comedi_device *dev,
 	return i;
 }
 
-static int c6xdigio_ei_insn_read(struct comedi_device *dev,
-				 struct comedi_subdevice *s,
-				 struct comedi_insn *insn, unsigned int *data)
+static int c6xdigio_encoder_insn_read(struct comedi_device *dev,
+				      struct comedi_subdevice *s,
+				      struct comedi_insn *insn,
+				      unsigned int *data)
 {
 	unsigned int chan = CR_CHAN(insn->chanspec);
 	int n;
@@ -247,13 +248,12 @@ static int c6xdigio_attach(struct comedi_device *dev,
 
 	s = &dev->subdevices[1];
 	/* encoder (counter) subdevice */
-	s->type = COMEDI_SUBD_COUNTER;
-	s->subdev_flags = SDF_READABLE | SDF_LSAMPL;
-	s->n_chan = 2;
-	/* s->trig[0] = c6xdigio_ei; */
-	s->insn_read = c6xdigio_ei_insn_read;
-	s->maxdata = 0xffffff;
-	s->range_table = &range_unknown;
+	s->type		= COMEDI_SUBD_COUNTER;
+	s->subdev_flags	= SDF_READABLE | SDF_LSAMPL;
+	s->n_chan	= 2;
+	s->maxdata	= 0xffffff;
+	s->range_table	= &range_unknown;
+	s->insn_read	= c6xdigio_encoder_insn_read;
 
 	/*  I will call this init anyway but more than likely the DSP board */
 	/*  will not be connected when device driver is loaded. */

commit 6c8df38a953391ac22b3931fcef9c22faf888c8b
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Mar 10 14:07:36 2014 -0700

    staging: comedi: c6xdigio: tidy up subdevice 0 init
    
    This subdevice is a PWM output not and analog output, fix the 'type'.
    
    Fix the subdevice 'range', range_bipolar does not make sense for a PWM
    output. The range_unknown is a better choice.
    
    Remove the commented out init of the 'trig'.
    
    For aesthetics, add some whitespace to the init and rename the 'insn_write'
    function.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index f15b39c4f708..6207bc1086f6 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -172,10 +172,10 @@ static void c6xdigio_encoder_reset(struct comedi_device *dev)
 	c6xdigio_write_data(dev, 0x00, 0x80);
 }
 
-static int c6xdigio_pwmo_insn_write(struct comedi_device *dev,
-				    struct comedi_subdevice *s,
-				    struct comedi_insn *insn,
-				    unsigned int *data)
+static int c6xdigio_pwm_insn_write(struct comedi_device *dev,
+				   struct comedi_subdevice *s,
+				   struct comedi_insn *insn,
+				   unsigned int *data)
 {
 	unsigned int chan = CR_CHAN(insn->chanspec);
 	int i;
@@ -238,13 +238,12 @@ static int c6xdigio_attach(struct comedi_device *dev,
 
 	s = &dev->subdevices[0];
 	/* pwm output subdevice */
-	s->type = COMEDI_SUBD_AO;	/*  Not sure what to put here */
-	s->subdev_flags = SDF_WRITEABLE;
-	s->n_chan = 2;
-	/*      s->trig[0] = c6xdigio_pwmo; */
-	s->insn_write = c6xdigio_pwmo_insn_write;
-	s->maxdata = 500;
-	s->range_table = &range_bipolar10;	/*  A suitable lie */
+	s->type		= COMEDI_SUBD_PWM;
+	s->subdev_flags	= SDF_WRITEABLE;
+	s->n_chan	= 2;
+	s->maxdata	= 500;
+	s->range_table	= &range_unknown;
+	s->insn_write	= c6xdigio_pwm_insn_write;
 
 	s = &dev->subdevices[1];
 	/* encoder (counter) subdevice */

commit 28c2c50c72bda86ff0c619345c72d2ea8f8b147b
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Mar 10 14:07:35 2014 -0700

    staging: comedi: c6xdigio: define the data register bits
    
    To clarify the code, define the bits in the data register and remove the
    magic numbers.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index a9066d615260..f15b39c4f708 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -47,6 +47,9 @@ This driver will not work with a 2.4 kernel.
  * Register I/O map
  */
 #define C6XDIGIO_DATA_REG	0x00
+#define C6XDIGIO_DATA_CHAN(x)	(((x) + 1) << 4)
+#define C6XDIGIO_DATA_PWM	(1 << 5)
+#define C6XDIGIO_DATA_ENCODER	(1 << 6)
 #define C6XDIGIO_STATUS_REG	0x01
 #define C6XDIGIO_CTRL_REG	0x02
 
@@ -101,13 +104,8 @@ static void c6xdigio_pwm_init(struct comedi_device *dev)
 static void c6xdigio_pwm_write(struct comedi_device *dev,
 			       unsigned int chan, unsigned int val)
 {
+	unsigned int cmd = C6XDIGIO_DATA_PWM | C6XDIGIO_DATA_CHAN(chan);
 	unsigned int bits;
-	unsigned ppcmd;
-
-	if (chan == 0)
-		ppcmd = 0x28;
-	else
-		ppcmd = 0x30;
 
 	if (val > 498)
 		val = 498;
@@ -115,15 +113,15 @@ static void c6xdigio_pwm_write(struct comedi_device *dev,
 		val = 2;
 
 	bits = (val >> 0) & 0x03;
-	c6xdigio_write_data(dev, ppcmd + bits, 0x00);
+	c6xdigio_write_data(dev, cmd | bits | (0 << 2), 0x00);
 	bits = (val >> 2) & 0x03;
-	c6xdigio_write_data(dev, ppcmd + bits + 0x4, 0x80);
+	c6xdigio_write_data(dev, cmd | bits | (1 << 2), 0x80);
 	bits = (val >> 4) & 0x03;
-	c6xdigio_write_data(dev, ppcmd + bits, 0x00);
+	c6xdigio_write_data(dev, cmd | bits | (0 << 2), 0x00);
 	bits = (val >> 6) & 0x03;
-	c6xdigio_write_data(dev, ppcmd + bits + 0x4, 0x80);
+	c6xdigio_write_data(dev, cmd | bits | (1 << 2), 0x80);
 	bits = (val >> 8) & 0x03;
-	c6xdigio_write_data(dev, ppcmd + bits, 0x00);
+	c6xdigio_write_data(dev, cmd | bits | (0 << 2), 0x00);
 
 	c6xdigio_write_data(dev, 0x00, 0x80);
 }
@@ -131,39 +129,34 @@ static void c6xdigio_pwm_write(struct comedi_device *dev,
 static int c6xdigio_encoder_read(struct comedi_device *dev,
 				 unsigned int chan)
 {
+	unsigned int cmd = C6XDIGIO_DATA_ENCODER | C6XDIGIO_DATA_CHAN(chan);
 	unsigned int val = 0;
 	unsigned int bits;
-	unsigned ppcmd;
-
-	if (chan == 0)
-		ppcmd = 0x48;
-	else
-		ppcmd = 0x50;
 
-	c6xdigio_write_data(dev, ppcmd, 0x00);
+	c6xdigio_write_data(dev, cmd, 0x00);
 
-	c6xdigio_get_encoder_bits(dev, &bits, ppcmd + 0x04, 0x80);
+	c6xdigio_get_encoder_bits(dev, &bits, cmd | (1 << 2), 0x80);
 	val |= (bits << 0);
 
-	c6xdigio_get_encoder_bits(dev, &bits, ppcmd, 0x00);
+	c6xdigio_get_encoder_bits(dev, &bits, cmd | (0 << 2), 0x00);
 	val |= (bits << 3);
 
-	c6xdigio_get_encoder_bits(dev, &bits, ppcmd + 0x04, 0x80);
+	c6xdigio_get_encoder_bits(dev, &bits, cmd | (1 << 2), 0x80);
 	val |= (bits << 6);
 
-	c6xdigio_get_encoder_bits(dev, &bits, ppcmd, 0x00);
+	c6xdigio_get_encoder_bits(dev, &bits, cmd | (0 << 2), 0x00);
 	val |= (bits << 9);
 
-	c6xdigio_get_encoder_bits(dev, &bits, ppcmd + 0x04, 0x80);
+	c6xdigio_get_encoder_bits(dev, &bits, cmd | (1 << 2), 0x80);
 	val |= (bits << 12);
 
-	c6xdigio_get_encoder_bits(dev, &bits, ppcmd, 0x00);
+	c6xdigio_get_encoder_bits(dev, &bits, cmd | (0 << 2), 0x00);
 	val |= (bits << 15);
 
-	c6xdigio_get_encoder_bits(dev, &bits, ppcmd + 0x04, 0x80);
+	c6xdigio_get_encoder_bits(dev, &bits, cmd | (1 << 2), 0x80);
 	val |= (bits << 18);
 
-	c6xdigio_get_encoder_bits(dev, &bits, ppcmd, 0x00);
+	c6xdigio_get_encoder_bits(dev, &bits, cmd | (0 << 2), 0x00);
 	val |= (bits << 21);
 
 	c6xdigio_write_data(dev, 0x00, 0x80);

commit 19d0a872841a2714444af0ccd2a3e1d7281ef357
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Mar 10 14:07:34 2014 -0700

    staging: comedi: c6xdigio: tidy up c6xdigio_pwm_write()
    
    The 10-bit pwm value (2-498) is written by banging 2-bits in the data register.
    
    Refactor this function to remove the need for the union pcmcmdtype and struct
    pwmbitstype.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index 7c2c19f47289..a9066d615260 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -50,18 +50,6 @@ This driver will not work with a 2.4 kernel.
 #define C6XDIGIO_STATUS_REG	0x01
 #define C6XDIGIO_CTRL_REG	0x02
 
-struct pwmbitstype {
-	unsigned sb0:2;
-	unsigned sb1:2;
-	unsigned sb2:2;
-	unsigned sb3:2;
-	unsigned sb4:2;
-};
-union pwmcmdtype {
-	unsigned cmd;		/*  assuming here that int is 32bit */
-	struct pwmbitstype bits;
-};
-
 #define C6XDIGIO_TIME_OUT 20
 
 static int c6xdigio_chk_status(struct comedi_device *dev, unsigned long context)
@@ -113,25 +101,30 @@ static void c6xdigio_pwm_init(struct comedi_device *dev)
 static void c6xdigio_pwm_write(struct comedi_device *dev,
 			       unsigned int chan, unsigned int val)
 {
+	unsigned int bits;
 	unsigned ppcmd;
-	union pwmcmdtype pwm;
-
-	pwm.cmd = val;
-	if (pwm.cmd > 498)
-		pwm.cmd = 498;
-	if (pwm.cmd < 2)
-		pwm.cmd = 2;
 
 	if (chan == 0)
 		ppcmd = 0x28;
 	else
 		ppcmd = 0x30;
 
-	c6xdigio_write_data(dev, ppcmd + pwm.bits.sb0, 0x00);
-	c6xdigio_write_data(dev, ppcmd + pwm.bits.sb1 + 0x4, 0x80);
-	c6xdigio_write_data(dev, ppcmd + pwm.bits.sb2, 0x00);
-	c6xdigio_write_data(dev, ppcmd + pwm.bits.sb3 + 0x4, 0x80);
-	c6xdigio_write_data(dev, ppcmd + pwm.bits.sb4, 0x00);
+	if (val > 498)
+		val = 498;
+	if (val < 2)
+		val = 2;
+
+	bits = (val >> 0) & 0x03;
+	c6xdigio_write_data(dev, ppcmd + bits, 0x00);
+	bits = (val >> 2) & 0x03;
+	c6xdigio_write_data(dev, ppcmd + bits + 0x4, 0x80);
+	bits = (val >> 4) & 0x03;
+	c6xdigio_write_data(dev, ppcmd + bits, 0x00);
+	bits = (val >> 6) & 0x03;
+	c6xdigio_write_data(dev, ppcmd + bits + 0x4, 0x80);
+	bits = (val >> 8) & 0x03;
+	c6xdigio_write_data(dev, ppcmd + bits, 0x00);
+
 	c6xdigio_write_data(dev, 0x00, 0x80);
 }
 

commit bea8052074691c70526ae6a555d25f111c0aad0a
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Mar 10 14:07:33 2014 -0700

    staging: comedi: c6xdigio: introduce c6xdigio_get_encoder_bits()
    
    The 24-bit encoder value is read using 3-bits in the status register. The
    data register is banged between each read of the status register to advance
    the bits.
    
    Introduce a helper function to handle this and remove the union encvaluetype
    and struct encbitsbyte.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index a05196b56ed4..7c2c19f47289 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -61,20 +61,6 @@ union pwmcmdtype {
 	unsigned cmd;		/*  assuming here that int is 32bit */
 	struct pwmbitstype bits;
 };
-struct encbitstype {
-	unsigned sb0:3;
-	unsigned sb1:3;
-	unsigned sb2:3;
-	unsigned sb3:3;
-	unsigned sb4:3;
-	unsigned sb5:3;
-	unsigned sb6:3;
-	unsigned sb7:3;
-};
-union encvaluetype {
-	unsigned value;
-	struct encbitstype bits;
-};
 
 #define C6XDIGIO_TIME_OUT 20
 
@@ -100,6 +86,22 @@ static int c6xdigio_write_data(struct comedi_device *dev,
 	return c6xdigio_chk_status(dev, status);
 }
 
+static int c6xdigio_get_encoder_bits(struct comedi_device *dev,
+				     unsigned int *bits,
+				     unsigned int cmd,
+				     unsigned int status)
+{
+	unsigned int val;
+
+	val = inb(dev->iobase + C6XDIGIO_STATUS_REG);
+	val >>= 3;
+	val &= 0x07;
+
+	*bits = val;
+
+	return c6xdigio_write_data(dev, cmd, status);
+}
+
 static void c6xdigio_pwm_init(struct comedi_device *dev)
 {
 	c6xdigio_write_data(dev, 0x70, 0x00);
@@ -136,10 +138,10 @@ static void c6xdigio_pwm_write(struct comedi_device *dev,
 static int c6xdigio_encoder_read(struct comedi_device *dev,
 				 unsigned int chan)
 {
+	unsigned int val = 0;
+	unsigned int bits;
 	unsigned ppcmd;
-	union encvaluetype enc;
 
-	enc.value = 0;
 	if (chan == 0)
 		ppcmd = 0x48;
 	else
@@ -147,33 +149,33 @@ static int c6xdigio_encoder_read(struct comedi_device *dev,
 
 	c6xdigio_write_data(dev, ppcmd, 0x00);
 
-	enc.bits.sb0 = ((inb(dev->iobase + C6XDIGIO_STATUS_REG) >> 3) & 0x7);
-	c6xdigio_write_data(dev, ppcmd + 0x4, 0x80);
+	c6xdigio_get_encoder_bits(dev, &bits, ppcmd + 0x04, 0x80);
+	val |= (bits << 0);
 
-	enc.bits.sb1 = ((inb(dev->iobase + C6XDIGIO_STATUS_REG) >> 3) & 0x7);
-	c6xdigio_write_data(dev, ppcmd, 0x00);
+	c6xdigio_get_encoder_bits(dev, &bits, ppcmd, 0x00);
+	val |= (bits << 3);
 
-	enc.bits.sb2 = ((inb(dev->iobase + C6XDIGIO_STATUS_REG) >> 3) & 0x7);
-	c6xdigio_write_data(dev, ppcmd + 0x4, 0x80);
+	c6xdigio_get_encoder_bits(dev, &bits, ppcmd + 0x04, 0x80);
+	val |= (bits << 6);
 
-	enc.bits.sb3 = ((inb(dev->iobase + C6XDIGIO_STATUS_REG) >> 3) & 0x7);
-	c6xdigio_write_data(dev, ppcmd, 0x00);
+	c6xdigio_get_encoder_bits(dev, &bits, ppcmd, 0x00);
+	val |= (bits << 9);
 
-	enc.bits.sb4 = ((inb(dev->iobase + C6XDIGIO_STATUS_REG) >> 3) & 0x7);
-	c6xdigio_write_data(dev, ppcmd + 0x4, 0x80);
+	c6xdigio_get_encoder_bits(dev, &bits, ppcmd + 0x04, 0x80);
+	val |= (bits << 12);
 
-	enc.bits.sb5 = ((inb(dev->iobase + C6XDIGIO_STATUS_REG) >> 3) & 0x7);
-	c6xdigio_write_data(dev, ppcmd, 0x00);
+	c6xdigio_get_encoder_bits(dev, &bits, ppcmd, 0x00);
+	val |= (bits << 15);
 
-	enc.bits.sb6 = ((inb(dev->iobase + C6XDIGIO_STATUS_REG) >> 3) & 0x7);
-	c6xdigio_write_data(dev, ppcmd + 0x4, 0x80);
+	c6xdigio_get_encoder_bits(dev, &bits, ppcmd + 0x04, 0x80);
+	val |= (bits << 18);
 
-	enc.bits.sb7 = ((inb(dev->iobase + C6XDIGIO_STATUS_REG) >> 3) & 0x7);
-	c6xdigio_write_data(dev, ppcmd, 0x00);
+	c6xdigio_get_encoder_bits(dev, &bits, ppcmd, 0x00);
+	val |= (bits << 21);
 
 	c6xdigio_write_data(dev, 0x00, 0x80);
 
-	return enc.value ^ 0x800000;
+	return val ^ 0x800000;
 }
 
 static void c6xdigio_encoder_reset(struct comedi_device *dev)

commit 721869e85594de3e94e4be900c734b02f6c3ecad
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Mar 10 14:07:32 2014 -0700

    staging: comedi: c6xdigio: define the register map
    
    The register map was already defined but it was not being used. Rename
    to defines and use them in the code.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index 2189e5bc316f..a05196b56ed4 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -44,11 +44,12 @@ This driver will not work with a 2.4 kernel.
 #include "../comedidev.h"
 
 /*
- * port offsets
+ * Register I/O map
  */
-#define C6XDIGIO_PARALLEL_DATA 0
-#define C6XDIGIO_PARALLEL_STATUS 1
-#define C6XDIGIO_PARALLEL_CONTROL 2
+#define C6XDIGIO_DATA_REG	0x00
+#define C6XDIGIO_STATUS_REG	0x01
+#define C6XDIGIO_CTRL_REG	0x02
+
 struct pwmbitstype {
 	unsigned sb0:2;
 	unsigned sb1:2;
@@ -83,7 +84,7 @@ static int c6xdigio_chk_status(struct comedi_device *dev, unsigned long context)
 	int timeout = 0;
 
 	do {
-		status = inb(dev->iobase + 1);
+		status = inb(dev->iobase + C6XDIGIO_STATUS_REG);
 		if ((status & 0x80) != context)
 			return 0;
 		timeout++;
@@ -95,7 +96,7 @@ static int c6xdigio_chk_status(struct comedi_device *dev, unsigned long context)
 static int c6xdigio_write_data(struct comedi_device *dev,
 			       unsigned int val, unsigned int status)
 {
-	outb_p(val, dev->iobase);
+	outb_p(val, dev->iobase + C6XDIGIO_DATA_REG);
 	return c6xdigio_chk_status(dev, status);
 }
 
@@ -146,28 +147,28 @@ static int c6xdigio_encoder_read(struct comedi_device *dev,
 
 	c6xdigio_write_data(dev, ppcmd, 0x00);
 
-	enc.bits.sb0 = ((inb(dev->iobase + 1) >> 3) & 0x7);
+	enc.bits.sb0 = ((inb(dev->iobase + C6XDIGIO_STATUS_REG) >> 3) & 0x7);
 	c6xdigio_write_data(dev, ppcmd + 0x4, 0x80);
 
-	enc.bits.sb1 = ((inb(dev->iobase + 1) >> 3) & 0x7);
+	enc.bits.sb1 = ((inb(dev->iobase + C6XDIGIO_STATUS_REG) >> 3) & 0x7);
 	c6xdigio_write_data(dev, ppcmd, 0x00);
 
-	enc.bits.sb2 = ((inb(dev->iobase + 1) >> 3) & 0x7);
+	enc.bits.sb2 = ((inb(dev->iobase + C6XDIGIO_STATUS_REG) >> 3) & 0x7);
 	c6xdigio_write_data(dev, ppcmd + 0x4, 0x80);
 
-	enc.bits.sb3 = ((inb(dev->iobase + 1) >> 3) & 0x7);
+	enc.bits.sb3 = ((inb(dev->iobase + C6XDIGIO_STATUS_REG) >> 3) & 0x7);
 	c6xdigio_write_data(dev, ppcmd, 0x00);
 
-	enc.bits.sb4 = ((inb(dev->iobase + 1) >> 3) & 0x7);
+	enc.bits.sb4 = ((inb(dev->iobase + C6XDIGIO_STATUS_REG) >> 3) & 0x7);
 	c6xdigio_write_data(dev, ppcmd + 0x4, 0x80);
 
-	enc.bits.sb5 = ((inb(dev->iobase + 1) >> 3) & 0x7);
+	enc.bits.sb5 = ((inb(dev->iobase + C6XDIGIO_STATUS_REG) >> 3) & 0x7);
 	c6xdigio_write_data(dev, ppcmd, 0x00);
 
-	enc.bits.sb6 = ((inb(dev->iobase + 1) >> 3) & 0x7);
+	enc.bits.sb6 = ((inb(dev->iobase + C6XDIGIO_STATUS_REG) >> 3) & 0x7);
 	c6xdigio_write_data(dev, ppcmd + 0x4, 0x80);
 
-	enc.bits.sb7 = ((inb(dev->iobase + 1) >> 3) & 0x7);
+	enc.bits.sb7 = ((inb(dev->iobase + C6XDIGIO_STATUS_REG) >> 3) & 0x7);
 	c6xdigio_write_data(dev, ppcmd, 0x00);
 
 	c6xdigio_write_data(dev, 0x00, 0x80);

commit 6d758307ee8929e86e2da09826c525ba4af05f1e
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Mar 10 14:07:31 2014 -0700

    staging: comedi: c6xdigio: introduce c6xdigio_write_data()
    
    All writes to the hardware involve writing the the data register then
    checking the status register. Introduce a helper function to handle this.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index d1860f67d63a..2189e5bc316f 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -92,19 +92,19 @@ static int c6xdigio_chk_status(struct comedi_device *dev, unsigned long context)
 	return -EBUSY;
 }
 
-static void c6xdigio_pwm_init(struct comedi_device *dev)
+static int c6xdigio_write_data(struct comedi_device *dev,
+			       unsigned int val, unsigned int status)
 {
-	outb_p(0x70, dev->iobase);
-	c6xdigio_chk_status(dev, 0x00);
-
-	outb_p(0x74, dev->iobase);
-	c6xdigio_chk_status(dev, 0x80);
-
-	outb_p(0x70, dev->iobase);
-	c6xdigio_chk_status(dev, 0x00);
+	outb_p(val, dev->iobase);
+	return c6xdigio_chk_status(dev, status);
+}
 
-	outb_p(0x0, dev->iobase);
-	c6xdigio_chk_status(dev, 0x80);
+static void c6xdigio_pwm_init(struct comedi_device *dev)
+{
+	c6xdigio_write_data(dev, 0x70, 0x00);
+	c6xdigio_write_data(dev, 0x74, 0x80);
+	c6xdigio_write_data(dev, 0x70, 0x00);
+	c6xdigio_write_data(dev, 0x00, 0x80);
 }
 
 static void c6xdigio_pwm_write(struct comedi_device *dev,
@@ -124,23 +124,12 @@ static void c6xdigio_pwm_write(struct comedi_device *dev,
 	else
 		ppcmd = 0x30;
 
-	outb_p(ppcmd + pwm.bits.sb0, dev->iobase);
-	c6xdigio_chk_status(dev, 0x00);
-
-	outb_p(ppcmd + pwm.bits.sb1 + 0x4, dev->iobase);
-	c6xdigio_chk_status(dev, 0x80);
-
-	outb_p(ppcmd + pwm.bits.sb2, dev->iobase);
-	c6xdigio_chk_status(dev, 0x00);
-
-	outb_p(ppcmd + pwm.bits.sb3 + 0x4, dev->iobase);
-	c6xdigio_chk_status(dev, 0x80);
-
-	outb_p(ppcmd + pwm.bits.sb4, dev->iobase);
-	c6xdigio_chk_status(dev, 0x00);
-
-	outb_p(0x0, dev->iobase);
-	c6xdigio_chk_status(dev, 0x80);
+	c6xdigio_write_data(dev, ppcmd + pwm.bits.sb0, 0x00);
+	c6xdigio_write_data(dev, ppcmd + pwm.bits.sb1 + 0x4, 0x80);
+	c6xdigio_write_data(dev, ppcmd + pwm.bits.sb2, 0x00);
+	c6xdigio_write_data(dev, ppcmd + pwm.bits.sb3 + 0x4, 0x80);
+	c6xdigio_write_data(dev, ppcmd + pwm.bits.sb4, 0x00);
+	c6xdigio_write_data(dev, 0x00, 0x80);
 }
 
 static int c6xdigio_encoder_read(struct comedi_device *dev,
@@ -155,60 +144,43 @@ static int c6xdigio_encoder_read(struct comedi_device *dev,
 	else
 		ppcmd = 0x50;
 
-	outb_p(ppcmd, dev->iobase);
-	c6xdigio_chk_status(dev, 0x00);
+	c6xdigio_write_data(dev, ppcmd, 0x00);
 
 	enc.bits.sb0 = ((inb(dev->iobase + 1) >> 3) & 0x7);
-	outb_p(ppcmd + 0x4, dev->iobase);
-	c6xdigio_chk_status(dev, 0x80);
+	c6xdigio_write_data(dev, ppcmd + 0x4, 0x80);
 
 	enc.bits.sb1 = ((inb(dev->iobase + 1) >> 3) & 0x7);
-	outb_p(ppcmd, dev->iobase);
-	c6xdigio_chk_status(dev, 0x00);
+	c6xdigio_write_data(dev, ppcmd, 0x00);
 
 	enc.bits.sb2 = ((inb(dev->iobase + 1) >> 3) & 0x7);
-	outb_p(ppcmd + 0x4, dev->iobase);
-	c6xdigio_chk_status(dev, 0x80);
+	c6xdigio_write_data(dev, ppcmd + 0x4, 0x80);
 
 	enc.bits.sb3 = ((inb(dev->iobase + 1) >> 3) & 0x7);
-	outb_p(ppcmd, dev->iobase);
-	c6xdigio_chk_status(dev, 0x00);
+	c6xdigio_write_data(dev, ppcmd, 0x00);
 
 	enc.bits.sb4 = ((inb(dev->iobase + 1) >> 3) & 0x7);
-	outb_p(ppcmd + 0x4, dev->iobase);
-	c6xdigio_chk_status(dev, 0x80);
+	c6xdigio_write_data(dev, ppcmd + 0x4, 0x80);
 
 	enc.bits.sb5 = ((inb(dev->iobase + 1) >> 3) & 0x7);
-	outb_p(ppcmd, dev->iobase);
-	c6xdigio_chk_status(dev, 0x00);
+	c6xdigio_write_data(dev, ppcmd, 0x00);
 
 	enc.bits.sb6 = ((inb(dev->iobase + 1) >> 3) & 0x7);
-	outb_p(ppcmd + 0x4, dev->iobase);
-	c6xdigio_chk_status(dev, 0x80);
+	c6xdigio_write_data(dev, ppcmd + 0x4, 0x80);
 
 	enc.bits.sb7 = ((inb(dev->iobase + 1) >> 3) & 0x7);
-	outb_p(ppcmd, dev->iobase);
-	c6xdigio_chk_status(dev, 0x00);
+	c6xdigio_write_data(dev, ppcmd, 0x00);
 
-	outb_p(0x0, dev->iobase);
-	c6xdigio_chk_status(dev, 0x80);
+	c6xdigio_write_data(dev, 0x00, 0x80);
 
 	return enc.value ^ 0x800000;
 }
 
 static void c6xdigio_encoder_reset(struct comedi_device *dev)
 {
-	outb_p(0x68, dev->iobase);
-	c6xdigio_chk_status(dev, 0x00);
-
-	outb_p(0x6c, dev->iobase);
-	c6xdigio_chk_status(dev, 0x80);
-
-	outb_p(0x68, dev->iobase);
-	c6xdigio_chk_status(dev, 0x00);
-
-	outb_p(0x0, dev->iobase);
-	c6xdigio_chk_status(dev, 0x80);
+	c6xdigio_write_data(dev, 0x68, 0x00);
+	c6xdigio_write_data(dev, 0x6c, 0x80);
+	c6xdigio_write_data(dev, 0x68, 0x00);
+	c6xdigio_write_data(dev, 0x00, 0x80);
 }
 
 static int c6xdigio_pwmo_insn_write(struct comedi_device *dev,

commit bf336ebfdb038b30143267ed1c64dc1ebc9ec1c1
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Mar 10 14:07:30 2014 -0700

    staging: comedi: c6xdigio: change first param to c6xdigio_chk_status()
    
    For aesthetics, pass the comedi_device pointer instead of the dev->iobase
    as the first parameter.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index 114ca43d48bb..d1860f67d63a 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -77,13 +77,13 @@ union encvaluetype {
 
 #define C6XDIGIO_TIME_OUT 20
 
-static int c6xdigio_chk_status(unsigned long baseAddr, unsigned long context)
+static int c6xdigio_chk_status(struct comedi_device *dev, unsigned long context)
 {
 	unsigned int status;
 	int timeout = 0;
 
 	do {
-		status = inb(baseAddr + 1);
+		status = inb(dev->iobase + 1);
 		if ((status & 0x80) != context)
 			return 0;
 		timeout++;
@@ -95,16 +95,16 @@ static int c6xdigio_chk_status(unsigned long baseAddr, unsigned long context)
 static void c6xdigio_pwm_init(struct comedi_device *dev)
 {
 	outb_p(0x70, dev->iobase);
-	c6xdigio_chk_status(dev->iobase, 0x00);
+	c6xdigio_chk_status(dev, 0x00);
 
 	outb_p(0x74, dev->iobase);
-	c6xdigio_chk_status(dev->iobase, 0x80);
+	c6xdigio_chk_status(dev, 0x80);
 
 	outb_p(0x70, dev->iobase);
-	c6xdigio_chk_status(dev->iobase, 0x00);
+	c6xdigio_chk_status(dev, 0x00);
 
 	outb_p(0x0, dev->iobase);
-	c6xdigio_chk_status(dev->iobase, 0x80);
+	c6xdigio_chk_status(dev, 0x80);
 }
 
 static void c6xdigio_pwm_write(struct comedi_device *dev,
@@ -125,22 +125,22 @@ static void c6xdigio_pwm_write(struct comedi_device *dev,
 		ppcmd = 0x30;
 
 	outb_p(ppcmd + pwm.bits.sb0, dev->iobase);
-	c6xdigio_chk_status(dev->iobase, 0x00);
+	c6xdigio_chk_status(dev, 0x00);
 
 	outb_p(ppcmd + pwm.bits.sb1 + 0x4, dev->iobase);
-	c6xdigio_chk_status(dev->iobase, 0x80);
+	c6xdigio_chk_status(dev, 0x80);
 
 	outb_p(ppcmd + pwm.bits.sb2, dev->iobase);
-	c6xdigio_chk_status(dev->iobase, 0x00);
+	c6xdigio_chk_status(dev, 0x00);
 
 	outb_p(ppcmd + pwm.bits.sb3 + 0x4, dev->iobase);
-	c6xdigio_chk_status(dev->iobase, 0x80);
+	c6xdigio_chk_status(dev, 0x80);
 
 	outb_p(ppcmd + pwm.bits.sb4, dev->iobase);
-	c6xdigio_chk_status(dev->iobase, 0x00);
+	c6xdigio_chk_status(dev, 0x00);
 
 	outb_p(0x0, dev->iobase);
-	c6xdigio_chk_status(dev->iobase, 0x80);
+	c6xdigio_chk_status(dev, 0x80);
 }
 
 static int c6xdigio_encoder_read(struct comedi_device *dev,
@@ -156,42 +156,42 @@ static int c6xdigio_encoder_read(struct comedi_device *dev,
 		ppcmd = 0x50;
 
 	outb_p(ppcmd, dev->iobase);
-	c6xdigio_chk_status(dev->iobase, 0x00);
+	c6xdigio_chk_status(dev, 0x00);
 
 	enc.bits.sb0 = ((inb(dev->iobase + 1) >> 3) & 0x7);
 	outb_p(ppcmd + 0x4, dev->iobase);
-	c6xdigio_chk_status(dev->iobase, 0x80);
+	c6xdigio_chk_status(dev, 0x80);
 
 	enc.bits.sb1 = ((inb(dev->iobase + 1) >> 3) & 0x7);
 	outb_p(ppcmd, dev->iobase);
-	c6xdigio_chk_status(dev->iobase, 0x00);
+	c6xdigio_chk_status(dev, 0x00);
 
 	enc.bits.sb2 = ((inb(dev->iobase + 1) >> 3) & 0x7);
 	outb_p(ppcmd + 0x4, dev->iobase);
-	c6xdigio_chk_status(dev->iobase, 0x80);
+	c6xdigio_chk_status(dev, 0x80);
 
 	enc.bits.sb3 = ((inb(dev->iobase + 1) >> 3) & 0x7);
 	outb_p(ppcmd, dev->iobase);
-	c6xdigio_chk_status(dev->iobase, 0x00);
+	c6xdigio_chk_status(dev, 0x00);
 
 	enc.bits.sb4 = ((inb(dev->iobase + 1) >> 3) & 0x7);
 	outb_p(ppcmd + 0x4, dev->iobase);
-	c6xdigio_chk_status(dev->iobase, 0x80);
+	c6xdigio_chk_status(dev, 0x80);
 
 	enc.bits.sb5 = ((inb(dev->iobase + 1) >> 3) & 0x7);
 	outb_p(ppcmd, dev->iobase);
-	c6xdigio_chk_status(dev->iobase, 0x00);
+	c6xdigio_chk_status(dev, 0x00);
 
 	enc.bits.sb6 = ((inb(dev->iobase + 1) >> 3) & 0x7);
 	outb_p(ppcmd + 0x4, dev->iobase);
-	c6xdigio_chk_status(dev->iobase, 0x80);
+	c6xdigio_chk_status(dev, 0x80);
 
 	enc.bits.sb7 = ((inb(dev->iobase + 1) >> 3) & 0x7);
 	outb_p(ppcmd, dev->iobase);
-	c6xdigio_chk_status(dev->iobase, 0x00);
+	c6xdigio_chk_status(dev, 0x00);
 
 	outb_p(0x0, dev->iobase);
-	c6xdigio_chk_status(dev->iobase, 0x80);
+	c6xdigio_chk_status(dev, 0x80);
 
 	return enc.value ^ 0x800000;
 }
@@ -199,16 +199,16 @@ static int c6xdigio_encoder_read(struct comedi_device *dev,
 static void c6xdigio_encoder_reset(struct comedi_device *dev)
 {
 	outb_p(0x68, dev->iobase);
-	c6xdigio_chk_status(dev->iobase, 0x00);
+	c6xdigio_chk_status(dev, 0x00);
 
 	outb_p(0x6c, dev->iobase);
-	c6xdigio_chk_status(dev->iobase, 0x80);
+	c6xdigio_chk_status(dev, 0x80);
 
 	outb_p(0x68, dev->iobase);
-	c6xdigio_chk_status(dev->iobase, 0x00);
+	c6xdigio_chk_status(dev, 0x00);
 
 	outb_p(0x0, dev->iobase);
-	c6xdigio_chk_status(dev->iobase, 0x80);
+	c6xdigio_chk_status(dev, 0x80);
 }
 
 static int c6xdigio_pwmo_insn_write(struct comedi_device *dev,

commit 375a02810cccea1a3d13ed16ab8d592a4bb7f65f
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Mar 10 14:07:29 2014 -0700

    staging: comedi: c6xdigio: tidy up C6X_encInput()
    
    Rename the CamelCase function.
    
    For aesthetics, pass the comedi_device pointer instead of the dev->iobase
    as the first parameter.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index c72e3a476128..114ca43d48bb 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -143,54 +143,55 @@ static void c6xdigio_pwm_write(struct comedi_device *dev,
 	c6xdigio_chk_status(dev->iobase, 0x80);
 }
 
-static int C6X_encInput(unsigned long baseAddr, unsigned channel)
+static int c6xdigio_encoder_read(struct comedi_device *dev,
+				 unsigned int chan)
 {
 	unsigned ppcmd;
 	union encvaluetype enc;
 
 	enc.value = 0;
-	if (channel == 0)
+	if (chan == 0)
 		ppcmd = 0x48;
 	else
 		ppcmd = 0x50;
 
-	outb_p(ppcmd, baseAddr);
-	c6xdigio_chk_status(baseAddr, 0x00);
+	outb_p(ppcmd, dev->iobase);
+	c6xdigio_chk_status(dev->iobase, 0x00);
 
-	enc.bits.sb0 = ((inb(baseAddr + 1) >> 3) & 0x7);
-	outb_p(ppcmd + 0x4, baseAddr);
-	c6xdigio_chk_status(baseAddr, 0x80);
+	enc.bits.sb0 = ((inb(dev->iobase + 1) >> 3) & 0x7);
+	outb_p(ppcmd + 0x4, dev->iobase);
+	c6xdigio_chk_status(dev->iobase, 0x80);
 
-	enc.bits.sb1 = ((inb(baseAddr + 1) >> 3) & 0x7);
-	outb_p(ppcmd, baseAddr);
-	c6xdigio_chk_status(baseAddr, 0x00);
+	enc.bits.sb1 = ((inb(dev->iobase + 1) >> 3) & 0x7);
+	outb_p(ppcmd, dev->iobase);
+	c6xdigio_chk_status(dev->iobase, 0x00);
 
-	enc.bits.sb2 = ((inb(baseAddr + 1) >> 3) & 0x7);
-	outb_p(ppcmd + 0x4, baseAddr);
-	c6xdigio_chk_status(baseAddr, 0x80);
+	enc.bits.sb2 = ((inb(dev->iobase + 1) >> 3) & 0x7);
+	outb_p(ppcmd + 0x4, dev->iobase);
+	c6xdigio_chk_status(dev->iobase, 0x80);
 
-	enc.bits.sb3 = ((inb(baseAddr + 1) >> 3) & 0x7);
-	outb_p(ppcmd, baseAddr);
-	c6xdigio_chk_status(baseAddr, 0x00);
+	enc.bits.sb3 = ((inb(dev->iobase + 1) >> 3) & 0x7);
+	outb_p(ppcmd, dev->iobase);
+	c6xdigio_chk_status(dev->iobase, 0x00);
 
-	enc.bits.sb4 = ((inb(baseAddr + 1) >> 3) & 0x7);
-	outb_p(ppcmd + 0x4, baseAddr);
-	c6xdigio_chk_status(baseAddr, 0x80);
+	enc.bits.sb4 = ((inb(dev->iobase + 1) >> 3) & 0x7);
+	outb_p(ppcmd + 0x4, dev->iobase);
+	c6xdigio_chk_status(dev->iobase, 0x80);
 
-	enc.bits.sb5 = ((inb(baseAddr + 1) >> 3) & 0x7);
-	outb_p(ppcmd, baseAddr);
-	c6xdigio_chk_status(baseAddr, 0x00);
+	enc.bits.sb5 = ((inb(dev->iobase + 1) >> 3) & 0x7);
+	outb_p(ppcmd, dev->iobase);
+	c6xdigio_chk_status(dev->iobase, 0x00);
 
-	enc.bits.sb6 = ((inb(baseAddr + 1) >> 3) & 0x7);
-	outb_p(ppcmd + 0x4, baseAddr);
-	c6xdigio_chk_status(baseAddr, 0x80);
+	enc.bits.sb6 = ((inb(dev->iobase + 1) >> 3) & 0x7);
+	outb_p(ppcmd + 0x4, dev->iobase);
+	c6xdigio_chk_status(dev->iobase, 0x80);
 
-	enc.bits.sb7 = ((inb(baseAddr + 1) >> 3) & 0x7);
-	outb_p(ppcmd, baseAddr);
-	c6xdigio_chk_status(baseAddr, 0x00);
+	enc.bits.sb7 = ((inb(dev->iobase + 1) >> 3) & 0x7);
+	outb_p(ppcmd, dev->iobase);
+	c6xdigio_chk_status(dev->iobase, 0x00);
 
-	outb_p(0x0, baseAddr);
-	c6xdigio_chk_status(baseAddr, 0x80);
+	outb_p(0x0, dev->iobase);
+	c6xdigio_chk_status(dev->iobase, 0x80);
 
 	return enc.value ^ 0x800000;
 }
@@ -229,11 +230,11 @@ static int c6xdigio_ei_insn_read(struct comedi_device *dev,
 				 struct comedi_subdevice *s,
 				 struct comedi_insn *insn, unsigned int *data)
 {
+	unsigned int chan = CR_CHAN(insn->chanspec);
 	int n;
-	int chan = CR_CHAN(insn->chanspec);
 
 	for (n = 0; n < insn->n; n++)
-		data[n] = (C6X_encInput(dev->iobase, chan) & 0xffffff);
+		data[n] = (c6xdigio_encoder_read(dev, chan) & 0xffffff);
 
 	return n;
 }

commit c774049adbabffca32ca1d4d671e9623dbb4fd3d
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Mar 10 14:07:28 2014 -0700

    staging: comedi: c6xdigio: tidy up C6X_pwmOutput()
    
    Rename the CamelCase function.
    
    For aesthetics, pass the comedi_device pointer instead of the dev->iobase
    as the first parameter.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index 9e456e5c73e4..c72e3a476128 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -107,40 +107,40 @@ static void c6xdigio_pwm_init(struct comedi_device *dev)
 	c6xdigio_chk_status(dev->iobase, 0x80);
 }
 
-static void C6X_pwmOutput(unsigned long baseAddr, unsigned channel, int value)
+static void c6xdigio_pwm_write(struct comedi_device *dev,
+			       unsigned int chan, unsigned int val)
 {
 	unsigned ppcmd;
 	union pwmcmdtype pwm;
 
-	pwm.cmd = value;
+	pwm.cmd = val;
 	if (pwm.cmd > 498)
 		pwm.cmd = 498;
 	if (pwm.cmd < 2)
 		pwm.cmd = 2;
 
-	if (channel == 0) {
+	if (chan == 0)
 		ppcmd = 0x28;
-	} else {		/*  if channel == 1 */
+	else
 		ppcmd = 0x30;
-	}			/* endif */
 
-	outb_p(ppcmd + pwm.bits.sb0, baseAddr);
-	c6xdigio_chk_status(baseAddr, 0x00);
+	outb_p(ppcmd + pwm.bits.sb0, dev->iobase);
+	c6xdigio_chk_status(dev->iobase, 0x00);
 
-	outb_p(ppcmd + pwm.bits.sb1 + 0x4, baseAddr);
-	c6xdigio_chk_status(baseAddr, 0x80);
+	outb_p(ppcmd + pwm.bits.sb1 + 0x4, dev->iobase);
+	c6xdigio_chk_status(dev->iobase, 0x80);
 
-	outb_p(ppcmd + pwm.bits.sb2, baseAddr);
-	c6xdigio_chk_status(baseAddr, 0x00);
+	outb_p(ppcmd + pwm.bits.sb2, dev->iobase);
+	c6xdigio_chk_status(dev->iobase, 0x00);
 
-	outb_p(ppcmd + pwm.bits.sb3 + 0x4, baseAddr);
-	c6xdigio_chk_status(baseAddr, 0x80);
+	outb_p(ppcmd + pwm.bits.sb3 + 0x4, dev->iobase);
+	c6xdigio_chk_status(dev->iobase, 0x80);
 
-	outb_p(ppcmd + pwm.bits.sb4, baseAddr);
-	c6xdigio_chk_status(baseAddr, 0x00);
+	outb_p(ppcmd + pwm.bits.sb4, dev->iobase);
+	c6xdigio_chk_status(dev->iobase, 0x00);
 
-	outb_p(0x0, baseAddr);
-	c6xdigio_chk_status(baseAddr, 0x80);
+	outb_p(0x0, dev->iobase);
+	c6xdigio_chk_status(dev->iobase, 0x80);
 }
 
 static int C6X_encInput(unsigned long baseAddr, unsigned channel)
@@ -215,11 +215,11 @@ static int c6xdigio_pwmo_insn_write(struct comedi_device *dev,
 				    struct comedi_insn *insn,
 				    unsigned int *data)
 {
+	unsigned int chan = CR_CHAN(insn->chanspec);
 	int i;
-	int chan = CR_CHAN(insn->chanspec);
 
 	for (i = 0; i < insn->n; i++) {
-		C6X_pwmOutput(dev->iobase, chan, data[i]);
+		c6xdigio_pwm_write(dev, chan, data[i]);
 		/*    devpriv->ao_readback[chan] = data[i]; */
 	}
 	return i;

commit b133c2bfadf392683db58cc7e153d9b1866a7c62
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Mar 10 14:07:27 2014 -0700

    staging: comedi: c6xdigio: tidy up C6X_encResetAll()
    
    Rename the CamelCase function.
    
    For aesthetics, pass the comedi_device pointer instead of the dev->iobase.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index fc317b06dd9d..9e456e5c73e4 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -195,19 +195,19 @@ static int C6X_encInput(unsigned long baseAddr, unsigned channel)
 	return enc.value ^ 0x800000;
 }
 
-static void C6X_encResetAll(unsigned long baseAddr)
+static void c6xdigio_encoder_reset(struct comedi_device *dev)
 {
-	outb_p(0x68, baseAddr);
-	c6xdigio_chk_status(baseAddr, 0x00);
+	outb_p(0x68, dev->iobase);
+	c6xdigio_chk_status(dev->iobase, 0x00);
 
-	outb_p(0x6c, baseAddr);
-	c6xdigio_chk_status(baseAddr, 0x80);
+	outb_p(0x6c, dev->iobase);
+	c6xdigio_chk_status(dev->iobase, 0x80);
 
-	outb_p(0x68, baseAddr);
-	c6xdigio_chk_status(baseAddr, 0x00);
+	outb_p(0x68, dev->iobase);
+	c6xdigio_chk_status(dev->iobase, 0x00);
 
-	outb_p(0x0, baseAddr);
-	c6xdigio_chk_status(baseAddr, 0x80);
+	outb_p(0x0, dev->iobase);
+	c6xdigio_chk_status(dev->iobase, 0x80);
 }
 
 static int c6xdigio_pwmo_insn_write(struct comedi_device *dev,
@@ -241,7 +241,7 @@ static int c6xdigio_ei_insn_read(struct comedi_device *dev,
 static void board_init(struct comedi_device *dev)
 {
 	c6xdigio_pwm_init(dev);
-	C6X_encResetAll(dev->iobase);
+	c6xdigio_encoder_reset(dev);
 }
 
 static const struct pnp_device_id c6xdigio_pnp_tbl[] = {

commit 0aeb924b342820b64a6c8a2bb424495ecc4603a1
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Mar 10 14:07:26 2014 -0700

    staging: comedi: c6xdigio: tidy up C6X_pwmInit()
    
    Rename the CamelCase function.
    
    For aesthetics, pass the comedi_device pointer instead of the dev->iobase.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index 22315b81a973..fc317b06dd9d 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -92,19 +92,19 @@ static int c6xdigio_chk_status(unsigned long baseAddr, unsigned long context)
 	return -EBUSY;
 }
 
-static void C6X_pwmInit(unsigned long baseAddr)
+static void c6xdigio_pwm_init(struct comedi_device *dev)
 {
-	outb_p(0x70, baseAddr);
-	c6xdigio_chk_status(baseAddr, 0x00);
+	outb_p(0x70, dev->iobase);
+	c6xdigio_chk_status(dev->iobase, 0x00);
 
-	outb_p(0x74, baseAddr);
-	c6xdigio_chk_status(baseAddr, 0x80);
+	outb_p(0x74, dev->iobase);
+	c6xdigio_chk_status(dev->iobase, 0x80);
 
-	outb_p(0x70, baseAddr);
-	c6xdigio_chk_status(baseAddr, 0x00);
+	outb_p(0x70, dev->iobase);
+	c6xdigio_chk_status(dev->iobase, 0x00);
 
-	outb_p(0x0, baseAddr);
-	c6xdigio_chk_status(baseAddr, 0x80);
+	outb_p(0x0, dev->iobase);
+	c6xdigio_chk_status(dev->iobase, 0x80);
 }
 
 static void C6X_pwmOutput(unsigned long baseAddr, unsigned channel, int value)
@@ -240,7 +240,7 @@ static int c6xdigio_ei_insn_read(struct comedi_device *dev,
 
 static void board_init(struct comedi_device *dev)
 {
-	C6X_pwmInit(dev->iobase);
+	c6xdigio_pwm_init(dev);
 	C6X_encResetAll(dev->iobase);
 }
 

commit 8a0b00771c1df39215969db408dcfa61f704940b
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Mar 10 14:07:25 2014 -0700

    staging: comedi: c6xdigio: factor out status check busywait
    
    Factor out the common code that busywaits for the status to change.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index adb607ccb609..22315b81a973 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -77,45 +77,40 @@ union encvaluetype {
 
 #define C6XDIGIO_TIME_OUT 20
 
-static void C6X_pwmInit(unsigned long baseAddr)
+static int c6xdigio_chk_status(unsigned long baseAddr, unsigned long context)
 {
+	unsigned int status;
 	int timeout = 0;
 
-	outb_p(0x70, baseAddr);
-	while (((inb(baseAddr + 1) & 0x80) == 0)
-	       && (timeout < C6XDIGIO_TIME_OUT)) {
+	do {
+		status = inb(baseAddr + 1);
+		if ((status & 0x80) != context)
+			return 0;
 		timeout++;
-	}
+	} while  (timeout < C6XDIGIO_TIME_OUT);
+
+	return -EBUSY;
+}
+
+static void C6X_pwmInit(unsigned long baseAddr)
+{
+	outb_p(0x70, baseAddr);
+	c6xdigio_chk_status(baseAddr, 0x00);
 
 	outb_p(0x74, baseAddr);
-	timeout = 0;
-	while (((inb(baseAddr + 1) & 0x80) == 0x80)
-	       && (timeout < C6XDIGIO_TIME_OUT)) {
-		timeout++;
-	}
+	c6xdigio_chk_status(baseAddr, 0x80);
 
 	outb_p(0x70, baseAddr);
-	timeout = 0;
-	while (((inb(baseAddr + 1) & 0x80) == 0x0)
-	       && (timeout < C6XDIGIO_TIME_OUT)) {
-		timeout++;
-	}
+	c6xdigio_chk_status(baseAddr, 0x00);
 
 	outb_p(0x0, baseAddr);
-	timeout = 0;
-	while (((inb(baseAddr + 1) & 0x80) == 0x80)
-	       && (timeout < C6XDIGIO_TIME_OUT)) {
-		timeout++;
-	}
-
+	c6xdigio_chk_status(baseAddr, 0x80);
 }
 
 static void C6X_pwmOutput(unsigned long baseAddr, unsigned channel, int value)
 {
 	unsigned ppcmd;
 	union pwmcmdtype pwm;
-	int timeout = 0;
-	unsigned tmp;
 
 	pwm.cmd = value;
 	if (pwm.cmd > 498)
@@ -130,58 +125,28 @@ static void C6X_pwmOutput(unsigned long baseAddr, unsigned channel, int value)
 	}			/* endif */
 
 	outb_p(ppcmd + pwm.bits.sb0, baseAddr);
-	tmp = inb(baseAddr + 1);
-	while (((tmp & 0x80) == 0) && (timeout < C6XDIGIO_TIME_OUT)) {
-		tmp = inb(baseAddr + 1);
-		timeout++;
-	}
+	c6xdigio_chk_status(baseAddr, 0x00);
 
 	outb_p(ppcmd + pwm.bits.sb1 + 0x4, baseAddr);
-	timeout = 0;
-	tmp = inb(baseAddr + 1);
-	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
-		tmp = inb(baseAddr + 1);
-		timeout++;
-	}
+	c6xdigio_chk_status(baseAddr, 0x80);
 
 	outb_p(ppcmd + pwm.bits.sb2, baseAddr);
-	tmp = inb(baseAddr + 1);
-	while (((tmp & 0x80) == 0) && (timeout < C6XDIGIO_TIME_OUT)) {
-		tmp = inb(baseAddr + 1);
-		timeout++;
-	}
+	c6xdigio_chk_status(baseAddr, 0x00);
 
 	outb_p(ppcmd + pwm.bits.sb3 + 0x4, baseAddr);
-	timeout = 0;
-	tmp = inb(baseAddr + 1);
-	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
-		tmp = inb(baseAddr + 1);
-		timeout++;
-	}
+	c6xdigio_chk_status(baseAddr, 0x80);
 
 	outb_p(ppcmd + pwm.bits.sb4, baseAddr);
-	tmp = inb(baseAddr + 1);
-	while (((tmp & 0x80) == 0) && (timeout < C6XDIGIO_TIME_OUT)) {
-		tmp = inb(baseAddr + 1);
-		timeout++;
-	}
+	c6xdigio_chk_status(baseAddr, 0x00);
 
 	outb_p(0x0, baseAddr);
-	timeout = 0;
-	tmp = inb(baseAddr + 1);
-	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
-		tmp = inb(baseAddr + 1);
-		timeout++;
-	}
-
+	c6xdigio_chk_status(baseAddr, 0x80);
 }
 
 static int C6X_encInput(unsigned long baseAddr, unsigned channel)
 {
 	unsigned ppcmd;
 	union encvaluetype enc;
-	int timeout = 0;
-	int tmp;
 
 	enc.value = 0;
 	if (channel == 0)
@@ -190,115 +155,59 @@ static int C6X_encInput(unsigned long baseAddr, unsigned channel)
 		ppcmd = 0x50;
 
 	outb_p(ppcmd, baseAddr);
-	tmp = inb(baseAddr + 1);
-	while (((tmp & 0x80) == 0) && (timeout < C6XDIGIO_TIME_OUT)) {
-		tmp = inb(baseAddr + 1);
-		timeout++;
-	}
+	c6xdigio_chk_status(baseAddr, 0x00);
 
 	enc.bits.sb0 = ((inb(baseAddr + 1) >> 3) & 0x7);
 	outb_p(ppcmd + 0x4, baseAddr);
-	timeout = 0;
-	tmp = inb(baseAddr + 1);
-	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
-		tmp = inb(baseAddr + 1);
-		timeout++;
-	}
+	c6xdigio_chk_status(baseAddr, 0x80);
+
 	enc.bits.sb1 = ((inb(baseAddr + 1) >> 3) & 0x7);
 	outb_p(ppcmd, baseAddr);
-	timeout = 0;
-	tmp = inb(baseAddr + 1);
-	while (((tmp & 0x80) == 0) && (timeout < C6XDIGIO_TIME_OUT)) {
-		tmp = inb(baseAddr + 1);
-		timeout++;
-	}
+	c6xdigio_chk_status(baseAddr, 0x00);
+
 	enc.bits.sb2 = ((inb(baseAddr + 1) >> 3) & 0x7);
 	outb_p(ppcmd + 0x4, baseAddr);
-	timeout = 0;
-	tmp = inb(baseAddr + 1);
-	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
-		tmp = inb(baseAddr + 1);
-		timeout++;
-	}
+	c6xdigio_chk_status(baseAddr, 0x80);
+
 	enc.bits.sb3 = ((inb(baseAddr + 1) >> 3) & 0x7);
 	outb_p(ppcmd, baseAddr);
-	timeout = 0;
-	tmp = inb(baseAddr + 1);
-	while (((tmp & 0x80) == 0) && (timeout < C6XDIGIO_TIME_OUT)) {
-		tmp = inb(baseAddr + 1);
-		timeout++;
-	}
+	c6xdigio_chk_status(baseAddr, 0x00);
+
 	enc.bits.sb4 = ((inb(baseAddr + 1) >> 3) & 0x7);
 	outb_p(ppcmd + 0x4, baseAddr);
-	timeout = 0;
-	tmp = inb(baseAddr + 1);
-	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
-		tmp = inb(baseAddr + 1);
-		timeout++;
-	}
+	c6xdigio_chk_status(baseAddr, 0x80);
+
 	enc.bits.sb5 = ((inb(baseAddr + 1) >> 3) & 0x7);
 	outb_p(ppcmd, baseAddr);
-	timeout = 0;
-	tmp = inb(baseAddr + 1);
-	while (((tmp & 0x80) == 0x0) && (timeout < C6XDIGIO_TIME_OUT)) {
-		tmp = inb(baseAddr + 1);
-		timeout++;
-	}
+	c6xdigio_chk_status(baseAddr, 0x00);
+
 	enc.bits.sb6 = ((inb(baseAddr + 1) >> 3) & 0x7);
 	outb_p(ppcmd + 0x4, baseAddr);
-	timeout = 0;
-	tmp = inb(baseAddr + 1);
-	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
-		tmp = inb(baseAddr + 1);
-		timeout++;
-	}
+	c6xdigio_chk_status(baseAddr, 0x80);
+
 	enc.bits.sb7 = ((inb(baseAddr + 1) >> 3) & 0x7);
 	outb_p(ppcmd, baseAddr);
-	timeout = 0;
-	tmp = inb(baseAddr + 1);
-	while (((tmp & 0x80) == 0x0) && (timeout < C6XDIGIO_TIME_OUT)) {
-		tmp = inb(baseAddr + 1);
-		timeout++;
-	}
+	c6xdigio_chk_status(baseAddr, 0x00);
 
 	outb_p(0x0, baseAddr);
-	timeout = 0;
-	tmp = inb(baseAddr + 1);
-	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
-		tmp = inb(baseAddr + 1);
-		timeout++;
-	}
+	c6xdigio_chk_status(baseAddr, 0x80);
 
 	return enc.value ^ 0x800000;
 }
 
 static void C6X_encResetAll(unsigned long baseAddr)
 {
-	unsigned timeout = 0;
-
 	outb_p(0x68, baseAddr);
-	while (((inb(baseAddr + 1) & 0x80) == 0)
-	       && (timeout < C6XDIGIO_TIME_OUT)) {
-		timeout++;
-	}
+	c6xdigio_chk_status(baseAddr, 0x00);
+
 	outb_p(0x6c, baseAddr);
-	timeout = 0;
-	while (((inb(baseAddr + 1) & 0x80) == 0x80)
-	       && (timeout < C6XDIGIO_TIME_OUT)) {
-		timeout++;
-	}
+	c6xdigio_chk_status(baseAddr, 0x80);
+
 	outb_p(0x68, baseAddr);
-	timeout = 0;
-	while (((inb(baseAddr + 1) & 0x80) == 0x0)
-	       && (timeout < C6XDIGIO_TIME_OUT)) {
-		timeout++;
-	}
+	c6xdigio_chk_status(baseAddr, 0x00);
+
 	outb_p(0x0, baseAddr);
-	timeout = 0;
-	while (((inb(baseAddr + 1) & 0x80) == 0x80)
-	       && (timeout < C6XDIGIO_TIME_OUT)) {
-		timeout++;
-	}
+	c6xdigio_chk_status(baseAddr, 0x80);
 }
 
 static int c6xdigio_pwmo_insn_write(struct comedi_device *dev,

commit 2ec577ce84eea48b8c72f65b09419d9b98a85ecf
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Mar 10 14:07:24 2014 -0700

    staging: comedi: c6xdigio: remove C6XDIGIO_SIZE
    
    This define is only used in the comedi_request_region() call and does
    not add any additional clarity to the code. Remove it.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index e5829f761f1a..adb607ccb609 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -43,8 +43,6 @@ This driver will not work with a 2.4 kernel.
 
 #include "../comedidev.h"
 
-#define C6XDIGIO_SIZE 3
-
 /*
  * port offsets
  */
@@ -356,7 +354,7 @@ static int c6xdigio_attach(struct comedi_device *dev,
 	struct comedi_subdevice *s;
 	int ret;
 
-	ret = comedi_request_region(dev, it->options[0], C6XDIGIO_SIZE);
+	ret = comedi_request_region(dev, it->options[0], 0x03);
 	if (ret)
 		return ret;
 

commit 5afa3c5450c4ab4b8b2b8c41d0a5e517067d9e85
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Mar 10 14:07:23 2014 -0700

    staging: comedi: c6xdigio: remove WriteByteToHwPort()
    
    This CamelCase function is just a wrapper around outb_p(). Remove it.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index 26659ccc8fa4..e5829f761f1a 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -43,11 +43,6 @@ This driver will not work with a 2.4 kernel.
 
 #include "../comedidev.h"
 
-static void WriteByteToHwPort(unsigned long addr, u8 val)
-{
-	outb_p(val, addr);
-}
-
 #define C6XDIGIO_SIZE 3
 
 /*
@@ -88,27 +83,27 @@ static void C6X_pwmInit(unsigned long baseAddr)
 {
 	int timeout = 0;
 
-	WriteByteToHwPort(baseAddr, 0x70);
+	outb_p(0x70, baseAddr);
 	while (((inb(baseAddr + 1) & 0x80) == 0)
 	       && (timeout < C6XDIGIO_TIME_OUT)) {
 		timeout++;
 	}
 
-	WriteByteToHwPort(baseAddr, 0x74);
+	outb_p(0x74, baseAddr);
 	timeout = 0;
 	while (((inb(baseAddr + 1) & 0x80) == 0x80)
 	       && (timeout < C6XDIGIO_TIME_OUT)) {
 		timeout++;
 	}
 
-	WriteByteToHwPort(baseAddr, 0x70);
+	outb_p(0x70, baseAddr);
 	timeout = 0;
 	while (((inb(baseAddr + 1) & 0x80) == 0x0)
 	       && (timeout < C6XDIGIO_TIME_OUT)) {
 		timeout++;
 	}
 
-	WriteByteToHwPort(baseAddr, 0x0);
+	outb_p(0x0, baseAddr);
 	timeout = 0;
 	while (((inb(baseAddr + 1) & 0x80) == 0x80)
 	       && (timeout < C6XDIGIO_TIME_OUT)) {
@@ -136,14 +131,14 @@ static void C6X_pwmOutput(unsigned long baseAddr, unsigned channel, int value)
 		ppcmd = 0x30;
 	}			/* endif */
 
-	WriteByteToHwPort(baseAddr, ppcmd + pwm.bits.sb0);
+	outb_p(ppcmd + pwm.bits.sb0, baseAddr);
 	tmp = inb(baseAddr + 1);
 	while (((tmp & 0x80) == 0) && (timeout < C6XDIGIO_TIME_OUT)) {
 		tmp = inb(baseAddr + 1);
 		timeout++;
 	}
 
-	WriteByteToHwPort(baseAddr, ppcmd + pwm.bits.sb1 + 0x4);
+	outb_p(ppcmd + pwm.bits.sb1 + 0x4, baseAddr);
 	timeout = 0;
 	tmp = inb(baseAddr + 1);
 	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
@@ -151,14 +146,14 @@ static void C6X_pwmOutput(unsigned long baseAddr, unsigned channel, int value)
 		timeout++;
 	}
 
-	WriteByteToHwPort(baseAddr, ppcmd + pwm.bits.sb2);
+	outb_p(ppcmd + pwm.bits.sb2, baseAddr);
 	tmp = inb(baseAddr + 1);
 	while (((tmp & 0x80) == 0) && (timeout < C6XDIGIO_TIME_OUT)) {
 		tmp = inb(baseAddr + 1);
 		timeout++;
 	}
 
-	WriteByteToHwPort(baseAddr, ppcmd + pwm.bits.sb3 + 0x4);
+	outb_p(ppcmd + pwm.bits.sb3 + 0x4, baseAddr);
 	timeout = 0;
 	tmp = inb(baseAddr + 1);
 	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
@@ -166,14 +161,14 @@ static void C6X_pwmOutput(unsigned long baseAddr, unsigned channel, int value)
 		timeout++;
 	}
 
-	WriteByteToHwPort(baseAddr, ppcmd + pwm.bits.sb4);
+	outb_p(ppcmd + pwm.bits.sb4, baseAddr);
 	tmp = inb(baseAddr + 1);
 	while (((tmp & 0x80) == 0) && (timeout < C6XDIGIO_TIME_OUT)) {
 		tmp = inb(baseAddr + 1);
 		timeout++;
 	}
 
-	WriteByteToHwPort(baseAddr, 0x0);
+	outb_p(0x0, baseAddr);
 	timeout = 0;
 	tmp = inb(baseAddr + 1);
 	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
@@ -196,7 +191,7 @@ static int C6X_encInput(unsigned long baseAddr, unsigned channel)
 	else
 		ppcmd = 0x50;
 
-	WriteByteToHwPort(baseAddr, ppcmd);
+	outb_p(ppcmd, baseAddr);
 	tmp = inb(baseAddr + 1);
 	while (((tmp & 0x80) == 0) && (timeout < C6XDIGIO_TIME_OUT)) {
 		tmp = inb(baseAddr + 1);
@@ -204,7 +199,7 @@ static int C6X_encInput(unsigned long baseAddr, unsigned channel)
 	}
 
 	enc.bits.sb0 = ((inb(baseAddr + 1) >> 3) & 0x7);
-	WriteByteToHwPort(baseAddr, ppcmd + 0x4);
+	outb_p(ppcmd + 0x4, baseAddr);
 	timeout = 0;
 	tmp = inb(baseAddr + 1);
 	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
@@ -212,7 +207,7 @@ static int C6X_encInput(unsigned long baseAddr, unsigned channel)
 		timeout++;
 	}
 	enc.bits.sb1 = ((inb(baseAddr + 1) >> 3) & 0x7);
-	WriteByteToHwPort(baseAddr, ppcmd);
+	outb_p(ppcmd, baseAddr);
 	timeout = 0;
 	tmp = inb(baseAddr + 1);
 	while (((tmp & 0x80) == 0) && (timeout < C6XDIGIO_TIME_OUT)) {
@@ -220,7 +215,7 @@ static int C6X_encInput(unsigned long baseAddr, unsigned channel)
 		timeout++;
 	}
 	enc.bits.sb2 = ((inb(baseAddr + 1) >> 3) & 0x7);
-	WriteByteToHwPort(baseAddr, ppcmd + 0x4);
+	outb_p(ppcmd + 0x4, baseAddr);
 	timeout = 0;
 	tmp = inb(baseAddr + 1);
 	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
@@ -228,7 +223,7 @@ static int C6X_encInput(unsigned long baseAddr, unsigned channel)
 		timeout++;
 	}
 	enc.bits.sb3 = ((inb(baseAddr + 1) >> 3) & 0x7);
-	WriteByteToHwPort(baseAddr, ppcmd);
+	outb_p(ppcmd, baseAddr);
 	timeout = 0;
 	tmp = inb(baseAddr + 1);
 	while (((tmp & 0x80) == 0) && (timeout < C6XDIGIO_TIME_OUT)) {
@@ -236,7 +231,7 @@ static int C6X_encInput(unsigned long baseAddr, unsigned channel)
 		timeout++;
 	}
 	enc.bits.sb4 = ((inb(baseAddr + 1) >> 3) & 0x7);
-	WriteByteToHwPort(baseAddr, ppcmd + 0x4);
+	outb_p(ppcmd + 0x4, baseAddr);
 	timeout = 0;
 	tmp = inb(baseAddr + 1);
 	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
@@ -244,7 +239,7 @@ static int C6X_encInput(unsigned long baseAddr, unsigned channel)
 		timeout++;
 	}
 	enc.bits.sb5 = ((inb(baseAddr + 1) >> 3) & 0x7);
-	WriteByteToHwPort(baseAddr, ppcmd);
+	outb_p(ppcmd, baseAddr);
 	timeout = 0;
 	tmp = inb(baseAddr + 1);
 	while (((tmp & 0x80) == 0x0) && (timeout < C6XDIGIO_TIME_OUT)) {
@@ -252,7 +247,7 @@ static int C6X_encInput(unsigned long baseAddr, unsigned channel)
 		timeout++;
 	}
 	enc.bits.sb6 = ((inb(baseAddr + 1) >> 3) & 0x7);
-	WriteByteToHwPort(baseAddr, ppcmd + 0x4);
+	outb_p(ppcmd + 0x4, baseAddr);
 	timeout = 0;
 	tmp = inb(baseAddr + 1);
 	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
@@ -260,7 +255,7 @@ static int C6X_encInput(unsigned long baseAddr, unsigned channel)
 		timeout++;
 	}
 	enc.bits.sb7 = ((inb(baseAddr + 1) >> 3) & 0x7);
-	WriteByteToHwPort(baseAddr, ppcmd);
+	outb_p(ppcmd, baseAddr);
 	timeout = 0;
 	tmp = inb(baseAddr + 1);
 	while (((tmp & 0x80) == 0x0) && (timeout < C6XDIGIO_TIME_OUT)) {
@@ -268,7 +263,7 @@ static int C6X_encInput(unsigned long baseAddr, unsigned channel)
 		timeout++;
 	}
 
-	WriteByteToHwPort(baseAddr, 0x0);
+	outb_p(0x0, baseAddr);
 	timeout = 0;
 	tmp = inb(baseAddr + 1);
 	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
@@ -283,24 +278,24 @@ static void C6X_encResetAll(unsigned long baseAddr)
 {
 	unsigned timeout = 0;
 
-	WriteByteToHwPort(baseAddr, 0x68);
+	outb_p(0x68, baseAddr);
 	while (((inb(baseAddr + 1) & 0x80) == 0)
 	       && (timeout < C6XDIGIO_TIME_OUT)) {
 		timeout++;
 	}
-	WriteByteToHwPort(baseAddr, 0x6C);
+	outb_p(0x6c, baseAddr);
 	timeout = 0;
 	while (((inb(baseAddr + 1) & 0x80) == 0x80)
 	       && (timeout < C6XDIGIO_TIME_OUT)) {
 		timeout++;
 	}
-	WriteByteToHwPort(baseAddr, 0x68);
+	outb_p(0x68, baseAddr);
 	timeout = 0;
 	while (((inb(baseAddr + 1) & 0x80) == 0x0)
 	       && (timeout < C6XDIGIO_TIME_OUT)) {
 		timeout++;
 	}
-	WriteByteToHwPort(baseAddr, 0x0);
+	outb_p(0x0, baseAddr);
 	timeout = 0;
 	while (((inb(baseAddr + 1) & 0x80) == 0x80)
 	       && (timeout < C6XDIGIO_TIME_OUT)) {

commit f2aee30e831476dc7a3b270559bf81f6a906a479
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Mar 10 14:07:22 2014 -0700

    staging: comedi: c6xdigio: remove ReadByteFromHwPort()
    
    This CamelCase function is just a wrapper around inb(). Remove it.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index 5034f663eec9..26659ccc8fa4 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -43,12 +43,6 @@ This driver will not work with a 2.4 kernel.
 
 #include "../comedidev.h"
 
-static u8 ReadByteFromHwPort(unsigned long addr)
-{
-	u8 result = inb(addr);
-	return result;
-}
-
 static void WriteByteToHwPort(unsigned long addr, u8 val)
 {
 	outb_p(val, addr);
@@ -95,28 +89,28 @@ static void C6X_pwmInit(unsigned long baseAddr)
 	int timeout = 0;
 
 	WriteByteToHwPort(baseAddr, 0x70);
-	while (((ReadByteFromHwPort(baseAddr + 1) & 0x80) == 0)
+	while (((inb(baseAddr + 1) & 0x80) == 0)
 	       && (timeout < C6XDIGIO_TIME_OUT)) {
 		timeout++;
 	}
 
 	WriteByteToHwPort(baseAddr, 0x74);
 	timeout = 0;
-	while (((ReadByteFromHwPort(baseAddr + 1) & 0x80) == 0x80)
+	while (((inb(baseAddr + 1) & 0x80) == 0x80)
 	       && (timeout < C6XDIGIO_TIME_OUT)) {
 		timeout++;
 	}
 
 	WriteByteToHwPort(baseAddr, 0x70);
 	timeout = 0;
-	while (((ReadByteFromHwPort(baseAddr + 1) & 0x80) == 0x0)
+	while (((inb(baseAddr + 1) & 0x80) == 0x0)
 	       && (timeout < C6XDIGIO_TIME_OUT)) {
 		timeout++;
 	}
 
 	WriteByteToHwPort(baseAddr, 0x0);
 	timeout = 0;
-	while (((ReadByteFromHwPort(baseAddr + 1) & 0x80) == 0x80)
+	while (((inb(baseAddr + 1) & 0x80) == 0x80)
 	       && (timeout < C6XDIGIO_TIME_OUT)) {
 		timeout++;
 	}
@@ -143,47 +137,47 @@ static void C6X_pwmOutput(unsigned long baseAddr, unsigned channel, int value)
 	}			/* endif */
 
 	WriteByteToHwPort(baseAddr, ppcmd + pwm.bits.sb0);
-	tmp = ReadByteFromHwPort(baseAddr + 1);
+	tmp = inb(baseAddr + 1);
 	while (((tmp & 0x80) == 0) && (timeout < C6XDIGIO_TIME_OUT)) {
-		tmp = ReadByteFromHwPort(baseAddr + 1);
+		tmp = inb(baseAddr + 1);
 		timeout++;
 	}
 
 	WriteByteToHwPort(baseAddr, ppcmd + pwm.bits.sb1 + 0x4);
 	timeout = 0;
-	tmp = ReadByteFromHwPort(baseAddr + 1);
+	tmp = inb(baseAddr + 1);
 	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
-		tmp = ReadByteFromHwPort(baseAddr + 1);
+		tmp = inb(baseAddr + 1);
 		timeout++;
 	}
 
 	WriteByteToHwPort(baseAddr, ppcmd + pwm.bits.sb2);
-	tmp = ReadByteFromHwPort(baseAddr + 1);
+	tmp = inb(baseAddr + 1);
 	while (((tmp & 0x80) == 0) && (timeout < C6XDIGIO_TIME_OUT)) {
-		tmp = ReadByteFromHwPort(baseAddr + 1);
+		tmp = inb(baseAddr + 1);
 		timeout++;
 	}
 
 	WriteByteToHwPort(baseAddr, ppcmd + pwm.bits.sb3 + 0x4);
 	timeout = 0;
-	tmp = ReadByteFromHwPort(baseAddr + 1);
+	tmp = inb(baseAddr + 1);
 	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
-		tmp = ReadByteFromHwPort(baseAddr + 1);
+		tmp = inb(baseAddr + 1);
 		timeout++;
 	}
 
 	WriteByteToHwPort(baseAddr, ppcmd + pwm.bits.sb4);
-	tmp = ReadByteFromHwPort(baseAddr + 1);
+	tmp = inb(baseAddr + 1);
 	while (((tmp & 0x80) == 0) && (timeout < C6XDIGIO_TIME_OUT)) {
-		tmp = ReadByteFromHwPort(baseAddr + 1);
+		tmp = inb(baseAddr + 1);
 		timeout++;
 	}
 
 	WriteByteToHwPort(baseAddr, 0x0);
 	timeout = 0;
-	tmp = ReadByteFromHwPort(baseAddr + 1);
+	tmp = inb(baseAddr + 1);
 	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
-		tmp = ReadByteFromHwPort(baseAddr + 1);
+		tmp = inb(baseAddr + 1);
 		timeout++;
 	}
 
@@ -203,82 +197,82 @@ static int C6X_encInput(unsigned long baseAddr, unsigned channel)
 		ppcmd = 0x50;
 
 	WriteByteToHwPort(baseAddr, ppcmd);
-	tmp = ReadByteFromHwPort(baseAddr + 1);
+	tmp = inb(baseAddr + 1);
 	while (((tmp & 0x80) == 0) && (timeout < C6XDIGIO_TIME_OUT)) {
-		tmp = ReadByteFromHwPort(baseAddr + 1);
+		tmp = inb(baseAddr + 1);
 		timeout++;
 	}
 
-	enc.bits.sb0 = ((ReadByteFromHwPort(baseAddr + 1) >> 3) & 0x7);
+	enc.bits.sb0 = ((inb(baseAddr + 1) >> 3) & 0x7);
 	WriteByteToHwPort(baseAddr, ppcmd + 0x4);
 	timeout = 0;
-	tmp = ReadByteFromHwPort(baseAddr + 1);
+	tmp = inb(baseAddr + 1);
 	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
-		tmp = ReadByteFromHwPort(baseAddr + 1);
+		tmp = inb(baseAddr + 1);
 		timeout++;
 	}
-	enc.bits.sb1 = ((ReadByteFromHwPort(baseAddr + 1) >> 3) & 0x7);
+	enc.bits.sb1 = ((inb(baseAddr + 1) >> 3) & 0x7);
 	WriteByteToHwPort(baseAddr, ppcmd);
 	timeout = 0;
-	tmp = ReadByteFromHwPort(baseAddr + 1);
+	tmp = inb(baseAddr + 1);
 	while (((tmp & 0x80) == 0) && (timeout < C6XDIGIO_TIME_OUT)) {
-		tmp = ReadByteFromHwPort(baseAddr + 1);
+		tmp = inb(baseAddr + 1);
 		timeout++;
 	}
-	enc.bits.sb2 = ((ReadByteFromHwPort(baseAddr + 1) >> 3) & 0x7);
+	enc.bits.sb2 = ((inb(baseAddr + 1) >> 3) & 0x7);
 	WriteByteToHwPort(baseAddr, ppcmd + 0x4);
 	timeout = 0;
-	tmp = ReadByteFromHwPort(baseAddr + 1);
+	tmp = inb(baseAddr + 1);
 	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
-		tmp = ReadByteFromHwPort(baseAddr + 1);
+		tmp = inb(baseAddr + 1);
 		timeout++;
 	}
-	enc.bits.sb3 = ((ReadByteFromHwPort(baseAddr + 1) >> 3) & 0x7);
+	enc.bits.sb3 = ((inb(baseAddr + 1) >> 3) & 0x7);
 	WriteByteToHwPort(baseAddr, ppcmd);
 	timeout = 0;
-	tmp = ReadByteFromHwPort(baseAddr + 1);
+	tmp = inb(baseAddr + 1);
 	while (((tmp & 0x80) == 0) && (timeout < C6XDIGIO_TIME_OUT)) {
-		tmp = ReadByteFromHwPort(baseAddr + 1);
+		tmp = inb(baseAddr + 1);
 		timeout++;
 	}
-	enc.bits.sb4 = ((ReadByteFromHwPort(baseAddr + 1) >> 3) & 0x7);
+	enc.bits.sb4 = ((inb(baseAddr + 1) >> 3) & 0x7);
 	WriteByteToHwPort(baseAddr, ppcmd + 0x4);
 	timeout = 0;
-	tmp = ReadByteFromHwPort(baseAddr + 1);
+	tmp = inb(baseAddr + 1);
 	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
-		tmp = ReadByteFromHwPort(baseAddr + 1);
+		tmp = inb(baseAddr + 1);
 		timeout++;
 	}
-	enc.bits.sb5 = ((ReadByteFromHwPort(baseAddr + 1) >> 3) & 0x7);
+	enc.bits.sb5 = ((inb(baseAddr + 1) >> 3) & 0x7);
 	WriteByteToHwPort(baseAddr, ppcmd);
 	timeout = 0;
-	tmp = ReadByteFromHwPort(baseAddr + 1);
+	tmp = inb(baseAddr + 1);
 	while (((tmp & 0x80) == 0x0) && (timeout < C6XDIGIO_TIME_OUT)) {
-		tmp = ReadByteFromHwPort(baseAddr + 1);
+		tmp = inb(baseAddr + 1);
 		timeout++;
 	}
-	enc.bits.sb6 = ((ReadByteFromHwPort(baseAddr + 1) >> 3) & 0x7);
+	enc.bits.sb6 = ((inb(baseAddr + 1) >> 3) & 0x7);
 	WriteByteToHwPort(baseAddr, ppcmd + 0x4);
 	timeout = 0;
-	tmp = ReadByteFromHwPort(baseAddr + 1);
+	tmp = inb(baseAddr + 1);
 	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
-		tmp = ReadByteFromHwPort(baseAddr + 1);
+		tmp = inb(baseAddr + 1);
 		timeout++;
 	}
-	enc.bits.sb7 = ((ReadByteFromHwPort(baseAddr + 1) >> 3) & 0x7);
+	enc.bits.sb7 = ((inb(baseAddr + 1) >> 3) & 0x7);
 	WriteByteToHwPort(baseAddr, ppcmd);
 	timeout = 0;
-	tmp = ReadByteFromHwPort(baseAddr + 1);
+	tmp = inb(baseAddr + 1);
 	while (((tmp & 0x80) == 0x0) && (timeout < C6XDIGIO_TIME_OUT)) {
-		tmp = ReadByteFromHwPort(baseAddr + 1);
+		tmp = inb(baseAddr + 1);
 		timeout++;
 	}
 
 	WriteByteToHwPort(baseAddr, 0x0);
 	timeout = 0;
-	tmp = ReadByteFromHwPort(baseAddr + 1);
+	tmp = inb(baseAddr + 1);
 	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
-		tmp = ReadByteFromHwPort(baseAddr + 1);
+		tmp = inb(baseAddr + 1);
 		timeout++;
 	}
 
@@ -290,25 +284,25 @@ static void C6X_encResetAll(unsigned long baseAddr)
 	unsigned timeout = 0;
 
 	WriteByteToHwPort(baseAddr, 0x68);
-	while (((ReadByteFromHwPort(baseAddr + 1) & 0x80) == 0)
+	while (((inb(baseAddr + 1) & 0x80) == 0)
 	       && (timeout < C6XDIGIO_TIME_OUT)) {
 		timeout++;
 	}
 	WriteByteToHwPort(baseAddr, 0x6C);
 	timeout = 0;
-	while (((ReadByteFromHwPort(baseAddr + 1) & 0x80) == 0x80)
+	while (((inb(baseAddr + 1) & 0x80) == 0x80)
 	       && (timeout < C6XDIGIO_TIME_OUT)) {
 		timeout++;
 	}
 	WriteByteToHwPort(baseAddr, 0x68);
 	timeout = 0;
-	while (((ReadByteFromHwPort(baseAddr + 1) & 0x80) == 0x0)
+	while (((inb(baseAddr + 1) & 0x80) == 0x0)
 	       && (timeout < C6XDIGIO_TIME_OUT)) {
 		timeout++;
 	}
 	WriteByteToHwPort(baseAddr, 0x0);
 	timeout = 0;
-	while (((ReadByteFromHwPort(baseAddr + 1) & 0x80) == 0x80)
+	while (((inb(baseAddr + 1) & 0x80) == 0x80)
 	       && (timeout < C6XDIGIO_TIME_OUT)) {
 		timeout++;
 	}

commit 4dfe3df9b3fa1bb4d30ee5ae2e360cfe72026459
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 26 16:41:40 2013 -0700

    staging: comedi: c6xdigio: remove commented out function trace messages
    
    These commented out messages are just added noise. Remove them.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index 7512eaf546a7..5034f663eec9 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -94,8 +94,6 @@ static void C6X_pwmInit(unsigned long baseAddr)
 {
 	int timeout = 0;
 
-/* printk("Inside C6X_pwmInit\n"); */
-
 	WriteByteToHwPort(baseAddr, 0x70);
 	while (((ReadByteFromHwPort(baseAddr + 1) & 0x80) == 0)
 	       && (timeout < C6XDIGIO_TIME_OUT)) {
@@ -132,8 +130,6 @@ static void C6X_pwmOutput(unsigned long baseAddr, unsigned channel, int value)
 	int timeout = 0;
 	unsigned tmp;
 
-	/* printk("Inside C6X_pwmOutput\n"); */
-
 	pwm.cmd = value;
 	if (pwm.cmd > 498)
 		pwm.cmd = 498;
@@ -200,8 +196,6 @@ static int C6X_encInput(unsigned long baseAddr, unsigned channel)
 	int timeout = 0;
 	int tmp;
 
-	/* printk("Inside C6X_encInput\n"); */
-
 	enc.value = 0;
 	if (channel == 0)
 		ppcmd = 0x48;
@@ -295,8 +289,6 @@ static void C6X_encResetAll(unsigned long baseAddr)
 {
 	unsigned timeout = 0;
 
-/* printk("Inside C6X_encResetAll\n"); */
-
 	WriteByteToHwPort(baseAddr, 0x68);
 	while (((ReadByteFromHwPort(baseAddr + 1) & 0x80) == 0)
 	       && (timeout < C6XDIGIO_TIME_OUT)) {
@@ -330,7 +322,6 @@ static int c6xdigio_pwmo_insn_write(struct comedi_device *dev,
 	int i;
 	int chan = CR_CHAN(insn->chanspec);
 
-	/*   printk("c6xdigio_pwmo_insn_write %x\n", insn->n); */
 	for (i = 0; i < insn->n; i++) {
 		C6X_pwmOutput(dev->iobase, chan, data[i]);
 		/*    devpriv->ao_readback[chan] = data[i]; */
@@ -342,7 +333,6 @@ static int c6xdigio_ei_insn_read(struct comedi_device *dev,
 				 struct comedi_subdevice *s,
 				 struct comedi_insn *insn, unsigned int *data)
 {
-	/*   printk("c6xdigio_ei__insn_read %x\n", insn->n); */
 	int n;
 	int chan = CR_CHAN(insn->chanspec);
 
@@ -354,12 +344,8 @@ static int c6xdigio_ei_insn_read(struct comedi_device *dev,
 
 static void board_init(struct comedi_device *dev)
 {
-
-	/* printk("Inside board_init\n"); */
-
 	C6X_pwmInit(dev->iobase);
 	C6X_encResetAll(dev->iobase);
-
 }
 
 static const struct pnp_device_id c6xdigio_pnp_tbl[] = {

commit c89d6ea38819b5defb7d24584ed9cf87efe8366a
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 26 16:41:39 2013 -0700

    staging: comedi: c6xdigio: remove commented out subdevice code
    
    The code to initialize subdevice[2] is commented out and incomplete.
    Just remove it.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index a85b9493071f..7512eaf546a7 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -338,26 +338,6 @@ static int c6xdigio_pwmo_insn_write(struct comedi_device *dev,
 	return i;
 }
 
-/* static int c6xdigio_ei_init_insn_read(struct comedi_device *dev, */
-/* struct comedi_subdevice *s, */
-/* struct comedi_insn *insn, */
-/* unsigned int *data) */
-/* { */
-/* printk("c6xdigio_ei_init_insn_read %x\n", insn->n); */
-/* return insn->n; */
-/* } */
-
-/* static int c6xdigio_ei_init_insn_write(struct comedi_device *dev, */
-/* struct comedi_subdevice *s, */
-/* struct comedi_insn *insn, */
-/* unsigned int *data) */
-/* { */
-/* int i; */
-/* int chan = CR_CHAN(insn->chanspec); */
-      /*  *//* C6X_encResetAll( dev->iobase ); */
-      /*  *//* return insn->n; */
-/* } */
-
 static int c6xdigio_ei_insn_read(struct comedi_device *dev,
 				 struct comedi_subdevice *s,
 				 struct comedi_insn *insn, unsigned int *data)
@@ -432,17 +412,6 @@ static int c6xdigio_attach(struct comedi_device *dev,
 	s->maxdata = 0xffffff;
 	s->range_table = &range_unknown;
 
-	/*	s = &dev->subdevices[2]; */
-	/* pwm output subdevice */
-	/*	s->type = COMEDI_SUBD_COUNTER;  // Not sure what to put here */
-	/*	s->subdev_flags = SDF_WRITEABLE; */
-	/*	s->n_chan = 1; */
-	/*	s->trig[0] = c6xdigio_ei_init; */
-	/*	s->insn_read = c6xdigio_ei_init_insn_read; */
-	/*	s->insn_write = c6xdigio_ei_init_insn_write; */
-	/*	s->maxdata = 0xFFFF;  // Really just a don't care */
-	/*	s->range_table = &range_unknown; // Not sure what to put here */
-
 	/*  I will call this init anyway but more than likely the DSP board */
 	/*  will not be connected when device driver is loaded. */
 	board_init(dev);

commit d59e3c2473fd451577aea192be741e1a2bdb4c2b
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 26 10:21:27 2013 -0700

    staging: comedi: c6xdigio: remove unnecessary c6xdigio_pwmo_insn_read()
    
    The pwm subdevice in this driver sets the subdev_flags to SDF_WRITEABLE
    so the s->insn_read callback is not needed. Since this callback simply
    outputs a printk(KERN_DEBUG ... message jsut remove it.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index 217aa19cdc32..a85b9493071f 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -322,14 +322,6 @@ static void C6X_encResetAll(unsigned long baseAddr)
 	}
 }
 
-static int c6xdigio_pwmo_insn_read(struct comedi_device *dev,
-				   struct comedi_subdevice *s,
-				   struct comedi_insn *insn, unsigned int *data)
-{
-	printk(KERN_DEBUG "c6xdigio_pwmo_insn_read %x\n", insn->n);
-	return insn->n;
-}
-
 static int c6xdigio_pwmo_insn_write(struct comedi_device *dev,
 				    struct comedi_subdevice *s,
 				    struct comedi_insn *insn,
@@ -426,7 +418,6 @@ static int c6xdigio_attach(struct comedi_device *dev,
 	s->subdev_flags = SDF_WRITEABLE;
 	s->n_chan = 2;
 	/*      s->trig[0] = c6xdigio_pwmo; */
-	s->insn_read = c6xdigio_pwmo_insn_read;
 	s->insn_write = c6xdigio_pwmo_insn_write;
 	s->maxdata = 500;
 	s->range_table = &range_bipolar10;	/*  A suitable lie */

commit d92fef8d2552ffde42b6092cb467f3021ebf8b98
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Jun 24 17:05:31 2013 -0700

    staging: comedi: do not include <linux/delay.h> if its not needed
    
    Some of the comedi files include this header but don't need it.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index cff23acd76ee..217aa19cdc32 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -35,7 +35,6 @@ This driver will not work with a 2.4 kernel.
 #include <linux/sched.h>
 #include <linux/mm.h>
 #include <linux/errno.h>
-#include <linux/delay.h>
 #include <linux/interrupt.h>
 #include <linux/timex.h>
 #include <linux/timer.h>

commit 8e6b7915a1da703617dca28c33e150141fcec9b0
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Jun 24 17:05:07 2013 -0700

    staging: comedi: drivers do not need <linux/ioport.h>
    
    All the ioport resources are managed by the comedi core. None of
    the drivers depend on <linux/ioport.h>. Remove the includes.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index 929218a35975..cff23acd76ee 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -35,7 +35,6 @@ This driver will not work with a 2.4 kernel.
 #include <linux/sched.h>
 #include <linux/mm.h>
 #include <linux/errno.h>
-#include <linux/ioport.h>
 #include <linux/delay.h>
 #include <linux/interrupt.h>
 #include <linux/timex.h>

commit 641f064e5df6fb3aaeb6256031a153a5efb16ca6
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Apr 24 18:13:24 2013 -0700

    staging: comedi: remove FSF address from boilerplate text
    
    Addresses change...
    
    Remove the paragraph with the FSF address from all the comedi source
    files.
    
    Also, remove the paragraph about the finding the complete GPL in the
    COPYING file since it's unnecessary.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index 92376dc86dd8..929218a35975 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -16,11 +16,6 @@
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-
-   You should have received a copy of the GNU General Public License
-   along with this program; if not, write to the Free Software
-   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
-
  */
 /*
 Driver: c6xdigio

commit a32c6d0084992d3e58a93120c9ce9527e80c651e
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Thu Apr 18 14:34:19 2013 -0700

    staging: comedi: drivers: use comedi_legacy_detach()
    
    Use comedi_legacy_detach() to release the I/O region requested
    by these drivers.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index 0279e06c7bf3..92376dc86dd8 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -468,8 +468,7 @@ static int c6xdigio_attach(struct comedi_device *dev,
 
 static void c6xdigio_detach(struct comedi_device *dev)
 {
-	if (dev->iobase)
-		release_region(dev->iobase, C6XDIGIO_SIZE);
+	comedi_legacy_detach(dev);
 	pnp_unregister_driver(&c6xdigio_pnp_driver);
 }
 

commit 02edcb2ade2dfb7635ea66a81390dc388d0d2996
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Apr 9 16:23:11 2013 -0700

    staging: comedi: c6xdigio: use comedi_request_region()
    
    Use comedi_request_region() to request the I/O region used by this
    driver.
    
    Remove the noise when the board is first attached as well as the
    error message when the request_region() fails, comedi_request_reqion()
    will output the error message if necessary.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index 2877247294bd..0279e06c7bf3 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -413,21 +413,16 @@ static struct pnp_driver c6xdigio_pnp_driver = {
 static int c6xdigio_attach(struct comedi_device *dev,
 			   struct comedi_devconfig *it)
 {
-	int result = 0;
-	unsigned long iobase;
 	struct comedi_subdevice *s;
+	int ret;
 
-	iobase = it->options[0];
-	printk(KERN_DEBUG "comedi%d: c6xdigio: 0x%04lx\n", dev->minor, iobase);
-	if (!request_region(iobase, C6XDIGIO_SIZE, "c6xdigio")) {
-		printk(KERN_ERR "comedi%d: I/O port conflict\n", dev->minor);
-		return -EIO;
-	}
-	dev->iobase = iobase;
+	ret = comedi_request_region(dev, it->options[0], C6XDIGIO_SIZE);
+	if (ret)
+		return ret;
 
-	result = comedi_alloc_subdevices(dev, 2);
-	if (result)
-		return result;
+	ret = comedi_alloc_subdevices(dev, 2);
+	if (ret)
+		return ret;
 
 	/*  Make sure that PnP ports get activated */
 	pnp_register_driver(&c6xdigio_pnp_driver);

commit ce573addb08c8198ceb02647283286d18d5e59ff
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Apr 9 16:22:50 2013 -0700

    staging: comedi: c6xdigio: remove usless comment
    
    Remove the comment about the configuration options. It's not
    correct for this board.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index 3cd09cb71421..2877247294bd 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -397,11 +397,6 @@ static void board_init(struct comedi_device *dev)
 
 }
 
-/*
-   options[0] - I/O port
-   options[2] - number of encoder chips installed
- */
-
 static const struct pnp_device_id c6xdigio_pnp_tbl[] = {
 	/* Standard LPT Printer Port */
 	{.id = "PNP0400", .driver_data = 0},

commit 731ff7e79053c4d740e24e8339e15e0774936202
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Apr 9 16:22:28 2013 -0700

    staging: comedi: c6xdigio: board does not use interrupts
    
    This driver does not use interruptes. Don't bother parsing the
    configuration option from "comedi_config".
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index 816b879c7e19..3cd09cb71421 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -399,7 +399,6 @@ static void board_init(struct comedi_device *dev)
 
 /*
    options[0] - I/O port
-   options[1] - irq
    options[2] - number of encoder chips installed
  */
 
@@ -421,7 +420,6 @@ static int c6xdigio_attach(struct comedi_device *dev,
 {
 	int result = 0;
 	unsigned long iobase;
-	unsigned int irq;
 	struct comedi_subdevice *s;
 
 	iobase = it->options[0];
@@ -439,13 +437,6 @@ static int c6xdigio_attach(struct comedi_device *dev,
 	/*  Make sure that PnP ports get activated */
 	pnp_register_driver(&c6xdigio_pnp_driver);
 
-	irq = it->options[1];
-	if (irq > 0)
-		printk(KERN_DEBUG "comedi%d: irq = %u ignored\n",
-				dev->minor, irq);
-	else if (irq == 0)
-		printk(KERN_DEBUG "comedi%d: no irq\n", dev->minor);
-
 	s = &dev->subdevices[0];
 	/* pwm output subdevice */
 	s->type = COMEDI_SUBD_AO;	/*  Not sure what to put here */
@@ -489,8 +480,6 @@ static void c6xdigio_detach(struct comedi_device *dev)
 {
 	if (dev->iobase)
 		release_region(dev->iobase, C6XDIGIO_SIZE);
-	if (dev->irq)
-		free_irq(dev->irq, dev);
 	pnp_unregister_driver(&c6xdigio_pnp_driver);
 }
 

commit 5993f3a2692eed3c74c86882155b8703a0060ad5
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Apr 8 10:57:35 2013 -0700

    staging: comedi: remove unnecessary dev->board_name initialization
    
    The dev->board_name is now initialized by the comedi core before calling
    the(*attach) or (*auto_attach) function in a driver. As long as the driver
    does no additional probing, it's no longer necessary initialize the board_name.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index 070037c22db7..816b879c7e19 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -431,7 +431,6 @@ static int c6xdigio_attach(struct comedi_device *dev,
 		return -EIO;
 	}
 	dev->iobase = iobase;
-	dev->board_name = "c6xdigio";
 
 	result = comedi_alloc_subdevices(dev, 2);
 	if (result)

commit 0c2d3aacfe04425a3b95d92d1a0c2fbfec6c14ba
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Wed Sep 5 18:31:08 2012 -0700

    staging: comedi: c6xdigio: remove subdevice pointer math
    
    Convert the comedi_subdevice access from pointer math to array
    access.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index 41ed8576f301..070037c22db7 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -447,7 +447,7 @@ static int c6xdigio_attach(struct comedi_device *dev,
 	else if (irq == 0)
 		printk(KERN_DEBUG "comedi%d: no irq\n", dev->minor);
 
-	s = dev->subdevices + 0;
+	s = &dev->subdevices[0];
 	/* pwm output subdevice */
 	s->type = COMEDI_SUBD_AO;	/*  Not sure what to put here */
 	s->subdev_flags = SDF_WRITEABLE;
@@ -458,7 +458,7 @@ static int c6xdigio_attach(struct comedi_device *dev,
 	s->maxdata = 500;
 	s->range_table = &range_bipolar10;	/*  A suitable lie */
 
-	s = dev->subdevices + 1;
+	s = &dev->subdevices[1];
 	/* encoder (counter) subdevice */
 	s->type = COMEDI_SUBD_COUNTER;
 	s->subdev_flags = SDF_READABLE | SDF_LSAMPL;
@@ -468,7 +468,7 @@ static int c6xdigio_attach(struct comedi_device *dev,
 	s->maxdata = 0xffffff;
 	s->range_table = &range_unknown;
 
-	/*	s = dev->subdevices + 2; */
+	/*	s = &dev->subdevices[2]; */
 	/* pwm output subdevice */
 	/*	s->type = COMEDI_SUBD_COUNTER;  // Not sure what to put here */
 	/*	s->subdev_flags = SDF_WRITEABLE; */

commit 8b6c56949ffa83dbc2a6e8fa3f98b10a19372207
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Tue Jun 12 11:59:33 2012 -0700

    staging: comedi: propogate error code from comedi_alloc_subdevices
    
    comedi_alloc_subdevices can fail with -EINVAL or -ENOMEM. When it
    does fail make sure to pass the proper error code back.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbott@mev.co.uk>
    Cc: Frank Mori Hess <fmhess@users.sourceforge.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index 5fa344b269fd..41ed8576f301 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -434,7 +434,7 @@ static int c6xdigio_attach(struct comedi_device *dev,
 	dev->board_name = "c6xdigio";
 
 	result = comedi_alloc_subdevices(dev, 2);
-	if (result < 0)
+	if (result)
 		return result;
 
 	/*  Make sure that PnP ports get activated */

commit eea6838b1206b0ac90110f1a6f58e101aa496e99
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Tue Jun 12 11:59:15 2012 -0700

    staging: comedi: remove the "Allocate the subdevice..." comments
    
    These comments are redundant. The function name 'comedi_alloc_subdevices'
    provides this information.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <ian@mev.co.uk>
    Cc: Frank Mori Hess <fmhess@users.sourceforge.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index 72b000fad609..5fa344b269fd 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -433,7 +433,6 @@ static int c6xdigio_attach(struct comedi_device *dev,
 	dev->iobase = iobase;
 	dev->board_name = "c6xdigio";
 
-	/* 3 subdevices with encoder_init write */
 	result = comedi_alloc_subdevices(dev, 2);
 	if (result < 0)
 		return result;

commit 2f0b9d082e5d0056a3aca4be038483a564849196
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Mon Jun 11 17:45:15 2012 -0700

    staging: comedi: export alloc_subdevices as comedi_alloc_subdevices
    
    Move the inline alloc_subdevices() function from comedidev.h
    to drivers.c and rename it to comedi_alloc_subdevices(). The
    function is large enough to warrant being an exported symbol
    rather than being an inline in every driver.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Cc: Frank Mori Hess <fmhess@users.sourceforge.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index fb9951a746a6..72b000fad609 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -433,7 +433,8 @@ static int c6xdigio_attach(struct comedi_device *dev,
 	dev->iobase = iobase;
 	dev->board_name = "c6xdigio";
 
-	result = alloc_subdevices(dev, 2);	/*  3 with encoder_init write */
+	/* 3 subdevices with encoder_init write */
+	result = comedi_alloc_subdevices(dev, 2);
 	if (result < 0)
 		return result;
 

commit 484ecc95d9cdfa8b2f7029e2f3409cf078aed4ab
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Thu May 17 17:11:14 2012 -0700

    staging: comedi: cleanup all the comedi_driver 'detach' functions
    
    1. Change the return type from int to void
    
    All the detach functions, except for the comedi usb drivers, simply
    return success (0). Plus, the return code is never checked in the
    comedi core.
    
    The comedi usb drivers do return error codes but the conditions can
    never happen.
    
    The first check is:
    
            if (!dev)
                    return -EFAULT;
    
    This checks that the passed comedi_device pointer is valid. The detach
    function itself is called using this pointer so it MUST always be valid
    or there is a bug in the core:
    
            if (dev->driver)
                    dev->driver->detach(dev);
    
    And the second check:
    
            usb = dev->private;
            if (!usb)
                    return -EFAULT;
    
    The dev->private pointer is setup in the attach function to point to the
    probed usb device. This value could be NULL if the attach fails. But,
    since the comedi core is going to unload the driver anyway and does not
    check for errors there is no gain by returning one.
    
    After removing these checks from the comedi usb drivers the detach
    functions required a bit of cleanup.
    
    2. Remove all the printk noise in the detach functions
    
    All of the printk output is really just noise. The user did a rmmod to
    unload the driver, we really don't need to tell them about it.
    
    Also, some of the messages are output using:
    
            dev_dbg(dev->hw_dev, ...
    or
            dev_info(dev->hw_dev, ...
    
    Unfortunately the hw_dev value is only used by drivers that are doing
    DMA. For most drivers this variable is going to be NULL so the output
    is not going to work as expected.
    
    3. Refactor a couple static 'free_resource' functions into the detach
       functions.
    
    The 'free_resource' function is only being called by the detach and it
    makes more sense to just absorb the code.
    
    4. Remove a couple unnecessary braces for single statements.
    
    5. Remove unnecessary comments.
    
    Most of the comedi drivers appear to be based on the comedi skel driver
    and have the comments from that driver included. These comments make
    sense in the skel driver for reference but they don't need to be in any
    of the actual drivers.
    
    6. Remove all the extra whitespace.
    
    It's not needed to make the functions any more readable.
    
    7. Remove the now unused 'attached_successfully' variable in the
       cb_pcimdda driver.
    
    This variable was only used to conditionally output some driver noise
    during the detach. Since all the printk's have been removed this
    variable is no longer necessary.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Cc: Mori Hess <fmhess@users.sourceforge.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index 56dd33ae0d5b..fb9951a746a6 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -397,10 +397,6 @@ static void board_init(struct comedi_device *dev)
 
 }
 
-/* static void board_halt(struct comedi_device *dev) { */
-/* C6X_pwmInit(dev->iobase); */
-/* } */
-
 /*
    options[0] - I/O port
    options[1] - irq
@@ -490,22 +486,13 @@ static int c6xdigio_attach(struct comedi_device *dev,
 	return 0;
 }
 
-static int c6xdigio_detach(struct comedi_device *dev)
+static void c6xdigio_detach(struct comedi_device *dev)
 {
-	/* board_halt(dev);  may not need this */
-
-	printk(KERN_DEBUG "comedi%d: c6xdigio: remove\n", dev->minor);
-
 	if (dev->iobase)
 		release_region(dev->iobase, C6XDIGIO_SIZE);
-
-	/*  Not using IRQ so I am not sure if I need this */
 	if (dev->irq)
 		free_irq(dev->irq, dev);
-
 	pnp_unregister_driver(&c6xdigio_pnp_driver);
-
-	return 0;
 }
 
 static struct comedi_driver c6xdigio_driver = {

commit 294f930d98be86fb4f34302c718a49719650857f
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Thu May 3 15:09:40 2012 -0700

    staging: comedi: use module_comedi_driver
    
    Convert the refactored comedi drivers to use the module_comedi_driver()
    macro which makes the code smaller and a bit simpler.
    
    In the process, rename the driver variables from driver_* to *_driver,
    as is more typical with other subsystems, and make sure they are all
    static.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Cc: Mori Hess <fmhess@users.sourceforge.net>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index 5f7535150397..56dd33ae0d5b 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -508,24 +508,13 @@ static int c6xdigio_detach(struct comedi_device *dev)
 	return 0;
 }
 
-struct comedi_driver driver_c6xdigio = {
+static struct comedi_driver c6xdigio_driver = {
 	.driver_name	= "c6xdigio",
 	.module		= THIS_MODULE,
 	.attach		= c6xdigio_attach,
 	.detach		= c6xdigio_detach,
 };
-
-static int __init driver_c6xdigio_init_module(void)
-{
-	return comedi_driver_register(&driver_c6xdigio);
-}
-module_init(driver_c6xdigio_init_module);
-
-static void __exit driver_c6xdigio_cleanup_module(void)
-{
-	comedi_driver_unregister(&driver_c6xdigio);
-}
-module_exit(driver_c6xdigio_cleanup_module);
+module_comedi_driver(c6xdigio_driver);
 
 MODULE_AUTHOR("Comedi http://www.comedi.org");
 MODULE_DESCRIPTION("Comedi low-level driver");

commit 771145262e9bbabb03bd71d34792546db0bd2813
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Mon Apr 23 16:20:41 2012 -0700

    staging: comedi: refactor c6xdigio driver to remove forward declarations
    
    Move the struct comedi_driver variable to remove the need
    or the forward declarations.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Cc: Mori Hess <fmhess@users.sourceforge.net>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index 11cdaf2a5aa5..5f7535150397 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -97,16 +97,6 @@ union encvaluetype {
 
 #define C6XDIGIO_TIME_OUT 20
 
-static int c6xdigio_attach(struct comedi_device *dev,
-			   struct comedi_devconfig *it);
-static int c6xdigio_detach(struct comedi_device *dev);
-struct comedi_driver driver_c6xdigio = {
-	.driver_name = "c6xdigio",
-	.module = THIS_MODULE,
-	.attach = c6xdigio_attach,
-	.detach = c6xdigio_detach,
-};
-
 static void C6X_pwmInit(unsigned long baseAddr)
 {
 	int timeout = 0;
@@ -518,17 +508,23 @@ static int c6xdigio_detach(struct comedi_device *dev)
 	return 0;
 }
 
+struct comedi_driver driver_c6xdigio = {
+	.driver_name	= "c6xdigio",
+	.module		= THIS_MODULE,
+	.attach		= c6xdigio_attach,
+	.detach		= c6xdigio_detach,
+};
+
 static int __init driver_c6xdigio_init_module(void)
 {
 	return comedi_driver_register(&driver_c6xdigio);
 }
+module_init(driver_c6xdigio_init_module);
 
 static void __exit driver_c6xdigio_cleanup_module(void)
 {
 	comedi_driver_unregister(&driver_c6xdigio);
 }
-
-module_init(driver_c6xdigio_init_module);
 module_exit(driver_c6xdigio_cleanup_module);
 
 MODULE_AUTHOR("Comedi http://www.comedi.org");

commit 0bdd2b620794f4f8bddac620b774d7fbf879dcbc
Author: Nasir Abed <nasirabed@gmail.com>
Date:   Mon Oct 10 12:09:52 2011 +0200

    Staging: comedi: c6xdigio: fixed missing KERN_* in printk
    
    Fixed missing KERN_* in printk statements.
    
    Signed-off-by: Nasir Abed <nasirabed+kernel@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index e0ac825ea58a..11cdaf2a5aa5 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -343,7 +343,7 @@ static int c6xdigio_pwmo_insn_read(struct comedi_device *dev,
 				   struct comedi_subdevice *s,
 				   struct comedi_insn *insn, unsigned int *data)
 {
-	printk("c6xdigio_pwmo_insn_read %x\n", insn->n);
+	printk(KERN_DEBUG "c6xdigio_pwmo_insn_read %x\n", insn->n);
 	return insn->n;
 }
 
@@ -439,9 +439,9 @@ static int c6xdigio_attach(struct comedi_device *dev,
 	struct comedi_subdevice *s;
 
 	iobase = it->options[0];
-	printk("comedi%d: c6xdigio: 0x%04lx\n", dev->minor, iobase);
+	printk(KERN_DEBUG "comedi%d: c6xdigio: 0x%04lx\n", dev->minor, iobase);
 	if (!request_region(iobase, C6XDIGIO_SIZE, "c6xdigio")) {
-		printk("comedi%d: I/O port conflict\n", dev->minor);
+		printk(KERN_ERR "comedi%d: I/O port conflict\n", dev->minor);
 		return -EIO;
 	}
 	dev->iobase = iobase;
@@ -456,9 +456,10 @@ static int c6xdigio_attach(struct comedi_device *dev,
 
 	irq = it->options[1];
 	if (irq > 0)
-		printk("comedi%d: irq = %u ignored\n", dev->minor, irq);
+		printk(KERN_DEBUG "comedi%d: irq = %u ignored\n",
+				dev->minor, irq);
 	else if (irq == 0)
-		printk("comedi%d: no irq\n", dev->minor);
+		printk(KERN_DEBUG "comedi%d: no irq\n", dev->minor);
 
 	s = dev->subdevices + 0;
 	/* pwm output subdevice */
@@ -503,7 +504,7 @@ static int c6xdigio_detach(struct comedi_device *dev)
 {
 	/* board_halt(dev);  may not need this */
 
-	printk("comedi%d: c6xdigio: remove\n", dev->minor);
+	printk(KERN_DEBUG "comedi%d: c6xdigio: remove\n", dev->minor);
 
 	if (dev->iobase)
 		release_region(dev->iobase, C6XDIGIO_SIZE);

commit 7114a28011f9d5f3d981731ad341177c21f9d948
Author: Arun Thomas <arun.thomas@gmail.com>
Date:   Sun Jun 6 22:23:30 2010 +0200

    Staging: comedi: Remove COMEDI_INITCLEANUP macro
    
    Move the init/exit routines to the respective C source files
    instead of calling COMEDI_INITCLEANUP
    
    Signed-off-by: Arun Thomas <arun.thomas@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index d830176bbd02..e0ac825ea58a 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -517,7 +517,18 @@ static int c6xdigio_detach(struct comedi_device *dev)
 	return 0;
 }
 
-COMEDI_INITCLEANUP(driver_c6xdigio);
+static int __init driver_c6xdigio_init_module(void)
+{
+	return comedi_driver_register(&driver_c6xdigio);
+}
+
+static void __exit driver_c6xdigio_cleanup_module(void)
+{
+	comedi_driver_unregister(&driver_c6xdigio);
+}
+
+module_init(driver_c6xdigio_init_module);
+module_exit(driver_c6xdigio_cleanup_module);
 
 MODULE_AUTHOR("Comedi http://www.comedi.org");
 MODULE_DESCRIPTION("Comedi low-level driver");

commit 90f703d30dd3e0c16ff80f35e34e511385a05ad5
Author: Arun Thomas <arun.thomas@gmail.com>
Date:   Sun Jun 6 22:23:29 2010 +0200

    Staging: comedi: Remove COMEDI_MODULES_MACRO
    
    Add MODULE_AUTHOR, MODULE_LICENSE, and MODULE_DESCRIPTION calls
    to the respective C source files instead of calling COMEDI_MODULES_MACRO
    
    Signed-off-by: Arun Thomas <arun.thomas@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index fb0d5fa71765..d830176bbd02 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -518,3 +518,7 @@ static int c6xdigio_detach(struct comedi_device *dev)
 }
 
 COMEDI_INITCLEANUP(driver_c6xdigio);
+
+MODULE_AUTHOR("Comedi http://www.comedi.org");
+MODULE_DESCRIPTION("Comedi low-level driver");
+MODULE_LICENSE("GPL");

commit 23d53b1768f9396d0e259a9b4e62bfcc03122bab
Author: Benjamin Adolphi <b.adolphi@googlemail.com>
Date:   Fri Jan 15 17:37:47 2010 +0100

    Staging: comedi: c6xdigio: Checkpatch cleanups
    
    This fixes some checkpatch issues and some
    spelling mistakes in the c6xdigio comedi driver.
    
    Signed-off-by: Benjamin Adolphi <b.adolphi@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index abb0532182ba..fb0d5fa71765 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -45,7 +45,7 @@ This driver will not work with a 2.4 kernel.
 #include <linux/interrupt.h>
 #include <linux/timex.h>
 #include <linux/timer.h>
-#include <asm/io.h>
+#include <linux/io.h>
 #include <linux/pnp.h>
 
 #include "../comedidev.h"
@@ -220,11 +220,11 @@ static int C6X_encInput(unsigned long baseAddr, unsigned channel)
 	/* printk("Inside C6X_encInput\n"); */
 
 	enc.value = 0;
-	if (channel == 0) {
+	if (channel == 0)
 		ppcmd = 0x48;
-	} else {
+	else
 		ppcmd = 0x50;
-	}
+
 	WriteByteToHwPort(baseAddr, ppcmd);
 	tmp = ReadByteFromHwPort(baseAddr + 1);
 	while (((tmp & 0x80) == 0) && (timeout < C6XDIGIO_TIME_OUT)) {
@@ -391,9 +391,8 @@ static int c6xdigio_ei_insn_read(struct comedi_device *dev,
 	int n;
 	int chan = CR_CHAN(insn->chanspec);
 
-	for (n = 0; n < insn->n; n++) {
+	for (n = 0; n < insn->n; n++)
 		data[n] = (C6X_encInput(dev->iobase, chan) & 0xffffff);
-	}
 
 	return n;
 }
@@ -420,9 +419,9 @@ static void board_init(struct comedi_device *dev)
 
 static const struct pnp_device_id c6xdigio_pnp_tbl[] = {
 	/* Standard LPT Printer Port */
-	{.id = "PNP0400",.driver_data = 0},
+	{.id = "PNP0400", .driver_data = 0},
 	/* ECP Printer Port */
-	{.id = "PNP0401",.driver_data = 0},
+	{.id = "PNP0401", .driver_data = 0},
 	{}
 };
 
@@ -452,15 +451,14 @@ static int c6xdigio_attach(struct comedi_device *dev,
 	if (result < 0)
 		return result;
 
-	/*  Make sure that PnP ports gets activated */
+	/*  Make sure that PnP ports get activated */
 	pnp_register_driver(&c6xdigio_pnp_driver);
 
 	irq = it->options[1];
-	if (irq > 0) {
+	if (irq > 0)
 		printk("comedi%d: irq = %u ignored\n", dev->minor, irq);
-	} else if (irq == 0) {
+	else if (irq == 0)
 		printk("comedi%d: no irq\n", dev->minor);
-	}
 
 	s = dev->subdevices + 0;
 	/* pwm output subdevice */
@@ -483,19 +481,19 @@ static int c6xdigio_attach(struct comedi_device *dev,
 	s->maxdata = 0xffffff;
 	s->range_table = &range_unknown;
 
-	/*           s = dev->subdevices + 2; */
+	/*	s = dev->subdevices + 2; */
 	/* pwm output subdevice */
-	/*       s->type = COMEDI_SUBD_COUNTER;  // Not sure what to put here */
-	/*       s->subdev_flags = SDF_WRITEABLE; */
-	/*       s->n_chan = 1; */
-	/*       s->trig[0] = c6xdigio_ei_init; */
-	/*       s->insn_read = c6xdigio_ei_init_insn_read; */
-	/*       s->insn_write = c6xdigio_ei_init_insn_write; */
-	/*       s->maxdata = 0xFFFF;  // Really just a don't care */
-	/*       s->range_table = &range_unknown; // Not sure what to put here */
-
-	/*  I will call this init anyway but more than likely the DSP board will not be connect */
-	/*  when device driver is loaded. */
+	/*	s->type = COMEDI_SUBD_COUNTER;  // Not sure what to put here */
+	/*	s->subdev_flags = SDF_WRITEABLE; */
+	/*	s->n_chan = 1; */
+	/*	s->trig[0] = c6xdigio_ei_init; */
+	/*	s->insn_read = c6xdigio_ei_init_insn_read; */
+	/*	s->insn_write = c6xdigio_ei_init_insn_write; */
+	/*	s->maxdata = 0xFFFF;  // Really just a don't care */
+	/*	s->range_table = &range_unknown; // Not sure what to put here */
+
+	/*  I will call this init anyway but more than likely the DSP board */
+	/*  will not be connected when device driver is loaded. */
 	board_init(dev);
 
 	return 0;
@@ -503,16 +501,17 @@ static int c6xdigio_attach(struct comedi_device *dev,
 
 static int c6xdigio_detach(struct comedi_device *dev)
 {
-/* board_halt(dev);  may not need this */
+	/* board_halt(dev);  may not need this */
 
 	printk("comedi%d: c6xdigio: remove\n", dev->minor);
 
-	if (dev->iobase) {
+	if (dev->iobase)
 		release_region(dev->iobase, C6XDIGIO_SIZE);
-	}
-	if (dev->irq) {
+
+	/*  Not using IRQ so I am not sure if I need this */
+	if (dev->irq)
 		free_irq(dev->irq, dev);
-	}			/*  Not using IRQ so I am not sure if I need this */
+
 	pnp_unregister_driver(&c6xdigio_pnp_driver);
 
 	return 0;

commit 0a85b6f0ab0d2edb0d41b32697111ce0e4f43496
Author: Mithlesh Thukral <mithlesh@linsyssoft.com>
Date:   Mon Jun 8 21:04:41 2009 +0530

    Staging: Comedi: Lindent changes to comdi driver in staging tree
    
    Lindent changes to comdi driver in staging tree.
    This patch is followed by the checkpatch.pl error fixes.
    Did not make them part of this patch as the patch size is already huge.
    
    Signed-off-by: Mithlesh Thukral <mithlesh@linsyssoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index b204793040e2..abb0532182ba 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -97,7 +97,8 @@ union encvaluetype {
 
 #define C6XDIGIO_TIME_OUT 20
 
-static int c6xdigio_attach(struct comedi_device *dev, struct comedi_devconfig *it);
+static int c6xdigio_attach(struct comedi_device *dev,
+			   struct comedi_devconfig *it);
 static int c6xdigio_detach(struct comedi_device *dev);
 struct comedi_driver driver_c6xdigio = {
 	.driver_name = "c6xdigio",
@@ -114,28 +115,28 @@ static void C6X_pwmInit(unsigned long baseAddr)
 
 	WriteByteToHwPort(baseAddr, 0x70);
 	while (((ReadByteFromHwPort(baseAddr + 1) & 0x80) == 0)
-		&& (timeout < C6XDIGIO_TIME_OUT)) {
+	       && (timeout < C6XDIGIO_TIME_OUT)) {
 		timeout++;
 	}
 
 	WriteByteToHwPort(baseAddr, 0x74);
 	timeout = 0;
 	while (((ReadByteFromHwPort(baseAddr + 1) & 0x80) == 0x80)
-		&& (timeout < C6XDIGIO_TIME_OUT)) {
+	       && (timeout < C6XDIGIO_TIME_OUT)) {
 		timeout++;
 	}
 
 	WriteByteToHwPort(baseAddr, 0x70);
 	timeout = 0;
 	while (((ReadByteFromHwPort(baseAddr + 1) & 0x80) == 0x0)
-		&& (timeout < C6XDIGIO_TIME_OUT)) {
+	       && (timeout < C6XDIGIO_TIME_OUT)) {
 		timeout++;
 	}
 
 	WriteByteToHwPort(baseAddr, 0x0);
 	timeout = 0;
 	while (((ReadByteFromHwPort(baseAddr + 1) & 0x80) == 0x80)
-		&& (timeout < C6XDIGIO_TIME_OUT)) {
+	       && (timeout < C6XDIGIO_TIME_OUT)) {
 		timeout++;
 	}
 
@@ -315,38 +316,41 @@ static void C6X_encResetAll(unsigned long baseAddr)
 
 	WriteByteToHwPort(baseAddr, 0x68);
 	while (((ReadByteFromHwPort(baseAddr + 1) & 0x80) == 0)
-		&& (timeout < C6XDIGIO_TIME_OUT)) {
+	       && (timeout < C6XDIGIO_TIME_OUT)) {
 		timeout++;
 	}
 	WriteByteToHwPort(baseAddr, 0x6C);
 	timeout = 0;
 	while (((ReadByteFromHwPort(baseAddr + 1) & 0x80) == 0x80)
-		&& (timeout < C6XDIGIO_TIME_OUT)) {
+	       && (timeout < C6XDIGIO_TIME_OUT)) {
 		timeout++;
 	}
 	WriteByteToHwPort(baseAddr, 0x68);
 	timeout = 0;
 	while (((ReadByteFromHwPort(baseAddr + 1) & 0x80) == 0x0)
-		&& (timeout < C6XDIGIO_TIME_OUT)) {
+	       && (timeout < C6XDIGIO_TIME_OUT)) {
 		timeout++;
 	}
 	WriteByteToHwPort(baseAddr, 0x0);
 	timeout = 0;
 	while (((ReadByteFromHwPort(baseAddr + 1) & 0x80) == 0x80)
-		&& (timeout < C6XDIGIO_TIME_OUT)) {
+	       && (timeout < C6XDIGIO_TIME_OUT)) {
 		timeout++;
 	}
 }
 
 static int c6xdigio_pwmo_insn_read(struct comedi_device *dev,
-	struct comedi_subdevice *s, struct comedi_insn *insn, unsigned int *data)
+				   struct comedi_subdevice *s,
+				   struct comedi_insn *insn, unsigned int *data)
 {
 	printk("c6xdigio_pwmo_insn_read %x\n", insn->n);
 	return insn->n;
 }
 
 static int c6xdigio_pwmo_insn_write(struct comedi_device *dev,
-	struct comedi_subdevice *s, struct comedi_insn *insn, unsigned int *data)
+				    struct comedi_subdevice *s,
+				    struct comedi_insn *insn,
+				    unsigned int *data)
 {
 	int i;
 	int chan = CR_CHAN(insn->chanspec);
@@ -375,12 +379,13 @@ static int c6xdigio_pwmo_insn_write(struct comedi_device *dev,
 /* { */
 /* int i; */
 /* int chan = CR_CHAN(insn->chanspec); */
-/*  *//* C6X_encResetAll( dev->iobase ); */
-/*  *//* return insn->n; */
+      /*  *//* C6X_encResetAll( dev->iobase ); */
+      /*  *//* return insn->n; */
 /* } */
 
 static int c6xdigio_ei_insn_read(struct comedi_device *dev,
-	struct comedi_subdevice *s, struct comedi_insn *insn, unsigned int *data)
+				 struct comedi_subdevice *s,
+				 struct comedi_insn *insn, unsigned int *data)
 {
 	/*   printk("c6xdigio_ei__insn_read %x\n", insn->n); */
 	int n;
@@ -415,9 +420,9 @@ static void board_init(struct comedi_device *dev)
 
 static const struct pnp_device_id c6xdigio_pnp_tbl[] = {
 	/* Standard LPT Printer Port */
-	{.id = "PNP0400", .driver_data = 0},
+	{.id = "PNP0400",.driver_data = 0},
 	/* ECP Printer Port */
-	{.id = "PNP0401", .driver_data = 0},
+	{.id = "PNP0401",.driver_data = 0},
 	{}
 };
 
@@ -426,7 +431,8 @@ static struct pnp_driver c6xdigio_pnp_driver = {
 	.id_table = c6xdigio_pnp_tbl,
 };
 
-static int c6xdigio_attach(struct comedi_device *dev, struct comedi_devconfig *it)
+static int c6xdigio_attach(struct comedi_device *dev,
+			   struct comedi_devconfig *it)
 {
 	int result = 0;
 	unsigned long iobase;
@@ -478,7 +484,7 @@ static int c6xdigio_attach(struct comedi_device *dev, struct comedi_devconfig *i
 	s->range_table = &range_unknown;
 
 	/*           s = dev->subdevices + 2; */
-	      /* pwm output subdevice */
+	/* pwm output subdevice */
 	/*       s->type = COMEDI_SUBD_COUNTER;  // Not sure what to put here */
 	/*       s->subdev_flags = SDF_WRITEABLE; */
 	/*       s->n_chan = 1; */

commit 68c3dbff9fc9f25872408d0e95980d41733d48d0
Author: Bill Pemberton <wfp5p@virginia.edu>
Date:   Wed Apr 22 21:11:49 2009 -0400

    Staging: comedi: fix the way structs are initialized.
    
    Change from the foo: bar format to the .foo = bar format.
    
    Signed-off-by: Bill Pemberton <wfp5p@virginia.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index 0c212ecc76ca..b204793040e2 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -100,10 +100,10 @@ union encvaluetype {
 static int c6xdigio_attach(struct comedi_device *dev, struct comedi_devconfig *it);
 static int c6xdigio_detach(struct comedi_device *dev);
 struct comedi_driver driver_c6xdigio = {
-      driver_name:"c6xdigio",
-      module:THIS_MODULE,
-      attach:c6xdigio_attach,
-      detach:c6xdigio_detach,
+	.driver_name = "c6xdigio",
+	.module = THIS_MODULE,
+	.attach = c6xdigio_attach,
+	.detach = c6xdigio_detach,
 };
 
 static void C6X_pwmInit(unsigned long baseAddr)

commit dae0dc30be7fa21b15a9d9534589286c6c3e68a3
Author: Bill Pemberton <wfp5p@virginia.edu>
Date:   Wed Apr 22 21:11:48 2009 -0400

    Staging: comedi: Remove parens around return values
    
    Signed-off-by: Bill Pemberton <wfp5p@virginia.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index abd20dfec08c..0c212ecc76ca 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -304,7 +304,7 @@ static int C6X_encInput(unsigned long baseAddr, unsigned channel)
 		timeout++;
 	}
 
-	return (enc.value ^ 0x800000);
+	return enc.value ^ 0x800000;
 }
 
 static void C6X_encResetAll(unsigned long baseAddr)

commit f7cbd7aad063b2a4b7aff6a743b2b00015ce3c3e
Author: Bill Pemberton <wfp5p@virginia.edu>
Date:   Thu Apr 9 16:07:16 2009 -0400

    Staging: comedi: Add spaces after commas
    
    Signed-off-by: Bill Pemberton <wfp5p@virginia.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index 23263ed57532..abd20dfec08c 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -415,9 +415,9 @@ static void board_init(struct comedi_device *dev)
 
 static const struct pnp_device_id c6xdigio_pnp_tbl[] = {
 	/* Standard LPT Printer Port */
-	{.id = "PNP0400",.driver_data = 0},
+	{.id = "PNP0400", .driver_data = 0},
 	/* ECP Printer Port */
-	{.id = "PNP0401",.driver_data = 0},
+	{.id = "PNP0401", .driver_data = 0},
 	{}
 };
 

commit da91b2692e0939b307f9047192d2b9fe07793e7a
Author: Bill Pemberton <wfp5p@virginia.edu>
Date:   Thu Apr 9 16:07:03 2009 -0400

    Staging: comedi: fix "foo * bar" should be "foo *bar"
    
    Signed-off-by: Bill Pemberton <wfp5p@virginia.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index c8ffddf4add4..23263ed57532 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -97,8 +97,8 @@ union encvaluetype {
 
 #define C6XDIGIO_TIME_OUT 20
 
-static int c6xdigio_attach(struct comedi_device * dev, struct comedi_devconfig * it);
-static int c6xdigio_detach(struct comedi_device * dev);
+static int c6xdigio_attach(struct comedi_device *dev, struct comedi_devconfig *it);
+static int c6xdigio_detach(struct comedi_device *dev);
 struct comedi_driver driver_c6xdigio = {
       driver_name:"c6xdigio",
       module:THIS_MODULE,
@@ -338,15 +338,15 @@ static void C6X_encResetAll(unsigned long baseAddr)
 	}
 }
 
-static int c6xdigio_pwmo_insn_read(struct comedi_device * dev,
-	struct comedi_subdevice * s, struct comedi_insn * insn, unsigned int * data)
+static int c6xdigio_pwmo_insn_read(struct comedi_device *dev,
+	struct comedi_subdevice *s, struct comedi_insn *insn, unsigned int *data)
 {
 	printk("c6xdigio_pwmo_insn_read %x\n", insn->n);
 	return insn->n;
 }
 
-static int c6xdigio_pwmo_insn_write(struct comedi_device * dev,
-	struct comedi_subdevice * s, struct comedi_insn * insn, unsigned int * data)
+static int c6xdigio_pwmo_insn_write(struct comedi_device *dev,
+	struct comedi_subdevice *s, struct comedi_insn *insn, unsigned int *data)
 {
 	int i;
 	int chan = CR_CHAN(insn->chanspec);
@@ -379,8 +379,8 @@ static int c6xdigio_pwmo_insn_write(struct comedi_device * dev,
 /*  *//* return insn->n; */
 /* } */
 
-static int c6xdigio_ei_insn_read(struct comedi_device * dev,
-	struct comedi_subdevice * s, struct comedi_insn * insn, unsigned int * data)
+static int c6xdigio_ei_insn_read(struct comedi_device *dev,
+	struct comedi_subdevice *s, struct comedi_insn *insn, unsigned int *data)
 {
 	/*   printk("c6xdigio_ei__insn_read %x\n", insn->n); */
 	int n;
@@ -393,7 +393,7 @@ static int c6xdigio_ei_insn_read(struct comedi_device * dev,
 	return n;
 }
 
-static void board_init(struct comedi_device * dev)
+static void board_init(struct comedi_device *dev)
 {
 
 	/* printk("Inside board_init\n"); */
@@ -426,7 +426,7 @@ static struct pnp_driver c6xdigio_pnp_driver = {
 	.id_table = c6xdigio_pnp_tbl,
 };
 
-static int c6xdigio_attach(struct comedi_device * dev, struct comedi_devconfig * it)
+static int c6xdigio_attach(struct comedi_device *dev, struct comedi_devconfig *it)
 {
 	int result = 0;
 	unsigned long iobase;
@@ -495,7 +495,7 @@ static int c6xdigio_attach(struct comedi_device * dev, struct comedi_devconfig *
 	return 0;
 }
 
-static int c6xdigio_detach(struct comedi_device * dev)
+static int c6xdigio_detach(struct comedi_device *dev)
 {
 /* board_halt(dev);  may not need this */
 

commit 6a438139a8963839a9b14709286075b2e38cf9e0
Author: Bill Pemberton <wfp5p@virginia.edu>
Date:   Fri Mar 27 11:30:34 2009 -0400

    Staging: comedi: remove C99 comments in c6xdigio.c
    
    Signed-off-by: Bill Pemberton <wfp5p@virginia.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index 2efffb14610d..c8ffddf4add4 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -77,7 +77,7 @@ struct pwmbitstype {
 	unsigned sb4:2;
 };
 union pwmcmdtype {
-	unsigned cmd;		// assuming here that int is 32bit
+	unsigned cmd;		/*  assuming here that int is 32bit */
 	struct pwmbitstype bits;
 };
 struct encbitstype {
@@ -110,7 +110,7 @@ static void C6X_pwmInit(unsigned long baseAddr)
 {
 	int timeout = 0;
 
-//printk("Inside C6X_pwmInit\n");
+/* printk("Inside C6X_pwmInit\n"); */
 
 	WriteByteToHwPort(baseAddr, 0x70);
 	while (((ReadByteFromHwPort(baseAddr + 1) & 0x80) == 0)
@@ -148,7 +148,7 @@ static void C6X_pwmOutput(unsigned long baseAddr, unsigned channel, int value)
 	int timeout = 0;
 	unsigned tmp;
 
-	//printk("Inside C6X_pwmOutput\n");
+	/* printk("Inside C6X_pwmOutput\n"); */
 
 	pwm.cmd = value;
 	if (pwm.cmd > 498)
@@ -158,7 +158,7 @@ static void C6X_pwmOutput(unsigned long baseAddr, unsigned channel, int value)
 
 	if (channel == 0) {
 		ppcmd = 0x28;
-	} else {		// if channel == 1
+	} else {		/*  if channel == 1 */
 		ppcmd = 0x30;
 	}			/* endif */
 
@@ -216,7 +216,7 @@ static int C6X_encInput(unsigned long baseAddr, unsigned channel)
 	int timeout = 0;
 	int tmp;
 
-	//printk("Inside C6X_encInput\n");
+	/* printk("Inside C6X_encInput\n"); */
 
 	enc.value = 0;
 	if (channel == 0) {
@@ -311,7 +311,7 @@ static void C6X_encResetAll(unsigned long baseAddr)
 {
 	unsigned timeout = 0;
 
-//printk("Inside C6X_encResetAll\n");
+/* printk("Inside C6X_encResetAll\n"); */
 
 	WriteByteToHwPort(baseAddr, 0x68);
 	while (((ReadByteFromHwPort(baseAddr + 1) & 0x80) == 0)
@@ -351,7 +351,7 @@ static int c6xdigio_pwmo_insn_write(struct comedi_device * dev,
 	int i;
 	int chan = CR_CHAN(insn->chanspec);
 
-	//  printk("c6xdigio_pwmo_insn_write %x\n", insn->n);
+	/*   printk("c6xdigio_pwmo_insn_write %x\n", insn->n); */
 	for (i = 0; i < insn->n; i++) {
 		C6X_pwmOutput(dev->iobase, chan, data[i]);
 		/*    devpriv->ao_readback[chan] = data[i]; */
@@ -359,32 +359,30 @@ static int c6xdigio_pwmo_insn_write(struct comedi_device * dev,
 	return i;
 }
 
-//static int c6xdigio_ei_init_insn_read(struct comedi_device *dev,
-//                                 struct comedi_subdevice *s,
-//                                 struct comedi_insn *insn,
-//                                 unsigned int *data)
-//{
-//  printk("c6xdigio_ei_init_insn_read %x\n", insn->n);
-//  return insn->n;
-//}
-
-//static int c6xdigio_ei_init_insn_write(struct comedi_device *dev,
-//                                 struct comedi_subdevice *s,
-//                                 struct comedi_insn *insn,
-//                                 unsigned int *data)
-//{
-//  int i;
-//  int chan = CR_CHAN(insn->chanspec);
-//
-//  C6X_encResetAll( dev->iobase );
-//
-//  return insn->n;
-//}
+/* static int c6xdigio_ei_init_insn_read(struct comedi_device *dev, */
+/* struct comedi_subdevice *s, */
+/* struct comedi_insn *insn, */
+/* unsigned int *data) */
+/* { */
+/* printk("c6xdigio_ei_init_insn_read %x\n", insn->n); */
+/* return insn->n; */
+/* } */
+
+/* static int c6xdigio_ei_init_insn_write(struct comedi_device *dev, */
+/* struct comedi_subdevice *s, */
+/* struct comedi_insn *insn, */
+/* unsigned int *data) */
+/* { */
+/* int i; */
+/* int chan = CR_CHAN(insn->chanspec); */
+/*  *//* C6X_encResetAll( dev->iobase ); */
+/*  *//* return insn->n; */
+/* } */
 
 static int c6xdigio_ei_insn_read(struct comedi_device * dev,
 	struct comedi_subdevice * s, struct comedi_insn * insn, unsigned int * data)
 {
-	//  printk("c6xdigio_ei__insn_read %x\n", insn->n);
+	/*   printk("c6xdigio_ei__insn_read %x\n", insn->n); */
 	int n;
 	int chan = CR_CHAN(insn->chanspec);
 
@@ -398,16 +396,16 @@ static int c6xdigio_ei_insn_read(struct comedi_device * dev,
 static void board_init(struct comedi_device * dev)
 {
 
-	//printk("Inside board_init\n");
+	/* printk("Inside board_init\n"); */
 
 	C6X_pwmInit(dev->iobase);
 	C6X_encResetAll(dev->iobase);
 
 }
 
-//static void board_halt(struct comedi_device *dev) {
-//  C6X_pwmInit(dev->iobase);
-//}
+/* static void board_halt(struct comedi_device *dev) { */
+/* C6X_pwmInit(dev->iobase); */
+/* } */
 
 /*
    options[0] - I/O port
@@ -444,11 +442,11 @@ static int c6xdigio_attach(struct comedi_device * dev, struct comedi_devconfig *
 	dev->iobase = iobase;
 	dev->board_name = "c6xdigio";
 
-	result = alloc_subdevices(dev, 2);	// 3 with encoder_init write
+	result = alloc_subdevices(dev, 2);	/*  3 with encoder_init write */
 	if (result < 0)
 		return result;
 
-	// Make sure that PnP ports gets activated
+	/*  Make sure that PnP ports gets activated */
 	pnp_register_driver(&c6xdigio_pnp_driver);
 
 	irq = it->options[1];
@@ -460,14 +458,14 @@ static int c6xdigio_attach(struct comedi_device * dev, struct comedi_devconfig *
 
 	s = dev->subdevices + 0;
 	/* pwm output subdevice */
-	s->type = COMEDI_SUBD_AO;	// Not sure what to put here
+	s->type = COMEDI_SUBD_AO;	/*  Not sure what to put here */
 	s->subdev_flags = SDF_WRITEABLE;
 	s->n_chan = 2;
 	/*      s->trig[0] = c6xdigio_pwmo; */
 	s->insn_read = c6xdigio_pwmo_insn_read;
 	s->insn_write = c6xdigio_pwmo_insn_write;
 	s->maxdata = 500;
-	s->range_table = &range_bipolar10;	// A suitable lie
+	s->range_table = &range_bipolar10;	/*  A suitable lie */
 
 	s = dev->subdevices + 1;
 	/* encoder (counter) subdevice */
@@ -479,19 +477,19 @@ static int c6xdigio_attach(struct comedi_device * dev, struct comedi_devconfig *
 	s->maxdata = 0xffffff;
 	s->range_table = &range_unknown;
 
-	//          s = dev->subdevices + 2;
-	//      /* pwm output subdevice */
-	//      s->type = COMEDI_SUBD_COUNTER;  // Not sure what to put here
-	//      s->subdev_flags = SDF_WRITEABLE;
-	//      s->n_chan = 1;
-	//      /* s->trig[0] = c6xdigio_ei_init; */
-	//      s->insn_read = c6xdigio_ei_init_insn_read;
-	//      s->insn_write = c6xdigio_ei_init_insn_write;
-	//      s->maxdata = 0xFFFF;  // Really just a don't care
-	//      s->range_table = &range_unknown; // Not sure what to put here
-
-	// I will call this init anyway but more than likely the DSP board will not be connect
-	// when device driver is loaded.
+	/*           s = dev->subdevices + 2; */
+	      /* pwm output subdevice */
+	/*       s->type = COMEDI_SUBD_COUNTER;  // Not sure what to put here */
+	/*       s->subdev_flags = SDF_WRITEABLE; */
+	/*       s->n_chan = 1; */
+	/*       s->trig[0] = c6xdigio_ei_init; */
+	/*       s->insn_read = c6xdigio_ei_init_insn_read; */
+	/*       s->insn_write = c6xdigio_ei_init_insn_write; */
+	/*       s->maxdata = 0xFFFF;  // Really just a don't care */
+	/*       s->range_table = &range_unknown; // Not sure what to put here */
+
+	/*  I will call this init anyway but more than likely the DSP board will not be connect */
+	/*  when device driver is loaded. */
 	board_init(dev);
 
 	return 0;
@@ -499,7 +497,7 @@ static int c6xdigio_attach(struct comedi_device * dev, struct comedi_devconfig *
 
 static int c6xdigio_detach(struct comedi_device * dev)
 {
-//  board_halt(dev);  // may not need this
+/* board_halt(dev);  may not need this */
 
 	printk("comedi%d: c6xdigio: remove\n", dev->minor);
 
@@ -508,7 +506,7 @@ static int c6xdigio_detach(struct comedi_device * dev)
 	}
 	if (dev->irq) {
 		free_irq(dev->irq, dev);
-	}			// Not using IRQ so I am not sure if I need this
+	}			/*  Not using IRQ so I am not sure if I need this */
 	pnp_unregister_driver(&c6xdigio_pnp_driver);
 
 	return 0;

commit 0707bb04be89b18ee83b5a997e36cc585f0b988d
Author: Bill Pemberton <wfp5p@virginia.edu>
Date:   Mon Mar 16 22:06:20 2009 -0400

    Staging: comedi: Remove comedi_devconfig typedef
    
    Signed-off-by: Bill Pemberton <wfp5p@virginia.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index 8b10ff927d41..2efffb14610d 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -97,7 +97,7 @@ union encvaluetype {
 
 #define C6XDIGIO_TIME_OUT 20
 
-static int c6xdigio_attach(struct comedi_device * dev, comedi_devconfig * it);
+static int c6xdigio_attach(struct comedi_device * dev, struct comedi_devconfig * it);
 static int c6xdigio_detach(struct comedi_device * dev);
 struct comedi_driver driver_c6xdigio = {
       driver_name:"c6xdigio",
@@ -428,7 +428,7 @@ static struct pnp_driver c6xdigio_pnp_driver = {
 	.id_table = c6xdigio_pnp_tbl,
 };
 
-static int c6xdigio_attach(struct comedi_device * dev, comedi_devconfig * it)
+static int c6xdigio_attach(struct comedi_device * dev, struct comedi_devconfig * it)
 {
 	int result = 0;
 	unsigned long iobase;

commit 90035c0886b256d75bced13b3b3cea5234aff136
Author: Bill Pemberton <wfp5p@virginia.edu>
Date:   Mon Mar 16 22:05:53 2009 -0400

    Staging: comedi: Remove comedi_insn typedef
    
    Signed-off-by: Bill Pemberton <wfp5p@virginia.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index 612a04afb294..8b10ff927d41 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -339,14 +339,14 @@ static void C6X_encResetAll(unsigned long baseAddr)
 }
 
 static int c6xdigio_pwmo_insn_read(struct comedi_device * dev,
-	struct comedi_subdevice * s, comedi_insn * insn, unsigned int * data)
+	struct comedi_subdevice * s, struct comedi_insn * insn, unsigned int * data)
 {
 	printk("c6xdigio_pwmo_insn_read %x\n", insn->n);
 	return insn->n;
 }
 
 static int c6xdigio_pwmo_insn_write(struct comedi_device * dev,
-	struct comedi_subdevice * s, comedi_insn * insn, unsigned int * data)
+	struct comedi_subdevice * s, struct comedi_insn * insn, unsigned int * data)
 {
 	int i;
 	int chan = CR_CHAN(insn->chanspec);
@@ -361,7 +361,7 @@ static int c6xdigio_pwmo_insn_write(struct comedi_device * dev,
 
 //static int c6xdigio_ei_init_insn_read(struct comedi_device *dev,
 //                                 struct comedi_subdevice *s,
-//                                 comedi_insn *insn,
+//                                 struct comedi_insn *insn,
 //                                 unsigned int *data)
 //{
 //  printk("c6xdigio_ei_init_insn_read %x\n", insn->n);
@@ -370,7 +370,7 @@ static int c6xdigio_pwmo_insn_write(struct comedi_device * dev,
 
 //static int c6xdigio_ei_init_insn_write(struct comedi_device *dev,
 //                                 struct comedi_subdevice *s,
-//                                 comedi_insn *insn,
+//                                 struct comedi_insn *insn,
 //                                 unsigned int *data)
 //{
 //  int i;
@@ -382,7 +382,7 @@ static int c6xdigio_pwmo_insn_write(struct comedi_device * dev,
 //}
 
 static int c6xdigio_ei_insn_read(struct comedi_device * dev,
-	struct comedi_subdevice * s, comedi_insn * insn, unsigned int * data)
+	struct comedi_subdevice * s, struct comedi_insn * insn, unsigned int * data)
 {
 	//  printk("c6xdigio_ei__insn_read %x\n", insn->n);
 	int n;

commit 139dfbdfacb02e3ef3df936d2fabd1ad5f14ea88
Author: Bill Pemberton <wfp5p@virginia.edu>
Date:   Mon Mar 16 22:05:25 2009 -0400

    Staging: comedi: Remove comedi_driver typedef
    
    Signed-off-by: Bill Pemberton <wfp5p@virginia.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index afe3550fe8f1..612a04afb294 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -99,7 +99,7 @@ union encvaluetype {
 
 static int c6xdigio_attach(struct comedi_device * dev, comedi_devconfig * it);
 static int c6xdigio_detach(struct comedi_device * dev);
-comedi_driver driver_c6xdigio = {
+struct comedi_driver driver_c6xdigio = {
       driver_name:"c6xdigio",
       module:THIS_MODULE,
       attach:c6xdigio_attach,

commit 34c43922e62708d45e9660eee4b4f1fb7b4bf2c7
Author: Bill Pemberton <wfp5p@virginia.edu>
Date:   Mon Mar 16 22:05:14 2009 -0400

    Staging: comedi: Remove comedi_subdevice typedef
    
    Signed-off-by: Bill Pemberton <wfp5p@virginia.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index bf8562b3023f..afe3550fe8f1 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -339,14 +339,14 @@ static void C6X_encResetAll(unsigned long baseAddr)
 }
 
 static int c6xdigio_pwmo_insn_read(struct comedi_device * dev,
-	comedi_subdevice * s, comedi_insn * insn, unsigned int * data)
+	struct comedi_subdevice * s, comedi_insn * insn, unsigned int * data)
 {
 	printk("c6xdigio_pwmo_insn_read %x\n", insn->n);
 	return insn->n;
 }
 
 static int c6xdigio_pwmo_insn_write(struct comedi_device * dev,
-	comedi_subdevice * s, comedi_insn * insn, unsigned int * data)
+	struct comedi_subdevice * s, comedi_insn * insn, unsigned int * data)
 {
 	int i;
 	int chan = CR_CHAN(insn->chanspec);
@@ -360,7 +360,7 @@ static int c6xdigio_pwmo_insn_write(struct comedi_device * dev,
 }
 
 //static int c6xdigio_ei_init_insn_read(struct comedi_device *dev,
-//                                 comedi_subdevice *s,
+//                                 struct comedi_subdevice *s,
 //                                 comedi_insn *insn,
 //                                 unsigned int *data)
 //{
@@ -369,7 +369,7 @@ static int c6xdigio_pwmo_insn_write(struct comedi_device * dev,
 //}
 
 //static int c6xdigio_ei_init_insn_write(struct comedi_device *dev,
-//                                 comedi_subdevice *s,
+//                                 struct comedi_subdevice *s,
 //                                 comedi_insn *insn,
 //                                 unsigned int *data)
 //{
@@ -382,7 +382,7 @@ static int c6xdigio_pwmo_insn_write(struct comedi_device * dev,
 //}
 
 static int c6xdigio_ei_insn_read(struct comedi_device * dev,
-	comedi_subdevice * s, comedi_insn * insn, unsigned int * data)
+	struct comedi_subdevice * s, comedi_insn * insn, unsigned int * data)
 {
 	//  printk("c6xdigio_ei__insn_read %x\n", insn->n);
 	int n;
@@ -433,7 +433,7 @@ static int c6xdigio_attach(struct comedi_device * dev, comedi_devconfig * it)
 	int result = 0;
 	unsigned long iobase;
 	unsigned int irq;
-	comedi_subdevice *s;
+	struct comedi_subdevice *s;
 
 	iobase = it->options[0];
 	printk("comedi%d: c6xdigio: 0x%04lx\n", dev->minor, iobase);

commit 71b5f4f11971dea972832ad63a994c7e5b45db6b
Author: Bill Pemberton <wfp5p@virginia.edu>
Date:   Mon Mar 16 22:05:08 2009 -0400

    Staging: comedi: Remove comedi_device typedef
    
    Signed-off-by: Bill Pemberton <wfp5p@virginia.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index 5837770ac5b2..bf8562b3023f 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -97,8 +97,8 @@ union encvaluetype {
 
 #define C6XDIGIO_TIME_OUT 20
 
-static int c6xdigio_attach(comedi_device * dev, comedi_devconfig * it);
-static int c6xdigio_detach(comedi_device * dev);
+static int c6xdigio_attach(struct comedi_device * dev, comedi_devconfig * it);
+static int c6xdigio_detach(struct comedi_device * dev);
 comedi_driver driver_c6xdigio = {
       driver_name:"c6xdigio",
       module:THIS_MODULE,
@@ -338,14 +338,14 @@ static void C6X_encResetAll(unsigned long baseAddr)
 	}
 }
 
-static int c6xdigio_pwmo_insn_read(comedi_device * dev,
+static int c6xdigio_pwmo_insn_read(struct comedi_device * dev,
 	comedi_subdevice * s, comedi_insn * insn, unsigned int * data)
 {
 	printk("c6xdigio_pwmo_insn_read %x\n", insn->n);
 	return insn->n;
 }
 
-static int c6xdigio_pwmo_insn_write(comedi_device * dev,
+static int c6xdigio_pwmo_insn_write(struct comedi_device * dev,
 	comedi_subdevice * s, comedi_insn * insn, unsigned int * data)
 {
 	int i;
@@ -359,7 +359,7 @@ static int c6xdigio_pwmo_insn_write(comedi_device * dev,
 	return i;
 }
 
-//static int c6xdigio_ei_init_insn_read(comedi_device *dev,
+//static int c6xdigio_ei_init_insn_read(struct comedi_device *dev,
 //                                 comedi_subdevice *s,
 //                                 comedi_insn *insn,
 //                                 unsigned int *data)
@@ -368,7 +368,7 @@ static int c6xdigio_pwmo_insn_write(comedi_device * dev,
 //  return insn->n;
 //}
 
-//static int c6xdigio_ei_init_insn_write(comedi_device *dev,
+//static int c6xdigio_ei_init_insn_write(struct comedi_device *dev,
 //                                 comedi_subdevice *s,
 //                                 comedi_insn *insn,
 //                                 unsigned int *data)
@@ -381,7 +381,7 @@ static int c6xdigio_pwmo_insn_write(comedi_device * dev,
 //  return insn->n;
 //}
 
-static int c6xdigio_ei_insn_read(comedi_device * dev,
+static int c6xdigio_ei_insn_read(struct comedi_device * dev,
 	comedi_subdevice * s, comedi_insn * insn, unsigned int * data)
 {
 	//  printk("c6xdigio_ei__insn_read %x\n", insn->n);
@@ -395,7 +395,7 @@ static int c6xdigio_ei_insn_read(comedi_device * dev,
 	return n;
 }
 
-static void board_init(comedi_device * dev)
+static void board_init(struct comedi_device * dev)
 {
 
 	//printk("Inside board_init\n");
@@ -405,7 +405,7 @@ static void board_init(comedi_device * dev)
 
 }
 
-//static void board_halt(comedi_device *dev) {
+//static void board_halt(struct comedi_device *dev) {
 //  C6X_pwmInit(dev->iobase);
 //}
 
@@ -428,7 +428,7 @@ static struct pnp_driver c6xdigio_pnp_driver = {
 	.id_table = c6xdigio_pnp_tbl,
 };
 
-static int c6xdigio_attach(comedi_device * dev, comedi_devconfig * it)
+static int c6xdigio_attach(struct comedi_device * dev, comedi_devconfig * it)
 {
 	int result = 0;
 	unsigned long iobase;
@@ -497,7 +497,7 @@ static int c6xdigio_attach(comedi_device * dev, comedi_devconfig * it)
 	return 0;
 }
 
-static int c6xdigio_detach(comedi_device * dev)
+static int c6xdigio_detach(struct comedi_device * dev)
 {
 //  board_halt(dev);  // may not need this
 

commit 790c55415aa31f4c732729f94d2c3a54f7d3bfc2
Author: Bill Pemberton <wfp5p@virginia.edu>
Date:   Mon Mar 16 22:05:02 2009 -0400

    Staging: comedi: Remove lsampl_t and sampl_t typedefs
    
    Signed-off-by: Bill Pemberton <wfp5p@virginia.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
index 1bf1375cb2c7..5837770ac5b2 100644
--- a/drivers/staging/comedi/drivers/c6xdigio.c
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -339,14 +339,14 @@ static void C6X_encResetAll(unsigned long baseAddr)
 }
 
 static int c6xdigio_pwmo_insn_read(comedi_device * dev,
-	comedi_subdevice * s, comedi_insn * insn, lsampl_t * data)
+	comedi_subdevice * s, comedi_insn * insn, unsigned int * data)
 {
 	printk("c6xdigio_pwmo_insn_read %x\n", insn->n);
 	return insn->n;
 }
 
 static int c6xdigio_pwmo_insn_write(comedi_device * dev,
-	comedi_subdevice * s, comedi_insn * insn, lsampl_t * data)
+	comedi_subdevice * s, comedi_insn * insn, unsigned int * data)
 {
 	int i;
 	int chan = CR_CHAN(insn->chanspec);
@@ -362,7 +362,7 @@ static int c6xdigio_pwmo_insn_write(comedi_device * dev,
 //static int c6xdigio_ei_init_insn_read(comedi_device *dev,
 //                                 comedi_subdevice *s,
 //                                 comedi_insn *insn,
-//                                 lsampl_t *data)
+//                                 unsigned int *data)
 //{
 //  printk("c6xdigio_ei_init_insn_read %x\n", insn->n);
 //  return insn->n;
@@ -371,7 +371,7 @@ static int c6xdigio_pwmo_insn_write(comedi_device * dev,
 //static int c6xdigio_ei_init_insn_write(comedi_device *dev,
 //                                 comedi_subdevice *s,
 //                                 comedi_insn *insn,
-//                                 lsampl_t *data)
+//                                 unsigned int *data)
 //{
 //  int i;
 //  int chan = CR_CHAN(insn->chanspec);
@@ -382,7 +382,7 @@ static int c6xdigio_pwmo_insn_write(comedi_device * dev,
 //}
 
 static int c6xdigio_ei_insn_read(comedi_device * dev,
-	comedi_subdevice * s, comedi_insn * insn, lsampl_t * data)
+	comedi_subdevice * s, comedi_insn * insn, unsigned int * data)
 {
 	//  printk("c6xdigio_ei__insn_read %x\n", insn->n);
 	int n;

commit 2c89e159cd2f386285e9522d6476dd7e801bee22
Author: Greg Kroah-Hartman <gregkh@suse.de>
Date:   Thu Feb 19 10:20:28 2009 -0800

    Staging: comedi: add c6xdigio driver
    
    Driver for Mechatronic Systems Inc. C6x_DIGIO DSP daughter card
    
    Written by Dan Block, email address unknown
    
    Cc: David Schleef <ds@schleef.org>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Cc: Frank Mori Hess <fmhess@users.sourceforge.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/staging/comedi/drivers/c6xdigio.c b/drivers/staging/comedi/drivers/c6xdigio.c
new file mode 100644
index 000000000000..1bf1375cb2c7
--- /dev/null
+++ b/drivers/staging/comedi/drivers/c6xdigio.c
@@ -0,0 +1,517 @@
+/*
+   comedi/drivers/c6xdigio.c
+
+   Hardware driver for Mechatronic Systems Inc. C6x_DIGIO DSP daughter card.
+   (http://robot0.ge.uiuc.edu/~spong/mecha/)
+
+   COMEDI - Linux Control and Measurement Device Interface
+   Copyright (C) 1999 Dan Block
+
+   This program is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 2 of the License, or
+   (at your option) any later version.
+
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+
+ */
+/*
+Driver: c6xdigio
+Description: Mechatronic Systems Inc. C6x_DIGIO DSP daughter card
+Author: Dan Block
+Status: unknown
+Devices: [Mechatronic Systems Inc.] C6x_DIGIO DSP daughter card (c6xdigio)
+Updated: Sun Nov 20 20:18:34 EST 2005
+
+This driver will not work with a 2.4 kernel.
+http://robot0.ge.uiuc.edu/~spong/mecha/
+
+*/
+
+#include <linux/kernel.h>
+#include <linux/module.h>
+#include <linux/sched.h>
+#include <linux/mm.h>
+#include <linux/errno.h>
+#include <linux/ioport.h>
+#include <linux/delay.h>
+#include <linux/interrupt.h>
+#include <linux/timex.h>
+#include <linux/timer.h>
+#include <asm/io.h>
+#include <linux/pnp.h>
+
+#include "../comedidev.h"
+
+static u8 ReadByteFromHwPort(unsigned long addr)
+{
+	u8 result = inb(addr);
+	return result;
+}
+
+static void WriteByteToHwPort(unsigned long addr, u8 val)
+{
+	outb_p(val, addr);
+}
+
+#define C6XDIGIO_SIZE 3
+
+/*
+ * port offsets
+ */
+#define C6XDIGIO_PARALLEL_DATA 0
+#define C6XDIGIO_PARALLEL_STATUS 1
+#define C6XDIGIO_PARALLEL_CONTROL 2
+struct pwmbitstype {
+	unsigned sb0:2;
+	unsigned sb1:2;
+	unsigned sb2:2;
+	unsigned sb3:2;
+	unsigned sb4:2;
+};
+union pwmcmdtype {
+	unsigned cmd;		// assuming here that int is 32bit
+	struct pwmbitstype bits;
+};
+struct encbitstype {
+	unsigned sb0:3;
+	unsigned sb1:3;
+	unsigned sb2:3;
+	unsigned sb3:3;
+	unsigned sb4:3;
+	unsigned sb5:3;
+	unsigned sb6:3;
+	unsigned sb7:3;
+};
+union encvaluetype {
+	unsigned value;
+	struct encbitstype bits;
+};
+
+#define C6XDIGIO_TIME_OUT 20
+
+static int c6xdigio_attach(comedi_device * dev, comedi_devconfig * it);
+static int c6xdigio_detach(comedi_device * dev);
+comedi_driver driver_c6xdigio = {
+      driver_name:"c6xdigio",
+      module:THIS_MODULE,
+      attach:c6xdigio_attach,
+      detach:c6xdigio_detach,
+};
+
+static void C6X_pwmInit(unsigned long baseAddr)
+{
+	int timeout = 0;
+
+//printk("Inside C6X_pwmInit\n");
+
+	WriteByteToHwPort(baseAddr, 0x70);
+	while (((ReadByteFromHwPort(baseAddr + 1) & 0x80) == 0)
+		&& (timeout < C6XDIGIO_TIME_OUT)) {
+		timeout++;
+	}
+
+	WriteByteToHwPort(baseAddr, 0x74);
+	timeout = 0;
+	while (((ReadByteFromHwPort(baseAddr + 1) & 0x80) == 0x80)
+		&& (timeout < C6XDIGIO_TIME_OUT)) {
+		timeout++;
+	}
+
+	WriteByteToHwPort(baseAddr, 0x70);
+	timeout = 0;
+	while (((ReadByteFromHwPort(baseAddr + 1) & 0x80) == 0x0)
+		&& (timeout < C6XDIGIO_TIME_OUT)) {
+		timeout++;
+	}
+
+	WriteByteToHwPort(baseAddr, 0x0);
+	timeout = 0;
+	while (((ReadByteFromHwPort(baseAddr + 1) & 0x80) == 0x80)
+		&& (timeout < C6XDIGIO_TIME_OUT)) {
+		timeout++;
+	}
+
+}
+
+static void C6X_pwmOutput(unsigned long baseAddr, unsigned channel, int value)
+{
+	unsigned ppcmd;
+	union pwmcmdtype pwm;
+	int timeout = 0;
+	unsigned tmp;
+
+	//printk("Inside C6X_pwmOutput\n");
+
+	pwm.cmd = value;
+	if (pwm.cmd > 498)
+		pwm.cmd = 498;
+	if (pwm.cmd < 2)
+		pwm.cmd = 2;
+
+	if (channel == 0) {
+		ppcmd = 0x28;
+	} else {		// if channel == 1
+		ppcmd = 0x30;
+	}			/* endif */
+
+	WriteByteToHwPort(baseAddr, ppcmd + pwm.bits.sb0);
+	tmp = ReadByteFromHwPort(baseAddr + 1);
+	while (((tmp & 0x80) == 0) && (timeout < C6XDIGIO_TIME_OUT)) {
+		tmp = ReadByteFromHwPort(baseAddr + 1);
+		timeout++;
+	}
+
+	WriteByteToHwPort(baseAddr, ppcmd + pwm.bits.sb1 + 0x4);
+	timeout = 0;
+	tmp = ReadByteFromHwPort(baseAddr + 1);
+	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
+		tmp = ReadByteFromHwPort(baseAddr + 1);
+		timeout++;
+	}
+
+	WriteByteToHwPort(baseAddr, ppcmd + pwm.bits.sb2);
+	tmp = ReadByteFromHwPort(baseAddr + 1);
+	while (((tmp & 0x80) == 0) && (timeout < C6XDIGIO_TIME_OUT)) {
+		tmp = ReadByteFromHwPort(baseAddr + 1);
+		timeout++;
+	}
+
+	WriteByteToHwPort(baseAddr, ppcmd + pwm.bits.sb3 + 0x4);
+	timeout = 0;
+	tmp = ReadByteFromHwPort(baseAddr + 1);
+	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
+		tmp = ReadByteFromHwPort(baseAddr + 1);
+		timeout++;
+	}
+
+	WriteByteToHwPort(baseAddr, ppcmd + pwm.bits.sb4);
+	tmp = ReadByteFromHwPort(baseAddr + 1);
+	while (((tmp & 0x80) == 0) && (timeout < C6XDIGIO_TIME_OUT)) {
+		tmp = ReadByteFromHwPort(baseAddr + 1);
+		timeout++;
+	}
+
+	WriteByteToHwPort(baseAddr, 0x0);
+	timeout = 0;
+	tmp = ReadByteFromHwPort(baseAddr + 1);
+	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
+		tmp = ReadByteFromHwPort(baseAddr + 1);
+		timeout++;
+	}
+
+}
+
+static int C6X_encInput(unsigned long baseAddr, unsigned channel)
+{
+	unsigned ppcmd;
+	union encvaluetype enc;
+	int timeout = 0;
+	int tmp;
+
+	//printk("Inside C6X_encInput\n");
+
+	enc.value = 0;
+	if (channel == 0) {
+		ppcmd = 0x48;
+	} else {
+		ppcmd = 0x50;
+	}
+	WriteByteToHwPort(baseAddr, ppcmd);
+	tmp = ReadByteFromHwPort(baseAddr + 1);
+	while (((tmp & 0x80) == 0) && (timeout < C6XDIGIO_TIME_OUT)) {
+		tmp = ReadByteFromHwPort(baseAddr + 1);
+		timeout++;
+	}
+
+	enc.bits.sb0 = ((ReadByteFromHwPort(baseAddr + 1) >> 3) & 0x7);
+	WriteByteToHwPort(baseAddr, ppcmd + 0x4);
+	timeout = 0;
+	tmp = ReadByteFromHwPort(baseAddr + 1);
+	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
+		tmp = ReadByteFromHwPort(baseAddr + 1);
+		timeout++;
+	}
+	enc.bits.sb1 = ((ReadByteFromHwPort(baseAddr + 1) >> 3) & 0x7);
+	WriteByteToHwPort(baseAddr, ppcmd);
+	timeout = 0;
+	tmp = ReadByteFromHwPort(baseAddr + 1);
+	while (((tmp & 0x80) == 0) && (timeout < C6XDIGIO_TIME_OUT)) {
+		tmp = ReadByteFromHwPort(baseAddr + 1);
+		timeout++;
+	}
+	enc.bits.sb2 = ((ReadByteFromHwPort(baseAddr + 1) >> 3) & 0x7);
+	WriteByteToHwPort(baseAddr, ppcmd + 0x4);
+	timeout = 0;
+	tmp = ReadByteFromHwPort(baseAddr + 1);
+	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
+		tmp = ReadByteFromHwPort(baseAddr + 1);
+		timeout++;
+	}
+	enc.bits.sb3 = ((ReadByteFromHwPort(baseAddr + 1) >> 3) & 0x7);
+	WriteByteToHwPort(baseAddr, ppcmd);
+	timeout = 0;
+	tmp = ReadByteFromHwPort(baseAddr + 1);
+	while (((tmp & 0x80) == 0) && (timeout < C6XDIGIO_TIME_OUT)) {
+		tmp = ReadByteFromHwPort(baseAddr + 1);
+		timeout++;
+	}
+	enc.bits.sb4 = ((ReadByteFromHwPort(baseAddr + 1) >> 3) & 0x7);
+	WriteByteToHwPort(baseAddr, ppcmd + 0x4);
+	timeout = 0;
+	tmp = ReadByteFromHwPort(baseAddr + 1);
+	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
+		tmp = ReadByteFromHwPort(baseAddr + 1);
+		timeout++;
+	}
+	enc.bits.sb5 = ((ReadByteFromHwPort(baseAddr + 1) >> 3) & 0x7);
+	WriteByteToHwPort(baseAddr, ppcmd);
+	timeout = 0;
+	tmp = ReadByteFromHwPort(baseAddr + 1);
+	while (((tmp & 0x80) == 0x0) && (timeout < C6XDIGIO_TIME_OUT)) {
+		tmp = ReadByteFromHwPort(baseAddr + 1);
+		timeout++;
+	}
+	enc.bits.sb6 = ((ReadByteFromHwPort(baseAddr + 1) >> 3) & 0x7);
+	WriteByteToHwPort(baseAddr, ppcmd + 0x4);
+	timeout = 0;
+	tmp = ReadByteFromHwPort(baseAddr + 1);
+	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
+		tmp = ReadByteFromHwPort(baseAddr + 1);
+		timeout++;
+	}
+	enc.bits.sb7 = ((ReadByteFromHwPort(baseAddr + 1) >> 3) & 0x7);
+	WriteByteToHwPort(baseAddr, ppcmd);
+	timeout = 0;
+	tmp = ReadByteFromHwPort(baseAddr + 1);
+	while (((tmp & 0x80) == 0x0) && (timeout < C6XDIGIO_TIME_OUT)) {
+		tmp = ReadByteFromHwPort(baseAddr + 1);
+		timeout++;
+	}
+
+	WriteByteToHwPort(baseAddr, 0x0);
+	timeout = 0;
+	tmp = ReadByteFromHwPort(baseAddr + 1);
+	while (((tmp & 0x80) == 0x80) && (timeout < C6XDIGIO_TIME_OUT)) {
+		tmp = ReadByteFromHwPort(baseAddr + 1);
+		timeout++;
+	}
+
+	return (enc.value ^ 0x800000);
+}
+
+static void C6X_encResetAll(unsigned long baseAddr)
+{
+	unsigned timeout = 0;
+
+//printk("Inside C6X_encResetAll\n");
+
+	WriteByteToHwPort(baseAddr, 0x68);
+	while (((ReadByteFromHwPort(baseAddr + 1) & 0x80) == 0)
+		&& (timeout < C6XDIGIO_TIME_OUT)) {
+		timeout++;
+	}
+	WriteByteToHwPort(baseAddr, 0x6C);
+	timeout = 0;
+	while (((ReadByteFromHwPort(baseAddr + 1) & 0x80) == 0x80)
+		&& (timeout < C6XDIGIO_TIME_OUT)) {
+		timeout++;
+	}
+	WriteByteToHwPort(baseAddr, 0x68);
+	timeout = 0;
+	while (((ReadByteFromHwPort(baseAddr + 1) & 0x80) == 0x0)
+		&& (timeout < C6XDIGIO_TIME_OUT)) {
+		timeout++;
+	}
+	WriteByteToHwPort(baseAddr, 0x0);
+	timeout = 0;
+	while (((ReadByteFromHwPort(baseAddr + 1) & 0x80) == 0x80)
+		&& (timeout < C6XDIGIO_TIME_OUT)) {
+		timeout++;
+	}
+}
+
+static int c6xdigio_pwmo_insn_read(comedi_device * dev,
+	comedi_subdevice * s, comedi_insn * insn, lsampl_t * data)
+{
+	printk("c6xdigio_pwmo_insn_read %x\n", insn->n);
+	return insn->n;
+}
+
+static int c6xdigio_pwmo_insn_write(comedi_device * dev,
+	comedi_subdevice * s, comedi_insn * insn, lsampl_t * data)
+{
+	int i;
+	int chan = CR_CHAN(insn->chanspec);
+
+	//  printk("c6xdigio_pwmo_insn_write %x\n", insn->n);
+	for (i = 0; i < insn->n; i++) {
+		C6X_pwmOutput(dev->iobase, chan, data[i]);
+		/*    devpriv->ao_readback[chan] = data[i]; */
+	}
+	return i;
+}
+
+//static int c6xdigio_ei_init_insn_read(comedi_device *dev,
+//                                 comedi_subdevice *s,
+//                                 comedi_insn *insn,
+//                                 lsampl_t *data)
+//{
+//  printk("c6xdigio_ei_init_insn_read %x\n", insn->n);
+//  return insn->n;
+//}
+
+//static int c6xdigio_ei_init_insn_write(comedi_device *dev,
+//                                 comedi_subdevice *s,
+//                                 comedi_insn *insn,
+//                                 lsampl_t *data)
+//{
+//  int i;
+//  int chan = CR_CHAN(insn->chanspec);
+//
+//  C6X_encResetAll( dev->iobase );
+//
+//  return insn->n;
+//}
+
+static int c6xdigio_ei_insn_read(comedi_device * dev,
+	comedi_subdevice * s, comedi_insn * insn, lsampl_t * data)
+{
+	//  printk("c6xdigio_ei__insn_read %x\n", insn->n);
+	int n;
+	int chan = CR_CHAN(insn->chanspec);
+
+	for (n = 0; n < insn->n; n++) {
+		data[n] = (C6X_encInput(dev->iobase, chan) & 0xffffff);
+	}
+
+	return n;
+}
+
+static void board_init(comedi_device * dev)
+{
+
+	//printk("Inside board_init\n");
+
+	C6X_pwmInit(dev->iobase);
+	C6X_encResetAll(dev->iobase);
+
+}
+
+//static void board_halt(comedi_device *dev) {
+//  C6X_pwmInit(dev->iobase);
+//}
+
+/*
+   options[0] - I/O port
+   options[1] - irq
+   options[2] - number of encoder chips installed
+ */
+
+static const struct pnp_device_id c6xdigio_pnp_tbl[] = {
+	/* Standard LPT Printer Port */
+	{.id = "PNP0400",.driver_data = 0},
+	/* ECP Printer Port */
+	{.id = "PNP0401",.driver_data = 0},
+	{}
+};
+
+static struct pnp_driver c6xdigio_pnp_driver = {
+	.name = "c6xdigio",
+	.id_table = c6xdigio_pnp_tbl,
+};
+
+static int c6xdigio_attach(comedi_device * dev, comedi_devconfig * it)
+{
+	int result = 0;
+	unsigned long iobase;
+	unsigned int irq;
+	comedi_subdevice *s;
+
+	iobase = it->options[0];
+	printk("comedi%d: c6xdigio: 0x%04lx\n", dev->minor, iobase);
+	if (!request_region(iobase, C6XDIGIO_SIZE, "c6xdigio")) {
+		printk("comedi%d: I/O port conflict\n", dev->minor);
+		return -EIO;
+	}
+	dev->iobase = iobase;
+	dev->board_name = "c6xdigio";
+
+	result = alloc_subdevices(dev, 2);	// 3 with encoder_init write
+	if (result < 0)
+		return result;
+
+	// Make sure that PnP ports gets activated
+	pnp_register_driver(&c6xdigio_pnp_driver);
+
+	irq = it->options[1];
+	if (irq > 0) {
+		printk("comedi%d: irq = %u ignored\n", dev->minor, irq);
+	} else if (irq == 0) {
+		printk("comedi%d: no irq\n", dev->minor);
+	}
+
+	s = dev->subdevices + 0;
+	/* pwm output subdevice */
+	s->type = COMEDI_SUBD_AO;	// Not sure what to put here
+	s->subdev_flags = SDF_WRITEABLE;
+	s->n_chan = 2;
+	/*      s->trig[0] = c6xdigio_pwmo; */
+	s->insn_read = c6xdigio_pwmo_insn_read;
+	s->insn_write = c6xdigio_pwmo_insn_write;
+	s->maxdata = 500;
+	s->range_table = &range_bipolar10;	// A suitable lie
+
+	s = dev->subdevices + 1;
+	/* encoder (counter) subdevice */
+	s->type = COMEDI_SUBD_COUNTER;
+	s->subdev_flags = SDF_READABLE | SDF_LSAMPL;
+	s->n_chan = 2;
+	/* s->trig[0] = c6xdigio_ei; */
+	s->insn_read = c6xdigio_ei_insn_read;
+	s->maxdata = 0xffffff;
+	s->range_table = &range_unknown;
+
+	//          s = dev->subdevices + 2;
+	//      /* pwm output subdevice */
+	//      s->type = COMEDI_SUBD_COUNTER;  // Not sure what to put here
+	//      s->subdev_flags = SDF_WRITEABLE;
+	//      s->n_chan = 1;
+	//      /* s->trig[0] = c6xdigio_ei_init; */
+	//      s->insn_read = c6xdigio_ei_init_insn_read;
+	//      s->insn_write = c6xdigio_ei_init_insn_write;
+	//      s->maxdata = 0xFFFF;  // Really just a don't care
+	//      s->range_table = &range_unknown; // Not sure what to put here
+
+	// I will call this init anyway but more than likely the DSP board will not be connect
+	// when device driver is loaded.
+	board_init(dev);
+
+	return 0;
+}
+
+static int c6xdigio_detach(comedi_device * dev)
+{
+//  board_halt(dev);  // may not need this
+
+	printk("comedi%d: c6xdigio: remove\n", dev->minor);
+
+	if (dev->iobase) {
+		release_region(dev->iobase, C6XDIGIO_SIZE);
+	}
+	if (dev->irq) {
+		free_irq(dev->irq, dev);
+	}			// Not using IRQ so I am not sure if I need this
+	pnp_unregister_driver(&c6xdigio_pnp_driver);
+
+	return 0;
+}
+
+COMEDI_INITCLEANUP(driver_c6xdigio);
