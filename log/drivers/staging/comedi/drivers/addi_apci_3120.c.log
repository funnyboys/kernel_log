commit b69839391d444882d83c85a531da8b4e75a2b2e6
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Nov 7 14:58:44 2017 +0100

    staging: comedi: drivers: Remove redundant license text
    
    Now that the SPDX tag is in all comedi files, that identifies the
    license in a specific and legally-defined manner.  So the extra GPL text
    wording can be removed as it is no longer needed at all.
    
    This is done on a quest to remove the 700+ different ways that files in
    the kernel describe the GPL license text.  And there's unneeded stuff
    like the address (sometimes incorrect) for the FSF which is never
    needed.
    
    No copyright headers or other non-license-description text was removed.
    
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Cc: H Hartley Sweeten <hsweeten@visionengravers.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 8db5ce609eec..d2810fdd5e63 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -10,16 +10,6 @@
  *	Fax: +49(0)7223/9493-92
  *	http://www.addi-data.com
  *	info@addi-data.com
- *
- * This program is free software; you can redistribute it and/or modify it
- * under the terms of the GNU General Public License as published by the
- * Free Software Foundation; either version 2 of the License, or (at your
- * option) any later version.
- *
- * This program is distributed in the hope that it will be useful, but WITHOUT
- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
- * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
- * more details.
  */
 
 #include <linux/module.h>

commit e184e2bed8fc895ce930624524d319289c1f1082
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Nov 7 14:58:43 2017 +0100

    staging: comedi: add SPDX identifiers to all greybus driver files
    
    It's good to have SPDX identifiers in all files to make it easier to
    audit the kernel tree for correct licenses.
    
    Update the drivers/staging/comedi files files with the correct SPDX
    license identifier based on the license text in the file itself.  The
    SPDX identifier is a legally binding shorthand, which can be used
    instead of the full boiler plate text.
    
    This work is based on a script and data from Thomas Gleixner, Philippe
    Ombredanne, and Kate Stewart.
    
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Cc: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Kate Stewart <kstewart@linuxfoundation.org>
    Cc: Philippe Ombredanne <pombredanne@nexb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 3630d75e36e8..8db5ce609eec 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -1,3 +1,4 @@
+// SPDX-License-Identifier: GPL-2.0+
 /*
  * addi_apci_3120.c
  * Copyright (C) 2004,2005  ADDI-DATA GmbH for the source code of this module.

commit 6ed30c8945832246bbb4b84271327aa0f341e1dd
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Fri Oct 9 10:56:34 2015 -0700

    staging: comedi: addi_apci_3120: prefer using the BIT macro
    
    As suggested by checkpatch.pl, use the BIT macro to define the
    register bits.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 651b39319a3f..3630d75e36e8 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -31,33 +31,33 @@
  * PCI BAR 0 register map (devpriv->amcc)
  * see amcc_s5933.h for register and bit defines
  */
-#define APCI3120_FIFO_ADVANCE_ON_BYTE_2		(1 << 29)
+#define APCI3120_FIFO_ADVANCE_ON_BYTE_2		BIT(29)
 
 /*
  * PCI BAR 1 register map (dev->iobase)
  */
 #define APCI3120_AI_FIFO_REG			0x00
 #define APCI3120_CTRL_REG			0x00
-#define APCI3120_CTRL_EXT_TRIG			(1 << 15)
-#define APCI3120_CTRL_GATE(x)			(1 << (12 + (x)))
+#define APCI3120_CTRL_EXT_TRIG			BIT(15)
+#define APCI3120_CTRL_GATE(x)			BIT(12 + (x))
 #define APCI3120_CTRL_PR(x)			(((x) & 0xf) << 8)
 #define APCI3120_CTRL_PA(x)			(((x) & 0xf) << 0)
 #define APCI3120_AI_SOFTTRIG_REG		0x02
 #define APCI3120_STATUS_REG			0x02
-#define APCI3120_STATUS_EOC_INT			(1 << 15)
-#define APCI3120_STATUS_AMCC_INT		(1 << 14)
-#define APCI3120_STATUS_EOS_INT			(1 << 13)
-#define APCI3120_STATUS_TIMER2_INT		(1 << 12)
+#define APCI3120_STATUS_EOC_INT			BIT(15)
+#define APCI3120_STATUS_AMCC_INT		BIT(14)
+#define APCI3120_STATUS_EOS_INT			BIT(13)
+#define APCI3120_STATUS_TIMER2_INT		BIT(12)
 #define APCI3120_STATUS_INT_MASK		(0xf << 12)
 #define APCI3120_STATUS_TO_DI_BITS(x)		(((x) >> 8) & 0xf)
 #define APCI3120_STATUS_TO_VERSION(x)		(((x) >> 4) & 0xf)
-#define APCI3120_STATUS_FIFO_FULL		(1 << 2)
-#define APCI3120_STATUS_FIFO_EMPTY		(1 << 1)
-#define APCI3120_STATUS_DA_READY		(1 << 0)
+#define APCI3120_STATUS_FIFO_FULL		BIT(2)
+#define APCI3120_STATUS_FIFO_EMPTY		BIT(1)
+#define APCI3120_STATUS_DA_READY		BIT(0)
 #define APCI3120_TIMER_REG			0x04
 #define APCI3120_CHANLIST_REG			0x06
 #define APCI3120_CHANLIST_INDEX(x)		(((x) & 0xf) << 8)
-#define APCI3120_CHANLIST_UNIPOLAR		(1 << 7)
+#define APCI3120_CHANLIST_UNIPOLAR		BIT(7)
 #define APCI3120_CHANLIST_GAIN(x)		(((x) & 0x3) << 4)
 #define APCI3120_CHANLIST_MUX(x)		(((x) & 0xf) << 0)
 #define APCI3120_AO_REG(x)			(0x08 + (((x) / 4) * 2))
@@ -74,19 +74,21 @@
 #define APCI3120_CTR0_DO_BITS(x)		((x) << 4)
 #define APCI3120_CTR0_TIMER_SEL(x)		((x) << 0)
 #define APCI3120_MODE_REG			0x0e
-#define APCI3120_MODE_TIMER2_CLK_OSC		(0 << 6)
-#define APCI3120_MODE_TIMER2_CLK_OUT1		(1 << 6)
-#define APCI3120_MODE_TIMER2_CLK_EOC		(2 << 6)
-#define APCI3120_MODE_TIMER2_CLK_EOS		(3 << 6)
-#define APCI3120_MODE_TIMER2_CLK_MASK		(3 << 6)
-#define APCI3120_MODE_TIMER2_AS_TIMER		(0 << 4)
-#define APCI3120_MODE_TIMER2_AS_COUNTER		(1 << 4)
-#define APCI3120_MODE_TIMER2_AS_WDOG		(2 << 4)
-#define APCI3120_MODE_TIMER2_AS_MASK		(3 << 4)  /* sets AS_TIMER */
-#define APCI3120_MODE_SCAN_ENA			(1 << 3)
-#define APCI3120_MODE_TIMER2_IRQ_ENA		(1 << 2)
-#define APCI3120_MODE_EOS_IRQ_ENA		(1 << 1)
-#define APCI3120_MODE_EOC_IRQ_ENA		(1 << 0)
+#define APCI3120_MODE_TIMER2_CLK(x)		(((x) & 0x3) << 6)
+#define APCI3120_MODE_TIMER2_CLK_OSC		APCI3120_MODE_TIMER2_CLK(0)
+#define APCI3120_MODE_TIMER2_CLK_OUT1		APCI3120_MODE_TIMER2_CLK(1)
+#define APCI3120_MODE_TIMER2_CLK_EOC		APCI3120_MODE_TIMER2_CLK(2)
+#define APCI3120_MODE_TIMER2_CLK_EOS		APCI3120_MODE_TIMER2_CLK(3)
+#define APCI3120_MODE_TIMER2_CLK_MASK		APCI3120_MODE_TIMER2_CLK(3)
+#define APCI3120_MODE_TIMER2_AS(x)		(((x) & 0x3) << 4)
+#define APCI3120_MODE_TIMER2_AS_TIMER		APCI3120_MODE_TIMER2_AS(0)
+#define APCI3120_MODE_TIMER2_AS_COUNTER		APCI3120_MODE_TIMER2_AS(1)
+#define APCI3120_MODE_TIMER2_AS_WDOG		APCI3120_MODE_TIMER2_AS(2)
+#define APCI3120_MODE_TIMER2_AS_MASK		APCI3120_MODE_TIMER2_AS(3)
+#define APCI3120_MODE_SCAN_ENA			BIT(3)
+#define APCI3120_MODE_TIMER2_IRQ_ENA		BIT(2)
+#define APCI3120_MODE_EOS_IRQ_ENA		BIT(1)
+#define APCI3120_MODE_EOC_IRQ_ENA		BIT(0)
 
 /*
  * PCI BAR 2 register map (devpriv->addon)
@@ -94,8 +96,8 @@
 #define APCI3120_ADDON_ADDR_REG			0x00
 #define APCI3120_ADDON_DATA_REG			0x02
 #define APCI3120_ADDON_CTRL_REG			0x04
-#define APCI3120_ADDON_CTRL_AMWEN_ENA		(1 << 1)
-#define APCI3120_ADDON_CTRL_A2P_FIFO_ENA	(1 << 0)
+#define APCI3120_ADDON_CTRL_AMWEN_ENA		BIT(1)
+#define APCI3120_ADDON_CTRL_A2P_FIFO_ENA	BIT(0)
 
 /*
  * Board revisions

commit a15adada1ca0f2b853d7876045e0580e831f91b5
Author: Shraddha Barke <shraddha.6596@gmail.com>
Date:   Mon Sep 7 19:58:23 2015 +0530

    Staging: comedi: addi_apci_3120: Remove unnecessary if
    
    Remove the if condition, as the code inside the if condition is
    commented and does not have any FIXME or TODO comment.
    
    Signed-off-by: Shraddha Barke <shraddha.6596@gmail.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 5bfd43d5c889..651b39319a3f 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -502,11 +502,6 @@ static irqreturn_t apci3120_interrupt(int irq, void *d)
 	if (int_amcc & TARGET_ABORT_INT)
 		dev_err(dev->class_dev, "AMCC IRQ - TARGET DMA ABORT!\n");
 
-	if ((status & APCI3120_STATUS_EOC_INT) == 0 &&
-	    (devpriv->mode & APCI3120_MODE_EOC_IRQ_ENA)) {
-		/* nothing to do... EOC mode is not currently used */
-	}
-
 	if ((status & APCI3120_STATUS_EOS_INT) &&
 	    (devpriv->mode & APCI3120_MODE_EOS_IRQ_ENA)) {
 		unsigned short val;

commit 52a79403cb4dd9b5993691733a07e5cb42e3446b
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Thu Jun 18 10:55:00 2015 -0700

    staging: comedi: addi_apci_3120: rename 'this_board' variables
    
    For aesthetics, rename the 'this_board' variables to 'board'. That name
    is more commonly used for the boardinfo pointer in comedi drivers.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 95dc64bfec73..5bfd43d5c889 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -977,18 +977,18 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 				unsigned long context)
 {
 	struct pci_dev *pcidev = comedi_to_pci_dev(dev);
-	const struct apci3120_board *this_board = NULL;
+	const struct apci3120_board *board = NULL;
 	struct apci3120_private *devpriv;
 	struct comedi_subdevice *s;
 	unsigned int status;
 	int ret;
 
 	if (context < ARRAY_SIZE(apci3120_boardtypes))
-		this_board = &apci3120_boardtypes[context];
-	if (!this_board)
+		board = &apci3120_boardtypes[context];
+	if (!board)
 		return -ENODEV;
-	dev->board_ptr = this_board;
-	dev->board_name = this_board->name;
+	dev->board_ptr = board;
+	dev->board_name = board->name;
 
 	devpriv = comedi_alloc_devpriv(dev, sizeof(*devpriv));
 	if (!devpriv)
@@ -1031,7 +1031,7 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 	s->type		= COMEDI_SUBD_AI;
 	s->subdev_flags	= SDF_READABLE | SDF_COMMON | SDF_GROUND | SDF_DIFF;
 	s->n_chan	= 16;
-	s->maxdata	= this_board->ai_is_16bit ? 0xffff : 0x0fff;
+	s->maxdata	= board->ai_is_16bit ? 0xffff : 0x0fff;
 	s->range_table	= &apci3120_ai_range;
 	s->insn_read	= apci3120_ai_insn_read;
 	if (dev->irq) {
@@ -1045,7 +1045,7 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 
 	/* Analog Output subdevice */
 	s = &dev->subdevices[1];
-	if (this_board->has_ao) {
+	if (board->has_ao) {
 		s->type		= COMEDI_SUBD_AO;
 		s->subdev_flags	= SDF_WRITABLE | SDF_GROUND | SDF_COMMON;
 		s->n_chan	= 8;

commit 25e8046478c7755319eea0a77734bdf97139555d
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Fri Mar 27 19:13:54 2015 +0000

    staging: comedi: addi_apci_3120: remove #include "comedi_fc.h"
    
    As preparation for removal of "comedi_fc.h", replace calls to the
    `cfc_check_trigger_...` functions from "comedi_fc.h" with the
    replacement `comedi_check_trigger_...` functions from "../comedidev.h"
    and remove the inclusion of "comedi_fc.h".
    
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Reviewed-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 5822f1fe359a..95dc64bfec73 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -25,7 +25,6 @@
 #include <linux/interrupt.h>
 
 #include "../comedi_pci.h"
-#include "comedi_fc.h"
 #include "amcc_s5933.h"
 
 /*
@@ -611,21 +610,21 @@ static int apci3120_ai_cmdtest(struct comedi_device *dev,
 
 	/* Step 1 : check if triggers are trivially valid */
 
-	err |= cfc_check_trigger_src(&cmd->start_src, TRIG_NOW | TRIG_EXT);
-	err |= cfc_check_trigger_src(&cmd->scan_begin_src,
+	err |= comedi_check_trigger_src(&cmd->start_src, TRIG_NOW | TRIG_EXT);
+	err |= comedi_check_trigger_src(&cmd->scan_begin_src,
 					TRIG_TIMER | TRIG_FOLLOW);
-	err |= cfc_check_trigger_src(&cmd->convert_src, TRIG_TIMER);
-	err |= cfc_check_trigger_src(&cmd->scan_end_src, TRIG_COUNT);
-	err |= cfc_check_trigger_src(&cmd->stop_src, TRIG_COUNT | TRIG_NONE);
+	err |= comedi_check_trigger_src(&cmd->convert_src, TRIG_TIMER);
+	err |= comedi_check_trigger_src(&cmd->scan_end_src, TRIG_COUNT);
+	err |= comedi_check_trigger_src(&cmd->stop_src, TRIG_COUNT | TRIG_NONE);
 
 	if (err)
 		return 1;
 
 	/* Step 2a : make sure trigger sources are unique */
 
-	err |= cfc_check_trigger_is_unique(cmd->start_src);
-	err |= cfc_check_trigger_is_unique(cmd->scan_begin_src);
-	err |= cfc_check_trigger_is_unique(cmd->stop_src);
+	err |= comedi_check_trigger_is_unique(cmd->start_src);
+	err |= comedi_check_trigger_is_unique(cmd->scan_begin_src);
+	err |= comedi_check_trigger_is_unique(cmd->stop_src);
 
 	/* Step 2b : and mutually compatible */
 
@@ -634,21 +633,24 @@ static int apci3120_ai_cmdtest(struct comedi_device *dev,
 
 	/* Step 3: check if arguments are trivially valid */
 
-	err |= cfc_check_trigger_arg_is(&cmd->start_arg, 0);
+	err |= comedi_check_trigger_arg_is(&cmd->start_arg, 0);
 
-	if (cmd->scan_begin_src == TRIG_TIMER)	/* Test Delay timing */
-		err |= cfc_check_trigger_arg_min(&cmd->scan_begin_arg, 100000);
+	if (cmd->scan_begin_src == TRIG_TIMER) {	/* Test Delay timing */
+		err |= comedi_check_trigger_arg_min(&cmd->scan_begin_arg,
+						    100000);
+	}
 
 	/* minimum conversion time per sample is 10us */
-	err |= cfc_check_trigger_arg_min(&cmd->convert_arg, 10000);
+	err |= comedi_check_trigger_arg_min(&cmd->convert_arg, 10000);
 
-	err |= cfc_check_trigger_arg_min(&cmd->chanlist_len, 1);
-	err |= cfc_check_trigger_arg_is(&cmd->scan_end_arg, cmd->chanlist_len);
+	err |= comedi_check_trigger_arg_min(&cmd->chanlist_len, 1);
+	err |= comedi_check_trigger_arg_is(&cmd->scan_end_arg,
+					   cmd->chanlist_len);
 
 	if (cmd->stop_src == TRIG_COUNT)
-		err |= cfc_check_trigger_arg_min(&cmd->stop_arg, 1);
+		err |= comedi_check_trigger_arg_min(&cmd->stop_arg, 1);
 	else	/*  TRIG_NONE */
-		err |= cfc_check_trigger_arg_is(&cmd->stop_arg, 0);
+		err |= comedi_check_trigger_arg_is(&cmd->stop_arg, 0);
 
 	if (err)
 		return 3;
@@ -658,7 +660,7 @@ static int apci3120_ai_cmdtest(struct comedi_device *dev,
 	if (cmd->scan_begin_src == TRIG_TIMER) {
 		/* scan begin must be larger than the scan time */
 		arg = cmd->convert_arg * cmd->scan_end_arg;
-		err |= cfc_check_trigger_arg_min(&cmd->scan_begin_arg, arg);
+		err |= comedi_check_trigger_arg_min(&cmd->scan_begin_arg, arg);
 	}
 
 	if (err)

commit b8c0a0ac0d3276e5c1c3e46865c582285e026e15
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Tue Mar 10 16:10:30 2015 +0000

    staging: comedi: addi_apci_3120: include new "comedi_pci.h" header
    
    Include the new "../comedi_pci.h" header instead of <linux/pci.h> and
    "../comedidev.h", which will now get included indirectly.
    
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Reviewed-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index c65f9407fd06..5822f1fe359a 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -22,10 +22,9 @@
  */
 
 #include <linux/module.h>
-#include <linux/pci.h>
 #include <linux/interrupt.h>
 
-#include "../comedidev.h"
+#include "../comedi_pci.h"
 #include "comedi_fc.h"
 #include "amcc_s5933.h"
 

commit aa11672ef43c05d4ff5580ad41ceae9867e5430d
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Fri Nov 21 10:19:10 2014 -0700

    staging: comedi: drivers: have core hook up default (*insn_read) for readback
    
    Most of the comedi drivers that provide readback for write only subdevices now
    use the comedi core comedi_alloc_subdev_readback() helper to allocate the subdevice
    'reaback' member instead of using some member in their private data. These drivers
    also hook up the (*insn_read) callback to the comedi_readback_insn_read() helper to
    provide the readback.
    
    Have the core automatically hook up the (*insn_read) callback after allocating the
    memory if the driver has not already hooked it up to a private function.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index e9816e7a235d..c65f9407fd06 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -1051,7 +1051,6 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 		s->maxdata	= 0x3fff;
 		s->range_table	= &range_bipolar10;
 		s->insn_write	= apci3120_ao_insn_write;
-		s->insn_read	= comedi_readback_insn_read;
 
 		ret = comedi_alloc_subdev_readback(s);
 		if (ret)

commit 34216792e006d70bcfdf1931e24e4eb2e2af9498
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:55:32 2014 -0700

    staging: comedi: addi_apci_3120: absorb apci3120_ai_reset_fifo()
    
    This function is only called by apci3120_set_chanlist(). Absorb it.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index f00b9ba070b7..e9816e7a235d 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -395,12 +395,6 @@ static void apci3120_exttrig_enable(struct comedi_device *dev, bool enable)
 	outw(devpriv->ctrl, dev->iobase + APCI3120_CTRL_REG);
 }
 
-static void apci3120_ai_reset_fifo(struct comedi_device *dev)
-{
-	/* a dummy read of APCI3120_TIMER_MODE_REG resets the ai FIFO */
-	inw(dev->iobase + APCI3120_TIMER_MODE_REG);
-}
-
 static void apci3120_set_chanlist(struct comedi_device *dev,
 				  struct comedi_subdevice *s,
 				  int n_chan, unsigned int *chanlist)
@@ -424,7 +418,8 @@ static void apci3120_set_chanlist(struct comedi_device *dev,
 		outw(val, dev->iobase + APCI3120_CHANLIST_REG);
 	}
 
-	apci3120_ai_reset_fifo(dev);
+	/* a dummy read of APCI3120_TIMER_MODE_REG resets the ai FIFO */
+	inw(dev->iobase + APCI3120_TIMER_MODE_REG);
 
 	/* set scan length (PR) and scan start (PA) */
 	devpriv->ctrl = APCI3120_CTRL_PR(n_chan - 1) | APCI3120_CTRL_PA(0);

commit c58f9bb622ca06387200a6f9ef77cdc5c531dfb2
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:55:31 2014 -0700

    staging: comedi: addi_apci_3120: enable AI async commands
    
    The async command support should now work. Enable the hook up of the command
    support functions in apci3120_auto_attach().
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index ba96fe5910e1..f00b9ba070b7 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -1038,7 +1038,7 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 	s->maxdata	= this_board->ai_is_16bit ? 0xffff : 0x0fff;
 	s->range_table	= &apci3120_ai_range;
 	s->insn_read	= apci3120_ai_insn_read;
-	if (0 /* dev->irq */) {
+	if (dev->irq) {
 		dev->read_subdev = s;
 		s->subdev_flags	|= SDF_CMD_READ;
 		s->len_chanlist	= s->n_chan;

commit f50205f0478c35d9d6f3cc3e315ccdfcdaba17e4
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:55:30 2014 -0700

    staging: comedi: addi_apci_3120: switch DMA buffers after writing samples
    
    Currently the DMA buffers are switched before writing the current samples to
    the async buffer. This works but when the EOA event happens we end up with an
    outstanding DMA operation in progress that gets terminated by the (*cancel).
    
    Avoid the outstanding DMA operation by switching the DMA buffers after writing
    the samples. The driver will detect the EOA event and not retart the DMA.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index ea53694e0d32..ba96fe5910e1 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -456,17 +456,8 @@ static void apci3120_interrupt_dma(struct comedi_device *dev,
 		async->events |= COMEDI_CB_ERROR;
 		return;
 	}
-	nsamples = comedi_bytes_to_samples(s, nbytes);
-
-	if (devpriv->use_double_buffer) {
-		struct apci3120_dmabuf *next_dmabuf;
-
-		next_dmabuf = &devpriv->dmabuf[!devpriv->cur_dmabuf];
-
-		/* start DMA on next buffer */
-		apci3120_init_dma(dev, next_dmabuf);
-	}
 
+	nsamples = comedi_bytes_to_samples(s, nbytes);
 	if (nsamples) {
 		comedi_buf_write_samples(s, dmabuf->virt, nsamples);
 
@@ -479,10 +470,12 @@ static void apci3120_interrupt_dma(struct comedi_device *dev,
 		return;
 
 	if (devpriv->use_double_buffer) {
-		/* switch dma buffers for next interrupt */
+		/* switch DMA buffers for next interrupt */
 		devpriv->cur_dmabuf = !devpriv->cur_dmabuf;
+		dmabuf = &devpriv->dmabuf[devpriv->cur_dmabuf];
+		apci3120_init_dma(dev, dmabuf);
 	} else {
-		/* restart DMA if is not using double buffering */
+		/* restart DMA if not using double buffering */
 		apci3120_init_dma(dev, dmabuf);
 	}
 }

commit a93a0e9a30e7702229f68e516dc270507159f23b
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:55:29 2014 -0700

    staging: comedi: addi_apci_3120: change params to apci3120_interrupt_dma()
    
    Pass the comedi_device and comedi_subdevice pointers to this function instead
    of the irq number and void pointer.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 9bdd7277caa1..ea53694e0d32 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -435,11 +435,10 @@ static void apci3120_set_chanlist(struct comedi_device *dev,
 		devpriv->mode |= APCI3120_MODE_SCAN_ENA;
 }
 
-static void apci3120_interrupt_dma(int irq, void *d)
+static void apci3120_interrupt_dma(struct comedi_device *dev,
+				   struct comedi_subdevice *s)
 {
-	struct comedi_device *dev = d;
 	struct apci3120_private *devpriv = dev->private;
-	struct comedi_subdevice *s = dev->read_subdev;
 	struct comedi_async *async = s->async;
 	struct comedi_cmd *cmd = &async->cmd;
 	struct apci3120_dmabuf *dmabuf;
@@ -549,7 +548,7 @@ static irqreturn_t apci3120_interrupt(int irq, void *d)
 		outl(AINT_WT_COMPLETE, devpriv->amcc + AMCC_OP_REG_INTCSR);
 
 		/* do some data transfer */
-		apci3120_interrupt_dma(irq, d);
+		apci3120_interrupt_dma(dev, s);
 	}
 
 	if (cmd->stop_src == TRIG_COUNT && async->scans_done >= cmd->stop_arg)

commit cd68e0e2d00501ff7e59c8213bfb9bd31d42c820
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:55:28 2014 -0700

    staging: comedi: addi_apci_3120: move apci3120_interrupt_dma() to driver
    
    Move this function from the included source file to the main driver
    source file.
    
    Remove the now empty included source file.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index fce177bd2db2..9bdd7277caa1 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -435,7 +435,58 @@ static void apci3120_set_chanlist(struct comedi_device *dev,
 		devpriv->mode |= APCI3120_MODE_SCAN_ENA;
 }
 
-#include "addi-data/hwdrv_apci3120.c"
+static void apci3120_interrupt_dma(int irq, void *d)
+{
+	struct comedi_device *dev = d;
+	struct apci3120_private *devpriv = dev->private;
+	struct comedi_subdevice *s = dev->read_subdev;
+	struct comedi_async *async = s->async;
+	struct comedi_cmd *cmd = &async->cmd;
+	struct apci3120_dmabuf *dmabuf;
+	unsigned int nbytes;
+	unsigned int nsamples;
+
+	dmabuf = &devpriv->dmabuf[devpriv->cur_dmabuf];
+
+	nbytes = dmabuf->use_size - inl(devpriv->amcc + AMCC_OP_REG_MWTC);
+
+	if (nbytes < dmabuf->use_size)
+		dev_err(dev->class_dev, "Interrupted DMA transfer!\n");
+	if (nbytes & 1) {
+		dev_err(dev->class_dev, "Odd count of bytes in DMA ring!\n");
+		async->events |= COMEDI_CB_ERROR;
+		return;
+	}
+	nsamples = comedi_bytes_to_samples(s, nbytes);
+
+	if (devpriv->use_double_buffer) {
+		struct apci3120_dmabuf *next_dmabuf;
+
+		next_dmabuf = &devpriv->dmabuf[!devpriv->cur_dmabuf];
+
+		/* start DMA on next buffer */
+		apci3120_init_dma(dev, next_dmabuf);
+	}
+
+	if (nsamples) {
+		comedi_buf_write_samples(s, dmabuf->virt, nsamples);
+
+		if (!(cmd->flags & CMDF_WAKE_EOS))
+			async->events |= COMEDI_CB_EOS;
+	}
+
+	if ((async->events & COMEDI_CB_CANCEL_MASK) ||
+	    (cmd->stop_src == TRIG_COUNT && async->scans_done >= cmd->stop_arg))
+		return;
+
+	if (devpriv->use_double_buffer) {
+		/* switch dma buffers for next interrupt */
+		devpriv->cur_dmabuf = !devpriv->cur_dmabuf;
+	} else {
+		/* restart DMA if is not using double buffering */
+		apci3120_init_dma(dev, dmabuf);
+	}
+}
 
 static irqreturn_t apci3120_interrupt(int irq, void *d)
 {

commit 76e6047088b75b773893ee23d4134ca7dc192c16
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:55:26 2014 -0700

    staging: comedi: addi_apci_3120: move apci3120_interrupt() to driver
    
    Move this function from the included source file to the main driver
    source file.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index fd5306efc021..fce177bd2db2 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -437,6 +437,78 @@ static void apci3120_set_chanlist(struct comedi_device *dev,
 
 #include "addi-data/hwdrv_apci3120.c"
 
+static irqreturn_t apci3120_interrupt(int irq, void *d)
+{
+	struct comedi_device *dev = d;
+	struct apci3120_private *devpriv = dev->private;
+	struct comedi_subdevice *s = dev->read_subdev;
+	struct comedi_async *async = s->async;
+	struct comedi_cmd *cmd = &async->cmd;
+	unsigned int status;
+	unsigned int int_amcc;
+
+	status = inw(dev->iobase + APCI3120_STATUS_REG);
+	int_amcc = inl(devpriv->amcc + AMCC_OP_REG_INTCSR);
+
+	if (!(status & APCI3120_STATUS_INT_MASK) &&
+	    !(int_amcc & ANY_S593X_INT)) {
+		dev_err(dev->class_dev, "IRQ from unknown source\n");
+		return IRQ_NONE;
+	}
+
+	outl(int_amcc | AINT_INT_MASK, devpriv->amcc + AMCC_OP_REG_INTCSR);
+
+	if (devpriv->ctrl & APCI3120_CTRL_EXT_TRIG)
+		apci3120_exttrig_enable(dev, false);
+
+	if (int_amcc & MASTER_ABORT_INT)
+		dev_err(dev->class_dev, "AMCC IRQ - MASTER DMA ABORT!\n");
+	if (int_amcc & TARGET_ABORT_INT)
+		dev_err(dev->class_dev, "AMCC IRQ - TARGET DMA ABORT!\n");
+
+	if ((status & APCI3120_STATUS_EOC_INT) == 0 &&
+	    (devpriv->mode & APCI3120_MODE_EOC_IRQ_ENA)) {
+		/* nothing to do... EOC mode is not currently used */
+	}
+
+	if ((status & APCI3120_STATUS_EOS_INT) &&
+	    (devpriv->mode & APCI3120_MODE_EOS_IRQ_ENA)) {
+		unsigned short val;
+		int i;
+
+		for (i = 0; i < cmd->chanlist_len; i++) {
+			val = inw(dev->iobase + APCI3120_AI_FIFO_REG);
+			comedi_buf_write_samples(s, &val, 1);
+		}
+
+		devpriv->mode |= APCI3120_MODE_EOS_IRQ_ENA;
+		outb(devpriv->mode, dev->iobase + APCI3120_MODE_REG);
+	}
+
+	if (status & APCI3120_STATUS_TIMER2_INT) {
+		/*
+		 * for safety...
+		 * timer2 interrupts are not enabled in the driver
+		 */
+		apci3120_clr_timer2_interrupt(dev);
+	}
+
+	if (status & APCI3120_STATUS_AMCC_INT) {
+		/* AMCC- Clear write complete interrupt (DMA) */
+		outl(AINT_WT_COMPLETE, devpriv->amcc + AMCC_OP_REG_INTCSR);
+
+		/* do some data transfer */
+		apci3120_interrupt_dma(irq, d);
+	}
+
+	if (cmd->stop_src == TRIG_COUNT && async->scans_done >= cmd->stop_arg)
+		async->events |= COMEDI_CB_EOA;
+
+	comedi_handle_events(dev, s);
+
+	return IRQ_HANDLED;
+}
+
 static int apci3120_ai_cmd(struct comedi_device *dev,
 			   struct comedi_subdevice *s)
 {

commit 676caedabd62f23ce345c044de30ca3051d8d41b
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:55:25 2014 -0700

    staging: comedi: addi_apci_3120: move apci3120_cancel() to driver
    
    Move this function from the included source file to the main driver
    source file.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 8fd498d0031a..fd5306efc021 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -560,6 +560,34 @@ static int apci3120_ai_cmdtest(struct comedi_device *dev,
 	return 0;
 }
 
+static int apci3120_cancel(struct comedi_device *dev,
+			   struct comedi_subdevice *s)
+{
+	struct apci3120_private *devpriv = dev->private;
+
+	/* Add-On - disable DMA */
+	outw(0, devpriv->addon + 4);
+
+	/* Add-On - disable bus master */
+	apci3120_addon_write(dev, 0, AMCC_OP_REG_AGCSTS);
+
+	/* AMCC - disable bus master */
+	outl(0, devpriv->amcc + AMCC_OP_REG_MCSR);
+
+	/* disable all counters, ext trigger, and reset scan */
+	devpriv->ctrl = 0;
+	outw(devpriv->ctrl, dev->iobase + APCI3120_CTRL_REG);
+
+	/* DISABLE_ALL_INTERRUPT */
+	devpriv->mode = 0;
+	outb(devpriv->mode, dev->iobase + APCI3120_MODE_REG);
+
+	inw(dev->iobase + APCI3120_STATUS_REG);
+	devpriv->cur_dmabuf = 0;
+
+	return 0;
+}
+
 static int apci3120_ai_eoc(struct comedi_device *dev,
 			   struct comedi_subdevice *s,
 			   struct comedi_insn *insn,

commit 18e3b50367c68fa2cbb7a93d4aa8393fcedcbab3
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:55:23 2014 -0700

    staging: comedi: addi_apci_3120: move apci3120_ai_cmd() to driver
    
    Move this function from the included source file to the main driver
    source file.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index b5ac5b8cf05f..8fd498d0031a 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -437,6 +437,62 @@ static void apci3120_set_chanlist(struct comedi_device *dev,
 
 #include "addi-data/hwdrv_apci3120.c"
 
+static int apci3120_ai_cmd(struct comedi_device *dev,
+			   struct comedi_subdevice *s)
+{
+	struct apci3120_private *devpriv = dev->private;
+	struct comedi_cmd *cmd = &s->async->cmd;
+	unsigned int divisor;
+
+	/* set default mode bits */
+	devpriv->mode = APCI3120_MODE_TIMER2_CLK_OSC |
+			APCI3120_MODE_TIMER2_AS_TIMER;
+
+	/* AMCC- Clear write complete interrupt (DMA) */
+	outl(AINT_WT_COMPLETE, devpriv->amcc + AMCC_OP_REG_INTCSR);
+
+	devpriv->cur_dmabuf = 0;
+
+	/* load chanlist for command scan */
+	apci3120_set_chanlist(dev, s, cmd->chanlist_len, cmd->chanlist);
+
+	if (cmd->start_src == TRIG_EXT)
+		apci3120_exttrig_enable(dev, true);
+
+	if (cmd->scan_begin_src == TRIG_TIMER) {
+		/*
+		 * Timer 1 is used in MODE2 (rate generator) to set the
+		 * start time for each scan.
+		 */
+		divisor = apci3120_ns_to_timer(dev, 1, cmd->scan_begin_arg,
+					       cmd->flags);
+		apci3120_timer_set_mode(dev, 1, APCI3120_TIMER_MODE2);
+		apci3120_timer_write(dev, 1, divisor);
+	}
+
+	/*
+	 * Timer 0 is used in MODE2 (rate generator) to set the conversion
+	 * time for each acquisition.
+	 */
+	divisor = apci3120_ns_to_timer(dev, 0, cmd->convert_arg, cmd->flags);
+	apci3120_timer_set_mode(dev, 0, APCI3120_TIMER_MODE2);
+	apci3120_timer_write(dev, 0, divisor);
+
+	if (devpriv->use_dma)
+		apci3120_setup_dma(dev, s);
+	else
+		devpriv->mode |= APCI3120_MODE_EOS_IRQ_ENA;
+
+	/* set mode to enable acquisition */
+	outb(devpriv->mode, dev->iobase + APCI3120_MODE_REG);
+
+	if (cmd->scan_begin_src == TRIG_TIMER)
+		apci3120_timer_enable(dev, 1, true);
+	apci3120_timer_enable(dev, 0, true);
+
+	return 0;
+}
+
 static int apci3120_ai_cmdtest(struct comedi_device *dev,
 			       struct comedi_subdevice *s,
 			       struct comedi_cmd *cmd)

commit 45062492281d2ce9fba14dc700add6abec3e5726
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:55:22 2014 -0700

    staging: comedi: addi_apci_3120: move apci3120_setup_dma() to driver
    
    Move this function from the included source file to the main driver
    source file.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index d66e91084bf7..b5ac5b8cf05f 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -209,6 +209,57 @@ static void apci3120_init_dma(struct comedi_device *dev,
 	     devpriv->addon + APCI3120_ADDON_CTRL_REG);
 }
 
+static void apci3120_setup_dma(struct comedi_device *dev,
+			       struct comedi_subdevice *s)
+{
+	struct apci3120_private *devpriv = dev->private;
+	struct comedi_cmd *cmd = &s->async->cmd;
+	struct apci3120_dmabuf *dmabuf0 = &devpriv->dmabuf[0];
+	struct apci3120_dmabuf *dmabuf1 = &devpriv->dmabuf[1];
+	unsigned int dmalen0 = dmabuf0->size;
+	unsigned int dmalen1 = dmabuf1->size;
+	unsigned int scan_bytes;
+
+	scan_bytes = comedi_samples_to_bytes(s, cmd->scan_end_arg);
+
+	if (cmd->stop_src == TRIG_COUNT) {
+		/*
+		 * Must we fill full first buffer? And must we fill
+		 * full second buffer when first is once filled?
+		 */
+		if (dmalen0 > (cmd->stop_arg * scan_bytes))
+			dmalen0 = cmd->stop_arg * scan_bytes;
+		else if (dmalen1 > (cmd->stop_arg * scan_bytes - dmalen0))
+			dmalen1 = cmd->stop_arg * scan_bytes - dmalen0;
+	}
+
+	if (cmd->flags & CMDF_WAKE_EOS) {
+		/* don't we want wake up every scan? */
+		if (dmalen0 > scan_bytes) {
+			dmalen0 = scan_bytes;
+			if (cmd->scan_end_arg & 1)
+				dmalen0 += 2;
+		}
+		if (dmalen1 > scan_bytes) {
+			dmalen1 = scan_bytes;
+			if (cmd->scan_end_arg & 1)
+				dmalen1 -= 2;
+			if (dmalen1 < 4)
+				dmalen1 = 4;
+		}
+	} else {
+		/* isn't output buff smaller that our DMA buff? */
+		if (dmalen0 > s->async->prealloc_bufsz)
+			dmalen0 = s->async->prealloc_bufsz;
+		if (dmalen1 > s->async->prealloc_bufsz)
+			dmalen1 = s->async->prealloc_bufsz;
+	}
+	dmabuf0->use_size = dmalen0;
+	dmabuf1->use_size = dmalen1;
+
+	apci3120_init_dma(dev, dmabuf0);
+}
+
 /*
  * There are three timers on the board. They all use the same base
  * clock with a fixed prescaler for each timer. The base clock used

commit ee844c51ef0451ff7646a075710b9646e943f1e7
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:55:21 2014 -0700

    staging: comedi: addi_apci_3120: move apci3120_init_dma() to driver
    
    Move this function from the included source file to the main driver
    source file.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index dab81cbe79da..d66e91084bf7 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -177,6 +177,38 @@ static void apci3120_addon_write(struct comedi_device *dev,
 	outw((val >> 16) & 0xffff, devpriv->addon + APCI3120_ADDON_DATA_REG);
 }
 
+static void apci3120_init_dma(struct comedi_device *dev,
+			      struct apci3120_dmabuf *dmabuf)
+{
+	struct apci3120_private *devpriv = dev->private;
+
+	/* AMCC - enable transfer count and reset A2P FIFO */
+	outl(AGCSTS_TC_ENABLE | AGCSTS_RESET_A2P_FIFO,
+	     devpriv->amcc + AMCC_OP_REG_AGCSTS);
+
+	/* Add-On - enable transfer count and reset A2P FIFO */
+	apci3120_addon_write(dev, AGCSTS_TC_ENABLE | AGCSTS_RESET_A2P_FIFO,
+			     AMCC_OP_REG_AGCSTS);
+
+	/* AMCC - enable transfers and reset A2P flags */
+	outl(RESET_A2P_FLAGS | EN_A2P_TRANSFERS,
+	     devpriv->amcc + AMCC_OP_REG_MCSR);
+
+	/* Add-On - DMA start address */
+	apci3120_addon_write(dev, dmabuf->hw, AMCC_OP_REG_AMWAR);
+
+	/* Add-On - Number of acquisitions */
+	apci3120_addon_write(dev, dmabuf->use_size, AMCC_OP_REG_AMWTC);
+
+	/* AMCC - enable write complete (DMA) and set FIFO advance */
+	outl(APCI3120_FIFO_ADVANCE_ON_BYTE_2 | AINT_WRITE_COMPL,
+	     devpriv->amcc + AMCC_OP_REG_INTCSR);
+
+	/* Add-On - enable DMA */
+	outw(APCI3120_ADDON_CTRL_AMWEN_ENA | APCI3120_ADDON_CTRL_A2P_FIFO_ENA,
+	     devpriv->addon + APCI3120_ADDON_CTRL_REG);
+}
+
 /*
  * There are three timers on the board. They all use the same base
  * clock with a fixed prescaler for each timer. The base clock used

commit 0b7defa70227f7c7f313e0ea4f0eeb88c5de79a3
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:55:20 2014 -0700

    staging: comedi: addi_apci_3120: move apci3120_addon_write() to driver
    
    Move this function from the included source file to the main driver
    source file.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 4f1ec0bc645f..dab81cbe79da 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -163,6 +163,20 @@ struct apci3120_private {
 	unsigned short ctrl;
 };
 
+static void apci3120_addon_write(struct comedi_device *dev,
+				 unsigned int val, unsigned int reg)
+{
+	struct apci3120_private *devpriv = dev->private;
+
+	/* 16-bit interface for AMCC add-on registers */
+
+	outw(reg, devpriv->addon + APCI3120_ADDON_ADDR_REG);
+	outw(val & 0xffff, devpriv->addon + APCI3120_ADDON_DATA_REG);
+
+	outw(reg + 2, devpriv->addon + APCI3120_ADDON_ADDR_REG);
+	outw((val >> 16) & 0xffff, devpriv->addon + APCI3120_ADDON_DATA_REG);
+}
+
 /*
  * There are three timers on the board. They all use the same base
  * clock with a fixed prescaler for each timer. The base clock used

commit 4ba10fc04a0bd461b31cd5032207cb38304d7b63
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:55:19 2014 -0700

    staging: comedi: addi_apci_3120: remove unnecessary include
    
    The <linux/sched.h> header is not needed by this driver. Remove the
    include.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 0591f8b67909..4f1ec0bc645f 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -23,7 +23,6 @@
 
 #include <linux/module.h>
 #include <linux/pci.h>
-#include <linux/sched.h>
 #include <linux/interrupt.h>
 
 #include "../comedidev.h"

commit d8cdd97c8f546fbdb13f9f1dd609b94c5008b53a
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:55:18 2014 -0700

    staging: comedi: addi_apci_3120: add copyright information
    
    Remove the copyright info from the included source file and add it
    to the main driver source file.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index da7da56a42f6..0591f8b67909 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -1,3 +1,26 @@
+/*
+ * addi_apci_3120.c
+ * Copyright (C) 2004,2005  ADDI-DATA GmbH for the source code of this module.
+ *
+ *	ADDI-DATA GmbH
+ *	Dieselstrasse 3
+ *	D-77833 Ottersweier
+ *	Tel: +19(0)7223/9493-0
+ *	Fax: +49(0)7223/9493-92
+ *	http://www.addi-data.com
+ *	info@addi-data.com
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License as published by the
+ * Free Software Foundation; either version 2 of the License, or (at your
+ * option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
+ * more details.
+ */
+
 #include <linux/module.h>
 #include <linux/pci.h>
 #include <linux/sched.h>

commit d32fc427e3b39fca4f14c9783969355c07dfdb51
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:55:17 2014 -0700

    staging: comedi: addi_apci_3120: move AI (*do_cmdtest) to main driver
    
    Move apci3120_ai_cmdtest() from the included source file to the main
    driver source file. Tidy up Step 4 a bit during the move.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 806f756685a8..da7da56a42f6 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -318,6 +318,73 @@ static void apci3120_set_chanlist(struct comedi_device *dev,
 
 #include "addi-data/hwdrv_apci3120.c"
 
+static int apci3120_ai_cmdtest(struct comedi_device *dev,
+			       struct comedi_subdevice *s,
+			       struct comedi_cmd *cmd)
+{
+	unsigned int arg;
+	int err = 0;
+
+	/* Step 1 : check if triggers are trivially valid */
+
+	err |= cfc_check_trigger_src(&cmd->start_src, TRIG_NOW | TRIG_EXT);
+	err |= cfc_check_trigger_src(&cmd->scan_begin_src,
+					TRIG_TIMER | TRIG_FOLLOW);
+	err |= cfc_check_trigger_src(&cmd->convert_src, TRIG_TIMER);
+	err |= cfc_check_trigger_src(&cmd->scan_end_src, TRIG_COUNT);
+	err |= cfc_check_trigger_src(&cmd->stop_src, TRIG_COUNT | TRIG_NONE);
+
+	if (err)
+		return 1;
+
+	/* Step 2a : make sure trigger sources are unique */
+
+	err |= cfc_check_trigger_is_unique(cmd->start_src);
+	err |= cfc_check_trigger_is_unique(cmd->scan_begin_src);
+	err |= cfc_check_trigger_is_unique(cmd->stop_src);
+
+	/* Step 2b : and mutually compatible */
+
+	if (err)
+		return 2;
+
+	/* Step 3: check if arguments are trivially valid */
+
+	err |= cfc_check_trigger_arg_is(&cmd->start_arg, 0);
+
+	if (cmd->scan_begin_src == TRIG_TIMER)	/* Test Delay timing */
+		err |= cfc_check_trigger_arg_min(&cmd->scan_begin_arg, 100000);
+
+	/* minimum conversion time per sample is 10us */
+	err |= cfc_check_trigger_arg_min(&cmd->convert_arg, 10000);
+
+	err |= cfc_check_trigger_arg_min(&cmd->chanlist_len, 1);
+	err |= cfc_check_trigger_arg_is(&cmd->scan_end_arg, cmd->chanlist_len);
+
+	if (cmd->stop_src == TRIG_COUNT)
+		err |= cfc_check_trigger_arg_min(&cmd->stop_arg, 1);
+	else	/*  TRIG_NONE */
+		err |= cfc_check_trigger_arg_is(&cmd->stop_arg, 0);
+
+	if (err)
+		return 3;
+
+	/* Step 4: fix up any arguments */
+
+	if (cmd->scan_begin_src == TRIG_TIMER) {
+		/* scan begin must be larger than the scan time */
+		arg = cmd->convert_arg * cmd->scan_end_arg;
+		err |= cfc_check_trigger_arg_min(&cmd->scan_begin_arg, arg);
+	}
+
+	if (err)
+		return 4;
+
+	/* Step 5: check channel list if it exists */
+
+	return 0;
+}
+
 static int apci3120_ai_eoc(struct comedi_device *dev,
 			   struct comedi_subdevice *s,
 			   struct comedi_insn *insn,

commit 6d31274053716b4cac60a6de7eb40aba8adeb9d5
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:55:15 2014 -0700

    staging: comedi: addi_apci_3120: fix timer (*insn_config)
    
    The timer subdevice in this driver does not follow the comedi API.
    
    Fix the (*insn_config) to correctly arm, disarm, set the mode, and
    get the status of the timer.
    
    Remove the unnecessary, and broken, (*insn_write).
    
    The new (*insn_config) does not enable the interrupt for timer 2.
    Remove the interrupt support code for the timer.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index c67c10fc7d66..806f756685a8 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -139,9 +139,6 @@ struct apci3120_private {
 	unsigned char timer_mode;
 	unsigned char mode;
 	unsigned short ctrl;
-	unsigned char b_Timer2Mode;
-	unsigned char b_Timer2Interrupt;
-	struct task_struct *tsk_Current;
 };
 
 /*
@@ -447,6 +444,83 @@ static int apci3120_do_insn_bits(struct comedi_device *dev,
 	return insn->n;
 }
 
+static int apci3120_timer_insn_config(struct comedi_device *dev,
+				      struct comedi_subdevice *s,
+				      struct comedi_insn *insn,
+				      unsigned int *data)
+{
+	struct apci3120_private *devpriv = dev->private;
+	unsigned int divisor;
+	unsigned int status;
+	unsigned int mode;
+	unsigned int timer_mode;
+
+	switch (data[0]) {
+	case INSN_CONFIG_ARM:
+		apci3120_clr_timer2_interrupt(dev);
+		divisor = apci3120_ns_to_timer(dev, 2, data[1],
+					       CMDF_ROUND_DOWN);
+		apci3120_timer_write(dev, 2, divisor);
+		apci3120_timer_enable(dev, 2, true);
+		break;
+
+	case INSN_CONFIG_DISARM:
+		apci3120_timer_enable(dev, 2, false);
+		apci3120_clr_timer2_interrupt(dev);
+		break;
+
+	case INSN_CONFIG_GET_COUNTER_STATUS:
+		data[1] = 0;
+		data[2] = COMEDI_COUNTER_ARMED | COMEDI_COUNTER_COUNTING |
+			  COMEDI_COUNTER_TERMINAL_COUNT;
+
+		if (devpriv->ctrl & APCI3120_CTRL_GATE(2)) {
+			data[1] |= COMEDI_COUNTER_ARMED;
+			data[1] |= COMEDI_COUNTER_COUNTING;
+		}
+		status = inw(dev->iobase + APCI3120_STATUS_REG);
+		if (status & APCI3120_STATUS_TIMER2_INT) {
+			data[1] &= ~COMEDI_COUNTER_COUNTING;
+			data[1] |= COMEDI_COUNTER_TERMINAL_COUNT;
+		}
+		break;
+
+	case INSN_CONFIG_SET_COUNTER_MODE:
+		switch (data[1]) {
+		case I8254_MODE0:
+			mode = APCI3120_MODE_TIMER2_AS_COUNTER;
+			timer_mode = APCI3120_TIMER_MODE0;
+			break;
+		case I8254_MODE2:
+			mode = APCI3120_MODE_TIMER2_AS_TIMER;
+			timer_mode = APCI3120_TIMER_MODE2;
+			break;
+		case I8254_MODE4:
+			mode = APCI3120_MODE_TIMER2_AS_TIMER;
+			timer_mode = APCI3120_TIMER_MODE4;
+			break;
+		case I8254_MODE5:
+			mode = APCI3120_MODE_TIMER2_AS_WDOG;
+			timer_mode = APCI3120_TIMER_MODE5;
+			break;
+		default:
+			return -EINVAL;
+		}
+		apci3120_timer_enable(dev, 2, false);
+		apci3120_clr_timer2_interrupt(dev);
+		apci3120_timer_set_mode(dev, 2, timer_mode);
+		devpriv->mode &= ~APCI3120_MODE_TIMER2_AS_MASK;
+		devpriv->mode |= mode;
+		outb(devpriv->mode, dev->iobase + APCI3120_MODE_REG);
+		break;
+
+	default:
+		return -EINVAL;
+	}
+
+	return insn->n;
+}
+
 static int apci3120_timer_insn_read(struct comedi_device *dev,
 				    struct comedi_subdevice *s,
 				    struct comedi_insn *insn,
@@ -627,11 +701,10 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 	/* Timer subdevice */
 	s = &dev->subdevices[4];
 	s->type		= COMEDI_SUBD_TIMER;
-	s->subdev_flags	= SDF_WRITABLE | SDF_READABLE;
+	s->subdev_flags	= SDF_READABLE;
 	s->n_chan	= 1;
 	s->maxdata	= 0x00ffffff;
-	s->insn_write	= apci3120_write_insn_timer;
-	s->insn_config	= apci3120_config_insn_timer;
+	s->insn_config	= apci3120_timer_insn_config;
 	s->insn_read	= apci3120_timer_insn_read;
 
 	return 0;

commit 15cf0617c0186c24f8d6ff7fcf2bf505878f351e
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:55:14 2014 -0700

    staging: comedi: addi_apci_3120: fix timer (*insn_read)
    
    The timer subdevice in this driver does not follow the comedi API.
    Fix the (*insn_read) to work correctly.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index ec2077cb68f0..c67c10fc7d66 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -447,6 +447,19 @@ static int apci3120_do_insn_bits(struct comedi_device *dev,
 	return insn->n;
 }
 
+static int apci3120_timer_insn_read(struct comedi_device *dev,
+				    struct comedi_subdevice *s,
+				    struct comedi_insn *insn,
+				    unsigned int *data)
+{
+	int i;
+
+	for (i = 0; i < insn->n; i++)
+		data[i] = apci3120_timer_read(dev, 2);
+
+	return insn->n;
+}
+
 static void apci3120_dma_alloc(struct comedi_device *dev)
 {
 	struct apci3120_private *devpriv = dev->private;
@@ -618,8 +631,8 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 	s->n_chan	= 1;
 	s->maxdata	= 0x00ffffff;
 	s->insn_write	= apci3120_write_insn_timer;
-	s->insn_read	= apci3120_read_insn_timer;
 	s->insn_config	= apci3120_config_insn_timer;
+	s->insn_read	= apci3120_timer_insn_read;
 
 	return 0;
 }

commit dcb5e2c4dfa66aea823e37956ed0389491ed35ab
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:55:13 2014 -0700

    staging: comedi: addi_apci_3120: define the AI software trigger register
    
    Define the offset for the analog input software trigger register.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 322640ee91b5..ec2077cb68f0 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -22,6 +22,7 @@
 #define APCI3120_CTRL_GATE(x)			(1 << (12 + (x)))
 #define APCI3120_CTRL_PR(x)			(((x) & 0xf) << 8)
 #define APCI3120_CTRL_PA(x)			(((x) & 0xf) << 0)
+#define APCI3120_AI_SOFTTRIG_REG		0x02
 #define APCI3120_STATUS_REG			0x02
 #define APCI3120_STATUS_EOC_INT			(1 << 15)
 #define APCI3120_STATUS_AMCC_INT		(1 << 14)

commit ecaf4c41da4ace751f71fbb3df611a6167425b6e
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:55:12 2014 -0700

    staging: comedi: addi_apci_3120: define the AI FIFO register
    
    Define the offset for the analog input FIFO register.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index eec0cdba1206..322640ee91b5 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -16,6 +16,7 @@
 /*
  * PCI BAR 1 register map (dev->iobase)
  */
+#define APCI3120_AI_FIFO_REG			0x00
 #define APCI3120_CTRL_REG			0x00
 #define APCI3120_CTRL_EXT_TRIG			(1 << 15)
 #define APCI3120_CTRL_GATE(x)			(1 << (12 + (x)))
@@ -370,7 +371,7 @@ static int apci3120_ai_insn_read(struct comedi_device *dev,
 		if (ret)
 			return ret;
 
-		data[i] = inw(dev->iobase + 0);
+		data[i] = inw(dev->iobase + APCI3120_AI_FIFO_REG);
 	}
 
 	return insn->n;

commit d895948eb850131f83f18a2bf2d3c5e53486f7d7
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:55:10 2014 -0700

    staging: comedi: addi_apci_3120: rename private data 'ui_DmaActualBuffer'
    
    Rename this CamelCase member of the private data and convert it to
    a bit-field.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index f76884559752..eec0cdba1206 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -131,7 +131,7 @@ struct apci3120_private {
 	unsigned int osc_base;
 	unsigned int use_dma:1;
 	unsigned int use_double_buffer:1;
-	unsigned int ui_DmaActualBuffer;
+	unsigned int cur_dmabuf:1;
 	struct apci3120_dmabuf dmabuf[2];
 	unsigned char do_bits;
 	unsigned char timer_mode;

commit d65d73ff5e2973274cc216fe37adc801c900dd20
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:55:09 2014 -0700

    staging: comedi: addi_apci_3120: rename private data 'b_DmaDoubleBuffer'
    
    Rename this CamelCase member of the private data and convert it to
    a bit-field.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 00caa1059db1..f76884559752 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -130,7 +130,7 @@ struct apci3120_private {
 	unsigned long addon;
 	unsigned int osc_base;
 	unsigned int use_dma:1;
-	unsigned char b_DmaDoubleBuffer;
+	unsigned int use_double_buffer:1;
 	unsigned int ui_DmaActualBuffer;
 	struct apci3120_dmabuf dmabuf[2];
 	unsigned char do_bits;
@@ -469,7 +469,7 @@ static void apci3120_dma_alloc(struct comedi_device *dev)
 		if (i == 0)
 			devpriv->use_dma = 1;
 		if (i == 1)
-			devpriv->b_DmaDoubleBuffer = 1;
+			devpriv->use_double_buffer = 1;
 	}
 }
 

commit e6539bbc17843b37524fbb419344653bd74b5961
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:55:08 2014 -0700

    staging: comedi: addi_apci_3120: rename private data 'us_UseDma'
    
    Rename this CamelCase member of the private data and convert it to
    a bit-field.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 79a96acc8b63..00caa1059db1 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -129,7 +129,7 @@ struct apci3120_private {
 	unsigned long amcc;
 	unsigned long addon;
 	unsigned int osc_base;
-	unsigned short us_UseDma;
+	unsigned int use_dma:1;
 	unsigned char b_DmaDoubleBuffer;
 	unsigned int ui_DmaActualBuffer;
 	struct apci3120_dmabuf dmabuf[2];
@@ -467,7 +467,7 @@ static void apci3120_dma_alloc(struct comedi_device *dev)
 		dmabuf->size = PAGE_SIZE << order;
 
 		if (i == 0)
-			devpriv->us_UseDma = 1;
+			devpriv->use_dma = 1;
 		if (i == 1)
 			devpriv->b_DmaDoubleBuffer = 1;
 	}

commit ca26b42d4f8c5d9be2a4cc2bf66a19ff71ac036e
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:55:07 2014 -0700

    staging: comedi: addi_apci_3120: move apci3120_reset() to driver source
    
    Move this function from the included hwdrv_apci31210.c source file to
    the main driver source file.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 7ad7621e74e0..79a96acc8b63 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -491,6 +491,18 @@ static void apci3120_dma_free(struct comedi_device *dev)
 	}
 }
 
+static void apci3120_reset(struct comedi_device *dev)
+{
+	/* disable all interrupt sources */
+	outb(0, dev->iobase + APCI3120_MODE_REG);
+
+	/* disable all counters, ext trigger, and reset scan */
+	outw(0, dev->iobase + APCI3120_CTRL_REG);
+
+	/* clear interrupt status */
+	inw(dev->iobase + APCI3120_STATUS_REG);
+}
+
 static int apci3120_auto_attach(struct comedi_device *dev,
 				unsigned long context)
 {

commit b7d62cf8123234e2f9eb644fd0be52b48a28075a
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:55:04 2014 -0700

    staging: comedi: addi_apci_3120: move APCI3120_FIFO_ADVANCE_ON_BYTE_2
    
    Move this define to the main driver source and convert it to a bit-shift.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 699ba76c58ae..7ad7621e74e0 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -11,6 +11,7 @@
  * PCI BAR 0 register map (devpriv->amcc)
  * see amcc_s5933.h for register and bit defines
  */
+#define APCI3120_FIFO_ADVANCE_ON_BYTE_2		(1 << 29)
 
 /*
  * PCI BAR 1 register map (dev->iobase)

commit 0c63bd5aeab4b3bbd1755d18399e541bcdcf8474
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:55:03 2014 -0700

    staging: comedi: addi_apci_3120: define the Add-On registers
    
    Define the add-On registers and bits and remove the "magic" numbers in the
    driver.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 3900a90b9608..699ba76c58ae 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -68,6 +68,11 @@
 /*
  * PCI BAR 2 register map (devpriv->addon)
  */
+#define APCI3120_ADDON_ADDR_REG			0x00
+#define APCI3120_ADDON_DATA_REG			0x02
+#define APCI3120_ADDON_CTRL_REG			0x04
+#define APCI3120_ADDON_CTRL_AMWEN_ENA		(1 << 1)
+#define APCI3120_ADDON_CTRL_A2P_FIFO_ENA	(1 << 0)
 
 /*
  * Board revisions

commit 3431ec2ff5e19bd6690072f91b45bef67ace0ccb
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:54:59 2014 -0700

    staging: comedi: addi_apci_3120: remove private data 'b_ExttrigEnable'
    
    This member of the private data is not really needed. The devpriv->ctrl
    value can be checked to determine if the external trigger is enabled.
    Remove the unnecessary member.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index a6ae42fca6c0..3900a90b9608 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -133,7 +133,6 @@ struct apci3120_private {
 	unsigned short ctrl;
 	unsigned char b_Timer2Mode;
 	unsigned char b_Timer2Interrupt;
-	unsigned char b_ExttrigEnable;
 	struct task_struct *tsk_Current;
 };
 

commit b278ea3cefc78bd3b5035b9db0c58ddcc5039de3
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:54:58 2014 -0700

    staging: comedi: addi_apci_3120: remove private data 'b_InterruptMode'
    
    This member of the private data is not really needed. The interrupt mode
    can be determined by checking the devpriv->mode value to see if the
    interrupt is enabled. Remove the unnecessary member.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index ec6623372721..a6ae42fca6c0 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -133,7 +133,6 @@ struct apci3120_private {
 	unsigned short ctrl;
 	unsigned char b_Timer2Mode;
 	unsigned char b_Timer2Interrupt;
-	unsigned char b_InterruptMode;
 	unsigned char b_ExttrigEnable;
 	struct task_struct *tsk_Current;
 };

commit fdeb2f548790074dd7f9c39275b727ad00600af8
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:54:56 2014 -0700

    staging: comedi: addi_apci_3120: enable chanlist scanning if needed
    
    The 'SCAN_ENA' bit in the mode register needs to be set if the chanlist
    has more than 1 channel. Set the bit in apci3120_set_chanlist() if needed.
    The callers write the mode register after setting any additional bits,
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index f258ceb144fb..ec6623372721 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -307,6 +307,10 @@ static void apci3120_set_chanlist(struct comedi_device *dev,
 	/* set scan length (PR) and scan start (PA) */
 	devpriv->ctrl = APCI3120_CTRL_PR(n_chan - 1) | APCI3120_CTRL_PA(0);
 	outw(devpriv->ctrl, dev->iobase + APCI3120_CTRL_REG);
+
+	/* enable chanlist scanning if necessary */
+	if (n_chan > 1)
+		devpriv->mode |= APCI3120_MODE_SCAN_ENA;
 }
 
 #include "addi-data/hwdrv_apci3120.c"

commit 1022f64e7548a3bede7c671c6d52592f05954bd5
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:54:55 2014 -0700

    staging: comedi: addi_apci_3120: set scan length/start after programming chanlist
    
    The APCI-3120 documentation says that the PR/PA bits should be set after the
    chanlist sequence is programmed.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 77499b473bb4..f258ceb144fb 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -286,10 +286,6 @@ static void apci3120_set_chanlist(struct comedi_device *dev,
 	struct apci3120_private *devpriv = dev->private;
 	int i;
 
-	/* set scan length (PR) and scan start (PA) */
-	devpriv->ctrl = APCI3120_CTRL_PR(n_chan - 1) | APCI3120_CTRL_PA(0);
-	outw(devpriv->ctrl, dev->iobase + APCI3120_CTRL_REG);
-
 	/* set chanlist for scan */
 	for (i = 0; i < n_chan; i++) {
 		unsigned int chan = CR_CHAN(chanlist[i]);
@@ -307,6 +303,10 @@ static void apci3120_set_chanlist(struct comedi_device *dev,
 	}
 
 	apci3120_ai_reset_fifo(dev);
+
+	/* set scan length (PR) and scan start (PA) */
+	devpriv->ctrl = APCI3120_CTRL_PR(n_chan - 1) | APCI3120_CTRL_PA(0);
+	outw(devpriv->ctrl, dev->iobase + APCI3120_CTRL_REG);
 }
 
 #include "addi-data/hwdrv_apci3120.c"

commit 15e920fb1581c531f8d139534fa58d964d4e8b45
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:54:54 2014 -0700

    staging: comedi: addi_apci_3120: reset fifo after programming chanlist
    
    The APCI-3120 documentation says that the FIFO should be reset after the
    chanlist sequence is programmed.
    
    Reset the FIFO after programming the chanlist and remove the extra FIFO
    resets in the driver.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 044d2c42bcd5..77499b473bb4 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -305,6 +305,8 @@ static void apci3120_set_chanlist(struct comedi_device *dev,
 
 		outw(val, dev->iobase + APCI3120_CHANLIST_REG);
 	}
+
+	apci3120_ai_reset_fifo(dev);
 }
 
 #include "addi-data/hwdrv_apci3120.c"
@@ -352,8 +354,6 @@ static int apci3120_ai_insn_read(struct comedi_device *dev,
 	/* fixed conversion time of 10 us */
 	divisor = apci3120_ns_to_timer(dev, 0, 10000, CMDF_ROUND_NEAREST);
 
-	apci3120_ai_reset_fifo(dev);
-
 	for (i = 0; i < insn->n; i++) {
 		/* trigger conversion */
 		apci3120_timer_write(dev, 0, divisor);

commit 169f35e82ce6ba0068ecaf3671342a8201c99c32
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:54:45 2014 -0700

    staging: comedi: addi_apci_3120: move apci3120_set_chanlist() to driver source
    
    Move this function from the included hwdrv_apci31210.c source file to the
    main driver source file.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index d40fdf2219a5..044d2c42bcd5 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -279,6 +279,34 @@ static void apci3120_ai_reset_fifo(struct comedi_device *dev)
 	inw(dev->iobase + APCI3120_TIMER_MODE_REG);
 }
 
+static void apci3120_set_chanlist(struct comedi_device *dev,
+				  struct comedi_subdevice *s,
+				  int n_chan, unsigned int *chanlist)
+{
+	struct apci3120_private *devpriv = dev->private;
+	int i;
+
+	/* set scan length (PR) and scan start (PA) */
+	devpriv->ctrl = APCI3120_CTRL_PR(n_chan - 1) | APCI3120_CTRL_PA(0);
+	outw(devpriv->ctrl, dev->iobase + APCI3120_CTRL_REG);
+
+	/* set chanlist for scan */
+	for (i = 0; i < n_chan; i++) {
+		unsigned int chan = CR_CHAN(chanlist[i]);
+		unsigned int range = CR_RANGE(chanlist[i]);
+		unsigned int val;
+
+		val = APCI3120_CHANLIST_MUX(chan) |
+		      APCI3120_CHANLIST_GAIN(range) |
+		      APCI3120_CHANLIST_INDEX(i);
+
+		if (comedi_range_is_unipolar(s, range))
+			val |= APCI3120_CHANLIST_UNIPOLAR;
+
+		outw(val, dev->iobase + APCI3120_CHANLIST_REG);
+	}
+}
+
 #include "addi-data/hwdrv_apci3120.c"
 
 static int apci3120_ai_eoc(struct comedi_device *dev,

commit 0a3e518102b4a252dfcfe7d602d6e99e8c77d230
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:54:44 2014 -0700

    staging: comedi: addi_apci_3120: remove check in apci3120_setup_chan_list()
    
    The n_chan check is not needed. This value will always be >= 1. Remove
    the unnecessary check.
    
    For aesthetics, rename the function and change it's return type to void.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 70363faa99d6..d40fdf2219a5 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -310,8 +310,7 @@ static int apci3120_ai_insn_read(struct comedi_device *dev,
 	outb(devpriv->mode, dev->iobase + APCI3120_MODE_REG);
 
 	/* load chanlist for single channel scan */
-	if (!apci3120_setup_chan_list(dev, s, 1, &insn->chanspec))
-		return -EINVAL;
+	apci3120_set_chanlist(dev, s, 1, &insn->chanspec);
 
 	/*
 	 * Timer 0 is used in MODE4 (software triggered strobe) to set the

commit 6a51cfc62f523c70b000368b32cb46fa0d24f536
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:54:43 2014 -0700

    staging: comedi: addi_apci_3120: move apci3120_ai_insn_read() to driver source
    
    Move this function, and its helper function, from the included hwdrv_apci31210.c
    source file to the main driver source file.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index c17a8408749f..70363faa99d6 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -281,6 +281,66 @@ static void apci3120_ai_reset_fifo(struct comedi_device *dev)
 
 #include "addi-data/hwdrv_apci3120.c"
 
+static int apci3120_ai_eoc(struct comedi_device *dev,
+			   struct comedi_subdevice *s,
+			   struct comedi_insn *insn,
+			   unsigned long context)
+{
+	unsigned int status;
+
+	status = inw(dev->iobase + APCI3120_STATUS_REG);
+	if ((status & APCI3120_STATUS_EOC_INT) == 0)
+		return 0;
+	return -EBUSY;
+}
+
+static int apci3120_ai_insn_read(struct comedi_device *dev,
+				 struct comedi_subdevice *s,
+				 struct comedi_insn *insn,
+				 unsigned int *data)
+{
+	struct apci3120_private *devpriv = dev->private;
+	unsigned int divisor;
+	int ret;
+	int i;
+
+	/* set mode for A/D conversions by software trigger with timer 0 */
+	devpriv->mode = APCI3120_MODE_TIMER2_CLK_OSC |
+			APCI3120_MODE_TIMER2_AS_TIMER;
+	outb(devpriv->mode, dev->iobase + APCI3120_MODE_REG);
+
+	/* load chanlist for single channel scan */
+	if (!apci3120_setup_chan_list(dev, s, 1, &insn->chanspec))
+		return -EINVAL;
+
+	/*
+	 * Timer 0 is used in MODE4 (software triggered strobe) to set the
+	 * conversion time for each acquisition. Each conversion is triggered
+	 * when the divisor is written to the timer, The conversion is done
+	 * when the EOC bit in the status register is '0'.
+	 */
+	apci3120_timer_set_mode(dev, 0, APCI3120_TIMER_MODE4);
+	apci3120_timer_enable(dev, 0, true);
+
+	/* fixed conversion time of 10 us */
+	divisor = apci3120_ns_to_timer(dev, 0, 10000, CMDF_ROUND_NEAREST);
+
+	apci3120_ai_reset_fifo(dev);
+
+	for (i = 0; i < insn->n; i++) {
+		/* trigger conversion */
+		apci3120_timer_write(dev, 0, divisor);
+
+		ret = comedi_timeout(dev, s, insn, apci3120_ai_eoc, 0);
+		if (ret)
+			return ret;
+
+		data[i] = inw(dev->iobase + 0);
+	}
+
+	return insn->n;
+}
+
 static int apci3120_ao_ready(struct comedi_device *dev,
 			     struct comedi_subdevice *s,
 			     struct comedi_insn *insn,

commit 5cf5fa957946a7d25dc4ce25dba9c8a20f8b8def
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:54:42 2014 -0700

    staging: comedi: addi_apci_3120: move apci3120_ao_insn_write() to driver source
    
    Move this function, and its helper function, from the included hwdrv_apci31210.c
    source file to the main driver source file.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 7033b0bd3ddb..c17a8408749f 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -281,6 +281,44 @@ static void apci3120_ai_reset_fifo(struct comedi_device *dev)
 
 #include "addi-data/hwdrv_apci3120.c"
 
+static int apci3120_ao_ready(struct comedi_device *dev,
+			     struct comedi_subdevice *s,
+			     struct comedi_insn *insn,
+			     unsigned long context)
+{
+	unsigned int status;
+
+	status = inw(dev->iobase + APCI3120_STATUS_REG);
+	if (status & APCI3120_STATUS_DA_READY)
+		return 0;
+	return -EBUSY;
+}
+
+static int apci3120_ao_insn_write(struct comedi_device *dev,
+				  struct comedi_subdevice *s,
+				  struct comedi_insn *insn,
+				  unsigned int *data)
+{
+	unsigned int chan = CR_CHAN(insn->chanspec);
+	int i;
+
+	for (i = 0; i < insn->n; i++) {
+		unsigned int val = data[i];
+		int ret;
+
+		ret = comedi_timeout(dev, s, insn, apci3120_ao_ready, 0);
+		if (ret)
+			return ret;
+
+		outw(APCI3120_AO_MUX(chan) | APCI3120_AO_DATA(val),
+		     dev->iobase + APCI3120_AO_REG(chan));
+
+		s->readback[chan] = val;
+	}
+
+	return insn->n;
+}
+
 static int apci3120_di_insn_bits(struct comedi_device *dev,
 				 struct comedi_subdevice *s,
 				 struct comedi_insn *insn,

commit c737b2ce4f964aed8fc7a255a73417b00d742d65
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:54:41 2014 -0700

    staging: comedi: addi_apci_3120: move apci3120_di_insn_bits() to driver source
    
    Move this function from the included hwdrv_apci31210.c source file to the main
    driver source file.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 22d17e2aafbe..7033b0bd3ddb 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -281,6 +281,19 @@ static void apci3120_ai_reset_fifo(struct comedi_device *dev)
 
 #include "addi-data/hwdrv_apci3120.c"
 
+static int apci3120_di_insn_bits(struct comedi_device *dev,
+				 struct comedi_subdevice *s,
+				 struct comedi_insn *insn,
+				 unsigned int *data)
+{
+	unsigned int status;
+
+	status = inw(dev->iobase + APCI3120_STATUS_REG);
+	data[1] = APCI3120_STATUS_TO_DI_BITS(status);
+
+	return insn->n;
+}
+
 static int apci3120_do_insn_bits(struct comedi_device *dev,
 				 struct comedi_subdevice *s,
 				 struct comedi_insn *insn,

commit ae12280db7f219d961df703d5c00dff0328c1623
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:54:40 2014 -0700

    staging: comedi: addi_apci_3120: move apci3120_do_insn_bits() to driver source
    
    Move this function from the included hwdrv_apci31210.c source file to the main
    driver source file.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 98de447d96b7..22d17e2aafbe 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -281,6 +281,24 @@ static void apci3120_ai_reset_fifo(struct comedi_device *dev)
 
 #include "addi-data/hwdrv_apci3120.c"
 
+static int apci3120_do_insn_bits(struct comedi_device *dev,
+				 struct comedi_subdevice *s,
+				 struct comedi_insn *insn,
+				 unsigned int *data)
+{
+	struct apci3120_private *devpriv = dev->private;
+
+	if (comedi_dio_update_state(s, data)) {
+		devpriv->do_bits = s->state;
+		outb(APCI3120_CTR0_DO_BITS(devpriv->do_bits),
+		     dev->iobase + APCI3120_CTR0_REG);
+	}
+
+	data[1] = s->state;
+
+	return insn->n;
+}
+
 static void apci3120_dma_alloc(struct comedi_device *dev)
 {
 	struct apci3120_private *devpriv = dev->private;

commit 196540ee440d054313040925e3ed9daf39b9ec19
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:54:39 2014 -0700

    staging: comedi: addi_apci_3120: remove private data 'ai_running'
    
    This member of the private data was used to determine if the interrupt
    routine was handling data for the (*insn_read) or an async command. Now
    that the (*insn_read) does not use interrupts this member is not needed.
    
    Remove the member and refactor the code.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index c18ee1750237..98de447d96b7 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -133,7 +133,6 @@ struct apci3120_private {
 	unsigned short ctrl;
 	unsigned char b_Timer2Mode;
 	unsigned char b_Timer2Interrupt;
-	unsigned int ai_running:1;
 	unsigned char b_InterruptMode;
 	unsigned char b_ExttrigEnable;
 	struct task_struct *tsk_Current;

commit 3da982374a85455bc16003c95827871d11d5fca1
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:54:38 2014 -0700

    staging: comedi: addi_apci_3120: define status register bits
    
    Define the bits in the status register and use them to clarify the code.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index d47b2e0f624b..c18ee1750237 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -21,7 +21,16 @@
 #define APCI3120_CTRL_PR(x)			(((x) & 0xf) << 8)
 #define APCI3120_CTRL_PA(x)			(((x) & 0xf) << 0)
 #define APCI3120_STATUS_REG			0x02
+#define APCI3120_STATUS_EOC_INT			(1 << 15)
+#define APCI3120_STATUS_AMCC_INT		(1 << 14)
+#define APCI3120_STATUS_EOS_INT			(1 << 13)
+#define APCI3120_STATUS_TIMER2_INT		(1 << 12)
+#define APCI3120_STATUS_INT_MASK		(0xf << 12)
+#define APCI3120_STATUS_TO_DI_BITS(x)		(((x) >> 8) & 0xf)
 #define APCI3120_STATUS_TO_VERSION(x)		(((x) >> 4) & 0xf)
+#define APCI3120_STATUS_FIFO_FULL		(1 << 2)
+#define APCI3120_STATUS_FIFO_EMPTY		(1 << 1)
+#define APCI3120_STATUS_DA_READY		(1 << 0)
 #define APCI3120_TIMER_REG			0x04
 #define APCI3120_CHANLIST_REG			0x06
 #define APCI3120_CHANLIST_INDEX(x)		(((x) & 0xf) << 8)

commit b0a0d0bc58d6e2f052350e3fe5b6c6bed6fad67b
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:54:37 2014 -0700

    staging: comedi: addi_apci_3120: rename APCI3120_RD_STATUS
    
    For aesthetics, rename this define used for the status register offset.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 9ff6580486e7..d47b2e0f624b 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -20,6 +20,7 @@
 #define APCI3120_CTRL_GATE(x)			(1 << (12 + (x)))
 #define APCI3120_CTRL_PR(x)			(((x) & 0xf) << 8)
 #define APCI3120_CTRL_PA(x)			(((x) & 0xf) << 0)
+#define APCI3120_STATUS_REG			0x02
 #define APCI3120_STATUS_TO_VERSION(x)		(((x) >> 4) & 0xf)
 #define APCI3120_TIMER_REG			0x04
 #define APCI3120_CHANLIST_REG			0x06
@@ -360,7 +361,7 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 		}
 	}
 
-	status = inw(dev->iobase + APCI3120_RD_STATUS);
+	status = inw(dev->iobase + APCI3120_STATUS_REG);
 	if (APCI3120_STATUS_TO_VERSION(status) == APCI3120_REVB ||
 	    context == BOARD_APCI3001)
 		devpriv->osc_base = APCI3120_REVB_OSC_BASE;

commit 08595f9da2f65530d1d9d383760dd2864a0208c1
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:54:36 2014 -0700

    staging: comedi: addi_apci_3120: remove private data 'ui_AiChannelList'
    
    This member of the private data is no longer used. Remove it.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 2eb7ab5da7d7..9ff6580486e7 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -113,7 +113,6 @@ struct apci3120_private {
 	unsigned long amcc;
 	unsigned long addon;
 	unsigned int osc_base;
-	unsigned int ui_AiChannelList[32];
 	unsigned short us_UseDma;
 	unsigned char b_DmaDoubleBuffer;
 	unsigned int ui_DmaActualBuffer;

commit 2e8fcfdd057db84979d9c11cad94bb7e3a5d6af7
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:54:35 2014 -0700

    staging: comedi: addi_apci_3120: remove private data 'ui_AiNbrofChannels'
    
    This member of the private data is always the cmd->chanlist_len. Use that
    instead and remove the member.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index dc05b2f616ca..2eb7ab5da7d7 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -113,7 +113,6 @@ struct apci3120_private {
 	unsigned long amcc;
 	unsigned long addon;
 	unsigned int osc_base;
-	unsigned int ui_AiNbrofChannels;
 	unsigned int ui_AiChannelList[32];
 	unsigned short us_UseDma;
 	unsigned char b_DmaDoubleBuffer;

commit 22f75dac46e0691ef03e44d27d21d2b860cc15fe
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:54:32 2014 -0700

    staging: comedi: addi_apci_3120: remove private data 'ui_AiReadData'
    
    This member of the private data was used to return analog input samples that
    were acquired for the (*insn_read) using interrupts. The interrupt support
    code for the (*insn_read) has been removed. Remove this unused member from
    the private data.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 572d545e7492..dc05b2f616ca 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -115,7 +115,6 @@ struct apci3120_private {
 	unsigned int osc_base;
 	unsigned int ui_AiNbrofChannels;
 	unsigned int ui_AiChannelList[32];
-	unsigned int ui_AiReadData[32];
 	unsigned short us_UseDma;
 	unsigned char b_DmaDoubleBuffer;
 	unsigned int ui_DmaActualBuffer;

commit e614d1710803e47549d2189927c3b25de856cfb2
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:54:31 2014 -0700

    staging: comedi: addi_apci_3120: remove apci3120_ai_insn_config()
    
    This function does not follow the comedi API for (*insn_config) functions.
    It's also no long needed. Just remove it.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index e7564ad8e140..572d545e7492 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -381,7 +381,6 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 	s->n_chan	= 16;
 	s->maxdata	= this_board->ai_is_16bit ? 0xffff : 0x0fff;
 	s->range_table	= &apci3120_ai_range;
-	s->insn_config	= apci3120_ai_insn_config;
 	s->insn_read	= apci3120_ai_insn_read;
 	if (0 /* dev->irq */) {
 		dev->read_subdev = s;

commit 7ee779a237ab12b76264e11819af19b03f9c96c4
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:54:30 2014 -0700

    staging: comedi: addi_apci_3120: remove interrupt support from ai (*insn_read)
    
    (*insn_read) functions are supposed to do simple polled reads of a single
    channel. This driver tries to be tricky and allow enabling interrupts in
    the analog input (*insn_config) to allow the (*insn_read) to read samples
    with the end-of-conversion interrupt.
    
    The (*insn_config) doesn't follow the comedi API and this operation mode
    is not part of the API.
    
    Remove the interrupt support from the (*insn_read) as well as the support
    code in the (*insn_config) and interrupt handler.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 13c06cd18456..e7564ad8e140 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -128,7 +128,6 @@ struct apci3120_private {
 	unsigned char b_Timer2Interrupt;
 	unsigned int ai_running:1;
 	unsigned char b_InterruptMode;
-	unsigned char b_EocEosInterrupt;
 	unsigned char b_ExttrigEnable;
 	struct task_struct *tsk_Current;
 };

commit 46ad4793a7c8ae2c347f86427a82c1f04bc80fc6
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:54:29 2014 -0700

    staging: comedi: addi_apci_3120: remove private data 'ui_EocEosConversionTime'
    
    This driver tries to be tricky and allow passing an analog input conversion time
    for the (*insn_read) in the (*insn_config).  The (*insn_config) doesn't follow
    the comedi API and this programmable conversion time is not part of the API for
    (*insn_read) operations.
    
    Remove the member from the private data and use a fixed 10us (10000ns) conversion
    time in the (*insn_read).
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 0f3dabfabfc8..13c06cd18456 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -129,7 +129,6 @@ struct apci3120_private {
 	unsigned int ai_running:1;
 	unsigned char b_InterruptMode;
 	unsigned char b_EocEosInterrupt;
-	unsigned int ui_EocEosConversionTime;
 	unsigned char b_ExttrigEnable;
 	struct task_struct *tsk_Current;
 };

commit aae8f725aac45e01b4708c89a462312f684ae1f4
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:54:27 2014 -0700

    staging: comedi: addi_apci_3120: rename APCI3120_WRITE_MODE_SELECT
    
    For aesthetics, rename this define used for the mode register offset.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 10155e6b322f..0f3dabfabfc8 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -40,6 +40,7 @@
 #define APCI3120_CTR0_REG			0x0d
 #define APCI3120_CTR0_DO_BITS(x)		((x) << 4)
 #define APCI3120_CTR0_TIMER_SEL(x)		((x) << 0)
+#define APCI3120_MODE_REG			0x0e
 #define APCI3120_MODE_TIMER2_CLK_OSC		(0 << 6)
 #define APCI3120_MODE_TIMER2_CLK_OUT1		(1 << 6)
 #define APCI3120_MODE_TIMER2_CLK_EOC		(2 << 6)

commit bd8e69e2b7bc51d5b5c97d3940ea42b3f816fb6b
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:54:26 2014 -0700

    staging: comedi: addi_apci_3120: define the timer 2 clock select bits
    
    For aesthetics, redefine the bits in the mode register used to select the
    clock for timer 2.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index ed51f41cd761..10155e6b322f 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -40,6 +40,11 @@
 #define APCI3120_CTR0_REG			0x0d
 #define APCI3120_CTR0_DO_BITS(x)		((x) << 4)
 #define APCI3120_CTR0_TIMER_SEL(x)		((x) << 0)
+#define APCI3120_MODE_TIMER2_CLK_OSC		(0 << 6)
+#define APCI3120_MODE_TIMER2_CLK_OUT1		(1 << 6)
+#define APCI3120_MODE_TIMER2_CLK_EOC		(2 << 6)
+#define APCI3120_MODE_TIMER2_CLK_EOS		(3 << 6)
+#define APCI3120_MODE_TIMER2_CLK_MASK		(3 << 6)
 #define APCI3120_MODE_TIMER2_AS_TIMER		(0 << 4)
 #define APCI3120_MODE_TIMER2_AS_COUNTER		(1 << 4)
 #define APCI3120_MODE_TIMER2_AS_WDOG		(2 << 4)

commit 7cbc057d85b7da51ca610381a3de77fbafc51311
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:54:25 2014 -0700

    staging: comedi: addi_apci_3120: define the timer 2 operation bits
    
    For aesthetics, redefine the bits in the mode register used to set the
    operation mode of timer 2.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 603bebb7e059..ed51f41cd761 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -40,6 +40,10 @@
 #define APCI3120_CTR0_REG			0x0d
 #define APCI3120_CTR0_DO_BITS(x)		((x) << 4)
 #define APCI3120_CTR0_TIMER_SEL(x)		((x) << 0)
+#define APCI3120_MODE_TIMER2_AS_TIMER		(0 << 4)
+#define APCI3120_MODE_TIMER2_AS_COUNTER		(1 << 4)
+#define APCI3120_MODE_TIMER2_AS_WDOG		(2 << 4)
+#define APCI3120_MODE_TIMER2_AS_MASK		(3 << 4)  /* sets AS_TIMER */
 #define APCI3120_MODE_SCAN_ENA			(1 << 3)
 #define APCI3120_MODE_TIMER2_IRQ_ENA		(1 << 2)
 #define APCI3120_MODE_EOS_IRQ_ENA		(1 << 1)

commit 1869ae026ca030340c954f6de91d05774101a103
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:54:24 2014 -0700

    staging: comedi: addi_apci_3120: define the "enable" bits in the mode register
    
    For aesthetics, redefine the bits in the mode register that enable interrupts
    and scanning.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index e1c0535adb4b..603bebb7e059 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -40,6 +40,10 @@
 #define APCI3120_CTR0_REG			0x0d
 #define APCI3120_CTR0_DO_BITS(x)		((x) << 4)
 #define APCI3120_CTR0_TIMER_SEL(x)		((x) << 0)
+#define APCI3120_MODE_SCAN_ENA			(1 << 3)
+#define APCI3120_MODE_TIMER2_IRQ_ENA		(1 << 2)
+#define APCI3120_MODE_EOS_IRQ_ENA		(1 << 1)
+#define APCI3120_MODE_EOC_IRQ_ENA		(1 << 0)
 
 /*
  * PCI BAR 2 register map (devpriv->addon)

commit 627e83a7e0f5d0141cbc726ec062d2804a6e12a5
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:54:15 2014 -0700

    staging: comedi: addi_apci_3120: rename private data 'b_ModeSelectRegister'
    
    Rename this CamelCase member of the private data and tidy up the mask/set
    of its bits.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 6c7f452a2dae..e1c0535adb4b 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -108,7 +108,7 @@ struct apci3120_private {
 	struct apci3120_dmabuf dmabuf[2];
 	unsigned char do_bits;
 	unsigned char timer_mode;
-	unsigned char b_ModeSelectRegister;
+	unsigned char mode;
 	unsigned short ctrl;
 	unsigned char b_Timer2Mode;
 	unsigned char b_Timer2Interrupt;

commit 6ef680325566e817b12898a43471f318eba41ca0
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:54:12 2014 -0700

    staging: comedi: addi_apci_3120: move ai range table to driver source
    
    Move the analog input comedi_lrange table from the included hwdrv_apci3120.c
    source file to the main driver source file.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 8dfee45a0576..6c7f452a2dae 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -53,6 +53,19 @@
 #define APCI3120_REVA_OSC_BASE			70	/* 70ns = 14.29MHz */
 #define APCI3120_REVB_OSC_BASE			50	/* 50ns = 20MHz */
 
+static const struct comedi_lrange apci3120_ai_range = {
+	8, {
+		BIP_RANGE(10),
+		BIP_RANGE(5),
+		BIP_RANGE(2),
+		BIP_RANGE(1),
+		UNI_RANGE(10),
+		UNI_RANGE(5),
+		UNI_RANGE(2),
+		UNI_RANGE(1)
+	}
+};
+
 enum apci3120_boardid {
 	BOARD_APCI3120,
 	BOARD_APCI3001,
@@ -355,7 +368,7 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 	s->subdev_flags	= SDF_READABLE | SDF_COMMON | SDF_GROUND | SDF_DIFF;
 	s->n_chan	= 16;
 	s->maxdata	= this_board->ai_is_16bit ? 0xffff : 0x0fff;
-	s->range_table	= &range_apci3120_ai;
+	s->range_table	= &apci3120_ai_range;
 	s->insn_config	= apci3120_ai_insn_config;
 	s->insn_read	= apci3120_ai_insn_read;
 	if (0 /* dev->irq */) {

commit d0bb66aa082c23741e85df459f7444f86cd86792
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:54:11 2014 -0700

    staging: comedi: addi_apci_3120: introduce apci3120_ai_reset_fifo()
    
    A dummy read of APCI3120_TIMER_MODE_REG resets the analog input FIFO. Introduce
    a helper function to clarify this.
    
    It's not necessary to do a dummy read of the FIFO (base + 0) before reseting it.
    Remove the unnecessary dummy reads.
    
    The APCI3120_TIMER_MODE_REG is a 16-bit register. This fixes a couple 8-bit reads.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 45add7603d1b..8dfee45a0576 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -242,6 +242,12 @@ static void apci3120_exttrig_enable(struct comedi_device *dev, bool enable)
 	outw(devpriv->ctrl, dev->iobase + APCI3120_CTRL_REG);
 }
 
+static void apci3120_ai_reset_fifo(struct comedi_device *dev)
+{
+	/* a dummy read of APCI3120_TIMER_MODE_REG resets the ai FIFO */
+	inw(dev->iobase + APCI3120_TIMER_MODE_REG);
+}
+
 #include "addi-data/hwdrv_apci3120.c"
 
 static void apci3120_dma_alloc(struct comedi_device *dev)

commit 9d5b070876ccd1f06121fa7ba5292c35a494ce24
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:54:09 2014 -0700

    staging: comedi: addi_apci_3120: tidy up scan chanlist programming
    
    Define the chanlist register and its bits and tidy up the programming
    of the scan chanlist.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index ce94f907d9ef..45add7603d1b 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -22,6 +22,11 @@
 #define APCI3120_CTRL_PA(x)			(((x) & 0xf) << 0)
 #define APCI3120_STATUS_TO_VERSION(x)		(((x) >> 4) & 0xf)
 #define APCI3120_TIMER_REG			0x04
+#define APCI3120_CHANLIST_REG			0x06
+#define APCI3120_CHANLIST_INDEX(x)		(((x) & 0xf) << 8)
+#define APCI3120_CHANLIST_UNIPOLAR		(1 << 7)
+#define APCI3120_CHANLIST_GAIN(x)		(((x) & 0x3) << 4)
+#define APCI3120_CHANLIST_MUX(x)		(((x) & 0xf) << 0)
 #define APCI3120_AO_REG(x)			(0x08 + (((x) / 4) * 2))
 #define APCI3120_AO_MUX(x)			(((x) & 0x3) << 14)
 #define APCI3120_AO_DATA(x)			((x) << 0)

commit 24e18c85e57255f75cbbc3d8c4f8e36cd9ea7204
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:54:07 2014 -0700

    staging: comedi: addi_apci_3120: introduce apci3120_clr_timer2_interrupt()
    
    A dummy read of APCI3120_CTR0_REG clears the timer 2 interrupt. Introduce a
    helper function to clarify this.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 8f7d9ef18b9c..ce94f907d9ef 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -155,6 +155,12 @@ static unsigned int apci3120_ns_to_timer(struct comedi_device *dev,
 	return divisor;
 }
 
+static void apci3120_clr_timer2_interrupt(struct comedi_device *dev)
+{
+	/* a dummy read of APCI3120_CTR0_REG clears the timer 2 interrupt */
+	inb(dev->iobase + APCI3120_CTR0_REG);
+}
+
 static void apci3120_timer_write(struct comedi_device *dev,
 				 unsigned int timer, unsigned int val)
 {

commit b17d390661da546724fa465bbb7fcd7a5f849103
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:54:06 2014 -0700

    staging: comedi: addi_apci_3120: move apci3120_exttrig_enable() to driver source
    
    Move this helper function from the included source file into the main driver
    source file.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 7bfb320d1312..8f7d9ef18b9c 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -220,6 +220,17 @@ static void apci3120_timer_enable(struct comedi_device *dev,
 	outw(devpriv->ctrl, dev->iobase + APCI3120_CTRL_REG);
 }
 
+static void apci3120_exttrig_enable(struct comedi_device *dev, bool enable)
+{
+	struct apci3120_private *devpriv = dev->private;
+
+	if (enable)
+		devpriv->ctrl |= APCI3120_CTRL_EXT_TRIG;
+	else
+		devpriv->ctrl &= ~APCI3120_CTRL_EXT_TRIG;
+	outw(devpriv->ctrl, dev->iobase + APCI3120_CTRL_REG);
+}
+
 #include "addi-data/hwdrv_apci3120.c"
 
 static void apci3120_dma_alloc(struct comedi_device *dev)

commit a8f77b40b6c20d47816cbde84254ddef68480937
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:54:05 2014 -0700

    staging: comedi: addi_apci_3120: move apci3120_timer_enable() to driver source
    
    Move this helper function from the included source file into the main driver
    source file.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 014a01495ae2..7bfb320d1312 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -208,6 +208,18 @@ static void apci3120_timer_set_mode(struct comedi_device *dev,
 	outb(devpriv->timer_mode, dev->iobase + APCI3120_TIMER_MODE_REG);
 }
 
+static void apci3120_timer_enable(struct comedi_device *dev,
+				  unsigned int timer, bool enable)
+{
+	struct apci3120_private *devpriv = dev->private;
+
+	if (enable)
+		devpriv->ctrl |= APCI3120_CTRL_GATE(timer);
+	else
+		devpriv->ctrl &= ~APCI3120_CTRL_GATE(timer);
+	outw(devpriv->ctrl, dev->iobase + APCI3120_CTRL_REG);
+}
+
 #include "addi-data/hwdrv_apci3120.c"
 
 static void apci3120_dma_alloc(struct comedi_device *dev)

commit 9625742666306f866c9b56c41c25f8d35721dd29
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:54:04 2014 -0700

    staging: comedi: addi_apci_3120: rename APCI3120_WR_ADDRESS
    
    For aesthetics, rename this define.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 087ff1acf088..014a01495ae2 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -15,6 +15,7 @@
 /*
  * PCI BAR 1 register map (dev->iobase)
  */
+#define APCI3120_CTRL_REG			0x00
 #define APCI3120_CTRL_EXT_TRIG			(1 << 15)
 #define APCI3120_CTRL_GATE(x)			(1 << (12 + (x)))
 #define APCI3120_CTRL_PR(x)			(((x) & 0xf) << 8)

commit 6d210c8d96b7ae073ed43c46de21329115e9090a
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:54:00 2014 -0700

    staging: comedi: addi_apci_3120: rename APCI3120_ENABLE_EXT_TRIGGER
    
    For aesthetics, rename this define.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 58db0aba088b..087ff1acf088 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -15,6 +15,7 @@
 /*
  * PCI BAR 1 register map (dev->iobase)
  */
+#define APCI3120_CTRL_EXT_TRIG			(1 << 15)
 #define APCI3120_CTRL_GATE(x)			(1 << (12 + (x)))
 #define APCI3120_CTRL_PR(x)			(((x) & 0xf) << 8)
 #define APCI3120_CTRL_PA(x)			(((x) & 0xf) << 0)

commit 20f75b5641dfb12aa8acc53afd6ed65ca49af172
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:53:59 2014 -0700

    staging: comedi: addi_apci_3120: tidy up APCI3120_ENABLE_TIMER[012]
    
    For aesthetics, replace these defines with a macro that returns the
    correct bit needed to set the gate bit to enable a timer.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 97782401e142..58db0aba088b 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -15,6 +15,7 @@
 /*
  * PCI BAR 1 register map (dev->iobase)
  */
+#define APCI3120_CTRL_GATE(x)			(1 << (12 + (x)))
 #define APCI3120_CTRL_PR(x)			(((x) & 0xf) << 8)
 #define APCI3120_CTRL_PA(x)			(((x) & 0xf) << 0)
 #define APCI3120_STATUS_TO_VERSION(x)		(((x) >> 4) & 0xf)

commit c24ca0e691bd5b8e2e332577a6014de9572b9194
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:53:57 2014 -0700

    staging: comedi: addi_apci_3120: tidy up devpriv->ctrl use
    
    The apci3120_setup_chan_list() function sets devpriv->ctrl to the scan length
    (PR) and scan start (PA) values and writes the value to the register. There is
    no need to mask the value first.
    
    The apci3120_ai_insn_read() function calles apci3120_setup_chan_list(). There
    is no need to clear devpriv->ctrl first or clear any additional bits and write
    the register again. This also fixes an incorrect use of APCI3120_DISABLE_TIMER0
    to disable the timer.
    
    apci3120_cyclic_ai() also calls apci3120_setup_chan_list() so it does not need
    to clear devpriv->ctrl or clear any addidional bits and write the register.
    
    Update the comments in apci3120_reset() and apci3120_cancel().
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index e320c0826d3b..97782401e142 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -15,6 +15,8 @@
 /*
  * PCI BAR 1 register map (dev->iobase)
  */
+#define APCI3120_CTRL_PR(x)			(((x) & 0xf) << 8)
+#define APCI3120_CTRL_PA(x)			(((x) & 0xf) << 0)
 #define APCI3120_STATUS_TO_VERSION(x)		(((x) >> 4) & 0xf)
 #define APCI3120_TIMER_REG			0x04
 #define APCI3120_AO_REG(x)			(0x08 + (((x) / 4) * 2))

commit 5a1f46c8fb2859be4fc7c225f2fca95640b6d7c3
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:53:56 2014 -0700

    staging: comedi: addi_apci_3120: rename private data 'us_OutputRegister'
    
    Rename this CamelCase member of the private data and tidy up the mask/set
    of its bits.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index e53561194bae..e320c0826d3b 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -86,7 +86,7 @@ struct apci3120_private {
 	unsigned char do_bits;
 	unsigned char timer_mode;
 	unsigned char b_ModeSelectRegister;
-	unsigned short us_OutputRegister;
+	unsigned short ctrl;
 	unsigned char b_Timer2Mode;
 	unsigned char b_Timer2Interrupt;
 	unsigned int ai_running:1;

commit b3c8ee5cbc5f995c738a5651a2b22297950be6a2
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:53:55 2014 -0700

    staging: comedi: addi_apci_3120: move timer helpers to main driver source
    
    Move the timer read/write and set mode helpers from the included source
    file into the main driver source file.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 20babacd40d3..e53561194bae 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -150,6 +150,59 @@ static unsigned int apci3120_ns_to_timer(struct comedi_device *dev,
 	return divisor;
 }
 
+static void apci3120_timer_write(struct comedi_device *dev,
+				 unsigned int timer, unsigned int val)
+{
+	struct apci3120_private *devpriv = dev->private;
+
+	/* write 16-bit value to timer (lower 16-bits of timer 2) */
+	outb(APCI3120_CTR0_DO_BITS(devpriv->do_bits) |
+	     APCI3120_CTR0_TIMER_SEL(timer),
+	     dev->iobase + APCI3120_CTR0_REG);
+	outw(val & 0xffff, dev->iobase + APCI3120_TIMER_REG);
+
+	if (timer == 2) {
+		/* write upper 16-bits to timer 2 */
+		outb(APCI3120_CTR0_DO_BITS(devpriv->do_bits) |
+		     APCI3120_CTR0_TIMER_SEL(timer + 1),
+		     dev->iobase + APCI3120_CTR0_REG);
+		outw((val >> 16) & 0xffff, dev->iobase + APCI3120_TIMER_REG);
+	}
+}
+
+static unsigned int apci3120_timer_read(struct comedi_device *dev,
+					unsigned int timer)
+{
+	struct apci3120_private *devpriv = dev->private;
+	unsigned int val;
+
+	/* read 16-bit value from timer (lower 16-bits of timer 2) */
+	outb(APCI3120_CTR0_DO_BITS(devpriv->do_bits) |
+	     APCI3120_CTR0_TIMER_SEL(timer),
+	     dev->iobase + APCI3120_CTR0_REG);
+	val = inw(dev->iobase + APCI3120_TIMER_REG);
+
+	if (timer == 2) {
+		/* read upper 16-bits from timer 2 */
+		outb(APCI3120_CTR0_DO_BITS(devpriv->do_bits) |
+		     APCI3120_CTR0_TIMER_SEL(timer + 1),
+		     dev->iobase + APCI3120_CTR0_REG);
+		val |= (inw(dev->iobase + APCI3120_TIMER_REG) << 16);
+	}
+
+	return val;
+}
+
+static void apci3120_timer_set_mode(struct comedi_device *dev,
+				    unsigned int timer, unsigned int mode)
+{
+	struct apci3120_private *devpriv = dev->private;
+
+	devpriv->timer_mode &= ~APCI3120_TIMER_MODE_MASK(timer);
+	devpriv->timer_mode |= APCI3120_TIMER_MODE(timer, mode);
+	outb(devpriv->timer_mode, dev->iobase + APCI3120_TIMER_MODE_REG);
+}
+
 #include "addi-data/hwdrv_apci3120.c"
 
 static void apci3120_dma_alloc(struct comedi_device *dev)

commit e6da4c6a2db10ae79704e809ee2896e6bcf230b9
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:53:54 2014 -0700

    staging: comedi: addi_apci_3120: introduce apci3120_timer_set_mode()
    
    Introduce a helper function to set the operation mode of a timer.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 999add3928ef..20babacd40d3 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -20,6 +20,12 @@
 #define APCI3120_AO_REG(x)			(0x08 + (((x) / 4) * 2))
 #define APCI3120_AO_MUX(x)			(((x) & 0x3) << 14)
 #define APCI3120_AO_DATA(x)			((x) << 0)
+#define APCI3120_TIMER_MODE_REG			0x0c
+#define APCI3120_TIMER_MODE(_t, _m)		((_m) << ((_t) * 2))
+#define APCI3120_TIMER_MODE0			0  /* I8254_MODE0 */
+#define APCI3120_TIMER_MODE2			1  /* I8254_MODE2 */
+#define APCI3120_TIMER_MODE4			2  /* I8254_MODE4 */
+#define APCI3120_TIMER_MODE5			3  /* I8254_MODE5 */
 #define APCI3120_TIMER_MODE_MASK(_t)		(3 << ((_t) * 2))
 #define APCI3120_CTR0_REG			0x0d
 #define APCI3120_CTR0_DO_BITS(x)		((x) << 4)

commit 2016c534dd2f4b0599e5a8513567a34d4746cdf6
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:53:53 2014 -0700

    staging: comedi: addi_apci_3120: tidy up timer_mode masking
    
    Define a macro that returns the mask of the timer_mode bits for a given
    timer. Use the macro to remove the "magic" values used to clear the bits.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 6882f8ee67a4..999add3928ef 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -20,6 +20,7 @@
 #define APCI3120_AO_REG(x)			(0x08 + (((x) / 4) * 2))
 #define APCI3120_AO_MUX(x)			(((x) & 0x3) << 14)
 #define APCI3120_AO_DATA(x)			((x) << 0)
+#define APCI3120_TIMER_MODE_MASK(_t)		(3 << ((_t) * 2))
 #define APCI3120_CTR0_REG			0x0d
 #define APCI3120_CTR0_DO_BITS(x)		((x) << 4)
 #define APCI3120_CTR0_TIMER_SEL(x)		((x) << 0)

commit 486beeb488f589bc34bb0cff51415c2040abcb47
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:53:52 2014 -0700

    staging: comedi: addi_apci_3120: rename private data 'b_TimerSelectMode'
    
    Rename this CamelCase member of the private data and tidy up the mask/set
    of its bits.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index f431e5492de8..6882f8ee67a4 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -77,7 +77,7 @@ struct apci3120_private {
 	unsigned int ui_DmaActualBuffer;
 	struct apci3120_dmabuf dmabuf[2];
 	unsigned char do_bits;
-	unsigned char b_TimerSelectMode;
+	unsigned char timer_mode;
 	unsigned char b_ModeSelectRegister;
 	unsigned short us_OutputRegister;
 	unsigned char b_Timer2Mode;

commit 0c188e9cc9c4e7920215903779be3010ffdaf602
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:53:51 2014 -0700

    staging: comedi: addi_apci_3120: rename APCI3120_TIMER_VALUE
    
    For aesthetics, rename this register offset.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 51637e1628bc..f431e5492de8 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -16,6 +16,7 @@
  * PCI BAR 1 register map (dev->iobase)
  */
 #define APCI3120_STATUS_TO_VERSION(x)		(((x) >> 4) & 0xf)
+#define APCI3120_TIMER_REG			0x04
 #define APCI3120_AO_REG(x)			(0x08 + (((x) / 4) * 2))
 #define APCI3120_AO_MUX(x)			(((x) & 0x3) << 14)
 #define APCI3120_AO_DATA(x)			((x) << 0)

commit 2e2e74e17a315d376292764b323e54ec21daa18e
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:53:49 2014 -0700

    staging: comedi: addi_apci_3120: tidy up CTR0 register defines
    
    Define the CTR0 register in the main driver source file and remove all
    the old defines in hwrdv_apci3120.c.
    
    For aesthetics, save the raw digital output state (devpriv->do_bits) in
    the digital output (*insn_bits) function and use a macro to set them when
    reading/writing a timer.
    
    Use the CTR0 register define in the digital output (*insn_bits) function
    and remove the current register define.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 6819cc09a60e..51637e1628bc 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -19,6 +19,8 @@
 #define APCI3120_AO_REG(x)			(0x08 + (((x) / 4) * 2))
 #define APCI3120_AO_MUX(x)			(((x) & 0x3) << 14)
 #define APCI3120_AO_DATA(x)			((x) << 0)
+#define APCI3120_CTR0_REG			0x0d
+#define APCI3120_CTR0_DO_BITS(x)		((x) << 4)
 #define APCI3120_CTR0_TIMER_SEL(x)		((x) << 0)
 
 /*

commit ca578bce6d940b4a653fe8ff73ba37fff0c8eaa7
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:53:47 2014 -0700

    staging: comedi: addi_apci_3120: introduce apci3120_timer_write()
    
    Introduce a helper function to select a timer and write a value to it.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index f07d9ab35c9d..6819cc09a60e 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -19,6 +19,7 @@
 #define APCI3120_AO_REG(x)			(0x08 + (((x) / 4) * 2))
 #define APCI3120_AO_MUX(x)			(((x) & 0x3) << 14)
 #define APCI3120_AO_DATA(x)			((x) << 0)
+#define APCI3120_CTR0_TIMER_SEL(x)		((x) << 0)
 
 /*
  * PCI BAR 2 register map (devpriv->addon)

commit 36d553e47d7ea50a2a954ede3540f4417b5094c9
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:53:46 2014 -0700

    staging: comedi: addi_apci_3120: rename private data 'b_DigitalOutputRegister'
    
    Rename this CamelCase member of the private data.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index c770e4643ce0..f07d9ab35c9d 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -72,7 +72,7 @@ struct apci3120_private {
 	unsigned char b_DmaDoubleBuffer;
 	unsigned int ui_DmaActualBuffer;
 	struct apci3120_dmabuf dmabuf[2];
-	unsigned char b_DigitalOutputRegister;
+	unsigned char do_bits;
 	unsigned char b_TimerSelectMode;
 	unsigned char b_ModeSelectRegister;
 	unsigned short us_OutputRegister;

commit 546bf3382e41b8a5a4c216ea7bdc0f517ce04e22
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Nov 4 10:53:45 2014 -0700

    staging: comedi: addi_apci_3120: introduce apci3120_ns_to_timer()
    
    The timer divisor calculations in this driver are over complicated.
    
    There are three timers on the board. They all use the same base clock
    with a fixed prescaler for each timer. The base clock used depends on
    the board version and type:
    
      APCI-3120 Rev A boards OSC = 14.29MHz base clock (~70ns)
      APCI-3120 Rev B boards OSC = 20MHz base clock (50ns)
      APCI-3001 boards OSC = 20MHz base clock (50ns)
    
    The prescalers for each timer are:
    
      Timer 0 CLK = OSC/10
      Timer 1 CLK = OSC/1000
      Timer 2 CLK = OSC/1000
    
    Add a new member to the private data, 'osc_base', to hold the base clock
    time. Set this member during the board attach.
    
    Introduce a helper function to calculate the divisor needed to generate
    a nanosecond time with a given timer.
    
    Use the new helper function in the driver to clarify the code.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 056b3bf82094..c770e4643ce0 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -15,6 +15,7 @@
 /*
  * PCI BAR 1 register map (dev->iobase)
  */
+#define APCI3120_STATUS_TO_VERSION(x)		(((x) >> 4) & 0xf)
 #define APCI3120_AO_REG(x)			(0x08 + (((x) / 4) * 2))
 #define APCI3120_AO_MUX(x)			(((x) & 0x3) << 14)
 #define APCI3120_AO_DATA(x)			((x) << 0)
@@ -23,6 +24,14 @@
  * PCI BAR 2 register map (devpriv->addon)
  */
 
+/*
+ * Board revisions
+ */
+#define APCI3120_REVA				0xa
+#define APCI3120_REVB				0xb
+#define APCI3120_REVA_OSC_BASE			70	/* 70ns = 14.29MHz */
+#define APCI3120_REVB_OSC_BASE			50	/* 50ns = 20MHz */
+
 enum apci3120_boardid {
 	BOARD_APCI3120,
 	BOARD_APCI3001,
@@ -55,6 +64,7 @@ struct apci3120_dmabuf {
 struct apci3120_private {
 	unsigned long amcc;
 	unsigned long addon;
+	unsigned int osc_base;
 	unsigned int ui_AiNbrofChannels;
 	unsigned int ui_AiChannelList[32];
 	unsigned int ui_AiReadData[32];
@@ -76,6 +86,59 @@ struct apci3120_private {
 	struct task_struct *tsk_Current;
 };
 
+/*
+ * There are three timers on the board. They all use the same base
+ * clock with a fixed prescaler for each timer. The base clock used
+ * depends on the board version and type.
+ *
+ * APCI-3120 Rev A boards OSC = 14.29MHz base clock (~70ns)
+ * APCI-3120 Rev B boards OSC = 20MHz base clock (50ns)
+ * APCI-3001 boards OSC = 20MHz base clock (50ns)
+ *
+ * The prescalers for each timer are:
+ * Timer 0 CLK = OSC/10
+ * Timer 1 CLK = OSC/1000
+ * Timer 2 CLK = OSC/1000
+ */
+static unsigned int apci3120_ns_to_timer(struct comedi_device *dev,
+					 unsigned int timer,
+					 unsigned int ns,
+					 unsigned int flags)
+{
+	struct apci3120_private *devpriv = dev->private;
+	unsigned int prescale = (timer == 0) ? 10 : 1000;
+	unsigned int timer_base = devpriv->osc_base * prescale;
+	unsigned int divisor;
+
+	switch (flags & CMDF_ROUND_MASK) {
+	case CMDF_ROUND_UP:
+		divisor = DIV_ROUND_UP(ns, timer_base);
+		break;
+	case CMDF_ROUND_DOWN:
+		divisor = ns / timer_base;
+		break;
+	case CMDF_ROUND_NEAREST:
+	default:
+		divisor = DIV_ROUND_CLOSEST(ns, timer_base);
+		break;
+	}
+
+	if (timer == 2) {
+		/* timer 2 is 24-bits */
+		if (divisor > 0x00ffffff)
+			divisor = 0x00ffffff;
+	} else {
+		/* timers 0 and 1 are 16-bits */
+		if (divisor > 0xffff)
+			divisor = 0xffff;
+	}
+	/* the timers require a minimum divisor of 2 */
+	if (divisor < 2)
+		divisor = 2;
+
+	return divisor;
+}
+
 #include "addi-data/hwdrv_apci3120.c"
 
 static void apci3120_dma_alloc(struct comedi_device *dev)
@@ -131,6 +194,7 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 	const struct apci3120_board *this_board = NULL;
 	struct apci3120_private *devpriv;
 	struct comedi_subdevice *s;
+	unsigned int status;
 	int ret;
 
 	if (context < ARRAY_SIZE(apci3120_boardtypes))
@@ -165,6 +229,13 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 		}
 	}
 
+	status = inw(dev->iobase + APCI3120_RD_STATUS);
+	if (APCI3120_STATUS_TO_VERSION(status) == APCI3120_REVB ||
+	    context == BOARD_APCI3001)
+		devpriv->osc_base = APCI3120_REVB_OSC_BASE;
+	else
+		devpriv->osc_base = APCI3120_REVA_OSC_BASE;
+
 	ret = comedi_alloc_subdevices(dev, 5);
 	if (ret)
 		return ret;

commit 324e213a06eb527cfba7d1efe5118cbff02afd7e
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Nov 5 10:21:08 2014 -0700

    staging: comedi: addi_apci_3120: use comedi_async 'scans_done' to detect EOA
    
    Remove the private data member 'ai_AiActualScan' and use the comedi_async
    'scans_done' member to detect the end-of-acquisition.
    
    The function v_APCI3120_InterruptDmaMoveBlock16bit() is then just a wrapper
    for comedi_buf_write_samples(). Remove it.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index e8da15cf4e2a..056b3bf82094 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -55,7 +55,6 @@ struct apci3120_dmabuf {
 struct apci3120_private {
 	unsigned long amcc;
 	unsigned long addon;
-	unsigned int ui_AiActualScan;
 	unsigned int ui_AiNbrofChannels;
 	unsigned int ui_AiChannelList[32];
 	unsigned int ui_AiReadData[32];

commit ef49d8329e25ee1686520315713b86419cddcb45
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Thu Oct 30 11:19:34 2014 -0700

    staging: comedi: drivers: replace SDF_WRITEABLE with SDF_WRITABLE
    
    As indicated in the comedi.h uapi header, SDF_WRITEABLE was a spelling
    error in the API, SDF_WRITABLE is prefered.
    
    For aesthetics, replace all the SDF_WRITEABLE uses with SDF_WRITABLE.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index e5dbbdf33b40..e8da15cf4e2a 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -192,7 +192,7 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 	s = &dev->subdevices[1];
 	if (this_board->has_ao) {
 		s->type		= COMEDI_SUBD_AO;
-		s->subdev_flags	= SDF_WRITEABLE | SDF_GROUND | SDF_COMMON;
+		s->subdev_flags	= SDF_WRITABLE | SDF_GROUND | SDF_COMMON;
 		s->n_chan	= 8;
 		s->maxdata	= 0x3fff;
 		s->range_table	= &range_bipolar10;
@@ -218,7 +218,7 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 	/* Digital Output subdevice */
 	s = &dev->subdevices[3];
 	s->type		= COMEDI_SUBD_DO;
-	s->subdev_flags	= SDF_WRITEABLE;
+	s->subdev_flags	= SDF_WRITABLE;
 	s->n_chan	= 4;
 	s->maxdata	= 1;
 	s->range_table	= &range_digital;
@@ -227,7 +227,7 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 	/* Timer subdevice */
 	s = &dev->subdevices[4];
 	s->type		= COMEDI_SUBD_TIMER;
-	s->subdev_flags	= SDF_WRITEABLE | SDF_READABLE;
+	s->subdev_flags	= SDF_WRITABLE | SDF_READABLE;
 	s->n_chan	= 1;
 	s->maxdata	= 0x00ffffff;
 	s->insn_write	= apci3120_write_insn_timer;

commit 22be3f81429608aad8229ee60e8f834024291f09
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Oct 20 11:34:29 2014 -0700

    staging: comedi: addi_apci_3120: don't reset board when detaching driver
    
    The comedi core calls all the subdevice (*cancel) functions before it does
    the driver (*detach). There is no reason to call the board reset function
    in the (*detach).
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 3b4fa2ebbc85..e5dbbdf33b40 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -239,8 +239,6 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 
 static void apci3120_detach(struct comedi_device *dev)
 {
-	if (dev->iobase)
-		apci3120_reset(dev);
 	comedi_pci_detach(dev);
 	apci3120_dma_free(dev);
 }

commit 73ef19314649fbd915d39c04de5057ece3b604e4
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Oct 20 11:34:27 2014 -0700

    staging: comedi: addi_apci_3120: reset the board before hooking up the interrupt
    
    Move the apci3120_reset() call in the (*auto_attach) to ensure that the board
    is reset before hooking up the interrupt.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index ec6f89b9e99c..3b4fa2ebbc85 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -154,6 +154,8 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 	devpriv->amcc = pci_resource_start(pcidev, 0);
 	devpriv->addon = pci_resource_start(pcidev, 2);
 
+	apci3120_reset(dev);
+
 	if (pcidev->irq > 0) {
 		ret = request_irq(pcidev->irq, apci3120_interrupt, IRQF_SHARED,
 				  dev->board_name, dev);
@@ -232,7 +234,6 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 	s->insn_read	= apci3120_read_insn_timer;
 	s->insn_config	= apci3120_config_insn_timer;
 
-	apci3120_reset(dev);
 	return 0;
 }
 

commit 758505199e89de48374ed1c8618f95c218e9cd6f
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Oct 20 11:34:26 2014 -0700

    staging: comedi: addi_apci_3120: tidy up timer subdevice init
    
    It appears that this subdevice is actually broken. The subdevice functions
    all violate the comedi API and, it they did work, it appears they would
    break the analog input async commands.
    
    For now just tidy up the subdevice init.
    
    Add the SDF_READABLE subdev_flag, this subdevice provides an (*insn_read).
    
    Fix the subdevice 'maxdata' initialization. The timer is 24-bits.
    
    Remove the 'len_chanlist' initialization. This member is only used by
    subdevices that support async commands.
    
    Also remove the 'range_table' initialization. The core will set it to
    range_unknown which is appropriate.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index cc561788e740..ec6f89b9e99c 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -222,18 +222,15 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 	s->range_table	= &range_digital;
 	s->insn_bits	= apci3120_do_insn_bits;
 
-	/*  Allocate and Initialise Timer Subdevice Structures */
+	/* Timer subdevice */
 	s = &dev->subdevices[4];
-	s->type = COMEDI_SUBD_TIMER;
-	s->subdev_flags = SDF_WRITEABLE | SDF_GROUND | SDF_COMMON;
-	s->n_chan = 1;
-	s->maxdata = 0;
-	s->len_chanlist = 1;
-	s->range_table = &range_digital;
-
-	s->insn_write = apci3120_write_insn_timer;
-	s->insn_read = apci3120_read_insn_timer;
-	s->insn_config = apci3120_config_insn_timer;
+	s->type		= COMEDI_SUBD_TIMER;
+	s->subdev_flags	= SDF_WRITEABLE | SDF_READABLE;
+	s->n_chan	= 1;
+	s->maxdata	= 0x00ffffff;
+	s->insn_write	= apci3120_write_insn_timer;
+	s->insn_read	= apci3120_read_insn_timer;
+	s->insn_config	= apci3120_config_insn_timer;
 
 	apci3120_reset(dev);
 	return 0;

commit 2a420f408aa73759b61446503adbd83c88e33966
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Oct 20 11:34:25 2014 -0700

    staging: comedi: addi_apci_3120: tidy up analog input subdevice init
    
    For aesthetics, add some white space to the analog input subdevice
    initialization.
    
    The async command support in this driver is pretty messed up. I'm not
    really sure if it actually works yet. Luckly this driver was not
    setting the SDF_CMD_READ subdev_flag so the command support was not
    actually getting enabled.
    
    The command support only works if an interrupt is available. Refactor
    the subdevice init so that the command support is only hooked up if
    we have an interrupt. For now always disable the command support. Once
    the driver has been cleaned up the command will be enabled.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 358bfd3f3417..cc561788e740 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -168,23 +168,23 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 	if (ret)
 		return ret;
 
-	/*  Allocate and Initialise AI Subdevice Structures */
+	/* Analog Input subdevice */
 	s = &dev->subdevices[0];
-	dev->read_subdev = s;
-	s->type = COMEDI_SUBD_AI;
-	s->subdev_flags =
-		SDF_READABLE | SDF_COMMON | SDF_GROUND
-		| SDF_DIFF;
-	s->n_chan = 16;
-	s->maxdata = this_board->ai_is_16bit ? 0xffff : 0x0fff;
-	s->len_chanlist = s->n_chan;
-	s->range_table = &range_apci3120_ai;
-
-	s->insn_config = apci3120_ai_insn_config;
-	s->insn_read = apci3120_ai_insn_read;
-	s->do_cmdtest = apci3120_ai_cmdtest;
-	s->do_cmd = apci3120_ai_cmd;
-	s->cancel = apci3120_cancel;
+	s->type		= COMEDI_SUBD_AI;
+	s->subdev_flags	= SDF_READABLE | SDF_COMMON | SDF_GROUND | SDF_DIFF;
+	s->n_chan	= 16;
+	s->maxdata	= this_board->ai_is_16bit ? 0xffff : 0x0fff;
+	s->range_table	= &range_apci3120_ai;
+	s->insn_config	= apci3120_ai_insn_config;
+	s->insn_read	= apci3120_ai_insn_read;
+	if (0 /* dev->irq */) {
+		dev->read_subdev = s;
+		s->subdev_flags	|= SDF_CMD_READ;
+		s->len_chanlist	= s->n_chan;
+		s->do_cmdtest	= apci3120_ai_cmdtest;
+		s->do_cmd	= apci3120_ai_cmd;
+		s->cancel	= apci3120_cancel;
+	}
 
 	/* Analog Output subdevice */
 	s = &dev->subdevices[1];

commit 1bed58e3b6c02614aeb14dea58e1f12ec79a9d17
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Oct 20 11:34:24 2014 -0700

    staging: comedi: addi_apci_3120: tidy up digital output subdevice init
    
    For aesthetics, add some white space to the digital output subdevice
    initialization.
    
    Remove the subdev_flags SDF_GROUND and SDF_COMMON. These only apply to
    analog subdevices. Also remove the unnecessary SDF_READABLE subdev_flag.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index b0d62cd475e1..358bfd3f3417 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -213,15 +213,14 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 	s->range_table	= &range_digital;
 	s->insn_bits	= apci3120_di_insn_bits;
 
-	/*  Allocate and Initialise DO Subdevice Structures */
+	/* Digital Output subdevice */
 	s = &dev->subdevices[3];
-	s->type = COMEDI_SUBD_DO;
-	s->subdev_flags =
-		SDF_READABLE | SDF_WRITEABLE | SDF_GROUND | SDF_COMMON;
-	s->n_chan = 4;
-	s->maxdata = 1;
-	s->range_table = &range_digital;
-	s->insn_bits = apci3120_do_insn_bits;
+	s->type		= COMEDI_SUBD_DO;
+	s->subdev_flags	= SDF_WRITEABLE;
+	s->n_chan	= 4;
+	s->maxdata	= 1;
+	s->range_table	= &range_digital;
+	s->insn_bits	= apci3120_do_insn_bits;
 
 	/*  Allocate and Initialise Timer Subdevice Structures */
 	s = &dev->subdevices[4];

commit dc842931be5a8d8a2a2441e6c762b93b7aaaecbf
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Oct 20 11:34:23 2014 -0700

    staging: comedi: addi_apci_3120: tidy up digital input subdevice init
    
    For aesthetics, add some white space to the digital input subdevice
    initialization.
    
    Remove the subdev_flags SDF_GROUND and SDF_COMMON. These only apply to
    analog subdevices.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 8cd3ef13536e..b0d62cd475e1 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -204,14 +204,14 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 		s->type		= COMEDI_SUBD_UNUSED;
 	}
 
-	/*  Allocate and Initialise DI Subdevice Structures */
+	/* Digital Input subdevice */
 	s = &dev->subdevices[2];
-	s->type = COMEDI_SUBD_DI;
-	s->subdev_flags = SDF_READABLE | SDF_GROUND | SDF_COMMON;
-	s->n_chan = 4;
-	s->maxdata = 1;
-	s->range_table = &range_digital;
-	s->insn_bits = apci3120_di_insn_bits;
+	s->type		= COMEDI_SUBD_DI;
+	s->subdev_flags	= SDF_READABLE;
+	s->n_chan	= 4;
+	s->maxdata	= 1;
+	s->range_table	= &range_digital;
+	s->insn_bits	= apci3120_di_insn_bits;
 
 	/*  Allocate and Initialise DO Subdevice Structures */
 	s = &dev->subdevices[3];

commit f6dc93082613dbc89f03b85539cf6cf3eda2f073
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Oct 20 11:34:22 2014 -0700

    staging: comedi: addi_apci_3120: tidy up analog output subdevice init
    
    For aesthetics, add some white space to the analog output subdevice
    initialization.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 5db52cd04319..8cd3ef13536e 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -186,22 +186,22 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 	s->do_cmd = apci3120_ai_cmd;
 	s->cancel = apci3120_cancel;
 
-	/*  Allocate and Initialise AO Subdevice Structures */
+	/* Analog Output subdevice */
 	s = &dev->subdevices[1];
 	if (this_board->has_ao) {
-		s->type = COMEDI_SUBD_AO;
-		s->subdev_flags = SDF_WRITEABLE | SDF_GROUND | SDF_COMMON;
-		s->n_chan = 8;
-		s->maxdata = 0x3fff;
-		s->range_table = &range_bipolar10;
-		s->insn_write = apci3120_ao_insn_write;
-		s->insn_read = comedi_readback_insn_read;
+		s->type		= COMEDI_SUBD_AO;
+		s->subdev_flags	= SDF_WRITEABLE | SDF_GROUND | SDF_COMMON;
+		s->n_chan	= 8;
+		s->maxdata	= 0x3fff;
+		s->range_table	= &range_bipolar10;
+		s->insn_write	= apci3120_ao_insn_write;
+		s->insn_read	= comedi_readback_insn_read;
 
 		ret = comedi_alloc_subdev_readback(s);
 		if (ret)
 			return ret;
 	} else {
-		s->type = COMEDI_SUBD_UNUSED;
+		s->type		= COMEDI_SUBD_UNUSED;
 	}
 
 	/*  Allocate and Initialise DI Subdevice Structures */

commit bf34c2262270bc4d7e1d7747a15675942a5dd9c4
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Oct 20 11:34:21 2014 -0700

    staging: comedi: addi_apci_3120: provide analog output 'readback'
    
    Use the comedi_subdevice 'readback' member and the core provided (*insn_read)
    function to provide radback of the analog output channels.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index abc85bf000ff..5db52cd04319 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -195,6 +195,11 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 		s->maxdata = 0x3fff;
 		s->range_table = &range_bipolar10;
 		s->insn_write = apci3120_ao_insn_write;
+		s->insn_read = comedi_readback_insn_read;
+
+		ret = comedi_alloc_subdev_readback(s);
+		if (ret)
+			return ret;
 	} else {
 		s->type = COMEDI_SUBD_UNUSED;
 	}

commit 6174801d7e9ff27b3a589fe766f4cd75de14c31b
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Oct 20 11:34:20 2014 -0700

    staging: comedi: addi_apci_3120: fix apci3120_ao_insn_write()
    
    The comedi core expects (*insn_write) functions to write insn->n values and
    return the number of values written or an errno. This function currently
    returns insn->n but it only writes a single data value.
    
    Fix the function to work like the core expects.
    
    There are two registers used to update the analog outputs. Offset 0x08 is
    used to update channels 0-3 and offset 0x0a to update channels 4-7. Bits
    14 and 15 in each register set the mux to select which channel to update.
    The lower 14 bits are the value used to set the DAC.
    
    For aesthetics, tidy up the defines used for the register offsets and bits
    in the registers.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 6b4a51db9c9e..abc85bf000ff 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -7,6 +7,22 @@
 #include "comedi_fc.h"
 #include "amcc_s5933.h"
 
+/*
+ * PCI BAR 0 register map (devpriv->amcc)
+ * see amcc_s5933.h for register and bit defines
+ */
+
+/*
+ * PCI BAR 1 register map (dev->iobase)
+ */
+#define APCI3120_AO_REG(x)			(0x08 + (((x) / 4) * 2))
+#define APCI3120_AO_MUX(x)			(((x) & 0x3) << 14)
+#define APCI3120_AO_DATA(x)			((x) << 0)
+
+/*
+ * PCI BAR 2 register map (devpriv->addon)
+ */
+
 enum apci3120_boardid {
 	BOARD_APCI3120,
 	BOARD_APCI3001,

commit 695f34cef33421ac89dd77e5e047e131bb3f36c0
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Oct 20 11:34:17 2014 -0700

    staging: comedi: addi_apci_3120: remove private data 'iobase'
    
    This member of the private data holds the start address of PCI BAR 1 that is
    used to access the board registers. The start address is also stored in the
    comedi_device 'iobase' member. Use that instead and remove the private data
    member.
    
    Remove some unnecessary casts when reading the board registers.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index c6f3bc940d0b..6b4a51db9c9e 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -37,7 +37,6 @@ struct apci3120_dmabuf {
 };
 
 struct apci3120_private {
-	int iobase;
 	unsigned long amcc;
 	unsigned long addon;
 	unsigned int ui_AiActualScan;
@@ -136,7 +135,6 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 	pci_set_master(pcidev);
 
 	dev->iobase = pci_resource_start(pcidev, 1);
-	devpriv->iobase = dev->iobase;
 	devpriv->amcc = pci_resource_start(pcidev, 0);
 	devpriv->addon = pci_resource_start(pcidev, 2);
 

commit 323503bfec1a0e1a310ec8e483b528f5e4b87c2d
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Oct 20 11:34:16 2014 -0700

    staging: comedi: addi_apci_3120: rename private data 'i_IobaseAmcc'
    
    This member of the private data holds the start address of PCI BAR 0 that is
    used to access the AMCC registers.
    
    Rename this CamelCase member and fix its type.
    
    Remove an unnecessary local variable, 'ui_Tmp', in apci3120_cyclic_ai() and
    tidy up the rest of the local variable declarations.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index e4cbc15e7df2..c6f3bc940d0b 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -38,7 +38,7 @@ struct apci3120_dmabuf {
 
 struct apci3120_private {
 	int iobase;
-	int i_IobaseAmcc;
+	unsigned long amcc;
 	unsigned long addon;
 	unsigned int ui_AiActualScan;
 	unsigned int ui_AiNbrofChannels;
@@ -137,7 +137,7 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 
 	dev->iobase = pci_resource_start(pcidev, 1);
 	devpriv->iobase = dev->iobase;
-	devpriv->i_IobaseAmcc = pci_resource_start(pcidev, 0);
+	devpriv->amcc = pci_resource_start(pcidev, 0);
 	devpriv->addon = pci_resource_start(pcidev, 2);
 
 	if (pcidev->irq > 0) {

commit 67941734d146658dc8e284b57f57abd9ad0f7c04
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Oct 20 11:34:15 2014 -0700

    staging: comedi: addi_apci_3120: rename private data 'i_IobaseAddon'
    
    This member of the private data holds the start address of PCI BAR 2 that is
    used to access the AMCC Add-On registers.
    
    Rename this CamelCase member and fix its type.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 5a5392fe0bac..e4cbc15e7df2 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -39,7 +39,7 @@ struct apci3120_dmabuf {
 struct apci3120_private {
 	int iobase;
 	int i_IobaseAmcc;
-	int i_IobaseAddon;
+	unsigned long addon;
 	unsigned int ui_AiActualScan;
 	unsigned int ui_AiNbrofChannels;
 	unsigned int ui_AiChannelList[32];
@@ -138,7 +138,7 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 	dev->iobase = pci_resource_start(pcidev, 1);
 	devpriv->iobase = dev->iobase;
 	devpriv->i_IobaseAmcc = pci_resource_start(pcidev, 0);
-	devpriv->i_IobaseAddon = pci_resource_start(pcidev, 2);
+	devpriv->addon = pci_resource_start(pcidev, 2);
 
 	if (pcidev->irq > 0) {
 		ret = request_irq(pcidev->irq, apci3120_interrupt, IRQF_SHARED,

commit 82263947b1023bdb9cec39c0f8deb0c447433014
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Oct 20 11:34:12 2014 -0700

    staging: comedi: addi_apci_3120: remove private data 'i_IobaseReserved'
    
    This member of the private data is not used by the driver. Remove it.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 774ba7abc95d..5a5392fe0bac 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -40,7 +40,6 @@ struct apci3120_private {
 	int iobase;
 	int i_IobaseAmcc;
 	int i_IobaseAddon;
-	int i_IobaseReserved;
 	unsigned int ui_AiActualScan;
 	unsigned int ui_AiNbrofChannels;
 	unsigned int ui_AiChannelList[32];
@@ -140,7 +139,6 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 	devpriv->iobase = dev->iobase;
 	devpriv->i_IobaseAmcc = pci_resource_start(pcidev, 0);
 	devpriv->i_IobaseAddon = pci_resource_start(pcidev, 2);
-	devpriv->i_IobaseReserved = pci_resource_start(pcidev, 3);
 
 	if (pcidev->irq > 0) {
 		ret = request_irq(pcidev->irq, apci3120_interrupt, IRQF_SHARED,

commit 12d984ed512aa20b46ba16abf3c4f64c6a893fe7
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Oct 20 11:34:11 2014 -0700

    staging: comedi: addi_apci_3120: remove unipolar range from analog outputs
    
    The analog outputs of the APCI-3120 have a 14-bit bipolar range and use straight
    binary values (0x0000 = -10V to 0x3fff = +10V) to set the outputs. This driver
    tries to fake a unipolar range by munging the comedi data values to only output
    0V to +10V signals (0x0000 to 0x1fff values are munged to 0x2000 - 0x3fff).
    
    This causes problems with the comedilib API functions that convert between comedi
    values and physical values. It's also possible for the user to pass a data value
    that would get munged and actually change the wrong channel.
    
    Fix this by change the subdevice range_table to range_bipolar10 and remove the
    munging in apci3120_ao_insn_write().
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 759245b5b707..774ba7abc95d 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -181,7 +181,7 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 		s->subdev_flags = SDF_WRITEABLE | SDF_GROUND | SDF_COMMON;
 		s->n_chan = 8;
 		s->maxdata = 0x3fff;
-		s->range_table = &range_apci3120_ao;
+		s->range_table = &range_bipolar10;
 		s->insn_write = apci3120_ao_insn_write;
 	} else {
 		s->type = COMEDI_SUBD_UNUSED;

commit 8f83d52d305216f5d6516d11af48abfb0b44bab6
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Oct 20 11:34:09 2014 -0700

    staging: comedi: addi_apci_3120: introduce struct apci3120_dmabuf
    
    For aesthetics, wrap the DMA buffer information in a struct.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 08ac390edc3f..759245b5b707 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -29,6 +29,13 @@ static const struct apci3120_board apci3120_boardtypes[] = {
 	},
 };
 
+struct apci3120_dmabuf {
+	unsigned short *virt;
+	dma_addr_t hw;
+	unsigned int size;
+	unsigned int use_size;
+};
+
 struct apci3120_private {
 	int iobase;
 	int i_IobaseAmcc;
@@ -41,10 +48,7 @@ struct apci3120_private {
 	unsigned short us_UseDma;
 	unsigned char b_DmaDoubleBuffer;
 	unsigned int ui_DmaActualBuffer;
-	unsigned short *ul_DmaBufferVirtual[2];
-	dma_addr_t ul_DmaBufferHw[2];
-	unsigned int ui_DmaBufferSize[2];
-	unsigned int ui_DmaBufferUsesize[2];
+	struct apci3120_dmabuf dmabuf[2];
 	unsigned char b_DigitalOutputRegister;
 	unsigned char b_TimerSelectMode;
 	unsigned char b_ModeSelectRegister;
@@ -64,22 +68,23 @@ struct apci3120_private {
 static void apci3120_dma_alloc(struct comedi_device *dev)
 {
 	struct apci3120_private *devpriv = dev->private;
+	struct apci3120_dmabuf *dmabuf;
 	int order;
 	int i;
 
 	for (i = 0; i < 2; i++) {
+		dmabuf = &devpriv->dmabuf[i];
 		for (order = 2; order >= 0; order--) {
-			devpriv->ul_DmaBufferVirtual[i] =
-			    dma_alloc_coherent(dev->hw_dev, PAGE_SIZE << order,
-					       &devpriv->ul_DmaBufferHw[i],
-					       GFP_KERNEL);
-
-			if (devpriv->ul_DmaBufferVirtual[i])
+			dmabuf->virt = dma_alloc_coherent(dev->hw_dev,
+							  PAGE_SIZE << order,
+							  &dmabuf->hw,
+							  GFP_KERNEL);
+			if (dmabuf->virt)
 				break;
 		}
-		if (!devpriv->ul_DmaBufferVirtual[i])
+		if (!dmabuf->virt)
 			break;
-		devpriv->ui_DmaBufferSize[i] = PAGE_SIZE << order;
+		dmabuf->size = PAGE_SIZE << order;
 
 		if (i == 0)
 			devpriv->us_UseDma = 1;
@@ -91,17 +96,17 @@ static void apci3120_dma_alloc(struct comedi_device *dev)
 static void apci3120_dma_free(struct comedi_device *dev)
 {
 	struct apci3120_private *devpriv = dev->private;
+	struct apci3120_dmabuf *dmabuf;
 	int i;
 
 	if (!devpriv)
 		return;
 
 	for (i = 0; i < 2; i++) {
-		if (devpriv->ul_DmaBufferVirtual[i]) {
-			dma_free_coherent(dev->hw_dev,
-					  devpriv->ui_DmaBufferSize[i],
-					  devpriv->ul_DmaBufferVirtual[i],
-					  devpriv->ul_DmaBufferHw[i]);
+		dmabuf = &devpriv->dmabuf[i];
+		if (dmabuf->virt) {
+			dma_free_coherent(dev->hw_dev, dmabuf->size,
+					  dmabuf->virt, dmabuf->hw);
 		}
 	}
 }

commit 1b90779b238a8554a465fb99b3828a9e0500ff2a
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Oct 20 11:34:08 2014 -0700

    staging: comedi: addi_apci_3120: DMA requires an interrupt
    
    An interrupt is required for DMA to work.
    
    Factor out the DMA buffer allocation from the (*auto_attach) and only
    allocate the buffers if the interrupt is available.
    
    For aesthetics, also factor the DMA buffer free from the (*detach).
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 2f0b642cfbff..08ac390edc3f 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -61,6 +61,51 @@ struct apci3120_private {
 
 #include "addi-data/hwdrv_apci3120.c"
 
+static void apci3120_dma_alloc(struct comedi_device *dev)
+{
+	struct apci3120_private *devpriv = dev->private;
+	int order;
+	int i;
+
+	for (i = 0; i < 2; i++) {
+		for (order = 2; order >= 0; order--) {
+			devpriv->ul_DmaBufferVirtual[i] =
+			    dma_alloc_coherent(dev->hw_dev, PAGE_SIZE << order,
+					       &devpriv->ul_DmaBufferHw[i],
+					       GFP_KERNEL);
+
+			if (devpriv->ul_DmaBufferVirtual[i])
+				break;
+		}
+		if (!devpriv->ul_DmaBufferVirtual[i])
+			break;
+		devpriv->ui_DmaBufferSize[i] = PAGE_SIZE << order;
+
+		if (i == 0)
+			devpriv->us_UseDma = 1;
+		if (i == 1)
+			devpriv->b_DmaDoubleBuffer = 1;
+	}
+}
+
+static void apci3120_dma_free(struct comedi_device *dev)
+{
+	struct apci3120_private *devpriv = dev->private;
+	int i;
+
+	if (!devpriv)
+		return;
+
+	for (i = 0; i < 2; i++) {
+		if (devpriv->ul_DmaBufferVirtual[i]) {
+			dma_free_coherent(dev->hw_dev,
+					  devpriv->ui_DmaBufferSize[i],
+					  devpriv->ul_DmaBufferVirtual[i],
+					  devpriv->ul_DmaBufferHw[i]);
+		}
+	}
+}
+
 static int apci3120_auto_attach(struct comedi_device *dev,
 				unsigned long context)
 {
@@ -68,7 +113,7 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 	const struct apci3120_board *this_board = NULL;
 	struct apci3120_private *devpriv;
 	struct comedi_subdevice *s;
-	int ret, order, i;
+	int ret;
 
 	if (context < ARRAY_SIZE(apci3120_boardtypes))
 		this_board = &apci3120_boardtypes[context];
@@ -95,30 +140,12 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 	if (pcidev->irq > 0) {
 		ret = request_irq(pcidev->irq, apci3120_interrupt, IRQF_SHARED,
 				  dev->board_name, dev);
-		if (ret == 0)
+		if (ret == 0) {
 			dev->irq = pcidev->irq;
-	}
-
-	/* Allocate DMA buffers */
-	for (i = 0; i < 2; i++) {
-		for (order = 2; order >= 0; order--) {
-			devpriv->ul_DmaBufferVirtual[i] =
-			    dma_alloc_coherent(dev->hw_dev, PAGE_SIZE << order,
-					       &devpriv->ul_DmaBufferHw[i],
-					       GFP_KERNEL);
 
-			if (devpriv->ul_DmaBufferVirtual[i])
-				break;
+			apci3120_dma_alloc(dev);
 		}
-		if (!devpriv->ul_DmaBufferVirtual[i])
-			break;
-		devpriv->ui_DmaBufferSize[i] = PAGE_SIZE << order;
 	}
-	if (devpriv->ul_DmaBufferVirtual[0])
-		devpriv->us_UseDma = 1;
-
-	if (devpriv->ul_DmaBufferVirtual[1])
-		devpriv->b_DmaDoubleBuffer = 1;
 
 	ret = comedi_alloc_subdevices(dev, 5);
 	if (ret)
@@ -193,24 +220,10 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 
 static void apci3120_detach(struct comedi_device *dev)
 {
-	struct apci3120_private *devpriv = dev->private;
-
 	if (dev->iobase)
 		apci3120_reset(dev);
 	comedi_pci_detach(dev);
-	if (devpriv) {
-		unsigned int i;
-
-		for (i = 0; i < 2; i++) {
-			if (devpriv->ul_DmaBufferVirtual[i]) {
-				dma_free_coherent(dev->hw_dev,
-						  devpriv->ui_DmaBufferSize[i],
-						  devpriv->
-						  ul_DmaBufferVirtual[i],
-						  devpriv->ul_DmaBufferHw[i]);
-			}
-		}
-	}
+	apci3120_dma_free(dev);
 }
 
 static struct comedi_driver apci3120_driver = {

commit 4e068bec48c6c25ce0be41a5e38edb5442665b1d
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Oct 14 10:44:49 2014 -0700

    staging: comedi: addi_apci_3120: separate from addi_common.h
    
    Remove the need to include addi_common.h by introducing a new private
    data definition. Only include the members that are actually used by
    the driver.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 9ba66d8ab04f..2f0b642cfbff 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -1,14 +1,12 @@
 #include <linux/module.h>
 #include <linux/pci.h>
+#include <linux/sched.h>
+#include <linux/interrupt.h>
 
 #include "../comedidev.h"
 #include "comedi_fc.h"
 #include "amcc_s5933.h"
 
-#include "addi-data/addi_common.h"
-
-#include "addi-data/hwdrv_apci3120.c"
-
 enum apci3120_boardid {
 	BOARD_APCI3120,
 	BOARD_APCI3001,
@@ -31,12 +29,44 @@ static const struct apci3120_board apci3120_boardtypes[] = {
 	},
 };
 
+struct apci3120_private {
+	int iobase;
+	int i_IobaseAmcc;
+	int i_IobaseAddon;
+	int i_IobaseReserved;
+	unsigned int ui_AiActualScan;
+	unsigned int ui_AiNbrofChannels;
+	unsigned int ui_AiChannelList[32];
+	unsigned int ui_AiReadData[32];
+	unsigned short us_UseDma;
+	unsigned char b_DmaDoubleBuffer;
+	unsigned int ui_DmaActualBuffer;
+	unsigned short *ul_DmaBufferVirtual[2];
+	dma_addr_t ul_DmaBufferHw[2];
+	unsigned int ui_DmaBufferSize[2];
+	unsigned int ui_DmaBufferUsesize[2];
+	unsigned char b_DigitalOutputRegister;
+	unsigned char b_TimerSelectMode;
+	unsigned char b_ModeSelectRegister;
+	unsigned short us_OutputRegister;
+	unsigned char b_Timer2Mode;
+	unsigned char b_Timer2Interrupt;
+	unsigned int ai_running:1;
+	unsigned char b_InterruptMode;
+	unsigned char b_EocEosInterrupt;
+	unsigned int ui_EocEosConversionTime;
+	unsigned char b_ExttrigEnable;
+	struct task_struct *tsk_Current;
+};
+
+#include "addi-data/hwdrv_apci3120.c"
+
 static int apci3120_auto_attach(struct comedi_device *dev,
 				unsigned long context)
 {
 	struct pci_dev *pcidev = comedi_to_pci_dev(dev);
 	const struct apci3120_board *this_board = NULL;
-	struct addi_private *devpriv;
+	struct apci3120_private *devpriv;
 	struct comedi_subdevice *s;
 	int ret, order, i;
 
@@ -163,7 +193,7 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 
 static void apci3120_detach(struct comedi_device *dev)
 {
-	struct addi_private *devpriv = dev->private;
+	struct apci3120_private *devpriv = dev->private;
 
 	if (dev->iobase)
 		apci3120_reset(dev);

commit 6a02623de52c574a68be09e03ce15abe378b85aa
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Oct 14 10:44:46 2014 -0700

    staging: comedi: addi_apci_3120: simplify analog input boardinfo
    
    There are two boards supported by this driver. One with 16-bit analog
    inputs and the other 12-bit analog inputs.
    
    Add a bit field flag, 'ai_is_16bit', to the boardinfo and remove the
    'i_AiMaxdata' member. Use the new flag to initialize tne analog input
    subdevice maxdata correctly.
    
    For aesthetics, adjust the whitespace in the boardinfo declaration.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index de1dabf72bb3..9ba66d8ab04f 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -16,19 +16,18 @@ enum apci3120_boardid {
 
 struct apci3120_board {
 	const char *name;
-	int i_AiMaxdata;
+	unsigned int ai_is_16bit:1;
 	unsigned int has_ao:1;
 };
 
 static const struct apci3120_board apci3120_boardtypes[] = {
 	[BOARD_APCI3120] = {
-		.name			= "apci3120",
-		.i_AiMaxdata		= 0xffff,
-		.has_ao			= 1,
+		.name		= "apci3120",
+		.ai_is_16bit	= 1,
+		.has_ao		= 1,
 	},
 	[BOARD_APCI3001] = {
-		.name			= "apci3001",
-		.i_AiMaxdata		= 0xfff,
+		.name		= "apci3001",
 	},
 };
 
@@ -103,7 +102,7 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 		SDF_READABLE | SDF_COMMON | SDF_GROUND
 		| SDF_DIFF;
 	s->n_chan = 16;
-	s->maxdata = this_board->i_AiMaxdata;
+	s->maxdata = this_board->ai_is_16bit ? 0xffff : 0x0fff;
 	s->len_chanlist = s->n_chan;
 	s->range_table = &range_apci3120_ai;
 

commit 2cd6b2b2a9ebca2d8ab9e74ac919a82e6eae45b3
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Oct 14 10:44:45 2014 -0700

    staging: comedi: addi_apci_3120: simplify analog output boardinfo
    
    There are two boards supported by this driver. One with eight 14-bit analog
    outputs and the other without analog outputs.
    
    Add a bit field flag, 'has_ao', to the boardinfo and remove the 'i_NbrAoChannel'
    and 'i_AoMaxdata' members. Use the new flag to determine if the analog output
    subdevice needs to be initialized and open code the n_chan and maxdata.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index d555427d3359..de1dabf72bb3 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -16,17 +16,15 @@ enum apci3120_boardid {
 
 struct apci3120_board {
 	const char *name;
-	int i_NbrAoChannel;
 	int i_AiMaxdata;
-	int i_AoMaxdata;
+	unsigned int has_ao:1;
 };
 
 static const struct apci3120_board apci3120_boardtypes[] = {
 	[BOARD_APCI3120] = {
 		.name			= "apci3120",
-		.i_NbrAoChannel		= 8,
 		.i_AiMaxdata		= 0xffff,
-		.i_AoMaxdata		= 0x3fff,
+		.has_ao			= 1,
 	},
 	[BOARD_APCI3001] = {
 		.name			= "apci3001",
@@ -117,12 +115,11 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 
 	/*  Allocate and Initialise AO Subdevice Structures */
 	s = &dev->subdevices[1];
-	if (this_board->i_NbrAoChannel) {
+	if (this_board->has_ao) {
 		s->type = COMEDI_SUBD_AO;
 		s->subdev_flags = SDF_WRITEABLE | SDF_GROUND | SDF_COMMON;
-		s->n_chan = this_board->i_NbrAoChannel;
-		s->maxdata = this_board->i_AoMaxdata;
-		s->len_chanlist = this_board->i_NbrAoChannel;
+		s->n_chan = 8;
+		s->maxdata = 0x3fff;
 		s->range_table = &range_apci3120_ao;
 		s->insn_write = apci3120_ao_insn_write;
 	} else {

commit 7fcf666b4a57b9317739f13a6a65d0dbecd47ca8
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Oct 14 10:44:44 2014 -0700

    staging: comedi: addi_apci_3120: remove boardinfo 'i_AiChannelList'
    
    All boardinfo entries have this member set as '16'. This is also the Analog
    Input 'n_chan'. For aesthetics, initialize the Analog Input 'len_chanlist'
    with s->n_chan and remove the boardinfo member.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 32e5ad487a1c..d555427d3359 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -16,7 +16,6 @@ enum apci3120_boardid {
 
 struct apci3120_board {
 	const char *name;
-	int i_AiChannelList;
 	int i_NbrAoChannel;
 	int i_AiMaxdata;
 	int i_AoMaxdata;
@@ -25,14 +24,12 @@ struct apci3120_board {
 static const struct apci3120_board apci3120_boardtypes[] = {
 	[BOARD_APCI3120] = {
 		.name			= "apci3120",
-		.i_AiChannelList	= 16,
 		.i_NbrAoChannel		= 8,
 		.i_AiMaxdata		= 0xffff,
 		.i_AoMaxdata		= 0x3fff,
 	},
 	[BOARD_APCI3001] = {
 		.name			= "apci3001",
-		.i_AiChannelList	= 16,
 		.i_AiMaxdata		= 0xfff,
 	},
 };
@@ -109,7 +106,7 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 		| SDF_DIFF;
 	s->n_chan = 16;
 	s->maxdata = this_board->i_AiMaxdata;
-	s->len_chanlist = this_board->i_AiChannelList;
+	s->len_chanlist = s->n_chan;
 	s->range_table = &range_apci3120_ai;
 
 	s->insn_config = apci3120_ai_insn_config;

commit 98ea9f854a2577b36e3a06d0824db5f51c514667
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Oct 14 10:44:43 2014 -0700

    staging: comedi: addi_apci_3120: remove boardinfo 'i_NbrAiChannel'
    
    All boardinfo entries have this member set as '16'. This will initialize
    the Analog Input 'n_chan' and cause the 'i_NbrAiChannelDiff' member to
    never get used. Remove both members and initialize the Analog Input 'n_chan'
    with 16 directly.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 18e0b1367ce4..32e5ad487a1c 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -16,8 +16,6 @@ enum apci3120_boardid {
 
 struct apci3120_board {
 	const char *name;
-	int i_NbrAiChannel;
-	int i_NbrAiChannelDiff;
 	int i_AiChannelList;
 	int i_NbrAoChannel;
 	int i_AiMaxdata;
@@ -27,8 +25,6 @@ struct apci3120_board {
 static const struct apci3120_board apci3120_boardtypes[] = {
 	[BOARD_APCI3120] = {
 		.name			= "apci3120",
-		.i_NbrAiChannel		= 16,
-		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
 		.i_NbrAoChannel		= 8,
 		.i_AiMaxdata		= 0xffff,
@@ -36,8 +32,6 @@ static const struct apci3120_board apci3120_boardtypes[] = {
 	},
 	[BOARD_APCI3001] = {
 		.name			= "apci3001",
-		.i_NbrAiChannel		= 16,
-		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
 		.i_AiMaxdata		= 0xfff,
 	},
@@ -113,10 +107,7 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 	s->subdev_flags =
 		SDF_READABLE | SDF_COMMON | SDF_GROUND
 		| SDF_DIFF;
-	if (this_board->i_NbrAiChannel)
-		s->n_chan = this_board->i_NbrAiChannel;
-	else
-		s->n_chan = this_board->i_NbrAiChannelDiff;
+	s->n_chan = 16;
 	s->maxdata = this_board->i_AiMaxdata;
 	s->len_chanlist = this_board->i_AiChannelList;
 	s->range_table = &range_apci3120_ai;

commit 171192d0d084ae432f9da25230e17d967ed7eeed
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Oct 14 10:44:42 2014 -0700

    staging: comedi: addi_apci_3120: remove boardinfo 'i_NbrDiChannel'
    
    All boardinfo entries have this member set as '4'. Remove the member and
    initialize the Digial Input 'n_chan' with 4 directly.
    
    Also, remove the initialization of 'len_chanlist'. This member is only
    used with subdevices that support async commands.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index fd6f64ab7fc1..18e0b1367ce4 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -22,7 +22,6 @@ struct apci3120_board {
 	int i_NbrAoChannel;
 	int i_AiMaxdata;
 	int i_AoMaxdata;
-	int i_NbrDiChannel;
 };
 
 static const struct apci3120_board apci3120_boardtypes[] = {
@@ -34,7 +33,6 @@ static const struct apci3120_board apci3120_boardtypes[] = {
 		.i_NbrAoChannel		= 8,
 		.i_AiMaxdata		= 0xffff,
 		.i_AoMaxdata		= 0x3fff,
-		.i_NbrDiChannel		= 4,
 	},
 	[BOARD_APCI3001] = {
 		.name			= "apci3001",
@@ -42,7 +40,6 @@ static const struct apci3120_board apci3120_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
 		.i_AiMaxdata		= 0xfff,
-		.i_NbrDiChannel		= 4,
 	},
 };
 
@@ -148,9 +145,8 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 	s = &dev->subdevices[2];
 	s->type = COMEDI_SUBD_DI;
 	s->subdev_flags = SDF_READABLE | SDF_GROUND | SDF_COMMON;
-	s->n_chan = this_board->i_NbrDiChannel;
+	s->n_chan = 4;
 	s->maxdata = 1;
-	s->len_chanlist = this_board->i_NbrDiChannel;
 	s->range_table = &range_digital;
 	s->insn_bits = apci3120_di_insn_bits;
 

commit 4241d6b82ddf080ce82f062281b93eb68c291298
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Oct 14 10:44:41 2014 -0700

    staging: comedi: addi_apci_3120: remove boardinfo 'i_NbrDoChannel'
    
    All boardinfo entries have this member set as '4'. Remove the member and
    initialize the Digial Output 'n_chan' with 4 directly.
    
    Also, remove the initialization of 'len_chanlist'. This member is only
    used with subdevices that support async commands.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 9f5d7a528945..fd6f64ab7fc1 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -23,7 +23,6 @@ struct apci3120_board {
 	int i_AiMaxdata;
 	int i_AoMaxdata;
 	int i_NbrDiChannel;
-	int i_NbrDoChannel;
 };
 
 static const struct apci3120_board apci3120_boardtypes[] = {
@@ -36,7 +35,6 @@ static const struct apci3120_board apci3120_boardtypes[] = {
 		.i_AiMaxdata		= 0xffff,
 		.i_AoMaxdata		= 0x3fff,
 		.i_NbrDiChannel		= 4,
-		.i_NbrDoChannel		= 4,
 	},
 	[BOARD_APCI3001] = {
 		.name			= "apci3001",
@@ -45,7 +43,6 @@ static const struct apci3120_board apci3120_boardtypes[] = {
 		.i_AiChannelList	= 16,
 		.i_AiMaxdata		= 0xfff,
 		.i_NbrDiChannel		= 4,
-		.i_NbrDoChannel		= 4,
 	},
 };
 
@@ -162,9 +159,8 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 	s->type = COMEDI_SUBD_DO;
 	s->subdev_flags =
 		SDF_READABLE | SDF_WRITEABLE | SDF_GROUND | SDF_COMMON;
-	s->n_chan = this_board->i_NbrDoChannel;
+	s->n_chan = 4;
 	s->maxdata = 1;
-	s->len_chanlist = this_board->i_NbrDoChannel;
 	s->range_table = &range_digital;
 	s->insn_bits = apci3120_do_insn_bits;
 

commit 73fc3c6c0516754c8b1ce5f8c0dcc54e0d37a9f0
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Oct 14 10:44:40 2014 -0700

    staging: comedi: addi_apci_3120: remove boardinfo 'i_DoMaxdata'
    
    The maxdata for a Digital Output subdevice is always '1'. Remove this
    incorrect boardinfo.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index ae81fdb2a97f..9f5d7a528945 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -24,7 +24,6 @@ struct apci3120_board {
 	int i_AoMaxdata;
 	int i_NbrDiChannel;
 	int i_NbrDoChannel;
-	int i_DoMaxdata;
 };
 
 static const struct apci3120_board apci3120_boardtypes[] = {
@@ -38,7 +37,6 @@ static const struct apci3120_board apci3120_boardtypes[] = {
 		.i_AoMaxdata		= 0x3fff,
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
-		.i_DoMaxdata		= 0x0f,
 	},
 	[BOARD_APCI3001] = {
 		.name			= "apci3001",
@@ -48,7 +46,6 @@ static const struct apci3120_board apci3120_boardtypes[] = {
 		.i_AiMaxdata		= 0xfff,
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
-		.i_DoMaxdata		= 0x0f,
 	},
 };
 
@@ -166,7 +163,7 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 	s->subdev_flags =
 		SDF_READABLE | SDF_WRITEABLE | SDF_GROUND | SDF_COMMON;
 	s->n_chan = this_board->i_NbrDoChannel;
-	s->maxdata = this_board->i_DoMaxdata;
+	s->maxdata = 1;
 	s->len_chanlist = this_board->i_NbrDoChannel;
 	s->range_table = &range_digital;
 	s->insn_bits = apci3120_do_insn_bits;

commit dbf502e4b8d7eb016321ac97489384f8ae404822
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Oct 14 10:44:38 2014 -0700

    staging: comedi: addi_common.h: remove boardinfo definition
    
    The addi_board definition is not only used by the addi_apci_3120 driver.
    
    Introduce a private definition in that driver and remove the global definition
    from addi_common.h.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 1fa53cf629fc..ae81fdb2a97f 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -14,7 +14,20 @@ enum apci3120_boardid {
 	BOARD_APCI3001,
 };
 
-static const struct addi_board apci3120_boardtypes[] = {
+struct apci3120_board {
+	const char *name;
+	int i_NbrAiChannel;
+	int i_NbrAiChannelDiff;
+	int i_AiChannelList;
+	int i_NbrAoChannel;
+	int i_AiMaxdata;
+	int i_AoMaxdata;
+	int i_NbrDiChannel;
+	int i_NbrDoChannel;
+	int i_DoMaxdata;
+};
+
+static const struct apci3120_board apci3120_boardtypes[] = {
 	[BOARD_APCI3120] = {
 		.name			= "apci3120",
 		.i_NbrAiChannel		= 16,
@@ -43,7 +56,7 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 				unsigned long context)
 {
 	struct pci_dev *pcidev = comedi_to_pci_dev(dev);
-	const struct addi_board *this_board = NULL;
+	const struct apci3120_board *this_board = NULL;
 	struct addi_private *devpriv;
 	struct comedi_subdevice *s;
 	int ret, order, i;

commit 23abae881b69b903b07b34a0bece086811d77271
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Oct 14 10:44:29 2014 -0700

    staging: comedi: addi_common.h: rename boardinfo 'pc_DriverName'
    
    Rename this CamelCase member of the boardinfo.
    
    The comedi_device 'board_name' is set to this member during the (*auto_attach)
    of the addi-data that still use this boardinfo drivers. For aesthetics, use
    the dev->board_name instead of the boardinfo in the drivers.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 38da44bd4eef..1fa53cf629fc 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -16,7 +16,7 @@ enum apci3120_boardid {
 
 static const struct addi_board apci3120_boardtypes[] = {
 	[BOARD_APCI3120] = {
-		.pc_DriverName		= "apci3120",
+		.name			= "apci3120",
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
@@ -28,7 +28,7 @@ static const struct addi_board apci3120_boardtypes[] = {
 		.i_DoMaxdata		= 0x0f,
 	},
 	[BOARD_APCI3001] = {
-		.pc_DriverName		= "apci3001",
+		.name			= "apci3001",
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
@@ -53,7 +53,7 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 	if (!this_board)
 		return -ENODEV;
 	dev->board_ptr = this_board;
-	dev->board_name = this_board->pc_DriverName;
+	dev->board_name = this_board->name;
 
 	devpriv = comedi_alloc_devpriv(dev, sizeof(*devpriv));
 	if (!devpriv)

commit 6c76d4e778a05c86f463a5bee3e2b06a9cc4396a
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Oct 14 10:44:20 2014 -0700

    staging: comedi: addi_common.c: remove v_ADDI_Interrupt()
    
    The addi_apci_035 and addi_apci_1500 are the only drivers left that use
    this function in addi_common.c. The function simply calls the 'interrupt'
    function that is in the boardinfo of the driver. Both drivers use the
    same 'interrupt' function for all boardnfo entries.
    
    Remove the i_ADDI_Reset() function as well as the 'interrupt' boardinfo
    and use the 'interrupt' function directly when doing the request_irq().
    
    In addition, the addi_apci_3120 driver has a private v_ADDI_Interrupt()
    function that is doing the same thing. Remove that one as well.
    
    Fix the return type of 'interrupt' functions in the drivers and add the
    return vaules.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index ba71e24a56fd..38da44bd4eef 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -26,7 +26,6 @@ static const struct addi_board apci3120_boardtypes[] = {
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
 		.i_DoMaxdata		= 0x0f,
-		.interrupt		= apci3120_interrupt,
 	},
 	[BOARD_APCI3001] = {
 		.pc_DriverName		= "apci3001",
@@ -37,19 +36,9 @@ static const struct addi_board apci3120_boardtypes[] = {
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
 		.i_DoMaxdata		= 0x0f,
-		.interrupt		= apci3120_interrupt,
 	},
 };
 
-static irqreturn_t v_ADDI_Interrupt(int irq, void *d)
-{
-	struct comedi_device *dev = d;
-	const struct addi_board *this_board = dev->board_ptr;
-
-	this_board->interrupt(irq, d);
-	return IRQ_RETVAL(1);
-}
-
 static int apci3120_auto_attach(struct comedi_device *dev,
 				unsigned long context)
 {
@@ -82,7 +71,7 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 	devpriv->i_IobaseReserved = pci_resource_start(pcidev, 3);
 
 	if (pcidev->irq > 0) {
-		ret = request_irq(pcidev->irq, v_ADDI_Interrupt, IRQF_SHARED,
+		ret = request_irq(pcidev->irq, apci3120_interrupt, IRQF_SHARED,
 				  dev->board_name, dev);
 		if (ret == 0)
 			dev->irq = pcidev->irq;

commit 062fdcada9858859b4c8a73322c4b0b718c779ff
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Fri Sep 12 12:19:57 2014 +0100

    staging: comedi: addi_apci_3120: simplify setting of devpriv->us_UseDma
    
    `apci3120_auto_attach()` first sets `devpriv->us_UseDma` to 1, then sets
    it back to 0 if it fails to allocate the DMA buffer.  Since `*devpriv`
    is initially zeroed out by `comedi_alloc_devpriv()`, change it to only
    set `devpriv->us_UseDma` to 1 if the allocation succeeds.  Also, don't
    bother explicitly initializing `devpriv->b_DmaDoubleBuffer` to 0 as it
    is already zeroed out.
    
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Reviewed-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 1025541fb4a3..ba71e24a56fd 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -88,10 +88,7 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 			dev->irq = pcidev->irq;
 	}
 
-	devpriv->us_UseDma = 1;
-
 	/* Allocate DMA buffers */
-	devpriv->b_DmaDoubleBuffer = 0;
 	for (i = 0; i < 2; i++) {
 		for (order = 2; order >= 0; order--) {
 			devpriv->ul_DmaBufferVirtual[i] =
@@ -106,8 +103,8 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 			break;
 		devpriv->ui_DmaBufferSize[i] = PAGE_SIZE << order;
 	}
-	if (!devpriv->ul_DmaBufferVirtual[0])
-		devpriv->us_UseDma = 0;
+	if (devpriv->ul_DmaBufferVirtual[0])
+		devpriv->us_UseDma = 1;
 
 	if (devpriv->ul_DmaBufferVirtual[1])
 		devpriv->b_DmaDoubleBuffer = 1;

commit fbfd9c8a1782f33d7b67294b2a42587063e61c0c
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Fri Sep 12 12:19:56 2014 +0100

    staging: comedi: addi_apci_3120: use dma_alloc_coherent()
    
    Use `dma_alloc_coherent()` to allocate the DMA buffers instead of
    using `__get_free_pages()` to allocate and `virt_to_bus()` to get the
    hardware address.  The coherent buffers are fairly small - at most 4
    pages (although there are two of them).  Use of `virt_to_bus()` is
    discouraged.
    
    Note: `struct addi_private` is used by some other ADDI-DATA drivers as
    well, but this is the only one using the affected members.
    
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Reviewed-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 57c36ed9588c..1025541fb4a3 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -95,17 +95,16 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 	for (i = 0; i < 2; i++) {
 		for (order = 2; order >= 0; order--) {
 			devpriv->ul_DmaBufferVirtual[i] =
-			    (void *)__get_free_pages(GFP_KERNEL, order);
+			    dma_alloc_coherent(dev->hw_dev, PAGE_SIZE << order,
+					       &devpriv->ul_DmaBufferHw[i],
+					       GFP_KERNEL);
 
 			if (devpriv->ul_DmaBufferVirtual[i])
 				break;
 		}
 		if (!devpriv->ul_DmaBufferVirtual[i])
 			break;
-		devpriv->ui_DmaBufferPageOrder[i] = order;
 		devpriv->ui_DmaBufferSize[i] = PAGE_SIZE << order;
-		devpriv->ul_DmaBufferHw[i] =
-		    virt_to_bus(devpriv->ul_DmaBufferVirtual[i]);
 	}
 	if (!devpriv->ul_DmaBufferVirtual[0])
 		devpriv->us_UseDma = 0;
@@ -198,15 +197,16 @@ static void apci3120_detach(struct comedi_device *dev)
 		apci3120_reset(dev);
 	comedi_pci_detach(dev);
 	if (devpriv) {
-		if (devpriv->ul_DmaBufferVirtual[0]) {
-			free_pages((unsigned long)devpriv->
-				ul_DmaBufferVirtual[0],
-				devpriv->ui_DmaBufferPageOrder[0]);
-		}
-		if (devpriv->ul_DmaBufferVirtual[1]) {
-			free_pages((unsigned long)devpriv->
-				ul_DmaBufferVirtual[1],
-				devpriv->ui_DmaBufferPageOrder[1]);
+		unsigned int i;
+
+		for (i = 0; i < 2; i++) {
+			if (devpriv->ul_DmaBufferVirtual[i]) {
+				dma_free_coherent(dev->hw_dev,
+						  devpriv->ui_DmaBufferSize[i],
+						  devpriv->
+						  ul_DmaBufferVirtual[i],
+						  devpriv->ul_DmaBufferHw[i]);
+			}
 		}
 	}
 }

commit 9c97e588d82e90ca74488cd16e8f804cbec75978
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Fri Sep 12 12:19:55 2014 +0100

    staging: comedi: addi_apci_3120: don't overallocate DMA buffer
    
    The last parameter of `__get_free_pages()` is log2 (the 'order') of the
    number of pages to be allocated.  This driver seems to think it is the
    linear number of pages, so `apci3120_auto_attach()` first tries to allocate
    16 pages, but only uses 4 of them, setting the buffer size to PAGE_SIZE
    multiplied by the 'order'.  If the allocation fails, it tries
    progressively smaller orders, down to 0.  If the allocation at order 0
    succeeds, the buffer size is set to 0, which is likely to cause
    problems.
    
    Set the buffer size to `PAGE_SIZE` shifted left by the allocation order.
    Since the maximum buffer size previously used was 4, start with an
    allocation order of 2 instead of 4.  Rename the `ui_DmaBufferPages` member of
    `struct addi_private` to `ui_DmaBufferPageOrder` and rename the `pages`
    local variable to `order` to make it clearer what it is.
    
    Note: `struct addi_private` is used by some other ADDI-DATA drivers as
    well, but this is the only one using the affected members.
    
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Reviewed-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 2ac95bab195d..57c36ed9588c 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -57,7 +57,7 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 	const struct addi_board *this_board = NULL;
 	struct addi_private *devpriv;
 	struct comedi_subdevice *s;
-	int ret, pages, i;
+	int ret, order, i;
 
 	if (context < ARRAY_SIZE(apci3120_boardtypes))
 		this_board = &apci3120_boardtypes[context];
@@ -93,17 +93,17 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 	/* Allocate DMA buffers */
 	devpriv->b_DmaDoubleBuffer = 0;
 	for (i = 0; i < 2; i++) {
-		for (pages = 4; pages >= 0; pages--) {
+		for (order = 2; order >= 0; order--) {
 			devpriv->ul_DmaBufferVirtual[i] =
-				(void *) __get_free_pages(GFP_KERNEL, pages);
+			    (void *)__get_free_pages(GFP_KERNEL, order);
 
 			if (devpriv->ul_DmaBufferVirtual[i])
 				break;
 		}
 		if (!devpriv->ul_DmaBufferVirtual[i])
 			break;
-		devpriv->ui_DmaBufferPages[i] = pages;
-		devpriv->ui_DmaBufferSize[i] = PAGE_SIZE * pages;
+		devpriv->ui_DmaBufferPageOrder[i] = order;
+		devpriv->ui_DmaBufferSize[i] = PAGE_SIZE << order;
 		devpriv->ul_DmaBufferHw[i] =
 		    virt_to_bus(devpriv->ul_DmaBufferVirtual[i]);
 	}
@@ -201,12 +201,12 @@ static void apci3120_detach(struct comedi_device *dev)
 		if (devpriv->ul_DmaBufferVirtual[0]) {
 			free_pages((unsigned long)devpriv->
 				ul_DmaBufferVirtual[0],
-				devpriv->ui_DmaBufferPages[0]);
+				devpriv->ui_DmaBufferPageOrder[0]);
 		}
 		if (devpriv->ul_DmaBufferVirtual[1]) {
 			free_pages((unsigned long)devpriv->
 				ul_DmaBufferVirtual[1],
-				devpriv->ui_DmaBufferPages[1]);
+				devpriv->ui_DmaBufferPageOrder[1]);
 		}
 	}
 }

commit df567feb00277ddee715f61e4616eaae50532ea0
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Fri Sep 12 12:19:54 2014 +0100

    staging: comedi: addi_apci_3120: don't allocate 2nd DMA buffer on failure
    
    `apci3120_auto_attach()` tries to allocate two DMA buffers but may
    allocate a single buffer or none at all.  If it fails to allocate the
    first buffer, it still tries to allocate the second buffer, even though
    it won't be used.  Change it to not bother trying to allocate the second
    buffer if the first one fails.
    
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Reviewed-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 84501a30e377..2ac95bab195d 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -100,13 +100,12 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 			if (devpriv->ul_DmaBufferVirtual[i])
 				break;
 		}
-		if (devpriv->ul_DmaBufferVirtual[i]) {
-			devpriv->ui_DmaBufferPages[i] = pages;
-			devpriv->ui_DmaBufferSize[i] = PAGE_SIZE * pages;
-			devpriv->ul_DmaBufferHw[i] =
-				virt_to_bus((void *)devpriv->
-				ul_DmaBufferVirtual[i]);
-		}
+		if (!devpriv->ul_DmaBufferVirtual[i])
+			break;
+		devpriv->ui_DmaBufferPages[i] = pages;
+		devpriv->ui_DmaBufferSize[i] = PAGE_SIZE * pages;
+		devpriv->ul_DmaBufferHw[i] =
+		    virt_to_bus(devpriv->ul_DmaBufferVirtual[i]);
 	}
 	if (!devpriv->ul_DmaBufferVirtual[0])
 		devpriv->us_UseDma = 0;

commit db2d623bf0ff73b7d4a72a474f2276da5fe886d1
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Tue Sep 9 11:26:13 2014 +0100

    staging: comedi: addi_apci_3120: replace comedi_board() calls
    
    The `comedi_board(dev)` inline function calls just return
    `dev->board_ptr`.  Expand the inline function calls.
    
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Reviewed-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 050c72493298..84501a30e377 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -44,7 +44,7 @@ static const struct addi_board apci3120_boardtypes[] = {
 static irqreturn_t v_ADDI_Interrupt(int irq, void *d)
 {
 	struct comedi_device *dev = d;
-	const struct addi_board *this_board = comedi_board(dev);
+	const struct addi_board *this_board = dev->board_ptr;
 
 	this_board->interrupt(irq, d);
 	return IRQ_RETVAL(1);

commit aac307f9dd5ce1fe651140a036ab4b0a0571b54a
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Aug 25 17:55:48 2014 -0700

    staging: comedi: comedi_pci: introduce comedi_pci_detach()
    
    Introduce a generic (*detach) function for comedi PCI drivers to handle
    the boilerplate code needed to detach a PCI driver.
    
    This function works similar to comedi_legacy_detach() where it will:
    
      * free the dev->irq if it has been requested
      * iounmap the dev->mmio addres if it has been ioremap'ed
    
    The helper then calls comedi_pci_disable() to release the regions and
    disable the PCI device.
    
    Use the new helper directly for the (*detach) in the following cases:
    
      * where comedi_pci_disable() is used directly for the (*detach)
      * where the detach function is just boilerplate
    
    Use the new helper in the (*detach) of the simpler PCI drivers. Call
    the helper after disabling interrupts (reset) and before any additional
    cleanup (kfree) to avoid any race conditions with the interrupt handler.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 0b77f1012d47..050c72493298 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -195,11 +195,10 @@ static void apci3120_detach(struct comedi_device *dev)
 {
 	struct addi_private *devpriv = dev->private;
 
+	if (dev->iobase)
+		apci3120_reset(dev);
+	comedi_pci_detach(dev);
 	if (devpriv) {
-		if (dev->iobase)
-			apci3120_reset(dev);
-		if (dev->irq)
-			free_irq(dev->irq, dev);
 		if (devpriv->ul_DmaBufferVirtual[0]) {
 			free_pages((unsigned long)devpriv->
 				ul_DmaBufferVirtual[0],
@@ -211,7 +210,6 @@ static void apci3120_detach(struct comedi_device *dev)
 				devpriv->ui_DmaBufferPages[1]);
 		}
 	}
-	comedi_pci_disable(dev);
 }
 
 static struct comedi_driver apci3120_driver = {

commit 223a6402c51c066537b976a7302028c8579ebe09
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Thu May 29 10:30:02 2014 -0700

    staging: comedi: addi_common.h: remove ADDI_{EN, DIS}ABLE defines
    
    These defines don't add any additional clarity to the addi_data drivers.
    They are also only used in the addi_apci_3120 driver. Just remove them.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index cc4f586ba20d..0b77f1012d47 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -88,7 +88,7 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 			dev->irq = pcidev->irq;
 	}
 
-	devpriv->us_UseDma = ADDI_ENABLE;
+	devpriv->us_UseDma = 1;
 
 	/* Allocate DMA buffers */
 	devpriv->b_DmaDoubleBuffer = 0;
@@ -109,7 +109,7 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 		}
 	}
 	if (!devpriv->ul_DmaBufferVirtual[0])
-		devpriv->us_UseDma = ADDI_DISABLE;
+		devpriv->us_UseDma = 0;
 
 	if (devpriv->ul_DmaBufferVirtual[1])
 		devpriv->b_DmaDoubleBuffer = 1;

commit 301b1ffcbe8f4282e1717fdf21f3fefce94cda7e
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Thu May 29 10:30:00 2014 -0700

    staging: comedi: addi_common.h: remove 'b_SingleDiff' from private data
    
    This member is set but never used. Just remove it.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 0cfb12fa1cbc..cc4f586ba20d 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -125,13 +125,10 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 	s->subdev_flags =
 		SDF_READABLE | SDF_COMMON | SDF_GROUND
 		| SDF_DIFF;
-	if (this_board->i_NbrAiChannel) {
+	if (this_board->i_NbrAiChannel)
 		s->n_chan = this_board->i_NbrAiChannel;
-		devpriv->b_SingelDiff = 0;
-	} else {
+	else
 		s->n_chan = this_board->i_NbrAiChannelDiff;
-		devpriv->b_SingelDiff = 1;
-	}
 	s->maxdata = this_board->i_AiMaxdata;
 	s->len_chanlist = this_board->i_AiChannelList;
 	s->range_table = &range_apci3120_ai;

commit b5ebcaa8d3405e14ca431257fd6c6cdc30df13c5
Author: Georg Gast <georg@schorsch-tech.de>
Date:   Tue Apr 8 18:52:58 2014 +0200

    staging: comedi: more descriptive names for addi-data drivers
    
    - more descriptive module description for following boards:
      ADDI-DATA APCI 1032/1500/1564/2032/3120
    
    Signed-off-by: Georg Gast <georg@schorsch-tech.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 57ee6e5c7635..0cfb12fa1cbc 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -246,5 +246,5 @@ static struct pci_driver apci3120_pci_driver = {
 module_comedi_pci_driver(apci3120_driver, apci3120_pci_driver);
 
 MODULE_AUTHOR("Comedi http://www.comedi.org");
-MODULE_DESCRIPTION("Comedi low-level driver");
+MODULE_DESCRIPTION("ADDI-DATA APCI-3120, Analog input board");
 MODULE_LICENSE("GPL");

commit 805077b90c5a290ec050d5003a4ea9e37be48453
Author: Fred Akers <knivey@botops.net>
Date:   Tue Mar 11 18:19:12 2014 -0400

    Staging: comedi: addi-data: Fix long CamelCase function names
    
    This patch fixes a few function names that are very long and are
    not in the correct naming style
    
    Signed-off-by: Fred Akers <knivey@botops.net>
    Reviewed-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 1e6fa56c516e..57ee6e5c7635 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -26,7 +26,7 @@ static const struct addi_board apci3120_boardtypes[] = {
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
 		.i_DoMaxdata		= 0x0f,
-		.interrupt		= v_APCI3120_Interrupt,
+		.interrupt		= apci3120_interrupt,
 	},
 	[BOARD_APCI3001] = {
 		.pc_DriverName		= "apci3001",
@@ -37,7 +37,7 @@ static const struct addi_board apci3120_boardtypes[] = {
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
 		.i_DoMaxdata		= 0x0f,
-		.interrupt		= v_APCI3120_Interrupt,
+		.interrupt		= apci3120_interrupt,
 	},
 };
 
@@ -136,11 +136,11 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 	s->len_chanlist = this_board->i_AiChannelList;
 	s->range_table = &range_apci3120_ai;
 
-	s->insn_config = i_APCI3120_InsnConfigAnalogInput;
-	s->insn_read = i_APCI3120_InsnReadAnalogInput;
-	s->do_cmdtest = i_APCI3120_CommandTestAnalogInput;
-	s->do_cmd = i_APCI3120_CommandAnalogInput;
-	s->cancel = i_APCI3120_StopCyclicAcquisition;
+	s->insn_config = apci3120_ai_insn_config;
+	s->insn_read = apci3120_ai_insn_read;
+	s->do_cmdtest = apci3120_ai_cmdtest;
+	s->do_cmd = apci3120_ai_cmd;
+	s->cancel = apci3120_cancel;
 
 	/*  Allocate and Initialise AO Subdevice Structures */
 	s = &dev->subdevices[1];
@@ -151,7 +151,7 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 		s->maxdata = this_board->i_AoMaxdata;
 		s->len_chanlist = this_board->i_NbrAoChannel;
 		s->range_table = &range_apci3120_ao;
-		s->insn_write = i_APCI3120_InsnWriteAnalogOutput;
+		s->insn_write = apci3120_ao_insn_write;
 	} else {
 		s->type = COMEDI_SUBD_UNUSED;
 	}
@@ -186,11 +186,11 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 	s->len_chanlist = 1;
 	s->range_table = &range_digital;
 
-	s->insn_write = i_APCI3120_InsnWriteTimer;
-	s->insn_read = i_APCI3120_InsnReadTimer;
-	s->insn_config = i_APCI3120_InsnConfigTimer;
+	s->insn_write = apci3120_write_insn_timer;
+	s->insn_read = apci3120_read_insn_timer;
+	s->insn_config = apci3120_config_insn_timer;
 
-	i_APCI3120_Reset(dev);
+	apci3120_reset(dev);
 	return 0;
 }
 
@@ -200,7 +200,7 @@ static void apci3120_detach(struct comedi_device *dev)
 
 	if (devpriv) {
 		if (dev->iobase)
-			i_APCI3120_Reset(dev);
+			apci3120_reset(dev);
 		if (dev->irq)
 			free_irq(dev->irq, dev);
 		if (devpriv->ul_DmaBufferVirtual[0]) {

commit 41e043fcfa2236bb2c4a8335eb09f4c8cee224b3
Author: Jingoo Han <jg1.han@samsung.com>
Date:   Tue Dec 3 08:26:00 2013 +0900

    staging: remove DEFINE_PCI_DEVICE_TABLE macro
    
    Don't use DEFINE_PCI_DEVICE_TABLE macro, because this macro
    is not preferred.
    
    Signed-off-by: Jingoo Han <jg1.han@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 67d09e8afb2e..1e6fa56c516e 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -230,7 +230,7 @@ static int apci3120_pci_probe(struct pci_dev *dev,
 	return comedi_pci_auto_config(dev, &apci3120_driver, id->driver_data);
 }
 
-static DEFINE_PCI_DEVICE_TABLE(apci3120_pci_table) = {
+static const struct pci_device_id apci3120_pci_table[] = {
 	{ PCI_VDEVICE(AMCC, 0x818d), BOARD_APCI3120 },
 	{ PCI_VDEVICE(AMCC, 0x828d), BOARD_APCI3001 },
 	{ 0 }

commit 09567cb4373e962a3079bb06352e1e5452d9a340
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Fri Aug 30 10:47:03 2013 -0700

    staging: comedi: initialize subdevice s->io_bits in postconfig
    
    The subdevice 'io_bits' is a bit mask of the i/o configuration for
    digital subdevices. '0' values indicate that a channel is configured
    as an input and '1' values that the channel is an output. Since the
    subdevice data is kzalloc()'d, all channels default as inputs.
    
    Modify __comedi_device_postconfig() so that 'io_bits' is correctly
    initialized for Digital Output subdevices.
    
    Remove all the unnecessary initializations of 's->io_bits' from the
    drivers. Also, remove the unnecessary initialization of the 's->state'.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index d804957018ab..67d09e8afb2e 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -164,7 +164,6 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 	s->maxdata = 1;
 	s->len_chanlist = this_board->i_NbrDiChannel;
 	s->range_table = &range_digital;
-	s->io_bits = 0;	/* all bits input */
 	s->insn_bits = apci3120_di_insn_bits;
 
 	/*  Allocate and Initialise DO Subdevice Structures */
@@ -176,7 +175,6 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 	s->maxdata = this_board->i_DoMaxdata;
 	s->len_chanlist = this_board->i_NbrDoChannel;
 	s->range_table = &range_digital;
-	s->io_bits = 0xf;	/* all bits output */
 	s->insn_bits = apci3120_do_insn_bits;
 
 	/*  Allocate and Initialise Timer Subdevice Structures */

commit ce157f8032bbd46d9427034c335b0afd751da25d
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Jun 24 17:04:43 2013 -0700

    staging: comedi: don't rely on comedidev.h to include headers
    
    comedidev.h is the main kernel header for comedi. Every comedi
    driver includes this header which then includes a number of
    <linux/*> headers. All the drivers need <linux/module.h> and some
    of them need <linux/delay.h>. The rest are not needed by any of
    the drivers.
    
    Remove all the includes in comedidev.h except for <linux/dma-mapping.h>,
    which is needed to pick up the enum dma_data_direction for the
    comedi_subdevice definition, and "comedi.h", which is the uapi
    header for comedi.
    
    Add <linux/module.h> to all the comedi drivers and <linux/delay.h>
    to the couple that need it.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index a7828bb64a91..d804957018ab 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -1,3 +1,4 @@
+#include <linux/module.h>
 #include <linux/pci.h>
 
 #include "../comedidev.h"

commit 0bdab509bf9c6d838dc0a3b1d68bbf841fc20b5a
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Jun 24 16:55:44 2013 -0700

    staging: comedi: use comedi_alloc_devpriv()
    
    Use the helper function to allocate memory and set the comedi_device
    private data pointer.
    
    This removes the dependency on slab.h from most of the drivers so
    remove the global #include in comedidev.h and the local #include
    in some of the drivers.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 61452848510f..a7828bb64a91 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -65,10 +65,9 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 	dev->board_ptr = this_board;
 	dev->board_name = this_board->pc_DriverName;
 
-	devpriv = kzalloc(sizeof(*devpriv), GFP_KERNEL);
+	devpriv = comedi_alloc_devpriv(dev, sizeof(*devpriv));
 	if (!devpriv)
 		return -ENOMEM;
-	dev->private = devpriv;
 
 	ret = comedi_pci_enable(dev);
 	if (ret)

commit 7e5c304c5bec82b9187e73ae8fa398ee9b25dbfd
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Jun 18 12:13:49 2013 -0700

    staging: comedi: addi-data: remove unused vars from private data
    
    Due to the on-going cleanup of the addi-data drivers, the private
    data used in the "common" code has a number of variables that
    either are not used at all or or set but never used.
    
    Remove all of them from the private data and the unnecessary use
    in the drivers.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 317a26d97c2e..61452848510f 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -103,8 +103,6 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 		if (devpriv->ul_DmaBufferVirtual[i]) {
 			devpriv->ui_DmaBufferPages[i] = pages;
 			devpriv->ui_DmaBufferSize[i] = PAGE_SIZE * pages;
-			devpriv->ui_DmaBufferSamples[i] =
-				devpriv->ui_DmaBufferSize[i] >> 1;
 			devpriv->ul_DmaBufferHw[i] =
 				virt_to_bus((void *)devpriv->
 				ul_DmaBufferVirtual[i]);
@@ -138,9 +136,6 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 	s->len_chanlist = this_board->i_AiChannelList;
 	s->range_table = &range_apci3120_ai;
 
-	/* Set the initialisation flag */
-	devpriv->b_AiInitialisation = 1;
-
 	s->insn_config = i_APCI3120_InsnConfigAnalogInput;
 	s->insn_read = i_APCI3120_InsnReadAnalogInput;
 	s->do_cmdtest = i_APCI3120_CommandTestAnalogInput;

commit aee351b28ccc7b966a14c8a8e146c6b74d4717cc
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Fri Apr 12 15:01:10 2013 +0100

    staging: comedi: addi_apci_*: replace ADDIDATA_OLD with AMCC
    
    PCI vendor ID 0x10e8 is assigned to Applied Micro Circuits Corporation
    (recently AppliedMicro, but AMCC on NASDAQ).  The ID currently appears
    as `PCI_VENDOR_ID_ADDIDATA_OLD` in "include/linux/pci_ids.h" and is used
    by the "addi_apci_1500", "addi_apci_1710" and "addi_apci_3120" comedi
    drivers.  (It is also used by the "8250_pci" serial driver.)
    
    "comedidev.h" defines `PCI_VENDOR_ID_AMCC` locally with the same value
    as `PCI_VENDOR_ID_ADDIDATA_OLD` and is currently used by the
    "adl_pci9118" comedi driver.  Despite `PCI_VENDOR_ID_ADDIDATA_OLD` being
    in "pci_ids.h", `PCI_VENDOR_ID_AMCC` is a more sensible name, so change
    the comedi drivers to use it.
    
    Once several drivers are using `PCI_VENDOR_ID_AMCC` we'll have a good
    excuse to move it into "pci_ids.h" and change the "8250_pci" serial
    driver to use it.
    
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Reviewed-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 1c5ac16aad15..317a26d97c2e 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -238,8 +238,8 @@ static int apci3120_pci_probe(struct pci_dev *dev,
 }
 
 static DEFINE_PCI_DEVICE_TABLE(apci3120_pci_table) = {
-	{ PCI_VDEVICE(ADDIDATA_OLD, 0x818d), BOARD_APCI3120 },
-	{ PCI_VDEVICE(ADDIDATA_OLD, 0x828d), BOARD_APCI3001 },
+	{ PCI_VDEVICE(AMCC, 0x818d), BOARD_APCI3120 },
+	{ PCI_VDEVICE(AMCC, 0x828d), BOARD_APCI3001 },
 	{ 0 }
 };
 MODULE_DEVICE_TABLE(pci, apci3120_pci_table);

commit 818f569fe930c5b8a05d1a44ece3c63c99c13c88
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Mar 13 10:36:31 2013 -0700

    staging: comedi_pci: pass comedi_device to comedi_pci_enable()
    
    Make comedi_pci_enable() use the same parameter type as
    comedi_pci_disable(). This also allows comedi_pci_enable
    to automatically determine the resource name passed to
    pci_request_regions().
    
    Make sure the errno value returned is passed on instead of
    assuming an errno. Also, remove any kernel noise that is
    generated when the call fails.
    
    The National Instruments drivers that use the mite module
    currently enable the PCI device in the mite module. For
    those drivers move the call to comedi_pci_enable into the
    driver.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 056153157e51..1c5ac16aad15 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -70,7 +70,7 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 		return -ENOMEM;
 	dev->private = devpriv;
 
-	ret = comedi_pci_enable(pcidev, dev->board_name);
+	ret = comedi_pci_enable(dev);
 	if (ret)
 		return ret;
 	pci_set_master(pcidev);

commit 7f072f54ae5dc9965cbe450419b1389d13e2b849
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Mar 13 10:35:51 2013 -0700

    staging: comedi_pci: make comedi_pci_disable() safe to call
    
    Currently all the comedi PCI drivers need to do some checking in
    their (*detach) before calling comedi_pci_disable() in order to
    make sure the PCI device has actually be enabled.
    
    Change the parameter passed to comedi_pci_disable() from a struct
    pci_dev pointer to a comedi_device pointer and have comedi_pci_disable()
    handle all the checking.
    
    For most comedi PCI drivers this also allows removing the local
    variable holding the pointer to the pci_dev. For some of the drivers
    comedi_pci_disable can now be used directly as the (*detach) function.
    
    The National Instruments drivers that use the mite module currently
    enable/disable the PCI device in the mite module. For those drivers
    move the call to comedi_pci_disable into the driver and make sure
    dev->iobase is set to a non-zero value.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 07bcb388fc5f..056153157e51 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -203,7 +203,6 @@ static int apci3120_auto_attach(struct comedi_device *dev,
 
 static void apci3120_detach(struct comedi_device *dev)
 {
-	struct pci_dev *pcidev = comedi_to_pci_dev(dev);
 	struct addi_private *devpriv = dev->private;
 
 	if (devpriv) {
@@ -222,10 +221,7 @@ static void apci3120_detach(struct comedi_device *dev)
 				devpriv->ui_DmaBufferPages[1]);
 		}
 	}
-	if (pcidev) {
-		if (dev->iobase)
-			comedi_pci_disable(pcidev);
-	}
+	comedi_pci_disable(dev);
 }
 
 static struct comedi_driver apci3120_driver = {

commit 1df0e5b0ca97e2aeaa2be8241ea840f06b4dabfa
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Mar 5 09:58:01 2013 -0700

    staging: comedi: addi_apci_3120: use the pci id_table 'driver_data'
    
    Create an enum to the boardinfo and pass that enum in the pci_driver
    id_table as the driver_data.
    
    Change the macro used to fill in the device table from PCI_DEVICE() to
    PCI_VDEVICE(). This allows passing the enum as the next field.
    
    This allows removing the 'i_VendorId' and 'i_DeviceId' data from the
    boardinfo as well the search function that was used to locate the
    boardinfo for the PCI device.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 6ecdaab77585..07bcb388fc5f 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -8,11 +8,14 @@
 
 #include "addi-data/hwdrv_apci3120.c"
 
+enum apci3120_boardid {
+	BOARD_APCI3120,
+	BOARD_APCI3001,
+};
+
 static const struct addi_board apci3120_boardtypes[] = {
-	{
+	[BOARD_APCI3120] = {
 		.pc_DriverName		= "apci3120",
-		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA_OLD,
-		.i_DeviceId		= 0x818D,
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
@@ -23,10 +26,9 @@ static const struct addi_board apci3120_boardtypes[] = {
 		.i_NbrDoChannel		= 4,
 		.i_DoMaxdata		= 0x0f,
 		.interrupt		= v_APCI3120_Interrupt,
-	}, {
+	},
+	[BOARD_APCI3001] = {
 		.pc_DriverName		= "apci3001",
-		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA_OLD,
-		.i_DeviceId		= 0x828D,
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
@@ -47,31 +49,17 @@ static irqreturn_t v_ADDI_Interrupt(int irq, void *d)
 	return IRQ_RETVAL(1);
 }
 
-static const void *apci3120_find_boardinfo(struct comedi_device *dev,
-					   struct pci_dev *pcidev)
-{
-	const struct addi_board *this_board;
-	int i;
-
-	for (i = 0; i < ARRAY_SIZE(apci3120_boardtypes); i++) {
-		this_board = &apci3120_boardtypes[i];
-		if (this_board->i_VendorId == pcidev->vendor &&
-		    this_board->i_DeviceId == pcidev->device)
-			return this_board;
-	}
-	return NULL;
-}
-
 static int apci3120_auto_attach(struct comedi_device *dev,
-					  unsigned long context_unused)
+				unsigned long context)
 {
 	struct pci_dev *pcidev = comedi_to_pci_dev(dev);
-	const struct addi_board *this_board;
+	const struct addi_board *this_board = NULL;
 	struct addi_private *devpriv;
 	struct comedi_subdevice *s;
 	int ret, pages, i;
 
-	this_board = apci3120_find_boardinfo(dev, pcidev);
+	if (context < ARRAY_SIZE(apci3120_boardtypes))
+		this_board = &apci3120_boardtypes[context];
 	if (!this_board)
 		return -ENODEV;
 	dev->board_ptr = this_board;
@@ -254,8 +242,8 @@ static int apci3120_pci_probe(struct pci_dev *dev,
 }
 
 static DEFINE_PCI_DEVICE_TABLE(apci3120_pci_table) = {
-	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA_OLD, 0x818d) },
-	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA_OLD, 0x828d) },
+	{ PCI_VDEVICE(ADDIDATA_OLD, 0x818d), BOARD_APCI3120 },
+	{ PCI_VDEVICE(ADDIDATA_OLD, 0x828d), BOARD_APCI3001 },
 	{ 0 }
 };
 MODULE_DEVICE_TABLE(pci, apci3120_pci_table);

commit b8f4ac237e382accd4b30c75043939f7ed9e79a6
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Mar 5 09:53:41 2013 -0700

    staging: comedi: comedi_pci: change the comedi_pci_auto_config() 'context'
    
    The comedi_pci_auto_config() function is used to allow the PCI driver
    (*probe) function to automatically call the comedi driver (*auto_attach).
    This allows the comedi driver to be part of the PnP process when the
    PCI device is detected.
    
    Currently the comedi_pci_auto_config() always passes a 'context' of '0'
    to comedi_auto_config(). This makes the 'context' a bit useless.
    
    Modify comedi_pci_auto_config() to allow the comedi pci drivers to pass
    a 'context' from the PCI driver.
    
    Make all the comedi pci drivers pass the pci_device_id 'driver_data' as
    the 'context'. Since none of the comedi pci drivers currently set the
    'driver_data' the 'context' will still be '0'.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 917234d24e99..6ecdaab77585 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -248,9 +248,9 @@ static struct comedi_driver apci3120_driver = {
 };
 
 static int apci3120_pci_probe(struct pci_dev *dev,
-					const struct pci_device_id *ent)
+			      const struct pci_device_id *id)
 {
-	return comedi_pci_auto_config(dev, &apci3120_driver);
+	return comedi_pci_auto_config(dev, &apci3120_driver, id->driver_data);
 }
 
 static DEFINE_PCI_DEVICE_TABLE(apci3120_pci_table) = {

commit 33782dd5edf8db3cdb7c81a3523bf743dd0209b7
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jan 30 15:22:21 2013 -0700

    staging: comedi: conditionally build in PCI driver support
    
    Separate the comedi_pci_* functions out of drivers.c into a new
    source file, comedi_pci.c. This allows conditionally building
    support for comedi PCI drivers into the comedi core. Fix the
    Kconfig and Makefile appropriately.
    
    Group all the comedi_pci_* prototypes and related defines into one
    place in comedidev.h. Protect these prototypes with an #ifdef and
    provide some dummy functions so that the mixed ISA/PCI comedi
    drivers will still build correctly.
    
    Remove the #include <linux/pci.h> from comedidev.h and drivers.c. This
    include is only needed by the comedi PCI driver support code and the
    PCI drivers. The include should occur in those files.
    
    Also, remove the #include <linux/pci.h> from a couple non-PCI drivers
    since it's not needed.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 8cad18f7fc49..917234d24e99 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -1,3 +1,5 @@
+#include <linux/pci.h>
+
 #include "../comedidev.h"
 #include "comedi_fc.h"
 #include "amcc_s5933.h"

commit 9901a4d75d007686e8f6473189cafc4b216b7449
Author: Peter Huewe <peterhuewe@gmx.de>
Date:   Tue Jan 22 23:40:03 2013 +0100

    staging/comedi: Use comedi_pci_auto_unconfig directly for pci_driver.remove
    
    (Almost) all comedi pci drivers have some wrapper for their
    pci_driver.remove function which simply calls comedi_pci_auto_unconfig
    which has the same function prototype as the wrapper.
    
    -> we can remove these wrappers and call comedi_pci_auto_unconfig
    directly. This removes a lot some boilerplate code and saves some bytes.
    
    Signed-off-by: Peter Huewe <peterhuewe@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index fec2962affc7..8cad18f7fc49 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -251,11 +251,6 @@ static int apci3120_pci_probe(struct pci_dev *dev,
 	return comedi_pci_auto_config(dev, &apci3120_driver);
 }
 
-static void apci3120_pci_remove(struct pci_dev *dev)
-{
-	comedi_pci_auto_unconfig(dev);
-}
-
 static DEFINE_PCI_DEVICE_TABLE(apci3120_pci_table) = {
 	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA_OLD, 0x818d) },
 	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA_OLD, 0x828d) },
@@ -267,7 +262,7 @@ static struct pci_driver apci3120_pci_driver = {
 	.name		= "addi_apci_3120",
 	.id_table	= apci3120_pci_table,
 	.probe		= apci3120_pci_probe,
-	.remove		= apci3120_pci_remove,
+	.remove		= comedi_pci_auto_unconfig,
 };
 module_comedi_pci_driver(apci3120_driver, apci3120_pci_driver);
 

commit 53b800198592b0ff96577ecc5f116f7d902a4362
Author: Bill Pemberton <wfp5p@virginia.edu>
Date:   Mon Nov 19 13:26:36 2012 -0500

    staging: comedi: remove use of __devexit
    
    CONFIG_HOTPLUG is going away as an option so __devexit is no
    longer needed.
    
    Signed-off-by: Bill Pemberton <wfp5p@virginia.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 86e34c406e82..fec2962affc7 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -251,7 +251,7 @@ static int apci3120_pci_probe(struct pci_dev *dev,
 	return comedi_pci_auto_config(dev, &apci3120_driver);
 }
 
-static void __devexit apci3120_pci_remove(struct pci_dev *dev)
+static void apci3120_pci_remove(struct pci_dev *dev)
 {
 	comedi_pci_auto_unconfig(dev);
 }

commit a690b7e535f2f97a3a05ee570715abeb60a8910f
Author: Bill Pemberton <wfp5p@virginia.edu>
Date:   Mon Nov 19 13:21:58 2012 -0500

    staging: comedi: remove use of __devinit
    
    CONFIG_HOTPLUG is going away as an option so __devinit is no longer
    needed.
    
    Signed-off-by: Bill Pemberton <wfp5p@virginia.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 77a9fe933f06..86e34c406e82 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -60,7 +60,7 @@ static const void *apci3120_find_boardinfo(struct comedi_device *dev,
 	return NULL;
 }
 
-static int __devinit apci3120_auto_attach(struct comedi_device *dev,
+static int apci3120_auto_attach(struct comedi_device *dev,
 					  unsigned long context_unused)
 {
 	struct pci_dev *pcidev = comedi_to_pci_dev(dev);
@@ -245,7 +245,7 @@ static struct comedi_driver apci3120_driver = {
 	.detach		= apci3120_detach,
 };
 
-static int __devinit apci3120_pci_probe(struct pci_dev *dev,
+static int apci3120_pci_probe(struct pci_dev *dev,
 					const struct pci_device_id *ent)
 {
 	return comedi_pci_auto_config(dev, &apci3120_driver);

commit a471eace7baa40cdf16d3f26b2f78ddce613ca8f
Author: Bill Pemberton <wfp5p@virginia.edu>
Date:   Mon Nov 19 13:21:37 2012 -0500

    staging: comedi: remove use of __devexit_p
    
    CONFIG_HOTPLUG is going away as an option so __devexit_p is no longer
    needed.
    
    Signed-off-by: Bill Pemberton <wfp5p@virginia.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 34aab504d350..77a9fe933f06 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -267,7 +267,7 @@ static struct pci_driver apci3120_pci_driver = {
 	.name		= "addi_apci_3120",
 	.id_table	= apci3120_pci_table,
 	.probe		= apci3120_pci_probe,
-	.remove		= __devexit_p(apci3120_pci_remove),
+	.remove		= apci3120_pci_remove,
 };
 module_comedi_pci_driver(apci3120_driver, apci3120_pci_driver);
 

commit 891e62c33d9cdbcdb8adfaddd111e91a39d0f5fe
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Tue Nov 6 11:16:59 2012 -0700

    staging: comedi: addi_apci_*: use auto_attach instead of attach_pci
    
    Change the remaining addi-data drivers so they attach using the generic
    'auto_attach' method instead the pci specific 'attach_pci' method. The
    'attach_pci' is deprecated and is going to be removed.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index f65f8271807d..34aab504d350 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -60,9 +60,10 @@ static const void *apci3120_find_boardinfo(struct comedi_device *dev,
 	return NULL;
 }
 
-static int apci3120_attach_pci(struct comedi_device *dev,
-			       struct pci_dev *pcidev)
+static int __devinit apci3120_auto_attach(struct comedi_device *dev,
+					  unsigned long context_unused)
 {
+	struct pci_dev *pcidev = comedi_to_pci_dev(dev);
 	const struct addi_board *this_board;
 	struct addi_private *devpriv;
 	struct comedi_subdevice *s;
@@ -240,7 +241,7 @@ static void apci3120_detach(struct comedi_device *dev)
 static struct comedi_driver apci3120_driver = {
 	.driver_name	= "addi_apci_3120",
 	.module		= THIS_MODULE,
-	.attach_pci	= apci3120_attach_pci,
+	.auto_attach	= apci3120_auto_attach,
 	.detach		= apci3120_detach,
 };
 

commit b96450712fe3c67b1a4660425c581691ac888612
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Tue Nov 6 10:06:07 2012 -0700

    staging: comedi: addi_apci_3120: remove i_APCI3120_InsnConfigDigitalOutput()
    
    The digital outputs of the board supported by this driver are not
    configurable. This driver abuses the comedi API and uses the 'insn_config'
    function of the digital output subdevice to enable/disable writing to
    the eeprom on the board. Remove this function.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 1326a2ec42b5..f65f8271807d 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -191,9 +191,6 @@ static int apci3120_attach_pci(struct comedi_device *dev,
 	s->len_chanlist = this_board->i_NbrDoChannel;
 	s->range_table = &range_digital;
 	s->io_bits = 0xf;	/* all bits output */
-
-	/* insn_config - for digital output memory */
-	s->insn_config = i_APCI3120_InsnConfigDigitalOutput;
 	s->insn_bits = apci3120_do_insn_bits;
 
 	/*  Allocate and Initialise Timer Subdevice Structures */

commit 66511843c55b1124a8527b041cdde4bd1ae75422
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Tue Nov 6 10:04:56 2012 -0700

    staging: comedi: addi_apci_3120: fix digital output 'insn_bits' function
    
    This driver does not follow the comedi API. The digital output 'insn_bits'
    function is passed a mask value in data[0] indicating which output bits in
    data[1] are changing. The function is then supposed to update the outputs
    accordingly and then return the current state of the outputs in data[1].
    
    Currently this driver uses the 'insn_write' function to update either a
    single or all the output channels. And it uses the 'insn_bits' function
    to read either a single or all the output channel states.
    
    Fix the 'insn_bits' function so it works like the comedi core expects. The
    core can then use the function to emulate the 'insn_read' and 'insn_write'
    functions for individual channels.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index bd53a0cb61c7..1326a2ec42b5 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -194,8 +194,7 @@ static int apci3120_attach_pci(struct comedi_device *dev,
 
 	/* insn_config - for digital output memory */
 	s->insn_config = i_APCI3120_InsnConfigDigitalOutput;
-	s->insn_write = i_APCI3120_InsnWriteDigitalOutput;
-	s->insn_bits = i_APCI3120_InsnBitsDigitalOutput;
+	s->insn_bits = apci3120_do_insn_bits;
 
 	/*  Allocate and Initialise Timer Subdevice Structures */
 	s = &dev->subdevices[4];

commit a7f4b3ca602c1918c84b0ff2a8ddcb65aa998a82
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Tue Nov 6 10:04:26 2012 -0700

    staging: comedi: addi_apci_3120: fix digital input 'insn_bits' function
    
    This driver does not follow the comedi API. The digital input 'insn_bits'
    function is supposed to return the status of all the input channels in
    data[1]. Currently this function returns the status in data[0].
    
    Fix the function so it works like the comedi core expects. The core can
    then use the function to emulate the 'insn_read' function for individual
    channels.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index da3112624b72..bd53a0cb61c7 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -179,8 +179,7 @@ static int apci3120_attach_pci(struct comedi_device *dev,
 	s->len_chanlist = this_board->i_NbrDiChannel;
 	s->range_table = &range_digital;
 	s->io_bits = 0;	/* all bits input */
-	s->insn_read = i_APCI3120_InsnReadDigitalInput;
-	s->insn_bits = i_APCI3120_InsnBitsDigitalInput;
+	s->insn_bits = apci3120_di_insn_bits;
 
 	/*  Allocate and Initialise DO Subdevice Structures */
 	s = &dev->subdevices[3];

commit 60eebfad7a2191176fd8af323c1fc6821c8cd61a
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Thu Nov 1 17:31:10 2012 -0700

    staging: comedi: addi_apci_3120: cleanup addi_find_boardinfo()
    
    This driver uses the comedi PCI auto attach mechanism and the comedi
    core does not use the boardinfo during the attach.
    
    Now that this driver has the attach separated from addi_common.c we
    can remove passing the boardinfo in the comedi_driver and cleanup
    the code that finds the boardinfo.
    
    Also, rename addi_find_boardinfo() so it has namespace associated
    with this driver.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 9b9ca004635c..da3112624b72 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -45,19 +45,17 @@ static irqreturn_t v_ADDI_Interrupt(int irq, void *d)
 	return IRQ_RETVAL(1);
 }
 
-static const void *addi_find_boardinfo(struct comedi_device *dev,
-				       struct pci_dev *pcidev)
+static const void *apci3120_find_boardinfo(struct comedi_device *dev,
+					   struct pci_dev *pcidev)
 {
-	const void *p = dev->driver->board_name;
 	const struct addi_board *this_board;
 	int i;
 
-	for (i = 0; i < dev->driver->num_names; i++) {
-		this_board = p;
+	for (i = 0; i < ARRAY_SIZE(apci3120_boardtypes); i++) {
+		this_board = &apci3120_boardtypes[i];
 		if (this_board->i_VendorId == pcidev->vendor &&
 		    this_board->i_DeviceId == pcidev->device)
 			return this_board;
-		p += dev->driver->offset;
 	}
 	return NULL;
 }
@@ -70,7 +68,7 @@ static int apci3120_attach_pci(struct comedi_device *dev,
 	struct comedi_subdevice *s;
 	int ret, pages, i;
 
-	this_board = addi_find_boardinfo(dev, pcidev);
+	this_board = apci3120_find_boardinfo(dev, pcidev);
 	if (!this_board)
 		return -ENODEV;
 	dev->board_ptr = this_board;
@@ -249,9 +247,6 @@ static struct comedi_driver apci3120_driver = {
 	.module		= THIS_MODULE,
 	.attach_pci	= apci3120_attach_pci,
 	.detach		= apci3120_detach,
-	.num_names	= ARRAY_SIZE(apci3120_boardtypes),
-	.board_name	= &apci3120_boardtypes[0].pc_DriverName,
-	.offset		= sizeof(struct addi_board),
 };
 
 static int __devinit apci3120_pci_probe(struct pci_dev *dev,

commit 7dd2358156285dc525d309dd1347d4fdab5c0773
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Thu Nov 1 17:30:53 2012 -0700

    staging: comedi: addi_apci_3120: remove COMEDI_SUBD_TTLIO define
    
    This define is not used by the driver. Remove it.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index e87d400df4f0..9b9ca004635c 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -6,10 +6,6 @@
 
 #include "addi-data/hwdrv_apci3120.c"
 
-#ifndef COMEDI_SUBD_TTLIO
-#define COMEDI_SUBD_TTLIO   11	/* Digital Input Output But TTL */
-#endif
-
 static const struct addi_board apci3120_boardtypes[] = {
 	{
 		.pc_DriverName		= "apci3120",

commit 97641816b58fccaf157ab5093f55f0a319d7a55f
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Thu Nov 1 17:30:37 2012 -0700

    staging: comedi: addi_apci_3120: cleanup apci3120_detach()
    
    This driver always tried to allocate the dma buffers so they need to
    be free'd when the board is detached.
    
    Remove the unneeded tests for the eeprom chip and bring the code
    back an indent.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 6ca3a3c66139..e87d400df4f0 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -223,7 +223,6 @@ static int apci3120_attach_pci(struct comedi_device *dev,
 
 static void apci3120_detach(struct comedi_device *dev)
 {
-	const struct addi_board *this_board = comedi_board(dev);
 	struct pci_dev *pcidev = comedi_to_pci_dev(dev);
 	struct addi_private *devpriv = dev->private;
 
@@ -232,20 +231,15 @@ static void apci3120_detach(struct comedi_device *dev)
 			i_APCI3120_Reset(dev);
 		if (dev->irq)
 			free_irq(dev->irq, dev);
-		if ((this_board->pc_EepromChip == NULL) ||
-		    (strcmp(this_board->pc_EepromChip, ADDIDATA_9054) != 0)) {
-			if (devpriv->ul_DmaBufferVirtual[0]) {
-				free_pages((unsigned long)devpriv->
-					ul_DmaBufferVirtual[0],
-					devpriv->ui_DmaBufferPages[0]);
-			}
-			if (devpriv->ul_DmaBufferVirtual[1]) {
-				free_pages((unsigned long)devpriv->
-					ul_DmaBufferVirtual[1],
-					devpriv->ui_DmaBufferPages[1]);
-			}
-		} else {
-			iounmap(devpriv->dw_AiBase);
+		if (devpriv->ul_DmaBufferVirtual[0]) {
+			free_pages((unsigned long)devpriv->
+				ul_DmaBufferVirtual[0],
+				devpriv->ui_DmaBufferPages[0]);
+		}
+		if (devpriv->ul_DmaBufferVirtual[1]) {
+			free_pages((unsigned long)devpriv->
+				ul_DmaBufferVirtual[1],
+				devpriv->ui_DmaBufferPages[1]);
 		}
 	}
 	if (pcidev) {

commit 0bb482e25c6c4e5084a0e0847307736bf090adec
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Thu Nov 1 17:30:17 2012 -0700

    staging: comedi: addi_apci_3120: clarify AO subdevice init
    
    Only the apci3120 board supports an analog output subdevice. The
    boardinfo indicates this by setting the 'i_NbrAoChannel' value.
    
    The range table as well as the function used for the insn_write
    operation are fixed for the analog outputs. Remove this information
    from the boardinfo and use it directly in the subdevice init.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 9eb49ed5955b..6ca3a3c66139 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -21,12 +21,10 @@ static const struct addi_board apci3120_boardtypes[] = {
 		.i_NbrAoChannel		= 8,
 		.i_AiMaxdata		= 0xffff,
 		.i_AoMaxdata		= 0x3fff,
-		.pr_AoRangelist		= &range_apci3120_ao,
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
 		.i_DoMaxdata		= 0x0f,
 		.interrupt		= v_APCI3120_Interrupt,
-		.ao_write		= i_APCI3120_InsnWriteAnalogOutput,
 	}, {
 		.pc_DriverName		= "apci3001",
 		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA_OLD,
@@ -172,9 +170,8 @@ static int apci3120_attach_pci(struct comedi_device *dev,
 		s->n_chan = this_board->i_NbrAoChannel;
 		s->maxdata = this_board->i_AoMaxdata;
 		s->len_chanlist = this_board->i_NbrAoChannel;
-		s->range_table = this_board->pr_AoRangelist;
-		s->insn_config = this_board->ao_config;
-		s->insn_write = this_board->ao_write;
+		s->range_table = &range_apci3120_ao;
+		s->insn_write = i_APCI3120_InsnWriteAnalogOutput;
 	} else {
 		s->type = COMEDI_SUBD_UNUSED;
 	}

commit 2e8fcd182002b37378caea900296026577aced03
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Thu Nov 1 17:30:02 2012 -0700

    staging: comedi: addi_apci_3120: remove 'b_AvailableConvertUnit'
    
    This boardinfo value is not used by the driver. Remove it.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 9ec6bb19954f..9eb49ed5955b 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -25,7 +25,6 @@ static const struct addi_board apci3120_boardtypes[] = {
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
 		.i_DoMaxdata		= 0x0f,
-		.b_AvailableConvertUnit	= 1,
 		.interrupt		= v_APCI3120_Interrupt,
 		.ao_write		= i_APCI3120_InsnWriteAnalogOutput,
 	}, {
@@ -39,7 +38,6 @@ static const struct addi_board apci3120_boardtypes[] = {
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
 		.i_DoMaxdata		= 0x0f,
-		.b_AvailableConvertUnit	= 1,
 		.interrupt		= v_APCI3120_Interrupt,
 	},
 };

commit dfb8a4abe90db760b87308f47f8a74eb17288ba1
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Thu Nov 1 17:29:46 2012 -0700

    staging: comedi: addi_apci_3120: remove 'ui_MinDelaytimeNs'
    
    Both boards supported by this driver have the same minimum delay time.
    Remove the boardinfo for it and just open code the value in
    i_APCI3120_CommandTestAnalogInput().
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 8e32fbbf3547..9ec6bb19954f 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -26,7 +26,6 @@ static const struct addi_board apci3120_boardtypes[] = {
 		.i_NbrDoChannel		= 4,
 		.i_DoMaxdata		= 0x0f,
 		.b_AvailableConvertUnit	= 1,
-		.ui_MinDelaytimeNs	= 100000,
 		.interrupt		= v_APCI3120_Interrupt,
 		.ao_write		= i_APCI3120_InsnWriteAnalogOutput,
 	}, {
@@ -41,7 +40,6 @@ static const struct addi_board apci3120_boardtypes[] = {
 		.i_NbrDoChannel		= 4,
 		.i_DoMaxdata		= 0x0f,
 		.b_AvailableConvertUnit	= 1,
-		.ui_MinDelaytimeNs	= 100000,
 		.interrupt		= v_APCI3120_Interrupt,
 	},
 };

commit 97e998de5dd8c06900badb6822bf81497448c92a
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Thu Nov 1 17:29:30 2012 -0700

    staging: comedi: addi_apci_3120: remove 'ui_MinAcquisitiontimeNs'
    
    Both boards supported by this driver have the same minimum acquisition
    time.. Remove the boardinfo for it and just open code the value in
    i_APCI3120_CommandTestAnalogInput().
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index a2fe789f01ea..8e32fbbf3547 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -26,7 +26,6 @@ static const struct addi_board apci3120_boardtypes[] = {
 		.i_NbrDoChannel		= 4,
 		.i_DoMaxdata		= 0x0f,
 		.b_AvailableConvertUnit	= 1,
-		.ui_MinAcquisitiontimeNs = 10000,
 		.ui_MinDelaytimeNs	= 100000,
 		.interrupt		= v_APCI3120_Interrupt,
 		.ao_write		= i_APCI3120_InsnWriteAnalogOutput,
@@ -42,7 +41,6 @@ static const struct addi_board apci3120_boardtypes[] = {
 		.i_NbrDoChannel		= 4,
 		.i_DoMaxdata		= 0x0f,
 		.b_AvailableConvertUnit	= 1,
-		.ui_MinAcquisitiontimeNs = 10000,
 		.ui_MinDelaytimeNs	= 100000,
 		.interrupt		= v_APCI3120_Interrupt,
 	},

commit 1ba296b95613d279e9bb6ec93420a42159074782
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Thu Nov 1 17:29:13 2012 -0700

    staging: comedi: addi_apci_3120: remove 'pr_AiRangelist'
    
    Both boards supported by this driver have the same analog input
    ranges. Remove the boardinfo for it and just init the subdevice
    directly.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 7a18f7a381aa..a2fe789f01ea 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -21,7 +21,6 @@ static const struct addi_board apci3120_boardtypes[] = {
 		.i_NbrAoChannel		= 8,
 		.i_AiMaxdata		= 0xffff,
 		.i_AoMaxdata		= 0x3fff,
-		.pr_AiRangelist		= &range_apci3120_ai,
 		.pr_AoRangelist		= &range_apci3120_ao,
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
@@ -39,7 +38,6 @@ static const struct addi_board apci3120_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
 		.i_AiMaxdata		= 0xfff,
-		.pr_AiRangelist		= &range_apci3120_ai,
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
 		.i_DoMaxdata		= 0x0f,
@@ -161,7 +159,7 @@ static int apci3120_attach_pci(struct comedi_device *dev,
 	}
 	s->maxdata = this_board->i_AiMaxdata;
 	s->len_chanlist = this_board->i_AiChannelList;
-	s->range_table = this_board->pr_AiRangelist;
+	s->range_table = &range_apci3120_ai;
 
 	/* Set the initialisation flag */
 	devpriv->b_AiInitialisation = 1;

commit 65fe75a627dee4fcf23c8872213e88a273d735ec
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Thu Nov 1 17:28:57 2012 -0700

    staging: comedi: addi_apci_3120: remove the 'i_IorangeBase*'
    
    These values in the boardinfor were used in the common addi-data
    attach code to work out use of the PCI bars. Since this driver
    has a localized attach we already know the use of the bars so
    this information in the boardinfo is unnecessary.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 9ef9275c8775..7a18f7a381aa 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -15,9 +15,6 @@ static const struct addi_board apci3120_boardtypes[] = {
 		.pc_DriverName		= "apci3120",
 		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA_OLD,
 		.i_DeviceId		= 0x818D,
-		.i_IorangeBase0		= AMCC_OP_REG_SIZE,
-		.i_IorangeBase1		= APCI3120_ADDRESS_RANGE,
-		.i_IorangeBase2		= 8,
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
@@ -38,9 +35,6 @@ static const struct addi_board apci3120_boardtypes[] = {
 		.pc_DriverName		= "apci3001",
 		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA_OLD,
 		.i_DeviceId		= 0x828D,
-		.i_IorangeBase0		= AMCC_OP_REG_SIZE,
-		.i_IorangeBase1		= APCI3120_ADDRESS_RANGE,
-		.i_IorangeBase2		= 8,
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
@@ -106,11 +100,7 @@ static int apci3120_attach_pci(struct comedi_device *dev,
 		return ret;
 	pci_set_master(pcidev);
 
-	if (this_board->i_IorangeBase1)
-		dev->iobase = pci_resource_start(pcidev, 1);
-	else
-		dev->iobase = pci_resource_start(pcidev, 0);
-
+	dev->iobase = pci_resource_start(pcidev, 1);
 	devpriv->iobase = dev->iobase;
 	devpriv->i_IobaseAmcc = pci_resource_start(pcidev, 0);
 	devpriv->i_IobaseAddon = pci_resource_start(pcidev, 2);

commit aea9c4e284a10f7154ecc4af50d0a2778053aacb
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Thu Nov 1 17:28:41 2012 -0700

    staging: comedi: addi_apci_3120: fix the number of subdevices
    
    The addi-data "common" code always allocates 7 subdevices. This
    driver is now separate from that code so we can remove the unused
    subdevices.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index dfe4ba173f88..9ef9275c8775 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -88,7 +88,7 @@ static int apci3120_attach_pci(struct comedi_device *dev,
 	const struct addi_board *this_board;
 	struct addi_private *devpriv;
 	struct comedi_subdevice *s;
-	int ret, pages, i, n_subdevices;
+	int ret, pages, i;
 
 	this_board = addi_find_boardinfo(dev, pcidev);
 	if (!this_board)
@@ -151,8 +151,7 @@ static int apci3120_attach_pci(struct comedi_device *dev,
 	if (devpriv->ul_DmaBufferVirtual[1])
 		devpriv->b_DmaDoubleBuffer = 1;
 
-	n_subdevices = 7;
-	ret = comedi_alloc_subdevices(dev, n_subdevices);
+	ret = comedi_alloc_subdevices(dev, 5);
 	if (ret)
 		return ret;
 
@@ -239,14 +238,6 @@ static int apci3120_attach_pci(struct comedi_device *dev,
 	s->insn_read = i_APCI3120_InsnReadTimer;
 	s->insn_config = i_APCI3120_InsnConfigTimer;
 
-	/*  Allocate and Initialise TTL */
-	s = &dev->subdevices[5];
-	s->type = COMEDI_SUBD_UNUSED;
-
-	/* EEPROM */
-	s = &dev->subdevices[6];
-	s->type = COMEDI_SUBD_UNUSED;
-
 	i_APCI3120_Reset(dev);
 	return 0;
 }

commit f538c37ded4b33765cc942b1e2e64f1504db4101
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Thu Nov 1 17:28:24 2012 -0700

    staging: comedi: addi_apci_3120: remove i_ADDI_Reset()
    
    This driver is now separate from the "common" code used with the
    addi-data drivers. There is no need to use i_ADDI_Reset() to call
    the correct "reset" function.
    
    Remove the i_ADDI_Reset() function and the 'reset' pointer to the
    real function from the boardinfo and just call the function directly
    where needed.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index e4be0e66a6fc..dfe4ba173f88 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -33,7 +33,6 @@ static const struct addi_board apci3120_boardtypes[] = {
 		.ui_MinAcquisitiontimeNs = 10000,
 		.ui_MinDelaytimeNs	= 100000,
 		.interrupt		= v_APCI3120_Interrupt,
-		.reset			= i_APCI3120_Reset,
 		.ao_write		= i_APCI3120_InsnWriteAnalogOutput,
 	}, {
 		.pc_DriverName		= "apci3001",
@@ -54,7 +53,6 @@ static const struct addi_board apci3120_boardtypes[] = {
 		.ui_MinAcquisitiontimeNs = 10000,
 		.ui_MinDelaytimeNs	= 100000,
 		.interrupt		= v_APCI3120_Interrupt,
-		.reset			= i_APCI3120_Reset,
 	},
 };
 
@@ -67,14 +65,6 @@ static irqreturn_t v_ADDI_Interrupt(int irq, void *d)
 	return IRQ_RETVAL(1);
 }
 
-static int i_ADDI_Reset(struct comedi_device *dev)
-{
-	const struct addi_board *this_board = comedi_board(dev);
-
-	this_board->reset(dev);
-	return 0;
-}
-
 static const void *addi_find_boardinfo(struct comedi_device *dev,
 				       struct pci_dev *pcidev)
 {
@@ -257,7 +247,7 @@ static int apci3120_attach_pci(struct comedi_device *dev,
 	s = &dev->subdevices[6];
 	s->type = COMEDI_SUBD_UNUSED;
 
-	i_ADDI_Reset(dev);
+	i_APCI3120_Reset(dev);
 	return 0;
 }
 
@@ -269,7 +259,7 @@ static void apci3120_detach(struct comedi_device *dev)
 
 	if (devpriv) {
 		if (dev->iobase)
-			i_ADDI_Reset(dev);
+			i_APCI3120_Reset(dev);
 		if (dev->irq)
 			free_irq(dev->irq, dev);
 		if ((this_board->pc_EepromChip == NULL) ||

commit 2a8796d65cec1985148e08308adef3e7f5eccbda
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Thu Nov 1 17:28:11 2012 -0700

    staging: comedi: addi_apci_3120: clarify AI subdevice init
    
    The two boards supported by this driver use the same functions for
    the comedi operations. Remove this data from the boardinfo to clarify
    the subdevice init.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index b0b91e51c2fa..e4be0e66a6fc 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -34,11 +34,6 @@ static const struct addi_board apci3120_boardtypes[] = {
 		.ui_MinDelaytimeNs	= 100000,
 		.interrupt		= v_APCI3120_Interrupt,
 		.reset			= i_APCI3120_Reset,
-		.ai_config		= i_APCI3120_InsnConfigAnalogInput,
-		.ai_read		= i_APCI3120_InsnReadAnalogInput,
-		.ai_cmdtest		= i_APCI3120_CommandTestAnalogInput,
-		.ai_cmd			= i_APCI3120_CommandAnalogInput,
-		.ai_cancel		= i_APCI3120_StopCyclicAcquisition,
 		.ao_write		= i_APCI3120_InsnWriteAnalogOutput,
 	}, {
 		.pc_DriverName		= "apci3001",
@@ -60,11 +55,6 @@ static const struct addi_board apci3120_boardtypes[] = {
 		.ui_MinDelaytimeNs	= 100000,
 		.interrupt		= v_APCI3120_Interrupt,
 		.reset			= i_APCI3120_Reset,
-		.ai_config		= i_APCI3120_InsnConfigAnalogInput,
-		.ai_read		= i_APCI3120_InsnReadAnalogInput,
-		.ai_cmdtest		= i_APCI3120_CommandTestAnalogInput,
-		.ai_cmd			= i_APCI3120_CommandAnalogInput,
-		.ai_cancel		= i_APCI3120_StopCyclicAcquisition,
 	},
 };
 
@@ -197,13 +187,11 @@ static int apci3120_attach_pci(struct comedi_device *dev,
 	/* Set the initialisation flag */
 	devpriv->b_AiInitialisation = 1;
 
-	s->insn_config = this_board->ai_config;
-	s->insn_read = this_board->ai_read;
-	s->insn_write = this_board->ai_write;
-	s->insn_bits = this_board->ai_bits;
-	s->do_cmdtest = this_board->ai_cmdtest;
-	s->do_cmd = this_board->ai_cmd;
-	s->cancel = this_board->ai_cancel;
+	s->insn_config = i_APCI3120_InsnConfigAnalogInput;
+	s->insn_read = i_APCI3120_InsnReadAnalogInput;
+	s->do_cmdtest = i_APCI3120_CommandTestAnalogInput;
+	s->do_cmd = i_APCI3120_CommandAnalogInput;
+	s->cancel = i_APCI3120_StopCyclicAcquisition;
 
 	/*  Allocate and Initialise AO Subdevice Structures */
 	s = &dev->subdevices[1];

commit e0f8f2d26d8ec9cd6597fa119107c5d6d2d0343e
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Thu Nov 1 17:27:47 2012 -0700

    The two boards supported by this driver use the same functions for
    the comedi operations. Remove this data from the boardinfo to clarify
    the subdevice init.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 3a1b1e46ffdf..b0b91e51c2fa 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -40,8 +40,6 @@ static const struct addi_board apci3120_boardtypes[] = {
 		.ai_cmd			= i_APCI3120_CommandAnalogInput,
 		.ai_cancel		= i_APCI3120_StopCyclicAcquisition,
 		.ao_write		= i_APCI3120_InsnWriteAnalogOutput,
-		.di_read		= i_APCI3120_InsnReadDigitalInput,
-		.di_bits		= i_APCI3120_InsnBitsDigitalInput,
 	}, {
 		.pc_DriverName		= "apci3001",
 		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA_OLD,
@@ -67,8 +65,6 @@ static const struct addi_board apci3120_boardtypes[] = {
 		.ai_cmdtest		= i_APCI3120_CommandTestAnalogInput,
 		.ai_cmd			= i_APCI3120_CommandAnalogInput,
 		.ai_cancel		= i_APCI3120_StopCyclicAcquisition,
-		.di_read		= i_APCI3120_InsnReadDigitalInput,
-		.di_bits		= i_APCI3120_InsnBitsDigitalInput,
 	},
 };
 
@@ -233,10 +229,8 @@ static int apci3120_attach_pci(struct comedi_device *dev,
 	s->len_chanlist = this_board->i_NbrDiChannel;
 	s->range_table = &range_digital;
 	s->io_bits = 0;	/* all bits input */
-	s->insn_config = this_board->di_config;
-	s->insn_read = this_board->di_read;
-	s->insn_write = this_board->di_write;
-	s->insn_bits = this_board->di_bits;
+	s->insn_read = i_APCI3120_InsnReadDigitalInput;
+	s->insn_bits = i_APCI3120_InsnBitsDigitalInput;
 
 	/*  Allocate and Initialise DO Subdevice Structures */
 	s = &dev->subdevices[3];

commit d8b29d6aa677ec0c3428d8d61a59c2bc61290eb7
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Thu Nov 1 17:27:33 2012 -0700

    staging: comedi: addi_apci_3120: clarify DO subdevice init
    
    The two boards supported by this driver use the same functions for
    the comedi operations. Remove this data from the boardinfo to clarify
    the subdevice init.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 03edcc8dc874..3a1b1e46ffdf 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -42,9 +42,6 @@ static const struct addi_board apci3120_boardtypes[] = {
 		.ao_write		= i_APCI3120_InsnWriteAnalogOutput,
 		.di_read		= i_APCI3120_InsnReadDigitalInput,
 		.di_bits		= i_APCI3120_InsnBitsDigitalInput,
-		.do_config		= i_APCI3120_InsnConfigDigitalOutput,
-		.do_write		= i_APCI3120_InsnWriteDigitalOutput,
-		.do_bits		= i_APCI3120_InsnBitsDigitalOutput,
 	}, {
 		.pc_DriverName		= "apci3001",
 		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA_OLD,
@@ -72,9 +69,6 @@ static const struct addi_board apci3120_boardtypes[] = {
 		.ai_cancel		= i_APCI3120_StopCyclicAcquisition,
 		.di_read		= i_APCI3120_InsnReadDigitalInput,
 		.di_bits		= i_APCI3120_InsnBitsDigitalInput,
-		.do_config		= i_APCI3120_InsnConfigDigitalOutput,
-		.do_write		= i_APCI3120_InsnWriteDigitalOutput,
-		.do_bits		= i_APCI3120_InsnBitsDigitalOutput,
 	},
 };
 
@@ -256,10 +250,9 @@ static int apci3120_attach_pci(struct comedi_device *dev,
 	s->io_bits = 0xf;	/* all bits output */
 
 	/* insn_config - for digital output memory */
-	s->insn_config = this_board->do_config;
-	s->insn_write = this_board->do_write;
-	s->insn_bits = this_board->do_bits;
-	s->insn_read = this_board->do_read;
+	s->insn_config = i_APCI3120_InsnConfigDigitalOutput;
+	s->insn_write = i_APCI3120_InsnWriteDigitalOutput;
+	s->insn_bits = i_APCI3120_InsnBitsDigitalOutput;
 
 	/*  Allocate and Initialise Timer Subdevice Structures */
 	s = &dev->subdevices[4];

commit 8f1ff0a38a18fd21696df8b1c1307265aa9db6ae
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Thu Nov 1 17:27:18 2012 -0700

    staging: comedi: addi_apci_3120: clarify timer subdevice init
    
    The two boards supported by this driver use the same functions for
    the comedi operations. Remove this data from the boardinfo to clarify
    the subdevice init.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 9bf2ebab9ea2..03edcc8dc874 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -45,9 +45,6 @@ static const struct addi_board apci3120_boardtypes[] = {
 		.do_config		= i_APCI3120_InsnConfigDigitalOutput,
 		.do_write		= i_APCI3120_InsnWriteDigitalOutput,
 		.do_bits		= i_APCI3120_InsnBitsDigitalOutput,
-		.timer_config		= i_APCI3120_InsnConfigTimer,
-		.timer_write		= i_APCI3120_InsnWriteTimer,
-		.timer_read		= i_APCI3120_InsnReadTimer,
 	}, {
 		.pc_DriverName		= "apci3001",
 		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA_OLD,
@@ -78,9 +75,6 @@ static const struct addi_board apci3120_boardtypes[] = {
 		.do_config		= i_APCI3120_InsnConfigDigitalOutput,
 		.do_write		= i_APCI3120_InsnWriteDigitalOutput,
 		.do_bits		= i_APCI3120_InsnBitsDigitalOutput,
-		.timer_config		= i_APCI3120_InsnConfigTimer,
-		.timer_write		= i_APCI3120_InsnWriteTimer,
-		.timer_read		= i_APCI3120_InsnReadTimer,
 	},
 };
 
@@ -276,10 +270,9 @@ static int apci3120_attach_pci(struct comedi_device *dev,
 	s->len_chanlist = 1;
 	s->range_table = &range_digital;
 
-	s->insn_write = this_board->timer_write;
-	s->insn_read = this_board->timer_read;
-	s->insn_config = this_board->timer_config;
-	s->insn_bits = this_board->timer_bits;
+	s->insn_write = i_APCI3120_InsnWriteTimer;
+	s->insn_read = i_APCI3120_InsnReadTimer;
+	s->insn_config = i_APCI3120_InsnConfigTimer;
 
 	/*  Allocate and Initialise TTL */
 	s = &dev->subdevices[5];

commit 50231a91efda18612ebe76ed51ff970707756f34
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Thu Nov 1 17:27:03 2012 -0700

    staging: comedi: addi_apci_3120: remove test for AI subdevice
    
    The boards supported by this driver all have analog inputs.
    Remove the test for it.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 3282c54f6116..9bf2ebab9ea2 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -194,37 +194,32 @@ static int apci3120_attach_pci(struct comedi_device *dev,
 
 	/*  Allocate and Initialise AI Subdevice Structures */
 	s = &dev->subdevices[0];
-	if (this_board->i_NbrAiChannel || (this_board->i_NbrAiChannelDiff)) {
-		dev->read_subdev = s;
-		s->type = COMEDI_SUBD_AI;
-		s->subdev_flags =
-			SDF_READABLE | SDF_COMMON | SDF_GROUND
-			| SDF_DIFF;
-		if (this_board->i_NbrAiChannel) {
-			s->n_chan = this_board->i_NbrAiChannel;
-			devpriv->b_SingelDiff = 0;
-		} else {
-			s->n_chan = this_board->i_NbrAiChannelDiff;
-			devpriv->b_SingelDiff = 1;
-		}
-		s->maxdata = this_board->i_AiMaxdata;
-		s->len_chanlist = this_board->i_AiChannelList;
-		s->range_table = this_board->pr_AiRangelist;
-
-		/* Set the initialisation flag */
-		devpriv->b_AiInitialisation = 1;
-
-		s->insn_config = this_board->ai_config;
-		s->insn_read = this_board->ai_read;
-		s->insn_write = this_board->ai_write;
-		s->insn_bits = this_board->ai_bits;
-		s->do_cmdtest = this_board->ai_cmdtest;
-		s->do_cmd = this_board->ai_cmd;
-		s->cancel = this_board->ai_cancel;
-
+	dev->read_subdev = s;
+	s->type = COMEDI_SUBD_AI;
+	s->subdev_flags =
+		SDF_READABLE | SDF_COMMON | SDF_GROUND
+		| SDF_DIFF;
+	if (this_board->i_NbrAiChannel) {
+		s->n_chan = this_board->i_NbrAiChannel;
+		devpriv->b_SingelDiff = 0;
 	} else {
-		s->type = COMEDI_SUBD_UNUSED;
+		s->n_chan = this_board->i_NbrAiChannelDiff;
+		devpriv->b_SingelDiff = 1;
 	}
+	s->maxdata = this_board->i_AiMaxdata;
+	s->len_chanlist = this_board->i_AiChannelList;
+	s->range_table = this_board->pr_AiRangelist;
+
+	/* Set the initialisation flag */
+	devpriv->b_AiInitialisation = 1;
+
+	s->insn_config = this_board->ai_config;
+	s->insn_read = this_board->ai_read;
+	s->insn_write = this_board->ai_write;
+	s->insn_bits = this_board->ai_bits;
+	s->do_cmdtest = this_board->ai_cmdtest;
+	s->do_cmd = this_board->ai_cmd;
+	s->cancel = this_board->ai_cancel;
 
 	/*  Allocate and Initialise AO Subdevice Structures */
 	s = &dev->subdevices[1];

commit f2c872e1983cfcc9e46e90bbdbb139d5c8698244
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Thu Nov 1 17:26:45 2012 -0700

    staging: comedi: addi_apci_3120: remove test for DI subdevice
    
    The boards supported by this driver all have digital inputs.
    Remove the test for it.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 5f82f10ba585..3282c54f6116 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -240,23 +240,21 @@ static int apci3120_attach_pci(struct comedi_device *dev,
 	} else {
 		s->type = COMEDI_SUBD_UNUSED;
 	}
+
 	/*  Allocate and Initialise DI Subdevice Structures */
 	s = &dev->subdevices[2];
-	if (this_board->i_NbrDiChannel) {
-		s->type = COMEDI_SUBD_DI;
-		s->subdev_flags = SDF_READABLE | SDF_GROUND | SDF_COMMON;
-		s->n_chan = this_board->i_NbrDiChannel;
-		s->maxdata = 1;
-		s->len_chanlist = this_board->i_NbrDiChannel;
-		s->range_table = &range_digital;
-		s->io_bits = 0;	/* all bits input */
-		s->insn_config = this_board->di_config;
-		s->insn_read = this_board->di_read;
-		s->insn_write = this_board->di_write;
-		s->insn_bits = this_board->di_bits;
-	} else {
-		s->type = COMEDI_SUBD_UNUSED;
-	}
+	s->type = COMEDI_SUBD_DI;
+	s->subdev_flags = SDF_READABLE | SDF_GROUND | SDF_COMMON;
+	s->n_chan = this_board->i_NbrDiChannel;
+	s->maxdata = 1;
+	s->len_chanlist = this_board->i_NbrDiChannel;
+	s->range_table = &range_digital;
+	s->io_bits = 0;	/* all bits input */
+	s->insn_config = this_board->di_config;
+	s->insn_read = this_board->di_read;
+	s->insn_write = this_board->di_write;
+	s->insn_bits = this_board->di_bits;
+
 	/*  Allocate and Initialise DO Subdevice Structures */
 	s = &dev->subdevices[3];
 	s->type = COMEDI_SUBD_DO;

commit 43deb75dcc9073bc3d51347da16df74569a6d7ba
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Thu Nov 1 17:26:31 2012 -0700

    staging: comedi: addi_apci_3120: remove test for DO subdevice
    
    The boards supported by this driver all have digital outputs.
    Remove the test for it.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 83f4ce8cc2df..5f82f10ba585 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -259,24 +259,20 @@ static int apci3120_attach_pci(struct comedi_device *dev,
 	}
 	/*  Allocate and Initialise DO Subdevice Structures */
 	s = &dev->subdevices[3];
-	if (this_board->i_NbrDoChannel) {
-		s->type = COMEDI_SUBD_DO;
-		s->subdev_flags =
-			SDF_READABLE | SDF_WRITEABLE | SDF_GROUND | SDF_COMMON;
-		s->n_chan = this_board->i_NbrDoChannel;
-		s->maxdata = this_board->i_DoMaxdata;
-		s->len_chanlist = this_board->i_NbrDoChannel;
-		s->range_table = &range_digital;
-		s->io_bits = 0xf;	/* all bits output */
+	s->type = COMEDI_SUBD_DO;
+	s->subdev_flags =
+		SDF_READABLE | SDF_WRITEABLE | SDF_GROUND | SDF_COMMON;
+	s->n_chan = this_board->i_NbrDoChannel;
+	s->maxdata = this_board->i_DoMaxdata;
+	s->len_chanlist = this_board->i_NbrDoChannel;
+	s->range_table = &range_digital;
+	s->io_bits = 0xf;	/* all bits output */
 
-		/* insn_config - for digital output memory */
-		s->insn_config = this_board->do_config;
-		s->insn_write = this_board->do_write;
-		s->insn_bits = this_board->do_bits;
-		s->insn_read = this_board->do_read;
-	} else {
-		s->type = COMEDI_SUBD_UNUSED;
-	}
+	/* insn_config - for digital output memory */
+	s->insn_config = this_board->do_config;
+	s->insn_write = this_board->do_write;
+	s->insn_bits = this_board->do_bits;
+	s->insn_read = this_board->do_read;
 
 	/*  Allocate and Initialise Timer Subdevice Structures */
 	s = &dev->subdevices[4];

commit 53b168b938101fc16bc8a980950458aa41a83aa8
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Thu Nov 1 17:26:16 2012 -0700

    staging: comedi: addi_apci_3120: remove test for timer support
    
    The boards supported by this driver support a timer subdevice.
    Remove the tests for it.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index f2f706914c9e..83f4ce8cc2df 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -29,7 +29,6 @@ static const struct addi_board apci3120_boardtypes[] = {
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
 		.i_DoMaxdata		= 0x0f,
-		.i_Timer		= 1,
 		.b_AvailableConvertUnit	= 1,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.ui_MinDelaytimeNs	= 100000,
@@ -64,7 +63,6 @@ static const struct addi_board apci3120_boardtypes[] = {
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
 		.i_DoMaxdata		= 0x0f,
-		.i_Timer		= 1,
 		.b_AvailableConvertUnit	= 1,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.ui_MinDelaytimeNs	= 100000,
@@ -282,21 +280,17 @@ static int apci3120_attach_pci(struct comedi_device *dev,
 
 	/*  Allocate and Initialise Timer Subdevice Structures */
 	s = &dev->subdevices[4];
-	if (this_board->i_Timer) {
-		s->type = COMEDI_SUBD_TIMER;
-		s->subdev_flags = SDF_WRITEABLE | SDF_GROUND | SDF_COMMON;
-		s->n_chan = 1;
-		s->maxdata = 0;
-		s->len_chanlist = 1;
-		s->range_table = &range_digital;
-
-		s->insn_write = this_board->timer_write;
-		s->insn_read = this_board->timer_read;
-		s->insn_config = this_board->timer_config;
-		s->insn_bits = this_board->timer_bits;
-	} else {
-		s->type = COMEDI_SUBD_UNUSED;
-	}
+	s->type = COMEDI_SUBD_TIMER;
+	s->subdev_flags = SDF_WRITEABLE | SDF_GROUND | SDF_COMMON;
+	s->n_chan = 1;
+	s->maxdata = 0;
+	s->len_chanlist = 1;
+	s->range_table = &range_digital;
+
+	s->insn_write = this_board->timer_write;
+	s->insn_read = this_board->timer_read;
+	s->insn_config = this_board->timer_config;
+	s->insn_bits = this_board->timer_bits;
 
 	/*  Allocate and Initialise TTL */
 	s = &dev->subdevices[5];

commit 4fbe36f2e9eb913f1c58800cc52e62769ebfd2dc
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Thu Nov 1 17:26:00 2012 -0700

    staging: comedi: addi_apci_3120: remove test for dma support
    
    The boards supported by this driver support dma. Remove the tests
    for it.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 26adc83465d1..f2f706914c9e 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -29,7 +29,6 @@ static const struct addi_board apci3120_boardtypes[] = {
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
 		.i_DoMaxdata		= 0x0f,
-		.i_Dma			= 1,
 		.i_Timer		= 1,
 		.b_AvailableConvertUnit	= 1,
 		.ui_MinAcquisitiontimeNs = 10000,
@@ -65,7 +64,6 @@ static const struct addi_board apci3120_boardtypes[] = {
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
 		.i_DoMaxdata		= 0x0f,
-		.i_Dma			= 1,
 		.i_Timer		= 1,
 		.b_AvailableConvertUnit	= 1,
 		.ui_MinAcquisitiontimeNs = 10000,
@@ -144,8 +142,7 @@ static int apci3120_attach_pci(struct comedi_device *dev,
 	ret = comedi_pci_enable(pcidev, dev->board_name);
 	if (ret)
 		return ret;
-	if (this_board->i_Dma)
-		pci_set_master(pcidev);
+	pci_set_master(pcidev);
 
 	if (this_board->i_IorangeBase1)
 		dev->iobase = pci_resource_start(pcidev, 1);
@@ -166,37 +163,31 @@ static int apci3120_attach_pci(struct comedi_device *dev,
 
 	devpriv->us_UseDma = ADDI_ENABLE;
 
-	if (this_board->i_Dma) {
-		if (devpriv->us_UseDma == ADDI_ENABLE) {
-			/*  alloc DMA buffers */
-			devpriv->b_DmaDoubleBuffer = 0;
-			for (i = 0; i < 2; i++) {
-				for (pages = 4; pages >= 0; pages--) {
-					devpriv->ul_DmaBufferVirtual[i] =
-						(void *) __get_free_pages(GFP_KERNEL, pages);
-
-					if (devpriv->ul_DmaBufferVirtual[i])
-						break;
-				}
-				if (devpriv->ul_DmaBufferVirtual[i]) {
-					devpriv->ui_DmaBufferPages[i] = pages;
-					devpriv->ui_DmaBufferSize[i] =
-						PAGE_SIZE * pages;
-					devpriv->ui_DmaBufferSamples[i] =
-						devpriv->
-						ui_DmaBufferSize[i] >> 1;
-					devpriv->ul_DmaBufferHw[i] =
-						virt_to_bus((void *)devpriv->
-						ul_DmaBufferVirtual[i]);
-				}
-			}
-			if (!devpriv->ul_DmaBufferVirtual[0])
-				devpriv->us_UseDma = ADDI_DISABLE;
+	/* Allocate DMA buffers */
+	devpriv->b_DmaDoubleBuffer = 0;
+	for (i = 0; i < 2; i++) {
+		for (pages = 4; pages >= 0; pages--) {
+			devpriv->ul_DmaBufferVirtual[i] =
+				(void *) __get_free_pages(GFP_KERNEL, pages);
 
-			if (devpriv->ul_DmaBufferVirtual[1])
-				devpriv->b_DmaDoubleBuffer = 1;
+			if (devpriv->ul_DmaBufferVirtual[i])
+				break;
+		}
+		if (devpriv->ul_DmaBufferVirtual[i]) {
+			devpriv->ui_DmaBufferPages[i] = pages;
+			devpriv->ui_DmaBufferSize[i] = PAGE_SIZE * pages;
+			devpriv->ui_DmaBufferSamples[i] =
+				devpriv->ui_DmaBufferSize[i] >> 1;
+			devpriv->ul_DmaBufferHw[i] =
+				virt_to_bus((void *)devpriv->
+				ul_DmaBufferVirtual[i]);
 		}
 	}
+	if (!devpriv->ul_DmaBufferVirtual[0])
+		devpriv->us_UseDma = ADDI_DISABLE;
+
+	if (devpriv->ul_DmaBufferVirtual[1])
+		devpriv->b_DmaDoubleBuffer = 1;
 
 	n_subdevices = 7;
 	ret = comedi_alloc_subdevices(dev, n_subdevices);

commit 48fdf084180e30e7ad3a46b93eab0c75d3700f84
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Thu Nov 1 17:25:44 2012 -0700

    staging: comedi: addi_apci_3120: remove need for s_EeParameters
    
    The boards supported by this driver do not have an eeprom. Remove the
    need for the devpriv->s_EeParameters values by just using the values
    from the boardinfo directly.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index d405b3bf8737..26adc83465d1 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -157,23 +157,6 @@ static int apci3120_attach_pci(struct comedi_device *dev,
 	devpriv->i_IobaseAddon = pci_resource_start(pcidev, 2);
 	devpriv->i_IobaseReserved = pci_resource_start(pcidev, 3);
 
-	/* Initialize parameters that can be overridden in EEPROM */
-	devpriv->s_EeParameters.i_NbrAiChannel = this_board->i_NbrAiChannel;
-	devpriv->s_EeParameters.i_NbrAoChannel = this_board->i_NbrAoChannel;
-	devpriv->s_EeParameters.i_AiMaxdata = this_board->i_AiMaxdata;
-	devpriv->s_EeParameters.i_AoMaxdata = this_board->i_AoMaxdata;
-	devpriv->s_EeParameters.i_NbrDiChannel = this_board->i_NbrDiChannel;
-	devpriv->s_EeParameters.i_NbrDoChannel = this_board->i_NbrDoChannel;
-	devpriv->s_EeParameters.i_DoMaxdata = this_board->i_DoMaxdata;
-	devpriv->s_EeParameters.i_Dma = this_board->i_Dma;
-	devpriv->s_EeParameters.i_Timer = this_board->i_Timer;
-	devpriv->s_EeParameters.ui_MinAcquisitiontimeNs =
-		this_board->ui_MinAcquisitiontimeNs;
-	devpriv->s_EeParameters.ui_MinDelaytimeNs =
-		this_board->ui_MinDelaytimeNs;
-
-	/* ## */
-
 	if (pcidev->irq > 0) {
 		ret = request_irq(pcidev->irq, v_ADDI_Interrupt, IRQF_SHARED,
 				  dev->board_name, dev);
@@ -183,7 +166,7 @@ static int apci3120_attach_pci(struct comedi_device *dev,
 
 	devpriv->us_UseDma = ADDI_ENABLE;
 
-	if (devpriv->s_EeParameters.i_Dma) {
+	if (this_board->i_Dma) {
 		if (devpriv->us_UseDma == ADDI_ENABLE) {
 			/*  alloc DMA buffers */
 			devpriv->b_DmaDoubleBuffer = 0;
@@ -222,22 +205,20 @@ static int apci3120_attach_pci(struct comedi_device *dev,
 
 	/*  Allocate and Initialise AI Subdevice Structures */
 	s = &dev->subdevices[0];
-	if ((devpriv->s_EeParameters.i_NbrAiChannel)
-		|| (this_board->i_NbrAiChannelDiff)) {
+	if (this_board->i_NbrAiChannel || (this_board->i_NbrAiChannelDiff)) {
 		dev->read_subdev = s;
 		s->type = COMEDI_SUBD_AI;
 		s->subdev_flags =
 			SDF_READABLE | SDF_COMMON | SDF_GROUND
 			| SDF_DIFF;
-		if (devpriv->s_EeParameters.i_NbrAiChannel) {
-			s->n_chan =
-				devpriv->s_EeParameters.i_NbrAiChannel;
+		if (this_board->i_NbrAiChannel) {
+			s->n_chan = this_board->i_NbrAiChannel;
 			devpriv->b_SingelDiff = 0;
 		} else {
 			s->n_chan = this_board->i_NbrAiChannelDiff;
 			devpriv->b_SingelDiff = 1;
 		}
-		s->maxdata = devpriv->s_EeParameters.i_AiMaxdata;
+		s->maxdata = this_board->i_AiMaxdata;
 		s->len_chanlist = this_board->i_AiChannelList;
 		s->range_table = this_board->pr_AiRangelist;
 
@@ -258,13 +239,12 @@ static int apci3120_attach_pci(struct comedi_device *dev,
 
 	/*  Allocate and Initialise AO Subdevice Structures */
 	s = &dev->subdevices[1];
-	if (devpriv->s_EeParameters.i_NbrAoChannel) {
+	if (this_board->i_NbrAoChannel) {
 		s->type = COMEDI_SUBD_AO;
 		s->subdev_flags = SDF_WRITEABLE | SDF_GROUND | SDF_COMMON;
-		s->n_chan = devpriv->s_EeParameters.i_NbrAoChannel;
-		s->maxdata = devpriv->s_EeParameters.i_AoMaxdata;
-		s->len_chanlist =
-			devpriv->s_EeParameters.i_NbrAoChannel;
+		s->n_chan = this_board->i_NbrAoChannel;
+		s->maxdata = this_board->i_AoMaxdata;
+		s->len_chanlist = this_board->i_NbrAoChannel;
 		s->range_table = this_board->pr_AoRangelist;
 		s->insn_config = this_board->ao_config;
 		s->insn_write = this_board->ao_write;
@@ -273,13 +253,12 @@ static int apci3120_attach_pci(struct comedi_device *dev,
 	}
 	/*  Allocate and Initialise DI Subdevice Structures */
 	s = &dev->subdevices[2];
-	if (devpriv->s_EeParameters.i_NbrDiChannel) {
+	if (this_board->i_NbrDiChannel) {
 		s->type = COMEDI_SUBD_DI;
 		s->subdev_flags = SDF_READABLE | SDF_GROUND | SDF_COMMON;
-		s->n_chan = devpriv->s_EeParameters.i_NbrDiChannel;
+		s->n_chan = this_board->i_NbrDiChannel;
 		s->maxdata = 1;
-		s->len_chanlist =
-			devpriv->s_EeParameters.i_NbrDiChannel;
+		s->len_chanlist = this_board->i_NbrDiChannel;
 		s->range_table = &range_digital;
 		s->io_bits = 0;	/* all bits input */
 		s->insn_config = this_board->di_config;
@@ -291,14 +270,13 @@ static int apci3120_attach_pci(struct comedi_device *dev,
 	}
 	/*  Allocate and Initialise DO Subdevice Structures */
 	s = &dev->subdevices[3];
-	if (devpriv->s_EeParameters.i_NbrDoChannel) {
+	if (this_board->i_NbrDoChannel) {
 		s->type = COMEDI_SUBD_DO;
 		s->subdev_flags =
 			SDF_READABLE | SDF_WRITEABLE | SDF_GROUND | SDF_COMMON;
-		s->n_chan = devpriv->s_EeParameters.i_NbrDoChannel;
-		s->maxdata = devpriv->s_EeParameters.i_DoMaxdata;
-		s->len_chanlist =
-			devpriv->s_EeParameters.i_NbrDoChannel;
+		s->n_chan = this_board->i_NbrDoChannel;
+		s->maxdata = this_board->i_DoMaxdata;
+		s->len_chanlist = this_board->i_NbrDoChannel;
 		s->range_table = &range_digital;
 		s->io_bits = 0xf;	/* all bits output */
 
@@ -313,7 +291,7 @@ static int apci3120_attach_pci(struct comedi_device *dev,
 
 	/*  Allocate and Initialise Timer Subdevice Structures */
 	s = &dev->subdevices[4];
-	if (devpriv->s_EeParameters.i_Timer) {
+	if (this_board->i_Timer) {
 		s->type = COMEDI_SUBD_TIMER;
 		s->subdev_flags = SDF_WRITEABLE | SDF_GROUND | SDF_COMMON;
 		s->n_chan = 1;

commit 4ee6d2743a7a8fc4a7ce770cd5b9296e70552edf
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Thu Nov 1 17:25:27 2012 -0700

    staging: comedi: addi_apci_3120: board does not have ttl i/o
    
    The boards supported by this driver do not have ttl i/o. Remove
    the unnecessary code to initialize the subdevice.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 3acc595497e4..d405b3bf8737 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -331,22 +331,7 @@ static int apci3120_attach_pci(struct comedi_device *dev,
 
 	/*  Allocate and Initialise TTL */
 	s = &dev->subdevices[5];
-	if (this_board->i_NbrTTLChannel) {
-		s->type = COMEDI_SUBD_TTLIO;
-		s->subdev_flags =
-			SDF_WRITEABLE | SDF_READABLE | SDF_GROUND | SDF_COMMON;
-		s->n_chan = this_board->i_NbrTTLChannel;
-		s->maxdata = 1;
-		s->io_bits = 0;	/* all bits input */
-		s->len_chanlist = this_board->i_NbrTTLChannel;
-		s->range_table = &range_digital;
-		s->insn_config = this_board->ttl_config;
-		s->insn_bits = this_board->ttl_bits;
-		s->insn_read = this_board->ttl_read;
-		s->insn_write = this_board->ttl_write;
-	} else {
-		s->type = COMEDI_SUBD_UNUSED;
-	}
+	s->type = COMEDI_SUBD_UNUSED;
 
 	/* EEPROM */
 	s = &dev->subdevices[6];

commit 887f706edf86fe90d04f0df83704d612722e3d36
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Thu Nov 1 17:25:11 2012 -0700

    staging: comedi: addi_apci_3120: remove eeprom handling code
    
    The boards supported by this driver do not have an eeprom. Remove
    the unnecessary code to handle it.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 05ff3e209684..3acc595497e4 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -4,7 +4,6 @@
 
 #include "addi-data/addi_common.h"
 
-#include "addi-data/addi_eeprom.c"
 #include "addi-data/hwdrv_apci3120.c"
 
 #ifndef COMEDI_SUBD_TTLIO
@@ -19,7 +18,6 @@ static const struct addi_board apci3120_boardtypes[] = {
 		.i_IorangeBase0		= AMCC_OP_REG_SIZE,
 		.i_IorangeBase1		= APCI3120_ADDRESS_RANGE,
 		.i_IorangeBase2		= 8,
-		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
@@ -59,7 +57,6 @@ static const struct addi_board apci3120_boardtypes[] = {
 		.i_IorangeBase0		= AMCC_OP_REG_SIZE,
 		.i_IorangeBase1		= APCI3120_ADDRESS_RANGE,
 		.i_IorangeBase2		= 8,
-		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
@@ -91,23 +88,6 @@ static const struct addi_board apci3120_boardtypes[] = {
 	},
 };
 
-static int i_ADDIDATA_InsnReadEeprom(struct comedi_device *dev,
-				     struct comedi_subdevice *s,
-				     struct comedi_insn *insn,
-				     unsigned int *data)
-{
-	const struct addi_board *this_board = comedi_board(dev);
-	struct addi_private *devpriv = dev->private;
-	unsigned short w_Address = CR_CHAN(insn->chanspec);
-	unsigned short w_Data;
-
-	w_Data = addi_eeprom_readw(devpriv->i_IobaseAmcc,
-		this_board->pc_EepromChip, 2 * w_Address);
-	data[0] = w_Data;
-
-	return insn->n;
-}
-
 static irqreturn_t v_ADDI_Interrupt(int irq, void *d)
 {
 	struct comedi_device *dev = d;
@@ -149,7 +129,6 @@ static int apci3120_attach_pci(struct comedi_device *dev,
 	struct addi_private *devpriv;
 	struct comedi_subdevice *s;
 	int ret, pages, i, n_subdevices;
-	unsigned int dw_Dummy;
 
 	this_board = addi_find_boardinfo(dev, pcidev);
 	if (!this_board)
@@ -168,22 +147,14 @@ static int apci3120_attach_pci(struct comedi_device *dev,
 	if (this_board->i_Dma)
 		pci_set_master(pcidev);
 
-	if (!this_board->pc_EepromChip ||
-	    !strcmp(this_board->pc_EepromChip, ADDIDATA_9054)) {
-		if (this_board->i_IorangeBase1)
-			dev->iobase = pci_resource_start(pcidev, 1);
-		else
-			dev->iobase = pci_resource_start(pcidev, 0);
+	if (this_board->i_IorangeBase1)
+		dev->iobase = pci_resource_start(pcidev, 1);
+	else
+		dev->iobase = pci_resource_start(pcidev, 0);
 
-		devpriv->iobase = dev->iobase;
-		devpriv->i_IobaseAmcc = pci_resource_start(pcidev, 0);
-		devpriv->i_IobaseAddon = pci_resource_start(pcidev, 2);
-	} else {
-		dev->iobase = pci_resource_start(pcidev, 2);
-		devpriv->iobase = pci_resource_start(pcidev, 2);
-		devpriv->dw_AiBase = ioremap(pci_resource_start(pcidev, 3),
-					     this_board->i_IorangeBase3);
-	}
+	devpriv->iobase = dev->iobase;
+	devpriv->i_IobaseAmcc = pci_resource_start(pcidev, 0);
+	devpriv->i_IobaseAddon = pci_resource_start(pcidev, 2);
 	devpriv->i_IobaseReserved = pci_resource_start(pcidev, 3);
 
 	/* Initialize parameters that can be overridden in EEPROM */
@@ -210,23 +181,6 @@ static int apci3120_attach_pci(struct comedi_device *dev,
 			dev->irq = pcidev->irq;
 	}
 
-	/*  Read eepeom and fill addi_board Structure */
-
-	if (this_board->i_PCIEeprom) {
-		if (!(strcmp(this_board->pc_EepromChip, "S5920"))) {
-			/*  Set 3 wait stait */
-			if (!(strcmp(dev->board_name, "apci035"))) {
-				outl(0x80808082, devpriv->i_IobaseAmcc + 0x60);
-			} else {
-				outl(0x83838383, devpriv->i_IobaseAmcc + 0x60);
-			}
-			/*  Enable the interrupt for the controller */
-			dw_Dummy = inl(devpriv->i_IobaseAmcc + 0x38);
-			outl(dw_Dummy | 0x2000, devpriv->i_IobaseAmcc + 0x38);
-		}
-		addi_eeprom_read_info(dev, pci_resource_start(pcidev, 0));
-	}
-
 	devpriv->us_UseDma = ADDI_ENABLE;
 
 	if (devpriv->s_EeParameters.i_Dma) {
@@ -396,15 +350,7 @@ static int apci3120_attach_pci(struct comedi_device *dev,
 
 	/* EEPROM */
 	s = &dev->subdevices[6];
-	if (this_board->i_PCIEeprom) {
-		s->type = COMEDI_SUBD_MEMORY;
-		s->subdev_flags = SDF_READABLE | SDF_INTERNAL;
-		s->n_chan = 256;
-		s->maxdata = 0xffff;
-		s->insn_read = i_ADDIDATA_InsnReadEeprom;
-	} else {
-		s->type = COMEDI_SUBD_UNUSED;
-	}
+	s->type = COMEDI_SUBD_UNUSED;
 
 	i_ADDI_Reset(dev);
 	return 0;

commit bb6986f022a0faaf959bb39153c07424ced87aab
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Thu Nov 1 17:24:38 2012 -0700

    staging: comedi: addi_apci_3120: separate from addi_common.c
    
    The addi_apci_3120 driver is the only addi-data driver that supports
    dma.
    
    Copy the code in addi_common.c to this driver and remove the #include
    that caused addi_common.c to be compiled with this driver. This will
    allow removing the special handling for allocating and freeing the
    dma buffers in the common code.
    
    Rename the attach_pci and detach functions so they have namespace
    associated with this driver.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 3c8a6a272c84..05ff3e209684 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -6,7 +6,10 @@
 
 #include "addi-data/addi_eeprom.c"
 #include "addi-data/hwdrv_apci3120.c"
-#include "addi-data/addi_common.c"
+
+#ifndef COMEDI_SUBD_TTLIO
+#define COMEDI_SUBD_TTLIO   11	/* Digital Input Output But TTL */
+#endif
 
 static const struct addi_board apci3120_boardtypes[] = {
 	{
@@ -88,11 +91,363 @@ static const struct addi_board apci3120_boardtypes[] = {
 	},
 };
 
+static int i_ADDIDATA_InsnReadEeprom(struct comedi_device *dev,
+				     struct comedi_subdevice *s,
+				     struct comedi_insn *insn,
+				     unsigned int *data)
+{
+	const struct addi_board *this_board = comedi_board(dev);
+	struct addi_private *devpriv = dev->private;
+	unsigned short w_Address = CR_CHAN(insn->chanspec);
+	unsigned short w_Data;
+
+	w_Data = addi_eeprom_readw(devpriv->i_IobaseAmcc,
+		this_board->pc_EepromChip, 2 * w_Address);
+	data[0] = w_Data;
+
+	return insn->n;
+}
+
+static irqreturn_t v_ADDI_Interrupt(int irq, void *d)
+{
+	struct comedi_device *dev = d;
+	const struct addi_board *this_board = comedi_board(dev);
+
+	this_board->interrupt(irq, d);
+	return IRQ_RETVAL(1);
+}
+
+static int i_ADDI_Reset(struct comedi_device *dev)
+{
+	const struct addi_board *this_board = comedi_board(dev);
+
+	this_board->reset(dev);
+	return 0;
+}
+
+static const void *addi_find_boardinfo(struct comedi_device *dev,
+				       struct pci_dev *pcidev)
+{
+	const void *p = dev->driver->board_name;
+	const struct addi_board *this_board;
+	int i;
+
+	for (i = 0; i < dev->driver->num_names; i++) {
+		this_board = p;
+		if (this_board->i_VendorId == pcidev->vendor &&
+		    this_board->i_DeviceId == pcidev->device)
+			return this_board;
+		p += dev->driver->offset;
+	}
+	return NULL;
+}
+
+static int apci3120_attach_pci(struct comedi_device *dev,
+			       struct pci_dev *pcidev)
+{
+	const struct addi_board *this_board;
+	struct addi_private *devpriv;
+	struct comedi_subdevice *s;
+	int ret, pages, i, n_subdevices;
+	unsigned int dw_Dummy;
+
+	this_board = addi_find_boardinfo(dev, pcidev);
+	if (!this_board)
+		return -ENODEV;
+	dev->board_ptr = this_board;
+	dev->board_name = this_board->pc_DriverName;
+
+	devpriv = kzalloc(sizeof(*devpriv), GFP_KERNEL);
+	if (!devpriv)
+		return -ENOMEM;
+	dev->private = devpriv;
+
+	ret = comedi_pci_enable(pcidev, dev->board_name);
+	if (ret)
+		return ret;
+	if (this_board->i_Dma)
+		pci_set_master(pcidev);
+
+	if (!this_board->pc_EepromChip ||
+	    !strcmp(this_board->pc_EepromChip, ADDIDATA_9054)) {
+		if (this_board->i_IorangeBase1)
+			dev->iobase = pci_resource_start(pcidev, 1);
+		else
+			dev->iobase = pci_resource_start(pcidev, 0);
+
+		devpriv->iobase = dev->iobase;
+		devpriv->i_IobaseAmcc = pci_resource_start(pcidev, 0);
+		devpriv->i_IobaseAddon = pci_resource_start(pcidev, 2);
+	} else {
+		dev->iobase = pci_resource_start(pcidev, 2);
+		devpriv->iobase = pci_resource_start(pcidev, 2);
+		devpriv->dw_AiBase = ioremap(pci_resource_start(pcidev, 3),
+					     this_board->i_IorangeBase3);
+	}
+	devpriv->i_IobaseReserved = pci_resource_start(pcidev, 3);
+
+	/* Initialize parameters that can be overridden in EEPROM */
+	devpriv->s_EeParameters.i_NbrAiChannel = this_board->i_NbrAiChannel;
+	devpriv->s_EeParameters.i_NbrAoChannel = this_board->i_NbrAoChannel;
+	devpriv->s_EeParameters.i_AiMaxdata = this_board->i_AiMaxdata;
+	devpriv->s_EeParameters.i_AoMaxdata = this_board->i_AoMaxdata;
+	devpriv->s_EeParameters.i_NbrDiChannel = this_board->i_NbrDiChannel;
+	devpriv->s_EeParameters.i_NbrDoChannel = this_board->i_NbrDoChannel;
+	devpriv->s_EeParameters.i_DoMaxdata = this_board->i_DoMaxdata;
+	devpriv->s_EeParameters.i_Dma = this_board->i_Dma;
+	devpriv->s_EeParameters.i_Timer = this_board->i_Timer;
+	devpriv->s_EeParameters.ui_MinAcquisitiontimeNs =
+		this_board->ui_MinAcquisitiontimeNs;
+	devpriv->s_EeParameters.ui_MinDelaytimeNs =
+		this_board->ui_MinDelaytimeNs;
+
+	/* ## */
+
+	if (pcidev->irq > 0) {
+		ret = request_irq(pcidev->irq, v_ADDI_Interrupt, IRQF_SHARED,
+				  dev->board_name, dev);
+		if (ret == 0)
+			dev->irq = pcidev->irq;
+	}
+
+	/*  Read eepeom and fill addi_board Structure */
+
+	if (this_board->i_PCIEeprom) {
+		if (!(strcmp(this_board->pc_EepromChip, "S5920"))) {
+			/*  Set 3 wait stait */
+			if (!(strcmp(dev->board_name, "apci035"))) {
+				outl(0x80808082, devpriv->i_IobaseAmcc + 0x60);
+			} else {
+				outl(0x83838383, devpriv->i_IobaseAmcc + 0x60);
+			}
+			/*  Enable the interrupt for the controller */
+			dw_Dummy = inl(devpriv->i_IobaseAmcc + 0x38);
+			outl(dw_Dummy | 0x2000, devpriv->i_IobaseAmcc + 0x38);
+		}
+		addi_eeprom_read_info(dev, pci_resource_start(pcidev, 0));
+	}
+
+	devpriv->us_UseDma = ADDI_ENABLE;
+
+	if (devpriv->s_EeParameters.i_Dma) {
+		if (devpriv->us_UseDma == ADDI_ENABLE) {
+			/*  alloc DMA buffers */
+			devpriv->b_DmaDoubleBuffer = 0;
+			for (i = 0; i < 2; i++) {
+				for (pages = 4; pages >= 0; pages--) {
+					devpriv->ul_DmaBufferVirtual[i] =
+						(void *) __get_free_pages(GFP_KERNEL, pages);
+
+					if (devpriv->ul_DmaBufferVirtual[i])
+						break;
+				}
+				if (devpriv->ul_DmaBufferVirtual[i]) {
+					devpriv->ui_DmaBufferPages[i] = pages;
+					devpriv->ui_DmaBufferSize[i] =
+						PAGE_SIZE * pages;
+					devpriv->ui_DmaBufferSamples[i] =
+						devpriv->
+						ui_DmaBufferSize[i] >> 1;
+					devpriv->ul_DmaBufferHw[i] =
+						virt_to_bus((void *)devpriv->
+						ul_DmaBufferVirtual[i]);
+				}
+			}
+			if (!devpriv->ul_DmaBufferVirtual[0])
+				devpriv->us_UseDma = ADDI_DISABLE;
+
+			if (devpriv->ul_DmaBufferVirtual[1])
+				devpriv->b_DmaDoubleBuffer = 1;
+		}
+	}
+
+	n_subdevices = 7;
+	ret = comedi_alloc_subdevices(dev, n_subdevices);
+	if (ret)
+		return ret;
+
+	/*  Allocate and Initialise AI Subdevice Structures */
+	s = &dev->subdevices[0];
+	if ((devpriv->s_EeParameters.i_NbrAiChannel)
+		|| (this_board->i_NbrAiChannelDiff)) {
+		dev->read_subdev = s;
+		s->type = COMEDI_SUBD_AI;
+		s->subdev_flags =
+			SDF_READABLE | SDF_COMMON | SDF_GROUND
+			| SDF_DIFF;
+		if (devpriv->s_EeParameters.i_NbrAiChannel) {
+			s->n_chan =
+				devpriv->s_EeParameters.i_NbrAiChannel;
+			devpriv->b_SingelDiff = 0;
+		} else {
+			s->n_chan = this_board->i_NbrAiChannelDiff;
+			devpriv->b_SingelDiff = 1;
+		}
+		s->maxdata = devpriv->s_EeParameters.i_AiMaxdata;
+		s->len_chanlist = this_board->i_AiChannelList;
+		s->range_table = this_board->pr_AiRangelist;
+
+		/* Set the initialisation flag */
+		devpriv->b_AiInitialisation = 1;
+
+		s->insn_config = this_board->ai_config;
+		s->insn_read = this_board->ai_read;
+		s->insn_write = this_board->ai_write;
+		s->insn_bits = this_board->ai_bits;
+		s->do_cmdtest = this_board->ai_cmdtest;
+		s->do_cmd = this_board->ai_cmd;
+		s->cancel = this_board->ai_cancel;
+
+	} else {
+		s->type = COMEDI_SUBD_UNUSED;
+	}
+
+	/*  Allocate and Initialise AO Subdevice Structures */
+	s = &dev->subdevices[1];
+	if (devpriv->s_EeParameters.i_NbrAoChannel) {
+		s->type = COMEDI_SUBD_AO;
+		s->subdev_flags = SDF_WRITEABLE | SDF_GROUND | SDF_COMMON;
+		s->n_chan = devpriv->s_EeParameters.i_NbrAoChannel;
+		s->maxdata = devpriv->s_EeParameters.i_AoMaxdata;
+		s->len_chanlist =
+			devpriv->s_EeParameters.i_NbrAoChannel;
+		s->range_table = this_board->pr_AoRangelist;
+		s->insn_config = this_board->ao_config;
+		s->insn_write = this_board->ao_write;
+	} else {
+		s->type = COMEDI_SUBD_UNUSED;
+	}
+	/*  Allocate and Initialise DI Subdevice Structures */
+	s = &dev->subdevices[2];
+	if (devpriv->s_EeParameters.i_NbrDiChannel) {
+		s->type = COMEDI_SUBD_DI;
+		s->subdev_flags = SDF_READABLE | SDF_GROUND | SDF_COMMON;
+		s->n_chan = devpriv->s_EeParameters.i_NbrDiChannel;
+		s->maxdata = 1;
+		s->len_chanlist =
+			devpriv->s_EeParameters.i_NbrDiChannel;
+		s->range_table = &range_digital;
+		s->io_bits = 0;	/* all bits input */
+		s->insn_config = this_board->di_config;
+		s->insn_read = this_board->di_read;
+		s->insn_write = this_board->di_write;
+		s->insn_bits = this_board->di_bits;
+	} else {
+		s->type = COMEDI_SUBD_UNUSED;
+	}
+	/*  Allocate and Initialise DO Subdevice Structures */
+	s = &dev->subdevices[3];
+	if (devpriv->s_EeParameters.i_NbrDoChannel) {
+		s->type = COMEDI_SUBD_DO;
+		s->subdev_flags =
+			SDF_READABLE | SDF_WRITEABLE | SDF_GROUND | SDF_COMMON;
+		s->n_chan = devpriv->s_EeParameters.i_NbrDoChannel;
+		s->maxdata = devpriv->s_EeParameters.i_DoMaxdata;
+		s->len_chanlist =
+			devpriv->s_EeParameters.i_NbrDoChannel;
+		s->range_table = &range_digital;
+		s->io_bits = 0xf;	/* all bits output */
+
+		/* insn_config - for digital output memory */
+		s->insn_config = this_board->do_config;
+		s->insn_write = this_board->do_write;
+		s->insn_bits = this_board->do_bits;
+		s->insn_read = this_board->do_read;
+	} else {
+		s->type = COMEDI_SUBD_UNUSED;
+	}
+
+	/*  Allocate and Initialise Timer Subdevice Structures */
+	s = &dev->subdevices[4];
+	if (devpriv->s_EeParameters.i_Timer) {
+		s->type = COMEDI_SUBD_TIMER;
+		s->subdev_flags = SDF_WRITEABLE | SDF_GROUND | SDF_COMMON;
+		s->n_chan = 1;
+		s->maxdata = 0;
+		s->len_chanlist = 1;
+		s->range_table = &range_digital;
+
+		s->insn_write = this_board->timer_write;
+		s->insn_read = this_board->timer_read;
+		s->insn_config = this_board->timer_config;
+		s->insn_bits = this_board->timer_bits;
+	} else {
+		s->type = COMEDI_SUBD_UNUSED;
+	}
+
+	/*  Allocate and Initialise TTL */
+	s = &dev->subdevices[5];
+	if (this_board->i_NbrTTLChannel) {
+		s->type = COMEDI_SUBD_TTLIO;
+		s->subdev_flags =
+			SDF_WRITEABLE | SDF_READABLE | SDF_GROUND | SDF_COMMON;
+		s->n_chan = this_board->i_NbrTTLChannel;
+		s->maxdata = 1;
+		s->io_bits = 0;	/* all bits input */
+		s->len_chanlist = this_board->i_NbrTTLChannel;
+		s->range_table = &range_digital;
+		s->insn_config = this_board->ttl_config;
+		s->insn_bits = this_board->ttl_bits;
+		s->insn_read = this_board->ttl_read;
+		s->insn_write = this_board->ttl_write;
+	} else {
+		s->type = COMEDI_SUBD_UNUSED;
+	}
+
+	/* EEPROM */
+	s = &dev->subdevices[6];
+	if (this_board->i_PCIEeprom) {
+		s->type = COMEDI_SUBD_MEMORY;
+		s->subdev_flags = SDF_READABLE | SDF_INTERNAL;
+		s->n_chan = 256;
+		s->maxdata = 0xffff;
+		s->insn_read = i_ADDIDATA_InsnReadEeprom;
+	} else {
+		s->type = COMEDI_SUBD_UNUSED;
+	}
+
+	i_ADDI_Reset(dev);
+	return 0;
+}
+
+static void apci3120_detach(struct comedi_device *dev)
+{
+	const struct addi_board *this_board = comedi_board(dev);
+	struct pci_dev *pcidev = comedi_to_pci_dev(dev);
+	struct addi_private *devpriv = dev->private;
+
+	if (devpriv) {
+		if (dev->iobase)
+			i_ADDI_Reset(dev);
+		if (dev->irq)
+			free_irq(dev->irq, dev);
+		if ((this_board->pc_EepromChip == NULL) ||
+		    (strcmp(this_board->pc_EepromChip, ADDIDATA_9054) != 0)) {
+			if (devpriv->ul_DmaBufferVirtual[0]) {
+				free_pages((unsigned long)devpriv->
+					ul_DmaBufferVirtual[0],
+					devpriv->ui_DmaBufferPages[0]);
+			}
+			if (devpriv->ul_DmaBufferVirtual[1]) {
+				free_pages((unsigned long)devpriv->
+					ul_DmaBufferVirtual[1],
+					devpriv->ui_DmaBufferPages[1]);
+			}
+		} else {
+			iounmap(devpriv->dw_AiBase);
+		}
+	}
+	if (pcidev) {
+		if (dev->iobase)
+			comedi_pci_disable(pcidev);
+	}
+}
+
 static struct comedi_driver apci3120_driver = {
 	.driver_name	= "addi_apci_3120",
 	.module		= THIS_MODULE,
-	.attach_pci	= addi_attach_pci,
-	.detach		= i_ADDI_Detach,
+	.attach_pci	= apci3120_attach_pci,
+	.detach		= apci3120_detach,
 	.num_names	= ARRAY_SIZE(apci3120_boardtypes),
 	.board_name	= &apci3120_boardtypes[0].pc_DriverName,
 	.offset		= sizeof(struct addi_board),

commit 33db6ebe0a124ef2ffb65c5f2ce4104e08fcec9c
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Thu Nov 1 17:24:22 2012 -0700

    staging: comedi: addi_apci_3120: remove CONFIG_APCI_3120 define
    
    Now that the apci3001 and apci3120 boards are merged we can remove
    this unnecessary define.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 979b8a9703ad..3c8a6a272c84 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -4,8 +4,6 @@
 
 #include "addi-data/addi_common.h"
 
-#define CONFIG_APCI_3120 1
-
 #include "addi-data/addi_eeprom.c"
 #include "addi-data/hwdrv_apci3120.c"
 #include "addi-data/addi_common.c"

commit 973781a821fe537ef1cb8ef227266faeed094ef6
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Thu Nov 1 17:24:06 2012 -0700

    staging: comedi: addi_apci_3120: merge in addi_apci_3001 driver
    
    The addi_apci_3120 and addi_apci_3001 drivers share the same low-level
    board support code (hwdrv_apci3120). Merge the boardinfo and PCI_DEVICE
    information from the addi_apci_3001 driver into the addi_apci_3120
    driver and delete then delete the addi_apci_3001 driver.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 5db6bfc0e225..979b8a9703ad 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -51,6 +51,42 @@ static const struct addi_board apci3120_boardtypes[] = {
 		.timer_config		= i_APCI3120_InsnConfigTimer,
 		.timer_write		= i_APCI3120_InsnWriteTimer,
 		.timer_read		= i_APCI3120_InsnReadTimer,
+	}, {
+		.pc_DriverName		= "apci3001",
+		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA_OLD,
+		.i_DeviceId		= 0x828D,
+		.i_IorangeBase0		= AMCC_OP_REG_SIZE,
+		.i_IorangeBase1		= APCI3120_ADDRESS_RANGE,
+		.i_IorangeBase2		= 8,
+		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
+		.i_NbrAiChannel		= 16,
+		.i_NbrAiChannelDiff	= 8,
+		.i_AiChannelList	= 16,
+		.i_AiMaxdata		= 0xfff,
+		.pr_AiRangelist		= &range_apci3120_ai,
+		.i_NbrDiChannel		= 4,
+		.i_NbrDoChannel		= 4,
+		.i_DoMaxdata		= 0x0f,
+		.i_Dma			= 1,
+		.i_Timer		= 1,
+		.b_AvailableConvertUnit	= 1,
+		.ui_MinAcquisitiontimeNs = 10000,
+		.ui_MinDelaytimeNs	= 100000,
+		.interrupt		= v_APCI3120_Interrupt,
+		.reset			= i_APCI3120_Reset,
+		.ai_config		= i_APCI3120_InsnConfigAnalogInput,
+		.ai_read		= i_APCI3120_InsnReadAnalogInput,
+		.ai_cmdtest		= i_APCI3120_CommandTestAnalogInput,
+		.ai_cmd			= i_APCI3120_CommandAnalogInput,
+		.ai_cancel		= i_APCI3120_StopCyclicAcquisition,
+		.di_read		= i_APCI3120_InsnReadDigitalInput,
+		.di_bits		= i_APCI3120_InsnBitsDigitalInput,
+		.do_config		= i_APCI3120_InsnConfigDigitalOutput,
+		.do_write		= i_APCI3120_InsnWriteDigitalOutput,
+		.do_bits		= i_APCI3120_InsnBitsDigitalOutput,
+		.timer_config		= i_APCI3120_InsnConfigTimer,
+		.timer_write		= i_APCI3120_InsnWriteTimer,
+		.timer_read		= i_APCI3120_InsnReadTimer,
 	},
 };
 
@@ -77,6 +113,7 @@ static void __devexit apci3120_pci_remove(struct pci_dev *dev)
 
 static DEFINE_PCI_DEVICE_TABLE(apci3120_pci_table) = {
 	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA_OLD, 0x818d) },
+	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA_OLD, 0x828d) },
 	{ 0 }
 };
 MODULE_DEVICE_TABLE(pci, apci3120_pci_table);

commit bf36f012c7ddaff083bb0ef187feddf4d85507a0
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Wed Oct 31 16:58:40 2012 -0700

    staging: comedi: addi-data: remove addi_amcc_s5933.h
    
    Now that the PCI bus walking has been removed from the addi-data
    drivers, the only differenced between addi_amcc_s9533.h and the
    standard comedi amcc_s5933.h is the additional defines for the
    apci3120 "ADDON RELATED ADDITIONS". Move those defines to
    hwdrv_apci3120.c.
    
    Modify all the addi-data drivers to then include the standard
    comedi amcc_s5933.h header and delete the duplicate in addi-data.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index e027f4709cad..5db6bfc0e225 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -1,8 +1,8 @@
 #include "../comedidev.h"
 #include "comedi_fc.h"
+#include "amcc_s5933.h"
 
 #include "addi-data/addi_common.h"
-#include "addi-data/addi_amcc_s5933.h"
 
 #define CONFIG_APCI_3120 1
 

commit 41be28db534330192bbbec9783e6d43d4432a7fb
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Wed Oct 31 16:57:37 2012 -0700

    staging: comedi: addi-data: use attach_pci callback
    
    Use the comedi pci auto config mechanism to attach the addi-data
    drivers. This allows removing all the PCI bus walking code.
    
    Add a function, addi_find_boardinfo(), to find the driver specific
    boardinfo. Since this function is currently in the common code we
    have to use the pointer to the boardinfo that is stored in the
    comedi_driver pointer.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 1df67cea3472..e027f4709cad 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -57,7 +57,7 @@ static const struct addi_board apci3120_boardtypes[] = {
 static struct comedi_driver apci3120_driver = {
 	.driver_name	= "addi_apci_3120",
 	.module		= THIS_MODULE,
-	.attach		= i_ADDI_Attach,
+	.attach_pci	= addi_attach_pci,
 	.detach		= i_ADDI_Detach,
 	.num_names	= ARRAY_SIZE(apci3120_boardtypes),
 	.board_name	= &apci3120_boardtypes[0].pc_DriverName,

commit 20a22b706b8ee37d1a2282f2c9bf7f2c73a5a7a5
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Tue Oct 30 18:06:33 2012 -0700

    staging: comedi: addi_apci_*: add module_comedi_pci_driver()
    
    Pull the module init code out of addi_common.c and add it to
    each addi-data driver. Rename the data and functions so they
    have namespace associated with the drivers.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index bd2a654eeba9..1df67cea3472 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -6,12 +6,11 @@
 
 #define CONFIG_APCI_3120 1
 
-#define ADDIDATA_DRIVER_NAME	"addi_apci_3120"
-
 #include "addi-data/addi_eeprom.c"
 #include "addi-data/hwdrv_apci3120.c"
+#include "addi-data/addi_common.c"
 
-static const struct addi_board boardtypes[] = {
+static const struct addi_board apci3120_boardtypes[] = {
 	{
 		.pc_DriverName		= "apci3120",
 		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA_OLD,
@@ -55,13 +54,40 @@ static const struct addi_board boardtypes[] = {
 	},
 };
 
-static DEFINE_PCI_DEVICE_TABLE(addi_apci_tbl) = {
+static struct comedi_driver apci3120_driver = {
+	.driver_name	= "addi_apci_3120",
+	.module		= THIS_MODULE,
+	.attach		= i_ADDI_Attach,
+	.detach		= i_ADDI_Detach,
+	.num_names	= ARRAY_SIZE(apci3120_boardtypes),
+	.board_name	= &apci3120_boardtypes[0].pc_DriverName,
+	.offset		= sizeof(struct addi_board),
+};
+
+static int __devinit apci3120_pci_probe(struct pci_dev *dev,
+					const struct pci_device_id *ent)
+{
+	return comedi_pci_auto_config(dev, &apci3120_driver);
+}
+
+static void __devexit apci3120_pci_remove(struct pci_dev *dev)
+{
+	comedi_pci_auto_unconfig(dev);
+}
+
+static DEFINE_PCI_DEVICE_TABLE(apci3120_pci_table) = {
 	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA_OLD, 0x818d) },
 	{ 0 }
 };
-MODULE_DEVICE_TABLE(pci, addi_apci_tbl);
+MODULE_DEVICE_TABLE(pci, apci3120_pci_table);
 
-#include "addi-data/addi_common.c"
+static struct pci_driver apci3120_pci_driver = {
+	.name		= "addi_apci_3120",
+	.id_table	= apci3120_pci_table,
+	.probe		= apci3120_pci_probe,
+	.remove		= __devexit_p(apci3120_pci_remove),
+};
+module_comedi_pci_driver(apci3120_driver, apci3120_pci_driver);
 
 MODULE_AUTHOR("Comedi http://www.comedi.org");
 MODULE_DESCRIPTION("Comedi low-level driver");

commit c0a053b8b24d72413a82a16a41f635e6040ccf34
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Mon Oct 29 16:52:36 2012 -0700

    staging: comedi: addi-data: remove the boardinfo #ifdef'ery
    
    Move the boardinfo for each addi-data driver from addi_common.c to
    the individual driver files. This removes the need #ifdef'ery.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index d109306e187b..bd2a654eeba9 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -11,6 +11,50 @@
 #include "addi-data/addi_eeprom.c"
 #include "addi-data/hwdrv_apci3120.c"
 
+static const struct addi_board boardtypes[] = {
+	{
+		.pc_DriverName		= "apci3120",
+		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA_OLD,
+		.i_DeviceId		= 0x818D,
+		.i_IorangeBase0		= AMCC_OP_REG_SIZE,
+		.i_IorangeBase1		= APCI3120_ADDRESS_RANGE,
+		.i_IorangeBase2		= 8,
+		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
+		.i_NbrAiChannel		= 16,
+		.i_NbrAiChannelDiff	= 8,
+		.i_AiChannelList	= 16,
+		.i_NbrAoChannel		= 8,
+		.i_AiMaxdata		= 0xffff,
+		.i_AoMaxdata		= 0x3fff,
+		.pr_AiRangelist		= &range_apci3120_ai,
+		.pr_AoRangelist		= &range_apci3120_ao,
+		.i_NbrDiChannel		= 4,
+		.i_NbrDoChannel		= 4,
+		.i_DoMaxdata		= 0x0f,
+		.i_Dma			= 1,
+		.i_Timer		= 1,
+		.b_AvailableConvertUnit	= 1,
+		.ui_MinAcquisitiontimeNs = 10000,
+		.ui_MinDelaytimeNs	= 100000,
+		.interrupt		= v_APCI3120_Interrupt,
+		.reset			= i_APCI3120_Reset,
+		.ai_config		= i_APCI3120_InsnConfigAnalogInput,
+		.ai_read		= i_APCI3120_InsnReadAnalogInput,
+		.ai_cmdtest		= i_APCI3120_CommandTestAnalogInput,
+		.ai_cmd			= i_APCI3120_CommandAnalogInput,
+		.ai_cancel		= i_APCI3120_StopCyclicAcquisition,
+		.ao_write		= i_APCI3120_InsnWriteAnalogOutput,
+		.di_read		= i_APCI3120_InsnReadDigitalInput,
+		.di_bits		= i_APCI3120_InsnBitsDigitalInput,
+		.do_config		= i_APCI3120_InsnConfigDigitalOutput,
+		.do_write		= i_APCI3120_InsnWriteDigitalOutput,
+		.do_bits		= i_APCI3120_InsnBitsDigitalOutput,
+		.timer_config		= i_APCI3120_InsnConfigTimer,
+		.timer_write		= i_APCI3120_InsnWriteTimer,
+		.timer_read		= i_APCI3120_InsnReadTimer,
+	},
+};
+
 static DEFINE_PCI_DEVICE_TABLE(addi_apci_tbl) = {
 	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA_OLD, 0x818d) },
 	{ 0 }

commit 317285d71acccbda2fbab7e53d6b33c52a151a32
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Mon Oct 29 16:52:20 2012 -0700

    staging: comedi: addi-data: remove the MODULE_DEVICE_TABLE #ifdef'ery
    
    Move the MODULE_DEVICE_TABLE for each addi-data driver from addi_common.c
    to the individual driver files. This removes the need #ifdef'ery.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 6324f7457f4e..d109306e187b 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -10,6 +10,13 @@
 
 #include "addi-data/addi_eeprom.c"
 #include "addi-data/hwdrv_apci3120.c"
+
+static DEFINE_PCI_DEVICE_TABLE(addi_apci_tbl) = {
+	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA_OLD, 0x818d) },
+	{ 0 }
+};
+MODULE_DEVICE_TABLE(pci, addi_apci_tbl);
+
 #include "addi-data/addi_common.c"
 
 MODULE_AUTHOR("Comedi http://www.comedi.org");

commit bf6a1578c10a4f3ef94a3c744267f18f9c3642bd
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Mon Oct 29 16:52:03 2012 -0700

    staging: comedi: addi-data: remove the addi-data #include ifdef'ery
    
    Move the addi-data specific #include's from addi_common.h to the
    individual driver files.
    
    The apci-1710, apci-3200, and apci-3300 drivers still have floating
    point code in them and are currently disabled in the Kconfig and
    Makefile. For now, move the fpu_{begin,end} functions from addi_common.c
    to the main driver file so we can get rid of the #ifdef'ery.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index db73b736cdda..6324f7457f4e 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -8,6 +8,8 @@
 
 #define ADDIDATA_DRIVER_NAME	"addi_apci_3120"
 
+#include "addi-data/addi_eeprom.c"
+#include "addi-data/hwdrv_apci3120.c"
 #include "addi-data/addi_common.c"
 
 MODULE_AUTHOR("Comedi http://www.comedi.org");

commit 3d41c44370a9a1e78e53c9997289347ec97d46ee
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Mon Oct 29 16:51:33 2012 -0700

    staging: comedi: addi-data: move the main #include's to the drivers
    
    The addi-data drivers are all built by the main driver files including
    addi-data/addi_common.c. That file then includes other files depending
    on what driver is being compiled. This is makes the code quite messy
    and hard to follow.
    
    Start cleaning it up by removing the unneeded #include's in addi_common.c
    and moving the some of the comedi #include's into the individual driver
    files.
    
    This is the first step in getting rid of the #ifdef'ery in addi_common.c.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index c35515845cf3..db73b736cdda 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -1,3 +1,9 @@
+#include "../comedidev.h"
+#include "comedi_fc.h"
+
+#include "addi-data/addi_common.h"
+#include "addi-data/addi_amcc_s5933.h"
+
 #define CONFIG_APCI_3120 1
 
 #define ADDIDATA_DRIVER_NAME	"addi_apci_3120"

commit 90f703d30dd3e0c16ff80f35e34e511385a05ad5
Author: Arun Thomas <arun.thomas@gmail.com>
Date:   Sun Jun 6 22:23:29 2010 +0200

    Staging: comedi: Remove COMEDI_MODULES_MACRO
    
    Add MODULE_AUTHOR, MODULE_LICENSE, and MODULE_DESCRIPTION calls
    to the respective C source files instead of calling COMEDI_MODULES_MACRO
    
    Signed-off-by: Arun Thomas <arun.thomas@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 0b22cf10415d..c35515845cf3 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -3,3 +3,7 @@
 #define ADDIDATA_DRIVER_NAME	"addi_apci_3120"
 
 #include "addi-data/addi_common.c"
+
+MODULE_AUTHOR("Comedi http://www.comedi.org");
+MODULE_DESCRIPTION("Comedi low-level driver");
+MODULE_LICENSE("GPL");

commit 6d8b0f5be5108f6a3fc922ca4acfbf10e14d6cd0
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Wed May 19 15:11:57 2010 +0100

    Staging: comedi: Give the addi_apci_* drivers different driver names
    
    It is not currently possible for more than one of the addi_apci_*
    drivers to register themselves with comedi at once because they all use
    the same comedi driver name "addi_common".  Give them different names.
    
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
index 9183125ddde4..0b22cf10415d 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3120.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -1,3 +1,5 @@
 #define CONFIG_APCI_3120 1
 
+#define ADDIDATA_DRIVER_NAME	"addi_apci_3120"
+
 #include "addi-data/addi_common.c"

commit c995fe9475e062bab6f5a45ed28cd2d3d955ef43
Author: ADDI-DATA GmbH <info@addi-data.com>
Date:   Thu Feb 12 15:14:18 2009 -0800

    Staging: comedi: add addi-data drivers
    
    This adds the addi-data family of comedi drivers to the staging tree
    
    From: ADDI-DATA GmbH <info@addi-data.com>
    Cc: David Schleef <ds@schleef.org>
    Cc: Frank Mori Hess <fmhess@users.sourceforge.net>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3120.c b/drivers/staging/comedi/drivers/addi_apci_3120.c
new file mode 100644
index 000000000000..9183125ddde4
--- /dev/null
+++ b/drivers/staging/comedi/drivers/addi_apci_3120.c
@@ -0,0 +1,3 @@
+#define CONFIG_APCI_3120 1
+
+#include "addi-data/addi_common.c"
