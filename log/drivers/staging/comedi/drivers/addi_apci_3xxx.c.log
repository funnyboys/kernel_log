commit b69839391d444882d83c85a531da8b4e75a2b2e6
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Nov 7 14:58:44 2017 +0100

    staging: comedi: drivers: Remove redundant license text
    
    Now that the SPDX tag is in all comedi files, that identifies the
    license in a specific and legally-defined manner.  So the extra GPL text
    wording can be removed as it is no longer needed at all.
    
    This is done on a quest to remove the 700+ different ways that files in
    the kernel describe the GPL license text.  And there's unneeded stuff
    like the address (sometimes incorrect) for the FSF which is never
    needed.
    
    No copyright headers or other non-license-description text was removed.
    
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Cc: H Hartley Sweeten <hsweeten@visionengravers.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index dd9a23af97bd..55784f24e2a7 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -11,16 +11,6 @@
  *	Fax: +49(0)7223/9493-92
  *	http://www.addi-data.com
  *	info@addi-data.com
- *
- * This program is free software; you can redistribute it and/or modify it
- * under the terms of the GNU General Public License as published by the
- * Free Software Foundation; either version 2 of the License, or (at your
- * option) any later version.
- *
- * This program is distributed in the hope that it will be useful, but WITHOUT
- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
- * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
- * more details.
  */
 
 #include <linux/module.h>

commit e184e2bed8fc895ce930624524d319289c1f1082
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Nov 7 14:58:43 2017 +0100

    staging: comedi: add SPDX identifiers to all greybus driver files
    
    It's good to have SPDX identifiers in all files to make it easier to
    audit the kernel tree for correct licenses.
    
    Update the drivers/staging/comedi files files with the correct SPDX
    license identifier based on the license text in the file itself.  The
    SPDX identifier is a legally binding shorthand, which can be used
    instead of the full boiler plate text.
    
    This work is based on a script and data from Thomas Gleixner, Philippe
    Ombredanne, and Kate Stewart.
    
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Cc: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Kate Stewart <kstewart@linuxfoundation.org>
    Cc: Philippe Ombredanne <pombredanne@nexb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index be1f6133ff1c..dd9a23af97bd 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -1,3 +1,4 @@
+// SPDX-License-Identifier: GPL-2.0+
 /*
  * addi_apci_3xxx.c
  * Copyright (C) 2004,2005  ADDI-DATA GmbH for the source code of this module.

commit a455178e59f2b3591840cc543cf637424bd572d7
Author: Pan Bian <bianpan2016@163.com>
Date:   Sun Apr 23 17:52:55 2017 +0800

    staging: comedi: addi_apci_3xxx: check return value
    
    Function pci_ioremap_bar() will return a NULL pointer if there is no
    enough memory. However, in function apci3xxx_auto_attach(), the return
    value of function pci_ioremap_bar() is not validated. This may result in
    NULL dereference in following access to dev->mmio. This patch fixes the
    bug.
    
    Signed-off-by: Pan Bian <bianpan2016@163.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 82c22110f128..be1f6133ff1c 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -787,6 +787,8 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 
 	dev->iobase = pci_resource_start(pcidev, 2);
 	dev->mmio = pci_ioremap_bar(pcidev, 3);
+	if (!dev->mmio)
+		return -ENOMEM;
 
 	if (pcidev->irq > 0) {
 		ret = request_irq(pcidev->irq, apci3xxx_irq_handler,

commit 7dfc6971243430dd9edef3c4c0694d3a97b321f7
Author: simran singhal <singhalsimran0@gmail.com>
Date:   Tue Feb 21 23:58:26 2017 +0530

    staging: comedi: Using macro DIV_ROUND_UP
    
    The macro DIV_ROUND_UP performs the computation (((n) + (d) - 1) /(d)).
    It clarifies the divisor calculations. This occurence was detected using
    the coccinelle script:
    
    @@
    expression e1;
    expression e2;
    @@
    (
    - ((e1) + e2 - 1) / (e2)
    + DIV_ROUND_UP(e1,e2)
    |
    - ((e1) + (e2 - 1)) / (e2)
    + DIV_ROUND_UP(e1,e2)
    )
    
    Signed-off-by: simran singhal <singhalsimran0@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index b6af3eba91fd..82c22110f128 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -502,7 +502,7 @@ static int apci3xxx_ai_ns_to_timer(struct comedi_device *dev,
 			timer = *ns / base;
 			break;
 		case CMDF_ROUND_UP:
-			timer = (*ns + base - 1) / base;
+			timer = DIV_ROUND_UP(*ns, base);
 			break;
 		}
 

commit 2ead7b32aadc83833d7cf6e9751ef56b89e90462
Author: Amitoj Kaur Chawla <amitoj1606@gmail.com>
Date:   Fri Feb 19 20:57:15 2016 +0530

    staging: comedi: drivers: Use DIV_ROUND_CLOSEST
    
    The kernel.h macro DIV_ROUND_CLOSEST performs the computation
    `(x +d/2)/d` but is perhaps more readable.
    
    The Coccinelle script used is as follows:
    // <smpl>
    @@
    expression x,__divisor;
    @@
    - (((x) + ((__divisor) / 2)) / (__divisor))
    + DIV_ROUND_CLOSEST(x,__divisor)
    // </smpl>
    
    Signed-off-by: Amitoj Kaur Chawla <amitoj1606@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 995096c78844..b6af3eba91fd 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -496,7 +496,7 @@ static int apci3xxx_ai_ns_to_timer(struct comedi_device *dev,
 		switch (flags & CMDF_ROUND_MASK) {
 		case CMDF_ROUND_NEAREST:
 		default:
-			timer = (*ns + base / 2) / base;
+			timer = DIV_ROUND_CLOSEST(*ns, base);
 			break;
 		case CMDF_ROUND_DOWN:
 			timer = *ns / base;

commit dcfd349493f7c37065c262a6f5939c1f3060b157
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Fri Oct 9 10:58:55 2015 -0700

    staging: comedi: addi_apci_3xxx: prefer using the BIT macro
    
    As suggested by checkpatch.pl, use the BIT macro to define the
    register bits.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index bef6efc84efd..995096c78844 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -27,9 +27,9 @@
 
 #include "../comedi_pci.h"
 
-#define CONV_UNIT_NS		(1 << 0)
-#define CONV_UNIT_US		(1 << 1)
-#define CONV_UNIT_MS		(1 << 2)
+#define CONV_UNIT_NS		BIT(0)
+#define CONV_UNIT_US		BIT(1)
+#define CONV_UNIT_MS		BIT(2)
 
 static const struct comedi_lrange apci3xxx_ai_range = {
 	8, {

commit c0618689e58d08b27c99c1f0acb472bff65e4586
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Fri Mar 27 19:13:55 2015 +0000

    staging: comedi: addi_apci_3xxx: remove #include "comedi_fc.h"
    
    As preparation for removal of "comedi_fc.h", replace calls to the
    `cfc_check_trigger_...` functions from "comedi_fc.h" with the
    replacement `comedi_check_trigger_...` functions from "../comedidev.h"
    and remove the inclusion of "comedi_fc.h".
    
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Reviewed-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 8dadab8b3e09..bef6efc84efd 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -27,8 +27,6 @@
 
 #include "../comedi_pci.h"
 
-#include "comedi_fc.h"
-
 #define CONV_UNIT_NS		(1 << 0)
 #define CONV_UNIT_US		(1 << 1)
 #define CONV_UNIT_MS		(1 << 2)
@@ -528,18 +526,18 @@ static int apci3xxx_ai_cmdtest(struct comedi_device *dev,
 
 	/* Step 1 : check if triggers are trivially valid */
 
-	err |= cfc_check_trigger_src(&cmd->start_src, TRIG_NOW);
-	err |= cfc_check_trigger_src(&cmd->scan_begin_src, TRIG_FOLLOW);
-	err |= cfc_check_trigger_src(&cmd->convert_src, TRIG_TIMER);
-	err |= cfc_check_trigger_src(&cmd->scan_end_src, TRIG_COUNT);
-	err |= cfc_check_trigger_src(&cmd->stop_src, TRIG_COUNT | TRIG_NONE);
+	err |= comedi_check_trigger_src(&cmd->start_src, TRIG_NOW);
+	err |= comedi_check_trigger_src(&cmd->scan_begin_src, TRIG_FOLLOW);
+	err |= comedi_check_trigger_src(&cmd->convert_src, TRIG_TIMER);
+	err |= comedi_check_trigger_src(&cmd->scan_end_src, TRIG_COUNT);
+	err |= comedi_check_trigger_src(&cmd->stop_src, TRIG_COUNT | TRIG_NONE);
 
 	if (err)
 		return 1;
 
 	/* Step 2a : make sure trigger sources are unique */
 
-	err |= cfc_check_trigger_is_unique(cmd->stop_src);
+	err |= comedi_check_trigger_is_unique(cmd->stop_src);
 
 	/* Step 2b : and mutually compatible */
 
@@ -548,16 +546,17 @@ static int apci3xxx_ai_cmdtest(struct comedi_device *dev,
 
 	/* Step 3: check if arguments are trivially valid */
 
-	err |= cfc_check_trigger_arg_is(&cmd->start_arg, 0);
-	err |= cfc_check_trigger_arg_is(&cmd->scan_begin_arg, 0);
-	err |= cfc_check_trigger_arg_min(&cmd->convert_arg,
-					 board->ai_min_acq_ns);
-	err |= cfc_check_trigger_arg_is(&cmd->scan_end_arg, cmd->chanlist_len);
+	err |= comedi_check_trigger_arg_is(&cmd->start_arg, 0);
+	err |= comedi_check_trigger_arg_is(&cmd->scan_begin_arg, 0);
+	err |= comedi_check_trigger_arg_min(&cmd->convert_arg,
+					    board->ai_min_acq_ns);
+	err |= comedi_check_trigger_arg_is(&cmd->scan_end_arg,
+					   cmd->chanlist_len);
 
 	if (cmd->stop_src == TRIG_COUNT)
-		err |= cfc_check_trigger_arg_min(&cmd->stop_arg, 1);
+		err |= comedi_check_trigger_arg_min(&cmd->stop_arg, 1);
 	else	/* TRIG_NONE */
-		err |= cfc_check_trigger_arg_is(&cmd->stop_arg, 0);
+		err |= comedi_check_trigger_arg_is(&cmd->stop_arg, 0);
 
 	if (err)
 		return 3;
@@ -566,7 +565,7 @@ static int apci3xxx_ai_cmdtest(struct comedi_device *dev,
 
 	arg = cmd->convert_arg;
 	err |= apci3xxx_ai_ns_to_timer(dev, &arg, cmd->flags);
-	err |= cfc_check_trigger_arg_is(&cmd->convert_arg, arg);
+	err |= comedi_check_trigger_arg_is(&cmd->convert_arg, arg);
 
 	if (err)
 		return 4;

commit 6d669e563a2f772067c04fe457bbbb94e41b908b
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Tue Mar 10 16:10:32 2015 +0000

    staging: comedi: addi_apci_3xxx: include new "comedi_pci.h" header
    
    Include the new "../comedi_pci.h" header instead of <linux/pci.h> and
    "../comedidev.h", which will now get included indirectly.
    
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Reviewed-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index c173810a3b5b..8dadab8b3e09 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -23,10 +23,9 @@
  */
 
 #include <linux/module.h>
-#include <linux/pci.h>
 #include <linux/interrupt.h>
 
-#include "../comedidev.h"
+#include "../comedi_pci.h"
 
 #include "comedi_fc.h"
 

commit aa11672ef43c05d4ff5580ad41ceae9867e5430d
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Fri Nov 21 10:19:10 2014 -0700

    staging: comedi: drivers: have core hook up default (*insn_read) for readback
    
    Most of the comedi drivers that provide readback for write only subdevices now
    use the comedi core comedi_alloc_subdev_readback() helper to allocate the subdevice
    'reaback' member instead of using some member in their private data. These drivers
    also hook up the (*insn_read) callback to the comedi_readback_insn_read() helper to
    provide the readback.
    
    Have the core automatically hook up the (*insn_read) callback after allocating the
    memory if the driver has not already hooked it up to a private function.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 630d778df2c5..c173810a3b5b 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -854,7 +854,6 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 		s->maxdata	= 0x0fff;
 		s->range_table	= &apci3xxx_ao_range;
 		s->insn_write	= apci3xxx_ao_insn_write;
-		s->insn_read	= comedi_readback_insn_read;
 
 		ret = comedi_alloc_subdev_readback(s);
 		if (ret)

commit ef49d8329e25ee1686520315713b86419cddcb45
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Thu Oct 30 11:19:34 2014 -0700

    staging: comedi: drivers: replace SDF_WRITEABLE with SDF_WRITABLE
    
    As indicated in the comedi.h uapi header, SDF_WRITEABLE was a spelling
    error in the API, SDF_WRITABLE is prefered.
    
    For aesthetics, replace all the SDF_WRITEABLE uses with SDF_WRITABLE.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index db3ee9c429ad..630d778df2c5 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -849,7 +849,7 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 	if (board->has_ao) {
 		s = &dev->subdevices[subdev];
 		s->type		= COMEDI_SUBD_AO;
-		s->subdev_flags	= SDF_WRITEABLE | SDF_GROUND | SDF_COMMON;
+		s->subdev_flags	= SDF_WRITABLE | SDF_GROUND | SDF_COMMON;
 		s->n_chan	= 4;
 		s->maxdata	= 0x0fff;
 		s->range_table	= &apci3xxx_ao_range;
@@ -880,7 +880,7 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 	if (board->has_dig_out) {
 		s = &dev->subdevices[subdev];
 		s->type		= COMEDI_SUBD_DO;
-		s->subdev_flags	= SDF_WRITEABLE;
+		s->subdev_flags	= SDF_WRITABLE;
 		s->n_chan	= 4;
 		s->maxdata	= 1;
 		s->range_table	= &range_digital;
@@ -893,7 +893,7 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 	if (board->has_ttl_io) {
 		s = &dev->subdevices[subdev];
 		s->type		= COMEDI_SUBD_DIO;
-		s->subdev_flags	= SDF_READABLE | SDF_WRITEABLE;
+		s->subdev_flags	= SDF_READABLE | SDF_WRITABLE;
 		s->n_chan	= 24;
 		s->maxdata	= 1;
 		s->io_bits	= 0xff;	/* channels 0-7 are always outputs */

commit 6aec0f9af4c769fd104294745467fd8399548da7
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Oct 22 15:36:49 2014 -0700

    staging: comedi: addi_apci_3xxx: use comedi_buf_write_samples()
    
    For aesthetics, use comedi_buf_write_samples() to add the sample to the
    async buffer.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index fe9ac2d72694..db3ee9c429ad 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -371,7 +371,7 @@ static irqreturn_t apci3xxx_irq_handler(int irq, void *d)
 		writel(status, dev->mmio + 16);
 
 		val = readl(dev->mmio + 28);
-		comedi_buf_put(s, val);
+		comedi_buf_write_samples(s, &val, 1);
 
 		s->async->events |= COMEDI_CB_EOA;
 		comedi_handle_events(dev, s);

commit f47906a3421af0864dc93c812347c553efa208ee
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Thu Sep 18 11:35:21 2014 -0700

    staging: comedi: addi_apci_3xxx: use comedi_handle_events()
    
    Use comedi_handle_events() to automatically (*cancel) the async command
    for an end-of-acquisition or if an error/overflow occurs.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index a296bd5b2c0c..fe9ac2d72694 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -374,7 +374,7 @@ static irqreturn_t apci3xxx_irq_handler(int irq, void *d)
 		comedi_buf_put(s, val);
 
 		s->async->events |= COMEDI_CB_EOA;
-		comedi_event(dev, s);
+		comedi_handle_events(dev, s);
 
 		return IRQ_HANDLED;
 	}

commit ef97126fd0f04f55e17d8beb409a6ffc9741f3dc
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Tue Sep 9 11:26:14 2014 +0100

    staging: comedi: addi_apci_3xxx: replace comedi_board() calls
    
    The `comedi_board(dev)` inline function calls just return
    `dev->board_ptr`.  Expand the inline function calls.
    
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Reviewed-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index f26e4eccac14..a296bd5b2c0c 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -472,7 +472,7 @@ static int apci3xxx_ai_insn_read(struct comedi_device *dev,
 static int apci3xxx_ai_ns_to_timer(struct comedi_device *dev,
 				   unsigned int *ns, unsigned int flags)
 {
-	const struct apci3xxx_boardinfo *board = comedi_board(dev);
+	const struct apci3xxx_boardinfo *board = dev->board_ptr;
 	struct apci3xxx_private *devpriv = dev->private;
 	unsigned int base;
 	unsigned int timer;
@@ -523,7 +523,7 @@ static int apci3xxx_ai_cmdtest(struct comedi_device *dev,
 			       struct comedi_subdevice *s,
 			       struct comedi_cmd *cmd)
 {
-	const struct apci3xxx_boardinfo *board = comedi_board(dev);
+	const struct apci3xxx_boardinfo *board = dev->board_ptr;
 	int err = 0;
 	unsigned int arg;
 

commit 74eede61acaa6881b9d9a733d904a314768f3eb7
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Wed Sep 3 13:45:47 2014 +0100

    staging: comedi: addi_apci_3xxx: use CMDF_ROUND_...
    
    Replace use of the `TRIG_ROUND_...` macros with the new names
    `CMDF_ROUND_...`.  The numeric values are unchanged.
    
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Reviewed-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 57e6f889d73f..f26e4eccac14 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -496,15 +496,15 @@ static int apci3xxx_ai_ns_to_timer(struct comedi_device *dev,
 			break;
 		}
 
-		switch (flags & TRIG_ROUND_MASK) {
-		case TRIG_ROUND_NEAREST:
+		switch (flags & CMDF_ROUND_MASK) {
+		case CMDF_ROUND_NEAREST:
 		default:
 			timer = (*ns + base / 2) / base;
 			break;
-		case TRIG_ROUND_DOWN:
+		case CMDF_ROUND_DOWN:
 			timer = *ns / base;
 			break;
-		case TRIG_ROUND_UP:
+		case CMDF_ROUND_UP:
 			timer = (*ns + base - 1) / base;
 			break;
 		}

commit aac307f9dd5ce1fe651140a036ab4b0a0571b54a
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Aug 25 17:55:48 2014 -0700

    staging: comedi: comedi_pci: introduce comedi_pci_detach()
    
    Introduce a generic (*detach) function for comedi PCI drivers to handle
    the boilerplate code needed to detach a PCI driver.
    
    This function works similar to comedi_legacy_detach() where it will:
    
      * free the dev->irq if it has been requested
      * iounmap the dev->mmio addres if it has been ioremap'ed
    
    The helper then calls comedi_pci_disable() to release the regions and
    disable the PCI device.
    
    Use the new helper directly for the (*detach) in the following cases:
    
      * where comedi_pci_disable() is used directly for the (*detach)
      * where the detach function is just boilerplate
    
    Use the new helper in the (*detach) of the simpler PCI drivers. Call
    the helper after disabling interrupts (reset) and before any additional
    cleanup (kfree) to avoid any race conditions with the interrupt handler.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 1f59f1681831..57e6f889d73f 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -910,17 +910,9 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 
 static void apci3xxx_detach(struct comedi_device *dev)
 {
-	struct apci3xxx_private *devpriv = dev->private;
-
-	if (devpriv) {
-		if (dev->iobase)
-			apci3xxx_reset(dev);
-		if (dev->irq)
-			free_irq(dev->irq, dev);
-		if (dev->mmio)
-			iounmap(dev->mmio);
-	}
-	comedi_pci_disable(dev);
+	if (dev->iobase)
+		apci3xxx_reset(dev);
+	comedi_pci_detach(dev);
 }
 
 static struct comedi_driver apci3xxx_driver = {

commit b38d64946f8e78055f742f23678b5ebed674a5b3
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Aug 25 16:04:25 2014 -0700

    staging: comedi: addi_apci_3xxx: use comedi_subdevice 'readback'
    
    Use the new comedi_subdevice 'readback' member and the core provided
    (*insn_read) for the readback of the analog output subdevice channels.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 0f0c7fa5daa3..1f59f1681831 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -628,16 +628,20 @@ static int apci3xxx_ao_insn_write(struct comedi_device *dev,
 	int i;
 
 	for (i = 0; i < insn->n; i++) {
+		unsigned int val = data[i];
+
 		/* Set the range selection */
 		writel(range, dev->mmio + 96);
 
 		/* Write the analog value to the selected channel */
-		writel((data[i] << 8) | chan, dev->mmio + 100);
+		writel((val << 8) | chan, dev->mmio + 100);
 
 		/* Wait the end of transfer */
 		ret = comedi_timeout(dev, s, insn, apci3xxx_ao_eoc, 0);
 		if (ret)
 			return ret;
+
+		s->readback[chan] = val;
 	}
 
 	return insn->n;
@@ -850,6 +854,11 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 		s->maxdata	= 0x0fff;
 		s->range_table	= &apci3xxx_ao_range;
 		s->insn_write	= apci3xxx_ao_insn_write;
+		s->insn_read	= comedi_readback_insn_read;
+
+		ret = comedi_alloc_subdev_readback(s);
+		if (ret)
+			return ret;
 
 		subdev++;
 	}

commit 24a446127966eb309dbdb9c5b72c5cd59bd6edf9
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Jul 29 15:01:27 2014 -0700

    staging: comedi: addi_apci_3xxx: use the comedi_device 'mmio' member
    
    Use the new 'mmio' member in the comedi_device for the ioremap'ed
    base address.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 1b7cbf400c10..0f0c7fa5daa3 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -353,7 +353,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 };
 
 struct apci3xxx_private {
-	void __iomem *mmio;
 	unsigned int ai_timer;
 	unsigned char ai_time_base;
 };
@@ -361,18 +360,17 @@ struct apci3xxx_private {
 static irqreturn_t apci3xxx_irq_handler(int irq, void *d)
 {
 	struct comedi_device *dev = d;
-	struct apci3xxx_private *devpriv = dev->private;
 	struct comedi_subdevice *s = dev->read_subdev;
 	unsigned int status;
 	unsigned int val;
 
 	/* Test if interrupt occur */
-	status = readl(devpriv->mmio + 16);
+	status = readl(dev->mmio + 16);
 	if ((status & 0x2) == 0x2) {
 		/* Reset the interrupt */
-		writel(status, devpriv->mmio + 16);
+		writel(status, dev->mmio + 16);
 
-		val = readl(devpriv->mmio + 28);
+		val = readl(dev->mmio + 28);
 		comedi_buf_put(s, val);
 
 		s->async->events |= COMEDI_CB_EOA;
@@ -385,9 +383,7 @@ static irqreturn_t apci3xxx_irq_handler(int irq, void *d)
 
 static int apci3xxx_ai_started(struct comedi_device *dev)
 {
-	struct apci3xxx_private *devpriv = dev->private;
-
-	if ((readl(devpriv->mmio + 8) & 0x80000) == 0x80000)
+	if ((readl(dev->mmio + 8) & 0x80000) == 0x80000)
 		return 1;
 
 	return 0;
@@ -395,7 +391,6 @@ static int apci3xxx_ai_started(struct comedi_device *dev)
 
 static int apci3xxx_ai_setup(struct comedi_device *dev, unsigned int chanspec)
 {
-	struct apci3xxx_private *devpriv = dev->private;
 	unsigned int chan = CR_CHAN(chanspec);
 	unsigned int range = CR_RANGE(chanspec);
 	unsigned int aref = CR_AREF(chanspec);
@@ -406,29 +401,29 @@ static int apci3xxx_ai_setup(struct comedi_device *dev, unsigned int chanspec)
 		return -EBUSY;
 
 	/* Clear the FIFO */
-	writel(0x10000, devpriv->mmio + 12);
+	writel(0x10000, dev->mmio + 12);
 
 	/* Get and save the delay mode */
-	delay_mode = readl(devpriv->mmio + 4);
+	delay_mode = readl(dev->mmio + 4);
 	delay_mode &= 0xfffffef0;
 
 	/* Channel configuration selection */
-	writel(delay_mode, devpriv->mmio + 4);
+	writel(delay_mode, dev->mmio + 4);
 
 	/* Make the configuration */
 	val = (range & 3) | ((range >> 2) << 6) |
 	      ((aref == AREF_DIFF) << 7);
-	writel(val, devpriv->mmio + 0);
+	writel(val, dev->mmio + 0);
 
 	/* Channel selection */
-	writel(delay_mode | 0x100, devpriv->mmio + 4);
-	writel(chan, devpriv->mmio + 0);
+	writel(delay_mode | 0x100, dev->mmio + 4);
+	writel(chan, dev->mmio + 0);
 
 	/* Restore delay mode */
-	writel(delay_mode, devpriv->mmio + 4);
+	writel(delay_mode, dev->mmio + 4);
 
 	/* Set the number of sequence to 1 */
-	writel(1, devpriv->mmio + 48);
+	writel(1, dev->mmio + 48);
 
 	return 0;
 }
@@ -438,10 +433,9 @@ static int apci3xxx_ai_eoc(struct comedi_device *dev,
 			   struct comedi_insn *insn,
 			   unsigned long context)
 {
-	struct apci3xxx_private *devpriv = dev->private;
 	unsigned int status;
 
-	status = readl(devpriv->mmio + 20);
+	status = readl(dev->mmio + 20);
 	if (status & 0x1)
 		return 0;
 	return -EBUSY;
@@ -452,7 +446,6 @@ static int apci3xxx_ai_insn_read(struct comedi_device *dev,
 				 struct comedi_insn *insn,
 				 unsigned int *data)
 {
-	struct apci3xxx_private *devpriv = dev->private;
 	int ret;
 	int i;
 
@@ -462,7 +455,7 @@ static int apci3xxx_ai_insn_read(struct comedi_device *dev,
 
 	for (i = 0; i < insn->n; i++) {
 		/* Start the conversion */
-		writel(0x80000, devpriv->mmio + 8);
+		writel(0x80000, dev->mmio + 8);
 
 		/* Wait the EOS */
 		ret = comedi_timeout(dev, s, insn, apci3xxx_ai_eoc, 0);
@@ -470,7 +463,7 @@ static int apci3xxx_ai_insn_read(struct comedi_device *dev,
 			return ret;
 
 		/* Read the analog value */
-		data[i] = readl(devpriv->mmio + 28);
+		data[i] = readl(dev->mmio + 28);
 	}
 
 	return insn->n;
@@ -594,13 +587,13 @@ static int apci3xxx_ai_cmd(struct comedi_device *dev,
 		return ret;
 
 	/* Set the convert timing unit */
-	writel(devpriv->ai_time_base, devpriv->mmio + 36);
+	writel(devpriv->ai_time_base, dev->mmio + 36);
 
 	/* Set the convert timing */
-	writel(devpriv->ai_timer, devpriv->mmio + 32);
+	writel(devpriv->ai_timer, dev->mmio + 32);
 
 	/* Start the conversion */
-	writel(0x180000, devpriv->mmio + 8);
+	writel(0x180000, dev->mmio + 8);
 
 	return 0;
 }
@@ -616,10 +609,9 @@ static int apci3xxx_ao_eoc(struct comedi_device *dev,
 			   struct comedi_insn *insn,
 			   unsigned long context)
 {
-	struct apci3xxx_private *devpriv = dev->private;
 	unsigned int status;
 
-	status = readl(devpriv->mmio + 96);
+	status = readl(dev->mmio + 96);
 	if (status & 0x100)
 		return 0;
 	return -EBUSY;
@@ -630,7 +622,6 @@ static int apci3xxx_ao_insn_write(struct comedi_device *dev,
 				  struct comedi_insn *insn,
 				  unsigned int *data)
 {
-	struct apci3xxx_private *devpriv = dev->private;
 	unsigned int chan = CR_CHAN(insn->chanspec);
 	unsigned int range = CR_RANGE(insn->chanspec);
 	int ret;
@@ -638,10 +629,10 @@ static int apci3xxx_ao_insn_write(struct comedi_device *dev,
 
 	for (i = 0; i < insn->n; i++) {
 		/* Set the range selection */
-		writel(range, devpriv->mmio + 96);
+		writel(range, dev->mmio + 96);
 
 		/* Write the analog value to the selected channel */
-		writel((data[i] << 8) | chan, devpriv->mmio + 100);
+		writel((data[i] << 8) | chan, dev->mmio + 100);
 
 		/* Wait the end of transfer */
 		ret = comedi_timeout(dev, s, insn, apci3xxx_ao_eoc, 0);
@@ -740,7 +731,6 @@ static int apci3xxx_dio_insn_bits(struct comedi_device *dev,
 
 static int apci3xxx_reset(struct comedi_device *dev)
 {
-	struct apci3xxx_private *devpriv = dev->private;
 	unsigned int val;
 	int i;
 
@@ -748,18 +738,18 @@ static int apci3xxx_reset(struct comedi_device *dev)
 	disable_irq(dev->irq);
 
 	/* Clear the start command */
-	writel(0, devpriv->mmio + 8);
+	writel(0, dev->mmio + 8);
 
 	/* Reset the interrupt flags */
-	val = readl(devpriv->mmio + 16);
-	writel(val, devpriv->mmio + 16);
+	val = readl(dev->mmio + 16);
+	writel(val, dev->mmio + 16);
 
 	/* clear the EOS */
-	readl(devpriv->mmio + 20);
+	readl(dev->mmio + 20);
 
 	/* Clear the FIFO */
 	for (i = 0; i < 16; i++)
-		val = readl(devpriv->mmio + 28);
+		val = readl(dev->mmio + 28);
 
 	/* Enable the interrupt */
 	enable_irq(dev->irq);
@@ -794,7 +784,7 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 		return ret;
 
 	dev->iobase = pci_resource_start(pcidev, 2);
-	devpriv->mmio = pci_ioremap_bar(pcidev, 3);
+	dev->mmio = pci_ioremap_bar(pcidev, 3);
 
 	if (pcidev->irq > 0) {
 		ret = request_irq(pcidev->irq, apci3xxx_irq_handler,
@@ -918,8 +908,8 @@ static void apci3xxx_detach(struct comedi_device *dev)
 			apci3xxx_reset(dev);
 		if (dev->irq)
 			free_irq(dev->irq, dev);
-		if (devpriv->mmio)
-			iounmap(devpriv->mmio);
+		if (dev->mmio)
+			iounmap(dev->mmio);
 	}
 	comedi_pci_disable(dev);
 }

commit a207c12f62e8b53e1e1600ca384b13a39a9feed2
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Fri Jul 18 17:01:16 2014 -0700

    staging: comedi: drivers: cleanup cmd->flags use
    
    Most of the comedi drivers that support async commands have some sort
    of timer to control the acquisition timing. For these drivers, Step 4
    of the (*do_cmdtest) operations calls a ns_to_timer() function that
    converts the desired ns time of the command into a value used to set
    the timer. These ns_to_timer() functions also typically pass the
    cmd->flags in order to determine the desired rounding mode.
    
    Some of the drivers mask the cmd->flags with TRIG_ROUND_MASK when
    calling the ns_to_timer() functions. Move all the masking into the
    ns_to_timer() functions and just pass the cmd->flags directly.
    
    The cmd->flags member is an unsigned int, change the parameter type
    in the the ns_to_timer() functions to match.
    
    For aesthetics, rename the parameter in all the ns_to_timer()
    functions to 'flags'.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 12096ee584ec..1b7cbf400c10 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -477,7 +477,7 @@ static int apci3xxx_ai_insn_read(struct comedi_device *dev,
 }
 
 static int apci3xxx_ai_ns_to_timer(struct comedi_device *dev,
-				   unsigned int *ns, int round_mode)
+				   unsigned int *ns, unsigned int flags)
 {
 	const struct apci3xxx_boardinfo *board = comedi_board(dev);
 	struct apci3xxx_private *devpriv = dev->private;
@@ -503,7 +503,7 @@ static int apci3xxx_ai_ns_to_timer(struct comedi_device *dev,
 			break;
 		}
 
-		switch (round_mode) {
+		switch (flags & TRIG_ROUND_MASK) {
 		case TRIG_ROUND_NEAREST:
 		default:
 			timer = (*ns + base / 2) / base;
@@ -573,7 +573,7 @@ static int apci3xxx_ai_cmdtest(struct comedi_device *dev,
 	/* step 4: fix up any arguments */
 
 	arg = cmd->convert_arg;
-	err |= apci3xxx_ai_ns_to_timer(dev, &arg, cmd->flags & TRIG_ROUND_MASK);
+	err |= apci3xxx_ai_ns_to_timer(dev, &arg, cmd->flags);
 	err |= cfc_check_trigger_arg_is(&cmd->convert_arg, arg);
 
 	if (err)

commit 9ed221faae72ab1ad16e5f51d9f290e77af2c795
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jul 16 10:43:17 2014 -0700

    staging: comedi: addi_apci_3xxx: checkpatch.pl cleanup (else after return)
    
    Fix the checkpatch.pl warning in this file:
    
    WARNING: else is not generally useful after a break or return
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 0532b6cc40e3..12096ee584ec 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -389,9 +389,8 @@ static int apci3xxx_ai_started(struct comedi_device *dev)
 
 	if ((readl(devpriv->mmio + 8) & 0x80000) == 0x80000)
 		return 1;
-	else
-		return 0;
 
+	return 0;
 }
 
 static int apci3xxx_ai_setup(struct comedi_device *dev, unsigned int chanspec)
@@ -696,10 +695,9 @@ static int apci3xxx_dio_insn_config(struct comedi_device *dev,
 		/* ignore all other instructions for ports 0 and 1 */
 		if (chan < 16)
 			return -EINVAL;
-		else
-			/* changing any channel in port 2 */
-			/* changes the entire port        */
-			mask = 0xff0000;
+
+		/* changing any channel in port 2 changes the entire port */
+		mask = 0xff0000;
 	}
 
 	ret = comedi_dio_insn_config(dev, s, insn, data, mask);

commit 66e3015f6ec84f7143af0f01ce096b6cd9e1a4b9
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue May 27 10:13:01 2014 -0700

    staging: comedi: addi_apci_3xxx: use comedi_fc helpers to validate timer arg
    
    Use the comedi_fc helper cfc_check_trigger_arg_is() to validate the
    trigger argument when the source is TRIG_TIMER.
    
    For aesthetics, rename the local variable 'tmp' to 'arg'.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index df3b63ac4a0e..0532b6cc40e3 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -533,7 +533,7 @@ static int apci3xxx_ai_cmdtest(struct comedi_device *dev,
 {
 	const struct apci3xxx_boardinfo *board = comedi_board(dev);
 	int err = 0;
-	unsigned int tmp;
+	unsigned int arg;
 
 	/* Step 1 : check if triggers are trivially valid */
 
@@ -573,11 +573,9 @@ static int apci3xxx_ai_cmdtest(struct comedi_device *dev,
 
 	/* step 4: fix up any arguments */
 
-	tmp = cmd->convert_arg;
-	err |= apci3xxx_ai_ns_to_timer(dev, &cmd->convert_arg,
-				       cmd->flags & TRIG_ROUND_MASK);
-	if (tmp != cmd->convert_arg)
-		err |= -EINVAL;
+	arg = cmd->convert_arg;
+	err |= apci3xxx_ai_ns_to_timer(dev, &arg, cmd->flags & TRIG_ROUND_MASK);
+	err |= cfc_check_trigger_arg_is(&cmd->convert_arg, arg);
 
 	if (err)
 		return 4;

commit 3672effdeae5395d661a2103f69082146ef949fc
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Tue May 6 13:11:59 2014 +0100

    staging: comedi: pass subdevice to comedi_buf_put()
    
    Change the parameters of `comedi_buf_put()` to pass a pointer to the
    comedi subdevice instead of a pointer to the "async" structure belonging
    to the subdevice.
    
    The function puts a sample value in the comedi buffer, but currently
    only deals with 16-bit sample types.  A future version could deal with
    16 or 32-bit sample types depending on the value of the SDF_LSAMPL
    subdevice flag.
    
    The main aim at the moment is to replace all the `struct comedi_async *`
    parameters with `struct comedi_subdevice *` parameters in the comedi
    driver API.
    
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Reviewed-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index f290be818845..df3b63ac4a0e 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -373,7 +373,7 @@ static irqreturn_t apci3xxx_irq_handler(int irq, void *d)
 		writel(status, devpriv->mmio + 16);
 
 		val = readl(devpriv->mmio + 28);
-		comedi_buf_put(s->async, val);
+		comedi_buf_put(s, val);
 
 		s->async->events |= COMEDI_CB_EOA;
 		comedi_event(dev, s);

commit a1f6c2afed3f4c96194f131373b1e914b285c76b
Author: Luca Ellero <luca.ellero@brickedbrain.com>
Date:   Wed Apr 30 11:22:07 2014 +0200

    staging: comedi: fix checkpatch warnings
    
    Signed-off-by: Luca Ellero <luca.ellero@brickedbrain.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 64c37b65ba27..f290be818845 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -699,7 +699,8 @@ static int apci3xxx_dio_insn_config(struct comedi_device *dev,
 		if (chan < 16)
 			return -EINVAL;
 		else
-			/* changing any channel in port 2 changes the entire port */
+			/* changing any channel in port 2 */
+			/* changes the entire port        */
 			mask = 0xff0000;
 	}
 

commit 7c9fc34ea3ed02d7d8356094ac179e1c63ae443b
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Thu Apr 17 10:07:48 2014 -0700

    staging: comedi: addi_apci_3xxx: fix ai subdevice 'len_chanlist'
    
    Due to a driver limitation, the (*do_cmdtest) for the analog input subdevice
    overrides the cmd->chanlist_len to force single channel chanlists. But, the
    cmd->scan_end_arg was already validated before this happens. Instead of
    fixing the (*do_cmdtest) just set the subdevice len_chanlist to 1 to limit
    the chanlist size. Move the comment also.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 6dc11c407f57..64c37b65ba27 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -573,26 +573,6 @@ static int apci3xxx_ai_cmdtest(struct comedi_device *dev,
 
 	/* step 4: fix up any arguments */
 
-	/*
-	 * FIXME: The hardware supports multiple scan modes but the original
-	 * addi-data driver only supported reading a single channel with
-	 * interrupts. Need a proper datasheet to fix this.
-	 *
-	 * The following scan modes are supported by the hardware:
-	 * 1) Single software scan
-	 * 2) Single hardware triggered scan
-	 * 3) Continuous software scan
-	 * 4) Continuous software scan with timer delay
-	 * 5) Continuous hardware triggered scan
-	 * 6) Continuous hardware triggered scan with timer delay
-	 *
-	 * For now, limit the chanlist to a single channel.
-	 */
-	if (cmd->chanlist_len > 1) {
-		cmd->chanlist_len = 1;
-		err |= -EINVAL;
-	}
-
 	tmp = cmd->convert_arg;
 	err |= apci3xxx_ai_ns_to_timer(dev, &cmd->convert_arg,
 				       cmd->flags & TRIG_ROUND_MASK);
@@ -842,12 +822,30 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 		s->subdev_flags	= SDF_READABLE | board->ai_subdev_flags;
 		s->n_chan	= board->ai_n_chan;
 		s->maxdata	= board->ai_maxdata;
-		s->len_chanlist	= s->n_chan;
 		s->range_table	= &apci3xxx_ai_range;
 		s->insn_read	= apci3xxx_ai_insn_read;
 		if (dev->irq) {
+			/*
+			 * FIXME: The hardware supports multiple scan modes
+			 * but the original addi-data driver only supported
+			 * reading a single channel with interrupts. Need a
+			 * proper datasheet to fix this.
+			 *
+			 * The following scan modes are supported by the
+			 * hardware:
+			 *   1) Single software scan
+			 *   2) Single hardware triggered scan
+			 *   3) Continuous software scan
+			 *   4) Continuous software scan with timer delay
+			 *   5) Continuous hardware triggered scan
+			 *   6) Continuous hardware triggered scan with timer
+			 *      delay
+			 *
+			 * For now, limit the chanlist to a single channel.
+			 */
 			dev->read_subdev = s;
 			s->subdev_flags	|= SDF_CMD_READ;
+			s->len_chanlist	= 1;
 			s->do_cmdtest	= apci3xxx_ai_cmdtest;
 			s->do_cmd	= apci3xxx_ai_cmd;
 			s->cancel	= apci3xxx_ai_cancel;

commit 67562be5054f325324197cfd0f478cdc76ed57e8
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Feb 10 11:49:24 2014 -0700

    staging: comedi: addi_apci_3xx: use comedi_timeout()
    
    Use comedi_timeout() to wait for the analog input and output end-of-
    conversions.
    
    This prevents a deadlock condition that could occur by providing a
    timeout in case the end-of-conversion does not happen.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 1f3b668f7f1f..6dc11c407f57 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -434,13 +434,26 @@ static int apci3xxx_ai_setup(struct comedi_device *dev, unsigned int chanspec)
 	return 0;
 }
 
+static int apci3xxx_ai_eoc(struct comedi_device *dev,
+			   struct comedi_subdevice *s,
+			   struct comedi_insn *insn,
+			   unsigned long context)
+{
+	struct apci3xxx_private *devpriv = dev->private;
+	unsigned int status;
+
+	status = readl(devpriv->mmio + 20);
+	if (status & 0x1)
+		return 0;
+	return -EBUSY;
+}
+
 static int apci3xxx_ai_insn_read(struct comedi_device *dev,
 				 struct comedi_subdevice *s,
 				 struct comedi_insn *insn,
 				 unsigned int *data)
 {
 	struct apci3xxx_private *devpriv = dev->private;
-	unsigned int val;
 	int ret;
 	int i;
 
@@ -453,10 +466,9 @@ static int apci3xxx_ai_insn_read(struct comedi_device *dev,
 		writel(0x80000, devpriv->mmio + 8);
 
 		/* Wait the EOS */
-		do {
-			val = readl(devpriv->mmio + 20);
-			val &= 0x1;
-		} while (!val);
+		ret = comedi_timeout(dev, s, insn, apci3xxx_ai_eoc, 0);
+		if (ret)
+			return ret;
 
 		/* Read the analog value */
 		data[i] = readl(devpriv->mmio + 28);
@@ -622,6 +634,20 @@ static int apci3xxx_ai_cancel(struct comedi_device *dev,
 	return 0;
 }
 
+static int apci3xxx_ao_eoc(struct comedi_device *dev,
+			   struct comedi_subdevice *s,
+			   struct comedi_insn *insn,
+			   unsigned long context)
+{
+	struct apci3xxx_private *devpriv = dev->private;
+	unsigned int status;
+
+	status = readl(devpriv->mmio + 96);
+	if (status & 0x100)
+		return 0;
+	return -EBUSY;
+}
+
 static int apci3xxx_ao_insn_write(struct comedi_device *dev,
 				  struct comedi_subdevice *s,
 				  struct comedi_insn *insn,
@@ -630,7 +656,7 @@ static int apci3xxx_ao_insn_write(struct comedi_device *dev,
 	struct apci3xxx_private *devpriv = dev->private;
 	unsigned int chan = CR_CHAN(insn->chanspec);
 	unsigned int range = CR_RANGE(insn->chanspec);
-	unsigned int status;
+	int ret;
 	int i;
 
 	for (i = 0; i < insn->n; i++) {
@@ -641,9 +667,9 @@ static int apci3xxx_ao_insn_write(struct comedi_device *dev,
 		writel((data[i] << 8) | chan, devpriv->mmio + 100);
 
 		/* Wait the end of transfer */
-		do {
-			status = readl(devpriv->mmio + 96);
-		} while ((status & 0x100) != 0x100);
+		ret = comedi_timeout(dev, s, insn, apci3xxx_ao_eoc, 0);
+		if (ret)
+			return ret;
 	}
 
 	return insn->n;

commit b0377d4bd438d00310005190a46920cb0279106f
Author: Chase Southwood <chase.southwood@yahoo.com>
Date:   Thu Feb 13 19:02:26 2014 -0600

    Staging: comedi: clean up conditional statement in addi_apci_3xxx.c
    
    In this conditional statement, if (chan < 16), but the instruction passed
    in data[0] is INSN_CONFIG_DIO_QUERY, the function does not return early,
    but the else-branch does not get executed either.  As a result, mask
    would be used uninitialized in the next line.  We want
    comedi_dio_insn_config() to use a chan_mask based on the chanspec for the
    INSN_CONFIG_DIO_QUERY instruction, so mask should be initialized to 0.
    Then, if instead the instruction is INSN_CONFIG_DIO_{INPUT,OUTPUT}, we
    return an error if (chan < 16) as these are invalid instructions for
    ports 0 and 1, or update the mask otherwise, so all the io_bits are
    modified for port 2.  This ensures that mask is always initialized by the
    time it is used.
    
    Signed-off-by: Chase Southwood <chase.southwood@yahoo.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index ceadf8eff47f..1f3b668f7f1f 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -680,7 +680,7 @@ static int apci3xxx_dio_insn_config(struct comedi_device *dev,
 				    unsigned int *data)
 {
 	unsigned int chan = CR_CHAN(insn->chanspec);
-	unsigned int mask;
+	unsigned int mask = 0;
 	int ret;
 
 	/*
@@ -688,12 +688,13 @@ static int apci3xxx_dio_insn_config(struct comedi_device *dev,
 	 * Port 1 (channels 8-15) are always outputs
 	 * Port 2 (channels 16-23) are programmable i/o
 	 */
-	if (chan < 16) {
-		if (data[0] != INSN_CONFIG_DIO_QUERY)
+	if (data[0] != INSN_CONFIG_DIO_QUERY) {
+		/* ignore all other instructions for ports 0 and 1 */
+		if (chan < 16)
 			return -EINVAL;
-	} else {
-		/* changing any channel in port 2 changes the entire port */
-		mask = 0xff0000;
+		else
+			/* changing any channel in port 2 changes the entire port */
+			mask = 0xff0000;
 	}
 
 	ret = comedi_dio_insn_config(dev, s, insn, data, mask);

commit 41e043fcfa2236bb2c4a8335eb09f4c8cee224b3
Author: Jingoo Han <jg1.han@samsung.com>
Date:   Tue Dec 3 08:26:00 2013 +0900

    staging: remove DEFINE_PCI_DEVICE_TABLE macro
    
    Don't use DEFINE_PCI_DEVICE_TABLE macro, because this macro
    is not preferred.
    
    Signed-off-by: Jingoo Han <jg1.han@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 761cbf8f964b..ceadf8eff47f 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -915,7 +915,7 @@ static int apci3xxx_pci_probe(struct pci_dev *dev,
 	return comedi_pci_auto_config(dev, &apci3xxx_driver, id->driver_data);
 }
 
-static DEFINE_PCI_DEVICE_TABLE(apci3xxx_pci_table) = {
+static const struct pci_device_id apci3xxx_pci_table[] = {
 	{ PCI_VDEVICE(ADDIDATA, 0x3010), BOARD_APCI3000_16 },
 	{ PCI_VDEVICE(ADDIDATA, 0x300f), BOARD_APCI3000_8 },
 	{ PCI_VDEVICE(ADDIDATA, 0x300e), BOARD_APCI3000_4 },

commit ca5d4a20fb65a2ab2ad3c2797d7639d3dc64c147
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Fri Aug 30 11:09:44 2013 -0700

    staging: comedi: addi_apci_3xxx: use comedi_dio_update_state()
    
    The extra mask used to only update the channels configured as outputs is
    not necessary in this driver. Remove it and use comedi_dio_update_state()
    to handle the boilerplate code to update the subdevice s->state.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index fcec604bebf7..761cbf8f964b 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -711,16 +711,11 @@ static int apci3xxx_dio_insn_bits(struct comedi_device *dev,
 				  struct comedi_insn *insn,
 				  unsigned int *data)
 {
-	unsigned int mask = data[0];
-	unsigned int bits = data[1];
+	unsigned int mask;
 	unsigned int val;
 
-	/* only update output channels */
-	mask &= s->io_bits;
+	mask = comedi_dio_update_state(s, data);
 	if (mask) {
-		s->state &= ~mask;
-		s->state |= (bits & mask);
-
 		if (mask & 0xff)
 			outl(s->state & 0xff, dev->iobase + 80);
 		if (mask & 0xff0000)

commit 97f4289ad08cffe55de06d4ac4f89ac540450aee
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Fri Aug 30 11:05:58 2013 -0700

    staging: comedi: drivers: use comedi_dio_update_state() for simple cases
    
    Use comedi_dio_update_state() to handle the boilerplate code to update
    the subdevice s->state for simple cases where the hardware is updated
    when any channel is modified.
    
    Also, fix a bug in the amplc_pc263 and amplc_pci263 drivers where the
    current state is not returned in data[1].
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index cf5dd10eaf91..fcec604bebf7 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -664,16 +664,10 @@ static int apci3xxx_do_insn_bits(struct comedi_device *dev,
 				 struct comedi_insn *insn,
 				 unsigned int *data)
 {
-	unsigned int mask = data[0];
-	unsigned int bits = data[1];
-
 	s->state = inl(dev->iobase + 48) & 0xf;
-	if (mask) {
-		s->state &= ~mask;
-		s->state |= (bits & mask);
 
+	if (comedi_dio_update_state(s, data))
 		outl(s->state, dev->iobase + 48);
-	}
 
 	data[1] = s->state;
 

commit 5dacadcca3176e2b1f8db662e503c080484d71fa
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Aug 6 09:33:05 2013 -0700

    staging: comedi: drivers: use comedi_dio_insn_config() for complex cases
    
    Convert the drivers with complex, port programmable i/o, to use the
    comedi_dio_insn_config() helper function.
    
    All of these drivers have some sort of 'port' programmable i/o where multiple
    i/o channels are configured as a group. The 'mask' associated with the group
    is passed to comedi_dio_insn_config() so that all the channels are configured.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index dbc0678027ca..cf5dd10eaf91 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -686,38 +686,28 @@ static int apci3xxx_dio_insn_config(struct comedi_device *dev,
 				    unsigned int *data)
 {
 	unsigned int chan = CR_CHAN(insn->chanspec);
-	unsigned int mask = 1 << chan;
-	unsigned int bits;
+	unsigned int mask;
+	int ret;
 
 	/*
 	 * Port 0 (channels 0-7) are always inputs
 	 * Port 1 (channels 8-15) are always outputs
 	 * Port 2 (channels 16-23) are programmable i/o
-	 *
-	 * Changing any channel in port 2 changes the entire port.
 	 */
-	if (mask & 0xff0000)
-		bits = 0xff0000;
-	else
-		bits = 0;
-
-	switch (data[0]) {
-	case INSN_CONFIG_DIO_INPUT:
-		s->io_bits &= ~bits;
-		break;
-	case INSN_CONFIG_DIO_OUTPUT:
-		s->io_bits |= bits;
-		break;
-	case INSN_CONFIG_DIO_QUERY:
-		data[1] = (s->io_bits & bits) ? COMEDI_OUTPUT : COMEDI_INPUT;
-		return insn->n;
-	default:
-		return -EINVAL;
+	if (chan < 16) {
+		if (data[0] != INSN_CONFIG_DIO_QUERY)
+			return -EINVAL;
+	} else {
+		/* changing any channel in port 2 changes the entire port */
+		mask = 0xff0000;
 	}
 
+	ret = comedi_dio_insn_config(dev, s, insn, data, mask);
+	if (ret)
+		return ret;
+
 	/* update port 2 configuration */
-	if (bits)
-		outl((s->io_bits >> 24) & 0xff, dev->iobase + 224);
+	outl((s->io_bits >> 24) & 0xff, dev->iobase + 224);
 
 	return insn->n;
 }

commit 3457bfd6dfb38f7bb66a227fe3473bad4773de06
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Mon Aug 12 15:14:18 2013 -0700

    Revert "staging: comedi: drivers: use comedi_dio_insn_config() for complex cases"
    
    This reverts commit f21c53945cb95f66faa9636af5f23cb00ba73019.
    
    I applied the wrong patch :(
    
    Cc: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index cf5dd10eaf91..dbc0678027ca 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -686,28 +686,38 @@ static int apci3xxx_dio_insn_config(struct comedi_device *dev,
 				    unsigned int *data)
 {
 	unsigned int chan = CR_CHAN(insn->chanspec);
-	unsigned int mask;
-	int ret;
+	unsigned int mask = 1 << chan;
+	unsigned int bits;
 
 	/*
 	 * Port 0 (channels 0-7) are always inputs
 	 * Port 1 (channels 8-15) are always outputs
 	 * Port 2 (channels 16-23) are programmable i/o
+	 *
+	 * Changing any channel in port 2 changes the entire port.
 	 */
-	if (chan < 16) {
-		if (data[0] != INSN_CONFIG_DIO_QUERY)
-			return -EINVAL;
-	} else {
-		/* changing any channel in port 2 changes the entire port */
-		mask = 0xff0000;
+	if (mask & 0xff0000)
+		bits = 0xff0000;
+	else
+		bits = 0;
+
+	switch (data[0]) {
+	case INSN_CONFIG_DIO_INPUT:
+		s->io_bits &= ~bits;
+		break;
+	case INSN_CONFIG_DIO_OUTPUT:
+		s->io_bits |= bits;
+		break;
+	case INSN_CONFIG_DIO_QUERY:
+		data[1] = (s->io_bits & bits) ? COMEDI_OUTPUT : COMEDI_INPUT;
+		return insn->n;
+	default:
+		return -EINVAL;
 	}
 
-	ret = comedi_dio_insn_config(dev, s, insn, data, mask);
-	if (ret)
-		return ret;
-
 	/* update port 2 configuration */
-	outl((s->io_bits >> 24) & 0xff, dev->iobase + 224);
+	if (bits)
+		outl((s->io_bits >> 24) & 0xff, dev->iobase + 224);
 
 	return insn->n;
 }

commit f21c53945cb95f66faa9636af5f23cb00ba73019
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Aug 5 15:01:25 2013 -0700

    staging: comedi: drivers: use comedi_dio_insn_config() for complex cases
    
    Convert the drivers with complex, port programmable i/o, to use the
    comedi_dio_insn_config() helper function.
    
    All of these drivers have some sort of 'port' programmable i/o where multiple
    i/o channels are configured as a group. The 'mask' associated with the group
    is passed to comedi_dio_insn_config() so that all the channels are configured.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index dbc0678027ca..cf5dd10eaf91 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -686,38 +686,28 @@ static int apci3xxx_dio_insn_config(struct comedi_device *dev,
 				    unsigned int *data)
 {
 	unsigned int chan = CR_CHAN(insn->chanspec);
-	unsigned int mask = 1 << chan;
-	unsigned int bits;
+	unsigned int mask;
+	int ret;
 
 	/*
 	 * Port 0 (channels 0-7) are always inputs
 	 * Port 1 (channels 8-15) are always outputs
 	 * Port 2 (channels 16-23) are programmable i/o
-	 *
-	 * Changing any channel in port 2 changes the entire port.
 	 */
-	if (mask & 0xff0000)
-		bits = 0xff0000;
-	else
-		bits = 0;
-
-	switch (data[0]) {
-	case INSN_CONFIG_DIO_INPUT:
-		s->io_bits &= ~bits;
-		break;
-	case INSN_CONFIG_DIO_OUTPUT:
-		s->io_bits |= bits;
-		break;
-	case INSN_CONFIG_DIO_QUERY:
-		data[1] = (s->io_bits & bits) ? COMEDI_OUTPUT : COMEDI_INPUT;
-		return insn->n;
-	default:
-		return -EINVAL;
+	if (chan < 16) {
+		if (data[0] != INSN_CONFIG_DIO_QUERY)
+			return -EINVAL;
+	} else {
+		/* changing any channel in port 2 changes the entire port */
+		mask = 0xff0000;
 	}
 
+	ret = comedi_dio_insn_config(dev, s, insn, data, mask);
+	if (ret)
+		return ret;
+
 	/* update port 2 configuration */
-	if (bits)
-		outl((s->io_bits >> 24) & 0xff, dev->iobase + 224);
+	outl((s->io_bits >> 24) & 0xff, dev->iobase + 224);
 
 	return insn->n;
 }

commit ce157f8032bbd46d9427034c335b0afd751da25d
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Jun 24 17:04:43 2013 -0700

    staging: comedi: don't rely on comedidev.h to include headers
    
    comedidev.h is the main kernel header for comedi. Every comedi
    driver includes this header which then includes a number of
    <linux/*> headers. All the drivers need <linux/module.h> and some
    of them need <linux/delay.h>. The rest are not needed by any of
    the drivers.
    
    Remove all the includes in comedidev.h except for <linux/dma-mapping.h>,
    which is needed to pick up the enum dma_data_direction for the
    comedi_subdevice definition, and "comedi.h", which is the uapi
    header for comedi.
    
    Add <linux/module.h> to all the comedi drivers and <linux/delay.h>
    to the couple that need it.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index cf60248c726d..dbc0678027ca 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -22,6 +22,7 @@
  * more details.
  */
 
+#include <linux/module.h>
 #include <linux/pci.h>
 #include <linux/interrupt.h>
 

commit 0bdab509bf9c6d838dc0a3b1d68bbf841fc20b5a
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Jun 24 16:55:44 2013 -0700

    staging: comedi: use comedi_alloc_devpriv()
    
    Use the helper function to allocate memory and set the comedi_device
    private data pointer.
    
    This removes the dependency on slab.h from most of the drivers so
    remove the global #include in comedidev.h and the local #include
    in some of the drivers.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 5b37cbf9228e..cf60248c726d 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -801,10 +801,9 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 	dev->board_ptr = board;
 	dev->board_name = board->name;
 
-	devpriv = kzalloc(sizeof(*devpriv), GFP_KERNEL);
+	devpriv = comedi_alloc_devpriv(dev, sizeof(*devpriv));
 	if (!devpriv)
 		return -ENOMEM;
-	dev->private = devpriv;
 
 	ret = comedi_pci_enable(dev);
 	if (ret)

commit 656e39fedcf01b688a2aa1dca78c6c2a571264f1
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:23:14 2013 -0700

    staging: comedi: addi_apci_3xxx: only allocate needed subdevices
    
    The number of subdevices needed by a given board supported by this
    driver can cary from 2 (for the apci3500) to a maximum of 5. Currently
    this driver always allocates 7 subdevices and sets the subdevice type
    to COMEDI_SUBD_UNUSED for the ones that are not needed.
    
    Calculate the actual number of needed subdevices from the boardinfo
    and only allocate and setup the ones that are used.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 64471a1fba29..5b37cbf9228e 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -790,7 +790,9 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 	const struct apci3xxx_boardinfo *board = NULL;
 	struct apci3xxx_private *devpriv;
 	struct comedi_subdevice *s;
-	int ret, n_subdevices;
+	int n_subdevices;
+	int subdev;
+	int ret;
 
 	if (context < ARRAY_SIZE(apci3xxx_boardtypes))
 		board = &apci3xxx_boardtypes[context];
@@ -818,14 +820,18 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 			dev->irq = pcidev->irq;
 	}
 
-	n_subdevices = 7;
+	n_subdevices = (board->ai_n_chan ? 0 : 1) + board->has_ao +
+		       board->has_dig_in + board->has_dig_out +
+		       board->has_ttl_io;
 	ret = comedi_alloc_subdevices(dev, n_subdevices);
 	if (ret)
 		return ret;
 
+	subdev = 0;
+
 	/* Analog Input subdevice */
-	s = &dev->subdevices[0];
 	if (board->ai_n_chan) {
+		s = &dev->subdevices[subdev];
 		s->type		= COMEDI_SUBD_AI;
 		s->subdev_flags	= SDF_READABLE | board->ai_subdev_flags;
 		s->n_chan	= board->ai_n_chan;
@@ -840,56 +846,52 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 			s->do_cmd	= apci3xxx_ai_cmd;
 			s->cancel	= apci3xxx_ai_cancel;
 		}
-	} else {
-		s->type = COMEDI_SUBD_UNUSED;
+
+		subdev++;
 	}
 
 	/* Analog Output subdevice */
-	s = &dev->subdevices[1];
 	if (board->has_ao) {
+		s = &dev->subdevices[subdev];
 		s->type		= COMEDI_SUBD_AO;
 		s->subdev_flags	= SDF_WRITEABLE | SDF_GROUND | SDF_COMMON;
 		s->n_chan	= 4;
 		s->maxdata	= 0x0fff;
 		s->range_table	= &apci3xxx_ao_range;
 		s->insn_write	= apci3xxx_ao_insn_write;
-	} else {
-		s->type		= COMEDI_SUBD_UNUSED;
+
+		subdev++;
 	}
 
 	/* Digital Input subdevice */
-	s = &dev->subdevices[2];
 	if (board->has_dig_in) {
+		s = &dev->subdevices[subdev];
 		s->type		= COMEDI_SUBD_DI;
 		s->subdev_flags	= SDF_READABLE;
 		s->n_chan	= 4;
 		s->maxdata	= 1;
 		s->range_table	= &range_digital;
 		s->insn_bits	= apci3xxx_di_insn_bits;
-	} else {
-		s->type		= COMEDI_SUBD_UNUSED;
+
+		subdev++;
 	}
 
 	/* Digital Output subdevice */
-	s = &dev->subdevices[3];
 	if (board->has_dig_out) {
+		s = &dev->subdevices[subdev];
 		s->type		= COMEDI_SUBD_DO;
 		s->subdev_flags	= SDF_WRITEABLE;
 		s->n_chan	= 4;
 		s->maxdata	= 1;
 		s->range_table	= &range_digital;
 		s->insn_bits	= apci3xxx_do_insn_bits;
-	} else {
-		s->type		= COMEDI_SUBD_UNUSED;
-	}
 
-	/*  Allocate and Initialise Timer Subdevice Structures */
-	s = &dev->subdevices[4];
-	s->type = COMEDI_SUBD_UNUSED;
+		subdev++;
+	}
 
 	/* TTL Digital I/O subdevice */
-	s = &dev->subdevices[5];
 	if (board->has_ttl_io) {
+		s = &dev->subdevices[subdev];
 		s->type		= COMEDI_SUBD_DIO;
 		s->subdev_flags	= SDF_READABLE | SDF_WRITEABLE;
 		s->n_chan	= 24;
@@ -898,13 +900,9 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 		s->range_table	= &range_digital;
 		s->insn_config	= apci3xxx_dio_insn_config;
 		s->insn_bits	= apci3xxx_dio_insn_bits;
-	} else {
-		s->type = COMEDI_SUBD_UNUSED;
-	}
 
-	/* EEPROM */
-	s = &dev->subdevices[6];
-	s->type = COMEDI_SUBD_UNUSED;
+		subdev++;
+	}
 
 	apci3xxx_reset(dev);
 	return 0;

commit f32376e993a7657198974e713577152ac67833db
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:22:53 2013 -0700

    staging: comedi: addi_apci_3xxx: fix the analog input subdevice
    
    The analog input subdevice support functions in hwdrv_apci3xxx.c
    do not follow the comedi API.
    
    The (*insn_config) function overrides the INSN_CONFIG_DIO_INPUT
    instruction as an internal APCI3XXX_CONFIGURATION instruction. The
    APCI3XXX_CONFIGURATION instruction requires 4 data parameters but
    the comedi core sanity checks the INSN_CONFIG_DIO_INPUT instruction
    which only has 1 data parameter. Because of this the (*insn_config)
    function can never be called.
    
    The (*insn_read) function is supposed to do "one-shot" or "software-
    triggered" reads and return the data. The function in hwdrv_apci3xxx.c
    does do this but it also is used to optionally start a "hardware-
    triggered" conversion. Hardware-triggered conversions should be done
    with the comedi_async command functions.
    
    Delete the hwrdv_apci3xxx.c file and fix the analog input subdevice
    in the driver by:
    
    1) add a new (*insn_read) function for "one-shot" reads
    2) implement the (*do_cmdtest) and (*do_cmd) functions for
       "hardware-triggered" asyncronous reads
    3) fix the interrupt handler to return the read data via the
       comedi_async buffer
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 77f0c455c19d..64471a1fba29 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -27,6 +27,8 @@
 
 #include "../comedidev.h"
 
+#include "comedi_fc.h"
+
 #define CONV_UNIT_NS		(1 << 0)
 #define CONV_UNIT_US		(1 << 1)
 #define CONV_UNIT_MS		(1 << 2)
@@ -351,21 +353,17 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 
 struct apci3xxx_private {
 	void __iomem *mmio;
-	unsigned int ui_AiNbrofChannels;	/*  how many channels is measured */
-	unsigned int ui_AiReadData[32];
-	unsigned char b_EocEosInterrupt;
-	unsigned int ui_EocEosConversionTime;
-	unsigned char b_EocEosConversionTimeBase;
+	unsigned int ai_timer;
+	unsigned char ai_time_base;
 };
 
-#include "addi-data/hwdrv_apci3xxx.c"
-
 static irqreturn_t apci3xxx_irq_handler(int irq, void *d)
 {
 	struct comedi_device *dev = d;
 	struct apci3xxx_private *devpriv = dev->private;
+	struct comedi_subdevice *s = dev->read_subdev;
 	unsigned int status;
-	int i;
+	unsigned int val;
 
 	/* Test if interrupt occur */
 	status = readl(devpriv->mmio + 16);
@@ -373,35 +371,247 @@ static irqreturn_t apci3xxx_irq_handler(int irq, void *d)
 		/* Reset the interrupt */
 		writel(status, devpriv->mmio + 16);
 
-		/* Test if interrupt enabled */
-		if (devpriv->b_EocEosInterrupt == 1) {
-			/* Read all analog inputs value */
-			for (i = 0; i < devpriv->ui_AiNbrofChannels; i++) {
-				unsigned int val;
+		val = readl(devpriv->mmio + 28);
+		comedi_buf_put(s->async, val);
+
+		s->async->events |= COMEDI_CB_EOA;
+		comedi_event(dev, s);
+
+		return IRQ_HANDLED;
+	}
+	return IRQ_NONE;
+}
+
+static int apci3xxx_ai_started(struct comedi_device *dev)
+{
+	struct apci3xxx_private *devpriv = dev->private;
+
+	if ((readl(devpriv->mmio + 8) & 0x80000) == 0x80000)
+		return 1;
+	else
+		return 0;
+
+}
+
+static int apci3xxx_ai_setup(struct comedi_device *dev, unsigned int chanspec)
+{
+	struct apci3xxx_private *devpriv = dev->private;
+	unsigned int chan = CR_CHAN(chanspec);
+	unsigned int range = CR_RANGE(chanspec);
+	unsigned int aref = CR_AREF(chanspec);
+	unsigned int delay_mode;
+	unsigned int val;
+
+	if (apci3xxx_ai_started(dev))
+		return -EBUSY;
+
+	/* Clear the FIFO */
+	writel(0x10000, devpriv->mmio + 12);
+
+	/* Get and save the delay mode */
+	delay_mode = readl(devpriv->mmio + 4);
+	delay_mode &= 0xfffffef0;
+
+	/* Channel configuration selection */
+	writel(delay_mode, devpriv->mmio + 4);
+
+	/* Make the configuration */
+	val = (range & 3) | ((range >> 2) << 6) |
+	      ((aref == AREF_DIFF) << 7);
+	writel(val, devpriv->mmio + 0);
+
+	/* Channel selection */
+	writel(delay_mode | 0x100, devpriv->mmio + 4);
+	writel(chan, devpriv->mmio + 0);
+
+	/* Restore delay mode */
+	writel(delay_mode, devpriv->mmio + 4);
+
+	/* Set the number of sequence to 1 */
+	writel(1, devpriv->mmio + 48);
+
+	return 0;
+}
+
+static int apci3xxx_ai_insn_read(struct comedi_device *dev,
+				 struct comedi_subdevice *s,
+				 struct comedi_insn *insn,
+				 unsigned int *data)
+{
+	struct apci3xxx_private *devpriv = dev->private;
+	unsigned int val;
+	int ret;
+	int i;
+
+	ret = apci3xxx_ai_setup(dev, insn->chanspec);
+	if (ret)
+		return ret;
+
+	for (i = 0; i < insn->n; i++) {
+		/* Start the conversion */
+		writel(0x80000, devpriv->mmio + 8);
+
+		/* Wait the EOS */
+		do {
+			val = readl(devpriv->mmio + 20);
+			val &= 0x1;
+		} while (!val);
+
+		/* Read the analog value */
+		data[i] = readl(devpriv->mmio + 28);
+	}
 
-				val = readl(devpriv->mmio + 28);
-				devpriv->ui_AiReadData[i] = val;
-			}
+	return insn->n;
+}
+
+static int apci3xxx_ai_ns_to_timer(struct comedi_device *dev,
+				   unsigned int *ns, int round_mode)
+{
+	const struct apci3xxx_boardinfo *board = comedi_board(dev);
+	struct apci3xxx_private *devpriv = dev->private;
+	unsigned int base;
+	unsigned int timer;
+	int time_base;
+
+	/* time_base: 0 = ns, 1 = us, 2 = ms */
+	for (time_base = 0; time_base < 3; time_base++) {
+		/* skip unsupported time bases */
+		if (!(board->ai_conv_units & (1 << time_base)))
+			continue;
+
+		switch (time_base) {
+		case 0:
+			base = 1;
+			break;
+		case 1:
+			base = 1000;
+			break;
+		case 2:
+			base = 1000000;
+			break;
+		}
 
-			/* Set the interrupt flag */
-			devpriv->b_EocEosInterrupt = 2;
+		switch (round_mode) {
+		case TRIG_ROUND_NEAREST:
+		default:
+			timer = (*ns + base / 2) / base;
+			break;
+		case TRIG_ROUND_DOWN:
+			timer = *ns / base;
+			break;
+		case TRIG_ROUND_UP:
+			timer = (*ns + base - 1) / base;
+			break;
+		}
 
-			/* FIXME: comedi_event() */
+		if (timer < 0x10000) {
+			devpriv->ai_time_base = time_base;
+			devpriv->ai_timer = timer;
+			*ns = timer * time_base;
+			return 0;
 		}
 	}
-	return IRQ_RETVAL(1);
+	return -EINVAL;
 }
 
 static int apci3xxx_ai_cmdtest(struct comedi_device *dev,
 			       struct comedi_subdevice *s,
 			       struct comedi_cmd *cmd)
 {
+	const struct apci3xxx_boardinfo *board = comedi_board(dev);
+	int err = 0;
+	unsigned int tmp;
+
+	/* Step 1 : check if triggers are trivially valid */
+
+	err |= cfc_check_trigger_src(&cmd->start_src, TRIG_NOW);
+	err |= cfc_check_trigger_src(&cmd->scan_begin_src, TRIG_FOLLOW);
+	err |= cfc_check_trigger_src(&cmd->convert_src, TRIG_TIMER);
+	err |= cfc_check_trigger_src(&cmd->scan_end_src, TRIG_COUNT);
+	err |= cfc_check_trigger_src(&cmd->stop_src, TRIG_COUNT | TRIG_NONE);
+
+	if (err)
+		return 1;
+
+	/* Step 2a : make sure trigger sources are unique */
+
+	err |= cfc_check_trigger_is_unique(cmd->stop_src);
+
+	/* Step 2b : and mutually compatible */
+
+	if (err)
+		return 2;
+
+	/* Step 3: check if arguments are trivially valid */
+
+	err |= cfc_check_trigger_arg_is(&cmd->start_arg, 0);
+	err |= cfc_check_trigger_arg_is(&cmd->scan_begin_arg, 0);
+	err |= cfc_check_trigger_arg_min(&cmd->convert_arg,
+					 board->ai_min_acq_ns);
+	err |= cfc_check_trigger_arg_is(&cmd->scan_end_arg, cmd->chanlist_len);
+
+	if (cmd->stop_src == TRIG_COUNT)
+		err |= cfc_check_trigger_arg_min(&cmd->stop_arg, 1);
+	else	/* TRIG_NONE */
+		err |= cfc_check_trigger_arg_is(&cmd->stop_arg, 0);
+
+	if (err)
+		return 3;
+
+	/* step 4: fix up any arguments */
+
+	/*
+	 * FIXME: The hardware supports multiple scan modes but the original
+	 * addi-data driver only supported reading a single channel with
+	 * interrupts. Need a proper datasheet to fix this.
+	 *
+	 * The following scan modes are supported by the hardware:
+	 * 1) Single software scan
+	 * 2) Single hardware triggered scan
+	 * 3) Continuous software scan
+	 * 4) Continuous software scan with timer delay
+	 * 5) Continuous hardware triggered scan
+	 * 6) Continuous hardware triggered scan with timer delay
+	 *
+	 * For now, limit the chanlist to a single channel.
+	 */
+	if (cmd->chanlist_len > 1) {
+		cmd->chanlist_len = 1;
+		err |= -EINVAL;
+	}
+
+	tmp = cmd->convert_arg;
+	err |= apci3xxx_ai_ns_to_timer(dev, &cmd->convert_arg,
+				       cmd->flags & TRIG_ROUND_MASK);
+	if (tmp != cmd->convert_arg)
+		err |= -EINVAL;
+
+	if (err)
+		return 4;
+
 	return 0;
 }
 
 static int apci3xxx_ai_cmd(struct comedi_device *dev,
 			   struct comedi_subdevice *s)
 {
+	struct apci3xxx_private *devpriv = dev->private;
+	struct comedi_cmd *cmd = &s->async->cmd;
+	int ret;
+
+	ret = apci3xxx_ai_setup(dev, cmd->chanlist[0]);
+	if (ret)
+		return ret;
+
+	/* Set the convert timing unit */
+	writel(devpriv->ai_time_base, devpriv->mmio + 36);
+
+	/* Set the convert timing */
+	writel(devpriv->ai_timer, devpriv->mmio + 32);
+
+	/* Start the conversion */
+	writel(0x180000, devpriv->mmio + 8);
+
 	return 0;
 }
 
@@ -553,9 +763,6 @@ static int apci3xxx_reset(struct comedi_device *dev)
 	/* Disable the interrupt */
 	disable_irq(dev->irq);
 
-	/* Reset the interrupt flag */
-	devpriv->b_EocEosInterrupt = 0;
-
 	/* Clear the start command */
 	writel(0, devpriv->mmio + 8);
 
@@ -625,7 +832,6 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 		s->maxdata	= board->ai_maxdata;
 		s->len_chanlist	= s->n_chan;
 		s->range_table	= &apci3xxx_ai_range;
-		s->insn_config	= apci3xxx_ai_insn_config;
 		s->insn_read	= apci3xxx_ai_insn_read;
 		if (dev->irq) {
 			dev->read_subdev = s;

commit 66573991c47f3e826f294b6ab4aa1cf967d5f426
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:22:33 2013 -0700

    staging: comedi: addi_apci_3xxx: stub in analog input command support
    
    The analog input subdevice in this driver is broken. The attach of
    this driver requests the irq and sets the dev->read_subdev to the
    analog input subdevice but it does not setup the subdevice to support
    commands.
    
    Stub in the command support functions so we can fix the subdevice.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index dbb35c7b45a0..77f0c455c19d 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -392,6 +392,25 @@ static irqreturn_t apci3xxx_irq_handler(int irq, void *d)
 	return IRQ_RETVAL(1);
 }
 
+static int apci3xxx_ai_cmdtest(struct comedi_device *dev,
+			       struct comedi_subdevice *s,
+			       struct comedi_cmd *cmd)
+{
+	return 0;
+}
+
+static int apci3xxx_ai_cmd(struct comedi_device *dev,
+			   struct comedi_subdevice *s)
+{
+	return 0;
+}
+
+static int apci3xxx_ai_cancel(struct comedi_device *dev,
+			      struct comedi_subdevice *s)
+{
+	return 0;
+}
+
 static int apci3xxx_ao_insn_write(struct comedi_device *dev,
 				  struct comedi_subdevice *s,
 				  struct comedi_insn *insn,
@@ -600,7 +619,6 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 	/* Analog Input subdevice */
 	s = &dev->subdevices[0];
 	if (board->ai_n_chan) {
-		dev->read_subdev = s;
 		s->type		= COMEDI_SUBD_AI;
 		s->subdev_flags	= SDF_READABLE | board->ai_subdev_flags;
 		s->n_chan	= board->ai_n_chan;
@@ -609,7 +627,13 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 		s->range_table	= &apci3xxx_ai_range;
 		s->insn_config	= apci3xxx_ai_insn_config;
 		s->insn_read	= apci3xxx_ai_insn_read;
-
+		if (dev->irq) {
+			dev->read_subdev = s;
+			s->subdev_flags	|= SDF_CMD_READ;
+			s->do_cmdtest	= apci3xxx_ai_cmdtest;
+			s->do_cmd	= apci3xxx_ai_cmd;
+			s->cancel	= apci3xxx_ai_cancel;
+		}
 	} else {
 		s->type = COMEDI_SUBD_UNUSED;
 	}

commit 308380e69625c347f88ba23da9dc0e9a58918838
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:22:14 2013 -0700

    staging: comedi: addi_apci_3xxx: tidy up analog input subdevice init
    
    For aesthetic reasnons, add some whitespace to the analog input
    subdevice initialization.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index b724cf653080..dbb35c7b45a0 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -597,18 +597,18 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 	if (ret)
 		return ret;
 
-	/*  Allocate and Initialise AI Subdevice Structures */
+	/* Analog Input subdevice */
 	s = &dev->subdevices[0];
 	if (board->ai_n_chan) {
 		dev->read_subdev = s;
-		s->type = COMEDI_SUBD_AI;
-		s->subdev_flags = SDF_READABLE | board->ai_subdev_flags;
-		s->n_chan = board->ai_n_chan;
-		s->maxdata = board->ai_maxdata;
-		s->len_chanlist = s->n_chan;
-		s->range_table = &apci3xxx_ai_range;
-		s->insn_config = apci3xxx_ai_insn_config;
-		s->insn_read = apci3xxx_ai_insn_read;
+		s->type		= COMEDI_SUBD_AI;
+		s->subdev_flags	= SDF_READABLE | board->ai_subdev_flags;
+		s->n_chan	= board->ai_n_chan;
+		s->maxdata	= board->ai_maxdata;
+		s->len_chanlist	= s->n_chan;
+		s->range_table	= &apci3xxx_ai_range;
+		s->insn_config	= apci3xxx_ai_insn_config;
+		s->insn_read	= apci3xxx_ai_insn_read;
 
 	} else {
 		s->type = COMEDI_SUBD_UNUSED;

commit 040540763b5729b99e24c118d4343f489a00b456
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:21:53 2013 -0700

    staging: comedi: addi_apci_3xxx: remove 'b_SingleDiff' private data
    
    The analog reference desired for the acquisition is stored in the
    insn->chanspec that is passed to the (*insn_read) function. There is
    no need to use a private data variable to hold the desired analog
    reference that is set in the (*insn_config).
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index bb62c871da9f..b724cf653080 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -356,7 +356,6 @@ struct apci3xxx_private {
 	unsigned char b_EocEosInterrupt;
 	unsigned int ui_EocEosConversionTime;
 	unsigned char b_EocEosConversionTimeBase;
-	unsigned char b_SingelDiff;
 };
 
 #include "addi-data/hwdrv_apci3xxx.c"
@@ -611,9 +610,6 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 		s->insn_config = apci3xxx_ai_insn_config;
 		s->insn_read = apci3xxx_ai_insn_read;
 
-		if ((board->ai_subdev_flags & (SDF_COMMON | SDF_GROUND)) == 0)
-			devpriv->b_SingelDiff = 1;
-
 	} else {
 		s->type = COMEDI_SUBD_UNUSED;
 	}

commit 8d4729066cde58c730573d6aad2ea29f8048fcb3
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:21:33 2013 -0700

    staging: comedi: addi_apci_3xxx: remove 'i_NbrAiChannelDiff' boardinfo
    
    The number of differential analog input channels is always half the
    number of single-ended channels, 'ai_n_chan', or all the channels
    if the board does not support single-ended channels. We can use the
    'ai_subdev_flags' boardinfo to determine if the board does not support
    single-ended channels.
    
    To simplify the boardinfo, remove the 'i_NbrAiChannelDiff' and just
    use 'ai_n_chan' to specify the number of channels.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index ae41a4f69cae..bb62c871da9f 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -83,7 +83,6 @@ struct apci3xxx_boardinfo {
 	const char *name;
 	int ai_subdev_flags;
 	int ai_n_chan;
-	int i_NbrAiChannelDiff;
 	unsigned int ai_maxdata;
 	unsigned char ai_conv_units;
 	unsigned int ai_min_acq_ns;
@@ -98,7 +97,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3000-16",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.ai_n_chan		= 16,
-		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0x0fff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ai_min_acq_ns		= 10000,
@@ -108,7 +106,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3000-8",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.ai_n_chan		= 8,
-		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0x0fff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ai_min_acq_ns		= 10000,
@@ -118,7 +115,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3000-4",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.ai_n_chan		= 4,
-		.i_NbrAiChannelDiff	= 2,
 		.ai_maxdata		= 0x0fff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ai_min_acq_ns		= 10000,
@@ -128,7 +124,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3006-16",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.ai_n_chan		= 16,
-		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ai_min_acq_ns		= 10000,
@@ -138,7 +133,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3006-8",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.ai_n_chan		= 8,
-		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ai_min_acq_ns		= 10000,
@@ -148,7 +142,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3006-4",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.ai_n_chan		= 4,
-		.i_NbrAiChannelDiff	= 2,
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ai_min_acq_ns		= 10000,
@@ -158,7 +151,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3010-16",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.ai_n_chan		= 16,
-		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0x0fff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ai_min_acq_ns		= 5000,
@@ -170,7 +162,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3010-8",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.ai_n_chan		= 8,
-		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0x0fff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ai_min_acq_ns		= 5000,
@@ -182,7 +173,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3010-4",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.ai_n_chan		= 4,
-		.i_NbrAiChannelDiff	= 2,
 		.ai_maxdata		= 0x0fff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ai_min_acq_ns		= 5000,
@@ -194,7 +184,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3016-16",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.ai_n_chan		= 16,
-		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ai_min_acq_ns		= 5000,
@@ -206,7 +195,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3016-8",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.ai_n_chan		= 8,
-		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ai_min_acq_ns		= 5000,
@@ -218,7 +206,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3016-4",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.ai_n_chan		= 4,
-		.i_NbrAiChannelDiff	= 2,
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ai_min_acq_ns		= 5000,
@@ -230,7 +217,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3100-16-4",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.ai_n_chan		= 16,
-		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0x0fff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ai_min_acq_ns		= 10000,
@@ -241,7 +227,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3100-8-4",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.ai_n_chan		= 8,
-		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0x0fff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ai_min_acq_ns		= 10000,
@@ -252,7 +237,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3106-16-4",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.ai_n_chan		= 16,
-		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ai_min_acq_ns		= 10000,
@@ -263,7 +247,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3106-8-4",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.ai_n_chan		= 8,
-		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ai_min_acq_ns		= 10000,
@@ -274,7 +257,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3110-16-4",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.ai_n_chan		= 16,
-		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0x0fff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ai_min_acq_ns		= 5000,
@@ -287,7 +269,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3110-8-4",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.ai_n_chan		= 8,
-		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0x0fff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ai_min_acq_ns		= 5000,
@@ -300,7 +281,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3116-16-4",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.ai_n_chan		= 16,
-		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ai_min_acq_ns		= 5000,
@@ -313,7 +293,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3116-8-4",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.ai_n_chan		= 8,
-		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ai_min_acq_ns		= 5000,
@@ -325,7 +304,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	[BOARD_APCI3003] = {
 		.name			= "apci3003",
 		.ai_subdev_flags	= SDF_DIFF,
-		.i_NbrAiChannelDiff	= 4,
+		.ai_n_chan		= 4,
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US |
 					  CONV_UNIT_NS,
@@ -336,7 +315,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	[BOARD_APCI3002_16] = {
 		.name			= "apci3002-16",
 		.ai_subdev_flags	= SDF_DIFF,
-		.i_NbrAiChannelDiff	= 16,
+		.ai_n_chan		= 16,
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ai_min_acq_ns		= 5000,
@@ -346,7 +325,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	[BOARD_APCI3002_8] = {
 		.name			= "apci3002-8",
 		.ai_subdev_flags	= SDF_DIFF,
-		.i_NbrAiChannelDiff	= 8,
+		.ai_n_chan		= 8,
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ai_min_acq_ns		= 5000,
@@ -356,7 +335,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	[BOARD_APCI3002_4] = {
 		.name			= "apci3002-4",
 		.ai_subdev_flags	= SDF_DIFF,
-		.i_NbrAiChannelDiff	= 4,
+		.ai_n_chan		= 4,
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ai_min_acq_ns		= 5000,
@@ -621,24 +600,20 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 
 	/*  Allocate and Initialise AI Subdevice Structures */
 	s = &dev->subdevices[0];
-	if (board->ai_n_chan || board->i_NbrAiChannelDiff) {
+	if (board->ai_n_chan) {
 		dev->read_subdev = s;
 		s->type = COMEDI_SUBD_AI;
 		s->subdev_flags = SDF_READABLE | board->ai_subdev_flags;
-		if (board->ai_n_chan) {
-			s->n_chan = board->ai_n_chan;
-			devpriv->b_SingelDiff = 0;
-		} else {
-			s->n_chan = board->i_NbrAiChannelDiff;
-			devpriv->b_SingelDiff = 1;
-		}
+		s->n_chan = board->ai_n_chan;
 		s->maxdata = board->ai_maxdata;
 		s->len_chanlist = s->n_chan;
 		s->range_table = &apci3xxx_ai_range;
-
 		s->insn_config = apci3xxx_ai_insn_config;
 		s->insn_read = apci3xxx_ai_insn_read;
 
+		if ((board->ai_subdev_flags & (SDF_COMMON | SDF_GROUND)) == 0)
+			devpriv->b_SingelDiff = 1;
+
 	} else {
 		s->type = COMEDI_SUBD_UNUSED;
 	}

commit 47bd1ad800470f4786f7d35379798a7a10aff84c
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:21:12 2013 -0700

    staging: comedi: addi_apci_3xxx: rename 'i_NbrAiChannel'
    
    Rename this CamelCase boardinfo variable.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 3f9ddb4f1d44..ae41a4f69cae 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -82,7 +82,7 @@ enum apci3xxx_boardid {
 struct apci3xxx_boardinfo {
 	const char *name;
 	int ai_subdev_flags;
-	int i_NbrAiChannel;
+	int ai_n_chan;
 	int i_NbrAiChannelDiff;
 	unsigned int ai_maxdata;
 	unsigned char ai_conv_units;
@@ -97,7 +97,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	[BOARD_APCI3000_16] = {
 		.name			= "apci3000-16",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
-		.i_NbrAiChannel		= 16,
+		.ai_n_chan		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0x0fff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
@@ -107,7 +107,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	[BOARD_APCI3000_8] = {
 		.name			= "apci3000-8",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
-		.i_NbrAiChannel		= 8,
+		.ai_n_chan		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0x0fff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
@@ -117,7 +117,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	[BOARD_APCI3000_4] = {
 		.name			= "apci3000-4",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
-		.i_NbrAiChannel		= 4,
+		.ai_n_chan		= 4,
 		.i_NbrAiChannelDiff	= 2,
 		.ai_maxdata		= 0x0fff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
@@ -127,7 +127,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	[BOARD_APCI3006_16] = {
 		.name			= "apci3006-16",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
-		.i_NbrAiChannel		= 16,
+		.ai_n_chan		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
@@ -137,7 +137,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	[BOARD_APCI3006_8] = {
 		.name			= "apci3006-8",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
-		.i_NbrAiChannel		= 8,
+		.ai_n_chan		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
@@ -147,7 +147,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	[BOARD_APCI3006_4] = {
 		.name			= "apci3006-4",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
-		.i_NbrAiChannel		= 4,
+		.ai_n_chan		= 4,
 		.i_NbrAiChannelDiff	= 2,
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
@@ -157,7 +157,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	[BOARD_APCI3010_16] = {
 		.name			= "apci3010-16",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
-		.i_NbrAiChannel		= 16,
+		.ai_n_chan		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0x0fff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
@@ -169,7 +169,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	[BOARD_APCI3010_8] = {
 		.name			= "apci3010-8",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
-		.i_NbrAiChannel		= 8,
+		.ai_n_chan		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0x0fff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
@@ -181,7 +181,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	[BOARD_APCI3010_4] = {
 		.name			= "apci3010-4",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
-		.i_NbrAiChannel		= 4,
+		.ai_n_chan		= 4,
 		.i_NbrAiChannelDiff	= 2,
 		.ai_maxdata		= 0x0fff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
@@ -193,7 +193,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	[BOARD_APCI3016_16] = {
 		.name			= "apci3016-16",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
-		.i_NbrAiChannel		= 16,
+		.ai_n_chan		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
@@ -205,7 +205,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	[BOARD_APCI3016_8] = {
 		.name			= "apci3016-8",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
-		.i_NbrAiChannel		= 8,
+		.ai_n_chan		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
@@ -217,7 +217,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	[BOARD_APCI3016_4] = {
 		.name			= "apci3016-4",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
-		.i_NbrAiChannel		= 4,
+		.ai_n_chan		= 4,
 		.i_NbrAiChannelDiff	= 2,
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
@@ -229,7 +229,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	[BOARD_APCI3100_16_4] = {
 		.name			= "apci3100-16-4",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
-		.i_NbrAiChannel		= 16,
+		.ai_n_chan		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0x0fff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
@@ -240,7 +240,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	[BOARD_APCI3100_8_4] = {
 		.name			= "apci3100-8-4",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
-		.i_NbrAiChannel		= 8,
+		.ai_n_chan		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0x0fff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
@@ -251,7 +251,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	[BOARD_APCI3106_16_4] = {
 		.name			= "apci3106-16-4",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
-		.i_NbrAiChannel		= 16,
+		.ai_n_chan		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
@@ -262,7 +262,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	[BOARD_APCI3106_8_4] = {
 		.name			= "apci3106-8-4",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
-		.i_NbrAiChannel		= 8,
+		.ai_n_chan		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
@@ -273,7 +273,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	[BOARD_APCI3110_16_4] = {
 		.name			= "apci3110-16-4",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
-		.i_NbrAiChannel		= 16,
+		.ai_n_chan		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0x0fff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
@@ -286,7 +286,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	[BOARD_APCI3110_8_4] = {
 		.name			= "apci3110-8-4",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
-		.i_NbrAiChannel		= 8,
+		.ai_n_chan		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0x0fff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
@@ -299,7 +299,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	[BOARD_APCI3116_16_4] = {
 		.name			= "apci3116-16-4",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
-		.i_NbrAiChannel		= 16,
+		.ai_n_chan		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
@@ -312,7 +312,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	[BOARD_APCI3116_8_4] = {
 		.name			= "apci3116-8-4",
 		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
-		.i_NbrAiChannel		= 8,
+		.ai_n_chan		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
@@ -621,12 +621,12 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 
 	/*  Allocate and Initialise AI Subdevice Structures */
 	s = &dev->subdevices[0];
-	if (board->i_NbrAiChannel || board->i_NbrAiChannelDiff) {
+	if (board->ai_n_chan || board->i_NbrAiChannelDiff) {
 		dev->read_subdev = s;
 		s->type = COMEDI_SUBD_AI;
 		s->subdev_flags = SDF_READABLE | board->ai_subdev_flags;
-		if (board->i_NbrAiChannel) {
-			s->n_chan = board->i_NbrAiChannel;
+		if (board->ai_n_chan) {
+			s->n_chan = board->ai_n_chan;
 			devpriv->b_SingelDiff = 0;
 		} else {
 			s->n_chan = board->i_NbrAiChannelDiff;

commit 8edd44251eb35b92f381b8caf495f6cc8483bc27
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:20:54 2013 -0700

    staging: comedi: addi_apci_3xxx: rename 'ui_MinAcquisitiontimeNs'
    
    Rename this CamelCase boardinfo variable.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 8deec2b0734f..3f9ddb4f1d44 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -86,7 +86,7 @@ struct apci3xxx_boardinfo {
 	int i_NbrAiChannelDiff;
 	unsigned int ai_maxdata;
 	unsigned char ai_conv_units;
-	unsigned int ui_MinAcquisitiontimeNs;
+	unsigned int ai_min_acq_ns;
 	unsigned int has_ao:1;
 	unsigned int has_dig_in:1;
 	unsigned int has_dig_out:1;
@@ -101,7 +101,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0x0fff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
-		.ui_MinAcquisitiontimeNs = 10000,
+		.ai_min_acq_ns		= 10000,
 		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3000_8] = {
@@ -111,7 +111,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0x0fff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
-		.ui_MinAcquisitiontimeNs = 10000,
+		.ai_min_acq_ns		= 10000,
 		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3000_4] = {
@@ -121,7 +121,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 2,
 		.ai_maxdata		= 0x0fff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
-		.ui_MinAcquisitiontimeNs = 10000,
+		.ai_min_acq_ns		= 10000,
 		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3006_16] = {
@@ -131,7 +131,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
-		.ui_MinAcquisitiontimeNs = 10000,
+		.ai_min_acq_ns		= 10000,
 		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3006_8] = {
@@ -141,7 +141,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
-		.ui_MinAcquisitiontimeNs = 10000,
+		.ai_min_acq_ns		= 10000,
 		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3006_4] = {
@@ -151,7 +151,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 2,
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
-		.ui_MinAcquisitiontimeNs = 10000,
+		.ai_min_acq_ns		= 10000,
 		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3010_16] = {
@@ -161,7 +161,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0x0fff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
-		.ui_MinAcquisitiontimeNs = 5000,
+		.ai_min_acq_ns		= 5000,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,
 		.has_ttl_io		= 1,
@@ -173,7 +173,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0x0fff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
-		.ui_MinAcquisitiontimeNs = 5000,
+		.ai_min_acq_ns		= 5000,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,
 		.has_ttl_io		= 1,
@@ -185,7 +185,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 2,
 		.ai_maxdata		= 0x0fff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
-		.ui_MinAcquisitiontimeNs = 5000,
+		.ai_min_acq_ns		= 5000,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,
 		.has_ttl_io		= 1,
@@ -197,7 +197,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
-		.ui_MinAcquisitiontimeNs = 5000,
+		.ai_min_acq_ns		= 5000,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,
 		.has_ttl_io		= 1,
@@ -209,7 +209,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
-		.ui_MinAcquisitiontimeNs = 5000,
+		.ai_min_acq_ns		= 5000,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,
 		.has_ttl_io		= 1,
@@ -221,7 +221,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 2,
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
-		.ui_MinAcquisitiontimeNs = 5000,
+		.ai_min_acq_ns		= 5000,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,
 		.has_ttl_io		= 1,
@@ -233,7 +233,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0x0fff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
-		.ui_MinAcquisitiontimeNs = 10000,
+		.ai_min_acq_ns		= 10000,
 		.has_ao			= 1,
 		.has_ttl_io		= 1,
 	},
@@ -244,7 +244,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0x0fff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
-		.ui_MinAcquisitiontimeNs = 10000,
+		.ai_min_acq_ns		= 10000,
 		.has_ao			= 1,
 		.has_ttl_io		= 1,
 	},
@@ -255,7 +255,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
-		.ui_MinAcquisitiontimeNs = 10000,
+		.ai_min_acq_ns		= 10000,
 		.has_ao			= 1,
 		.has_ttl_io		= 1,
 	},
@@ -266,7 +266,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
-		.ui_MinAcquisitiontimeNs = 10000,
+		.ai_min_acq_ns		= 10000,
 		.has_ao			= 1,
 		.has_ttl_io		= 1,
 	},
@@ -277,7 +277,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0x0fff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
-		.ui_MinAcquisitiontimeNs = 5000,
+		.ai_min_acq_ns		= 5000,
 		.has_ao			= 1,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,
@@ -290,7 +290,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0x0fff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
-		.ui_MinAcquisitiontimeNs = 5000,
+		.ai_min_acq_ns		= 5000,
 		.has_ao			= 1,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,
@@ -303,7 +303,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
-		.ui_MinAcquisitiontimeNs = 5000,
+		.ai_min_acq_ns		= 5000,
 		.has_ao			= 1,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,
@@ -316,7 +316,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
-		.ui_MinAcquisitiontimeNs = 5000,
+		.ai_min_acq_ns		= 5000,
 		.has_ao			= 1,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,
@@ -329,7 +329,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US |
 					  CONV_UNIT_NS,
-		.ui_MinAcquisitiontimeNs = 2500,
+		.ai_min_acq_ns		= 2500,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,
 	},
@@ -339,7 +339,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 16,
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
-		.ui_MinAcquisitiontimeNs = 5000,
+		.ai_min_acq_ns		= 5000,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,
 	},
@@ -349,7 +349,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
-		.ui_MinAcquisitiontimeNs = 5000,
+		.ai_min_acq_ns		= 5000,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,
 	},
@@ -359,7 +359,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0xffff,
 		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
-		.ui_MinAcquisitiontimeNs = 5000,
+		.ai_min_acq_ns		= 5000,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,
 	},

commit a67e0cc7aa3f15a4aa3e88945cd1d2476149191f
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:20:32 2013 -0700

    staging: comedi: addi_apci_3xxx: clarify 'b_AvailableConvertUnit'
    
    This boardinfo defines the conversion time bases that the analog input
    subdevice supports (ns, us, ms).
    
    Add some defines to get rid of the magic numbers and clarify the code.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index c6cd30bdce96..8deec2b0734f 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -27,6 +27,10 @@
 
 #include "../comedidev.h"
 
+#define CONV_UNIT_NS		(1 << 0)
+#define CONV_UNIT_US		(1 << 1)
+#define CONV_UNIT_MS		(1 << 2)
+
 static const struct comedi_lrange apci3xxx_ai_range = {
 	8, {
 		BIP_RANGE(10),
@@ -81,7 +85,7 @@ struct apci3xxx_boardinfo {
 	int i_NbrAiChannel;
 	int i_NbrAiChannelDiff;
 	unsigned int ai_maxdata;
-	unsigned char b_AvailableConvertUnit;
+	unsigned char ai_conv_units;
 	unsigned int ui_MinAcquisitiontimeNs;
 	unsigned int has_ao:1;
 	unsigned int has_dig_in:1;
@@ -96,7 +100,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0x0fff,
-		.b_AvailableConvertUnit	= 6,
+		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.has_ttl_io		= 1,
 	},
@@ -106,7 +110,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0x0fff,
-		.b_AvailableConvertUnit	= 6,
+		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.has_ttl_io		= 1,
 	},
@@ -116,7 +120,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannel		= 4,
 		.i_NbrAiChannelDiff	= 2,
 		.ai_maxdata		= 0x0fff,
-		.b_AvailableConvertUnit	= 6,
+		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.has_ttl_io		= 1,
 	},
@@ -126,7 +130,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0xffff,
-		.b_AvailableConvertUnit	= 6,
+		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.has_ttl_io		= 1,
 	},
@@ -136,7 +140,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0xffff,
-		.b_AvailableConvertUnit	= 6,
+		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.has_ttl_io		= 1,
 	},
@@ -146,7 +150,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannel		= 4,
 		.i_NbrAiChannelDiff	= 2,
 		.ai_maxdata		= 0xffff,
-		.b_AvailableConvertUnit	= 6,
+		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.has_ttl_io		= 1,
 	},
@@ -156,7 +160,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0x0fff,
-		.b_AvailableConvertUnit	= 6,
+		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,
@@ -168,7 +172,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0x0fff,
-		.b_AvailableConvertUnit	= 6,
+		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,
@@ -180,7 +184,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannel		= 4,
 		.i_NbrAiChannelDiff	= 2,
 		.ai_maxdata		= 0x0fff,
-		.b_AvailableConvertUnit	= 6,
+		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,
@@ -192,7 +196,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0xffff,
-		.b_AvailableConvertUnit	= 6,
+		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,
@@ -204,7 +208,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0xffff,
-		.b_AvailableConvertUnit	= 6,
+		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,
@@ -216,7 +220,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannel		= 4,
 		.i_NbrAiChannelDiff	= 2,
 		.ai_maxdata		= 0xffff,
-		.b_AvailableConvertUnit	= 6,
+		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,
@@ -228,7 +232,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0x0fff,
-		.b_AvailableConvertUnit	= 6,
+		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.has_ao			= 1,
 		.has_ttl_io		= 1,
@@ -239,7 +243,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0x0fff,
-		.b_AvailableConvertUnit	= 6,
+		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.has_ao			= 1,
 		.has_ttl_io		= 1,
@@ -250,7 +254,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0xffff,
-		.b_AvailableConvertUnit	= 6,
+		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.has_ao			= 1,
 		.has_ttl_io		= 1,
@@ -261,7 +265,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0xffff,
-		.b_AvailableConvertUnit	= 6,
+		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.has_ao			= 1,
 		.has_ttl_io		= 1,
@@ -272,7 +276,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0x0fff,
-		.b_AvailableConvertUnit	= 6,
+		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_ao			= 1,
 		.has_dig_in		= 1,
@@ -285,7 +289,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0x0fff,
-		.b_AvailableConvertUnit	= 6,
+		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_ao			= 1,
 		.has_dig_in		= 1,
@@ -298,7 +302,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0xffff,
-		.b_AvailableConvertUnit	= 6,
+		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_ao			= 1,
 		.has_dig_in		= 1,
@@ -311,7 +315,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0xffff,
-		.b_AvailableConvertUnit	= 6,
+		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_ao			= 1,
 		.has_dig_in		= 1,
@@ -323,7 +327,8 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.ai_subdev_flags	= SDF_DIFF,
 		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0xffff,
-		.b_AvailableConvertUnit	= 7,
+		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US |
+					  CONV_UNIT_NS,
 		.ui_MinAcquisitiontimeNs = 2500,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,
@@ -333,7 +338,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.ai_subdev_flags	= SDF_DIFF,
 		.i_NbrAiChannelDiff	= 16,
 		.ai_maxdata		= 0xffff,
-		.b_AvailableConvertUnit	= 6,
+		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,
@@ -343,7 +348,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.ai_subdev_flags	= SDF_DIFF,
 		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0xffff,
-		.b_AvailableConvertUnit	= 6,
+		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,
@@ -353,7 +358,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.ai_subdev_flags	= SDF_DIFF,
 		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0xffff,
-		.b_AvailableConvertUnit	= 6,
+		.ai_conv_units		= CONV_UNIT_MS | CONV_UNIT_US,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,

commit 46572bad94f97cbd16097a7b807f418c474d4ebe
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:19:50 2013 -0700

    staging: comedi: addi_apci_3xxx: tidy up i_APCI3XXX_InsnConfigAnalogInput()
    
    The analog input subdevice is broken in this driver. To help fix
    it, tidy up this (*insn_config) function.
    
    Rename the CamelCase function.
    
    Move the (insn->n == 4) test from i_APCI3XXX_AnalogInputConfigOperatingMode()
    to this function.
    
    Make the function a bit more concise and remove the printk noise.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index c0565942e983..c6cd30bdce96 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -631,7 +631,7 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 		s->len_chanlist = s->n_chan;
 		s->range_table = &apci3xxx_ai_range;
 
-		s->insn_config = i_APCI3XXX_InsnConfigAnalogInput;
+		s->insn_config = apci3xxx_ai_insn_config;
 		s->insn_read = apci3xxx_ai_insn_read;
 
 	} else {

commit 8a1ec30d75d844d21c5034152242a087230e40e5
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:19:30 2013 -0700

    staging: comedi: addi_apci_3xxx: properly set the analog input subdev_flags
    
    Some of the boards supported by this driver only have differential
    analog inputs. Add a new boardinfo, 'ai_subdev_flags', to allow
    properly setting the subdev_flags for the analog input subdevice.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 7450e6a4f475..c0565942e983 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -77,6 +77,7 @@ enum apci3xxx_boardid {
 
 struct apci3xxx_boardinfo {
 	const char *name;
+	int ai_subdev_flags;
 	int i_NbrAiChannel;
 	int i_NbrAiChannelDiff;
 	unsigned int ai_maxdata;
@@ -91,6 +92,7 @@ struct apci3xxx_boardinfo {
 static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	[BOARD_APCI3000_16] = {
 		.name			= "apci3000-16",
+		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0x0fff,
@@ -100,6 +102,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3000_8] = {
 		.name			= "apci3000-8",
+		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0x0fff,
@@ -109,6 +112,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3000_4] = {
 		.name			= "apci3000-4",
+		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.i_NbrAiChannel		= 4,
 		.i_NbrAiChannelDiff	= 2,
 		.ai_maxdata		= 0x0fff,
@@ -118,6 +122,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3006_16] = {
 		.name			= "apci3006-16",
+		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0xffff,
@@ -127,6 +132,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3006_8] = {
 		.name			= "apci3006-8",
+		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0xffff,
@@ -136,6 +142,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3006_4] = {
 		.name			= "apci3006-4",
+		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.i_NbrAiChannel		= 4,
 		.i_NbrAiChannelDiff	= 2,
 		.ai_maxdata		= 0xffff,
@@ -145,6 +152,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3010_16] = {
 		.name			= "apci3010-16",
+		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0x0fff,
@@ -156,6 +164,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3010_8] = {
 		.name			= "apci3010-8",
+		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0x0fff,
@@ -167,6 +176,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3010_4] = {
 		.name			= "apci3010-4",
+		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.i_NbrAiChannel		= 4,
 		.i_NbrAiChannelDiff	= 2,
 		.ai_maxdata		= 0x0fff,
@@ -178,6 +188,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3016_16] = {
 		.name			= "apci3016-16",
+		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0xffff,
@@ -189,6 +200,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3016_8] = {
 		.name			= "apci3016-8",
+		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0xffff,
@@ -200,6 +212,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3016_4] = {
 		.name			= "apci3016-4",
+		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.i_NbrAiChannel		= 4,
 		.i_NbrAiChannelDiff	= 2,
 		.ai_maxdata		= 0xffff,
@@ -211,6 +224,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3100_16_4] = {
 		.name			= "apci3100-16-4",
+		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0x0fff,
@@ -221,6 +235,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3100_8_4] = {
 		.name			= "apci3100-8-4",
+		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0x0fff,
@@ -231,6 +246,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3106_16_4] = {
 		.name			= "apci3106-16-4",
+		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0xffff,
@@ -241,6 +257,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3106_8_4] = {
 		.name			= "apci3106-8-4",
+		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0xffff,
@@ -251,6 +268,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3110_16_4] = {
 		.name			= "apci3110-16-4",
+		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0x0fff,
@@ -263,6 +281,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3110_8_4] = {
 		.name			= "apci3110-8-4",
+		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0x0fff,
@@ -275,6 +294,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3116_16_4] = {
 		.name			= "apci3116-16-4",
+		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0xffff,
@@ -287,6 +307,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3116_8_4] = {
 		.name			= "apci3116-8-4",
+		.ai_subdev_flags	= SDF_COMMON | SDF_GROUND | SDF_DIFF,
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0xffff,
@@ -299,6 +320,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3003] = {
 		.name			= "apci3003",
+		.ai_subdev_flags	= SDF_DIFF,
 		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0xffff,
 		.b_AvailableConvertUnit	= 7,
@@ -308,6 +330,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3002_16] = {
 		.name			= "apci3002-16",
+		.ai_subdev_flags	= SDF_DIFF,
 		.i_NbrAiChannelDiff	= 16,
 		.ai_maxdata		= 0xffff,
 		.b_AvailableConvertUnit	= 6,
@@ -317,6 +340,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3002_8] = {
 		.name			= "apci3002-8",
+		.ai_subdev_flags	= SDF_DIFF,
 		.i_NbrAiChannelDiff	= 8,
 		.ai_maxdata		= 0xffff,
 		.b_AvailableConvertUnit	= 6,
@@ -326,6 +350,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3002_4] = {
 		.name			= "apci3002-4",
+		.ai_subdev_flags	= SDF_DIFF,
 		.i_NbrAiChannelDiff	= 4,
 		.ai_maxdata		= 0xffff,
 		.b_AvailableConvertUnit	= 6,
@@ -594,8 +619,7 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 	if (board->i_NbrAiChannel || board->i_NbrAiChannelDiff) {
 		dev->read_subdev = s;
 		s->type = COMEDI_SUBD_AI;
-		s->subdev_flags = SDF_READABLE | SDF_COMMON | SDF_GROUND |
-				  SDF_DIFF;
+		s->subdev_flags = SDF_READABLE | board->ai_subdev_flags;
 		if (board->i_NbrAiChannel) {
 			s->n_chan = board->i_NbrAiChannel;
 			devpriv->b_SingelDiff = 0;

commit 5469d929087c135b5978b1f5628ec897d5c55d9f
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:19:10 2013 -0700

    staging: comedi: addi_apci_3xxx: rename boardinfo 'i_AiMaxData'
    
    Rename this CamelCase boardinfo. Also, change its type to match
    the type of comedi_subdevice 'maxdata'.
    
    For aesthetic reasons, change the values to hex since this is more
    common for the 'maxdata' values in comedi drivers.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 7cee7a96a27d..7450e6a4f475 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -79,7 +79,7 @@ struct apci3xxx_boardinfo {
 	const char *name;
 	int i_NbrAiChannel;
 	int i_NbrAiChannelDiff;
-	int i_AiMaxdata;
+	unsigned int ai_maxdata;
 	unsigned char b_AvailableConvertUnit;
 	unsigned int ui_MinAcquisitiontimeNs;
 	unsigned int has_ao:1;
@@ -93,7 +93,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3000-16",
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
-		.i_AiMaxdata		= 4095,
+		.ai_maxdata		= 0x0fff,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.has_ttl_io		= 1,
@@ -102,7 +102,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3000-8",
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
-		.i_AiMaxdata		= 4095,
+		.ai_maxdata		= 0x0fff,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.has_ttl_io		= 1,
@@ -111,7 +111,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3000-4",
 		.i_NbrAiChannel		= 4,
 		.i_NbrAiChannelDiff	= 2,
-		.i_AiMaxdata		= 4095,
+		.ai_maxdata		= 0x0fff,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.has_ttl_io		= 1,
@@ -120,7 +120,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3006-16",
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
-		.i_AiMaxdata		= 65535,
+		.ai_maxdata		= 0xffff,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.has_ttl_io		= 1,
@@ -129,7 +129,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3006-8",
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
-		.i_AiMaxdata		= 65535,
+		.ai_maxdata		= 0xffff,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.has_ttl_io		= 1,
@@ -138,7 +138,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3006-4",
 		.i_NbrAiChannel		= 4,
 		.i_NbrAiChannelDiff	= 2,
-		.i_AiMaxdata		= 65535,
+		.ai_maxdata		= 0xffff,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.has_ttl_io		= 1,
@@ -147,7 +147,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3010-16",
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
-		.i_AiMaxdata		= 4095,
+		.ai_maxdata		= 0x0fff,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_dig_in		= 1,
@@ -158,7 +158,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3010-8",
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
-		.i_AiMaxdata		= 4095,
+		.ai_maxdata		= 0x0fff,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_dig_in		= 1,
@@ -169,7 +169,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3010-4",
 		.i_NbrAiChannel		= 4,
 		.i_NbrAiChannelDiff	= 2,
-		.i_AiMaxdata		= 4095,
+		.ai_maxdata		= 0x0fff,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_dig_in		= 1,
@@ -180,7 +180,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3016-16",
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
-		.i_AiMaxdata		= 65535,
+		.ai_maxdata		= 0xffff,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_dig_in		= 1,
@@ -191,7 +191,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3016-8",
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
-		.i_AiMaxdata		= 65535,
+		.ai_maxdata		= 0xffff,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_dig_in		= 1,
@@ -202,7 +202,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3016-4",
 		.i_NbrAiChannel		= 4,
 		.i_NbrAiChannelDiff	= 2,
-		.i_AiMaxdata		= 65535,
+		.ai_maxdata		= 0xffff,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_dig_in		= 1,
@@ -213,7 +213,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3100-16-4",
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
-		.i_AiMaxdata		= 4095,
+		.ai_maxdata		= 0x0fff,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.has_ao			= 1,
@@ -223,7 +223,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3100-8-4",
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
-		.i_AiMaxdata		= 4095,
+		.ai_maxdata		= 0x0fff,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.has_ao			= 1,
@@ -233,7 +233,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3106-16-4",
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
-		.i_AiMaxdata		= 65535,
+		.ai_maxdata		= 0xffff,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.has_ao			= 1,
@@ -243,7 +243,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3106-8-4",
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
-		.i_AiMaxdata		= 65535,
+		.ai_maxdata		= 0xffff,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.has_ao			= 1,
@@ -253,7 +253,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3110-16-4",
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
-		.i_AiMaxdata		= 4095,
+		.ai_maxdata		= 0x0fff,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_ao			= 1,
@@ -265,7 +265,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3110-8-4",
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
-		.i_AiMaxdata		= 4095,
+		.ai_maxdata		= 0x0fff,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_ao			= 1,
@@ -277,7 +277,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3116-16-4",
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
-		.i_AiMaxdata		= 65535,
+		.ai_maxdata		= 0xffff,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_ao			= 1,
@@ -289,7 +289,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.name			= "apci3116-8-4",
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
-		.i_AiMaxdata		= 65535,
+		.ai_maxdata		= 0xffff,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_ao			= 1,
@@ -300,7 +300,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	[BOARD_APCI3003] = {
 		.name			= "apci3003",
 		.i_NbrAiChannelDiff	= 4,
-		.i_AiMaxdata		= 65535,
+		.ai_maxdata		= 0xffff,
 		.b_AvailableConvertUnit	= 7,
 		.ui_MinAcquisitiontimeNs = 2500,
 		.has_dig_in		= 1,
@@ -309,7 +309,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	[BOARD_APCI3002_16] = {
 		.name			= "apci3002-16",
 		.i_NbrAiChannelDiff	= 16,
-		.i_AiMaxdata		= 65535,
+		.ai_maxdata		= 0xffff,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_dig_in		= 1,
@@ -318,7 +318,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	[BOARD_APCI3002_8] = {
 		.name			= "apci3002-8",
 		.i_NbrAiChannelDiff	= 8,
-		.i_AiMaxdata		= 65535,
+		.ai_maxdata		= 0xffff,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_dig_in		= 1,
@@ -327,7 +327,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	[BOARD_APCI3002_4] = {
 		.name			= "apci3002-4",
 		.i_NbrAiChannelDiff	= 4,
-		.i_AiMaxdata		= 65535,
+		.ai_maxdata		= 0xffff,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_dig_in		= 1,
@@ -603,7 +603,7 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 			s->n_chan = board->i_NbrAiChannelDiff;
 			devpriv->b_SingelDiff = 1;
 		}
-		s->maxdata = board->i_AiMaxdata;
+		s->maxdata = board->ai_maxdata;
 		s->len_chanlist = s->n_chan;
 		s->range_table = &apci3xxx_ai_range;
 

commit 6abeba097bb32e82a8b9e0a748224574b588d3a3
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:18:51 2013 -0700

    staging: comedi: addi_apci_3xxx: rename boardinfo 'pc_DriverName'
    
    Rename this CamelCase boardinfo.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 1f6da1479042..7cee7a96a27d 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -76,7 +76,7 @@ enum apci3xxx_boardid {
 };
 
 struct apci3xxx_boardinfo {
-	const char *pc_DriverName;
+	const char *name;
 	int i_NbrAiChannel;
 	int i_NbrAiChannelDiff;
 	int i_AiMaxdata;
@@ -90,7 +90,7 @@ struct apci3xxx_boardinfo {
 
 static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	[BOARD_APCI3000_16] = {
-		.pc_DriverName		= "apci3000-16",
+		.name			= "apci3000-16",
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiMaxdata		= 4095,
@@ -99,7 +99,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3000_8] = {
-		.pc_DriverName		= "apci3000-8",
+		.name			= "apci3000-8",
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiMaxdata		= 4095,
@@ -108,7 +108,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3000_4] = {
-		.pc_DriverName		= "apci3000-4",
+		.name			= "apci3000-4",
 		.i_NbrAiChannel		= 4,
 		.i_NbrAiChannelDiff	= 2,
 		.i_AiMaxdata		= 4095,
@@ -117,7 +117,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3006_16] = {
-		.pc_DriverName		= "apci3006-16",
+		.name			= "apci3006-16",
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiMaxdata		= 65535,
@@ -126,7 +126,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3006_8] = {
-		.pc_DriverName		= "apci3006-8",
+		.name			= "apci3006-8",
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiMaxdata		= 65535,
@@ -135,7 +135,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3006_4] = {
-		.pc_DriverName		= "apci3006-4",
+		.name			= "apci3006-4",
 		.i_NbrAiChannel		= 4,
 		.i_NbrAiChannelDiff	= 2,
 		.i_AiMaxdata		= 65535,
@@ -144,7 +144,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3010_16] = {
-		.pc_DriverName		= "apci3010-16",
+		.name			= "apci3010-16",
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiMaxdata		= 4095,
@@ -155,7 +155,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3010_8] = {
-		.pc_DriverName		= "apci3010-8",
+		.name			= "apci3010-8",
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiMaxdata		= 4095,
@@ -166,7 +166,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3010_4] = {
-		.pc_DriverName		= "apci3010-4",
+		.name			= "apci3010-4",
 		.i_NbrAiChannel		= 4,
 		.i_NbrAiChannelDiff	= 2,
 		.i_AiMaxdata		= 4095,
@@ -177,7 +177,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3016_16] = {
-		.pc_DriverName		= "apci3016-16",
+		.name			= "apci3016-16",
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiMaxdata		= 65535,
@@ -188,7 +188,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3016_8] = {
-		.pc_DriverName		= "apci3016-8",
+		.name			= "apci3016-8",
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiMaxdata		= 65535,
@@ -199,7 +199,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3016_4] = {
-		.pc_DriverName		= "apci3016-4",
+		.name			= "apci3016-4",
 		.i_NbrAiChannel		= 4,
 		.i_NbrAiChannelDiff	= 2,
 		.i_AiMaxdata		= 65535,
@@ -210,7 +210,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3100_16_4] = {
-		.pc_DriverName		= "apci3100-16-4",
+		.name			= "apci3100-16-4",
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiMaxdata		= 4095,
@@ -220,7 +220,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3100_8_4] = {
-		.pc_DriverName		= "apci3100-8-4",
+		.name			= "apci3100-8-4",
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiMaxdata		= 4095,
@@ -230,7 +230,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3106_16_4] = {
-		.pc_DriverName		= "apci3106-16-4",
+		.name			= "apci3106-16-4",
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiMaxdata		= 65535,
@@ -240,7 +240,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3106_8_4] = {
-		.pc_DriverName		= "apci3106-8-4",
+		.name			= "apci3106-8-4",
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiMaxdata		= 65535,
@@ -250,7 +250,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3110_16_4] = {
-		.pc_DriverName		= "apci3110-16-4",
+		.name			= "apci3110-16-4",
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiMaxdata		= 4095,
@@ -262,7 +262,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3110_8_4] = {
-		.pc_DriverName		= "apci3110-8-4",
+		.name			= "apci3110-8-4",
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiMaxdata		= 4095,
@@ -274,7 +274,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3116_16_4] = {
-		.pc_DriverName		= "apci3116-16-4",
+		.name			= "apci3116-16-4",
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiMaxdata		= 65535,
@@ -286,7 +286,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3116_8_4] = {
-		.pc_DriverName		= "apci3116-8-4",
+		.name			= "apci3116-8-4",
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiMaxdata		= 65535,
@@ -298,7 +298,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3003] = {
-		.pc_DriverName		= "apci3003",
+		.name			= "apci3003",
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiMaxdata		= 65535,
 		.b_AvailableConvertUnit	= 7,
@@ -307,7 +307,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.has_dig_out		= 1,
 	},
 	[BOARD_APCI3002_16] = {
-		.pc_DriverName		= "apci3002-16",
+		.name			= "apci3002-16",
 		.i_NbrAiChannelDiff	= 16,
 		.i_AiMaxdata		= 65535,
 		.b_AvailableConvertUnit	= 6,
@@ -316,7 +316,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.has_dig_out		= 1,
 	},
 	[BOARD_APCI3002_8] = {
-		.pc_DriverName		= "apci3002-8",
+		.name			= "apci3002-8",
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiMaxdata		= 65535,
 		.b_AvailableConvertUnit	= 6,
@@ -325,7 +325,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.has_dig_out		= 1,
 	},
 	[BOARD_APCI3002_4] = {
-		.pc_DriverName		= "apci3002-4",
+		.name			= "apci3002-4",
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiMaxdata		= 65535,
 		.b_AvailableConvertUnit	= 6,
@@ -334,7 +334,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.has_dig_out		= 1,
 	},
 	[BOARD_APCI3500] = {
-		.pc_DriverName		= "apci3500",
+		.name			= "apci3500",
 		.has_ao			= 1,
 		.has_ttl_io		= 1,
 	},
@@ -563,7 +563,7 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 	if (!board)
 		return -ENODEV;
 	dev->board_ptr = board;
-	dev->board_name = board->pc_DriverName;
+	dev->board_name = board->name;
 
 	devpriv = kzalloc(sizeof(*devpriv), GFP_KERNEL);
 	if (!devpriv)

commit 79518d9f9c2025449e66a9f00f18d6962f859627
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:18:31 2013 -0700

    staging: comedi: addi_apci_3xxx: remove 'i_AiChannelList' from the boardinfo
    
    The analog input s->len_chanlist for the boards supported by this driver
    should always be the number of channels (s->n_chan). Use that instead
    and remove the 'i_AiChannelList' from the boardinfo.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 0c5c05caaab8..1f6da1479042 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -79,7 +79,6 @@ struct apci3xxx_boardinfo {
 	const char *pc_DriverName;
 	int i_NbrAiChannel;
 	int i_NbrAiChannelDiff;
-	int i_AiChannelList;
 	int i_AiMaxdata;
 	unsigned char b_AvailableConvertUnit;
 	unsigned int ui_MinAcquisitiontimeNs;
@@ -94,7 +93,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3000-16",
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
-		.i_AiChannelList	= 16,
 		.i_AiMaxdata		= 4095,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
@@ -104,7 +102,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3000-8",
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
-		.i_AiChannelList	= 8,
 		.i_AiMaxdata		= 4095,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
@@ -114,7 +111,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3000-4",
 		.i_NbrAiChannel		= 4,
 		.i_NbrAiChannelDiff	= 2,
-		.i_AiChannelList	= 4,
 		.i_AiMaxdata		= 4095,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
@@ -124,7 +120,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3006-16",
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
-		.i_AiChannelList	= 16,
 		.i_AiMaxdata		= 65535,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
@@ -134,7 +129,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3006-8",
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
-		.i_AiChannelList	= 8,
 		.i_AiMaxdata		= 65535,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
@@ -144,7 +138,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3006-4",
 		.i_NbrAiChannel		= 4,
 		.i_NbrAiChannelDiff	= 2,
-		.i_AiChannelList	= 4,
 		.i_AiMaxdata		= 65535,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
@@ -154,7 +147,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3010-16",
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
-		.i_AiChannelList	= 16,
 		.i_AiMaxdata		= 4095,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
@@ -166,7 +158,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3010-8",
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
-		.i_AiChannelList	= 8,
 		.i_AiMaxdata		= 4095,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
@@ -178,7 +169,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3010-4",
 		.i_NbrAiChannel		= 4,
 		.i_NbrAiChannelDiff	= 2,
-		.i_AiChannelList	= 4,
 		.i_AiMaxdata		= 4095,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
@@ -190,7 +180,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3016-16",
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
-		.i_AiChannelList	= 16,
 		.i_AiMaxdata		= 65535,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
@@ -202,7 +191,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3016-8",
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
-		.i_AiChannelList	= 8,
 		.i_AiMaxdata		= 65535,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
@@ -214,7 +202,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3016-4",
 		.i_NbrAiChannel		= 4,
 		.i_NbrAiChannelDiff	= 2,
-		.i_AiChannelList	= 4,
 		.i_AiMaxdata		= 65535,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
@@ -226,7 +213,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3100-16-4",
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
-		.i_AiChannelList	= 16,
 		.i_AiMaxdata		= 4095,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
@@ -237,7 +223,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3100-8-4",
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
-		.i_AiChannelList	= 8,
 		.i_AiMaxdata		= 4095,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
@@ -248,7 +233,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3106-16-4",
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
-		.i_AiChannelList	= 16,
 		.i_AiMaxdata		= 65535,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
@@ -259,7 +243,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3106-8-4",
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
-		.i_AiChannelList	= 8,
 		.i_AiMaxdata		= 65535,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
@@ -270,7 +253,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3110-16-4",
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
-		.i_AiChannelList	= 16,
 		.i_AiMaxdata		= 4095,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
@@ -283,7 +265,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3110-8-4",
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
-		.i_AiChannelList	= 8,
 		.i_AiMaxdata		= 4095,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
@@ -296,7 +277,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3116-16-4",
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
-		.i_AiChannelList	= 16,
 		.i_AiMaxdata		= 65535,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
@@ -309,7 +289,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3116-8-4",
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
-		.i_AiChannelList	= 8,
 		.i_AiMaxdata		= 65535,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
@@ -321,7 +300,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	[BOARD_APCI3003] = {
 		.pc_DriverName		= "apci3003",
 		.i_NbrAiChannelDiff	= 4,
-		.i_AiChannelList	= 4,
 		.i_AiMaxdata		= 65535,
 		.b_AvailableConvertUnit	= 7,
 		.ui_MinAcquisitiontimeNs = 2500,
@@ -331,7 +309,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	[BOARD_APCI3002_16] = {
 		.pc_DriverName		= "apci3002-16",
 		.i_NbrAiChannelDiff	= 16,
-		.i_AiChannelList	= 16,
 		.i_AiMaxdata		= 65535,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
@@ -341,7 +318,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	[BOARD_APCI3002_8] = {
 		.pc_DriverName		= "apci3002-8",
 		.i_NbrAiChannelDiff	= 8,
-		.i_AiChannelList	= 8,
 		.i_AiMaxdata		= 65535,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
@@ -351,7 +327,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	[BOARD_APCI3002_4] = {
 		.pc_DriverName		= "apci3002-4",
 		.i_NbrAiChannelDiff	= 4,
-		.i_AiChannelList	= 4,
 		.i_AiMaxdata		= 65535,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
@@ -629,7 +604,7 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 			devpriv->b_SingelDiff = 1;
 		}
 		s->maxdata = board->i_AiMaxdata;
-		s->len_chanlist = board->i_AiChannelList;
+		s->len_chanlist = s->n_chan;
 		s->range_table = &apci3xxx_ai_range;
 
 		s->insn_config = i_APCI3XXX_InsnConfigAnalogInput;

commit 283ce669268da5a51eaf62efe92d5dd4625817a2
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:18:11 2013 -0700

    staging: comedi: addi_apci_3xxx: remove 'tsk_Current' from private data
    
    The interrupt function should be using comedi_event() to let the user
    know data is available from the analog input subdevice.
    
    The analog input subdevice is currently broken and nothing sets
    tsk_Current anyway so just remove it.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 1c013da80b71..0c5c05caaab8 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -24,7 +24,6 @@
 
 #include <linux/pci.h>
 #include <linux/interrupt.h>
-#include <linux/sched.h>
 
 #include "../comedidev.h"
 
@@ -374,7 +373,6 @@ struct apci3xxx_private {
 	unsigned int ui_EocEosConversionTime;
 	unsigned char b_EocEosConversionTimeBase;
 	unsigned char b_SingelDiff;
-	struct task_struct *tsk_Current;
 };
 
 #include "addi-data/hwdrv_apci3xxx.c"
@@ -405,8 +403,7 @@ static irqreturn_t apci3xxx_irq_handler(int irq, void *d)
 			/* Set the interrupt flag */
 			devpriv->b_EocEosInterrupt = 2;
 
-			/* Send a signal to from kernel to user space */
-			send_sig(SIGIO, devpriv->tsk_Current, 0);
+			/* FIXME: comedi_event() */
 		}
 	}
 	return IRQ_RETVAL(1);

commit f43abbb4ff4bbe7f92c1293c3aa06c1e43da7695
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:17:49 2013 -0700

    staging: comedi: addi_apci_3xxx: rename 'dw_AiBase' in private data
    
    This variable holds the ioremap'ed PCI bar 3 used to read/write the
    analog input and output registers. Rename it to simply 'mmio'.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 90f974970394..1c013da80b71 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -367,7 +367,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 };
 
 struct apci3xxx_private {
-	void __iomem *dw_AiBase;
+	void __iomem *mmio;
 	unsigned int ui_AiNbrofChannels;	/*  how many channels is measured */
 	unsigned int ui_AiReadData[32];
 	unsigned char b_EocEosInterrupt;
@@ -387,10 +387,10 @@ static irqreturn_t apci3xxx_irq_handler(int irq, void *d)
 	int i;
 
 	/* Test if interrupt occur */
-	status = readl(devpriv->dw_AiBase + 16);
+	status = readl(devpriv->mmio + 16);
 	if ((status & 0x2) == 0x2) {
 		/* Reset the interrupt */
-		writel(status, devpriv->dw_AiBase + 16);
+		writel(status, devpriv->mmio + 16);
 
 		/* Test if interrupt enabled */
 		if (devpriv->b_EocEosInterrupt == 1) {
@@ -398,7 +398,7 @@ static irqreturn_t apci3xxx_irq_handler(int irq, void *d)
 			for (i = 0; i < devpriv->ui_AiNbrofChannels; i++) {
 				unsigned int val;
 
-				val = readl(devpriv->dw_AiBase + 28);
+				val = readl(devpriv->mmio + 28);
 				devpriv->ui_AiReadData[i] = val;
 			}
 
@@ -425,14 +425,14 @@ static int apci3xxx_ao_insn_write(struct comedi_device *dev,
 
 	for (i = 0; i < insn->n; i++) {
 		/* Set the range selection */
-		writel(range, devpriv->dw_AiBase + 96);
+		writel(range, devpriv->mmio + 96);
 
 		/* Write the analog value to the selected channel */
-		writel((data[i] << 8) | chan, devpriv->dw_AiBase + 100);
+		writel((data[i] << 8) | chan, devpriv->mmio + 100);
 
 		/* Wait the end of transfer */
 		do {
-			status = readl(devpriv->dw_AiBase + 96);
+			status = readl(devpriv->mmio + 96);
 		} while ((status & 0x100) != 0x100);
 	}
 
@@ -558,18 +558,18 @@ static int apci3xxx_reset(struct comedi_device *dev)
 	devpriv->b_EocEosInterrupt = 0;
 
 	/* Clear the start command */
-	writel(0, devpriv->dw_AiBase + 8);
+	writel(0, devpriv->mmio + 8);
 
 	/* Reset the interrupt flags */
-	val = readl(devpriv->dw_AiBase + 16);
-	writel(val, devpriv->dw_AiBase + 16);
+	val = readl(devpriv->mmio + 16);
+	writel(val, devpriv->mmio + 16);
 
 	/* clear the EOS */
-	readl(devpriv->dw_AiBase + 20);
+	readl(devpriv->mmio + 20);
 
 	/* Clear the FIFO */
 	for (i = 0; i < 16; i++)
-		val = readl(devpriv->dw_AiBase + 28);
+		val = readl(devpriv->mmio + 28);
 
 	/* Enable the interrupt */
 	enable_irq(dev->irq);
@@ -603,7 +603,7 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 		return ret;
 
 	dev->iobase = pci_resource_start(pcidev, 2);
-	devpriv->dw_AiBase = pci_ioremap_bar(pcidev, 3);
+	devpriv->mmio = pci_ioremap_bar(pcidev, 3);
 
 	if (pcidev->irq > 0) {
 		ret = request_irq(pcidev->irq, apci3xxx_irq_handler,
@@ -717,8 +717,8 @@ static void apci3xxx_detach(struct comedi_device *dev)
 			apci3xxx_reset(dev);
 		if (dev->irq)
 			free_irq(dev->irq, dev);
-		if (devpriv->dw_AiBase)
-			iounmap(devpriv->dw_AiBase);
+		if (devpriv->mmio)
+			iounmap(devpriv->mmio);
 	}
 	comedi_pci_disable(dev);
 }

commit dc63364691322014e313d1eb740df1ade2a3b13d
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:17:28 2013 -0700

    staging: comedi: addi_apci_3xxx: remove 'iobase' from private data
    
    The private data 'iobase' is the same as the comedi_device 'iobase'.
    Use the one in the comedi_device instead.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 39e7fb679ab8..90f974970394 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -367,7 +367,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 };
 
 struct apci3xxx_private {
-	int iobase;
 	void __iomem *dw_AiBase;
 	unsigned int ui_AiNbrofChannels;	/*  how many channels is measured */
 	unsigned int ui_AiReadData[32];
@@ -445,9 +444,7 @@ static int apci3xxx_di_insn_bits(struct comedi_device *dev,
 				 struct comedi_insn *insn,
 				 unsigned int *data)
 {
-	struct apci3xxx_private *devpriv = dev->private;
-
-	data[1] = inl(devpriv->iobase + 32) & 0xf;
+	data[1] = inl(dev->iobase + 32) & 0xf;
 
 	return insn->n;
 }
@@ -457,16 +454,15 @@ static int apci3xxx_do_insn_bits(struct comedi_device *dev,
 				 struct comedi_insn *insn,
 				 unsigned int *data)
 {
-	struct apci3xxx_private *devpriv = dev->private;
 	unsigned int mask = data[0];
 	unsigned int bits = data[1];
 
-	s->state = inl(devpriv->iobase + 48) & 0xf;
+	s->state = inl(dev->iobase + 48) & 0xf;
 	if (mask) {
 		s->state &= ~mask;
 		s->state |= (bits & mask);
 
-		outl(s->state, devpriv->iobase + 48);
+		outl(s->state, dev->iobase + 48);
 	}
 
 	data[1] = s->state;
@@ -479,7 +475,6 @@ static int apci3xxx_dio_insn_config(struct comedi_device *dev,
 				    struct comedi_insn *insn,
 				    unsigned int *data)
 {
-	struct apci3xxx_private *devpriv = dev->private;
 	unsigned int chan = CR_CHAN(insn->chanspec);
 	unsigned int mask = 1 << chan;
 	unsigned int bits;
@@ -512,7 +507,7 @@ static int apci3xxx_dio_insn_config(struct comedi_device *dev,
 
 	/* update port 2 configuration */
 	if (bits)
-		outl((s->io_bits >> 24) & 0xff, devpriv->iobase + 224);
+		outl((s->io_bits >> 24) & 0xff, dev->iobase + 224);
 
 	return insn->n;
 }
@@ -522,7 +517,6 @@ static int apci3xxx_dio_insn_bits(struct comedi_device *dev,
 				  struct comedi_insn *insn,
 				  unsigned int *data)
 {
-	struct apci3xxx_private *devpriv = dev->private;
 	unsigned int mask = data[0];
 	unsigned int bits = data[1];
 	unsigned int val;
@@ -534,17 +528,17 @@ static int apci3xxx_dio_insn_bits(struct comedi_device *dev,
 		s->state |= (bits & mask);
 
 		if (mask & 0xff)
-			outl(s->state & 0xff, devpriv->iobase + 80);
+			outl(s->state & 0xff, dev->iobase + 80);
 		if (mask & 0xff0000)
-			outl((s->state >> 16) & 0xff, devpriv->iobase + 112);
+			outl((s->state >> 16) & 0xff, dev->iobase + 112);
 	}
 
-	val = inl(devpriv->iobase + 80);
-	val |= (inl(devpriv->iobase + 64) << 8);
+	val = inl(dev->iobase + 80);
+	val |= (inl(dev->iobase + 64) << 8);
 	if (s->io_bits & 0xff0000)
-		val |= (inl(devpriv->iobase + 112) << 16);
+		val |= (inl(dev->iobase + 112) << 16);
 	else
-		val |= (inl(devpriv->iobase + 96) << 16);
+		val |= (inl(dev->iobase + 96) << 16);
 
 	data[1] = val;
 
@@ -608,9 +602,7 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 	if (ret)
 		return ret;
 
-	/* board has an ADDIDATA_9054 eeprom */
 	dev->iobase = pci_resource_start(pcidev, 2);
-	devpriv->iobase = pci_resource_start(pcidev, 2);
 	devpriv->dw_AiBase = pci_ioremap_bar(pcidev, 3);
 
 	if (pcidev->irq > 0) {

commit 9cfd70de792133feb223f4a169ee8bbd13168bc3
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:17:08 2013 -0700

    staging: comedi: addi_apci_3xxx: remove 'i_IobaseReserved' from private data
    
    This variable is not used by the driver. Remove it.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index f610ea62c9ca..39e7fb679ab8 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -368,7 +368,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 
 struct apci3xxx_private {
 	int iobase;
-	int i_IobaseReserved;
 	void __iomem *dw_AiBase;
 	unsigned int ui_AiNbrofChannels;	/*  how many channels is measured */
 	unsigned int ui_AiReadData[32];
@@ -613,7 +612,6 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 	dev->iobase = pci_resource_start(pcidev, 2);
 	devpriv->iobase = pci_resource_start(pcidev, 2);
 	devpriv->dw_AiBase = pci_ioremap_bar(pcidev, 3);
-	devpriv->i_IobaseReserved = pci_resource_start(pcidev, 3);
 
 	if (pcidev->irq > 0) {
 		ret = request_irq(pcidev->irq, apci3xxx_irq_handler,

commit 088e2e053d285553cb988ca50177d266d5494243
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:16:47 2013 -0700

    staging: comedi: addi_apci_3xxx: tidy up i_APCI3XXX_InsnReadAnalogInput()
    
    The analog input subdevice in this driver is broken. It abuses the
    comedi API and will not work as-is. Start cleaning it up so it can
    be fixed.
    
    Rename the CamelCase function and the local variables.
    
    Refactor the function to remove the indents. Most of the indents are
    left over from the previous patches.
    
    Invert the early tests to provide a quick exit from the function.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 88b609229c57..f610ea62c9ca 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -646,7 +646,7 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 		s->range_table = &apci3xxx_ai_range;
 
 		s->insn_config = i_APCI3XXX_InsnConfigAnalogInput;
-		s->insn_read = i_APCI3XXX_InsnReadAnalogInput;
+		s->insn_read = apci3xxx_ai_insn_read;
 
 	} else {
 		s->type = COMEDI_SUBD_UNUSED;

commit 08be3097fa1597f13b97ab390b0e80ce07cb4796
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:16:05 2013 -0700

    staging: comedi: addi_apci_3xxx: remove 'b_AiInitialisation' from private data
    
    This variable is set during the attach of the board and never cleared
    so the test in i_APCI3XXX_InsnReadAnalogInput() will always succeed.
    Just remove the variable to help with cleaning up this driver.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index ffcacade5f82..88b609229c57 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -370,7 +370,6 @@ struct apci3xxx_private {
 	int iobase;
 	int i_IobaseReserved;
 	void __iomem *dw_AiBase;
-	unsigned char b_AiInitialisation;
 	unsigned int ui_AiNbrofChannels;	/*  how many channels is measured */
 	unsigned int ui_AiReadData[32];
 	unsigned char b_EocEosInterrupt;
@@ -646,9 +645,6 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 		s->len_chanlist = board->i_AiChannelList;
 		s->range_table = &apci3xxx_ai_range;
 
-		/* Set the initialisation flag */
-		devpriv->b_AiInitialisation = 1;
-
 		s->insn_config = i_APCI3XXX_InsnConfigAnalogInput;
 		s->insn_read = i_APCI3XXX_InsnReadAnalogInput;
 

commit da6578abd7c7535e59cae5eb0c54f5cd13902a6d
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:15:27 2013 -0700

    staging: comedi: addi_apci_3xxx: refactor the ttl digital i/o support
    
    Currently, the subdevice functions used to configure and read/write the
    ttl digital i/o ports is way over to complicated. The (*insn_config)
    function also abuses the comedi API by overriding the instruction
    command passed in data[0].
    
    Fix the ttl digital i/o support to work like the comedi core expects.
    
    The (*insn_config) function supports the three instructions common for
    COMEDI_SUBD_DIO subdevices:
    
        INSN_CONFIG_DIO_INPUT - configure the specified channel as input
        INSN_CONFIG_DIO_OUTPUT - configure the specified channel as output
        INSN_CONFIG_DIO_QUERY - returns the status of the specified channel
    
        Port 0 (channels 0-7) is always input
        Port 1 (channels 8-15) is always output
        Port 2 (channels 9-23) are programmable i/o (all channels are input or output)
    
    The (*insn_bits) function allows writing to the output channels and returns
    the state of all channels.
    
    The (*insn_read) and (*insn_write) functions are not required. The comedi
    core will emulate them using the (*insn_bits) function.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index c3dfe5188e7a..ffcacade5f82 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -378,7 +378,6 @@ struct apci3xxx_private {
 	unsigned char b_EocEosConversionTimeBase;
 	unsigned char b_SingelDiff;
 	struct task_struct *tsk_Current;
-	unsigned int ul_TTLPortConfiguration[10];
 };
 
 #include "addi-data/hwdrv_apci3xxx.c"
@@ -477,6 +476,83 @@ static int apci3xxx_do_insn_bits(struct comedi_device *dev,
 	return insn->n;
 }
 
+static int apci3xxx_dio_insn_config(struct comedi_device *dev,
+				    struct comedi_subdevice *s,
+				    struct comedi_insn *insn,
+				    unsigned int *data)
+{
+	struct apci3xxx_private *devpriv = dev->private;
+	unsigned int chan = CR_CHAN(insn->chanspec);
+	unsigned int mask = 1 << chan;
+	unsigned int bits;
+
+	/*
+	 * Port 0 (channels 0-7) are always inputs
+	 * Port 1 (channels 8-15) are always outputs
+	 * Port 2 (channels 16-23) are programmable i/o
+	 *
+	 * Changing any channel in port 2 changes the entire port.
+	 */
+	if (mask & 0xff0000)
+		bits = 0xff0000;
+	else
+		bits = 0;
+
+	switch (data[0]) {
+	case INSN_CONFIG_DIO_INPUT:
+		s->io_bits &= ~bits;
+		break;
+	case INSN_CONFIG_DIO_OUTPUT:
+		s->io_bits |= bits;
+		break;
+	case INSN_CONFIG_DIO_QUERY:
+		data[1] = (s->io_bits & bits) ? COMEDI_OUTPUT : COMEDI_INPUT;
+		return insn->n;
+	default:
+		return -EINVAL;
+	}
+
+	/* update port 2 configuration */
+	if (bits)
+		outl((s->io_bits >> 24) & 0xff, devpriv->iobase + 224);
+
+	return insn->n;
+}
+
+static int apci3xxx_dio_insn_bits(struct comedi_device *dev,
+				  struct comedi_subdevice *s,
+				  struct comedi_insn *insn,
+				  unsigned int *data)
+{
+	struct apci3xxx_private *devpriv = dev->private;
+	unsigned int mask = data[0];
+	unsigned int bits = data[1];
+	unsigned int val;
+
+	/* only update output channels */
+	mask &= s->io_bits;
+	if (mask) {
+		s->state &= ~mask;
+		s->state |= (bits & mask);
+
+		if (mask & 0xff)
+			outl(s->state & 0xff, devpriv->iobase + 80);
+		if (mask & 0xff0000)
+			outl((s->state >> 16) & 0xff, devpriv->iobase + 112);
+	}
+
+	val = inl(devpriv->iobase + 80);
+	val |= (inl(devpriv->iobase + 64) << 8);
+	if (s->io_bits & 0xff0000)
+		val |= (inl(devpriv->iobase + 112) << 16);
+	else
+		val |= (inl(devpriv->iobase + 96) << 16);
+
+	data[1] = val;
+
+	return insn->n;
+}
+
 static int apci3xxx_reset(struct comedi_device *dev)
 {
 	struct apci3xxx_private *devpriv = dev->private;
@@ -632,10 +708,8 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 		s->maxdata	= 1;
 		s->io_bits	= 0xff;	/* channels 0-7 are always outputs */
 		s->range_table	= &range_digital;
-		s->insn_config	= i_APCI3XXX_InsnConfigInitTTLIO;
-		s->insn_bits	= i_APCI3XXX_InsnBitsTTLIO;
-		s->insn_read	= i_APCI3XXX_InsnReadTTLIO;
-		s->insn_write	= i_APCI3XXX_InsnWriteTTLIO;
+		s->insn_config	= apci3xxx_dio_insn_config;
+		s->insn_bits	= apci3xxx_dio_insn_bits;
 	} else {
 		s->type = COMEDI_SUBD_UNUSED;
 	}

commit 0e771e49fc2174054bbb4927f9afe8db4e16ae0b
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:15:07 2013 -0700

    staging: comedi: addi_apci_3xxx: absorb i_APCI3XXX_InsnWriteAnalogOutput()
    
    Rename this CamelCase function and absorb it from hwdrv_apci3xxx.c
    directly into the driver.
    
    Tidy up the analog output subdevice init by adding some whitespace.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 8453dfe2d739..c3dfe5188e7a 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -416,6 +416,33 @@ static irqreturn_t apci3xxx_irq_handler(int irq, void *d)
 	return IRQ_RETVAL(1);
 }
 
+static int apci3xxx_ao_insn_write(struct comedi_device *dev,
+				  struct comedi_subdevice *s,
+				  struct comedi_insn *insn,
+				  unsigned int *data)
+{
+	struct apci3xxx_private *devpriv = dev->private;
+	unsigned int chan = CR_CHAN(insn->chanspec);
+	unsigned int range = CR_RANGE(insn->chanspec);
+	unsigned int status;
+	int i;
+
+	for (i = 0; i < insn->n; i++) {
+		/* Set the range selection */
+		writel(range, devpriv->dw_AiBase + 96);
+
+		/* Write the analog value to the selected channel */
+		writel((data[i] << 8) | chan, devpriv->dw_AiBase + 100);
+
+		/* Wait the end of transfer */
+		do {
+			status = readl(devpriv->dw_AiBase + 96);
+		} while ((status & 0x100) != 0x100);
+	}
+
+	return insn->n;
+}
+
 static int apci3xxx_di_insn_bits(struct comedi_device *dev,
 				 struct comedi_subdevice *s,
 				 struct comedi_insn *insn,
@@ -553,17 +580,17 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 		s->type = COMEDI_SUBD_UNUSED;
 	}
 
-	/*  Allocate and Initialise AO Subdevice Structures */
+	/* Analog Output subdevice */
 	s = &dev->subdevices[1];
 	if (board->has_ao) {
-		s->type = COMEDI_SUBD_AO;
-		s->subdev_flags = SDF_WRITEABLE | SDF_GROUND | SDF_COMMON;
-		s->n_chan = 4;
-		s->maxdata = 0x0fff;
-		s->range_table = &apci3xxx_ao_range;
-		s->insn_write = i_APCI3XXX_InsnWriteAnalogOutput;
+		s->type		= COMEDI_SUBD_AO;
+		s->subdev_flags	= SDF_WRITEABLE | SDF_GROUND | SDF_COMMON;
+		s->n_chan	= 4;
+		s->maxdata	= 0x0fff;
+		s->range_table	= &apci3xxx_ao_range;
+		s->insn_write	= apci3xxx_ao_insn_write;
 	} else {
-		s->type = COMEDI_SUBD_UNUSED;
+		s->type		= COMEDI_SUBD_UNUSED;
 	}
 
 	/* Digital Input subdevice */

commit fa81e2f186fb95dac1641e1e8d6740ed559e5204
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:14:47 2013 -0700

    staging: comedi: addi_apci_3xxx: refactor 'i_NbrAoChannel' boardinfo
    
    The boards that have analog outputs always have 4 channels.
    
    Remove the 'i_NbrAoChannel' data from the boardinfo and add a bit
    field to indicate that the board 'has_ao'. Use that to conditionally
    initialize the subdevice and open code the s->n_chan value of 4.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 394d4105a4b2..8453dfe2d739 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -81,10 +81,10 @@ struct apci3xxx_boardinfo {
 	int i_NbrAiChannel;
 	int i_NbrAiChannelDiff;
 	int i_AiChannelList;
-	int i_NbrAoChannel;
 	int i_AiMaxdata;
 	unsigned char b_AvailableConvertUnit;
 	unsigned int ui_MinAcquisitiontimeNs;
+	unsigned int has_ao:1;
 	unsigned int has_dig_in:1;
 	unsigned int has_dig_out:1;
 	unsigned int has_ttl_io:1;
@@ -228,10 +228,10 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
-		.i_NbrAoChannel		= 4,
 		.i_AiMaxdata		= 4095,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
+		.has_ao			= 1,
 		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3100_8_4] = {
@@ -239,10 +239,10 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 8,
-		.i_NbrAoChannel		= 4,
 		.i_AiMaxdata		= 4095,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
+		.has_ao			= 1,
 		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3106_16_4] = {
@@ -250,10 +250,10 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
-		.i_NbrAoChannel		= 4,
 		.i_AiMaxdata		= 65535,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
+		.has_ao			= 1,
 		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3106_8_4] = {
@@ -261,10 +261,10 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 8,
-		.i_NbrAoChannel		= 4,
 		.i_AiMaxdata		= 65535,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
+		.has_ao			= 1,
 		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3110_16_4] = {
@@ -272,10 +272,10 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
-		.i_NbrAoChannel		= 4,
 		.i_AiMaxdata		= 4095,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
+		.has_ao			= 1,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,
 		.has_ttl_io		= 1,
@@ -285,10 +285,10 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 8,
-		.i_NbrAoChannel		= 4,
 		.i_AiMaxdata		= 4095,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
+		.has_ao			= 1,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,
 		.has_ttl_io		= 1,
@@ -298,10 +298,10 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
-		.i_NbrAoChannel		= 4,
 		.i_AiMaxdata		= 65535,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
+		.has_ao			= 1,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,
 		.has_ttl_io		= 1,
@@ -311,10 +311,10 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 8,
-		.i_NbrAoChannel		= 4,
 		.i_AiMaxdata		= 65535,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
+		.has_ao			= 1,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,
 		.has_ttl_io		= 1,
@@ -361,7 +361,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3500] = {
 		.pc_DriverName		= "apci3500",
-		.i_NbrAoChannel		= 4,
+		.has_ao			= 1,
 		.has_ttl_io		= 1,
 	},
 };
@@ -555,10 +555,10 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 
 	/*  Allocate and Initialise AO Subdevice Structures */
 	s = &dev->subdevices[1];
-	if (board->i_NbrAoChannel) {
+	if (board->has_ao) {
 		s->type = COMEDI_SUBD_AO;
 		s->subdev_flags = SDF_WRITEABLE | SDF_GROUND | SDF_COMMON;
-		s->n_chan = board->i_NbrAoChannel;
+		s->n_chan = 4;
 		s->maxdata = 0x0fff;
 		s->range_table = &apci3xxx_ao_range;
 		s->insn_write = i_APCI3XXX_InsnWriteAnalogOutput;

commit 383390cfd4aefad6e00d4738233aa89901211fdd
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:14:02 2013 -0700

    staging: comedi: addi_apci_3xxx: tidy up the ttl digital i/o subdevice init
    
    For aesthetic reasons, add some whitespace to the initialization of the
    ttl digital i/o subdevices.
    
    Fix the subdev_flags for the subdevice. The SDF_GROUND and SDF_COMMON
    flags only apply to analog subdevices.
    
    Fix the s->iobits for the subdevice. According to the datasheet:
            Port 0 (channels 0-7) are always outputs
            Port 1 (channels 8-15) are always inputs
            Port 2 (channels 9-23) are programmable i/o (default to inputs)
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 1a7b136704e0..394d4105a4b2 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -596,20 +596,19 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 	s = &dev->subdevices[4];
 	s->type = COMEDI_SUBD_UNUSED;
 
-	/*  Allocate and Initialise TTL */
+	/* TTL Digital I/O subdevice */
 	s = &dev->subdevices[5];
 	if (board->has_ttl_io) {
-		s->type = COMEDI_SUBD_DIO;
-		s->subdev_flags =
-			SDF_WRITEABLE | SDF_READABLE | SDF_GROUND | SDF_COMMON;
-		s->n_chan = 24;
-		s->maxdata = 1;
-		s->io_bits = 0;	/* all bits input */
-		s->range_table = &range_digital;
-		s->insn_config = i_APCI3XXX_InsnConfigInitTTLIO;
-		s->insn_bits = i_APCI3XXX_InsnBitsTTLIO;
-		s->insn_read = i_APCI3XXX_InsnReadTTLIO;
-		s->insn_write = i_APCI3XXX_InsnWriteTTLIO;
+		s->type		= COMEDI_SUBD_DIO;
+		s->subdev_flags	= SDF_READABLE | SDF_WRITEABLE;
+		s->n_chan	= 24;
+		s->maxdata	= 1;
+		s->io_bits	= 0xff;	/* channels 0-7 are always outputs */
+		s->range_table	= &range_digital;
+		s->insn_config	= i_APCI3XXX_InsnConfigInitTTLIO;
+		s->insn_bits	= i_APCI3XXX_InsnBitsTTLIO;
+		s->insn_read	= i_APCI3XXX_InsnReadTTLIO;
+		s->insn_write	= i_APCI3XXX_InsnWriteTTLIO;
 	} else {
 		s->type = COMEDI_SUBD_UNUSED;
 	}

commit ca1cc85b0ea5d1c9de91ffebf4d5272bb5a61dee
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:13:39 2013 -0700

    staging: comedi: addi_apci_3xxx: tidy up the digital in and out subdevice init
    
    For aesthetic reasons, add some whitespace to the initialization of the
    digital input and output subdevices.
    
    Fix the subdev_flags for both subdevices. The SDF_GROUND and SDF_COMMON
    flags only apply to analog subdevices. Digital output subdevices do not
    need the SDF_READABLE flag set.
    
    Remove the initialization of s->io_bits. It only has meaning for
    COMEDI_SUBD_DIO subdevices.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 2a900702126e..1a7b136704e0 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -565,32 +565,31 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 	} else {
 		s->type = COMEDI_SUBD_UNUSED;
 	}
-	/*  Allocate and Initialise DI Subdevice Structures */
+
+	/* Digital Input subdevice */
 	s = &dev->subdevices[2];
 	if (board->has_dig_in) {
-		s->type = COMEDI_SUBD_DI;
-		s->subdev_flags = SDF_READABLE | SDF_GROUND | SDF_COMMON;
-		s->n_chan = 4;
-		s->maxdata = 1;
-		s->range_table = &range_digital;
-		s->io_bits = 0;	/* all bits input */
-		s->insn_bits = apci3xxx_di_insn_bits;
+		s->type		= COMEDI_SUBD_DI;
+		s->subdev_flags	= SDF_READABLE;
+		s->n_chan	= 4;
+		s->maxdata	= 1;
+		s->range_table	= &range_digital;
+		s->insn_bits	= apci3xxx_di_insn_bits;
 	} else {
-		s->type = COMEDI_SUBD_UNUSED;
+		s->type		= COMEDI_SUBD_UNUSED;
 	}
-	/*  Allocate and Initialise DO Subdevice Structures */
+
+	/* Digital Output subdevice */
 	s = &dev->subdevices[3];
 	if (board->has_dig_out) {
-		s->type = COMEDI_SUBD_DO;
-		s->subdev_flags =
-			SDF_READABLE | SDF_WRITEABLE | SDF_GROUND | SDF_COMMON;
-		s->n_chan = 4;
-		s->maxdata = 1;
-		s->range_table = &range_digital;
-		s->io_bits = 0xf;	/* all bits output */
-		s->insn_bits = apci3xxx_do_insn_bits;
+		s->type		= COMEDI_SUBD_DO;
+		s->subdev_flags	= SDF_WRITEABLE;
+		s->n_chan	= 4;
+		s->maxdata	= 1;
+		s->range_table	= &range_digital;
+		s->insn_bits	= apci3xxx_do_insn_bits;
 	} else {
-		s->type = COMEDI_SUBD_UNUSED;
+		s->type		= COMEDI_SUBD_UNUSED;
 	}
 
 	/*  Allocate and Initialise Timer Subdevice Structures */

commit f1861cb0d29cdc0a28fba02a4d84918118a5ea4e
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:13:19 2013 -0700

    staging: comedi: addi_apci_3xxx: analog output 'maxdata' is always 12-bit
    
    The boards that have analog outputs always have 12-bit resolution.
    
    Remove the 'i_AoMaxdata' data from the boardinfo and open code the
    s->maxdata. Use the hex value for the resolution since that is more
    common in comedi drivers.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 2d4d752261b3..2a900702126e 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -83,7 +83,6 @@ struct apci3xxx_boardinfo {
 	int i_AiChannelList;
 	int i_NbrAoChannel;
 	int i_AiMaxdata;
-	int i_AoMaxdata;
 	unsigned char b_AvailableConvertUnit;
 	unsigned int ui_MinAcquisitiontimeNs;
 	unsigned int has_dig_in:1;
@@ -231,7 +230,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_AiChannelList	= 16,
 		.i_NbrAoChannel		= 4,
 		.i_AiMaxdata		= 4095,
-		.i_AoMaxdata		= 4095,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.has_ttl_io		= 1,
@@ -243,7 +241,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_AiChannelList	= 8,
 		.i_NbrAoChannel		= 4,
 		.i_AiMaxdata		= 4095,
-		.i_AoMaxdata		= 4095,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.has_ttl_io		= 1,
@@ -255,7 +252,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_AiChannelList	= 16,
 		.i_NbrAoChannel		= 4,
 		.i_AiMaxdata		= 65535,
-		.i_AoMaxdata		= 4095,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.has_ttl_io		= 1,
@@ -267,7 +263,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_AiChannelList	= 8,
 		.i_NbrAoChannel		= 4,
 		.i_AiMaxdata		= 65535,
-		.i_AoMaxdata		= 4095,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.has_ttl_io		= 1,
@@ -279,7 +274,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_AiChannelList	= 16,
 		.i_NbrAoChannel		= 4,
 		.i_AiMaxdata		= 4095,
-		.i_AoMaxdata		= 4095,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_dig_in		= 1,
@@ -293,7 +287,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_AiChannelList	= 8,
 		.i_NbrAoChannel		= 4,
 		.i_AiMaxdata		= 4095,
-		.i_AoMaxdata		= 4095,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_dig_in		= 1,
@@ -307,7 +300,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_AiChannelList	= 16,
 		.i_NbrAoChannel		= 4,
 		.i_AiMaxdata		= 65535,
-		.i_AoMaxdata		= 4095,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_dig_in		= 1,
@@ -321,7 +313,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_AiChannelList	= 8,
 		.i_NbrAoChannel		= 4,
 		.i_AiMaxdata		= 65535,
-		.i_AoMaxdata		= 4095,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_dig_in		= 1,
@@ -371,7 +362,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	[BOARD_APCI3500] = {
 		.pc_DriverName		= "apci3500",
 		.i_NbrAoChannel		= 4,
-		.i_AoMaxdata		= 4095,
 		.has_ttl_io		= 1,
 	},
 };
@@ -569,7 +559,7 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 		s->type = COMEDI_SUBD_AO;
 		s->subdev_flags = SDF_WRITEABLE | SDF_GROUND | SDF_COMMON;
 		s->n_chan = board->i_NbrAoChannel;
-		s->maxdata = board->i_AoMaxdata;
+		s->maxdata = 0x0fff;
 		s->range_table = &apci3xxx_ao_range;
 		s->insn_write = i_APCI3XXX_InsnWriteAnalogOutput;
 	} else {

commit 0ed9f25fbc94e8cfe6f5929e6cafa98944d51617
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:12:58 2013 -0700

    staging: comedi: addi_apci_3xxx: refactor 'i_NbrTTLChannel' boardinfo
    
    The boards that have ttl input and output channels always have 24
    channels.
    
    Remove the 'i_NbrTTLChannel' data from the boardinfo and add a bit
    field to indicate that the board 'has_ttl_io'. Use that to conditionally
    initialize the subdevice and open code the s->n_chan value of 24.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 0d20242a81d0..2d4d752261b3 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -84,11 +84,11 @@ struct apci3xxx_boardinfo {
 	int i_NbrAoChannel;
 	int i_AiMaxdata;
 	int i_AoMaxdata;
-	int i_NbrTTLChannel;
 	unsigned char b_AvailableConvertUnit;
 	unsigned int ui_MinAcquisitiontimeNs;
 	unsigned int has_dig_in:1;
 	unsigned int has_dig_out:1;
+	unsigned int has_ttl_io:1;
 };
 
 static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
@@ -98,9 +98,9 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
 		.i_AiMaxdata		= 4095,
-		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
+		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3000_8] = {
 		.pc_DriverName		= "apci3000-8",
@@ -108,9 +108,9 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 8,
 		.i_AiMaxdata		= 4095,
-		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
+		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3000_4] = {
 		.pc_DriverName		= "apci3000-4",
@@ -118,9 +118,9 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 2,
 		.i_AiChannelList	= 4,
 		.i_AiMaxdata		= 4095,
-		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
+		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3006_16] = {
 		.pc_DriverName		= "apci3006-16",
@@ -128,9 +128,9 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
 		.i_AiMaxdata		= 65535,
-		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
+		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3006_8] = {
 		.pc_DriverName		= "apci3006-8",
@@ -138,9 +138,9 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 8,
 		.i_AiMaxdata		= 65535,
-		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
+		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3006_4] = {
 		.pc_DriverName		= "apci3006-4",
@@ -148,9 +148,9 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 2,
 		.i_AiChannelList	= 4,
 		.i_AiMaxdata		= 65535,
-		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
+		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3010_16] = {
 		.pc_DriverName		= "apci3010-16",
@@ -158,11 +158,11 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
 		.i_AiMaxdata		= 4095,
-		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,
+		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3010_8] = {
 		.pc_DriverName		= "apci3010-8",
@@ -170,11 +170,11 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 8,
 		.i_AiMaxdata		= 4095,
-		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,
+		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3010_4] = {
 		.pc_DriverName		= "apci3010-4",
@@ -182,11 +182,11 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 2,
 		.i_AiChannelList	= 4,
 		.i_AiMaxdata		= 4095,
-		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,
+		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3016_16] = {
 		.pc_DriverName		= "apci3016-16",
@@ -194,11 +194,11 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
 		.i_AiMaxdata		= 65535,
-		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,
+		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3016_8] = {
 		.pc_DriverName		= "apci3016-8",
@@ -206,11 +206,11 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 8,
 		.i_AiMaxdata		= 65535,
-		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,
+		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3016_4] = {
 		.pc_DriverName		= "apci3016-4",
@@ -218,11 +218,11 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 2,
 		.i_AiChannelList	= 4,
 		.i_AiMaxdata		= 65535,
-		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,
+		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3100_16_4] = {
 		.pc_DriverName		= "apci3100-16-4",
@@ -232,9 +232,9 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAoChannel		= 4,
 		.i_AiMaxdata		= 4095,
 		.i_AoMaxdata		= 4095,
-		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
+		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3100_8_4] = {
 		.pc_DriverName		= "apci3100-8-4",
@@ -244,9 +244,9 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAoChannel		= 4,
 		.i_AiMaxdata		= 4095,
 		.i_AoMaxdata		= 4095,
-		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
+		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3106_16_4] = {
 		.pc_DriverName		= "apci3106-16-4",
@@ -256,9 +256,9 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAoChannel		= 4,
 		.i_AiMaxdata		= 65535,
 		.i_AoMaxdata		= 4095,
-		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
+		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3106_8_4] = {
 		.pc_DriverName		= "apci3106-8-4",
@@ -268,9 +268,9 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAoChannel		= 4,
 		.i_AiMaxdata		= 65535,
 		.i_AoMaxdata		= 4095,
-		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
+		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3110_16_4] = {
 		.pc_DriverName		= "apci3110-16-4",
@@ -280,11 +280,11 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAoChannel		= 4,
 		.i_AiMaxdata		= 4095,
 		.i_AoMaxdata		= 4095,
-		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,
+		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3110_8_4] = {
 		.pc_DriverName		= "apci3110-8-4",
@@ -294,11 +294,11 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAoChannel		= 4,
 		.i_AiMaxdata		= 4095,
 		.i_AoMaxdata		= 4095,
-		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,
+		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3116_16_4] = {
 		.pc_DriverName		= "apci3116-16-4",
@@ -308,11 +308,11 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAoChannel		= 4,
 		.i_AiMaxdata		= 65535,
 		.i_AoMaxdata		= 4095,
-		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,
+		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3116_8_4] = {
 		.pc_DriverName		= "apci3116-8-4",
@@ -322,11 +322,11 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAoChannel		= 4,
 		.i_AiMaxdata		= 65535,
 		.i_AoMaxdata		= 4095,
-		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.has_dig_in		= 1,
 		.has_dig_out		= 1,
+		.has_ttl_io		= 1,
 	},
 	[BOARD_APCI3003] = {
 		.pc_DriverName		= "apci3003",
@@ -372,7 +372,7 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3500",
 		.i_NbrAoChannel		= 4,
 		.i_AoMaxdata		= 4095,
-		.i_NbrTTLChannel	= 24,
+		.has_ttl_io		= 1,
 	},
 };
 
@@ -609,14 +609,13 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 
 	/*  Allocate and Initialise TTL */
 	s = &dev->subdevices[5];
-	if (board->i_NbrTTLChannel) {
+	if (board->has_ttl_io) {
 		s->type = COMEDI_SUBD_DIO;
 		s->subdev_flags =
 			SDF_WRITEABLE | SDF_READABLE | SDF_GROUND | SDF_COMMON;
-		s->n_chan = board->i_NbrTTLChannel;
+		s->n_chan = 24;
 		s->maxdata = 1;
 		s->io_bits = 0;	/* all bits input */
-		s->len_chanlist = board->i_NbrTTLChannel;
 		s->range_table = &range_digital;
 		s->insn_config = i_APCI3XXX_InsnConfigInitTTLIO;
 		s->insn_bits = i_APCI3XXX_InsnBitsTTLIO;

commit 4aab8bfd1db3455c062c332e56790e6f046284c7
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:12:37 2013 -0700

    staging: comedi: addi_apci_3xxx: refactor 'i_NbrD[io]Channel' boardinfo
    
    The boards that have digital input and output channels always have
    4 inputs and 4 outputs.
    
    Remove the 'i_NbrD[io]Channel' data from the boardinfo and add two
    bit fields to indicate that the board 'has_dig_in' and 'has_dig_out'.
    Use those to conditionally initialize the subdevices and open code
    the s->n_chan value of 4 for both subdevices.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 26ea0e234919..0d20242a81d0 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -84,11 +84,11 @@ struct apci3xxx_boardinfo {
 	int i_NbrAoChannel;
 	int i_AiMaxdata;
 	int i_AoMaxdata;
-	int i_NbrDiChannel;
-	int i_NbrDoChannel;
 	int i_NbrTTLChannel;
 	unsigned char b_AvailableConvertUnit;
 	unsigned int ui_MinAcquisitiontimeNs;
+	unsigned int has_dig_in:1;
+	unsigned int has_dig_out:1;
 };
 
 static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
@@ -158,11 +158,11 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
 		.i_AiMaxdata		= 4095,
-		.i_NbrDiChannel		= 4,
-		.i_NbrDoChannel		= 4,
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
+		.has_dig_in		= 1,
+		.has_dig_out		= 1,
 	},
 	[BOARD_APCI3010_8] = {
 		.pc_DriverName		= "apci3010-8",
@@ -170,11 +170,11 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 8,
 		.i_AiMaxdata		= 4095,
-		.i_NbrDiChannel		= 4,
-		.i_NbrDoChannel		= 4,
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
+		.has_dig_in		= 1,
+		.has_dig_out		= 1,
 	},
 	[BOARD_APCI3010_4] = {
 		.pc_DriverName		= "apci3010-4",
@@ -182,11 +182,11 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 2,
 		.i_AiChannelList	= 4,
 		.i_AiMaxdata		= 4095,
-		.i_NbrDiChannel		= 4,
-		.i_NbrDoChannel		= 4,
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
+		.has_dig_in		= 1,
+		.has_dig_out		= 1,
 	},
 	[BOARD_APCI3016_16] = {
 		.pc_DriverName		= "apci3016-16",
@@ -194,11 +194,11 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
 		.i_AiMaxdata		= 65535,
-		.i_NbrDiChannel		= 4,
-		.i_NbrDoChannel		= 4,
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
+		.has_dig_in		= 1,
+		.has_dig_out		= 1,
 	},
 	[BOARD_APCI3016_8] = {
 		.pc_DriverName		= "apci3016-8",
@@ -206,11 +206,11 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 8,
 		.i_AiMaxdata		= 65535,
-		.i_NbrDiChannel		= 4,
-		.i_NbrDoChannel		= 4,
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
+		.has_dig_in		= 1,
+		.has_dig_out		= 1,
 	},
 	[BOARD_APCI3016_4] = {
 		.pc_DriverName		= "apci3016-4",
@@ -218,11 +218,11 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 2,
 		.i_AiChannelList	= 4,
 		.i_AiMaxdata		= 65535,
-		.i_NbrDiChannel		= 4,
-		.i_NbrDoChannel		= 4,
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
+		.has_dig_in		= 1,
+		.has_dig_out		= 1,
 	},
 	[BOARD_APCI3100_16_4] = {
 		.pc_DriverName		= "apci3100-16-4",
@@ -280,11 +280,11 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAoChannel		= 4,
 		.i_AiMaxdata		= 4095,
 		.i_AoMaxdata		= 4095,
-		.i_NbrDiChannel		= 4,
-		.i_NbrDoChannel		= 4,
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
+		.has_dig_in		= 1,
+		.has_dig_out		= 1,
 	},
 	[BOARD_APCI3110_8_4] = {
 		.pc_DriverName		= "apci3110-8-4",
@@ -294,11 +294,11 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAoChannel		= 4,
 		.i_AiMaxdata		= 4095,
 		.i_AoMaxdata		= 4095,
-		.i_NbrDiChannel		= 4,
-		.i_NbrDoChannel		= 4,
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
+		.has_dig_in		= 1,
+		.has_dig_out		= 1,
 	},
 	[BOARD_APCI3116_16_4] = {
 		.pc_DriverName		= "apci3116-16-4",
@@ -308,11 +308,11 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAoChannel		= 4,
 		.i_AiMaxdata		= 65535,
 		.i_AoMaxdata		= 4095,
-		.i_NbrDiChannel		= 4,
-		.i_NbrDoChannel		= 4,
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
+		.has_dig_in		= 1,
+		.has_dig_out		= 1,
 	},
 	[BOARD_APCI3116_8_4] = {
 		.pc_DriverName		= "apci3116-8-4",
@@ -322,51 +322,51 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 		.i_NbrAoChannel		= 4,
 		.i_AiMaxdata		= 65535,
 		.i_AoMaxdata		= 4095,
-		.i_NbrDiChannel		= 4,
-		.i_NbrDoChannel		= 4,
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
+		.has_dig_in		= 1,
+		.has_dig_out		= 1,
 	},
 	[BOARD_APCI3003] = {
 		.pc_DriverName		= "apci3003",
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 4,
 		.i_AiMaxdata		= 65535,
-		.i_NbrDiChannel		= 4,
-		.i_NbrDoChannel		= 4,
 		.b_AvailableConvertUnit	= 7,
 		.ui_MinAcquisitiontimeNs = 2500,
+		.has_dig_in		= 1,
+		.has_dig_out		= 1,
 	},
 	[BOARD_APCI3002_16] = {
 		.pc_DriverName		= "apci3002-16",
 		.i_NbrAiChannelDiff	= 16,
 		.i_AiChannelList	= 16,
 		.i_AiMaxdata		= 65535,
-		.i_NbrDiChannel		= 4,
-		.i_NbrDoChannel		= 4,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
+		.has_dig_in		= 1,
+		.has_dig_out		= 1,
 	},
 	[BOARD_APCI3002_8] = {
 		.pc_DriverName		= "apci3002-8",
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 8,
 		.i_AiMaxdata		= 65535,
-		.i_NbrDiChannel		= 4,
-		.i_NbrDoChannel		= 4,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
+		.has_dig_in		= 1,
+		.has_dig_out		= 1,
 	},
 	[BOARD_APCI3002_4] = {
 		.pc_DriverName		= "apci3002-4",
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 4,
 		.i_AiMaxdata		= 65535,
-		.i_NbrDiChannel		= 4,
-		.i_NbrDoChannel		= 4,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
+		.has_dig_in		= 1,
+		.has_dig_out		= 1,
 	},
 	[BOARD_APCI3500] = {
 		.pc_DriverName		= "apci3500",
@@ -577,10 +577,10 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 	}
 	/*  Allocate and Initialise DI Subdevice Structures */
 	s = &dev->subdevices[2];
-	if (board->i_NbrDiChannel) {
+	if (board->has_dig_in) {
 		s->type = COMEDI_SUBD_DI;
 		s->subdev_flags = SDF_READABLE | SDF_GROUND | SDF_COMMON;
-		s->n_chan = board->i_NbrDiChannel;
+		s->n_chan = 4;
 		s->maxdata = 1;
 		s->range_table = &range_digital;
 		s->io_bits = 0;	/* all bits input */
@@ -590,11 +590,11 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 	}
 	/*  Allocate and Initialise DO Subdevice Structures */
 	s = &dev->subdevices[3];
-	if (board->i_NbrDoChannel) {
+	if (board->has_dig_out) {
 		s->type = COMEDI_SUBD_DO;
 		s->subdev_flags =
 			SDF_READABLE | SDF_WRITEABLE | SDF_GROUND | SDF_COMMON;
-		s->n_chan = board->i_NbrDoChannel;
+		s->n_chan = 4;
 		s->maxdata = 1;
 		s->range_table = &range_digital;
 		s->io_bits = 0xf;	/* all bits output */

commit 1b5f2f4fa5c276089ed7d7e910657f0e8caaa291
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:12:07 2013 -0700

    staging: comedi: addi_apci_3xxx: remove 'i_IorangeBase1' from boardinfo
    
    This data in the boardinfo is not used. Remove it.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 9be62e902004..26ea0e234919 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -78,7 +78,6 @@ enum apci3xxx_boardid {
 
 struct apci3xxx_boardinfo {
 	const char *pc_DriverName;
-	int i_IorangeBase1;
 	int i_NbrAiChannel;
 	int i_NbrAiChannelDiff;
 	int i_AiChannelList;
@@ -95,7 +94,6 @@ struct apci3xxx_boardinfo {
 static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	[BOARD_APCI3000_16] = {
 		.pc_DriverName		= "apci3000-16",
-		.i_IorangeBase1		= 256,
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
@@ -106,7 +104,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3000_8] = {
 		.pc_DriverName		= "apci3000-8",
-		.i_IorangeBase1		= 256,
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 8,
@@ -117,7 +114,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3000_4] = {
 		.pc_DriverName		= "apci3000-4",
-		.i_IorangeBase1		= 256,
 		.i_NbrAiChannel		= 4,
 		.i_NbrAiChannelDiff	= 2,
 		.i_AiChannelList	= 4,
@@ -128,7 +124,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3006_16] = {
 		.pc_DriverName		= "apci3006-16",
-		.i_IorangeBase1		= 256,
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
@@ -139,7 +134,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3006_8] = {
 		.pc_DriverName		= "apci3006-8",
-		.i_IorangeBase1		= 256,
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 8,
@@ -150,7 +144,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3006_4] = {
 		.pc_DriverName		= "apci3006-4",
-		.i_IorangeBase1		= 256,
 		.i_NbrAiChannel		= 4,
 		.i_NbrAiChannelDiff	= 2,
 		.i_AiChannelList	= 4,
@@ -161,7 +154,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3010_16] = {
 		.pc_DriverName		= "apci3010-16",
-		.i_IorangeBase1		= 256,
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
@@ -174,7 +166,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3010_8] = {
 		.pc_DriverName		= "apci3010-8",
-		.i_IorangeBase1		= 256,
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 8,
@@ -187,7 +178,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3010_4] = {
 		.pc_DriverName		= "apci3010-4",
-		.i_IorangeBase1		= 256,
 		.i_NbrAiChannel		= 4,
 		.i_NbrAiChannelDiff	= 2,
 		.i_AiChannelList	= 4,
@@ -200,7 +190,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3016_16] = {
 		.pc_DriverName		= "apci3016-16",
-		.i_IorangeBase1		= 256,
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
@@ -213,7 +202,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3016_8] = {
 		.pc_DriverName		= "apci3016-8",
-		.i_IorangeBase1		= 256,
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 8,
@@ -226,7 +214,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3016_4] = {
 		.pc_DriverName		= "apci3016-4",
-		.i_IorangeBase1		= 256,
 		.i_NbrAiChannel		= 4,
 		.i_NbrAiChannelDiff	= 2,
 		.i_AiChannelList	= 4,
@@ -239,7 +226,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3100_16_4] = {
 		.pc_DriverName		= "apci3100-16-4",
-		.i_IorangeBase1		= 256,
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
@@ -252,7 +238,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3100_8_4] = {
 		.pc_DriverName		= "apci3100-8-4",
-		.i_IorangeBase1		= 256,
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 8,
@@ -265,7 +250,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3106_16_4] = {
 		.pc_DriverName		= "apci3106-16-4",
-		.i_IorangeBase1		= 256,
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
@@ -278,7 +262,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3106_8_4] = {
 		.pc_DriverName		= "apci3106-8-4",
-		.i_IorangeBase1		= 256,
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 8,
@@ -291,7 +274,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3110_16_4] = {
 		.pc_DriverName		= "apci3110-16-4",
-		.i_IorangeBase1		= 256,
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
@@ -306,7 +288,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3110_8_4] = {
 		.pc_DriverName		= "apci3110-8-4",
-		.i_IorangeBase1		= 256,
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 8,
@@ -321,7 +302,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3116_16_4] = {
 		.pc_DriverName		= "apci3116-16-4",
-		.i_IorangeBase1		= 256,
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
@@ -336,7 +316,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3116_8_4] = {
 		.pc_DriverName		= "apci3116-8-4",
-		.i_IorangeBase1		= 256,
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 8,
@@ -351,7 +330,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3003] = {
 		.pc_DriverName		= "apci3003",
-		.i_IorangeBase1		= 256,
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 4,
 		.i_AiMaxdata		= 65535,
@@ -362,7 +340,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3002_16] = {
 		.pc_DriverName		= "apci3002-16",
-		.i_IorangeBase1		= 256,
 		.i_NbrAiChannelDiff	= 16,
 		.i_AiChannelList	= 16,
 		.i_AiMaxdata		= 65535,
@@ -373,7 +350,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3002_8] = {
 		.pc_DriverName		= "apci3002-8",
-		.i_IorangeBase1		= 256,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 8,
 		.i_AiMaxdata		= 65535,
@@ -384,7 +360,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3002_4] = {
 		.pc_DriverName		= "apci3002-4",
-		.i_IorangeBase1		= 256,
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 4,
 		.i_AiMaxdata		= 65535,
@@ -395,7 +370,6 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3500] = {
 		.pc_DriverName		= "apci3500",
-		.i_IorangeBase1		= 256,
 		.i_NbrAoChannel		= 4,
 		.i_AoMaxdata		= 4095,
 		.i_NbrTTLChannel	= 24,

commit 5c70cbfb3a8ebfaac5f3588840fcbf71c3cc02a1
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:11:46 2013 -0700

    staging: comedi: addi_apci_3xxx: move the copyright info to the driver
    
    Move the copyright information from hwdrv_apci3xxx.c to the actual
    driver, addi_apci_3xxx.c.
    
    Reformat the information to follow the CodingStyle.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index c75711b3f54f..9be62e902004 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -1,3 +1,27 @@
+/*
+ * addi_apci_3xxx.c
+ * Copyright (C) 2004,2005  ADDI-DATA GmbH for the source code of this module.
+ * Project manager: S. Weber
+ *
+ *	ADDI-DATA GmbH
+ *	Dieselstrasse 3
+ *	D-77833 Ottersweier
+ *	Tel: +19(0)7223/9493-0
+ *	Fax: +49(0)7223/9493-92
+ *	http://www.addi-data.com
+ *	info@addi-data.com
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License as published by the
+ * Free Software Foundation; either version 2 of the License, or (at your
+ * option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
+ * more details.
+ */
+
 #include <linux/pci.h>
 #include <linux/interrupt.h>
 #include <linux/sched.h>

commit 225dfd10bf1bcd47d044cd229ed68b040a1362fa
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:11:24 2013 -0700

    staging: comedi: addi_apci_3xxx: remove some unused includes
    
    This driver does not use anything provided by these includes.
    Remove them.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 3cdfa103f0d1..c75711b3f54f 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -3,8 +3,6 @@
 #include <linux/sched.h>
 
 #include "../comedidev.h"
-#include "comedi_fc.h"
-#include "amcc_s5933.h"
 
 static const struct comedi_lrange apci3xxx_ai_range = {
 	8, {

commit 641abdac09f30d3c1bf99f5a938b61336ced7988
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:11:03 2013 -0700

    staging: comedi: addi_apci_3xxx: remove COMEDI_SUBD_TTLIO
    
    This driver abuses the enum comedi_subdevice_type by redefining
    enum 11 - COMEDI_SUBD_SERIAL as COMEDI_SUBD_TTLIO. The subdevice
    that uses COMEDI_SUBD_TTLIO is a TTL Digital Input/Output subdevice.
    
    Remove COMEDI_SUBD_TTLIO and just use COMEDI_SUBD_DIO as the
    subdevice type.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 138091924c8b..3cdfa103f0d1 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -6,10 +6,6 @@
 #include "comedi_fc.h"
 #include "amcc_s5933.h"
 
-#ifndef COMEDI_SUBD_TTLIO
-#define COMEDI_SUBD_TTLIO   11	/* Digital Input Output But TTL */
-#endif
-
 static const struct comedi_lrange apci3xxx_ai_range = {
 	8, {
 		BIP_RANGE(10),
@@ -618,7 +614,7 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 	/*  Allocate and Initialise TTL */
 	s = &dev->subdevices[5];
 	if (board->i_NbrTTLChannel) {
-		s->type = COMEDI_SUBD_TTLIO;
+		s->type = COMEDI_SUBD_DIO;
 		s->subdev_flags =
 			SDF_WRITEABLE | SDF_READABLE | SDF_GROUND | SDF_COMMON;
 		s->n_chan = board->i_NbrTTLChannel;

commit 1867add98e44d4bec01572b4cfd4becd11297e5d
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:10:37 2013 -0700

    staging: comedi: addi_apci_3xxx: introduce a local private data definition
    
    The struct addi_private definition from the addi-data "common" code is
    very bloated. Introduce a local struct apci3xxx_private that just has
    the data needed by this driver.
    
    Add a couple includes that this driver depends on and remove the include
    of "addi-data/addi_common.h" since this driver no longer depends on it.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 247a8f12c47d..138091924c8b 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -1,11 +1,11 @@
 #include <linux/pci.h>
+#include <linux/interrupt.h>
+#include <linux/sched.h>
 
 #include "../comedidev.h"
 #include "comedi_fc.h"
 #include "amcc_s5933.h"
 
-#include "addi-data/addi_common.h"
-
 #ifndef COMEDI_SUBD_TTLIO
 #define COMEDI_SUBD_TTLIO   11	/* Digital Input Output But TTL */
 #endif
@@ -384,12 +384,27 @@ static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	},
 };
 
+struct apci3xxx_private {
+	int iobase;
+	int i_IobaseReserved;
+	void __iomem *dw_AiBase;
+	unsigned char b_AiInitialisation;
+	unsigned int ui_AiNbrofChannels;	/*  how many channels is measured */
+	unsigned int ui_AiReadData[32];
+	unsigned char b_EocEosInterrupt;
+	unsigned int ui_EocEosConversionTime;
+	unsigned char b_EocEosConversionTimeBase;
+	unsigned char b_SingelDiff;
+	struct task_struct *tsk_Current;
+	unsigned int ul_TTLPortConfiguration[10];
+};
+
 #include "addi-data/hwdrv_apci3xxx.c"
 
 static irqreturn_t apci3xxx_irq_handler(int irq, void *d)
 {
 	struct comedi_device *dev = d;
-	struct addi_private *devpriv = dev->private;
+	struct apci3xxx_private *devpriv = dev->private;
 	unsigned int status;
 	int i;
 
@@ -424,7 +439,7 @@ static int apci3xxx_di_insn_bits(struct comedi_device *dev,
 				 struct comedi_insn *insn,
 				 unsigned int *data)
 {
-	struct addi_private *devpriv = dev->private;
+	struct apci3xxx_private *devpriv = dev->private;
 
 	data[1] = inl(devpriv->iobase + 32) & 0xf;
 
@@ -436,7 +451,7 @@ static int apci3xxx_do_insn_bits(struct comedi_device *dev,
 				 struct comedi_insn *insn,
 				 unsigned int *data)
 {
-	struct addi_private *devpriv = dev->private;
+	struct apci3xxx_private *devpriv = dev->private;
 	unsigned int mask = data[0];
 	unsigned int bits = data[1];
 
@@ -455,7 +470,7 @@ static int apci3xxx_do_insn_bits(struct comedi_device *dev,
 
 static int apci3xxx_reset(struct comedi_device *dev)
 {
-	struct addi_private *devpriv = dev->private;
+	struct apci3xxx_private *devpriv = dev->private;
 	unsigned int val;
 	int i;
 
@@ -490,7 +505,7 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 {
 	struct pci_dev *pcidev = comedi_to_pci_dev(dev);
 	const struct apci3xxx_boardinfo *board = NULL;
-	struct addi_private *devpriv;
+	struct apci3xxx_private *devpriv;
 	struct comedi_subdevice *s;
 	int ret, n_subdevices;
 
@@ -629,7 +644,7 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 
 static void apci3xxx_detach(struct comedi_device *dev)
 {
-	struct addi_private *devpriv = dev->private;
+	struct apci3xxx_private *devpriv = dev->private;
 
 	if (devpriv) {
 		if (dev->iobase)

commit e053b2419f5f0cff8ced6a8e39a93d113d9cd86a
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:10:16 2013 -0700

    staging: comedi: addi_apci_3xxx: introduce a private boardinfo definition
    
    The struct addi_board definition from the addi-data "common" code is
    very bloated. Introduce a private struct apci3xxx_boardinfo that just
    has the data needed by this driver.
    
    Move the #include "addi-data/hwdrv_apci3xxx.c" so it will have the new
    struct definition.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 09cbb04e25d4..247a8f12c47d 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -6,8 +6,6 @@
 
 #include "addi-data/addi_common.h"
 
-#include "addi-data/hwdrv_apci3xxx.c"
-
 #ifndef COMEDI_SUBD_TTLIO
 #define COMEDI_SUBD_TTLIO   11	/* Digital Input Output But TTL */
 #endif
@@ -60,7 +58,23 @@ enum apci3xxx_boardid {
 	BOARD_APCI3500,
 };
 
-static const struct addi_board apci3xxx_boardtypes[] = {
+struct apci3xxx_boardinfo {
+	const char *pc_DriverName;
+	int i_IorangeBase1;
+	int i_NbrAiChannel;
+	int i_NbrAiChannelDiff;
+	int i_AiChannelList;
+	int i_NbrAoChannel;
+	int i_AiMaxdata;
+	int i_AoMaxdata;
+	int i_NbrDiChannel;
+	int i_NbrDoChannel;
+	int i_NbrTTLChannel;
+	unsigned char b_AvailableConvertUnit;
+	unsigned int ui_MinAcquisitiontimeNs;
+};
+
+static const struct apci3xxx_boardinfo apci3xxx_boardtypes[] = {
 	[BOARD_APCI3000_16] = {
 		.pc_DriverName		= "apci3000-16",
 		.i_IorangeBase1		= 256,
@@ -370,6 +384,8 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 };
 
+#include "addi-data/hwdrv_apci3xxx.c"
+
 static irqreturn_t apci3xxx_irq_handler(int irq, void *d)
 {
 	struct comedi_device *dev = d;
@@ -473,7 +489,7 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 				unsigned long context)
 {
 	struct pci_dev *pcidev = comedi_to_pci_dev(dev);
-	const struct addi_board *board = NULL;
+	const struct apci3xxx_boardinfo *board = NULL;
 	struct addi_private *devpriv;
 	struct comedi_subdevice *s;
 	int ret, n_subdevices;

commit b9671585a9974abf448fb349083aea655b9235bf
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:09:54 2013 -0700

    staging: comedi: addi_apci_3xxx: remove (*insn_*) callbacks from boardinfo
    
    The same subdevice callbacks are used by all the boards supported by
    this driver. Remove the information from the boardinfo and initialize
    the subdevices directly.
    
    Remove the callback initializations that are always = NULL.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index f7c95ae66c56..09cbb04e25d4 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -71,12 +71,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
-		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
-		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
-		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
-		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
-		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
 	},
 	[BOARD_APCI3000_8] = {
 		.pc_DriverName		= "apci3000-8",
@@ -88,12 +82,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
-		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
-		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
-		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
-		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
-		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
 	},
 	[BOARD_APCI3000_4] = {
 		.pc_DriverName		= "apci3000-4",
@@ -105,12 +93,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
-		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
-		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
-		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
-		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
-		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
 	},
 	[BOARD_APCI3006_16] = {
 		.pc_DriverName		= "apci3006-16",
@@ -122,12 +104,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
-		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
-		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
-		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
-		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
-		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
 	},
 	[BOARD_APCI3006_8] = {
 		.pc_DriverName		= "apci3006-8",
@@ -139,12 +115,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
-		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
-		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
-		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
-		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
-		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
 	},
 	[BOARD_APCI3006_4] = {
 		.pc_DriverName		= "apci3006-4",
@@ -156,12 +126,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
-		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
-		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
-		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
-		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
-		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
 	},
 	[BOARD_APCI3010_16] = {
 		.pc_DriverName		= "apci3010-16",
@@ -175,12 +139,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
-		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
-		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
-		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
-		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
-		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
 	},
 	[BOARD_APCI3010_8] = {
 		.pc_DriverName		= "apci3010-8",
@@ -194,12 +152,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
-		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
-		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
-		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
-		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
-		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
 	},
 	[BOARD_APCI3010_4] = {
 		.pc_DriverName		= "apci3010-4",
@@ -213,12 +165,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
-		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
-		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
-		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
-		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
-		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
 	},
 	[BOARD_APCI3016_16] = {
 		.pc_DriverName		= "apci3016-16",
@@ -232,12 +178,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
-		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
-		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
-		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
-		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
-		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
 	},
 	[BOARD_APCI3016_8] = {
 		.pc_DriverName		= "apci3016-8",
@@ -251,12 +191,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
-		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
-		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
-		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
-		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
-		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
 	},
 	[BOARD_APCI3016_4] = {
 		.pc_DriverName		= "apci3016-4",
@@ -270,12 +204,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
-		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
-		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
-		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
-		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
-		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
 	},
 	[BOARD_APCI3100_16_4] = {
 		.pc_DriverName		= "apci3100-16-4",
@@ -289,13 +217,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
-		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
-		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
-		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
-		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
-		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
-		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
 	},
 	[BOARD_APCI3100_8_4] = {
 		.pc_DriverName		= "apci3100-8-4",
@@ -309,13 +230,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
-		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
-		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
-		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
-		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
-		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
-		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
 	},
 	[BOARD_APCI3106_16_4] = {
 		.pc_DriverName		= "apci3106-16-4",
@@ -329,13 +243,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
-		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
-		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
-		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
-		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
-		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
-		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
 	},
 	[BOARD_APCI3106_8_4] = {
 		.pc_DriverName		= "apci3106-8-4",
@@ -349,13 +256,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
-		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
-		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
-		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
-		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
-		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
-		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
 	},
 	[BOARD_APCI3110_16_4] = {
 		.pc_DriverName		= "apci3110-16-4",
@@ -371,13 +271,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
-		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
-		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
-		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
-		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
-		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
-		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
 	},
 	[BOARD_APCI3110_8_4] = {
 		.pc_DriverName		= "apci3110-8-4",
@@ -393,13 +286,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
-		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
-		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
-		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
-		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
-		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
-		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
 	},
 	[BOARD_APCI3116_16_4] = {
 		.pc_DriverName		= "apci3116-16-4",
@@ -415,13 +301,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
-		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
-		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
-		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
-		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
-		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
-		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
 	},
 	[BOARD_APCI3116_8_4] = {
 		.pc_DriverName		= "apci3116-8-4",
@@ -437,13 +316,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
-		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
-		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
-		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
-		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
-		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
-		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
 	},
 	[BOARD_APCI3003] = {
 		.pc_DriverName		= "apci3003",
@@ -455,8 +327,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrDoChannel		= 4,
 		.b_AvailableConvertUnit	= 7,
 		.ui_MinAcquisitiontimeNs = 2500,
-		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
-		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 	},
 	[BOARD_APCI3002_16] = {
 		.pc_DriverName		= "apci3002-16",
@@ -468,8 +338,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrDoChannel		= 4,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
-		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
-		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 	},
 	[BOARD_APCI3002_8] = {
 		.pc_DriverName		= "apci3002-8",
@@ -481,8 +349,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrDoChannel		= 4,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
-		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
-		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 	},
 	[BOARD_APCI3002_4] = {
 		.pc_DriverName		= "apci3002-4",
@@ -494,8 +360,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrDoChannel		= 4,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
-		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
-		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 	},
 	[BOARD_APCI3500] = {
 		.pc_DriverName		= "apci3500",
@@ -503,11 +367,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrAoChannel		= 4,
 		.i_AoMaxdata		= 4095,
 		.i_NbrTTLChannel	= 24,
-		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
-		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
-		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
-		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
-		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
 	},
 };
 
@@ -674,13 +533,8 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 		/* Set the initialisation flag */
 		devpriv->b_AiInitialisation = 1;
 
-		s->insn_config = board->ai_config;
-		s->insn_read = board->ai_read;
-		s->insn_write = board->ai_write;
-		s->insn_bits = board->ai_bits;
-		s->do_cmdtest = board->ai_cmdtest;
-		s->do_cmd = board->ai_cmd;
-		s->cancel = board->ai_cancel;
+		s->insn_config = i_APCI3XXX_InsnConfigAnalogInput;
+		s->insn_read = i_APCI3XXX_InsnReadAnalogInput;
 
 	} else {
 		s->type = COMEDI_SUBD_UNUSED;
@@ -694,8 +548,7 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 		s->n_chan = board->i_NbrAoChannel;
 		s->maxdata = board->i_AoMaxdata;
 		s->range_table = &apci3xxx_ao_range;
-		s->insn_config = board->ao_config;
-		s->insn_write = board->ao_write;
+		s->insn_write = i_APCI3XXX_InsnWriteAnalogOutput;
 	} else {
 		s->type = COMEDI_SUBD_UNUSED;
 	}
@@ -742,10 +595,10 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 		s->io_bits = 0;	/* all bits input */
 		s->len_chanlist = board->i_NbrTTLChannel;
 		s->range_table = &range_digital;
-		s->insn_config = board->ttl_config;
-		s->insn_bits = board->ttl_bits;
-		s->insn_read = board->ttl_read;
-		s->insn_write = board->ttl_write;
+		s->insn_config = i_APCI3XXX_InsnConfigInitTTLIO;
+		s->insn_bits = i_APCI3XXX_InsnBitsTTLIO;
+		s->insn_read = i_APCI3XXX_InsnReadTTLIO;
+		s->insn_write = i_APCI3XXX_InsnWriteTTLIO;
 	} else {
 		s->type = COMEDI_SUBD_UNUSED;
 	}

commit f57b428c006486c951188354732b469b4b4a1af7
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:09:29 2013 -0700

    staging: comedi: addi_apci_3xxx: remove need for s_EeParameters
    
    The boards supported by this driver do not have an eeprom. Remove the
    need for the devpriv->s_EeParameters values by just using the values
    from the boardinfo directly.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 7897a5129c8d..f7c95ae66c56 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -641,19 +641,6 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 	devpriv->dw_AiBase = pci_ioremap_bar(pcidev, 3);
 	devpriv->i_IobaseReserved = pci_resource_start(pcidev, 3);
 
-	/* Initialize parameters that can be overridden in EEPROM */
-	devpriv->s_EeParameters.i_NbrAiChannel = board->i_NbrAiChannel;
-	devpriv->s_EeParameters.i_NbrAoChannel = board->i_NbrAoChannel;
-	devpriv->s_EeParameters.i_AiMaxdata = board->i_AiMaxdata;
-	devpriv->s_EeParameters.i_AoMaxdata = board->i_AoMaxdata;
-	devpriv->s_EeParameters.i_NbrDiChannel = board->i_NbrDiChannel;
-	devpriv->s_EeParameters.i_NbrDoChannel = board->i_NbrDoChannel;
-	devpriv->s_EeParameters.ui_MinAcquisitiontimeNs =
-						board->ui_MinAcquisitiontimeNs;
-	devpriv->s_EeParameters.ui_MinDelaytimeNs = board->ui_MinDelaytimeNs;
-
-	/* ## */
-
 	if (pcidev->irq > 0) {
 		ret = request_irq(pcidev->irq, apci3xxx_irq_handler,
 				  IRQF_SHARED, dev->board_name, dev);
@@ -668,20 +655,19 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 
 	/*  Allocate and Initialise AI Subdevice Structures */
 	s = &dev->subdevices[0];
-	if (devpriv->s_EeParameters.i_NbrAiChannel ||
-	    board->i_NbrAiChannelDiff) {
+	if (board->i_NbrAiChannel || board->i_NbrAiChannelDiff) {
 		dev->read_subdev = s;
 		s->type = COMEDI_SUBD_AI;
 		s->subdev_flags = SDF_READABLE | SDF_COMMON | SDF_GROUND |
 				  SDF_DIFF;
-		if (devpriv->s_EeParameters.i_NbrAiChannel) {
-			s->n_chan = devpriv->s_EeParameters.i_NbrAiChannel;
+		if (board->i_NbrAiChannel) {
+			s->n_chan = board->i_NbrAiChannel;
 			devpriv->b_SingelDiff = 0;
 		} else {
 			s->n_chan = board->i_NbrAiChannelDiff;
 			devpriv->b_SingelDiff = 1;
 		}
-		s->maxdata = devpriv->s_EeParameters.i_AiMaxdata;
+		s->maxdata = board->i_AiMaxdata;
 		s->len_chanlist = board->i_AiChannelList;
 		s->range_table = &apci3xxx_ai_range;
 
@@ -702,12 +688,11 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 
 	/*  Allocate and Initialise AO Subdevice Structures */
 	s = &dev->subdevices[1];
-	if (devpriv->s_EeParameters.i_NbrAoChannel) {
+	if (board->i_NbrAoChannel) {
 		s->type = COMEDI_SUBD_AO;
 		s->subdev_flags = SDF_WRITEABLE | SDF_GROUND | SDF_COMMON;
-		s->n_chan = devpriv->s_EeParameters.i_NbrAoChannel;
-		s->maxdata = devpriv->s_EeParameters.i_AoMaxdata;
-		s->len_chanlist = devpriv->s_EeParameters.i_NbrAoChannel;
+		s->n_chan = board->i_NbrAoChannel;
+		s->maxdata = board->i_AoMaxdata;
 		s->range_table = &apci3xxx_ao_range;
 		s->insn_config = board->ao_config;
 		s->insn_write = board->ao_write;
@@ -716,12 +701,11 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 	}
 	/*  Allocate and Initialise DI Subdevice Structures */
 	s = &dev->subdevices[2];
-	if (devpriv->s_EeParameters.i_NbrDiChannel) {
+	if (board->i_NbrDiChannel) {
 		s->type = COMEDI_SUBD_DI;
 		s->subdev_flags = SDF_READABLE | SDF_GROUND | SDF_COMMON;
-		s->n_chan = devpriv->s_EeParameters.i_NbrDiChannel;
+		s->n_chan = board->i_NbrDiChannel;
 		s->maxdata = 1;
-		s->len_chanlist = devpriv->s_EeParameters.i_NbrDiChannel;
 		s->range_table = &range_digital;
 		s->io_bits = 0;	/* all bits input */
 		s->insn_bits = apci3xxx_di_insn_bits;
@@ -730,13 +714,12 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 	}
 	/*  Allocate and Initialise DO Subdevice Structures */
 	s = &dev->subdevices[3];
-	if (devpriv->s_EeParameters.i_NbrDoChannel) {
+	if (board->i_NbrDoChannel) {
 		s->type = COMEDI_SUBD_DO;
 		s->subdev_flags =
 			SDF_READABLE | SDF_WRITEABLE | SDF_GROUND | SDF_COMMON;
-		s->n_chan = devpriv->s_EeParameters.i_NbrDoChannel;
+		s->n_chan = board->i_NbrDoChannel;
 		s->maxdata = 1;
-		s->len_chanlist = devpriv->s_EeParameters.i_NbrDoChannel;
 		s->range_table = &range_digital;
 		s->io_bits = 0xf;	/* all bits output */
 		s->insn_bits = apci3xxx_do_insn_bits;

commit 56e18770ae2991d315c4e164fab47171fc74c96a
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:09:07 2013 -0700

    staging: comedi: addi_apci_3xxx: digital output 'maxdata' is always '1'
    
    Digital output subdevices always have a 'maxdata' of '1'. Remove the
    'i_DoMaxData' boardinfo and just open code the value.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 8ba0d701b160..7897a5129c8d 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -172,7 +172,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_AiMaxdata		= 4095,
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
-		.i_DoMaxdata		= 1,
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
@@ -192,7 +191,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_AiMaxdata		= 4095,
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
-		.i_DoMaxdata		= 1,
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
@@ -212,7 +210,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_AiMaxdata		= 4095,
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
-		.i_DoMaxdata		= 1,
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
@@ -232,7 +229,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_AiMaxdata		= 65535,
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
-		.i_DoMaxdata		= 1,
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
@@ -252,7 +248,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_AiMaxdata		= 65535,
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
-		.i_DoMaxdata		= 1,
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
@@ -272,7 +267,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_AiMaxdata		= 65535,
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
-		.i_DoMaxdata		= 1,
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
@@ -374,7 +368,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_AoMaxdata		= 4095,
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
-		.i_DoMaxdata		= 1,
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
@@ -397,7 +390,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_AoMaxdata		= 4095,
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
-		.i_DoMaxdata		= 1,
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
@@ -420,7 +412,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_AoMaxdata		= 4095,
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
-		.i_DoMaxdata		= 1,
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
@@ -443,7 +434,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_AoMaxdata		= 4095,
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
-		.i_DoMaxdata		= 1,
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
@@ -463,7 +453,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_AiMaxdata		= 65535,
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
-		.i_DoMaxdata		= 1,
 		.b_AvailableConvertUnit	= 7,
 		.ui_MinAcquisitiontimeNs = 2500,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
@@ -477,7 +466,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_AiMaxdata		= 65535,
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
-		.i_DoMaxdata		= 1,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
@@ -491,7 +479,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_AiMaxdata		= 65535,
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
-		.i_DoMaxdata		= 1,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
@@ -505,7 +492,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_AiMaxdata		= 65535,
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
-		.i_DoMaxdata		= 1,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
@@ -662,7 +648,6 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 	devpriv->s_EeParameters.i_AoMaxdata = board->i_AoMaxdata;
 	devpriv->s_EeParameters.i_NbrDiChannel = board->i_NbrDiChannel;
 	devpriv->s_EeParameters.i_NbrDoChannel = board->i_NbrDoChannel;
-	devpriv->s_EeParameters.i_DoMaxdata = board->i_DoMaxdata;
 	devpriv->s_EeParameters.ui_MinAcquisitiontimeNs =
 						board->ui_MinAcquisitiontimeNs;
 	devpriv->s_EeParameters.ui_MinDelaytimeNs = board->ui_MinDelaytimeNs;
@@ -750,7 +735,7 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 		s->subdev_flags =
 			SDF_READABLE | SDF_WRITEABLE | SDF_GROUND | SDF_COMMON;
 		s->n_chan = devpriv->s_EeParameters.i_NbrDoChannel;
-		s->maxdata = devpriv->s_EeParameters.i_DoMaxdata;
+		s->maxdata = 1;
 		s->len_chanlist = devpriv->s_EeParameters.i_NbrDoChannel;
 		s->range_table = &range_digital;
 		s->io_bits = 0xf;	/* all bits output */

commit 93c0dc284dff2e2fec320662d8ef01b933096e36
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:08:47 2013 -0700

    staging: comedi: addi_apci_3xxx: boards do not have an eeprom
    
    All of the boards supported by this driver have a PCI 9054 chip
    without an attached eeprom.
    
    Remove the unused support code that reads the eeprom.
    
    Also, remove the unnecessary 'i_PCIEeprom' and 'pc_EepromChip' data
    from the boardinfo.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index dfd8f62351ac..8ba0d701b160 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -6,7 +6,6 @@
 
 #include "addi-data/addi_common.h"
 
-#include "addi-data/addi_eeprom.c"
 #include "addi-data/hwdrv_apci3xxx.c"
 
 #ifndef COMEDI_SUBD_TTLIO
@@ -65,8 +64,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	[BOARD_APCI3000_16] = {
 		.pc_DriverName		= "apci3000-16",
 		.i_IorangeBase1		= 256,
-		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
-		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
@@ -84,8 +81,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	[BOARD_APCI3000_8] = {
 		.pc_DriverName		= "apci3000-8",
 		.i_IorangeBase1		= 256,
-		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
-		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 8,
@@ -103,8 +98,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	[BOARD_APCI3000_4] = {
 		.pc_DriverName		= "apci3000-4",
 		.i_IorangeBase1		= 256,
-		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
-		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 4,
 		.i_NbrAiChannelDiff	= 2,
 		.i_AiChannelList	= 4,
@@ -122,8 +115,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	[BOARD_APCI3006_16] = {
 		.pc_DriverName		= "apci3006-16",
 		.i_IorangeBase1		= 256,
-		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
-		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
@@ -141,8 +132,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	[BOARD_APCI3006_8] = {
 		.pc_DriverName		= "apci3006-8",
 		.i_IorangeBase1		= 256,
-		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
-		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 8,
@@ -160,8 +149,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	[BOARD_APCI3006_4] = {
 		.pc_DriverName		= "apci3006-4",
 		.i_IorangeBase1		= 256,
-		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
-		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 4,
 		.i_NbrAiChannelDiff	= 2,
 		.i_AiChannelList	= 4,
@@ -179,8 +166,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	[BOARD_APCI3010_16] = {
 		.pc_DriverName		= "apci3010-16",
 		.i_IorangeBase1		= 256,
-		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
-		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
@@ -201,8 +186,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	[BOARD_APCI3010_8] = {
 		.pc_DriverName		= "apci3010-8",
 		.i_IorangeBase1		= 256,
-		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
-		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 8,
@@ -223,8 +206,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	[BOARD_APCI3010_4] = {
 		.pc_DriverName		= "apci3010-4",
 		.i_IorangeBase1		= 256,
-		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
-		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 4,
 		.i_NbrAiChannelDiff	= 2,
 		.i_AiChannelList	= 4,
@@ -245,8 +226,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	[BOARD_APCI3016_16] = {
 		.pc_DriverName		= "apci3016-16",
 		.i_IorangeBase1		= 256,
-		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
-		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
@@ -267,8 +246,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	[BOARD_APCI3016_8] = {
 		.pc_DriverName		= "apci3016-8",
 		.i_IorangeBase1		= 256,
-		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
-		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 8,
@@ -289,8 +266,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	[BOARD_APCI3016_4] = {
 		.pc_DriverName		= "apci3016-4",
 		.i_IorangeBase1		= 256,
-		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
-		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 4,
 		.i_NbrAiChannelDiff	= 2,
 		.i_AiChannelList	= 4,
@@ -311,8 +286,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	[BOARD_APCI3100_16_4] = {
 		.pc_DriverName		= "apci3100-16-4",
 		.i_IorangeBase1		= 256,
-		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
-		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
@@ -333,8 +306,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	[BOARD_APCI3100_8_4] = {
 		.pc_DriverName		= "apci3100-8-4",
 		.i_IorangeBase1		= 256,
-		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
-		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 8,
@@ -355,8 +326,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	[BOARD_APCI3106_16_4] = {
 		.pc_DriverName		= "apci3106-16-4",
 		.i_IorangeBase1		= 256,
-		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
-		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
@@ -377,8 +346,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	[BOARD_APCI3106_8_4] = {
 		.pc_DriverName		= "apci3106-8-4",
 		.i_IorangeBase1		= 256,
-		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
-		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 8,
@@ -399,8 +366,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	[BOARD_APCI3110_16_4] = {
 		.pc_DriverName		= "apci3110-16-4",
 		.i_IorangeBase1		= 256,
-		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
-		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
@@ -424,8 +389,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	[BOARD_APCI3110_8_4] = {
 		.pc_DriverName		= "apci3110-8-4",
 		.i_IorangeBase1		= 256,
-		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
-		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 8,
@@ -449,8 +412,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	[BOARD_APCI3116_16_4] = {
 		.pc_DriverName		= "apci3116-16-4",
 		.i_IorangeBase1		= 256,
-		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
-		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 16,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
@@ -474,8 +435,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	[BOARD_APCI3116_8_4] = {
 		.pc_DriverName		= "apci3116-8-4",
 		.i_IorangeBase1		= 256,
-		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
-		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 8,
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 8,
@@ -499,8 +458,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	[BOARD_APCI3003] = {
 		.pc_DriverName		= "apci3003",
 		.i_IorangeBase1		= 256,
-		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
-		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 4,
 		.i_AiMaxdata		= 65535,
@@ -515,8 +472,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	[BOARD_APCI3002_16] = {
 		.pc_DriverName		= "apci3002-16",
 		.i_IorangeBase1		= 256,
-		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
-		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannelDiff	= 16,
 		.i_AiChannelList	= 16,
 		.i_AiMaxdata		= 65535,
@@ -531,8 +486,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	[BOARD_APCI3002_8] = {
 		.pc_DriverName		= "apci3002-8",
 		.i_IorangeBase1		= 256,
-		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
-		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 8,
 		.i_AiMaxdata		= 65535,
@@ -547,8 +500,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	[BOARD_APCI3002_4] = {
 		.pc_DriverName		= "apci3002-4",
 		.i_IorangeBase1		= 256,
-		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
-		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 4,
 		.i_AiMaxdata		= 65535,
@@ -563,8 +514,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	[BOARD_APCI3500] = {
 		.pc_DriverName		= "apci3500",
 		.i_IorangeBase1		= 256,
-		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
-		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAoChannel		= 4,
 		.i_AoMaxdata		= 4095,
 		.i_NbrTTLChannel	= 24,
@@ -643,23 +592,6 @@ static int apci3xxx_do_insn_bits(struct comedi_device *dev,
 	return insn->n;
 }
 
-static int i_ADDIDATA_InsnReadEeprom(struct comedi_device *dev,
-				     struct comedi_subdevice *s,
-				     struct comedi_insn *insn,
-				     unsigned int *data)
-{
-	const struct addi_board *this_board = comedi_board(dev);
-	struct addi_private *devpriv = dev->private;
-	unsigned short w_Address = CR_CHAN(insn->chanspec);
-	unsigned short w_Data;
-
-	w_Data = addi_eeprom_readw(devpriv->i_IobaseAmcc,
-		this_board->pc_EepromChip, 2 * w_Address);
-	data[0] = w_Data;
-
-	return insn->n;
-}
-
 static int apci3xxx_reset(struct comedi_device *dev)
 {
 	struct addi_private *devpriv = dev->private;
@@ -700,7 +632,6 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 	struct addi_private *devpriv;
 	struct comedi_subdevice *s;
 	int ret, n_subdevices;
-	unsigned int dw_Dummy;
 
 	if (context < ARRAY_SIZE(apci3xxx_boardtypes))
 		board = &apci3xxx_boardtypes[context];
@@ -745,23 +676,6 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 			dev->irq = pcidev->irq;
 	}
 
-	/*  Read eepeom and fill addi_board Structure */
-
-	if (board->i_PCIEeprom) {
-		if (!(strcmp(board->pc_EepromChip, "S5920"))) {
-			/*  Set 3 wait stait */
-			if (!(strcmp(dev->board_name, "apci035")))
-				outl(0x80808082, devpriv->i_IobaseAmcc + 0x60);
-			else
-				outl(0x83838383, devpriv->i_IobaseAmcc + 0x60);
-
-			/*  Enable the interrupt for the controller */
-			dw_Dummy = inl(devpriv->i_IobaseAmcc + 0x38);
-			outl(dw_Dummy | 0x2000, devpriv->i_IobaseAmcc + 0x38);
-		}
-		addi_eeprom_read_info(dev, pci_resource_start(pcidev, 0));
-	}
-
 	n_subdevices = 7;
 	ret = comedi_alloc_subdevices(dev, n_subdevices);
 	if (ret)
@@ -870,15 +784,7 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 
 	/* EEPROM */
 	s = &dev->subdevices[6];
-	if (board->i_PCIEeprom) {
-		s->type = COMEDI_SUBD_MEMORY;
-		s->subdev_flags = SDF_READABLE | SDF_INTERNAL;
-		s->n_chan = 256;
-		s->maxdata = 0xffff;
-		s->insn_read = i_ADDIDATA_InsnReadEeprom;
-	} else {
-		s->type = COMEDI_SUBD_UNUSED;
-	}
+	s->type = COMEDI_SUBD_UNUSED;
 
 	apci3xxx_reset(dev);
 	return 0;

commit 178bd8d3a61432ce24399604b13cc756293d1ac8
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:08:14 2013 -0700

    staging: comedi: addi_apci_3xxx: boards do not have a timer
    
    None of the boards supported by this driver have a timer. Remove
    the unnecessary code.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 909e7b674ae6..dfd8f62351ac 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -732,7 +732,6 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 	devpriv->s_EeParameters.i_NbrDiChannel = board->i_NbrDiChannel;
 	devpriv->s_EeParameters.i_NbrDoChannel = board->i_NbrDoChannel;
 	devpriv->s_EeParameters.i_DoMaxdata = board->i_DoMaxdata;
-	devpriv->s_EeParameters.i_Timer = board->i_Timer;
 	devpriv->s_EeParameters.ui_MinAcquisitiontimeNs =
 						board->ui_MinAcquisitiontimeNs;
 	devpriv->s_EeParameters.ui_MinDelaytimeNs = board->ui_MinDelaytimeNs;
@@ -848,21 +847,7 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 
 	/*  Allocate and Initialise Timer Subdevice Structures */
 	s = &dev->subdevices[4];
-	if (devpriv->s_EeParameters.i_Timer) {
-		s->type = COMEDI_SUBD_TIMER;
-		s->subdev_flags = SDF_WRITEABLE | SDF_GROUND | SDF_COMMON;
-		s->n_chan = 1;
-		s->maxdata = 0;
-		s->len_chanlist = 1;
-		s->range_table = &range_digital;
-
-		s->insn_write = board->timer_write;
-		s->insn_read = board->timer_read;
-		s->insn_config = board->timer_config;
-		s->insn_bits = board->timer_bits;
-	} else {
-		s->type = COMEDI_SUBD_UNUSED;
-	}
+	s->type = COMEDI_SUBD_UNUSED;
 
 	/*  Allocate and Initialise TTL */
 	s = &dev->subdevices[5];

commit fe220a444f977398cb7aa166f8e53837df0bcfff
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:07:48 2013 -0700

    staging: comedi: addi_apci_3xxx: driver does not use dma
    
    This driver does not use dma. Remove the unnecessary code.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 0327facc408e..909e7b674ae6 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -732,7 +732,6 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 	devpriv->s_EeParameters.i_NbrDiChannel = board->i_NbrDiChannel;
 	devpriv->s_EeParameters.i_NbrDoChannel = board->i_NbrDoChannel;
 	devpriv->s_EeParameters.i_DoMaxdata = board->i_DoMaxdata;
-	devpriv->s_EeParameters.i_Dma = board->i_Dma;
 	devpriv->s_EeParameters.i_Timer = board->i_Timer;
 	devpriv->s_EeParameters.ui_MinAcquisitiontimeNs =
 						board->ui_MinAcquisitiontimeNs;

commit 2107347327f7bfd47e6af9fe0510a1750f10f884
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:07:25 2013 -0700

    staging: comedi: addi_apci_3xxx: simplify the PCI bar reading
    
    The boards supported by this driver all have an ADDIDATA_9054 eeprom.
    Knowing this we can simplify the code that reads the PCI bars to get
    the iobase address used by the driver.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index b0bde7509123..0327facc408e 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -718,23 +718,10 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 	if (ret)
 		return ret;
 
-	if (!board->pc_EepromChip ||
-	    strcmp(board->pc_EepromChip, ADDIDATA_9054)) {
-		/* board does not have an eeprom or is not ADDIDATA_9054 */
-		if (board->i_IorangeBase1)
-			dev->iobase = pci_resource_start(pcidev, 1);
-		else
-			dev->iobase = pci_resource_start(pcidev, 0);
-
-		devpriv->iobase = dev->iobase;
-		devpriv->i_IobaseAmcc = pci_resource_start(pcidev, 0);
-		devpriv->i_IobaseAddon = pci_resource_start(pcidev, 2);
-	} else {
-		/* board has an ADDIDATA_9054 eeprom */
-		dev->iobase = pci_resource_start(pcidev, 2);
-		devpriv->iobase = pci_resource_start(pcidev, 2);
-		devpriv->dw_AiBase = pci_ioremap_bar(pcidev, 3);
-	}
+	/* board has an ADDIDATA_9054 eeprom */
+	dev->iobase = pci_resource_start(pcidev, 2);
+	devpriv->iobase = pci_resource_start(pcidev, 2);
+	devpriv->dw_AiBase = pci_ioremap_bar(pcidev, 3);
 	devpriv->i_IobaseReserved = pci_resource_start(pcidev, 3);
 
 	/* Initialize parameters that can be overridden in EEPROM */

commit 98a856213efb9fec7a45491170d9b589ce55572d
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:07:04 2013 -0700

    staging: comedi: addi_apci_3xxx: absorb the private comedi_lrange tables
    
    All the boards supported by this driver have the same private
    analog input and output ranges.  Absorb the comedi_lrange tables
    from hwdrv_apci3xxx.c directly into the driver. For aesthetic
    reasons, rename the tables so they have namespace associated
    with the driver.
    
    Remove the 'pr_AiRangelist' and 'pr_AoRangelist' data from the
    boardinfo and use the range tables directly when initializing
    the subdevices.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 67be74ed52ad..b0bde7509123 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -13,6 +13,26 @@
 #define COMEDI_SUBD_TTLIO   11	/* Digital Input Output But TTL */
 #endif
 
+static const struct comedi_lrange apci3xxx_ai_range = {
+	8, {
+		BIP_RANGE(10),
+		BIP_RANGE(5),
+		BIP_RANGE(2),
+		BIP_RANGE(1),
+		UNI_RANGE(10),
+		UNI_RANGE(5),
+		UNI_RANGE(2),
+		UNI_RANGE(1)
+	}
+};
+
+static const struct comedi_lrange apci3xxx_ao_range = {
+	2, {
+		BIP_RANGE(10),
+		UNI_RANGE(10)
+	}
+};
+
 enum apci3xxx_boardid {
 	BOARD_APCI3000_16,
 	BOARD_APCI3000_8,
@@ -51,7 +71,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
 		.i_AiMaxdata		= 4095,
-		.pr_AiRangelist		= &range_apci3XXX_ai,
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
@@ -71,7 +90,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 8,
 		.i_AiMaxdata		= 4095,
-		.pr_AiRangelist		= &range_apci3XXX_ai,
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
@@ -91,7 +109,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 2,
 		.i_AiChannelList	= 4,
 		.i_AiMaxdata		= 4095,
-		.pr_AiRangelist		= &range_apci3XXX_ai,
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
@@ -111,7 +128,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
 		.i_AiMaxdata		= 65535,
-		.pr_AiRangelist		= &range_apci3XXX_ai,
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
@@ -131,7 +147,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 8,
 		.i_AiMaxdata		= 65535,
-		.pr_AiRangelist		= &range_apci3XXX_ai,
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
@@ -151,7 +166,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 2,
 		.i_AiChannelList	= 4,
 		.i_AiMaxdata		= 65535,
-		.pr_AiRangelist		= &range_apci3XXX_ai,
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
@@ -171,7 +185,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
 		.i_AiMaxdata		= 4095,
-		.pr_AiRangelist		= &range_apci3XXX_ai,
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
 		.i_DoMaxdata		= 1,
@@ -194,7 +207,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 8,
 		.i_AiMaxdata		= 4095,
-		.pr_AiRangelist		= &range_apci3XXX_ai,
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
 		.i_DoMaxdata		= 1,
@@ -217,7 +229,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 2,
 		.i_AiChannelList	= 4,
 		.i_AiMaxdata		= 4095,
-		.pr_AiRangelist		= &range_apci3XXX_ai,
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
 		.i_DoMaxdata		= 1,
@@ -240,7 +251,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 16,
 		.i_AiMaxdata		= 65535,
-		.pr_AiRangelist		= &range_apci3XXX_ai,
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
 		.i_DoMaxdata		= 1,
@@ -263,7 +273,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 8,
 		.i_AiMaxdata		= 65535,
-		.pr_AiRangelist		= &range_apci3XXX_ai,
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
 		.i_DoMaxdata		= 1,
@@ -286,7 +295,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 2,
 		.i_AiChannelList	= 4,
 		.i_AiMaxdata		= 65535,
-		.pr_AiRangelist		= &range_apci3XXX_ai,
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
 		.i_DoMaxdata		= 1,
@@ -311,8 +319,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrAoChannel		= 4,
 		.i_AiMaxdata		= 4095,
 		.i_AoMaxdata		= 4095,
-		.pr_AiRangelist		= &range_apci3XXX_ai,
-		.pr_AoRangelist		= &range_apci3XXX_ao,
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
@@ -335,8 +341,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrAoChannel		= 4,
 		.i_AiMaxdata		= 4095,
 		.i_AoMaxdata		= 4095,
-		.pr_AiRangelist		= &range_apci3XXX_ai,
-		.pr_AoRangelist		= &range_apci3XXX_ao,
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
@@ -359,8 +363,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrAoChannel		= 4,
 		.i_AiMaxdata		= 65535,
 		.i_AoMaxdata		= 4095,
-		.pr_AiRangelist		= &range_apci3XXX_ai,
-		.pr_AoRangelist		= &range_apci3XXX_ao,
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
@@ -383,8 +385,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrAoChannel		= 4,
 		.i_AiMaxdata		= 65535,
 		.i_AoMaxdata		= 4095,
-		.pr_AiRangelist		= &range_apci3XXX_ai,
-		.pr_AoRangelist		= &range_apci3XXX_ao,
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
@@ -407,8 +407,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrAoChannel		= 4,
 		.i_AiMaxdata		= 4095,
 		.i_AoMaxdata		= 4095,
-		.pr_AiRangelist		= &range_apci3XXX_ai,
-		.pr_AoRangelist		= &range_apci3XXX_ao,
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
 		.i_DoMaxdata		= 1,
@@ -434,8 +432,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrAoChannel		= 4,
 		.i_AiMaxdata		= 4095,
 		.i_AoMaxdata		= 4095,
-		.pr_AiRangelist		= &range_apci3XXX_ai,
-		.pr_AoRangelist		= &range_apci3XXX_ao,
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
 		.i_DoMaxdata		= 1,
@@ -461,8 +457,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrAoChannel		= 4,
 		.i_AiMaxdata		= 65535,
 		.i_AoMaxdata		= 4095,
-		.pr_AiRangelist		= &range_apci3XXX_ai,
-		.pr_AoRangelist		= &range_apci3XXX_ao,
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
 		.i_DoMaxdata		= 1,
@@ -488,8 +482,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrAoChannel		= 4,
 		.i_AiMaxdata		= 65535,
 		.i_AoMaxdata		= 4095,
-		.pr_AiRangelist		= &range_apci3XXX_ai,
-		.pr_AoRangelist		= &range_apci3XXX_ao,
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
 		.i_DoMaxdata		= 1,
@@ -512,7 +504,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 4,
 		.i_AiMaxdata		= 65535,
-		.pr_AiRangelist		= &range_apci3XXX_ai,
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
 		.i_DoMaxdata		= 1,
@@ -529,7 +520,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 16,
 		.i_AiChannelList	= 16,
 		.i_AiMaxdata		= 65535,
-		.pr_AiRangelist		= &range_apci3XXX_ai,
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
 		.i_DoMaxdata		= 1,
@@ -546,7 +536,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 8,
 		.i_AiChannelList	= 8,
 		.i_AiMaxdata		= 65535,
-		.pr_AiRangelist		= &range_apci3XXX_ai,
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
 		.i_DoMaxdata		= 1,
@@ -563,7 +552,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrAiChannelDiff	= 4,
 		.i_AiChannelList	= 4,
 		.i_AiMaxdata		= 65535,
-		.pr_AiRangelist		= &range_apci3XXX_ai,
 		.i_NbrDiChannel		= 4,
 		.i_NbrDoChannel		= 4,
 		.i_DoMaxdata		= 1,
@@ -579,7 +567,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAoChannel		= 4,
 		.i_AoMaxdata		= 4095,
-		.pr_AoRangelist		= &range_apci3XXX_ao,
 		.i_NbrTTLChannel	= 24,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
@@ -812,7 +799,7 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 		}
 		s->maxdata = devpriv->s_EeParameters.i_AiMaxdata;
 		s->len_chanlist = board->i_AiChannelList;
-		s->range_table = board->pr_AiRangelist;
+		s->range_table = &apci3xxx_ai_range;
 
 		/* Set the initialisation flag */
 		devpriv->b_AiInitialisation = 1;
@@ -837,7 +824,7 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 		s->n_chan = devpriv->s_EeParameters.i_NbrAoChannel;
 		s->maxdata = devpriv->s_EeParameters.i_AoMaxdata;
 		s->len_chanlist = devpriv->s_EeParameters.i_NbrAoChannel;
-		s->range_table = board->pr_AoRangelist;
+		s->range_table = &apci3xxx_ao_range;
 		s->insn_config = board->ao_config;
 		s->insn_write = board->ao_write;
 	} else {

commit 6c5b0fff8eb76913f0d38e72f4e68e19ea91de04
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:06:36 2013 -0700

    staging: comedi: addi_apci_3xxx: absorb v_APCI3XXX_Interrupt()
    
    All the boards supported by this driver use the same 'interrupt'
    callback in the boardinfo. Absorb the interrupt function from
    hwdrv_apci3xxx.c directly into the driver. Rename the CamelCase
    function to apci3xxx_irq_handler().
    
    Remove v_ADDI_Interrupt(), which indirectly called the interrupt
    function, and use apci3xxx_irq_handler instead when requesting
    the irq. Remove the 'interrupt' callback from the boardinfo.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index ac59359720ae..67be74ed52ad 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -55,7 +55,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
-		.interrupt		= v_APCI3XXX_Interrupt,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
@@ -76,7 +75,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
-		.interrupt		= v_APCI3XXX_Interrupt,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
@@ -97,7 +95,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
-		.interrupt		= v_APCI3XXX_Interrupt,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
@@ -118,7 +115,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
-		.interrupt		= v_APCI3XXX_Interrupt,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
@@ -139,7 +135,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
-		.interrupt		= v_APCI3XXX_Interrupt,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
@@ -160,7 +155,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
-		.interrupt		= v_APCI3XXX_Interrupt,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
@@ -184,7 +178,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
-		.interrupt		= v_APCI3XXX_Interrupt,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
@@ -208,7 +201,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
-		.interrupt		= v_APCI3XXX_Interrupt,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
@@ -232,7 +224,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
-		.interrupt		= v_APCI3XXX_Interrupt,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
@@ -256,7 +247,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
-		.interrupt		= v_APCI3XXX_Interrupt,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
@@ -280,7 +270,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
-		.interrupt		= v_APCI3XXX_Interrupt,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
@@ -304,7 +293,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
-		.interrupt		= v_APCI3XXX_Interrupt,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
@@ -328,7 +316,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
-		.interrupt		= v_APCI3XXX_Interrupt,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
@@ -353,7 +340,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
-		.interrupt		= v_APCI3XXX_Interrupt,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
@@ -378,7 +364,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
-		.interrupt		= v_APCI3XXX_Interrupt,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
@@ -403,7 +388,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
-		.interrupt		= v_APCI3XXX_Interrupt,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
@@ -431,7 +415,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
-		.interrupt		= v_APCI3XXX_Interrupt,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
@@ -459,7 +442,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
-		.interrupt		= v_APCI3XXX_Interrupt,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
@@ -487,7 +469,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
-		.interrupt		= v_APCI3XXX_Interrupt,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
@@ -515,7 +496,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_NbrTTLChannel	= 24,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
-		.interrupt		= v_APCI3XXX_Interrupt,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
@@ -538,7 +518,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_DoMaxdata		= 1,
 		.b_AvailableConvertUnit	= 7,
 		.ui_MinAcquisitiontimeNs = 2500,
-		.interrupt		= v_APCI3XXX_Interrupt,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 	},
@@ -556,7 +535,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_DoMaxdata		= 1,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
-		.interrupt		= v_APCI3XXX_Interrupt,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 	},
@@ -574,7 +552,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_DoMaxdata		= 1,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
-		.interrupt		= v_APCI3XXX_Interrupt,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 	},
@@ -592,7 +569,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_DoMaxdata		= 1,
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
-		.interrupt		= v_APCI3XXX_Interrupt,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 	},
@@ -605,7 +581,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_AoMaxdata		= 4095,
 		.pr_AoRangelist		= &range_apci3XXX_ao,
 		.i_NbrTTLChannel	= 24,
-		.interrupt		= v_APCI3XXX_Interrupt,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
@@ -614,6 +589,39 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 };
 
+static irqreturn_t apci3xxx_irq_handler(int irq, void *d)
+{
+	struct comedi_device *dev = d;
+	struct addi_private *devpriv = dev->private;
+	unsigned int status;
+	int i;
+
+	/* Test if interrupt occur */
+	status = readl(devpriv->dw_AiBase + 16);
+	if ((status & 0x2) == 0x2) {
+		/* Reset the interrupt */
+		writel(status, devpriv->dw_AiBase + 16);
+
+		/* Test if interrupt enabled */
+		if (devpriv->b_EocEosInterrupt == 1) {
+			/* Read all analog inputs value */
+			for (i = 0; i < devpriv->ui_AiNbrofChannels; i++) {
+				unsigned int val;
+
+				val = readl(devpriv->dw_AiBase + 28);
+				devpriv->ui_AiReadData[i] = val;
+			}
+
+			/* Set the interrupt flag */
+			devpriv->b_EocEosInterrupt = 2;
+
+			/* Send a signal to from kernel to user space */
+			send_sig(SIGIO, devpriv->tsk_Current, 0);
+		}
+	}
+	return IRQ_RETVAL(1);
+}
+
 static int apci3xxx_di_insn_bits(struct comedi_device *dev,
 				 struct comedi_subdevice *s,
 				 struct comedi_insn *insn,
@@ -665,15 +673,6 @@ static int i_ADDIDATA_InsnReadEeprom(struct comedi_device *dev,
 	return insn->n;
 }
 
-static irqreturn_t v_ADDI_Interrupt(int irq, void *d)
-{
-	struct comedi_device *dev = d;
-	const struct addi_board *this_board = comedi_board(dev);
-
-	this_board->interrupt(irq, d);
-	return IRQ_RETVAL(1);
-}
-
 static int apci3xxx_reset(struct comedi_device *dev)
 {
 	struct addi_private *devpriv = dev->private;
@@ -768,8 +767,8 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 	/* ## */
 
 	if (pcidev->irq > 0) {
-		ret = request_irq(pcidev->irq, v_ADDI_Interrupt, IRQF_SHARED,
-				  dev->board_name, dev);
+		ret = request_irq(pcidev->irq, apci3xxx_irq_handler,
+				  IRQF_SHARED, dev->board_name, dev);
 		if (ret == 0)
 			dev->irq = pcidev->irq;
 	}

commit ae57b69639bcbd653821f7a4a14b87f6fa6743c0
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:05:42 2013 -0700

    staging: comedi: addi_apci_3xxx: absorb apci3xxx_di_insn_bits()
    
    All the boards supported by this driver that have digital inputs use
    the same 'di_bits' callback in the boardinfo. Absorb the function from
    hwdrv_apci3xxx.c directly into the driver.
    
    Remove the 'di_bits' callback from the boardinfo and use the function
    directly to set the subdevice (*insn_bits).
    
    None of the boards supported by this driver have a 'di_config', 'di_read',
    or 'io_write' callback. Remove the unnecessary setting of the subdevice
    callbacks.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index f2ebce03a729..ac59359720ae 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -187,7 +187,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.interrupt		= v_APCI3XXX_Interrupt,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.di_bits		= apci3xxx_di_insn_bits,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
@@ -212,7 +211,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.interrupt		= v_APCI3XXX_Interrupt,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.di_bits		= apci3xxx_di_insn_bits,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
@@ -237,7 +235,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.interrupt		= v_APCI3XXX_Interrupt,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.di_bits		= apci3xxx_di_insn_bits,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
@@ -262,7 +259,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.interrupt		= v_APCI3XXX_Interrupt,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.di_bits		= apci3xxx_di_insn_bits,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
@@ -287,7 +283,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.interrupt		= v_APCI3XXX_Interrupt,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.di_bits		= apci3xxx_di_insn_bits,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
@@ -312,7 +307,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.interrupt		= v_APCI3XXX_Interrupt,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.di_bits		= apci3xxx_di_insn_bits,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
@@ -441,7 +435,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
-		.di_bits		= apci3xxx_di_insn_bits,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
@@ -470,7 +463,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
-		.di_bits		= apci3xxx_di_insn_bits,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
@@ -499,7 +491,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
-		.di_bits		= apci3xxx_di_insn_bits,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
@@ -528,7 +519,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
-		.di_bits		= apci3xxx_di_insn_bits,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
@@ -551,7 +541,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.interrupt		= v_APCI3XXX_Interrupt,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.di_bits		= apci3xxx_di_insn_bits,
 	},
 	[BOARD_APCI3002_16] = {
 		.pc_DriverName		= "apci3002-16",
@@ -570,7 +559,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.interrupt		= v_APCI3XXX_Interrupt,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.di_bits		= apci3xxx_di_insn_bits,
 	},
 	[BOARD_APCI3002_8] = {
 		.pc_DriverName		= "apci3002-8",
@@ -589,7 +577,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.interrupt		= v_APCI3XXX_Interrupt,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.di_bits		= apci3xxx_di_insn_bits,
 	},
 	[BOARD_APCI3002_4] = {
 		.pc_DriverName		= "apci3002-4",
@@ -608,7 +595,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.interrupt		= v_APCI3XXX_Interrupt,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.di_bits		= apci3xxx_di_insn_bits,
 	},
 	[BOARD_APCI3500] = {
 		.pc_DriverName		= "apci3500",
@@ -628,6 +614,18 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 };
 
+static int apci3xxx_di_insn_bits(struct comedi_device *dev,
+				 struct comedi_subdevice *s,
+				 struct comedi_insn *insn,
+				 unsigned int *data)
+{
+	struct addi_private *devpriv = dev->private;
+
+	data[1] = inl(devpriv->iobase + 32) & 0xf;
+
+	return insn->n;
+}
+
 static int apci3xxx_do_insn_bits(struct comedi_device *dev,
 				 struct comedi_subdevice *s,
 				 struct comedi_insn *insn,
@@ -856,10 +854,7 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 		s->len_chanlist = devpriv->s_EeParameters.i_NbrDiChannel;
 		s->range_table = &range_digital;
 		s->io_bits = 0;	/* all bits input */
-		s->insn_config = board->di_config;
-		s->insn_read = board->di_read;
-		s->insn_write = board->di_write;
-		s->insn_bits = board->di_bits;
+		s->insn_bits = apci3xxx_di_insn_bits;
 	} else {
 		s->type = COMEDI_SUBD_UNUSED;
 	}

commit c3d8605fca03adb70f712512b3df0e0311ac9b61
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:05:13 2013 -0700

    staging: comedi: addi_apci_3xxx: absorb apci3xxx_do_insn_bits()
    
    All the boards supported by this driver that have digital outputs use
    the same 'do_bits' callback in the boardinfo. Absorb the function from
    hwdrv_apci3xxx.c directly into the driver.
    
    Remove the 'do_bits' callback from the boardinfo and use the function
    directly to set the subdevice (*insn_bits).
    
    None of the boards supported by this driver have a 'do_config', 'do_write',
    or 'do_read' callback. Remove the unnecessary setting of the subdevice
    callbacks.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 7ec41326643a..f2ebce03a729 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -188,7 +188,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
-		.do_bits		= apci3xxx_do_insn_bits,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
@@ -214,7 +213,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
-		.do_bits		= apci3xxx_do_insn_bits,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
@@ -240,7 +238,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
-		.do_bits		= apci3xxx_do_insn_bits,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
@@ -266,7 +263,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
-		.do_bits		= apci3xxx_do_insn_bits,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
@@ -292,7 +288,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
-		.do_bits		= apci3xxx_do_insn_bits,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
@@ -318,7 +313,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
-		.do_bits		= apci3xxx_do_insn_bits,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
@@ -448,7 +442,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
 		.di_bits		= apci3xxx_di_insn_bits,
-		.do_bits		= apci3xxx_do_insn_bits,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
@@ -478,7 +471,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
 		.di_bits		= apci3xxx_di_insn_bits,
-		.do_bits		= apci3xxx_do_insn_bits,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
@@ -508,7 +500,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
 		.di_bits		= apci3xxx_di_insn_bits,
-		.do_bits		= apci3xxx_do_insn_bits,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
@@ -538,7 +529,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
 		.di_bits		= apci3xxx_di_insn_bits,
-		.do_bits		= apci3xxx_do_insn_bits,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
@@ -562,7 +552,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
-		.do_bits		= apci3xxx_do_insn_bits,
 	},
 	[BOARD_APCI3002_16] = {
 		.pc_DriverName		= "apci3002-16",
@@ -582,7 +571,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
-		.do_bits		= apci3xxx_do_insn_bits,
 	},
 	[BOARD_APCI3002_8] = {
 		.pc_DriverName		= "apci3002-8",
@@ -602,7 +590,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
-		.do_bits		= apci3xxx_do_insn_bits,
 	},
 	[BOARD_APCI3002_4] = {
 		.pc_DriverName		= "apci3002-4",
@@ -622,7 +609,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
-		.do_bits		= apci3xxx_do_insn_bits,
 	},
 	[BOARD_APCI3500] = {
 		.pc_DriverName		= "apci3500",
@@ -642,6 +628,28 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 };
 
+static int apci3xxx_do_insn_bits(struct comedi_device *dev,
+				 struct comedi_subdevice *s,
+				 struct comedi_insn *insn,
+				 unsigned int *data)
+{
+	struct addi_private *devpriv = dev->private;
+	unsigned int mask = data[0];
+	unsigned int bits = data[1];
+
+	s->state = inl(devpriv->iobase + 48) & 0xf;
+	if (mask) {
+		s->state &= ~mask;
+		s->state |= (bits & mask);
+
+		outl(s->state, devpriv->iobase + 48);
+	}
+
+	data[1] = s->state;
+
+	return insn->n;
+}
+
 static int i_ADDIDATA_InsnReadEeprom(struct comedi_device *dev,
 				     struct comedi_subdevice *s,
 				     struct comedi_insn *insn,
@@ -866,12 +874,7 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 		s->len_chanlist = devpriv->s_EeParameters.i_NbrDoChannel;
 		s->range_table = &range_digital;
 		s->io_bits = 0xf;	/* all bits output */
-
-		/* insn_config - for digital output memory */
-		s->insn_config = board->do_config;
-		s->insn_write = board->do_write;
-		s->insn_bits = board->do_bits;
-		s->insn_read = board->do_read;
+		s->insn_bits = apci3xxx_do_insn_bits;
 	} else {
 		s->type = COMEDI_SUBD_UNUSED;
 	}

commit 5e72c7a50709e60663217704b30501bf34afa448
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:04:45 2013 -0700

    staging: comedi: addi_apci_3xxx: absorb apci3xxx_reset()
    
    All the boards supported by this driver use the same 'reset' callback
    in the boardinfo. Absorb the reset function, apci3xxx_reset(), from
    hwdrv_apci3xxx.c directly into the driver.
    
    Remove i_ADDI_Reset(), which indirectly called the reset function, and
    just call apci3xx_reset() directly. Remove the 'reset' callback from
    the boardinfo.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index dd26fd0eee57..7ec41326643a 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -56,7 +56,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
@@ -78,7 +77,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
@@ -100,7 +98,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
@@ -122,7 +119,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
@@ -144,7 +140,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
@@ -166,7 +161,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
@@ -191,7 +185,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
@@ -218,7 +211,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
@@ -245,7 +237,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
@@ -272,7 +263,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
@@ -299,7 +289,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
@@ -326,7 +315,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
@@ -353,7 +341,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
@@ -379,7 +366,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
@@ -405,7 +391,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
@@ -431,7 +416,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
@@ -460,7 +444,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
@@ -491,7 +474,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
@@ -522,7 +504,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
@@ -553,7 +534,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
@@ -579,7 +559,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 7,
 		.ui_MinAcquisitiontimeNs = 2500,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
@@ -600,7 +579,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
@@ -621,7 +599,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
@@ -642,7 +619,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
@@ -658,7 +634,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.pr_AoRangelist		= &range_apci3XXX_ao,
 		.i_NbrTTLChannel	= 24,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= apci3xxx_reset,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
@@ -693,11 +668,35 @@ static irqreturn_t v_ADDI_Interrupt(int irq, void *d)
 	return IRQ_RETVAL(1);
 }
 
-static int i_ADDI_Reset(struct comedi_device *dev)
+static int apci3xxx_reset(struct comedi_device *dev)
 {
-	const struct addi_board *this_board = comedi_board(dev);
+	struct addi_private *devpriv = dev->private;
+	unsigned int val;
+	int i;
+
+	/* Disable the interrupt */
+	disable_irq(dev->irq);
+
+	/* Reset the interrupt flag */
+	devpriv->b_EocEosInterrupt = 0;
+
+	/* Clear the start command */
+	writel(0, devpriv->dw_AiBase + 8);
+
+	/* Reset the interrupt flags */
+	val = readl(devpriv->dw_AiBase + 16);
+	writel(val, devpriv->dw_AiBase + 16);
+
+	/* clear the EOS */
+	readl(devpriv->dw_AiBase + 20);
+
+	/* Clear the FIFO */
+	for (i = 0; i < 16; i++)
+		val = readl(devpriv->dw_AiBase + 28);
+
+	/* Enable the interrupt */
+	enable_irq(dev->irq);
 
-	this_board->reset(dev);
 	return 0;
 }
 
@@ -926,7 +925,7 @@ static int apci3xxx_auto_attach(struct comedi_device *dev,
 		s->type = COMEDI_SUBD_UNUSED;
 	}
 
-	i_ADDI_Reset(dev);
+	apci3xxx_reset(dev);
 	return 0;
 }
 
@@ -936,7 +935,7 @@ static void apci3xxx_detach(struct comedi_device *dev)
 
 	if (devpriv) {
 		if (dev->iobase)
-			i_ADDI_Reset(dev);
+			apci3xxx_reset(dev);
 		if (dev->irq)
 			free_irq(dev->irq, dev);
 		if (devpriv->dw_AiBase)

commit 98d3385dd68381dd2738a825f8513366c44018b2
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:04:24 2013 -0700

    staging: comedi: addi_apci_3xxx: separate from addi_common.c
    
    This driver currently uses the addi-data "common" code and contains
    a lot of bloat.
    
    Copy the code in addi_common.c to this driver and remove the #include
    that caused it to be compiled with the driver. This will allow removing
    the bloat.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index d8c892e01154..dd26fd0eee57 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -8,7 +8,10 @@
 
 #include "addi-data/addi_eeprom.c"
 #include "addi-data/hwdrv_apci3xxx.c"
-#include "addi-data/addi_common.c"
+
+#ifndef COMEDI_SUBD_TTLIO
+#define COMEDI_SUBD_TTLIO   11	/* Digital Input Output But TTL */
+#endif
 
 enum apci3xxx_boardid {
 	BOARD_APCI3000_16,
@@ -664,25 +667,289 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 };
 
+static int i_ADDIDATA_InsnReadEeprom(struct comedi_device *dev,
+				     struct comedi_subdevice *s,
+				     struct comedi_insn *insn,
+				     unsigned int *data)
+{
+	const struct addi_board *this_board = comedi_board(dev);
+	struct addi_private *devpriv = dev->private;
+	unsigned short w_Address = CR_CHAN(insn->chanspec);
+	unsigned short w_Data;
+
+	w_Data = addi_eeprom_readw(devpriv->i_IobaseAmcc,
+		this_board->pc_EepromChip, 2 * w_Address);
+	data[0] = w_Data;
+
+	return insn->n;
+}
+
+static irqreturn_t v_ADDI_Interrupt(int irq, void *d)
+{
+	struct comedi_device *dev = d;
+	const struct addi_board *this_board = comedi_board(dev);
+
+	this_board->interrupt(irq, d);
+	return IRQ_RETVAL(1);
+}
+
+static int i_ADDI_Reset(struct comedi_device *dev)
+{
+	const struct addi_board *this_board = comedi_board(dev);
+
+	this_board->reset(dev);
+	return 0;
+}
+
 static int apci3xxx_auto_attach(struct comedi_device *dev,
 				unsigned long context)
 {
+	struct pci_dev *pcidev = comedi_to_pci_dev(dev);
 	const struct addi_board *board = NULL;
+	struct addi_private *devpriv;
+	struct comedi_subdevice *s;
+	int ret, n_subdevices;
+	unsigned int dw_Dummy;
 
 	if (context < ARRAY_SIZE(apci3xxx_boardtypes))
 		board = &apci3xxx_boardtypes[context];
 	if (!board)
 		return -ENODEV;
 	dev->board_ptr = board;
+	dev->board_name = board->pc_DriverName;
+
+	devpriv = kzalloc(sizeof(*devpriv), GFP_KERNEL);
+	if (!devpriv)
+		return -ENOMEM;
+	dev->private = devpriv;
+
+	ret = comedi_pci_enable(dev);
+	if (ret)
+		return ret;
+
+	if (!board->pc_EepromChip ||
+	    strcmp(board->pc_EepromChip, ADDIDATA_9054)) {
+		/* board does not have an eeprom or is not ADDIDATA_9054 */
+		if (board->i_IorangeBase1)
+			dev->iobase = pci_resource_start(pcidev, 1);
+		else
+			dev->iobase = pci_resource_start(pcidev, 0);
+
+		devpriv->iobase = dev->iobase;
+		devpriv->i_IobaseAmcc = pci_resource_start(pcidev, 0);
+		devpriv->i_IobaseAddon = pci_resource_start(pcidev, 2);
+	} else {
+		/* board has an ADDIDATA_9054 eeprom */
+		dev->iobase = pci_resource_start(pcidev, 2);
+		devpriv->iobase = pci_resource_start(pcidev, 2);
+		devpriv->dw_AiBase = pci_ioremap_bar(pcidev, 3);
+	}
+	devpriv->i_IobaseReserved = pci_resource_start(pcidev, 3);
+
+	/* Initialize parameters that can be overridden in EEPROM */
+	devpriv->s_EeParameters.i_NbrAiChannel = board->i_NbrAiChannel;
+	devpriv->s_EeParameters.i_NbrAoChannel = board->i_NbrAoChannel;
+	devpriv->s_EeParameters.i_AiMaxdata = board->i_AiMaxdata;
+	devpriv->s_EeParameters.i_AoMaxdata = board->i_AoMaxdata;
+	devpriv->s_EeParameters.i_NbrDiChannel = board->i_NbrDiChannel;
+	devpriv->s_EeParameters.i_NbrDoChannel = board->i_NbrDoChannel;
+	devpriv->s_EeParameters.i_DoMaxdata = board->i_DoMaxdata;
+	devpriv->s_EeParameters.i_Dma = board->i_Dma;
+	devpriv->s_EeParameters.i_Timer = board->i_Timer;
+	devpriv->s_EeParameters.ui_MinAcquisitiontimeNs =
+						board->ui_MinAcquisitiontimeNs;
+	devpriv->s_EeParameters.ui_MinDelaytimeNs = board->ui_MinDelaytimeNs;
+
+	/* ## */
+
+	if (pcidev->irq > 0) {
+		ret = request_irq(pcidev->irq, v_ADDI_Interrupt, IRQF_SHARED,
+				  dev->board_name, dev);
+		if (ret == 0)
+			dev->irq = pcidev->irq;
+	}
+
+	/*  Read eepeom and fill addi_board Structure */
+
+	if (board->i_PCIEeprom) {
+		if (!(strcmp(board->pc_EepromChip, "S5920"))) {
+			/*  Set 3 wait stait */
+			if (!(strcmp(dev->board_name, "apci035")))
+				outl(0x80808082, devpriv->i_IobaseAmcc + 0x60);
+			else
+				outl(0x83838383, devpriv->i_IobaseAmcc + 0x60);
+
+			/*  Enable the interrupt for the controller */
+			dw_Dummy = inl(devpriv->i_IobaseAmcc + 0x38);
+			outl(dw_Dummy | 0x2000, devpriv->i_IobaseAmcc + 0x38);
+		}
+		addi_eeprom_read_info(dev, pci_resource_start(pcidev, 0));
+	}
+
+	n_subdevices = 7;
+	ret = comedi_alloc_subdevices(dev, n_subdevices);
+	if (ret)
+		return ret;
+
+	/*  Allocate and Initialise AI Subdevice Structures */
+	s = &dev->subdevices[0];
+	if (devpriv->s_EeParameters.i_NbrAiChannel ||
+	    board->i_NbrAiChannelDiff) {
+		dev->read_subdev = s;
+		s->type = COMEDI_SUBD_AI;
+		s->subdev_flags = SDF_READABLE | SDF_COMMON | SDF_GROUND |
+				  SDF_DIFF;
+		if (devpriv->s_EeParameters.i_NbrAiChannel) {
+			s->n_chan = devpriv->s_EeParameters.i_NbrAiChannel;
+			devpriv->b_SingelDiff = 0;
+		} else {
+			s->n_chan = board->i_NbrAiChannelDiff;
+			devpriv->b_SingelDiff = 1;
+		}
+		s->maxdata = devpriv->s_EeParameters.i_AiMaxdata;
+		s->len_chanlist = board->i_AiChannelList;
+		s->range_table = board->pr_AiRangelist;
+
+		/* Set the initialisation flag */
+		devpriv->b_AiInitialisation = 1;
+
+		s->insn_config = board->ai_config;
+		s->insn_read = board->ai_read;
+		s->insn_write = board->ai_write;
+		s->insn_bits = board->ai_bits;
+		s->do_cmdtest = board->ai_cmdtest;
+		s->do_cmd = board->ai_cmd;
+		s->cancel = board->ai_cancel;
+
+	} else {
+		s->type = COMEDI_SUBD_UNUSED;
+	}
+
+	/*  Allocate and Initialise AO Subdevice Structures */
+	s = &dev->subdevices[1];
+	if (devpriv->s_EeParameters.i_NbrAoChannel) {
+		s->type = COMEDI_SUBD_AO;
+		s->subdev_flags = SDF_WRITEABLE | SDF_GROUND | SDF_COMMON;
+		s->n_chan = devpriv->s_EeParameters.i_NbrAoChannel;
+		s->maxdata = devpriv->s_EeParameters.i_AoMaxdata;
+		s->len_chanlist = devpriv->s_EeParameters.i_NbrAoChannel;
+		s->range_table = board->pr_AoRangelist;
+		s->insn_config = board->ao_config;
+		s->insn_write = board->ao_write;
+	} else {
+		s->type = COMEDI_SUBD_UNUSED;
+	}
+	/*  Allocate and Initialise DI Subdevice Structures */
+	s = &dev->subdevices[2];
+	if (devpriv->s_EeParameters.i_NbrDiChannel) {
+		s->type = COMEDI_SUBD_DI;
+		s->subdev_flags = SDF_READABLE | SDF_GROUND | SDF_COMMON;
+		s->n_chan = devpriv->s_EeParameters.i_NbrDiChannel;
+		s->maxdata = 1;
+		s->len_chanlist = devpriv->s_EeParameters.i_NbrDiChannel;
+		s->range_table = &range_digital;
+		s->io_bits = 0;	/* all bits input */
+		s->insn_config = board->di_config;
+		s->insn_read = board->di_read;
+		s->insn_write = board->di_write;
+		s->insn_bits = board->di_bits;
+	} else {
+		s->type = COMEDI_SUBD_UNUSED;
+	}
+	/*  Allocate and Initialise DO Subdevice Structures */
+	s = &dev->subdevices[3];
+	if (devpriv->s_EeParameters.i_NbrDoChannel) {
+		s->type = COMEDI_SUBD_DO;
+		s->subdev_flags =
+			SDF_READABLE | SDF_WRITEABLE | SDF_GROUND | SDF_COMMON;
+		s->n_chan = devpriv->s_EeParameters.i_NbrDoChannel;
+		s->maxdata = devpriv->s_EeParameters.i_DoMaxdata;
+		s->len_chanlist = devpriv->s_EeParameters.i_NbrDoChannel;
+		s->range_table = &range_digital;
+		s->io_bits = 0xf;	/* all bits output */
+
+		/* insn_config - for digital output memory */
+		s->insn_config = board->do_config;
+		s->insn_write = board->do_write;
+		s->insn_bits = board->do_bits;
+		s->insn_read = board->do_read;
+	} else {
+		s->type = COMEDI_SUBD_UNUSED;
+	}
+
+	/*  Allocate and Initialise Timer Subdevice Structures */
+	s = &dev->subdevices[4];
+	if (devpriv->s_EeParameters.i_Timer) {
+		s->type = COMEDI_SUBD_TIMER;
+		s->subdev_flags = SDF_WRITEABLE | SDF_GROUND | SDF_COMMON;
+		s->n_chan = 1;
+		s->maxdata = 0;
+		s->len_chanlist = 1;
+		s->range_table = &range_digital;
+
+		s->insn_write = board->timer_write;
+		s->insn_read = board->timer_read;
+		s->insn_config = board->timer_config;
+		s->insn_bits = board->timer_bits;
+	} else {
+		s->type = COMEDI_SUBD_UNUSED;
+	}
+
+	/*  Allocate and Initialise TTL */
+	s = &dev->subdevices[5];
+	if (board->i_NbrTTLChannel) {
+		s->type = COMEDI_SUBD_TTLIO;
+		s->subdev_flags =
+			SDF_WRITEABLE | SDF_READABLE | SDF_GROUND | SDF_COMMON;
+		s->n_chan = board->i_NbrTTLChannel;
+		s->maxdata = 1;
+		s->io_bits = 0;	/* all bits input */
+		s->len_chanlist = board->i_NbrTTLChannel;
+		s->range_table = &range_digital;
+		s->insn_config = board->ttl_config;
+		s->insn_bits = board->ttl_bits;
+		s->insn_read = board->ttl_read;
+		s->insn_write = board->ttl_write;
+	} else {
+		s->type = COMEDI_SUBD_UNUSED;
+	}
+
+	/* EEPROM */
+	s = &dev->subdevices[6];
+	if (board->i_PCIEeprom) {
+		s->type = COMEDI_SUBD_MEMORY;
+		s->subdev_flags = SDF_READABLE | SDF_INTERNAL;
+		s->n_chan = 256;
+		s->maxdata = 0xffff;
+		s->insn_read = i_ADDIDATA_InsnReadEeprom;
+	} else {
+		s->type = COMEDI_SUBD_UNUSED;
+	}
+
+	i_ADDI_Reset(dev);
+	return 0;
+}
+
+static void apci3xxx_detach(struct comedi_device *dev)
+{
+	struct addi_private *devpriv = dev->private;
 
-	return addi_auto_attach(dev, context);
+	if (devpriv) {
+		if (dev->iobase)
+			i_ADDI_Reset(dev);
+		if (dev->irq)
+			free_irq(dev->irq, dev);
+		if (devpriv->dw_AiBase)
+			iounmap(devpriv->dw_AiBase);
+	}
+	comedi_pci_disable(dev);
 }
 
 static struct comedi_driver apci3xxx_driver = {
 	.driver_name	= "addi_apci_3xxx",
 	.module		= THIS_MODULE,
 	.auto_attach	= apci3xxx_auto_attach,
-	.detach		= i_ADDI_Detach,
+	.detach		= apci3xxx_detach,
 };
 
 static int apci3xxx_pci_probe(struct pci_dev *dev,

commit 7fd1fd30fd9a12b037045c2e9eba120479e0f329
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jun 12 16:04:00 2013 -0700

    staging: comedi: addi_apci_3xxx: clean up i_APCI3XXX_Reset()
    
    Rename the CamelCase function and variables.
    
    Remove the extra comments. Leave the main comments to help with further
    cleanup of this driver.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index ec4d6ca6863f..d8c892e01154 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -53,7 +53,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= i_APCI3XXX_Reset,
+		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
@@ -75,7 +75,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= i_APCI3XXX_Reset,
+		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
@@ -97,7 +97,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= i_APCI3XXX_Reset,
+		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
@@ -119,7 +119,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= i_APCI3XXX_Reset,
+		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
@@ -141,7 +141,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= i_APCI3XXX_Reset,
+		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
@@ -163,7 +163,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= i_APCI3XXX_Reset,
+		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
@@ -188,7 +188,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= i_APCI3XXX_Reset,
+		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
@@ -215,7 +215,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= i_APCI3XXX_Reset,
+		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
@@ -242,7 +242,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= i_APCI3XXX_Reset,
+		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
@@ -269,7 +269,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= i_APCI3XXX_Reset,
+		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
@@ -296,7 +296,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= i_APCI3XXX_Reset,
+		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
@@ -323,7 +323,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= i_APCI3XXX_Reset,
+		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
@@ -350,7 +350,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= i_APCI3XXX_Reset,
+		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
@@ -376,7 +376,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= i_APCI3XXX_Reset,
+		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
@@ -402,7 +402,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= i_APCI3XXX_Reset,
+		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
@@ -428,7 +428,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 10000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= i_APCI3XXX_Reset,
+		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
@@ -457,7 +457,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= i_APCI3XXX_Reset,
+		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
@@ -488,7 +488,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= i_APCI3XXX_Reset,
+		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
@@ -519,7 +519,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= i_APCI3XXX_Reset,
+		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
@@ -550,7 +550,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= i_APCI3XXX_Reset,
+		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
@@ -576,7 +576,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 7,
 		.ui_MinAcquisitiontimeNs = 2500,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= i_APCI3XXX_Reset,
+		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
@@ -597,7 +597,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= i_APCI3XXX_Reset,
+		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
@@ -618,7 +618,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= i_APCI3XXX_Reset,
+		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
@@ -639,7 +639,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.b_AvailableConvertUnit	= 6,
 		.ui_MinAcquisitiontimeNs = 5000,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= i_APCI3XXX_Reset,
+		.reset			= apci3xxx_reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
@@ -655,7 +655,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.pr_AoRangelist		= &range_apci3XXX_ao,
 		.i_NbrTTLChannel	= 24,
 		.interrupt		= v_APCI3XXX_Interrupt,
-		.reset			= i_APCI3XXX_Reset,
+		.reset			= apci3xxx_reset,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,

commit 53362177da474ead9b11a4cdbbfc1556067fa2a6
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Apr 10 11:32:30 2013 -0700

    staging: comedi: addi_common: remove i_IorangeBase0 from boardinfo
    
    The i_IorangeBase0 boardinfo is not used. Remove it.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 12875973f118..ec4d6ca6863f 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -41,7 +41,6 @@ enum apci3xxx_boardid {
 static const struct addi_board apci3xxx_boardtypes[] = {
 	[BOARD_APCI3000_16] = {
 		.pc_DriverName		= "apci3000-16",
-		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
@@ -64,7 +63,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3000_8] = {
 		.pc_DriverName		= "apci3000-8",
-		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
@@ -87,7 +85,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3000_4] = {
 		.pc_DriverName		= "apci3000-4",
-		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
@@ -110,7 +107,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3006_16] = {
 		.pc_DriverName		= "apci3006-16",
-		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
@@ -133,7 +129,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3006_8] = {
 		.pc_DriverName		= "apci3006-8",
-		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
@@ -156,7 +151,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3006_4] = {
 		.pc_DriverName		= "apci3006-4",
-		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
@@ -179,7 +173,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3010_16] = {
 		.pc_DriverName		= "apci3010-16",
-		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
@@ -207,7 +200,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3010_8] = {
 		.pc_DriverName		= "apci3010-8",
-		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
@@ -235,7 +227,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3010_4] = {
 		.pc_DriverName		= "apci3010-4",
-		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
@@ -263,7 +254,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3016_16] = {
 		.pc_DriverName		= "apci3016-16",
-		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
@@ -291,7 +281,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3016_8] = {
 		.pc_DriverName		= "apci3016-8",
-		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
@@ -319,7 +308,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3016_4] = {
 		.pc_DriverName		= "apci3016-4",
-		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
@@ -347,7 +335,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3100_16_4] = {
 		.pc_DriverName		= "apci3100-16-4",
-		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
@@ -374,7 +361,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3100_8_4] = {
 		.pc_DriverName		= "apci3100-8-4",
-		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
@@ -401,7 +387,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3106_16_4] = {
 		.pc_DriverName		= "apci3106-16-4",
-		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
@@ -428,7 +413,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3106_8_4] = {
 		.pc_DriverName		= "apci3106-8-4",
-		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
@@ -455,7 +439,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3110_16_4] = {
 		.pc_DriverName		= "apci3110-16-4",
-		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
@@ -487,7 +470,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3110_8_4] = {
 		.pc_DriverName		= "apci3110-8-4",
-		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
@@ -519,7 +501,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3116_16_4] = {
 		.pc_DriverName		= "apci3116-16-4",
-		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
@@ -551,7 +532,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3116_8_4] = {
 		.pc_DriverName		= "apci3116-8-4",
-		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
@@ -583,7 +563,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3003] = {
 		.pc_DriverName		= "apci3003",
-		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
@@ -605,7 +584,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3002_16] = {
 		.pc_DriverName		= "apci3002-16",
-		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
@@ -627,7 +605,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3002_8] = {
 		.pc_DriverName		= "apci3002-8",
-		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
@@ -649,7 +626,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3002_4] = {
 		.pc_DriverName		= "apci3002-4",
-		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
@@ -671,7 +647,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3500] = {
 		.pc_DriverName		= "apci3500",
-		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,

commit 728394d9d059ce16369c22d956bb3315fd014859
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Apr 10 11:32:07 2013 -0700

    staging: comedi: addi_common: remove i_IorangeBase2 from boardinfo
    
    The i_IorangeBase2 boardinfo is not used. Remove it.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 36a887609bfc..12875973f118 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -43,7 +43,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3000-16",
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
-		.i_IorangeBase2		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 16,
@@ -67,7 +66,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3000-8",
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
-		.i_IorangeBase2		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 8,
@@ -91,7 +89,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3000-4",
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
-		.i_IorangeBase2		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 4,
@@ -115,7 +112,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3006-16",
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
-		.i_IorangeBase2		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 16,
@@ -139,7 +135,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3006-8",
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
-		.i_IorangeBase2		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 8,
@@ -163,7 +158,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3006-4",
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
-		.i_IorangeBase2		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 4,
@@ -187,7 +181,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3010-16",
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
-		.i_IorangeBase2		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 16,
@@ -216,7 +209,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3010-8",
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
-		.i_IorangeBase2		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 8,
@@ -245,7 +237,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3010-4",
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
-		.i_IorangeBase2		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 4,
@@ -274,7 +265,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3016-16",
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
-		.i_IorangeBase2		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 16,
@@ -303,7 +293,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3016-8",
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
-		.i_IorangeBase2		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 8,
@@ -332,7 +321,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3016-4",
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
-		.i_IorangeBase2		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 4,
@@ -361,7 +349,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3100-16-4",
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
-		.i_IorangeBase2		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 16,
@@ -389,7 +376,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3100-8-4",
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
-		.i_IorangeBase2		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 8,
@@ -417,7 +403,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3106-16-4",
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
-		.i_IorangeBase2		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 16,
@@ -445,7 +430,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3106-8-4",
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
-		.i_IorangeBase2		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 8,
@@ -473,7 +457,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3110-16-4",
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
-		.i_IorangeBase2		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 16,
@@ -506,7 +489,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3110-8-4",
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
-		.i_IorangeBase2		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 8,
@@ -539,7 +521,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3116-16-4",
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
-		.i_IorangeBase2		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 16,
@@ -572,7 +553,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3116-8-4",
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
-		.i_IorangeBase2		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 8,
@@ -605,7 +585,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3003",
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
-		.i_IorangeBase2		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannelDiff	= 4,
@@ -628,7 +607,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3002-16",
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
-		.i_IorangeBase2		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannelDiff	= 16,
@@ -651,7 +629,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3002-8",
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
-		.i_IorangeBase2		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannelDiff	= 8,
@@ -674,7 +651,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3002-4",
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
-		.i_IorangeBase2		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannelDiff	= 4,
@@ -697,7 +673,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.pc_DriverName		= "apci3500",
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
-		.i_IorangeBase2		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAoChannel		= 4,

commit dcc8adb28638c0c09b29a551f3745f7182b1a04b
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Apr 10 11:31:46 2013 -0700

    staging: comedi: addi_common: remove i_IorangeBase3 from boardinfo
    
    When it is used, the entire PCI bar is ioremap'ed with pci_ioremap_bar().
    The i_IorangeBase3 boardinfo is no longer needed.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 1afc62cb07c5..36a887609bfc 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -44,7 +44,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
-		.i_IorangeBase3		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 16,
@@ -69,7 +68,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
-		.i_IorangeBase3		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 8,
@@ -94,7 +92,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
-		.i_IorangeBase3		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 4,
@@ -119,7 +116,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
-		.i_IorangeBase3		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 16,
@@ -144,7 +140,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
-		.i_IorangeBase3		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 8,
@@ -169,7 +164,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
-		.i_IorangeBase3		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 4,
@@ -194,7 +188,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
-		.i_IorangeBase3		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 16,
@@ -224,7 +217,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
-		.i_IorangeBase3		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 8,
@@ -254,7 +246,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
-		.i_IorangeBase3		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 4,
@@ -284,7 +275,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
-		.i_IorangeBase3		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 16,
@@ -314,7 +304,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
-		.i_IorangeBase3		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 8,
@@ -344,7 +333,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
-		.i_IorangeBase3		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 4,
@@ -374,7 +362,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
-		.i_IorangeBase3		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 16,
@@ -403,7 +390,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
-		.i_IorangeBase3		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 8,
@@ -432,7 +418,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
-		.i_IorangeBase3		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 16,
@@ -461,7 +446,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
-		.i_IorangeBase3		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 8,
@@ -490,7 +474,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
-		.i_IorangeBase3		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 16,
@@ -524,7 +507,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
-		.i_IorangeBase3		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 8,
@@ -558,7 +540,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
-		.i_IorangeBase3		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 16,
@@ -592,7 +573,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
-		.i_IorangeBase3		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannel		= 8,
@@ -626,7 +606,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
-		.i_IorangeBase3		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannelDiff	= 4,
@@ -650,7 +629,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
-		.i_IorangeBase3		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannelDiff	= 16,
@@ -674,7 +652,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
-		.i_IorangeBase3		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannelDiff	= 8,
@@ -698,7 +675,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
-		.i_IorangeBase3		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAiChannelDiff	= 4,
@@ -722,7 +698,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
-		.i_IorangeBase3		= 256,
 		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
 		.pc_EepromChip		= ADDIDATA_9054,
 		.i_NbrAoChannel		= 4,

commit b9beb6c7e76a2ab4153b4c6eb675fe3c481300cf
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Mar 5 10:26:44 2013 -0700

    staging: comedi: addi_common: remove 'i_VendorId' and 'i_Device Id'
    
    The vendor/device ids in the boardinfo are not longer needed. Remove
    them.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 5069fbdb27c3..1afc62cb07c5 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -41,8 +41,6 @@ enum apci3xxx_boardid {
 static const struct addi_board apci3xxx_boardtypes[] = {
 	[BOARD_APCI3000_16] = {
 		.pc_DriverName		= "apci3000-16",
-		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
-		.i_DeviceId		= 0x3010,
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
@@ -68,8 +66,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3000_8] = {
 		.pc_DriverName		= "apci3000-8",
-		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
-		.i_DeviceId		= 0x300F,
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
@@ -95,8 +91,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3000_4] = {
 		.pc_DriverName		= "apci3000-4",
-		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
-		.i_DeviceId		= 0x300E,
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
@@ -122,8 +116,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3006_16] = {
 		.pc_DriverName		= "apci3006-16",
-		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
-		.i_DeviceId		= 0x3013,
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
@@ -149,8 +141,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3006_8] = {
 		.pc_DriverName		= "apci3006-8",
-		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
-		.i_DeviceId		= 0x3014,
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
@@ -176,8 +166,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3006_4] = {
 		.pc_DriverName		= "apci3006-4",
-		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
-		.i_DeviceId		= 0x3015,
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
@@ -203,8 +191,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3010_16] = {
 		.pc_DriverName		= "apci3010-16",
-		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
-		.i_DeviceId		= 0x3016,
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
@@ -235,8 +221,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3010_8] = {
 		.pc_DriverName		= "apci3010-8",
-		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
-		.i_DeviceId		= 0x3017,
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
@@ -267,8 +251,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3010_4] = {
 		.pc_DriverName		= "apci3010-4",
-		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
-		.i_DeviceId		= 0x3018,
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
@@ -299,8 +281,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3016_16] = {
 		.pc_DriverName		= "apci3016-16",
-		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
-		.i_DeviceId		= 0x3019,
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
@@ -331,8 +311,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3016_8] = {
 		.pc_DriverName		= "apci3016-8",
-		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
-		.i_DeviceId		= 0x301A,
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
@@ -363,8 +341,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3016_4] = {
 		.pc_DriverName		= "apci3016-4",
-		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
-		.i_DeviceId		= 0x301B,
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
@@ -395,8 +371,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3100_16_4] = {
 		.pc_DriverName		= "apci3100-16-4",
-		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
-		.i_DeviceId		= 0x301C,
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
@@ -426,8 +400,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3100_8_4] = {
 		.pc_DriverName		= "apci3100-8-4",
-		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
-		.i_DeviceId		= 0x301D,
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
@@ -457,8 +429,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3106_16_4] = {
 		.pc_DriverName		= "apci3106-16-4",
-		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
-		.i_DeviceId		= 0x301E,
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
@@ -488,8 +458,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3106_8_4] = {
 		.pc_DriverName		= "apci3106-8-4",
-		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
-		.i_DeviceId		= 0x301F,
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
@@ -519,8 +487,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3110_16_4] = {
 		.pc_DriverName		= "apci3110-16-4",
-		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
-		.i_DeviceId		= 0x3020,
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
@@ -555,8 +521,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3110_8_4] = {
 		.pc_DriverName		= "apci3110-8-4",
-		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
-		.i_DeviceId		= 0x3021,
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
@@ -591,8 +555,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3116_16_4] = {
 		.pc_DriverName		= "apci3116-16-4",
-		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
-		.i_DeviceId		= 0x3022,
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
@@ -627,8 +589,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3116_8_4] = {
 		.pc_DriverName		= "apci3116-8-4",
-		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
-		.i_DeviceId		= 0x3023,
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
@@ -663,8 +623,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3003] = {
 		.pc_DriverName		= "apci3003",
-		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
-		.i_DeviceId		= 0x300B,
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
@@ -689,8 +647,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3002_16] = {
 		.pc_DriverName		= "apci3002-16",
-		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
-		.i_DeviceId		= 0x3002,
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
@@ -715,8 +671,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3002_8] = {
 		.pc_DriverName		= "apci3002-8",
-		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
-		.i_DeviceId		= 0x3003,
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
@@ -741,8 +695,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3002_4] = {
 		.pc_DriverName		= "apci3002-4",
-		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
-		.i_DeviceId		= 0x3004,
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,
@@ -767,8 +719,6 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 	[BOARD_APCI3500] = {
 		.pc_DriverName		= "apci3500",
-		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
-		.i_DeviceId		= 0x3024,
 		.i_IorangeBase0		= 256,
 		.i_IorangeBase1		= 256,
 		.i_IorangeBase2		= 256,

commit dbae4575661da840353f12dd76499ad587c92519
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Mar 5 10:25:04 2013 -0700

    staging: comedi: addi_apci_3xxx: use the pci id_table 'driver_data'
    
    Create an enum to the boardinfo and pass that enum in the pci_driver
    id_table as the driver_data.
    
    Change the macro used to fill in the device table from PCI_DEVICE()
    to PCI_VDEVICE(). This allows passing the enum as the next field.
    
    Set the dev->board_ptr before calling addi_auto_attach(). This
    removes the need for the common code to search for the boardinfo.
    
    Since the search is not done we can remove the unnecessary board
    information from the comedi_driver.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 96ec65b2678e..5069fbdb27c3 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -10,8 +10,36 @@
 #include "addi-data/hwdrv_apci3xxx.c"
 #include "addi-data/addi_common.c"
 
+enum apci3xxx_boardid {
+	BOARD_APCI3000_16,
+	BOARD_APCI3000_8,
+	BOARD_APCI3000_4,
+	BOARD_APCI3006_16,
+	BOARD_APCI3006_8,
+	BOARD_APCI3006_4,
+	BOARD_APCI3010_16,
+	BOARD_APCI3010_8,
+	BOARD_APCI3010_4,
+	BOARD_APCI3016_16,
+	BOARD_APCI3016_8,
+	BOARD_APCI3016_4,
+	BOARD_APCI3100_16_4,
+	BOARD_APCI3100_8_4,
+	BOARD_APCI3106_16_4,
+	BOARD_APCI3106_8_4,
+	BOARD_APCI3110_16_4,
+	BOARD_APCI3110_8_4,
+	BOARD_APCI3116_16_4,
+	BOARD_APCI3116_8_4,
+	BOARD_APCI3003,
+	BOARD_APCI3002_16,
+	BOARD_APCI3002_8,
+	BOARD_APCI3002_4,
+	BOARD_APCI3500,
+};
+
 static const struct addi_board apci3xxx_boardtypes[] = {
-	{
+	[BOARD_APCI3000_16] = {
 		.pc_DriverName		= "apci3000-16",
 		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
 		.i_DeviceId		= 0x3010,
@@ -37,7 +65,8 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
 		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
-	}, {
+	},
+	[BOARD_APCI3000_8] = {
 		.pc_DriverName		= "apci3000-8",
 		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
 		.i_DeviceId		= 0x300F,
@@ -63,7 +92,8 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
 		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
-	}, {
+	},
+	[BOARD_APCI3000_4] = {
 		.pc_DriverName		= "apci3000-4",
 		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
 		.i_DeviceId		= 0x300E,
@@ -89,7 +119,8 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
 		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
-	}, {
+	},
+	[BOARD_APCI3006_16] = {
 		.pc_DriverName		= "apci3006-16",
 		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
 		.i_DeviceId		= 0x3013,
@@ -115,7 +146,8 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
 		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
-	}, {
+	},
+	[BOARD_APCI3006_8] = {
 		.pc_DriverName		= "apci3006-8",
 		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
 		.i_DeviceId		= 0x3014,
@@ -141,7 +173,8 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
 		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
-	}, {
+	},
+	[BOARD_APCI3006_4] = {
 		.pc_DriverName		= "apci3006-4",
 		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
 		.i_DeviceId		= 0x3015,
@@ -167,7 +200,8 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
 		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
-	}, {
+	},
+	[BOARD_APCI3010_16] = {
 		.pc_DriverName		= "apci3010-16",
 		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
 		.i_DeviceId		= 0x3016,
@@ -198,7 +232,8 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
 		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
-	}, {
+	},
+	[BOARD_APCI3010_8] = {
 		.pc_DriverName		= "apci3010-8",
 		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
 		.i_DeviceId		= 0x3017,
@@ -229,7 +264,8 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
 		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
-	}, {
+	},
+	[BOARD_APCI3010_4] = {
 		.pc_DriverName		= "apci3010-4",
 		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
 		.i_DeviceId		= 0x3018,
@@ -260,7 +296,8 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
 		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
-	}, {
+	},
+	[BOARD_APCI3016_16] = {
 		.pc_DriverName		= "apci3016-16",
 		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
 		.i_DeviceId		= 0x3019,
@@ -291,7 +328,8 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
 		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
-	}, {
+	},
+	[BOARD_APCI3016_8] = {
 		.pc_DriverName		= "apci3016-8",
 		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
 		.i_DeviceId		= 0x301A,
@@ -322,7 +360,8 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
 		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
-	}, {
+	},
+	[BOARD_APCI3016_4] = {
 		.pc_DriverName		= "apci3016-4",
 		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
 		.i_DeviceId		= 0x301B,
@@ -353,7 +392,8 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
 		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
-	}, {
+	},
+	[BOARD_APCI3100_16_4] = {
 		.pc_DriverName		= "apci3100-16-4",
 		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
 		.i_DeviceId		= 0x301C,
@@ -383,7 +423,8 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
 		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
-	}, {
+	},
+	[BOARD_APCI3100_8_4] = {
 		.pc_DriverName		= "apci3100-8-4",
 		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
 		.i_DeviceId		= 0x301D,
@@ -413,7 +454,8 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
 		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
-	}, {
+	},
+	[BOARD_APCI3106_16_4] = {
 		.pc_DriverName		= "apci3106-16-4",
 		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
 		.i_DeviceId		= 0x301E,
@@ -443,7 +485,8 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
 		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
-	}, {
+	},
+	[BOARD_APCI3106_8_4] = {
 		.pc_DriverName		= "apci3106-8-4",
 		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
 		.i_DeviceId		= 0x301F,
@@ -473,7 +516,8 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
 		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
-	}, {
+	},
+	[BOARD_APCI3110_16_4] = {
 		.pc_DriverName		= "apci3110-16-4",
 		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
 		.i_DeviceId		= 0x3020,
@@ -508,7 +552,8 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
 		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
-	}, {
+	},
+	[BOARD_APCI3110_8_4] = {
 		.pc_DriverName		= "apci3110-8-4",
 		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
 		.i_DeviceId		= 0x3021,
@@ -543,7 +588,8 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
 		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
-	}, {
+	},
+	[BOARD_APCI3116_16_4] = {
 		.pc_DriverName		= "apci3116-16-4",
 		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
 		.i_DeviceId		= 0x3022,
@@ -578,7 +624,8 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
 		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
-	}, {
+	},
+	[BOARD_APCI3116_8_4] = {
 		.pc_DriverName		= "apci3116-8-4",
 		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
 		.i_DeviceId		= 0x3023,
@@ -613,7 +660,8 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
 		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
-	}, {
+	},
+	[BOARD_APCI3003] = {
 		.pc_DriverName		= "apci3003",
 		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
 		.i_DeviceId		= 0x300B,
@@ -638,7 +686,8 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
 		.do_bits		= apci3xxx_do_insn_bits,
-	}, {
+	},
+	[BOARD_APCI3002_16] = {
 		.pc_DriverName		= "apci3002-16",
 		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
 		.i_DeviceId		= 0x3002,
@@ -663,7 +712,8 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
 		.do_bits		= apci3xxx_do_insn_bits,
-	}, {
+	},
+	[BOARD_APCI3002_8] = {
 		.pc_DriverName		= "apci3002-8",
 		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
 		.i_DeviceId		= 0x3003,
@@ -688,7 +738,8 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
 		.do_bits		= apci3xxx_do_insn_bits,
-	}, {
+	},
+	[BOARD_APCI3002_4] = {
 		.pc_DriverName		= "apci3002-4",
 		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
 		.i_DeviceId		= 0x3004,
@@ -713,7 +764,8 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
 		.do_bits		= apci3xxx_do_insn_bits,
-	}, {
+	},
+	[BOARD_APCI3500] = {
 		.pc_DriverName		= "apci3500",
 		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
 		.i_DeviceId		= 0x3024,
@@ -737,14 +789,25 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 	},
 };
 
+static int apci3xxx_auto_attach(struct comedi_device *dev,
+				unsigned long context)
+{
+	const struct addi_board *board = NULL;
+
+	if (context < ARRAY_SIZE(apci3xxx_boardtypes))
+		board = &apci3xxx_boardtypes[context];
+	if (!board)
+		return -ENODEV;
+	dev->board_ptr = board;
+
+	return addi_auto_attach(dev, context);
+}
+
 static struct comedi_driver apci3xxx_driver = {
 	.driver_name	= "addi_apci_3xxx",
 	.module		= THIS_MODULE,
-	.auto_attach	= addi_auto_attach,
+	.auto_attach	= apci3xxx_auto_attach,
 	.detach		= i_ADDI_Detach,
-	.num_names	= ARRAY_SIZE(apci3xxx_boardtypes),
-	.board_name	= &apci3xxx_boardtypes[0].pc_DriverName,
-	.offset		= sizeof(struct addi_board),
 };
 
 static int apci3xxx_pci_probe(struct pci_dev *dev,
@@ -754,31 +817,31 @@ static int apci3xxx_pci_probe(struct pci_dev *dev,
 }
 
 static DEFINE_PCI_DEVICE_TABLE(apci3xxx_pci_table) = {
-	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x3010) },
-	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x300f) },
-	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x300e) },
-	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x3013) },
-	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x3014) },
-	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x3015) },
-	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x3016) },
-	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x3017) },
-	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x3018) },
-	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x3019) },
-	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x301a) },
-	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x301b) },
-	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x301c) },
-	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x301d) },
-	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x301e) },
-	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x301f) },
-	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x3020) },
-	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x3021) },
-	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x3022) },
-	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x3023) },
-	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x300B) },
-	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x3002) },
-	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x3003) },
-	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x3004) },
-	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x3024) },
+	{ PCI_VDEVICE(ADDIDATA, 0x3010), BOARD_APCI3000_16 },
+	{ PCI_VDEVICE(ADDIDATA, 0x300f), BOARD_APCI3000_8 },
+	{ PCI_VDEVICE(ADDIDATA, 0x300e), BOARD_APCI3000_4 },
+	{ PCI_VDEVICE(ADDIDATA, 0x3013), BOARD_APCI3006_16 },
+	{ PCI_VDEVICE(ADDIDATA, 0x3014), BOARD_APCI3006_8 },
+	{ PCI_VDEVICE(ADDIDATA, 0x3015), BOARD_APCI3006_4 },
+	{ PCI_VDEVICE(ADDIDATA, 0x3016), BOARD_APCI3010_16 },
+	{ PCI_VDEVICE(ADDIDATA, 0x3017), BOARD_APCI3010_8 },
+	{ PCI_VDEVICE(ADDIDATA, 0x3018), BOARD_APCI3010_4 },
+	{ PCI_VDEVICE(ADDIDATA, 0x3019), BOARD_APCI3016_16 },
+	{ PCI_VDEVICE(ADDIDATA, 0x301a), BOARD_APCI3016_8 },
+	{ PCI_VDEVICE(ADDIDATA, 0x301b), BOARD_APCI3016_4 },
+	{ PCI_VDEVICE(ADDIDATA, 0x301c), BOARD_APCI3100_16_4 },
+	{ PCI_VDEVICE(ADDIDATA, 0x301d), BOARD_APCI3100_8_4 },
+	{ PCI_VDEVICE(ADDIDATA, 0x301e), BOARD_APCI3106_16_4 },
+	{ PCI_VDEVICE(ADDIDATA, 0x301f), BOARD_APCI3106_8_4 },
+	{ PCI_VDEVICE(ADDIDATA, 0x3020), BOARD_APCI3110_16_4 },
+	{ PCI_VDEVICE(ADDIDATA, 0x3021), BOARD_APCI3110_8_4 },
+	{ PCI_VDEVICE(ADDIDATA, 0x3022), BOARD_APCI3116_16_4 },
+	{ PCI_VDEVICE(ADDIDATA, 0x3023), BOARD_APCI3116_8_4 },
+	{ PCI_VDEVICE(ADDIDATA, 0x300B), BOARD_APCI3003 },
+	{ PCI_VDEVICE(ADDIDATA, 0x3002), BOARD_APCI3002_16 },
+	{ PCI_VDEVICE(ADDIDATA, 0x3003), BOARD_APCI3002_8 },
+	{ PCI_VDEVICE(ADDIDATA, 0x3004), BOARD_APCI3002_4 },
+	{ PCI_VDEVICE(ADDIDATA, 0x3024), BOARD_APCI3500 },
 	{ 0 }
 };
 MODULE_DEVICE_TABLE(pci, apci3xxx_pci_table);

commit b8f4ac237e382accd4b30c75043939f7ed9e79a6
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Tue Mar 5 09:53:41 2013 -0700

    staging: comedi: comedi_pci: change the comedi_pci_auto_config() 'context'
    
    The comedi_pci_auto_config() function is used to allow the PCI driver
    (*probe) function to automatically call the comedi driver (*auto_attach).
    This allows the comedi driver to be part of the PnP process when the
    PCI device is detected.
    
    Currently the comedi_pci_auto_config() always passes a 'context' of '0'
    to comedi_auto_config(). This makes the 'context' a bit useless.
    
    Modify comedi_pci_auto_config() to allow the comedi pci drivers to pass
    a 'context' from the PCI driver.
    
    Make all the comedi pci drivers pass the pci_device_id 'driver_data' as
    the 'context'. Since none of the comedi pci drivers currently set the
    'driver_data' the 'context' will still be '0'.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 09d4b21fce23..96ec65b2678e 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -748,9 +748,9 @@ static struct comedi_driver apci3xxx_driver = {
 };
 
 static int apci3xxx_pci_probe(struct pci_dev *dev,
-					const struct pci_device_id *ent)
+			      const struct pci_device_id *id)
 {
-	return comedi_pci_auto_config(dev, &apci3xxx_driver);
+	return comedi_pci_auto_config(dev, &apci3xxx_driver, id->driver_data);
 }
 
 static DEFINE_PCI_DEVICE_TABLE(apci3xxx_pci_table) = {

commit 33782dd5edf8db3cdb7c81a3523bf743dd0209b7
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Wed Jan 30 15:22:21 2013 -0700

    staging: comedi: conditionally build in PCI driver support
    
    Separate the comedi_pci_* functions out of drivers.c into a new
    source file, comedi_pci.c. This allows conditionally building
    support for comedi PCI drivers into the comedi core. Fix the
    Kconfig and Makefile appropriately.
    
    Group all the comedi_pci_* prototypes and related defines into one
    place in comedidev.h. Protect these prototypes with an #ifdef and
    provide some dummy functions so that the mixed ISA/PCI comedi
    drivers will still build correctly.
    
    Remove the #include <linux/pci.h> from comedidev.h and drivers.c. This
    include is only needed by the comedi PCI driver support code and the
    PCI drivers. The include should occur in those files.
    
    Also, remove the #include <linux/pci.h> from a couple non-PCI drivers
    since it's not needed.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 69f5bf4d52e0..09d4b21fce23 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -1,3 +1,5 @@
+#include <linux/pci.h>
+
 #include "../comedidev.h"
 #include "comedi_fc.h"
 #include "amcc_s5933.h"

commit 9901a4d75d007686e8f6473189cafc4b216b7449
Author: Peter Huewe <peterhuewe@gmx.de>
Date:   Tue Jan 22 23:40:03 2013 +0100

    staging/comedi: Use comedi_pci_auto_unconfig directly for pci_driver.remove
    
    (Almost) all comedi pci drivers have some wrapper for their
    pci_driver.remove function which simply calls comedi_pci_auto_unconfig
    which has the same function prototype as the wrapper.
    
    -> we can remove these wrappers and call comedi_pci_auto_unconfig
    directly. This removes a lot some boilerplate code and saves some bytes.
    
    Signed-off-by: Peter Huewe <peterhuewe@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 1562347ed64b..69f5bf4d52e0 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -751,11 +751,6 @@ static int apci3xxx_pci_probe(struct pci_dev *dev,
 	return comedi_pci_auto_config(dev, &apci3xxx_driver);
 }
 
-static void apci3xxx_pci_remove(struct pci_dev *dev)
-{
-	comedi_pci_auto_unconfig(dev);
-}
-
 static DEFINE_PCI_DEVICE_TABLE(apci3xxx_pci_table) = {
 	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x3010) },
 	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x300f) },
@@ -790,7 +785,7 @@ static struct pci_driver apci3xxx_pci_driver = {
 	.name		= "addi_apci_3xxx",
 	.id_table	= apci3xxx_pci_table,
 	.probe		= apci3xxx_pci_probe,
-	.remove		= apci3xxx_pci_remove,
+	.remove		= comedi_pci_auto_unconfig,
 };
 module_comedi_pci_driver(apci3xxx_driver, apci3xxx_pci_driver);
 

commit 53b800198592b0ff96577ecc5f116f7d902a4362
Author: Bill Pemberton <wfp5p@virginia.edu>
Date:   Mon Nov 19 13:26:36 2012 -0500

    staging: comedi: remove use of __devexit
    
    CONFIG_HOTPLUG is going away as an option so __devexit is no
    longer needed.
    
    Signed-off-by: Bill Pemberton <wfp5p@virginia.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index c4fa11df47c1..1562347ed64b 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -751,7 +751,7 @@ static int apci3xxx_pci_probe(struct pci_dev *dev,
 	return comedi_pci_auto_config(dev, &apci3xxx_driver);
 }
 
-static void __devexit apci3xxx_pci_remove(struct pci_dev *dev)
+static void apci3xxx_pci_remove(struct pci_dev *dev)
 {
 	comedi_pci_auto_unconfig(dev);
 }

commit a690b7e535f2f97a3a05ee570715abeb60a8910f
Author: Bill Pemberton <wfp5p@virginia.edu>
Date:   Mon Nov 19 13:21:58 2012 -0500

    staging: comedi: remove use of __devinit
    
    CONFIG_HOTPLUG is going away as an option so __devinit is no longer
    needed.
    
    Signed-off-by: Bill Pemberton <wfp5p@virginia.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 4a3e346c359f..c4fa11df47c1 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -745,7 +745,7 @@ static struct comedi_driver apci3xxx_driver = {
 	.offset		= sizeof(struct addi_board),
 };
 
-static int __devinit apci3xxx_pci_probe(struct pci_dev *dev,
+static int apci3xxx_pci_probe(struct pci_dev *dev,
 					const struct pci_device_id *ent)
 {
 	return comedi_pci_auto_config(dev, &apci3xxx_driver);

commit a471eace7baa40cdf16d3f26b2f78ddce613ca8f
Author: Bill Pemberton <wfp5p@virginia.edu>
Date:   Mon Nov 19 13:21:37 2012 -0500

    staging: comedi: remove use of __devexit_p
    
    CONFIG_HOTPLUG is going away as an option so __devexit_p is no longer
    needed.
    
    Signed-off-by: Bill Pemberton <wfp5p@virginia.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index cc3938124cdc..4a3e346c359f 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -790,7 +790,7 @@ static struct pci_driver apci3xxx_pci_driver = {
 	.name		= "addi_apci_3xxx",
 	.id_table	= apci3xxx_pci_table,
 	.probe		= apci3xxx_pci_probe,
-	.remove		= __devexit_p(apci3xxx_pci_remove),
+	.remove		= apci3xxx_pci_remove,
 };
 module_comedi_pci_driver(apci3xxx_driver, apci3xxx_pci_driver);
 

commit 92cba8f3b42e1cb8211b64e91618102ecc8f0a6d
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Tue Nov 6 11:16:42 2012 -0700

    staging: comedi: addi-data: use auto_attach instead of attach_pci
    
    Change the addi-data drivers that use the "common" code so they
    attach using the generic 'auto_attach' method instead the pci
    specific 'attach_pci' method. The 'attach_pci' is deprecated and
    is going to be removed.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index ae2967a027ed..cc3938124cdc 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -738,7 +738,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 static struct comedi_driver apci3xxx_driver = {
 	.driver_name	= "addi_apci_3xxx",
 	.module		= THIS_MODULE,
-	.attach_pci	= addi_attach_pci,
+	.auto_attach	= addi_auto_attach,
 	.detach		= i_ADDI_Detach,
 	.num_names	= ARRAY_SIZE(apci3xxx_boardtypes),
 	.board_name	= &apci3xxx_boardtypes[0].pc_DriverName,

commit 2b70a4f4f97b70e8cd9d8a16983758aa4fc3450b
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Tue Nov 6 10:02:16 2012 -0700

    staging: comedi: addi_apci_3xxx: fix digital output 'insn_bits' function
    
    This driver does not follow the comedi API. The digital output 'insn_bits'
    function is passed a mask value in data[0] indicating which output bits in
    data[1] are changing. The function is then supposed to update the outputs
    accordingly and then return the current state of the outputs in data[1].
    
    Fix the 'insn_bits' function so it works like the comedi core expects. The
    core can then use the function to emulate the 'insn_read' and 'insn_write'
    functions for individual channels.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index d0cd2e8544ba..ae2967a027ed 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -191,9 +191,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
-		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
-		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
-		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
+		.do_bits		= apci3xxx_do_insn_bits,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
@@ -224,9 +222,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
-		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
-		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
-		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
+		.do_bits		= apci3xxx_do_insn_bits,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
@@ -257,9 +253,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
-		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
-		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
-		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
+		.do_bits		= apci3xxx_do_insn_bits,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
@@ -290,9 +284,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
-		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
-		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
-		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
+		.do_bits		= apci3xxx_do_insn_bits,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
@@ -323,9 +315,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
-		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
-		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
-		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
+		.do_bits		= apci3xxx_do_insn_bits,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
@@ -356,9 +346,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
-		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
-		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
-		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
+		.do_bits		= apci3xxx_do_insn_bits,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
@@ -513,9 +501,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
 		.di_bits		= apci3xxx_di_insn_bits,
-		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
-		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
-		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
+		.do_bits		= apci3xxx_do_insn_bits,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
@@ -550,9 +536,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
 		.di_bits		= apci3xxx_di_insn_bits,
-		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
-		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
-		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
+		.do_bits		= apci3xxx_do_insn_bits,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
@@ -587,9 +571,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
 		.di_bits		= apci3xxx_di_insn_bits,
-		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
-		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
-		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
+		.do_bits		= apci3xxx_do_insn_bits,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
@@ -624,9 +606,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
 		.di_bits		= apci3xxx_di_insn_bits,
-		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
-		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
-		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
+		.do_bits		= apci3xxx_do_insn_bits,
 		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
 		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
 		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
@@ -655,9 +635,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
-		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
-		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
-		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
+		.do_bits		= apci3xxx_do_insn_bits,
 	}, {
 		.pc_DriverName		= "apci3002-16",
 		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
@@ -682,9 +660,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
-		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
-		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
-		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
+		.do_bits		= apci3xxx_do_insn_bits,
 	}, {
 		.pc_DriverName		= "apci3002-8",
 		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
@@ -709,9 +685,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
-		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
-		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
-		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
+		.do_bits		= apci3xxx_do_insn_bits,
 	}, {
 		.pc_DriverName		= "apci3002-4",
 		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
@@ -736,9 +710,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.di_bits		= apci3xxx_di_insn_bits,
-		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
-		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
-		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
+		.do_bits		= apci3xxx_do_insn_bits,
 	}, {
 		.pc_DriverName		= "apci3500",
 		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,

commit 10f71c7845686b7f93113f1fe6dbc3718d8a8673
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Tue Nov 6 10:01:26 2012 -0700

    staging: comedi: addi_apci_3xxx: fix digital input 'insn_bits' function
    
    This driver does not follow the comedi API. The digital input 'insn_bits'
    function is supposed to return the status of all the input channels in
    data[1]. Currently this function is returning the status in data[0]. It
    is also unnecessarily testing the size of the return buffer.
    
    Fix the function so it works like the comedi core expects. The core can
    then use the function to emulate the 'insn_read' function for individual
    channels. This allows removing the i_APCI3XXX_InsnReadDigitalInput()
    function.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 00c972e140f7..d0cd2e8544ba 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -190,8 +190,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.reset			= i_APCI3XXX_Reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.di_read		= i_APCI3XXX_InsnReadDigitalInput,
-		.di_bits		= i_APCI3XXX_InsnBitsDigitalInput,
+		.di_bits		= apci3xxx_di_insn_bits,
 		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
 		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
 		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
@@ -224,8 +223,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.reset			= i_APCI3XXX_Reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.di_read		= i_APCI3XXX_InsnReadDigitalInput,
-		.di_bits		= i_APCI3XXX_InsnBitsDigitalInput,
+		.di_bits		= apci3xxx_di_insn_bits,
 		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
 		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
 		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
@@ -258,8 +256,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.reset			= i_APCI3XXX_Reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.di_read		= i_APCI3XXX_InsnReadDigitalInput,
-		.di_bits		= i_APCI3XXX_InsnBitsDigitalInput,
+		.di_bits		= apci3xxx_di_insn_bits,
 		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
 		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
 		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
@@ -292,8 +289,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.reset			= i_APCI3XXX_Reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.di_read		= i_APCI3XXX_InsnReadDigitalInput,
-		.di_bits		= i_APCI3XXX_InsnBitsDigitalInput,
+		.di_bits		= apci3xxx_di_insn_bits,
 		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
 		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
 		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
@@ -326,8 +322,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.reset			= i_APCI3XXX_Reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.di_read		= i_APCI3XXX_InsnReadDigitalInput,
-		.di_bits		= i_APCI3XXX_InsnBitsDigitalInput,
+		.di_bits		= apci3xxx_di_insn_bits,
 		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
 		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
 		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
@@ -360,8 +355,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.reset			= i_APCI3XXX_Reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.di_read		= i_APCI3XXX_InsnReadDigitalInput,
-		.di_bits		= i_APCI3XXX_InsnBitsDigitalInput,
+		.di_bits		= apci3xxx_di_insn_bits,
 		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
 		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
 		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
@@ -518,8 +512,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
-		.di_read		= i_APCI3XXX_InsnReadDigitalInput,
-		.di_bits		= i_APCI3XXX_InsnBitsDigitalInput,
+		.di_bits		= apci3xxx_di_insn_bits,
 		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
 		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
 		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
@@ -556,8 +549,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
-		.di_read		= i_APCI3XXX_InsnReadDigitalInput,
-		.di_bits		= i_APCI3XXX_InsnBitsDigitalInput,
+		.di_bits		= apci3xxx_di_insn_bits,
 		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
 		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
 		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
@@ -594,8 +586,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
-		.di_read		= i_APCI3XXX_InsnReadDigitalInput,
-		.di_bits		= i_APCI3XXX_InsnBitsDigitalInput,
+		.di_bits		= apci3xxx_di_insn_bits,
 		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
 		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
 		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
@@ -632,8 +623,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
 		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
-		.di_read		= i_APCI3XXX_InsnReadDigitalInput,
-		.di_bits		= i_APCI3XXX_InsnBitsDigitalInput,
+		.di_bits		= apci3xxx_di_insn_bits,
 		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
 		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
 		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
@@ -664,8 +654,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.reset			= i_APCI3XXX_Reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.di_read		= i_APCI3XXX_InsnReadDigitalInput,
-		.di_bits		= i_APCI3XXX_InsnBitsDigitalInput,
+		.di_bits		= apci3xxx_di_insn_bits,
 		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
 		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
 		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
@@ -692,8 +681,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.reset			= i_APCI3XXX_Reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.di_read		= i_APCI3XXX_InsnReadDigitalInput,
-		.di_bits		= i_APCI3XXX_InsnBitsDigitalInput,
+		.di_bits		= apci3xxx_di_insn_bits,
 		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
 		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
 		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
@@ -720,8 +708,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.reset			= i_APCI3XXX_Reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.di_read		= i_APCI3XXX_InsnReadDigitalInput,
-		.di_bits		= i_APCI3XXX_InsnBitsDigitalInput,
+		.di_bits		= apci3xxx_di_insn_bits,
 		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
 		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
 		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
@@ -748,8 +735,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 		.reset			= i_APCI3XXX_Reset,
 		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
 		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
-		.di_read		= i_APCI3XXX_InsnReadDigitalInput,
-		.di_bits		= i_APCI3XXX_InsnBitsDigitalInput,
+		.di_bits		= apci3xxx_di_insn_bits,
 		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
 		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
 		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,

commit bf36f012c7ddaff083bb0ef187feddf4d85507a0
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Wed Oct 31 16:58:40 2012 -0700

    staging: comedi: addi-data: remove addi_amcc_s5933.h
    
    Now that the PCI bus walking has been removed from the addi-data
    drivers, the only differenced between addi_amcc_s9533.h and the
    standard comedi amcc_s5933.h is the additional defines for the
    apci3120 "ADDON RELATED ADDITIONS". Move those defines to
    hwdrv_apci3120.c.
    
    Modify all the addi-data drivers to then include the standard
    comedi amcc_s5933.h header and delete the duplicate in addi-data.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 22b13987ea3d..00c972e140f7 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -1,8 +1,8 @@
 #include "../comedidev.h"
 #include "comedi_fc.h"
+#include "amcc_s5933.h"
 
 #include "addi-data/addi_common.h"
-#include "addi-data/addi_amcc_s5933.h"
 
 #include "addi-data/addi_eeprom.c"
 #include "addi-data/hwdrv_apci3xxx.c"

commit 41be28db534330192bbbec9783e6d43d4432a7fb
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Wed Oct 31 16:57:37 2012 -0700

    staging: comedi: addi-data: use attach_pci callback
    
    Use the comedi pci auto config mechanism to attach the addi-data
    drivers. This allows removing all the PCI bus walking code.
    
    Add a function, addi_find_boardinfo(), to find the driver specific
    boardinfo. Since this function is currently in the common code we
    have to use the pointer to the boardinfo that is stored in the
    comedi_driver pointer.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 86e17809b024..22b13987ea3d 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -780,7 +780,7 @@ static const struct addi_board apci3xxx_boardtypes[] = {
 static struct comedi_driver apci3xxx_driver = {
 	.driver_name	= "addi_apci_3xxx",
 	.module		= THIS_MODULE,
-	.attach		= i_ADDI_Attach,
+	.attach_pci	= addi_attach_pci,
 	.detach		= i_ADDI_Detach,
 	.num_names	= ARRAY_SIZE(apci3xxx_boardtypes),
 	.board_name	= &apci3xxx_boardtypes[0].pc_DriverName,

commit 20a22b706b8ee37d1a2282f2c9bf7f2c73a5a7a5
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Tue Oct 30 18:06:33 2012 -0700

    staging: comedi: addi_apci_*: add module_comedi_pci_driver()
    
    Pull the module init code out of addi_common.c and add it to
    each addi-data driver. Rename the data and functions so they
    have namespace associated with the drivers.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index edc0eb0d113f..86e17809b024 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -4,12 +4,11 @@
 #include "addi-data/addi_common.h"
 #include "addi-data/addi_amcc_s5933.h"
 
-#define ADDIDATA_DRIVER_NAME	"addi_apci_3xxx"
-
 #include "addi-data/addi_eeprom.c"
 #include "addi-data/hwdrv_apci3xxx.c"
+#include "addi-data/addi_common.c"
 
-static const struct addi_board boardtypes[] = {
+static const struct addi_board apci3xxx_boardtypes[] = {
 	{
 		.pc_DriverName		= "apci3000-16",
 		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
@@ -778,7 +777,28 @@ static const struct addi_board boardtypes[] = {
 	},
 };
 
-static DEFINE_PCI_DEVICE_TABLE(addi_apci_tbl) = {
+static struct comedi_driver apci3xxx_driver = {
+	.driver_name	= "addi_apci_3xxx",
+	.module		= THIS_MODULE,
+	.attach		= i_ADDI_Attach,
+	.detach		= i_ADDI_Detach,
+	.num_names	= ARRAY_SIZE(apci3xxx_boardtypes),
+	.board_name	= &apci3xxx_boardtypes[0].pc_DriverName,
+	.offset		= sizeof(struct addi_board),
+};
+
+static int __devinit apci3xxx_pci_probe(struct pci_dev *dev,
+					const struct pci_device_id *ent)
+{
+	return comedi_pci_auto_config(dev, &apci3xxx_driver);
+}
+
+static void __devexit apci3xxx_pci_remove(struct pci_dev *dev)
+{
+	comedi_pci_auto_unconfig(dev);
+}
+
+static DEFINE_PCI_DEVICE_TABLE(apci3xxx_pci_table) = {
 	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x3010) },
 	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x300f) },
 	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x300e) },
@@ -806,9 +826,15 @@ static DEFINE_PCI_DEVICE_TABLE(addi_apci_tbl) = {
 	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x3024) },
 	{ 0 }
 };
-MODULE_DEVICE_TABLE(pci, addi_apci_tbl);
+MODULE_DEVICE_TABLE(pci, apci3xxx_pci_table);
 
-#include "addi-data/addi_common.c"
+static struct pci_driver apci3xxx_pci_driver = {
+	.name		= "addi_apci_3xxx",
+	.id_table	= apci3xxx_pci_table,
+	.probe		= apci3xxx_pci_probe,
+	.remove		= __devexit_p(apci3xxx_pci_remove),
+};
+module_comedi_pci_driver(apci3xxx_driver, apci3xxx_pci_driver);
 
 MODULE_AUTHOR("Comedi http://www.comedi.org");
 MODULE_DESCRIPTION("Comedi low-level driver");

commit c33ef61ff9f731efa4a630a9566a4cdf8945f4af
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Tue Oct 30 18:06:13 2012 -0700

    staging: comedi: addi_apci_*: remove unneeded CONFIG_APCI_* defines
    
    These defines were needed for the #ifdef'ery that used to exist
    in addi_common.c. Since that has been removed these are no longer
    used.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index d26982386765..edc0eb0d113f 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -4,8 +4,6 @@
 #include "addi-data/addi_common.h"
 #include "addi-data/addi_amcc_s5933.h"
 
-#define CONFIG_APCI_3XXX 1
-
 #define ADDIDATA_DRIVER_NAME	"addi_apci_3xxx"
 
 #include "addi-data/addi_eeprom.c"

commit c0a053b8b24d72413a82a16a41f635e6040ccf34
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Mon Oct 29 16:52:36 2012 -0700

    staging: comedi: addi-data: remove the boardinfo #ifdef'ery
    
    Move the boardinfo for each addi-data driver from addi_common.c to
    the individual driver files. This removes the need #ifdef'ery.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 9739b67d210f..d26982386765 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -10,6 +10,776 @@
 
 #include "addi-data/addi_eeprom.c"
 #include "addi-data/hwdrv_apci3xxx.c"
+
+static const struct addi_board boardtypes[] = {
+	{
+		.pc_DriverName		= "apci3000-16",
+		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
+		.i_DeviceId		= 0x3010,
+		.i_IorangeBase0		= 256,
+		.i_IorangeBase1		= 256,
+		.i_IorangeBase2		= 256,
+		.i_IorangeBase3		= 256,
+		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
+		.pc_EepromChip		= ADDIDATA_9054,
+		.i_NbrAiChannel		= 16,
+		.i_NbrAiChannelDiff	= 8,
+		.i_AiChannelList	= 16,
+		.i_AiMaxdata		= 4095,
+		.pr_AiRangelist		= &range_apci3XXX_ai,
+		.i_NbrTTLChannel	= 24,
+		.b_AvailableConvertUnit	= 6,
+		.ui_MinAcquisitiontimeNs = 10000,
+		.interrupt		= v_APCI3XXX_Interrupt,
+		.reset			= i_APCI3XXX_Reset,
+		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
+		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
+		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
+		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
+		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
+		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
+	}, {
+		.pc_DriverName		= "apci3000-8",
+		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
+		.i_DeviceId		= 0x300F,
+		.i_IorangeBase0		= 256,
+		.i_IorangeBase1		= 256,
+		.i_IorangeBase2		= 256,
+		.i_IorangeBase3		= 256,
+		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
+		.pc_EepromChip		= ADDIDATA_9054,
+		.i_NbrAiChannel		= 8,
+		.i_NbrAiChannelDiff	= 4,
+		.i_AiChannelList	= 8,
+		.i_AiMaxdata		= 4095,
+		.pr_AiRangelist		= &range_apci3XXX_ai,
+		.i_NbrTTLChannel	= 24,
+		.b_AvailableConvertUnit	= 6,
+		.ui_MinAcquisitiontimeNs = 10000,
+		.interrupt		= v_APCI3XXX_Interrupt,
+		.reset			= i_APCI3XXX_Reset,
+		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
+		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
+		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
+		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
+		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
+		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
+	}, {
+		.pc_DriverName		= "apci3000-4",
+		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
+		.i_DeviceId		= 0x300E,
+		.i_IorangeBase0		= 256,
+		.i_IorangeBase1		= 256,
+		.i_IorangeBase2		= 256,
+		.i_IorangeBase3		= 256,
+		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
+		.pc_EepromChip		= ADDIDATA_9054,
+		.i_NbrAiChannel		= 4,
+		.i_NbrAiChannelDiff	= 2,
+		.i_AiChannelList	= 4,
+		.i_AiMaxdata		= 4095,
+		.pr_AiRangelist		= &range_apci3XXX_ai,
+		.i_NbrTTLChannel	= 24,
+		.b_AvailableConvertUnit	= 6,
+		.ui_MinAcquisitiontimeNs = 10000,
+		.interrupt		= v_APCI3XXX_Interrupt,
+		.reset			= i_APCI3XXX_Reset,
+		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
+		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
+		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
+		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
+		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
+		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
+	}, {
+		.pc_DriverName		= "apci3006-16",
+		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
+		.i_DeviceId		= 0x3013,
+		.i_IorangeBase0		= 256,
+		.i_IorangeBase1		= 256,
+		.i_IorangeBase2		= 256,
+		.i_IorangeBase3		= 256,
+		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
+		.pc_EepromChip		= ADDIDATA_9054,
+		.i_NbrAiChannel		= 16,
+		.i_NbrAiChannelDiff	= 8,
+		.i_AiChannelList	= 16,
+		.i_AiMaxdata		= 65535,
+		.pr_AiRangelist		= &range_apci3XXX_ai,
+		.i_NbrTTLChannel	= 24,
+		.b_AvailableConvertUnit	= 6,
+		.ui_MinAcquisitiontimeNs = 10000,
+		.interrupt		= v_APCI3XXX_Interrupt,
+		.reset			= i_APCI3XXX_Reset,
+		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
+		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
+		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
+		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
+		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
+		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
+	}, {
+		.pc_DriverName		= "apci3006-8",
+		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
+		.i_DeviceId		= 0x3014,
+		.i_IorangeBase0		= 256,
+		.i_IorangeBase1		= 256,
+		.i_IorangeBase2		= 256,
+		.i_IorangeBase3		= 256,
+		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
+		.pc_EepromChip		= ADDIDATA_9054,
+		.i_NbrAiChannel		= 8,
+		.i_NbrAiChannelDiff	= 4,
+		.i_AiChannelList	= 8,
+		.i_AiMaxdata		= 65535,
+		.pr_AiRangelist		= &range_apci3XXX_ai,
+		.i_NbrTTLChannel	= 24,
+		.b_AvailableConvertUnit	= 6,
+		.ui_MinAcquisitiontimeNs = 10000,
+		.interrupt		= v_APCI3XXX_Interrupt,
+		.reset			= i_APCI3XXX_Reset,
+		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
+		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
+		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
+		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
+		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
+		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
+	}, {
+		.pc_DriverName		= "apci3006-4",
+		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
+		.i_DeviceId		= 0x3015,
+		.i_IorangeBase0		= 256,
+		.i_IorangeBase1		= 256,
+		.i_IorangeBase2		= 256,
+		.i_IorangeBase3		= 256,
+		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
+		.pc_EepromChip		= ADDIDATA_9054,
+		.i_NbrAiChannel		= 4,
+		.i_NbrAiChannelDiff	= 2,
+		.i_AiChannelList	= 4,
+		.i_AiMaxdata		= 65535,
+		.pr_AiRangelist		= &range_apci3XXX_ai,
+		.i_NbrTTLChannel	= 24,
+		.b_AvailableConvertUnit	= 6,
+		.ui_MinAcquisitiontimeNs = 10000,
+		.interrupt		= v_APCI3XXX_Interrupt,
+		.reset			= i_APCI3XXX_Reset,
+		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
+		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
+		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
+		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
+		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
+		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
+	}, {
+		.pc_DriverName		= "apci3010-16",
+		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
+		.i_DeviceId		= 0x3016,
+		.i_IorangeBase0		= 256,
+		.i_IorangeBase1		= 256,
+		.i_IorangeBase2		= 256,
+		.i_IorangeBase3		= 256,
+		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
+		.pc_EepromChip		= ADDIDATA_9054,
+		.i_NbrAiChannel		= 16,
+		.i_NbrAiChannelDiff	= 8,
+		.i_AiChannelList	= 16,
+		.i_AiMaxdata		= 4095,
+		.pr_AiRangelist		= &range_apci3XXX_ai,
+		.i_NbrDiChannel		= 4,
+		.i_NbrDoChannel		= 4,
+		.i_DoMaxdata		= 1,
+		.i_NbrTTLChannel	= 24,
+		.b_AvailableConvertUnit	= 6,
+		.ui_MinAcquisitiontimeNs = 5000,
+		.interrupt		= v_APCI3XXX_Interrupt,
+		.reset			= i_APCI3XXX_Reset,
+		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
+		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
+		.di_read		= i_APCI3XXX_InsnReadDigitalInput,
+		.di_bits		= i_APCI3XXX_InsnBitsDigitalInput,
+		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
+		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
+		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
+		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
+		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
+		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
+		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
+	}, {
+		.pc_DriverName		= "apci3010-8",
+		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
+		.i_DeviceId		= 0x3017,
+		.i_IorangeBase0		= 256,
+		.i_IorangeBase1		= 256,
+		.i_IorangeBase2		= 256,
+		.i_IorangeBase3		= 256,
+		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
+		.pc_EepromChip		= ADDIDATA_9054,
+		.i_NbrAiChannel		= 8,
+		.i_NbrAiChannelDiff	= 4,
+		.i_AiChannelList	= 8,
+		.i_AiMaxdata		= 4095,
+		.pr_AiRangelist		= &range_apci3XXX_ai,
+		.i_NbrDiChannel		= 4,
+		.i_NbrDoChannel		= 4,
+		.i_DoMaxdata		= 1,
+		.i_NbrTTLChannel	= 24,
+		.b_AvailableConvertUnit	= 6,
+		.ui_MinAcquisitiontimeNs = 5000,
+		.interrupt		= v_APCI3XXX_Interrupt,
+		.reset			= i_APCI3XXX_Reset,
+		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
+		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
+		.di_read		= i_APCI3XXX_InsnReadDigitalInput,
+		.di_bits		= i_APCI3XXX_InsnBitsDigitalInput,
+		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
+		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
+		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
+		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
+		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
+		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
+		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
+	}, {
+		.pc_DriverName		= "apci3010-4",
+		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
+		.i_DeviceId		= 0x3018,
+		.i_IorangeBase0		= 256,
+		.i_IorangeBase1		= 256,
+		.i_IorangeBase2		= 256,
+		.i_IorangeBase3		= 256,
+		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
+		.pc_EepromChip		= ADDIDATA_9054,
+		.i_NbrAiChannel		= 4,
+		.i_NbrAiChannelDiff	= 2,
+		.i_AiChannelList	= 4,
+		.i_AiMaxdata		= 4095,
+		.pr_AiRangelist		= &range_apci3XXX_ai,
+		.i_NbrDiChannel		= 4,
+		.i_NbrDoChannel		= 4,
+		.i_DoMaxdata		= 1,
+		.i_NbrTTLChannel	= 24,
+		.b_AvailableConvertUnit	= 6,
+		.ui_MinAcquisitiontimeNs = 5000,
+		.interrupt		= v_APCI3XXX_Interrupt,
+		.reset			= i_APCI3XXX_Reset,
+		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
+		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
+		.di_read		= i_APCI3XXX_InsnReadDigitalInput,
+		.di_bits		= i_APCI3XXX_InsnBitsDigitalInput,
+		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
+		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
+		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
+		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
+		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
+		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
+		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
+	}, {
+		.pc_DriverName		= "apci3016-16",
+		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
+		.i_DeviceId		= 0x3019,
+		.i_IorangeBase0		= 256,
+		.i_IorangeBase1		= 256,
+		.i_IorangeBase2		= 256,
+		.i_IorangeBase3		= 256,
+		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
+		.pc_EepromChip		= ADDIDATA_9054,
+		.i_NbrAiChannel		= 16,
+		.i_NbrAiChannelDiff	= 8,
+		.i_AiChannelList	= 16,
+		.i_AiMaxdata		= 65535,
+		.pr_AiRangelist		= &range_apci3XXX_ai,
+		.i_NbrDiChannel		= 4,
+		.i_NbrDoChannel		= 4,
+		.i_DoMaxdata		= 1,
+		.i_NbrTTLChannel	= 24,
+		.b_AvailableConvertUnit	= 6,
+		.ui_MinAcquisitiontimeNs = 5000,
+		.interrupt		= v_APCI3XXX_Interrupt,
+		.reset			= i_APCI3XXX_Reset,
+		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
+		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
+		.di_read		= i_APCI3XXX_InsnReadDigitalInput,
+		.di_bits		= i_APCI3XXX_InsnBitsDigitalInput,
+		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
+		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
+		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
+		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
+		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
+		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
+		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
+	}, {
+		.pc_DriverName		= "apci3016-8",
+		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
+		.i_DeviceId		= 0x301A,
+		.i_IorangeBase0		= 256,
+		.i_IorangeBase1		= 256,
+		.i_IorangeBase2		= 256,
+		.i_IorangeBase3		= 256,
+		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
+		.pc_EepromChip		= ADDIDATA_9054,
+		.i_NbrAiChannel		= 8,
+		.i_NbrAiChannelDiff	= 4,
+		.i_AiChannelList	= 8,
+		.i_AiMaxdata		= 65535,
+		.pr_AiRangelist		= &range_apci3XXX_ai,
+		.i_NbrDiChannel		= 4,
+		.i_NbrDoChannel		= 4,
+		.i_DoMaxdata		= 1,
+		.i_NbrTTLChannel	= 24,
+		.b_AvailableConvertUnit	= 6,
+		.ui_MinAcquisitiontimeNs = 5000,
+		.interrupt		= v_APCI3XXX_Interrupt,
+		.reset			= i_APCI3XXX_Reset,
+		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
+		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
+		.di_read		= i_APCI3XXX_InsnReadDigitalInput,
+		.di_bits		= i_APCI3XXX_InsnBitsDigitalInput,
+		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
+		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
+		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
+		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
+		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
+		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
+		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
+	}, {
+		.pc_DriverName		= "apci3016-4",
+		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
+		.i_DeviceId		= 0x301B,
+		.i_IorangeBase0		= 256,
+		.i_IorangeBase1		= 256,
+		.i_IorangeBase2		= 256,
+		.i_IorangeBase3		= 256,
+		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
+		.pc_EepromChip		= ADDIDATA_9054,
+		.i_NbrAiChannel		= 4,
+		.i_NbrAiChannelDiff	= 2,
+		.i_AiChannelList	= 4,
+		.i_AiMaxdata		= 65535,
+		.pr_AiRangelist		= &range_apci3XXX_ai,
+		.i_NbrDiChannel		= 4,
+		.i_NbrDoChannel		= 4,
+		.i_DoMaxdata		= 1,
+		.i_NbrTTLChannel	= 24,
+		.b_AvailableConvertUnit	= 6,
+		.ui_MinAcquisitiontimeNs = 5000,
+		.interrupt		= v_APCI3XXX_Interrupt,
+		.reset			= i_APCI3XXX_Reset,
+		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
+		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
+		.di_read		= i_APCI3XXX_InsnReadDigitalInput,
+		.di_bits		= i_APCI3XXX_InsnBitsDigitalInput,
+		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
+		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
+		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
+		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
+		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
+		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
+		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
+	}, {
+		.pc_DriverName		= "apci3100-16-4",
+		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
+		.i_DeviceId		= 0x301C,
+		.i_IorangeBase0		= 256,
+		.i_IorangeBase1		= 256,
+		.i_IorangeBase2		= 256,
+		.i_IorangeBase3		= 256,
+		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
+		.pc_EepromChip		= ADDIDATA_9054,
+		.i_NbrAiChannel		= 16,
+		.i_NbrAiChannelDiff	= 8,
+		.i_AiChannelList	= 16,
+		.i_NbrAoChannel		= 4,
+		.i_AiMaxdata		= 4095,
+		.i_AoMaxdata		= 4095,
+		.pr_AiRangelist		= &range_apci3XXX_ai,
+		.pr_AoRangelist		= &range_apci3XXX_ao,
+		.i_NbrTTLChannel	= 24,
+		.b_AvailableConvertUnit	= 6,
+		.ui_MinAcquisitiontimeNs = 10000,
+		.interrupt		= v_APCI3XXX_Interrupt,
+		.reset			= i_APCI3XXX_Reset,
+		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
+		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
+		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
+		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
+		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
+		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
+		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
+	}, {
+		.pc_DriverName		= "apci3100-8-4",
+		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
+		.i_DeviceId		= 0x301D,
+		.i_IorangeBase0		= 256,
+		.i_IorangeBase1		= 256,
+		.i_IorangeBase2		= 256,
+		.i_IorangeBase3		= 256,
+		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
+		.pc_EepromChip		= ADDIDATA_9054,
+		.i_NbrAiChannel		= 8,
+		.i_NbrAiChannelDiff	= 4,
+		.i_AiChannelList	= 8,
+		.i_NbrAoChannel		= 4,
+		.i_AiMaxdata		= 4095,
+		.i_AoMaxdata		= 4095,
+		.pr_AiRangelist		= &range_apci3XXX_ai,
+		.pr_AoRangelist		= &range_apci3XXX_ao,
+		.i_NbrTTLChannel	= 24,
+		.b_AvailableConvertUnit	= 6,
+		.ui_MinAcquisitiontimeNs = 10000,
+		.interrupt		= v_APCI3XXX_Interrupt,
+		.reset			= i_APCI3XXX_Reset,
+		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
+		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
+		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
+		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
+		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
+		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
+		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
+	}, {
+		.pc_DriverName		= "apci3106-16-4",
+		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
+		.i_DeviceId		= 0x301E,
+		.i_IorangeBase0		= 256,
+		.i_IorangeBase1		= 256,
+		.i_IorangeBase2		= 256,
+		.i_IorangeBase3		= 256,
+		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
+		.pc_EepromChip		= ADDIDATA_9054,
+		.i_NbrAiChannel		= 16,
+		.i_NbrAiChannelDiff	= 8,
+		.i_AiChannelList	= 16,
+		.i_NbrAoChannel		= 4,
+		.i_AiMaxdata		= 65535,
+		.i_AoMaxdata		= 4095,
+		.pr_AiRangelist		= &range_apci3XXX_ai,
+		.pr_AoRangelist		= &range_apci3XXX_ao,
+		.i_NbrTTLChannel	= 24,
+		.b_AvailableConvertUnit	= 6,
+		.ui_MinAcquisitiontimeNs = 10000,
+		.interrupt		= v_APCI3XXX_Interrupt,
+		.reset			= i_APCI3XXX_Reset,
+		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
+		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
+		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
+		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
+		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
+		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
+		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
+	}, {
+		.pc_DriverName		= "apci3106-8-4",
+		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
+		.i_DeviceId		= 0x301F,
+		.i_IorangeBase0		= 256,
+		.i_IorangeBase1		= 256,
+		.i_IorangeBase2		= 256,
+		.i_IorangeBase3		= 256,
+		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
+		.pc_EepromChip		= ADDIDATA_9054,
+		.i_NbrAiChannel		= 8,
+		.i_NbrAiChannelDiff	= 4,
+		.i_AiChannelList	= 8,
+		.i_NbrAoChannel		= 4,
+		.i_AiMaxdata		= 65535,
+		.i_AoMaxdata		= 4095,
+		.pr_AiRangelist		= &range_apci3XXX_ai,
+		.pr_AoRangelist		= &range_apci3XXX_ao,
+		.i_NbrTTLChannel	= 24,
+		.b_AvailableConvertUnit	= 6,
+		.ui_MinAcquisitiontimeNs = 10000,
+		.interrupt		= v_APCI3XXX_Interrupt,
+		.reset			= i_APCI3XXX_Reset,
+		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
+		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
+		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
+		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
+		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
+		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
+		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
+	}, {
+		.pc_DriverName		= "apci3110-16-4",
+		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
+		.i_DeviceId		= 0x3020,
+		.i_IorangeBase0		= 256,
+		.i_IorangeBase1		= 256,
+		.i_IorangeBase2		= 256,
+		.i_IorangeBase3		= 256,
+		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
+		.pc_EepromChip		= ADDIDATA_9054,
+		.i_NbrAiChannel		= 16,
+		.i_NbrAiChannelDiff	= 8,
+		.i_AiChannelList	= 16,
+		.i_NbrAoChannel		= 4,
+		.i_AiMaxdata		= 4095,
+		.i_AoMaxdata		= 4095,
+		.pr_AiRangelist		= &range_apci3XXX_ai,
+		.pr_AoRangelist		= &range_apci3XXX_ao,
+		.i_NbrDiChannel		= 4,
+		.i_NbrDoChannel		= 4,
+		.i_DoMaxdata		= 1,
+		.i_NbrTTLChannel	= 24,
+		.b_AvailableConvertUnit	= 6,
+		.ui_MinAcquisitiontimeNs = 5000,
+		.interrupt		= v_APCI3XXX_Interrupt,
+		.reset			= i_APCI3XXX_Reset,
+		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
+		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
+		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
+		.di_read		= i_APCI3XXX_InsnReadDigitalInput,
+		.di_bits		= i_APCI3XXX_InsnBitsDigitalInput,
+		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
+		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
+		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
+		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
+		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
+		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
+		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
+	}, {
+		.pc_DriverName		= "apci3110-8-4",
+		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
+		.i_DeviceId		= 0x3021,
+		.i_IorangeBase0		= 256,
+		.i_IorangeBase1		= 256,
+		.i_IorangeBase2		= 256,
+		.i_IorangeBase3		= 256,
+		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
+		.pc_EepromChip		= ADDIDATA_9054,
+		.i_NbrAiChannel		= 8,
+		.i_NbrAiChannelDiff	= 4,
+		.i_AiChannelList	= 8,
+		.i_NbrAoChannel		= 4,
+		.i_AiMaxdata		= 4095,
+		.i_AoMaxdata		= 4095,
+		.pr_AiRangelist		= &range_apci3XXX_ai,
+		.pr_AoRangelist		= &range_apci3XXX_ao,
+		.i_NbrDiChannel		= 4,
+		.i_NbrDoChannel		= 4,
+		.i_DoMaxdata		= 1,
+		.i_NbrTTLChannel	= 24,
+		.b_AvailableConvertUnit	= 6,
+		.ui_MinAcquisitiontimeNs = 5000,
+		.interrupt		= v_APCI3XXX_Interrupt,
+		.reset			= i_APCI3XXX_Reset,
+		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
+		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
+		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
+		.di_read		= i_APCI3XXX_InsnReadDigitalInput,
+		.di_bits		= i_APCI3XXX_InsnBitsDigitalInput,
+		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
+		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
+		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
+		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
+		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
+		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
+		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
+	}, {
+		.pc_DriverName		= "apci3116-16-4",
+		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
+		.i_DeviceId		= 0x3022,
+		.i_IorangeBase0		= 256,
+		.i_IorangeBase1		= 256,
+		.i_IorangeBase2		= 256,
+		.i_IorangeBase3		= 256,
+		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
+		.pc_EepromChip		= ADDIDATA_9054,
+		.i_NbrAiChannel		= 16,
+		.i_NbrAiChannelDiff	= 8,
+		.i_AiChannelList	= 16,
+		.i_NbrAoChannel		= 4,
+		.i_AiMaxdata		= 65535,
+		.i_AoMaxdata		= 4095,
+		.pr_AiRangelist		= &range_apci3XXX_ai,
+		.pr_AoRangelist		= &range_apci3XXX_ao,
+		.i_NbrDiChannel		= 4,
+		.i_NbrDoChannel		= 4,
+		.i_DoMaxdata		= 1,
+		.i_NbrTTLChannel	= 24,
+		.b_AvailableConvertUnit	= 6,
+		.ui_MinAcquisitiontimeNs = 5000,
+		.interrupt		= v_APCI3XXX_Interrupt,
+		.reset			= i_APCI3XXX_Reset,
+		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
+		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
+		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
+		.di_read		= i_APCI3XXX_InsnReadDigitalInput,
+		.di_bits		= i_APCI3XXX_InsnBitsDigitalInput,
+		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
+		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
+		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
+		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
+		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
+		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
+		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
+	}, {
+		.pc_DriverName		= "apci3116-8-4",
+		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
+		.i_DeviceId		= 0x3023,
+		.i_IorangeBase0		= 256,
+		.i_IorangeBase1		= 256,
+		.i_IorangeBase2		= 256,
+		.i_IorangeBase3		= 256,
+		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
+		.pc_EepromChip		= ADDIDATA_9054,
+		.i_NbrAiChannel		= 8,
+		.i_NbrAiChannelDiff	= 4,
+		.i_AiChannelList	= 8,
+		.i_NbrAoChannel		= 4,
+		.i_AiMaxdata		= 65535,
+		.i_AoMaxdata		= 4095,
+		.pr_AiRangelist		= &range_apci3XXX_ai,
+		.pr_AoRangelist		= &range_apci3XXX_ao,
+		.i_NbrDiChannel		= 4,
+		.i_NbrDoChannel		= 4,
+		.i_DoMaxdata		= 1,
+		.i_NbrTTLChannel	= 24,
+		.b_AvailableConvertUnit	= 6,
+		.ui_MinAcquisitiontimeNs = 5000,
+		.interrupt		= v_APCI3XXX_Interrupt,
+		.reset			= i_APCI3XXX_Reset,
+		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
+		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
+		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
+		.di_read		= i_APCI3XXX_InsnReadDigitalInput,
+		.di_bits		= i_APCI3XXX_InsnBitsDigitalInput,
+		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
+		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
+		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
+		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
+		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
+		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
+		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
+	}, {
+		.pc_DriverName		= "apci3003",
+		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
+		.i_DeviceId		= 0x300B,
+		.i_IorangeBase0		= 256,
+		.i_IorangeBase1		= 256,
+		.i_IorangeBase2		= 256,
+		.i_IorangeBase3		= 256,
+		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
+		.pc_EepromChip		= ADDIDATA_9054,
+		.i_NbrAiChannelDiff	= 4,
+		.i_AiChannelList	= 4,
+		.i_AiMaxdata		= 65535,
+		.pr_AiRangelist		= &range_apci3XXX_ai,
+		.i_NbrDiChannel		= 4,
+		.i_NbrDoChannel		= 4,
+		.i_DoMaxdata		= 1,
+		.b_AvailableConvertUnit	= 7,
+		.ui_MinAcquisitiontimeNs = 2500,
+		.interrupt		= v_APCI3XXX_Interrupt,
+		.reset			= i_APCI3XXX_Reset,
+		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
+		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
+		.di_read		= i_APCI3XXX_InsnReadDigitalInput,
+		.di_bits		= i_APCI3XXX_InsnBitsDigitalInput,
+		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
+		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
+		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
+	}, {
+		.pc_DriverName		= "apci3002-16",
+		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
+		.i_DeviceId		= 0x3002,
+		.i_IorangeBase0		= 256,
+		.i_IorangeBase1		= 256,
+		.i_IorangeBase2		= 256,
+		.i_IorangeBase3		= 256,
+		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
+		.pc_EepromChip		= ADDIDATA_9054,
+		.i_NbrAiChannelDiff	= 16,
+		.i_AiChannelList	= 16,
+		.i_AiMaxdata		= 65535,
+		.pr_AiRangelist		= &range_apci3XXX_ai,
+		.i_NbrDiChannel		= 4,
+		.i_NbrDoChannel		= 4,
+		.i_DoMaxdata		= 1,
+		.b_AvailableConvertUnit	= 6,
+		.ui_MinAcquisitiontimeNs = 5000,
+		.interrupt		= v_APCI3XXX_Interrupt,
+		.reset			= i_APCI3XXX_Reset,
+		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
+		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
+		.di_read		= i_APCI3XXX_InsnReadDigitalInput,
+		.di_bits		= i_APCI3XXX_InsnBitsDigitalInput,
+		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
+		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
+		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
+	}, {
+		.pc_DriverName		= "apci3002-8",
+		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
+		.i_DeviceId		= 0x3003,
+		.i_IorangeBase0		= 256,
+		.i_IorangeBase1		= 256,
+		.i_IorangeBase2		= 256,
+		.i_IorangeBase3		= 256,
+		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
+		.pc_EepromChip		= ADDIDATA_9054,
+		.i_NbrAiChannelDiff	= 8,
+		.i_AiChannelList	= 8,
+		.i_AiMaxdata		= 65535,
+		.pr_AiRangelist		= &range_apci3XXX_ai,
+		.i_NbrDiChannel		= 4,
+		.i_NbrDoChannel		= 4,
+		.i_DoMaxdata		= 1,
+		.b_AvailableConvertUnit	= 6,
+		.ui_MinAcquisitiontimeNs = 5000,
+		.interrupt		= v_APCI3XXX_Interrupt,
+		.reset			= i_APCI3XXX_Reset,
+		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
+		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
+		.di_read		= i_APCI3XXX_InsnReadDigitalInput,
+		.di_bits		= i_APCI3XXX_InsnBitsDigitalInput,
+		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
+		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
+		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
+	}, {
+		.pc_DriverName		= "apci3002-4",
+		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
+		.i_DeviceId		= 0x3004,
+		.i_IorangeBase0		= 256,
+		.i_IorangeBase1		= 256,
+		.i_IorangeBase2		= 256,
+		.i_IorangeBase3		= 256,
+		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
+		.pc_EepromChip		= ADDIDATA_9054,
+		.i_NbrAiChannelDiff	= 4,
+		.i_AiChannelList	= 4,
+		.i_AiMaxdata		= 65535,
+		.pr_AiRangelist		= &range_apci3XXX_ai,
+		.i_NbrDiChannel		= 4,
+		.i_NbrDoChannel		= 4,
+		.i_DoMaxdata		= 1,
+		.b_AvailableConvertUnit	= 6,
+		.ui_MinAcquisitiontimeNs = 5000,
+		.interrupt		= v_APCI3XXX_Interrupt,
+		.reset			= i_APCI3XXX_Reset,
+		.ai_config		= i_APCI3XXX_InsnConfigAnalogInput,
+		.ai_read		= i_APCI3XXX_InsnReadAnalogInput,
+		.di_read		= i_APCI3XXX_InsnReadDigitalInput,
+		.di_bits		= i_APCI3XXX_InsnBitsDigitalInput,
+		.do_write		= i_APCI3XXX_InsnWriteDigitalOutput,
+		.do_bits		= i_APCI3XXX_InsnBitsDigitalOutput,
+		.do_read		= i_APCI3XXX_InsnReadDigitalOutput,
+	}, {
+		.pc_DriverName		= "apci3500",
+		.i_VendorId		= PCI_VENDOR_ID_ADDIDATA,
+		.i_DeviceId		= 0x3024,
+		.i_IorangeBase0		= 256,
+		.i_IorangeBase1		= 256,
+		.i_IorangeBase2		= 256,
+		.i_IorangeBase3		= 256,
+		.i_PCIEeprom		= ADDIDATA_NO_EEPROM,
+		.pc_EepromChip		= ADDIDATA_9054,
+		.i_NbrAoChannel		= 4,
+		.i_AoMaxdata		= 4095,
+		.pr_AoRangelist		= &range_apci3XXX_ao,
+		.i_NbrTTLChannel	= 24,
+		.interrupt		= v_APCI3XXX_Interrupt,
+		.reset			= i_APCI3XXX_Reset,
+		.ao_write		= i_APCI3XXX_InsnWriteAnalogOutput,
+		.ttl_config		= i_APCI3XXX_InsnConfigInitTTLIO,
+		.ttl_bits		= i_APCI3XXX_InsnBitsTTLIO,
+		.ttl_read		= i_APCI3XXX_InsnReadTTLIO,
+		.ttl_write		= i_APCI3XXX_InsnWriteTTLIO,
+	},
+};
+
 static DEFINE_PCI_DEVICE_TABLE(addi_apci_tbl) = {
 	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x3010) },
 	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x300f) },

commit 317285d71acccbda2fbab7e53d6b33c52a151a32
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Mon Oct 29 16:52:20 2012 -0700

    staging: comedi: addi-data: remove the MODULE_DEVICE_TABLE #ifdef'ery
    
    Move the MODULE_DEVICE_TABLE for each addi-data driver from addi_common.c
    to the individual driver files. This removes the need #ifdef'ery.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index c5205d3e25dd..9739b67d210f 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -10,6 +10,36 @@
 
 #include "addi-data/addi_eeprom.c"
 #include "addi-data/hwdrv_apci3xxx.c"
+static DEFINE_PCI_DEVICE_TABLE(addi_apci_tbl) = {
+	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x3010) },
+	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x300f) },
+	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x300e) },
+	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x3013) },
+	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x3014) },
+	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x3015) },
+	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x3016) },
+	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x3017) },
+	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x3018) },
+	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x3019) },
+	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x301a) },
+	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x301b) },
+	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x301c) },
+	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x301d) },
+	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x301e) },
+	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x301f) },
+	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x3020) },
+	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x3021) },
+	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x3022) },
+	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x3023) },
+	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x300B) },
+	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x3002) },
+	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x3003) },
+	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x3004) },
+	{ PCI_DEVICE(PCI_VENDOR_ID_ADDIDATA, 0x3024) },
+	{ 0 }
+};
+MODULE_DEVICE_TABLE(pci, addi_apci_tbl);
+
 #include "addi-data/addi_common.c"
 
 MODULE_AUTHOR("Comedi http://www.comedi.org");

commit bf6a1578c10a4f3ef94a3c744267f18f9c3642bd
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Mon Oct 29 16:52:03 2012 -0700

    staging: comedi: addi-data: remove the addi-data #include ifdef'ery
    
    Move the addi-data specific #include's from addi_common.h to the
    individual driver files.
    
    The apci-1710, apci-3200, and apci-3300 drivers still have floating
    point code in them and are currently disabled in the Kconfig and
    Makefile. For now, move the fpu_{begin,end} functions from addi_common.c
    to the main driver file so we can get rid of the #ifdef'ery.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index fc3d50fcecfe..c5205d3e25dd 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -8,6 +8,8 @@
 
 #define ADDIDATA_DRIVER_NAME	"addi_apci_3xxx"
 
+#include "addi-data/addi_eeprom.c"
+#include "addi-data/hwdrv_apci3xxx.c"
 #include "addi-data/addi_common.c"
 
 MODULE_AUTHOR("Comedi http://www.comedi.org");

commit 3d41c44370a9a1e78e53c9997289347ec97d46ee
Author: H Hartley Sweeten <hartleys@visionengravers.com>
Date:   Mon Oct 29 16:51:33 2012 -0700

    staging: comedi: addi-data: move the main #include's to the drivers
    
    The addi-data drivers are all built by the main driver files including
    addi-data/addi_common.c. That file then includes other files depending
    on what driver is being compiled. This is makes the code quite messy
    and hard to follow.
    
    Start cleaning it up by removing the unneeded #include's in addi_common.c
    and moving the some of the comedi #include's into the individual driver
    files.
    
    This is the first step in getting rid of the #ifdef'ery in addi_common.c.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 03161c88eac2..fc3d50fcecfe 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -1,3 +1,9 @@
+#include "../comedidev.h"
+#include "comedi_fc.h"
+
+#include "addi-data/addi_common.h"
+#include "addi-data/addi_amcc_s5933.h"
+
 #define CONFIG_APCI_3XXX 1
 
 #define ADDIDATA_DRIVER_NAME	"addi_apci_3xxx"

commit 90f703d30dd3e0c16ff80f35e34e511385a05ad5
Author: Arun Thomas <arun.thomas@gmail.com>
Date:   Sun Jun 6 22:23:29 2010 +0200

    Staging: comedi: Remove COMEDI_MODULES_MACRO
    
    Add MODULE_AUTHOR, MODULE_LICENSE, and MODULE_DESCRIPTION calls
    to the respective C source files instead of calling COMEDI_MODULES_MACRO
    
    Signed-off-by: Arun Thomas <arun.thomas@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index 942bc9e259a8..03161c88eac2 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -3,3 +3,7 @@
 #define ADDIDATA_DRIVER_NAME	"addi_apci_3xxx"
 
 #include "addi-data/addi_common.c"
+
+MODULE_AUTHOR("Comedi http://www.comedi.org");
+MODULE_DESCRIPTION("Comedi low-level driver");
+MODULE_LICENSE("GPL");

commit 6d8b0f5be5108f6a3fc922ca4acfbf10e14d6cd0
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Wed May 19 15:11:57 2010 +0100

    Staging: comedi: Give the addi_apci_* drivers different driver names
    
    It is not currently possible for more than one of the addi_apci_*
    drivers to register themselves with comedi at once because they all use
    the same comedi driver name "addi_common".  Give them different names.
    
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
index fb9deb7083bd..942bc9e259a8 100644
--- a/drivers/staging/comedi/drivers/addi_apci_3xxx.c
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -1,3 +1,5 @@
 #define CONFIG_APCI_3XXX 1
 
+#define ADDIDATA_DRIVER_NAME	"addi_apci_3xxx"
+
 #include "addi-data/addi_common.c"

commit c995fe9475e062bab6f5a45ed28cd2d3d955ef43
Author: ADDI-DATA GmbH <info@addi-data.com>
Date:   Thu Feb 12 15:14:18 2009 -0800

    Staging: comedi: add addi-data drivers
    
    This adds the addi-data family of comedi drivers to the staging tree
    
    From: ADDI-DATA GmbH <info@addi-data.com>
    Cc: David Schleef <ds@schleef.org>
    Cc: Frank Mori Hess <fmhess@users.sourceforge.net>
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/staging/comedi/drivers/addi_apci_3xxx.c b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
new file mode 100644
index 000000000000..fb9deb7083bd
--- /dev/null
+++ b/drivers/staging/comedi/drivers/addi_apci_3xxx.c
@@ -0,0 +1,3 @@
+#define CONFIG_APCI_3XXX 1
+
+#include "addi-data/addi_common.c"
