commit 3aff3c974b16b3db312e076a083b51a576db9ade
Author: Matej Dujava <mdujava@kocurkovo.cz>
Date:   Thu Apr 30 22:09:26 2020 +0200

    staging: sm750fb: print error message with actual value
    
    This patch will update error message, so it is same as error message in
    another function.
    
    Signed-off-by: Matej Dujava <mdujava@kocurkovo.cz>
    Link: https://lore.kernel.org/r/1588277366-19354-4-git-send-email-mdujava@kocurkovo.cz
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index c3ce7e653c7f..a1a82e59dfee 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -390,7 +390,7 @@ static int lynxfb_ops_set_par(struct fb_info *info)
 	var->accel_flags = 0;/*FB_ACCELF_TEXT;*/
 
 	if (ret) {
-		pr_err("pixel bpp format not satisfied\n.");
+		pr_err("bpp %d not supported\n", var->bits_per_pixel);
 		return ret;
 	}
 	ret = hw_sm750_crtc_setMode(crtc, var, fix);

commit b610e1193a917f4677eef7d52334865f5143c02a
Author: Matej Dujava <mdujava@kocurkovo.cz>
Date:   Thu Apr 30 22:09:25 2020 +0200

    staging: sm750fb: add common function to set color offsets and visual mode
    
    This patch will unify code for updating color offsets and frame buffer
    visual mode.
    
    Signed-off-by: Matej Dujava <mdujava@kocurkovo.cz>
    Link: https://lore.kernel.org/r/1588277366-19354-3-git-send-email-mdujava@kocurkovo.cz
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 39e610cc3c06..c3ce7e653c7f 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -297,6 +297,62 @@ static int lynxfb_ops_pan_display(struct fb_var_screeninfo *var,
 	return hw_sm750_pan_display(crtc, var, info);
 }
 
+static inline void lynxfb_set_visual_mode(struct fb_info *info)
+{
+	switch (info->var.bits_per_pixel) {
+	case 8:
+		info->fix.visual = FB_VISUAL_PSEUDOCOLOR;
+		break;
+	case 16:
+	case 24:
+	case 32:
+		info->fix.visual = FB_VISUAL_TRUECOLOR;
+		break;
+	default:
+		break;
+	}
+}
+
+static inline int lynxfb_set_color_offsets(struct fb_info *info)
+{
+	lynxfb_set_visual_mode(info);
+
+	switch (info->var.bits_per_pixel) {
+	case 8:
+		info->var.red.offset = 0;
+		info->var.red.length = 8;
+		info->var.green.offset = 0;
+		info->var.green.length = 8;
+		info->var.blue.offset = 0;
+		info->var.blue.length = 8;
+		info->var.transp.length = 0;
+		info->var.transp.offset = 0;
+		break;
+	case 16:
+		info->var.red.offset = 11;
+		info->var.red.length = 5;
+		info->var.green.offset = 5;
+		info->var.green.length = 6;
+		info->var.blue.offset = 0;
+		info->var.blue.length = 5;
+		info->var.transp.length = 0;
+		info->var.transp.offset = 0;
+		break;
+	case 24:
+	case 32:
+		info->var.red.offset = 16;
+		info->var.red.length = 8;
+		info->var.green.offset = 8;
+		info->var.green.length = 8;
+		info->var.blue.offset = 0;
+		info->var.blue.length = 8;
+		break;
+	default:
+		return -EINVAL;
+	}
+	return 0;
+}
+
 static int lynxfb_ops_set_par(struct fb_info *info)
 {
 	struct lynxfb_par *par;
@@ -328,43 +384,8 @@ static int lynxfb_ops_set_par(struct fb_info *info)
 	 * and these data should be set before setcolreg routine
 	 */
 
-	switch (var->bits_per_pixel) {
-	case 8:
-		fix->visual = FB_VISUAL_PSEUDOCOLOR;
-		var->red.offset = 0;
-		var->red.length = 8;
-		var->green.offset = 0;
-		var->green.length = 8;
-		var->blue.offset = 0;
-		var->blue.length = 8;
-		var->transp.length = 0;
-		var->transp.offset = 0;
-		break;
-	case 16:
-		var->red.offset = 11;
-		var->red.length = 5;
-		var->green.offset = 5;
-		var->green.length = 6;
-		var->blue.offset = 0;
-		var->blue.length = 5;
-		var->transp.length = 0;
-		var->transp.offset = 0;
-		fix->visual = FB_VISUAL_TRUECOLOR;
-		break;
-	case 24:
-	case 32:
-		var->red.offset = 16;
-		var->red.length = 8;
-		var->green.offset = 8;
-		var->green.length = 8;
-		var->blue.offset = 0;
-		var->blue.length = 8;
-		fix->visual = FB_VISUAL_TRUECOLOR;
-		break;
-	default:
-		ret = -EINVAL;
-		break;
-	}
+	ret = lynxfb_set_color_offsets(info);
+
 	var->height = var->width = -1;
 	var->accel_flags = 0;/*FB_ACCELF_TEXT;*/
 
@@ -511,10 +532,12 @@ static int lynxfb_resume(struct pci_dev *pdev)
 static int lynxfb_ops_check_var(struct fb_var_screeninfo *var,
 				struct fb_info *info)
 {
+	int ret;
 	struct lynxfb_par *par;
 	struct lynxfb_crtc *crtc;
 	resource_size_t request;
 
+	ret = 0;
 	par = info->par;
 	crtc = &par->crtc;
 
@@ -523,43 +546,13 @@ static int lynxfb_ops_check_var(struct fb_var_screeninfo *var,
 		 var->yres,
 		 var->bits_per_pixel);
 
-	switch (var->bits_per_pixel) {
-	case 8:
-		info->fix.visual = FB_VISUAL_PSEUDOCOLOR;
-		var->red.offset = 0;
-		var->red.length = 8;
-		var->green.offset = 0;
-		var->green.length = 8;
-		var->blue.offset = 0;
-		var->blue.length = 8;
-		var->transp.length = 0;
-		var->transp.offset = 0;
-		break;
-	case 16:
-		var->red.offset = 11;
-		var->red.length = 5;
-		var->green.offset = 5;
-		var->green.length = 6;
-		var->blue.offset = 0;
-		var->blue.length = 5;
-		var->transp.length = 0;
-		var->transp.offset = 0;
-		info->fix.visual = FB_VISUAL_TRUECOLOR;
-		break;
-	case 24:
-	case 32:
-		var->red.offset = 16;
-		var->red.length = 8;
-		var->green.offset = 8;
-		var->green.length = 8;
-		var->blue.offset = 0;
-		var->blue.length = 8;
-		info->fix.visual = FB_VISUAL_TRUECOLOR;
-		break;
-	default:
+	ret = lynxfb_set_color_offsets(info);
+
+	if (ret) {
 		pr_err("bpp %d not supported\n", var->bits_per_pixel);
-		return -EINVAL;
+		return ret;
 	}
+
 	var->height = var->width = -1;
 	var->accel_flags = 0;/* FB_ACCELF_TEXT; */
 
@@ -895,16 +888,8 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 	pr_info("fix->mmio_start = %lx\n", fix->mmio_start);
 	fix->mmio_len = sm750_dev->vidreg_size;
 	pr_info("fix->mmio_len = %x\n", fix->mmio_len);
-	switch (var->bits_per_pixel) {
-	case 8:
-		fix->visual = FB_VISUAL_PSEUDOCOLOR;
-		break;
-	case 16:
-	case 24:
-	case 32:
-		fix->visual = FB_VISUAL_TRUECOLOR;
-		break;
-	}
+
+	lynxfb_set_visual_mode(info);
 
 	/* set var */
 	var->activate = FB_ACTIVATE_NOW;

commit fa90133377f4a7f15a937df6ad55133bb57c5665
Author: Matej Dujava <mdujava@kocurkovo.cz>
Date:   Thu Apr 30 22:09:24 2020 +0200

    staging: sm750fb: add missing case while setting FB_VISUAL
    
    Switch statement does not contain all cases: 8, 16, 24, 32.
    This patch will add missing one (24)
    
    Fixes: 81dee67e215b ("staging: sm750fb: add sm750 to staging")
    Signed-off-by: Matej Dujava <mdujava@kocurkovo.cz>
    Link: https://lore.kernel.org/r/1588277366-19354-2-git-send-email-mdujava@kocurkovo.cz
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index e478290b60a8..39e610cc3c06 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -900,6 +900,7 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 		fix->visual = FB_VISUAL_PSEUDOCOLOR;
 		break;
 	case 16:
+	case 24:
 	case 32:
 		fix->visual = FB_VISUAL_TRUECOLOR;
 		break;

commit 48327b9a7ae37e6d20bb91642c0baa35babb661f
Author: Gokce Kuler <gokcekuler@gmail.com>
Date:   Sat Mar 28 23:15:13 2020 +0300

    staging: sm750fb: line over 80 characters
    
    Convert a single line comment to a multiline comment to respect the 80
    character rule.Problem found using checkpatch.
    
    Signed-off-by: Gokce Kuler <gokcekuler@gmail.com>
    Reviewed-by: Stefano Brivio <sbrivio@redhat.com>
    Link: https://lore.kernel.org/r/20200328201513.GA16863@siyah2
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 59568d18ce23..e478290b60a8 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -709,7 +709,9 @@ static int sm750fb_set_drv(struct lynxfb_par *par)
 		} else {
 			output->paths = sm750_crt;
 			crtc->channel = sm750_primary;
-			/* not consider of padding stuffs for oScreen,need fix */
+			/* not consider of padding stuffs for oScreen,
+			 * need fix
+			 */
 			crtc->oScreen = sm750_dev->vidmem_size >> 1;
 			crtc->vScreen = sm750_dev->pvMem + crtc->oScreen;
 		}

commit d5d66cfea2ca281d53e63360b459f84b5fff5e12
Author: Kelsey Skunberg <skunberg.kelsey@gmail.com>
Date:   Sat Apr 27 10:33:34 2019 -0600

    Staging: sm750fb: Change *array into *const array
    
    Resolve checkpatch warning for static const char * array by using const
    pointers.
    
    Checkpatch Warning in sm750.c:
    static const char * array should probably be static const char * const
    
    Signed-off-by: Kelsey Skunberg <skunberg.kelsey@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 105089b97bf5..59568d18ce23 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -748,7 +748,7 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 		lynx750_ext, NULL, vesa_modes,
 	};
 	int cdb[] = {ARRAY_SIZE(lynx750_ext), 0, VESA_MODEDB_SIZE};
-	static const char *mdb_desc[] = {
+	static const char * const mdb_desc[] = {
 		"driver prepared modes",
 		"kernel prepared default modedb",
 		"kernel HELPERS prepared vesa_modes",

commit 25338628bbfca07076318459e3e92b540122fb88
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Apr 2 12:31:51 2019 +0200

    staging: sm750fb: add proper SPDX identifier to driver
    
    By default all files without license information are under the default
    license of the kernel, which is GPL version 2.  Because of this, add the
    GPL-2.0 identifier to the sm750fb driver which did not have any license
    identifiers in it at all.
    
    Cc: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Cc: Teddy Wang <teddy.wang@siliconmotion.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index e1a892e3b3ad..105089b97bf5 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -1,3 +1,4 @@
+// SPDX-License-Identifier: GPL-2.0
 #include <linux/kernel.h>
 #include <linux/module.h>
 #include <linux/errno.h>

commit 9a3aebc02a8469decafd0aae557082ff15259b85
Author: Sanjana Sanikommu <sanjana99reddy99@gmail.com>
Date:   Sun Mar 31 16:11:42 2019 +0530

    staging: sm750fb: Remove unnecessary parenthesis.
    
    Challenge suggested by coccinelle.
    Remove unnecessary parenthesis around the right hand
    of the assignment using the below script.
    
    @@
    binary operator op = {!=,&&,||,>=,<=,&,|};
    expression l, r, t;
    @@
    
    (
    l = (r op t)
    |
    l =
    -(
    r
    -)
    )
    
    Signed-off-by: Sanjana Sanikommu <sanjana99reddy99@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index e9f10c2669ea..e1a892e3b3ad 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -695,7 +695,7 @@ static int sm750fb_set_drv(struct lynxfb_par *par)
 			output->paths = sm750_crt;
 			crtc->channel = sm750_secondary;
 			/* not consider of padding stuffs for oScreen,need fix */
-			crtc->oScreen = (sm750_dev->vidmem_size >> 1);
+			crtc->oScreen = sm750_dev->vidmem_size >> 1;
 			crtc->vScreen = sm750_dev->pvMem + crtc->oScreen;
 		}
 		break;
@@ -709,7 +709,7 @@ static int sm750fb_set_drv(struct lynxfb_par *par)
 			output->paths = sm750_crt;
 			crtc->channel = sm750_primary;
 			/* not consider of padding stuffs for oScreen,need fix */
-			crtc->oScreen = (sm750_dev->vidmem_size >> 1);
+			crtc->oScreen = sm750_dev->vidmem_size >> 1;
 			crtc->vScreen = sm750_dev->pvMem + crtc->oScreen;
 		}
 		break;

commit 8ba5843c9e68d4c1b43f6e18d6ae3254e81de3ec
Author: Aymen Qader <qader.aymen@gmail.com>
Date:   Thu Sep 20 23:53:21 2018 +0100

    staging: sm750fb: Fix typo frambuffer->framebuffer
    
    This patch corrects a typo (frambuffer->framebuffer) in the
    sm750fb_fram(e)buffer_release and sm750fb_fram(e)buffer_alloc function
    names.
    
    Signed-off-by: Aymen Qader <qader.aymen@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 846d7d243994..e9f10c2669ea 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -1007,7 +1007,7 @@ static void sm750fb_setup(struct sm750_dev *sm750_dev, char *src)
 	}
 }
 
-static void sm750fb_frambuffer_release(struct sm750_dev *sm750_dev)
+static void sm750fb_framebuffer_release(struct sm750_dev *sm750_dev)
 {
 	struct fb_info *fb_info;
 
@@ -1019,7 +1019,7 @@ static void sm750fb_frambuffer_release(struct sm750_dev *sm750_dev)
 	}
 }
 
-static int sm750fb_frambuffer_alloc(struct sm750_dev *sm750_dev, int fbidx)
+static int sm750fb_framebuffer_alloc(struct sm750_dev *sm750_dev, int fbidx)
 {
 	struct fb_info *fb_info;
 	struct lynxfb_par *par;
@@ -1137,7 +1137,7 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 	/* allocate frame buffer info structures according to g_dualview */
 	max_fb = g_dualview ? 2 : 1;
 	for (fbidx = 0; fbidx < max_fb; fbidx++) {
-		err = sm750fb_frambuffer_alloc(sm750_dev, fbidx);
+		err = sm750fb_framebuffer_alloc(sm750_dev, fbidx);
 		if (err)
 			goto release_fb;
 	}
@@ -1145,7 +1145,7 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 	return 0;
 
 release_fb:
-	sm750fb_frambuffer_release(sm750_dev);
+	sm750fb_framebuffer_release(sm750_dev);
 	return err;
 }
 
@@ -1155,7 +1155,7 @@ static void lynxfb_pci_remove(struct pci_dev *pdev)
 
 	sm750_dev = pci_get_drvdata(pdev);
 
-	sm750fb_frambuffer_release(sm750_dev);
+	sm750fb_framebuffer_release(sm750_dev);
 	arch_phys_wc_del(sm750_dev->mtrr.vram);
 
 	iounmap(sm750_dev->pvReg);

commit 58ca6cec54b571f61cfb85f72a3c8be7c9eaf702
Author: Colin Ian King <colin.king@canonical.com>
Date:   Wed Jul 11 12:35:23 2018 +0100

    staging: sm750fb: remove redundant pointer 'output'
    
    Pointer 'output' is being assigned but is never used hence it is redundant
    and can be removed.
    
    Cleans up clang warning:
    warning: variable 'output' set but not used [-Wunused-but-set-variable]
    
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 67207b0554cd..846d7d243994 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -512,12 +512,10 @@ static int lynxfb_ops_check_var(struct fb_var_screeninfo *var,
 {
 	struct lynxfb_par *par;
 	struct lynxfb_crtc *crtc;
-	struct lynxfb_output *output;
 	resource_size_t request;
 
 	par = info->par;
 	crtc = &par->crtc;
-	output = &par->output;
 
 	pr_debug("check var:%dx%d-%d\n",
 		 var->xres,

commit 740c433ec35187b45abe08bb6c45a321a791be8e
Author: Teddy Wang <teddy.wang@siliconmotion.com>
Date:   Fri Jun 30 21:57:43 2017 +0100

    staging: sm750fb: avoid conflicting vesafb
    
    If vesafb is enabled in the config then /dev/fb0 is created by vesa
    and this sm750 driver gets fb1, fb2. But we need to be fb0 and fb1 to
    effectively work with xorg.
    So if it has been alloted fb1, then try to remove the other fb0.
    
    In the previous send, why #ifdef is used was asked.
    https://lkml.org/lkml/2017/6/25/57
    
    Answered at: https://lkml.org/lkml/2017/6/25/69
    Also pasting here for reference.
    
    'Did a quick research into "why".
    The patch d8801e4df91e ("x86/PCI: Set IORESOURCE_ROM_SHADOW only for the
    default VGA device") has started setting IORESOURCE_ROM_SHADOW in flags
    for a default VGA device and that is being done only for x86.
    And so, we will need that #ifdef to check IORESOURCE_ROM_SHADOW as that
    needs to be checked only for a x86 and not for other arch.'
    
    Cc: <stable@vger.kernel.org> # v4.4+
    Signed-off-by: Teddy Wang <teddy.wang@siliconmotion.com>
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 3aa4128703d5..67207b0554cd 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -1053,6 +1053,26 @@ static int sm750fb_frambuffer_alloc(struct sm750_dev *sm750_dev, int fbidx)
 	return err;
 }
 
+static int lynxfb_kick_out_firmware_fb(struct pci_dev *pdev)
+{
+	struct apertures_struct *ap;
+	bool primary = false;
+
+	ap = alloc_apertures(1);
+	if (!ap)
+		return -ENOMEM;
+
+	ap->ranges[0].base = pci_resource_start(pdev, 0);
+	ap->ranges[0].size = pci_resource_len(pdev, 0);
+#ifdef CONFIG_X86
+	primary = pdev->resource[PCI_ROM_RESOURCE].flags &
+					IORESOURCE_ROM_SHADOW;
+#endif
+	remove_conflicting_framebuffers(ap, "sm750_fb1", primary);
+	kfree(ap);
+	return 0;
+}
+
 static int lynxfb_pci_probe(struct pci_dev *pdev,
 			    const struct pci_device_id *ent)
 {
@@ -1061,6 +1081,10 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 	int fbidx;
 	int err;
 
+	err = lynxfb_kick_out_firmware_fb(pdev);
+	if (err)
+		return err;
+
 	/* enable device */
 	err = pcim_enable_device(pdev);
 	if (err)

commit 97af1ce27844a4303139b06df962e3a8d738d23b
Author: Dhananjay Balan <mail@dbalan.in>
Date:   Thu Jun 29 13:24:35 2017 +0200

    drivers: staging: sm750: Hold lock irrespective of fb numbers.
    
    Start holding the lock for all cases irrespective of number of fb,
    there could be a deadlock since this number could change in the
    lifetime of this lock
    
    Signed-off-by: Dhananjay Balan <mail@dbalan.in>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 664c220f1df4..3aa4128703d5 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -183,19 +183,19 @@ static void lynxfb_ops_fillrect(struct fb_info *info,
 	rop = (region->rop != ROP_COPY) ? HW_ROP2_XOR : HW_ROP2_COPY;
 
 	/*
-	 * If not use spin_lock,system will die if user load driver
+	 * If not use spin_lock, system will die if user load driver
 	 * and immediately unload driver frequently (dual)
+	 * since they fb_count could change during the lifetime of
+	 * this lock, we are holding it for all cases.
 	 */
-	if (sm750_dev->fb_count > 1)
-		spin_lock(&sm750_dev->slock);
+	spin_lock(&sm750_dev->slock);
 
 	sm750_dev->accel.de_fillrect(&sm750_dev->accel,
 				     base, pitch, Bpp,
 				     region->dx, region->dy,
 				     region->width, region->height,
 				     color, rop);
-	if (sm750_dev->fb_count > 1)
-		spin_unlock(&sm750_dev->slock);
+	spin_unlock(&sm750_dev->slock);
 }
 
 static void lynxfb_ops_copyarea(struct fb_info *info,
@@ -219,17 +219,17 @@ static void lynxfb_ops_copyarea(struct fb_info *info,
 	/*
 	 * If not use spin_lock, system will die if user load driver
 	 * and immediately unload driver frequently (dual)
+	 * since they fb_count could change during the lifetime of
+	 * this lock, we are holding it for all cases.
 	 */
-	if (sm750_dev->fb_count > 1)
-		spin_lock(&sm750_dev->slock);
+	spin_lock(&sm750_dev->slock);
 
 	sm750_dev->accel.de_copyarea(&sm750_dev->accel,
 				     base, pitch, region->sx, region->sy,
 				     base, pitch, Bpp, region->dx, region->dy,
 				     region->width, region->height,
 				     HW_ROP2_COPY);
-	if (sm750_dev->fb_count > 1)
-		spin_unlock(&sm750_dev->slock);
+	spin_unlock(&sm750_dev->slock);
 }
 
 static void lynxfb_ops_imageblit(struct fb_info *info,
@@ -268,9 +268,10 @@ static void lynxfb_ops_imageblit(struct fb_info *info,
 	/*
 	 * If not use spin_lock, system will die if user load driver
 	 * and immediately unload driver frequently (dual)
+	 * since they fb_count could change during the lifetime of
+	 * this lock, we are holding it for all cases.
 	 */
-	if (sm750_dev->fb_count > 1)
-		spin_lock(&sm750_dev->slock);
+	spin_lock(&sm750_dev->slock);
 
 	sm750_dev->accel.de_imageblit(&sm750_dev->accel,
 				      image->data, image->width >> 3, 0,
@@ -278,8 +279,7 @@ static void lynxfb_ops_imageblit(struct fb_info *info,
 				      image->dx, image->dy,
 				      image->width, image->height,
 				      fgcol, bgcol, HW_ROP2_COPY);
-	if (sm750_dev->fb_count > 1)
-		spin_unlock(&sm750_dev->slock);
+	spin_unlock(&sm750_dev->slock);
 }
 
 static int lynxfb_ops_pan_display(struct fb_var_screeninfo *var,

commit 888db9a6e02c8bf82c2753acf146c71b662c5ba5
Author: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
Date:   Mon Jun 19 21:32:58 2017 +0100

    staging: sm750fb: change default screen resolution
    
    The previous patch which updated screen resolution was tested under
    wrong environment. sm750 driver does not support 24bpp. It only
    supports 8bpp, 16bpp and 32bpp.
    Lets update the default screen resolution to use 32bpp for a better
    screen performance.
    
    Fixes: ac669251087d ("staging: sm750fb: change default screen resolution")
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index d5934f372387..664c220f1df4 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -33,7 +33,7 @@ static int g_hwcursor = 1;
 static int g_noaccel;
 static int g_nomtrr;
 static const char *g_fbmode[] = {NULL, NULL};
-static const char *g_def_fbmode = "1024x768-24@60";
+static const char *g_def_fbmode = "1024x768-32@60";
 static char *g_settings;
 static int g_dualview;
 static char *g_option;

commit ac669251087d876d6e51eb648f98e575f0d0499d
Author: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
Date:   Sun Jun 4 20:36:54 2017 +0100

    staging: sm750fb: change default screen resolution
    
    Update the default screen resolution and also use 24bpp for a better
    screen performance.
    
    Tested-by: Teddy Wang <teddy.wang@siliconmotion.com>
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index a7f722ae30d5..d5934f372387 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -33,7 +33,7 @@ static int g_hwcursor = 1;
 static int g_noaccel;
 static int g_nomtrr;
 static const char *g_fbmode[] = {NULL, NULL};
-static const char *g_def_fbmode = "800x600-16@60";
+static const char *g_def_fbmode = "1024x768-24@60";
 static char *g_settings;
 static int g_dualview;
 static char *g_option;

commit c975045656bb7fac6c077d1f075ce67b26e5b875
Author: Matej Dujava <mdujava@kocurkovo.cz>
Date:   Tue May 16 11:20:17 2017 +0200

    staging: sm750fb: fix length of lines, function calls and declaration
    
    This patch breaks lines that are longer than 80 characters and joins
    together those, that are too short and can be placed at one.
    
    Function calls and declarations are updated to fit kernel code style.
    
    Signed-off-by: Matej Dujava <mdujava@kocurkovo.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 386d4adcd91d..a7f722ae30d5 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -112,42 +112,42 @@ static int lynxfb_ops_cursor(struct fb_info *info, struct fb_cursor *fbcursor)
 	cursor = &crtc->cursor;
 
 	if (fbcursor->image.width > cursor->maxW ||
-	   fbcursor->image.height > cursor->maxH ||
-	   fbcursor->image.depth > 1) {
+	    fbcursor->image.height > cursor->maxH ||
+	    fbcursor->image.depth > 1) {
 		return -ENXIO;
 	}
 
 	sm750_hw_cursor_disable(cursor);
 	if (fbcursor->set & FB_CUR_SETSIZE)
 		sm750_hw_cursor_setSize(cursor,
-				  fbcursor->image.width,
-				  fbcursor->image.height);
+					fbcursor->image.width,
+					fbcursor->image.height);
 
 	if (fbcursor->set & FB_CUR_SETPOS)
 		sm750_hw_cursor_setPos(cursor,
-				 fbcursor->image.dx - info->var.xoffset,
-				 fbcursor->image.dy - info->var.yoffset);
+				       fbcursor->image.dx - info->var.xoffset,
+				       fbcursor->image.dy - info->var.yoffset);
 
 	if (fbcursor->set & FB_CUR_SETCMAP) {
 		/* get the 16bit color of kernel means */
 		u16 fg, bg;
 
 		fg = ((info->cmap.red[fbcursor->image.fg_color] & 0xf800)) |
-		      ((info->cmap.green[fbcursor->image.fg_color] & 0xfc00) >> 5) |
-		      ((info->cmap.blue[fbcursor->image.fg_color] & 0xf800) >> 11);
+		     ((info->cmap.green[fbcursor->image.fg_color] & 0xfc00) >> 5) |
+		     ((info->cmap.blue[fbcursor->image.fg_color] & 0xf800) >> 11);
 
 		bg = ((info->cmap.red[fbcursor->image.bg_color] & 0xf800)) |
-		      ((info->cmap.green[fbcursor->image.bg_color] & 0xfc00) >> 5) |
-		      ((info->cmap.blue[fbcursor->image.bg_color] & 0xf800) >> 11);
+		     ((info->cmap.green[fbcursor->image.bg_color] & 0xfc00) >> 5) |
+		     ((info->cmap.blue[fbcursor->image.bg_color] & 0xf800) >> 11);
 
 		sm750_hw_cursor_setColor(cursor, fg, bg);
 	}
 
 	if (fbcursor->set & (FB_CUR_SETSHAPE | FB_CUR_SETIMAGE)) {
 		sm750_hw_cursor_setData(cursor,
-				  fbcursor->rop,
-				  fbcursor->image.data,
-				  fbcursor->mask);
+					fbcursor->rop,
+					fbcursor->image.data,
+					fbcursor->mask);
 	}
 
 	if (fbcursor->enable)

commit 271dbae3c6a1daa160e2dec87c4eb5065aed716b
Author: Prasant Jalan <prasant.jalan@gmail.com>
Date:   Sat Apr 1 00:40:02 2017 +0530

    staging: sm750fb: removed line continuations in quoted strings
    
    checkpatch gives WARNING: Avoid line continuations in quoted strings.
    
    Trivial fix by removing line continuations and adding another quote at
    the start of next line.
    
    Signed-off-by: Prasant Jalan <prasant.jalan@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 445c68d4f834..386d4adcd91d 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -837,15 +837,15 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 
 	/* some member of info->var had been set by fb_find_mode */
 
-	pr_info("Member of info->var is :\n\
-		xres=%d\n\
-		yres=%d\n\
-		xres_virtual=%d\n\
-		yres_virtual=%d\n\
-		xoffset=%d\n\
-		yoffset=%d\n\
-		bits_per_pixel=%d\n \
-		...\n",
+	pr_info("Member of info->var is :\n"
+		"xres=%d\n"
+		"yres=%d\n"
+		"xres_virtual=%d\n"
+		"yres_virtual=%d\n"
+		"xoffset=%d\n"
+		"yoffset=%d\n"
+		"bits_per_pixel=%d\n"
+		" ...\n",
 		var->xres,
 		var->yres,
 		var->xres_virtual,

commit 4895398d0375d57fc098c2816eb0a7dadc1c1ce6
Author: Prasant Jalan <prasant.jalan@gmail.com>
Date:   Sat Apr 1 00:40:01 2017 +0530

    staging: sm750fb: fixing function return with lock held
    
    lynxfb_suspend() & lynxfb_resume() return on errors while holding
    console_lock.
    
    Adding 'goto' such that proper cleanups can be done before returning
    from function and therefore console_lock can be released before
    returning.
    
    Signed-off-by: Prasant Jalan <prasant.jalan@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index c618c5604cca..445c68d4f834 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -419,7 +419,7 @@ static int lynxfb_suspend(struct pci_dev *pdev, pm_message_t mesg)
 		if (ret) {
 			dev_err(&pdev->dev,
 				"error:%d occurred in pci_save_state\n", ret);
-			return ret;
+			goto lynxfb_suspend_err;
 		}
 
 		ret = pci_set_power_state(pdev, pci_choose_state(pdev, mesg));
@@ -427,11 +427,13 @@ static int lynxfb_suspend(struct pci_dev *pdev, pm_message_t mesg)
 			dev_err(&pdev->dev,
 				"error:%d occurred in pci_set_power_state\n",
 				ret);
-			return ret;
+			goto lynxfb_suspend_err;
 		}
 	}
 
 	pdev->dev.power.power_state = mesg;
+
+lynxfb_suspend_err:
 	console_unlock();
 	return ret;
 }
@@ -456,7 +458,7 @@ static int lynxfb_resume(struct pci_dev *pdev)
 	if (ret) {
 		dev_err(&pdev->dev,
 			"error:%d occurred in pci_set_power_state\n", ret);
-		return ret;
+		goto lynxfb_resume_err;
 	}
 
 	if (pdev->dev.power.power_state.event != PM_EVENT_FREEZE) {
@@ -466,7 +468,7 @@ static int lynxfb_resume(struct pci_dev *pdev)
 			dev_err(&pdev->dev,
 				"error:%d occurred in pci_enable_device\n",
 				ret);
-			return ret;
+			goto lynxfb_resume_err;
 		}
 		pci_set_master(pdev);
 	}
@@ -498,6 +500,8 @@ static int lynxfb_resume(struct pci_dev *pdev)
 	}
 
 	pdev->dev.power.power_state.event = PM_EVENT_RESUME;
+
+lynxfb_resume_err:
 	console_unlock();
 	return ret;
 }

commit 4529d8914e33bf8b522b45ece87d751d006e7897
Author: Varsha Rao <rvarsha016@gmail.com>
Date:   Mon Feb 27 15:49:31 2017 +0530

    staging: sm750fb: Remove blank lines after { and before } braces.
    
    Removed unnecessary blank lines after open brace and before closed
    braces, to fix the check patch issue. Also removed braces which were not
    required.
    
    Signed-off-by: Varsha Rao <rvarsha016@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 332a3ef27ba8..c618c5604cca 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -806,7 +806,6 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 	}
 
 	for (i = 0; i < 3; i++) {
-
 		ret = fb_find_mode(var, info, g_fbmode[index],
 				   pdb[i], cdb[i], NULL, 8);
 

commit 144634a6b42146834fb58ddd629545edd3e518db
Author: Katie Dunne <kdunne@mail.ccsf.edu>
Date:   Sun Feb 19 20:38:57 2017 -0800

    staging: sm750fb: add curly braces to if-statements
    
    Add curly braces to if-statements for style compliance.
    These cases are found by checkpatch.pl
    
    Signed-off-by: Katie Dunne <kdunne@mail.ccsf.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index e49f8845f923..332a3ef27ba8 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -954,23 +954,23 @@ static void sm750fb_setup(struct sm750_dev *sm750_dev, char *src)
 		dev_info(&sm750_dev->pdev->dev, "opt=%s\n", opt);
 		dev_info(&sm750_dev->pdev->dev, "src=%s\n", src);
 
-		if (!strncmp(opt, "swap", strlen("swap")))
+		if (!strncmp(opt, "swap", strlen("swap"))) {
 			swap = 1;
-		else if (!strncmp(opt, "nocrt", strlen("nocrt")))
+		} else if (!strncmp(opt, "nocrt", strlen("nocrt"))) {
 			sm750_dev->nocrt = 1;
-		else if (!strncmp(opt, "36bit", strlen("36bit")))
+		} else if (!strncmp(opt, "36bit", strlen("36bit"))) {
 			sm750_dev->pnltype = sm750_doubleTFT;
-		else if (!strncmp(opt, "18bit", strlen("18bit")))
+		} else if (!strncmp(opt, "18bit", strlen("18bit"))) {
 			sm750_dev->pnltype = sm750_dualTFT;
-		else if (!strncmp(opt, "24bit", strlen("24bit")))
+		} else if (!strncmp(opt, "24bit", strlen("24bit"))) {
 			sm750_dev->pnltype = sm750_24TFT;
-		else if (!strncmp(opt, "nohwc0", strlen("nohwc0")))
+		} else if (!strncmp(opt, "nohwc0", strlen("nohwc0"))) {
 			g_hwcursor &= ~0x1;
-		else if (!strncmp(opt, "nohwc1", strlen("nohwc1")))
+		} else if (!strncmp(opt, "nohwc1", strlen("nohwc1"))) {
 			g_hwcursor &= ~0x2;
-		else if (!strncmp(opt, "nohwc", strlen("nohwc")))
+		} else if (!strncmp(opt, "nohwc", strlen("nohwc"))) {
 			g_hwcursor = 0;
-		else {
+		} else {
 			if (!g_fbmode[0]) {
 				g_fbmode[0] = opt;
 				dev_info(&sm750_dev->pdev->dev,
@@ -1168,13 +1168,13 @@ static int __init lynxfb_setup(char *options)
 	 */
 	while ((opt = strsep(&options, ":")) != NULL) {
 		/* options that mean for any lynx chips are configured here */
-		if (!strncmp(opt, "noaccel", strlen("noaccel")))
+		if (!strncmp(opt, "noaccel", strlen("noaccel"))) {
 			g_noaccel = 1;
-		else if (!strncmp(opt, "nomtrr", strlen("nomtrr")))
+		} else if (!strncmp(opt, "nomtrr", strlen("nomtrr"))) {
 			g_nomtrr = 1;
-		else if (!strncmp(opt, "dual", strlen("dual")))
+		} else if (!strncmp(opt, "dual", strlen("dual"))) {
 			g_dualview = 1;
-		else {
+		} else {
 			strcat(tmp, opt);
 			tmp += strlen(opt);
 			if (options)

commit e6b240bd3b0c99180b78e522c20747d3f8b6ce76
Author: Derek Robson <robsonde@gmail.com>
Date:   Sun Feb 12 20:13:42 2017 +1300

    Staging: sm750fb: sm750.c - style fix
    
    Change permissions to octal style.
    Found using checkpatch
    
    Signed-off-by: Derek Robson <robsonde@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index ee741c012b92..e49f8845f923 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -1229,7 +1229,7 @@ static void __exit lynxfb_exit(void)
 }
 module_exit(lynxfb_exit);
 
-module_param(g_option, charp, S_IRUGO);
+module_param(g_option, charp, 0444);
 
 MODULE_PARM_DESC(g_option,
 		 "\n\t\tCommon options:\n"

commit cee9ba1c30d05171edf9db9374e28481896cea34
Author: Abdul Rauf <abdulraufmujahid@gmail.com>
Date:   Sun Jan 8 02:45:59 2017 +0000

    staging: sm750fb: fix checkpatch 80 characters warning
    
    Fix the following warnings:
    line over 80 characters
    
    Signed-off-by: Abdul Rauf <abdulraufmujahid@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 1d9d5e155813..ee741c012b92 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -973,10 +973,12 @@ static void sm750fb_setup(struct sm750_dev *sm750_dev, char *src)
 		else {
 			if (!g_fbmode[0]) {
 				g_fbmode[0] = opt;
-				dev_info(&sm750_dev->pdev->dev, "find fbmode0 : %s\n", g_fbmode[0]);
+				dev_info(&sm750_dev->pdev->dev,
+					 "find fbmode0 : %s\n", g_fbmode[0]);
 			} else if (!g_fbmode[1]) {
 				g_fbmode[1] = opt;
-				dev_info(&sm750_dev->pdev->dev, "find fbmode1 : %s\n", g_fbmode[1]);
+				dev_info(&sm750_dev->pdev->dev,
+					 "find fbmode1 : %s\n", g_fbmode[1]);
 			} else {
 				dev_warn(&sm750_dev->pdev->dev, "How many view you wann set?\n");
 			}

commit c7c5722d16fe73e1f8b0905e8bbda5f8f6e2c53b
Author: Abdul Rauf <abdulraufmujahid@gmail.com>
Date:   Sun Jan 8 02:45:22 2017 +0000

    staging: sm750fb: fix checkpatch multiple blank lines check
    
    Fix the following checks:
    Please don't use multiple blank lines
    
    Signed-off-by: Abdul Rauf <abdulraufmujahid@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index e9632f162f99..1d9d5e155813 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -100,7 +100,6 @@ static const struct fb_videomode lynx750_ext[] = {
 	 FB_VMODE_NONINTERLACED},
 };
 
-
 /* no hardware cursor supported under version 2.6.10, kernel bug */
 static int lynxfb_ops_cursor(struct fb_info *info, struct fb_cursor *fbcursor)
 {

commit 4e0447cdaf60d00f0cabd78ef0ba1874e23ae464
Author: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
Date:   Sat Nov 26 09:07:42 2016 +0000

    staging: sm750fb: update license
    
    The driver was actually released with BSD license. It also gained GPL
    when it was submitted to be included in the kernel.
    
    Cc: Teddy Wang <teddy.wang@siliconmotion.com>
    Cc: gzhou1 <guojian.zhou@windriver.com>
    Signed-off-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 2d22c51cb33b..e9632f162f99 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -1243,4 +1243,4 @@ MODULE_PARM_DESC(g_option,
 MODULE_AUTHOR("monk liu <monk.liu@siliconmotion.com>");
 MODULE_AUTHOR("Sudip Mukherjee <sudip@vectorindia.org>");
 MODULE_DESCRIPTION("Frame buffer driver for SM750 chipset");
-MODULE_LICENSE("GPL v2");
+MODULE_LICENSE("Dual BSD/GPL");

commit 52d0744d751d8f13511df15e776460bfb95bcf5c
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Nov 9 10:26:27 2016 +0100

    staging: sm750fb: prefix global identifiers
    
    Renaming some symbols inside this driver caused a conflict with
    an existing function, which in turn results in a link error:
    
    drivers/staging/sm750fb/sm750fb.o: In function `enable_dma':
    ddk750_hwi2c.c:(.text.enable_dma+0x0): multiple definition of `enable_dma'
    
    This adds a sm750_ prefix to each global symbol in the sm750fb
    driver that does not already have one. I manually looked for the
    symbols and then converted the driver using
    
    for i in calc_pll_value format_pll_reg set_power_mode set_current_gate    \
            enable_2d_engine enable_dma enable_gpio enable_i2c hw_set2dformat \
            hw_de_init hw_fillrect hw_copyarea hw_imageblit hw_cursor_enable  \
            hw_cursor_disable hw_cursor_setSize hw_cursor_setPos              \
            hw_cursor_setColor hw_cursor_setData hw_cursor_setData2 ;
    do
                    sed -i "s:\<$i\>:sm750_$i:" drivers/staging/sm750fb/*.[ch]
    done
    
    Fixes: 03140dabf584 ("staging: sm750fb: Replace functions CamelCase naming with underscores.")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 5c153d68212a..2d22c51cb33b 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -118,14 +118,14 @@ static int lynxfb_ops_cursor(struct fb_info *info, struct fb_cursor *fbcursor)
 		return -ENXIO;
 	}
 
-	hw_cursor_disable(cursor);
+	sm750_hw_cursor_disable(cursor);
 	if (fbcursor->set & FB_CUR_SETSIZE)
-		hw_cursor_setSize(cursor,
+		sm750_hw_cursor_setSize(cursor,
 				  fbcursor->image.width,
 				  fbcursor->image.height);
 
 	if (fbcursor->set & FB_CUR_SETPOS)
-		hw_cursor_setPos(cursor,
+		sm750_hw_cursor_setPos(cursor,
 				 fbcursor->image.dx - info->var.xoffset,
 				 fbcursor->image.dy - info->var.yoffset);
 
@@ -141,18 +141,18 @@ static int lynxfb_ops_cursor(struct fb_info *info, struct fb_cursor *fbcursor)
 		      ((info->cmap.green[fbcursor->image.bg_color] & 0xfc00) >> 5) |
 		      ((info->cmap.blue[fbcursor->image.bg_color] & 0xf800) >> 11);
 
-		hw_cursor_setColor(cursor, fg, bg);
+		sm750_hw_cursor_setColor(cursor, fg, bg);
 	}
 
 	if (fbcursor->set & (FB_CUR_SETSHAPE | FB_CUR_SETIMAGE)) {
-		hw_cursor_setData(cursor,
+		sm750_hw_cursor_setData(cursor,
 				  fbcursor->rop,
 				  fbcursor->image.data,
 				  fbcursor->mask);
 	}
 
 	if (fbcursor->enable)
-		hw_cursor_enable(cursor);
+		sm750_hw_cursor_enable(cursor);
 
 	return 0;
 }
@@ -788,7 +788,7 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 	memset_io(crtc->cursor.vstart, 0, crtc->cursor.size);
 	if (!g_hwcursor) {
 		lynxfb_ops.fb_cursor = NULL;
-		hw_cursor_disable(&crtc->cursor);
+		sm750_hw_cursor_disable(&crtc->cursor);
 	}
 
 	/* set info->fbops, must be set before fb_find_mode */
@@ -1083,10 +1083,10 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 		 * if some chip need specific function,
 		 * please hook it in smXXX_set_drv routine
 		 */
-		sm750_dev->accel.de_init = hw_de_init;
-		sm750_dev->accel.de_fillrect = hw_fillrect;
-		sm750_dev->accel.de_copyarea = hw_copyarea;
-		sm750_dev->accel.de_imageblit = hw_imageblit;
+		sm750_dev->accel.de_init = sm750_hw_de_init;
+		sm750_dev->accel.de_fillrect = sm750_hw_fillrect;
+		sm750_dev->accel.de_copyarea = sm750_hw_copyarea;
+		sm750_dev->accel.de_imageblit = sm750_hw_imageblit;
 	}
 
 	/* call chip specific setup routine  */

commit c56de0967a658cb773bf41c5e4ea26768267d8b1
Author: Elise Lennion <elise.lennion@gmail.com>
Date:   Mon Oct 31 23:28:46 2016 -0200

    staging: sm750fb: Replace pr_*() with dev_*().
    
    dev_*() functions print identifying information about the struct device
    and should be used instead of pr_*() whenever possible.
    
    Signed-off-by: Elise Lennion <elise.lennion@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 0663ec00206b..5c153d68212a 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -947,13 +947,13 @@ static void sm750fb_setup(struct sm750_dev *sm750_dev, char *src)
 	g_hwcursor = 3;
 
 	if (!src || !*src) {
-		pr_warn("no specific g_option.\n");
+		dev_warn(&sm750_dev->pdev->dev, "no specific g_option.\n");
 		goto NO_PARAM;
 	}
 
 	while ((opt = strsep(&src, ":")) != NULL && *opt != 0) {
-		pr_info("opt=%s\n", opt);
-		pr_info("src=%s\n", src);
+		dev_info(&sm750_dev->pdev->dev, "opt=%s\n", opt);
+		dev_info(&sm750_dev->pdev->dev, "src=%s\n", src);
 
 		if (!strncmp(opt, "swap", strlen("swap")))
 			swap = 1;
@@ -974,12 +974,12 @@ static void sm750fb_setup(struct sm750_dev *sm750_dev, char *src)
 		else {
 			if (!g_fbmode[0]) {
 				g_fbmode[0] = opt;
-				pr_info("find fbmode0 : %s\n", g_fbmode[0]);
+				dev_info(&sm750_dev->pdev->dev, "find fbmode0 : %s\n", g_fbmode[0]);
 			} else if (!g_fbmode[1]) {
 				g_fbmode[1] = opt;
-				pr_info("find fbmode1 : %s\n", g_fbmode[1]);
+				dev_info(&sm750_dev->pdev->dev, "find fbmode1 : %s\n", g_fbmode[1]);
 			} else {
-				pr_warn("How many view you wann set?\n");
+				dev_warn(&sm750_dev->pdev->dev, "How many view you wann set?\n");
 			}
 		}
 	}

commit 6aab2d7eacb078d2ad9b6ca5245521a7886e5d29
Author: Elise Lennion <elise.lennion@gmail.com>
Date:   Fri Oct 14 21:32:03 2016 -0300

    staging: sm750fb: Add const qualifier to struct declaration.
    
    Const qualifier added to struct declaration to avoid data overwrite
    during runtime and improve security.
    
    Signed-off-by: Elise Lennion <elise.lennion@gmail.com>
    Acked-by: Julia Lawall <julia.lawall@lip6.fr>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index b094492cc5f0..0663ec00206b 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -1188,7 +1188,7 @@ static int __init lynxfb_setup(char *options)
 	return 0;
 }
 
-static struct pci_device_id smi_pci_table[] = {
+static const struct pci_device_id smi_pci_table[] = {
 	{ PCI_DEVICE(0x126f, 0x0750), },
 	{0,}
 };

commit be704e58328d4c488677c59e04dd9cec2d9515a2
Author: Elizabeth Ferdman <gnudevliz@gmail.com>
Date:   Tue Oct 11 19:29:20 2016 -0700

    staging: sm750fb: compress return logic
    
    Using Coccinelle script, compress return logic to return a value
    directly rather than doing an assignment and returning the variable.
    Remove unnecessary variable declaration by hand.
    
    Coccinelle script:
    
    @@
    local idexpression ret;
    expression e;
    @@
    
    -ret =
    +return
         e;
    -return ret;
    
    Signed-off-by: Elizabeth Ferdman <gnudevliz@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 8770a46c3c67..b094492cc5f0 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -1209,7 +1209,6 @@ static struct pci_driver lynxfb_driver = {
 static int __init lynxfb_init(void)
 {
 	char *option;
-	int ret;
 
 #ifdef MODULE
 	option = g_option;
@@ -1219,8 +1218,7 @@ static int __init lynxfb_init(void)
 #endif
 
 	lynxfb_setup(option);
-	ret = pci_register_driver(&lynxfb_driver);
-	return ret;
+	return pci_register_driver(&lynxfb_driver);
 }
 module_init(lynxfb_init);
 

commit 14c681ea83adcbb33ed31c50cda1a2297bbade7e
Author: Muraru Mihaela <mihaela.muraru21@gmail.com>
Date:   Mon Oct 3 17:55:18 2016 +0300

    Staging: sm750fb: use unsigned int instead unsigned
    
    This patch fixes a WARNING: Prefer 'unsigned int' to bare use of
    'unsigned', found by checkpatch.pl. By fixing this the types of the parameters of the function become more explicit.
    
    Signed-off-by: Muraru Mihaela <mihaela.muraru21@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 7d90e250142c..8770a46c3c67 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -575,11 +575,11 @@ static int lynxfb_ops_check_var(struct fb_var_screeninfo *var,
 	return hw_sm750_crtc_checkMode(crtc, var);
 }
 
-static int lynxfb_ops_setcolreg(unsigned regno,
-				unsigned red,
-				unsigned green,
-				unsigned blue,
-				unsigned transp,
+static int lynxfb_ops_setcolreg(unsigned int regno,
+				unsigned int red,
+				unsigned int green,
+				unsigned int blue,
+				unsigned int transp,
 				struct fb_info *info)
 {
 	struct lynxfb_par *par;

commit 71b4de84a0ef8b495da3d3ca884e3e601b05af1b
Author: Rehas Sachdeva <aquannie@gmail.com>
Date:   Fri Sep 16 03:02:42 2016 +0530

    staging: sm750fb: Change 'x != NULL' to 'x'
    
    Changes the explicit comparison to NULL from 'x != NULL' to 'x'. Issue detected
    by checkpatch.
    
    Signed-off-by: Rehas Sachdeva <aquannie@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 6ed004e40855..7d90e250142c 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -1176,7 +1176,7 @@ static int __init lynxfb_setup(char *options)
 		else {
 			strcat(tmp, opt);
 			tmp += strlen(opt);
-			if (options != NULL)
+			if (options)
 				*tmp++ = ':';
 			else
 				*tmp++ = 0;

commit 6504b9bdf6f330dc66667e8b2e0a91a2ffa84e33
Author: Eva Rachel Retuya <eraretuya@gmail.com>
Date:   Sun Mar 6 13:20:21 2016 +0800

    staging: sm750fb: convert pr_err() to dev_err()
    
    Replace pr_err() calls with respective dev_err() counterpart.
    Change is safe since pdev is not NULL, this was identified by hand.
    Semantic patch used to detect and apply the transformation:
    
    @r exists@
    identifier f,s,i;
    position p;
    @@
    
    f(...,struct s *i,...) {
      <+...
      pr_err@p(...)
      ...+>
    }
    
    @s@
    identifier r.s, dev;
    @@
    
    struct s {
            ...
            struct device dev;
            ...
    };
    
    @t@
    identifier r.i, s.dev;
    expression fmt;
    position r.p;
    @@
    
    - pr_err@p(
    + dev_err(&i->dev,
                            fmt, ...);
    
    Signed-off-by: Eva Rachel Retuya <eraretuya@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index aac74a7495f6..6ed004e40855 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -418,13 +418,16 @@ static int lynxfb_suspend(struct pci_dev *pdev, pm_message_t mesg)
 
 		ret = pci_save_state(pdev);
 		if (ret) {
-			pr_err("error:%d occurred in pci_save_state\n", ret);
+			dev_err(&pdev->dev,
+				"error:%d occurred in pci_save_state\n", ret);
 			return ret;
 		}
 
 		ret = pci_set_power_state(pdev, pci_choose_state(pdev, mesg));
 		if (ret) {
-			pr_err("error:%d occurred in pci_set_power_state\n", ret);
+			dev_err(&pdev->dev,
+				"error:%d occurred in pci_set_power_state\n",
+				ret);
 			return ret;
 		}
 	}
@@ -452,7 +455,8 @@ static int lynxfb_resume(struct pci_dev *pdev)
 
 	ret = pci_set_power_state(pdev, PCI_D0);
 	if (ret) {
-		pr_err("error:%d occurred in pci_set_power_state\n", ret);
+		dev_err(&pdev->dev,
+			"error:%d occurred in pci_set_power_state\n", ret);
 		return ret;
 	}
 
@@ -460,7 +464,9 @@ static int lynxfb_resume(struct pci_dev *pdev)
 		pci_restore_state(pdev);
 		ret = pci_enable_device(pdev);
 		if (ret) {
-			pr_err("error:%d occurred in pci_enable_device\n", ret);
+			dev_err(&pdev->dev,
+				"error:%d occurred in pci_enable_device\n",
+				ret);
 			return ret;
 		}
 		pci_set_master(pdev);

commit 13b79a0d88e350ec874e45fdbd08cb6f37fa4a48
Author: Amitoj Kaur Chawla <amitoj1606@gmail.com>
Date:   Sun Feb 28 21:22:00 2016 +0530

    staging: sm750fb: Use pcim_enable_device()
    
    Devm_ functions allocate memory that is released when a driver
    detaches.
    Replace pci_enable_device with the managed pcim_enable_device
    and remove corresponding pci_disable_device from probe and
    suspend functions of a pci_dev.
    
    Also, an unnecessary label has been removed by replacing it
    with a direct return statement.
    
    Signed-off-by: Amitoj Kaur Chawla <amitoj1606@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 8ec81bed8b54..aac74a7495f6 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -422,7 +422,6 @@ static int lynxfb_suspend(struct pci_dev *pdev, pm_message_t mesg)
 			return ret;
 		}
 
-		pci_disable_device(pdev);
 		ret = pci_set_power_state(pdev, pci_choose_state(pdev, mesg));
 		if (ret) {
 			pr_err("error:%d occurred in pci_set_power_state\n", ret);
@@ -1053,14 +1052,14 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 	int err;
 
 	/* enable device */
-	err = pci_enable_device(pdev);
+	err = pcim_enable_device(pdev);
 	if (err)
 		return err;
 
 	err = -ENOMEM;
 	sm750_dev = devm_kzalloc(&pdev->dev, sizeof(*sm750_dev), GFP_KERNEL);
 	if (!sm750_dev)
-		goto disable_pci;
+		return err;
 
 	sm750_dev->fbinfo[0] = sm750_dev->fbinfo[1] = NULL;
 	sm750_dev->devid = pdev->device;
@@ -1115,8 +1114,6 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 
 release_fb:
 	sm750fb_frambuffer_release(sm750_dev);
-disable_pci:
-	pci_disable_device(pdev);
 	return err;
 }
 

commit 677c50721181b0375a763941ce188997588b1ace
Author: Amitoj Kaur Chawla <amitoj1606@gmail.com>
Date:   Sun Feb 28 21:21:53 2016 +0530

    staging: sm750fb: Replace kzalloc with devm_kzalloc
    
    Devm_ functions allocate memory that is released when a driver
    detaches.
    Replace kzalloc with devm_kzalloc and remove corresponding
    kfrees from probe and remove functions of a pci_dev.
    
    Also, an unnecessary label has been removed by replacing it
    with a direct return statement.
    
    Signed-off-by: Amitoj Kaur Chawla <amitoj1606@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index aae3c7538d68..8ec81bed8b54 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -1058,7 +1058,7 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 		return err;
 
 	err = -ENOMEM;
-	sm750_dev = kzalloc(sizeof(*sm750_dev), GFP_KERNEL);
+	sm750_dev = devm_kzalloc(&pdev->dev, sizeof(*sm750_dev), GFP_KERNEL);
 	if (!sm750_dev)
 		goto disable_pci;
 
@@ -1090,7 +1090,7 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 	/* call chip specific mmap routine */
 	err = hw_sm750_map(sm750_dev, pdev);
 	if (err)
-		goto free_sm750_dev;
+		return err;
 
 	if (!sm750_dev->mtrr_off)
 		sm750_dev->mtrr.vram = arch_phys_wc_add(sm750_dev->vidmem_start,
@@ -1115,8 +1115,6 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 
 release_fb:
 	sm750fb_frambuffer_release(sm750_dev);
-free_sm750_dev:
-	kfree(sm750_dev);
 disable_pci:
 	pci_disable_device(pdev);
 	return err;
@@ -1134,7 +1132,6 @@ static void lynxfb_pci_remove(struct pci_dev *pdev)
 	iounmap(sm750_dev->pvReg);
 	iounmap(sm750_dev->pvMem);
 	kfree(g_settings);
-	kfree(sm750_dev);
 }
 
 static int __init lynxfb_setup(char *options)

commit fad2564eaa350368d95be2b7f0c832541dc9d09a
Author: Amitoj Kaur Chawla <amitoj1606@gmail.com>
Date:   Thu Feb 25 11:07:37 2016 +0530

    staging: sm750fb: Remove unnecessary pci_set_drvdata()
    
    Unnecessary pci_set_drvdata() has been removed since the driver
    core clears the driver data to NULL after device release or on
    probe failure. There is no need to manually clear the device
    driver data to NULL.
    
    The Coccinelle semantic patch used to make this change is as follows:
    //<smpl>
    @@
    struct pci_dev *pci;
    @@
    - pci_set_drvdata(pci, NULL);
    //</smpl>
    
    Signed-off-by: Amitoj Kaur Chawla <amitoj1606@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 59c74557a0a7..aae3c7538d68 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -1135,7 +1135,6 @@ static void lynxfb_pci_remove(struct pci_dev *pdev)
 	iounmap(sm750_dev->pvMem);
 	kfree(g_settings);
 	kfree(sm750_dev);
-	pci_set_drvdata(pdev, NULL);
 }
 
 static int __init lynxfb_setup(char *options)

commit 16fdf7d5bdc5a1cec9224b2db0f46037c2f3bc7d
Author: Amitoj Kaur Chawla <amitoj1606@gmail.com>
Date:   Mon Feb 22 14:14:10 2016 +0530

    staging: sm750fb: Remove header files
    
    Remove duplicate include files. Found using includecheck.
    
    Signed-off-by: Amitoj Kaur Chawla <amitoj1606@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index c9d4871cd62d..59c74557a0a7 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -13,8 +13,6 @@
 #include <linux/vmalloc.h>
 #include <linux/pagemap.h>
 #include <linux/screen_info.h>
-#include <linux/vmalloc.h>
-#include <linux/pagemap.h>
 #include <linux/console.h>
 #include <asm/fb.h>
 #include "sm750.h"

commit fbb8c963573926bceb5c59e2a7d74e5ce7669e78
Author: Matej Vasek <xvasek1@fi.muni.cz>
Date:   Mon Jan 25 16:02:33 2016 +0100

    staging: sm750fb, fix typos
    
    The code contained typos like "structur", "fointers", etc. Fix that.
    
    No code change, only comments.
    
    Signed-off-by: Matej Vasek <xvasek1@fi.muni.cz>
    Cc: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Cc: Teddy Wang <teddy.wang@siliconmotion.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: <linux-fbdev@vger.kernel.org>
    Cc: <devel@driverdev.osuosl.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 2ae2a522136f..c9d4871cd62d 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -319,7 +319,7 @@ static int lynxfb_ops_set_par(struct fb_info *info)
 	var = &info->var;
 	fix = &info->fix;
 
-	/* fix structur is not so FIX ... */
+	/* fix structure is not so FIX ... */
 	line_length = var->xres_virtual * var->bits_per_pixel / 8;
 	line_length = ALIGN(line_length, crtc->line_pad);
 	fix->line_length = line_length;

commit 61da1a12d80f02c42a5f8d8865da94751e077735
Author: Mike Rapoport <mike.rapoport@gmail.com>
Date:   Sun Jan 17 19:59:55 2016 +0200

    staging: sm750fb: lynxfb_pci_probe: remove some pr_info
    
    Several pr_info statements in lynxfb_pci_probe seem like debug leftovers
    and may be removed.
    
    Signed-off-by: Mike Rapoport <mike.rapoport@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index c33c7ffb8557..2ae2a522136f 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -1067,8 +1067,6 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 	sm750_dev->fbinfo[0] = sm750_dev->fbinfo[1] = NULL;
 	sm750_dev->devid = pdev->device;
 	sm750_dev->revid = pdev->revision;
-
-	pr_info("share->revid = %02x\n", sm750_dev->revid);
 	sm750_dev->pdev = pdev;
 	sm750_dev->mtrr_off = g_nomtrr;
 	sm750_dev->mtrr.vram = 0;
@@ -1086,9 +1084,6 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 		sm750_dev->accel.de_fillrect = hw_fillrect;
 		sm750_dev->accel.de_copyarea = hw_copyarea;
 		sm750_dev->accel.de_imageblit = hw_imageblit;
-		pr_info("enable 2d acceleration\n");
-	} else {
-		pr_info("disable 2d acceleration\n");
 	}
 
 	/* call chip specific setup routine  */
@@ -1105,9 +1100,6 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 
 	memset_io(sm750_dev->pvMem, 0, sm750_dev->vidmem_size);
 
-	pr_info("sm%3x mmio address = %p\n", sm750_dev->devid,
-		sm750_dev->pvReg);
-
 	pci_set_drvdata(pdev, sm750_dev);
 
 	/* call chipInit routine */

commit a50bc32d325831f2365333298c2808adac18a219
Author: Mike Rapoport <mike.rapoport@gmail.com>
Date:   Sun Jan 17 19:59:54 2016 +0200

    staging: sm750fb: introduce sm750fb_frambuffer_alloc
    
    Split framebuffer allocation and registration into a dedicated function
    to simplify lynxfb_pci_probe
    
    Signed-off-by: Mike Rapoport <mike.rapoport@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 88a640507d7f..c33c7ffb8557 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -1014,11 +1014,43 @@ static void sm750fb_frambuffer_release(struct sm750_dev *sm750_dev)
 	}
 }
 
+static int sm750fb_frambuffer_alloc(struct sm750_dev *sm750_dev, int fbidx)
+{
+	struct fb_info *fb_info;
+	struct lynxfb_par *par;
+	int err;
+
+	fb_info = framebuffer_alloc(sizeof(struct lynxfb_par),
+				    &sm750_dev->pdev->dev);
+	if (!fb_info)
+		return -ENOMEM;
+
+	sm750_dev->fbinfo[fbidx] = fb_info;
+	par = fb_info->par;
+	par->dev = sm750_dev;
+
+	err = lynxfb_set_fbinfo(fb_info, fbidx);
+	if (err)
+		goto release_fb;
+
+	err = register_framebuffer(fb_info);
+	if (err < 0)
+		goto release_fb;
+
+	sm750_dev->fb_count++;
+
+	return 0;
+
+release_fb:
+	framebuffer_release(fb_info);
+	return err;
+}
+
 static int lynxfb_pci_probe(struct pci_dev *pdev,
 			    const struct pci_device_id *ent)
 {
-	struct fb_info *info[] = {NULL, NULL};
 	struct sm750_dev *sm750_dev = NULL;
+	int max_fb;
 	int fbidx;
 	int err;
 
@@ -1081,66 +1113,18 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 	/* call chipInit routine */
 	hw_sm750_inithw(sm750_dev, pdev);
 
-	/* allocate frame buffer info structor according to g_dualview */
-	fbidx = 0;
-ALLOC_FB:
-	err = -ENOMEM;
-	info[fbidx] = framebuffer_alloc(sizeof(struct lynxfb_par), &pdev->dev);
-	if (!info[fbidx]) {
-		pr_err("Could not allocate framebuffer #%d.\n", fbidx);
-		if (fbidx == 0)
-			goto err_info0_alloc;
-		else
-			goto err_info1_alloc;
-	} else {
-		struct lynxfb_par *par;
-
-		pr_info("framebuffer #%d alloc okay\n", fbidx);
-		sm750_dev->fbinfo[fbidx] = info[fbidx];
-		par = info[fbidx]->par;
-		par->dev = sm750_dev;
-
-		/* set fb_info structure */
-		if (lynxfb_set_fbinfo(info[fbidx], fbidx)) {
-			pr_err("Failed to initial fb_info #%d.\n", fbidx);
-			if (fbidx == 0)
-				goto err_info0_set;
-			else
-				goto err_info1_set;
-		}
-
-		/* register frame buffer */
-		pr_info("Ready to register framebuffer #%d.\n", fbidx);
-		err = register_framebuffer(info[fbidx]);
-		if (err < 0) {
-			pr_err("Failed to register fb_info #%d. err %d\n",
-			       fbidx,
-			       err);
-			if (fbidx == 0)
-				goto err_register0;
-			else
-				goto err_register1;
-		}
-		pr_info("Accomplished register framebuffer #%d.\n", fbidx);
+	/* allocate frame buffer info structures according to g_dualview */
+	max_fb = g_dualview ? 2 : 1;
+	for (fbidx = 0; fbidx < max_fb; fbidx++) {
+		err = sm750fb_frambuffer_alloc(sm750_dev, fbidx);
+		if (err)
+			goto release_fb;
 	}
 
-	/* no dual view by far */
-	fbidx++;
-	sm750_dev->fb_count++;
-	if (g_dualview && fbidx < 2)
-		goto ALLOC_FB;
-
 	return 0;
 
-err_register1:
-err_info1_set:
-	framebuffer_release(info[1]);
-err_info1_alloc:
-	unregister_framebuffer(info[0]);
-err_register0:
-err_info0_set:
-	framebuffer_release(info[0]);
-err_info0_alloc:
+release_fb:
+	sm750fb_frambuffer_release(sm750_dev);
 free_sm750_dev:
 	kfree(sm750_dev);
 disable_pci:

commit 9324f9193bc3ba7a07e70ac6e01b3257fb17f390
Author: Mike Rapoport <mike.rapoport@gmail.com>
Date:   Sun Jan 17 19:59:53 2016 +0200

    staging: sm750fb: introduce sm750fb_frambuffer_release
    
    Use a function to unregister framebuffer info and release its resources.
    
    Signed-off-by: Mike Rapoport <mike.rapoport@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 1b3ab04d8f06..88a640507d7f 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -1002,6 +1002,18 @@ static void sm750fb_setup(struct sm750_dev *sm750_dev, char *src)
 	}
 }
 
+static void sm750fb_frambuffer_release(struct sm750_dev *sm750_dev)
+{
+	struct fb_info *fb_info;
+
+	while (sm750_dev->fb_count) {
+		fb_info = sm750_dev->fbinfo[sm750_dev->fb_count - 1];
+		unregister_framebuffer(fb_info);
+		framebuffer_release(fb_info);
+		sm750_dev->fb_count--;
+	}
+}
+
 static int lynxfb_pci_probe(struct pci_dev *pdev,
 			    const struct pci_device_id *ent)
 {
@@ -1138,22 +1150,11 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 
 static void lynxfb_pci_remove(struct pci_dev *pdev)
 {
-	struct fb_info *info;
 	struct sm750_dev *sm750_dev;
-	int cnt;
 
-	cnt = 2;
 	sm750_dev = pci_get_drvdata(pdev);
 
-	while (cnt-- > 0) {
-		info = sm750_dev->fbinfo[cnt];
-		if (!info)
-			continue;
-
-		unregister_framebuffer(info);
-		/* release frame buffer */
-		framebuffer_release(info);
-	}
+	sm750fb_frambuffer_release(sm750_dev);
 	arch_phys_wc_del(sm750_dev->mtrr.vram);
 
 	iounmap(sm750_dev->pvReg);

commit a3f92cc94c6126d243d1cfc4f198e101f89bd46b
Author: Mike Rapoport <mike.rapoport@gmail.com>
Date:   Sun Jan 17 19:59:52 2016 +0200

    staging: sm750fb: replace dual member of sm750_dev with fb_count
    
    Will be used in futher refactoring of driver _probe and _remove methods.
    
    Signed-off-by: Mike Rapoport <mike.rapoport@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 6ed4478ed65a..1b3ab04d8f06 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -189,7 +189,7 @@ static void lynxfb_ops_fillrect(struct fb_info *info,
 	 * If not use spin_lock,system will die if user load driver
 	 * and immediately unload driver frequently (dual)
 	 */
-	if (sm750_dev->dual)
+	if (sm750_dev->fb_count > 1)
 		spin_lock(&sm750_dev->slock);
 
 	sm750_dev->accel.de_fillrect(&sm750_dev->accel,
@@ -197,7 +197,7 @@ static void lynxfb_ops_fillrect(struct fb_info *info,
 				     region->dx, region->dy,
 				     region->width, region->height,
 				     color, rop);
-	if (sm750_dev->dual)
+	if (sm750_dev->fb_count > 1)
 		spin_unlock(&sm750_dev->slock);
 }
 
@@ -223,7 +223,7 @@ static void lynxfb_ops_copyarea(struct fb_info *info,
 	 * If not use spin_lock, system will die if user load driver
 	 * and immediately unload driver frequently (dual)
 	 */
-	if (sm750_dev->dual)
+	if (sm750_dev->fb_count > 1)
 		spin_lock(&sm750_dev->slock);
 
 	sm750_dev->accel.de_copyarea(&sm750_dev->accel,
@@ -231,7 +231,7 @@ static void lynxfb_ops_copyarea(struct fb_info *info,
 				     base, pitch, Bpp, region->dx, region->dy,
 				     region->width, region->height,
 				     HW_ROP2_COPY);
-	if (sm750_dev->dual)
+	if (sm750_dev->fb_count > 1)
 		spin_unlock(&sm750_dev->slock);
 }
 
@@ -272,7 +272,7 @@ static void lynxfb_ops_imageblit(struct fb_info *info,
 	 * If not use spin_lock, system will die if user load driver
 	 * and immediately unload driver frequently (dual)
 	 */
-	if (sm750_dev->dual)
+	if (sm750_dev->fb_count > 1)
 		spin_lock(&sm750_dev->slock);
 
 	sm750_dev->accel.de_imageblit(&sm750_dev->accel,
@@ -281,7 +281,7 @@ static void lynxfb_ops_imageblit(struct fb_info *info,
 				      image->dx, image->dy,
 				      image->width, image->height,
 				      fgcol, bgcol, HW_ROP2_COPY);
-	if (sm750_dev->dual)
+	if (sm750_dev->fb_count > 1)
 		spin_unlock(&sm750_dev->slock);
 }
 
@@ -650,8 +650,10 @@ static int sm750fb_set_drv(struct lynxfb_par *par)
 	output = &par->output;
 	crtc = &par->crtc;
 
-	crtc->vidmem_size = (sm750_dev->dual) ? sm750_dev->vidmem_size >> 1 :
-			     sm750_dev->vidmem_size;
+	crtc->vidmem_size = sm750_dev->vidmem_size;
+	if (sm750_dev->fb_count > 1)
+		crtc->vidmem_size >>= 1;
+
 	/* setup crtc and output member */
 	sm750_dev->hwCursor = g_hwcursor;
 
@@ -981,7 +983,7 @@ static void sm750fb_setup(struct sm750_dev *sm750_dev, char *src)
 
 NO_PARAM:
 	if (sm750_dev->revid != SM750LE_REVISION_ID) {
-		if (sm750_dev->dual) {
+		if (sm750_dev->fb_count > 1) {
 			if (swap)
 				sm750_dev->dataflow = sm750_dual_swap;
 			else
@@ -1027,7 +1029,6 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 	sm750_dev->mtrr_off = g_nomtrr;
 	sm750_dev->mtrr.vram = 0;
 	sm750_dev->accel_off = g_noaccel;
-	sm750_dev->dual = g_dualview;
 	spin_lock_init(&sm750_dev->slock);
 
 	if (!sm750_dev->accel_off) {
@@ -1113,7 +1114,8 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 
 	/* no dual view by far */
 	fbidx++;
-	if (sm750_dev->dual && fbidx < 2)
+	sm750_dev->fb_count++;
+	if (g_dualview && fbidx < 2)
 		goto ALLOC_FB;
 
 	return 0;

commit 473baa2df6833c53c74f13eb812de5c57287ffd4
Author: Mike Rapoport <mike.rapoport@gmail.com>
Date:   Sun Jan 17 19:59:51 2016 +0200

    staging: sm750fb: lynxfb_pci_remove: remove unused variable
    
    The par variable in lynxfb_pci_remove is only assigned a value and never
    used afterwards. Remove it.
    
    Signed-off-by: Mike Rapoport <mike.rapoport@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 7eb386881964..6ed4478ed65a 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -1138,7 +1138,6 @@ static void lynxfb_pci_remove(struct pci_dev *pdev)
 {
 	struct fb_info *info;
 	struct sm750_dev *sm750_dev;
-	struct lynxfb_par *par;
 	int cnt;
 
 	cnt = 2;
@@ -1148,7 +1147,6 @@ static void lynxfb_pci_remove(struct pci_dev *pdev)
 		info = sm750_dev->fbinfo[cnt];
 		if (!info)
 			continue;
-		par = info->par;
 
 		unregister_framebuffer(info);
 		/* release frame buffer */

commit baf24530a48c991144aaf82007d4f5e21eb47aa8
Author: Mike Rapoport <mike.rapoport@gmail.com>
Date:   Sun Jan 17 19:59:50 2016 +0200

    staging: sm750fb: lynxfb_pci_probe: return actual errors
    
    The lynxfb_pci_probe always returned -ENODEV in case of error. Modify it
    so that actual error code will be propogated to the caller.
    
    Signed-off-by: Mike Rapoport <mike.rapoport@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index c80b11c387ad..7eb386881964 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -1006,18 +1006,17 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 	struct fb_info *info[] = {NULL, NULL};
 	struct sm750_dev *sm750_dev = NULL;
 	int fbidx;
+	int err;
 
 	/* enable device */
-	if (pci_enable_device(pdev)) {
-		pr_err("can not enable device.\n");
-		goto err_enable;
-	}
+	err = pci_enable_device(pdev);
+	if (err)
+		return err;
 
+	err = -ENOMEM;
 	sm750_dev = kzalloc(sizeof(*sm750_dev), GFP_KERNEL);
-	if (!sm750_dev) {
-		pr_err("Could not allocate memory for share.\n");
-		goto err_share;
-	}
+	if (!sm750_dev)
+		goto disable_pci;
 
 	sm750_dev->fbinfo[0] = sm750_dev->fbinfo[1] = NULL;
 	sm750_dev->devid = pdev->device;
@@ -1051,10 +1050,9 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 	sm750fb_setup(sm750_dev, g_settings);
 
 	/* call chip specific mmap routine */
-	if (hw_sm750_map(sm750_dev, pdev)) {
-		pr_err("Memory map failed\n");
-		goto err_map;
-	}
+	err = hw_sm750_map(sm750_dev, pdev);
+	if (err)
+		goto free_sm750_dev;
 
 	if (!sm750_dev->mtrr_off)
 		sm750_dev->mtrr.vram = arch_phys_wc_add(sm750_dev->vidmem_start,
@@ -1073,6 +1071,7 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 	/* allocate frame buffer info structor according to g_dualview */
 	fbidx = 0;
 ALLOC_FB:
+	err = -ENOMEM;
 	info[fbidx] = framebuffer_alloc(sizeof(struct lynxfb_par), &pdev->dev);
 	if (!info[fbidx]) {
 		pr_err("Could not allocate framebuffer #%d.\n", fbidx);
@@ -1082,7 +1081,6 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 			goto err_info1_alloc;
 	} else {
 		struct lynxfb_par *par;
-		int errno;
 
 		pr_info("framebuffer #%d alloc okay\n", fbidx);
 		sm750_dev->fbinfo[fbidx] = info[fbidx];
@@ -1100,11 +1098,11 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 
 		/* register frame buffer */
 		pr_info("Ready to register framebuffer #%d.\n", fbidx);
-		errno = register_framebuffer(info[fbidx]);
-		if (errno < 0) {
+		err = register_framebuffer(info[fbidx]);
+		if (err < 0) {
 			pr_err("Failed to register fb_info #%d. err %d\n",
 			       fbidx,
-			       errno);
+			       err);
 			if (fbidx == 0)
 				goto err_register0;
 			else
@@ -1129,12 +1127,11 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 err_info0_set:
 	framebuffer_release(info[0]);
 err_info0_alloc:
-err_map:
+free_sm750_dev:
 	kfree(sm750_dev);
-err_share:
+disable_pci:
 	pci_disable_device(pdev);
-err_enable:
-	return -ENODEV;
+	return err;
 }
 
 static void lynxfb_pci_remove(struct pci_dev *pdev)

commit 0fbc7c505680ca6efe2486afb34866602781c980
Author: Mike Rapoport <mike.rapoport@gmail.com>
Date:   Sun Jan 17 19:59:49 2016 +0200

    staging: sm750fb: disable PCI device if lynxfb_pci_probe fails
    
    In case of error during lynxfb_pci_probe, the function returned without
    calling pci_disable_device. Fix it by adding pci_disable_device on the
    error cleanup path.
    
    Signed-off-by: Mike Rapoport <mike.rapoport@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index c78421b5b0e7..c80b11c387ad 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -1132,6 +1132,7 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 err_map:
 	kfree(sm750_dev);
 err_share:
+	pci_disable_device(pdev);
 err_enable:
 	return -ENODEV;
 }

commit cdfeaae5b3034d630528d044f7bc72e209321517
Author: Shraddha Barke <shraddha.6596@gmail.com>
Date:   Fri Oct 30 19:33:02 2015 +0530

    Staging: sm750fb: Remove unused modedb.h file
    
    The header file modedb.h is only included in sm750.c but the things
    defined by modedb.h are not used anywhere in sm750.c. Thus, drop
    the include in sm750.c and modedb.h can be dropped completely.
    
    Signed-off-by: Shraddha Barke <shraddha.6596@gmail.com>
    Acked-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 860e1c288ad5..c78421b5b0e7 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -21,8 +21,6 @@
 #include "sm750_accel.h"
 #include "sm750_cursor.h"
 
-#include "modedb.h"
-
 /*
  * #ifdef __BIG_ENDIAN
  * ssize_t lynxfb_ops_write(struct fb_info *info, const char __user *buf,

commit 823e034c0f18d0571f44ce903dd47fa388706b61
Author: Mike Rapoport <mike.rapoport@gmail.com>
Date:   Mon Oct 26 09:06:07 2015 +0200

    staging: sm750fb: remove '#ifdef CAP_EXP*' conditionals
    
    There are several occurencies of '#ifdef CAP_EXP<something>', spelled
    differently each time. None of these is ever defined and therefore they
    enclose dead code that can be removed.
    
    Signed-off-by: Mike Rapoport <mike.rapoport@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 329423d4d6c9..860e1c288ad5 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -929,14 +929,8 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 static void sm750fb_setup(struct sm750_dev *sm750_dev, char *src)
 {
 	char *opt;
-#ifdef CAP_EXPENSION
-	char *exp_res;
-#endif
 	int swap;
 
-#ifdef CAP_EXPENSIION
-	exp_res = NULL;
-#endif
 	swap = 0;
 
 	sm750_dev->initParm.chip_clk = 0;
@@ -968,10 +962,6 @@ static void sm750fb_setup(struct sm750_dev *sm750_dev, char *src)
 			sm750_dev->pnltype = sm750_dualTFT;
 		else if (!strncmp(opt, "24bit", strlen("24bit")))
 			sm750_dev->pnltype = sm750_24TFT;
-#ifdef CAP_EXPANSION
-		else if (!strncmp(opt, "exp:", strlen("exp:")))
-			exp_res = opt + strlen("exp:");
-#endif
 		else if (!strncmp(opt, "nohwc0", strlen("nohwc0")))
 			g_hwcursor &= ~0x1;
 		else if (!strncmp(opt, "nohwc1", strlen("nohwc1")))
@@ -990,14 +980,6 @@ static void sm750fb_setup(struct sm750_dev *sm750_dev, char *src)
 			}
 		}
 	}
-#ifdef CAP_EXPANSION
-	if (getExpRes(exp_res,
-		      &sm750_dev->xLCD,
-		      &sm750_dev->yLCD)) {
-		/* seems exp_res is not valid */
-		sm750_dev->xLCD = sm750_dev->yLCD = 0;
-	}
-#endif
 
 NO_PARAM:
 	if (sm750_dev->revid != SM750LE_REVISION_ID) {

commit e359b6a863e19f2eb5519b31658b4a9cc8812a05
Author: Mike Rapoport <mike.rapoport@gmail.com>
Date:   Mon Oct 26 09:06:06 2015 +0200

    staging: sm750fb: merge lynx_share into sm750_dev
    
    Both struct lynx_share and struct sm750_dev reprsent some parts of the
    SM750 graphics adapter. There is no point to keep these parts in
    different structures.
    
    Signed-off-by: Mike Rapoport <mike.rapoport@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 616479e3a7fb..329423d4d6c9 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -165,7 +165,7 @@ static void lynxfb_ops_fillrect(struct fb_info *info,
 				const struct fb_fillrect *region)
 {
 	struct lynxfb_par *par;
-	struct lynx_share *share;
+	struct sm750_dev *sm750_dev;
 	unsigned int base, pitch, Bpp, rop;
 	u32 color;
 
@@ -173,7 +173,7 @@ static void lynxfb_ops_fillrect(struct fb_info *info,
 		return;
 
 	par = info->par;
-	share = &par->dev->share;
+	sm750_dev = par->dev;
 
 	/*
 	 * each time 2d function begin to work,below three variable always need
@@ -191,27 +191,27 @@ static void lynxfb_ops_fillrect(struct fb_info *info,
 	 * If not use spin_lock,system will die if user load driver
 	 * and immediately unload driver frequently (dual)
 	 */
-	if (share->dual)
-		spin_lock(&share->slock);
-
-	share->accel.de_fillrect(&share->accel,
-				 base, pitch, Bpp,
-				 region->dx, region->dy,
-				 region->width, region->height,
-				 color, rop);
-	if (share->dual)
-		spin_unlock(&share->slock);
+	if (sm750_dev->dual)
+		spin_lock(&sm750_dev->slock);
+
+	sm750_dev->accel.de_fillrect(&sm750_dev->accel,
+				     base, pitch, Bpp,
+				     region->dx, region->dy,
+				     region->width, region->height,
+				     color, rop);
+	if (sm750_dev->dual)
+		spin_unlock(&sm750_dev->slock);
 }
 
 static void lynxfb_ops_copyarea(struct fb_info *info,
 				const struct fb_copyarea *region)
 {
 	struct lynxfb_par *par;
-	struct lynx_share *share;
+	struct sm750_dev *sm750_dev;
 	unsigned int base, pitch, Bpp;
 
 	par = info->par;
-	share = &par->dev->share;
+	sm750_dev = par->dev;
 
 	/*
 	 * each time 2d function begin to work,below three variable always need
@@ -225,15 +225,16 @@ static void lynxfb_ops_copyarea(struct fb_info *info,
 	 * If not use spin_lock, system will die if user load driver
 	 * and immediately unload driver frequently (dual)
 	 */
-	if (share->dual)
-		spin_lock(&share->slock);
-
-	share->accel.de_copyarea(&share->accel,
-				 base, pitch, region->sx, region->sy,
-				 base, pitch, Bpp, region->dx, region->dy,
-				 region->width, region->height, HW_ROP2_COPY);
-	if (share->dual)
-		spin_unlock(&share->slock);
+	if (sm750_dev->dual)
+		spin_lock(&sm750_dev->slock);
+
+	sm750_dev->accel.de_copyarea(&sm750_dev->accel,
+				     base, pitch, region->sx, region->sy,
+				     base, pitch, Bpp, region->dx, region->dy,
+				     region->width, region->height,
+				     HW_ROP2_COPY);
+	if (sm750_dev->dual)
+		spin_unlock(&sm750_dev->slock);
 }
 
 static void lynxfb_ops_imageblit(struct fb_info *info,
@@ -242,10 +243,10 @@ static void lynxfb_ops_imageblit(struct fb_info *info,
 	unsigned int base, pitch, Bpp;
 	unsigned int fgcol, bgcol;
 	struct lynxfb_par *par;
-	struct lynx_share *share;
+	struct sm750_dev *sm750_dev;
 
 	par = info->par;
-	share = &par->dev->share;
+	sm750_dev = par->dev;
 	/*
 	 * each time 2d function begin to work,below three variable always need
 	 * be set, seems we can put them together in some place
@@ -273,17 +274,17 @@ static void lynxfb_ops_imageblit(struct fb_info *info,
 	 * If not use spin_lock, system will die if user load driver
 	 * and immediately unload driver frequently (dual)
 	 */
-	if (share->dual)
-		spin_lock(&share->slock);
-
-	share->accel.de_imageblit(&share->accel,
-				  image->data, image->width >> 3, 0,
-				  base, pitch, Bpp,
-				  image->dx, image->dy,
-				  image->width, image->height,
-				  fgcol, bgcol, HW_ROP2_COPY);
-	if (share->dual)
-		spin_unlock(&share->slock);
+	if (sm750_dev->dual)
+		spin_lock(&sm750_dev->slock);
+
+	sm750_dev->accel.de_imageblit(&sm750_dev->accel,
+				      image->data, image->width >> 3, 0,
+				      base, pitch, Bpp,
+				      image->dx, image->dy,
+				      image->width, image->height,
+				      fgcol, bgcol, HW_ROP2_COPY);
+	if (sm750_dev->dual)
+		spin_unlock(&sm750_dev->slock);
 }
 
 static int lynxfb_ops_pan_display(struct fb_var_screeninfo *var,
@@ -303,7 +304,6 @@ static int lynxfb_ops_pan_display(struct fb_var_screeninfo *var,
 static int lynxfb_ops_set_par(struct fb_info *info)
 {
 	struct lynxfb_par *par;
-	struct lynx_share *share;
 	struct lynxfb_crtc *crtc;
 	struct lynxfb_output *output;
 	struct fb_var_screeninfo *var;
@@ -316,7 +316,6 @@ static int lynxfb_ops_set_par(struct fb_info *info)
 
 	ret = 0;
 	par = info->par;
-	share = &par->dev->share;
 	crtc = &par->crtc;
 	output = &par->output;
 	var = &info->var;
@@ -396,7 +395,6 @@ static int lynxfb_suspend(struct pci_dev *pdev, pm_message_t mesg)
 {
 	struct fb_info *info;
 	struct sm750_dev *sm750_dev;
-	struct lynx_share *share;
 	int ret;
 
 	if (mesg.event == pdev->dev.power.power_state.event)
@@ -404,7 +402,6 @@ static int lynxfb_suspend(struct pci_dev *pdev, pm_message_t mesg)
 
 	ret = 0;
 	sm750_dev = pci_get_drvdata(pdev);
-	share = &sm750_dev->share;
 	switch (mesg.event) {
 	case PM_EVENT_FREEZE:
 	case PM_EVENT_PRETHAW:
@@ -414,11 +411,11 @@ static int lynxfb_suspend(struct pci_dev *pdev, pm_message_t mesg)
 
 	console_lock();
 	if (mesg.event & PM_EVENT_SLEEP) {
-		info = share->fbinfo[0];
+		info = sm750_dev->fbinfo[0];
 		if (info)
 			/* 1 means do suspend */
 			fb_set_suspend(info, 1);
-		info = share->fbinfo[1];
+		info = sm750_dev->fbinfo[1];
 		if (info)
 			/* 1 means do suspend */
 			fb_set_suspend(info, 1);
@@ -445,7 +442,6 @@ static int lynxfb_suspend(struct pci_dev *pdev, pm_message_t mesg)
 static int lynxfb_resume(struct pci_dev *pdev)
 {
 	struct fb_info *info;
-	struct lynx_share *share;
 	struct sm750_dev *sm750_dev;
 
 	struct lynxfb_par *par;
@@ -456,7 +452,6 @@ static int lynxfb_resume(struct pci_dev *pdev)
 
 	ret = 0;
 	sm750_dev = pci_get_drvdata(pdev);
-	share = &sm750_dev->share;
 
 	console_lock();
 
@@ -478,7 +473,7 @@ static int lynxfb_resume(struct pci_dev *pdev)
 
 	hw_sm750_inithw(sm750_dev, pdev);
 
-	info = share->fbinfo[0];
+	info = sm750_dev->fbinfo[0];
 
 	if (info) {
 		par = info->par;
@@ -490,7 +485,7 @@ static int lynxfb_resume(struct pci_dev *pdev)
 		fb_set_suspend(info, 0);
 	}
 
-	info = share->fbinfo[1];
+	info = sm750_dev->fbinfo[1];
 
 	if (info) {
 		par = info->par;
@@ -514,13 +509,11 @@ static int lynxfb_ops_check_var(struct fb_var_screeninfo *var,
 	struct lynxfb_par *par;
 	struct lynxfb_crtc *crtc;
 	struct lynxfb_output *output;
-	struct lynx_share *share;
 	resource_size_t request;
 
 	par = info->par;
 	crtc = &par->crtc;
 	output = &par->output;
-	share = &par->dev->share;
 
 	pr_debug("check var:%dx%d-%d\n",
 		 var->xres,
@@ -649,7 +642,6 @@ static int lynxfb_ops_blank(int blank, struct fb_info *info)
 static int sm750fb_set_drv(struct lynxfb_par *par)
 {
 	int ret;
-	struct lynx_share *share;
 	struct sm750_dev *sm750_dev;
 	struct lynxfb_output *output;
 	struct lynxfb_crtc *crtc;
@@ -657,12 +649,11 @@ static int sm750fb_set_drv(struct lynxfb_par *par)
 	ret = 0;
 
 	sm750_dev = par->dev;
-	share = &sm750_dev->share;
 	output = &par->output;
 	crtc = &par->crtc;
 
-	crtc->vidmem_size = (share->dual) ? share->vidmem_size >> 1 :
-			     share->vidmem_size;
+	crtc->vidmem_size = (sm750_dev->dual) ? sm750_dev->vidmem_size >> 1 :
+			     sm750_dev->vidmem_size;
 	/* setup crtc and output member */
 	sm750_dev->hwCursor = g_hwcursor;
 
@@ -671,37 +662,37 @@ static int sm750fb_set_drv(struct lynxfb_par *par)
 	crtc->ypanstep = 1;
 	crtc->ywrapstep = 0;
 
-	output->proc_setBLANK = (share->revid == SM750LE_REVISION_ID) ?
+	output->proc_setBLANK = (sm750_dev->revid == SM750LE_REVISION_ID) ?
 				 hw_sm750le_setBLANK : hw_sm750_setBLANK;
 	/* chip specific phase */
-	share->accel.de_wait = (share->revid == SM750LE_REVISION_ID) ?
-				hw_sm750le_deWait : hw_sm750_deWait;
+	sm750_dev->accel.de_wait = (sm750_dev->revid == SM750LE_REVISION_ID) ?
+				    hw_sm750le_deWait : hw_sm750_deWait;
 	switch (sm750_dev->dataflow) {
 	case sm750_simul_pri:
 		output->paths = sm750_pnc;
 		crtc->channel = sm750_primary;
 		crtc->oScreen = 0;
-		crtc->vScreen = share->pvMem;
+		crtc->vScreen = sm750_dev->pvMem;
 		pr_info("use simul primary mode\n");
 		break;
 	case sm750_simul_sec:
 		output->paths = sm750_pnc;
 		crtc->channel = sm750_secondary;
 		crtc->oScreen = 0;
-		crtc->vScreen = share->pvMem;
+		crtc->vScreen = sm750_dev->pvMem;
 		break;
 	case sm750_dual_normal:
 		if (par->index == 0) {
 			output->paths = sm750_panel;
 			crtc->channel = sm750_primary;
 			crtc->oScreen = 0;
-			crtc->vScreen = share->pvMem;
+			crtc->vScreen = sm750_dev->pvMem;
 		} else {
 			output->paths = sm750_crt;
 			crtc->channel = sm750_secondary;
 			/* not consider of padding stuffs for oScreen,need fix */
-			crtc->oScreen = (share->vidmem_size >> 1);
-			crtc->vScreen = share->pvMem + crtc->oScreen;
+			crtc->oScreen = (sm750_dev->vidmem_size >> 1);
+			crtc->vScreen = sm750_dev->pvMem + crtc->oScreen;
 		}
 		break;
 	case sm750_dual_swap:
@@ -709,13 +700,13 @@ static int sm750fb_set_drv(struct lynxfb_par *par)
 			output->paths = sm750_panel;
 			crtc->channel = sm750_secondary;
 			crtc->oScreen = 0;
-			crtc->vScreen = share->pvMem;
+			crtc->vScreen = sm750_dev->pvMem;
 		} else {
 			output->paths = sm750_crt;
 			crtc->channel = sm750_primary;
 			/* not consider of padding stuffs for oScreen,need fix */
-			crtc->oScreen = (share->vidmem_size >> 1);
-			crtc->vScreen = share->pvMem + crtc->oScreen;
+			crtc->oScreen = (sm750_dev->vidmem_size >> 1);
+			crtc->vScreen = sm750_dev->pvMem + crtc->oScreen;
 		}
 		break;
 	default:
@@ -742,7 +733,7 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 {
 	int i;
 	struct lynxfb_par *par;
-	struct lynx_share *share;
+	struct sm750_dev *sm750_dev;
 	struct lynxfb_crtc *crtc;
 	struct lynxfb_output *output;
 	struct fb_var_screeninfo *var;
@@ -766,7 +757,7 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 
 	ret = 0;
 	par = (struct lynxfb_par *)info->par;
-	share = &par->dev->share;
+	sm750_dev = par->dev;
 	crtc = &par->crtc;
 	output = &par->output;
 	var = &info->var;
@@ -783,12 +774,13 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 	 * must be set after crtc member initialized
 	 */
 	crtc->cursor.offset = crtc->oScreen + crtc->vidmem_size - 1024;
-	crtc->cursor.mmio = share->pvReg + 0x800f0 + (int)crtc->channel * 0x140;
+	crtc->cursor.mmio = sm750_dev->pvReg +
+		0x800f0 + (int)crtc->channel * 0x140;
 
 	pr_info("crtc->cursor.mmio = %p\n", crtc->cursor.mmio);
 	crtc->cursor.maxH = crtc->cursor.maxW = 64;
 	crtc->cursor.size = crtc->cursor.maxH * crtc->cursor.maxW * 2 / 8;
-	crtc->cursor.vstart = share->pvMem + crtc->cursor.offset;
+	crtc->cursor.vstart = sm750_dev->pvMem + crtc->cursor.offset;
 
 	memset_io(crtc->cursor.vstart, 0, crtc->cursor.size);
 	if (!g_hwcursor) {
@@ -797,7 +789,7 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 	}
 
 	/* set info->fbops, must be set before fb_find_mode */
-	if (!share->accel_off) {
+	if (!sm750_dev->accel_off) {
 		/* use 2d acceleration */
 		lynxfb_ops.fb_fillrect = lynxfb_ops_fillrect;
 		lynxfb_ops.fb_copyarea = lynxfb_ops_copyarea;
@@ -880,7 +872,7 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 
 	strlcpy(fix->id, fixId[index], sizeof(fix->id));
 
-	fix->smem_start = crtc->oScreen + share->vidmem_start;
+	fix->smem_start = crtc->oScreen + sm750_dev->vidmem_start;
 	pr_info("fix->smem_start = %lx\n", fix->smem_start);
 	/*
 	 * according to mmap experiment from user space application,
@@ -893,9 +885,9 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 	pr_info("fix->smem_len = %x\n", fix->smem_len);
 	info->screen_size = fix->smem_len;
 	fix->line_length = line_length;
-	fix->mmio_start = share->vidreg_start;
+	fix->mmio_start = sm750_dev->vidreg_start;
 	pr_info("fix->mmio_start = %lx\n", fix->mmio_start);
-	fix->mmio_len = share->vidreg_size;
+	fix->mmio_len = sm750_dev->vidreg_size;
 	pr_info("fix->mmio_len = %x\n", fix->mmio_len);
 	switch (var->bits_per_pixel) {
 	case 8:
@@ -936,7 +928,6 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 /*	chip specific g_option configuration routine */
 static void sm750fb_setup(struct sm750_dev *sm750_dev, char *src)
 {
-	struct lynx_share *share = &sm750_dev->share;
 	char *opt;
 #ifdef CAP_EXPENSION
 	char *exp_res;
@@ -1009,8 +1000,8 @@ static void sm750fb_setup(struct sm750_dev *sm750_dev, char *src)
 #endif
 
 NO_PARAM:
-	if (share->revid != SM750LE_REVISION_ID) {
-		if (share->dual) {
+	if (sm750_dev->revid != SM750LE_REVISION_ID) {
+		if (sm750_dev->dual) {
 			if (swap)
 				sm750_dev->dataflow = sm750_dual_swap;
 			else
@@ -1033,10 +1024,7 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 			    const struct pci_device_id *ent)
 {
 	struct fb_info *info[] = {NULL, NULL};
-	struct lynx_share *share = NULL;
-
 	struct sm750_dev *sm750_dev = NULL;
-	size_t spec_offset = 0;
 	int fbidx;
 
 	/* enable device */
@@ -1045,43 +1033,35 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 		goto err_enable;
 	}
 
-	/*
-	 * though offset of share in sm750_dev is 0,
-	 * we use this marcro as the same
-	 */
-	spec_offset = offsetof(struct sm750_dev, share);
-
 	sm750_dev = kzalloc(sizeof(*sm750_dev), GFP_KERNEL);
 	if (!sm750_dev) {
 		pr_err("Could not allocate memory for share.\n");
 		goto err_share;
 	}
 
-	/* setting share structure */
-	share = (struct lynx_share *)(&(sm750_dev->share));
-	share->fbinfo[0] = share->fbinfo[1] = NULL;
-	share->devid = pdev->device;
-	share->revid = pdev->revision;
-
-	pr_info("share->revid = %02x\n", share->revid);
-	share->pdev = pdev;
-	share->mtrr_off = g_nomtrr;
-	share->mtrr.vram = 0;
-	share->accel_off = g_noaccel;
-	share->dual = g_dualview;
-	spin_lock_init(&share->slock);
-
-	if (!share->accel_off) {
+	sm750_dev->fbinfo[0] = sm750_dev->fbinfo[1] = NULL;
+	sm750_dev->devid = pdev->device;
+	sm750_dev->revid = pdev->revision;
+
+	pr_info("share->revid = %02x\n", sm750_dev->revid);
+	sm750_dev->pdev = pdev;
+	sm750_dev->mtrr_off = g_nomtrr;
+	sm750_dev->mtrr.vram = 0;
+	sm750_dev->accel_off = g_noaccel;
+	sm750_dev->dual = g_dualview;
+	spin_lock_init(&sm750_dev->slock);
+
+	if (!sm750_dev->accel_off) {
 		/*
 		 * hook deInit and 2d routines, notes that below hw_xxx
 		 * routine can work on most of lynx chips
 		 * if some chip need specific function,
 		 * please hook it in smXXX_set_drv routine
 		 */
-		share->accel.de_init = hw_de_init;
-		share->accel.de_fillrect = hw_fillrect;
-		share->accel.de_copyarea = hw_copyarea;
-		share->accel.de_imageblit = hw_imageblit;
+		sm750_dev->accel.de_init = hw_de_init;
+		sm750_dev->accel.de_fillrect = hw_fillrect;
+		sm750_dev->accel.de_copyarea = hw_copyarea;
+		sm750_dev->accel.de_imageblit = hw_imageblit;
 		pr_info("enable 2d acceleration\n");
 	} else {
 		pr_info("disable 2d acceleration\n");
@@ -1096,13 +1076,14 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 		goto err_map;
 	}
 
-	if (!share->mtrr_off)
-		share->mtrr.vram = arch_phys_wc_add(share->vidmem_start,
-						    share->vidmem_size);
+	if (!sm750_dev->mtrr_off)
+		sm750_dev->mtrr.vram = arch_phys_wc_add(sm750_dev->vidmem_start,
+							sm750_dev->vidmem_size);
 
-	memset_io(share->pvMem, 0, share->vidmem_size);
+	memset_io(sm750_dev->pvMem, 0, sm750_dev->vidmem_size);
 
-	pr_info("sm%3x mmio address = %p\n", share->devid, share->pvReg);
+	pr_info("sm%3x mmio address = %p\n", sm750_dev->devid,
+		sm750_dev->pvReg);
 
 	pci_set_drvdata(pdev, sm750_dev);
 
@@ -1124,7 +1105,7 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 		int errno;
 
 		pr_info("framebuffer #%d alloc okay\n", fbidx);
-		share->fbinfo[fbidx] = info[fbidx];
+		sm750_dev->fbinfo[fbidx] = info[fbidx];
 		par = info[fbidx]->par;
 		par->dev = sm750_dev;
 
@@ -1154,7 +1135,7 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 
 	/* no dual view by far */
 	fbidx++;
-	if (share->dual && fbidx < 2)
+	if (sm750_dev->dual && fbidx < 2)
 		goto ALLOC_FB;
 
 	return 0;
@@ -1178,17 +1159,15 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 static void lynxfb_pci_remove(struct pci_dev *pdev)
 {
 	struct fb_info *info;
-	struct lynx_share *share;
 	struct sm750_dev *sm750_dev;
 	struct lynxfb_par *par;
 	int cnt;
 
 	cnt = 2;
 	sm750_dev = pci_get_drvdata(pdev);
-	share = &sm750_dev->share;
 
 	while (cnt-- > 0) {
-		info = share->fbinfo[cnt];
+		info = sm750_dev->fbinfo[cnt];
 		if (!info)
 			continue;
 		par = info->par;
@@ -1197,10 +1176,10 @@ static void lynxfb_pci_remove(struct pci_dev *pdev)
 		/* release frame buffer */
 		framebuffer_release(info);
 	}
-	arch_phys_wc_del(share->mtrr.vram);
+	arch_phys_wc_del(sm750_dev->mtrr.vram);
 
-	iounmap(share->pvReg);
-	iounmap(share->pvMem);
+	iounmap(sm750_dev->pvReg);
+	iounmap(sm750_dev->pvMem);
 	kfree(g_settings);
 	kfree(sm750_dev);
 	pci_set_drvdata(pdev, NULL);

commit 8ac97f19df35bf5ab663e096279478d4b8e20f6a
Author: Mike Rapoport <mike.rapoport@gmail.com>
Date:   Mon Oct 26 09:06:05 2015 +0200

    staging: sm750fb: remove unused field in lynx_cursor
    
    The lynx_share field in lynx_cursor structure is never used and can be
    removed.
    
    Signed-off-by: Mike Rapoport <mike.rapoport@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 8f6908ba6f52..616479e3a7fb 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -790,7 +790,6 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 	crtc->cursor.size = crtc->cursor.maxH * crtc->cursor.maxW * 2 / 8;
 	crtc->cursor.vstart = share->pvMem + crtc->cursor.offset;
 
-	crtc->cursor.share = share;
 	memset_io(crtc->cursor.vstart, 0, crtc->cursor.size);
 	if (!g_hwcursor) {
 		lynxfb_ops.fb_cursor = NULL;

commit 52e933278a09777b5c0631951a0a7edd49eb2abc
Author: Mike Rapoport <mike.rapoport@gmail.com>
Date:   Mon Oct 26 09:06:04 2015 +0200

    staging: sm750fb: fix wrong indentation
    
    Fix wrong indentation of a line in lynxfb_set_fbinfo
    
    Signed-off-by: Mike Rapoport <mike.rapoport@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 707e91dbfc75..8f6908ba6f52 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -791,7 +791,7 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 	crtc->cursor.vstart = share->pvMem + crtc->cursor.offset;
 
 	crtc->cursor.share = share;
-		memset_io(crtc->cursor.vstart, 0, crtc->cursor.size);
+	memset_io(crtc->cursor.vstart, 0, crtc->cursor.size);
 	if (!g_hwcursor) {
 		lynxfb_ops.fb_cursor = NULL;
 		hw_cursor_disable(&crtc->cursor);

commit 083c2048f53b5373de0fc463d4ad0787b66c8167
Author: Mike Rapoport <mike.rapoport@gmail.com>
Date:   Mon Oct 26 09:06:03 2015 +0200

    staging: sm750fb: use sm750_dev with pci_{get, set}_drvdata
    
    Use sm750_dev as private driver data for the PCI device
    
    Signed-off-by: Mike Rapoport <mike.rapoport@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index ac8e2a460ce8..707e91dbfc75 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -395,6 +395,7 @@ static inline unsigned int chan_to_field(unsigned int chan,
 static int lynxfb_suspend(struct pci_dev *pdev, pm_message_t mesg)
 {
 	struct fb_info *info;
+	struct sm750_dev *sm750_dev;
 	struct lynx_share *share;
 	int ret;
 
@@ -402,7 +403,8 @@ static int lynxfb_suspend(struct pci_dev *pdev, pm_message_t mesg)
 		return 0;
 
 	ret = 0;
-	share = pci_get_drvdata(pdev);
+	sm750_dev = pci_get_drvdata(pdev);
+	share = &sm750_dev->share;
 	switch (mesg.event) {
 	case PM_EVENT_FREEZE:
 	case PM_EVENT_PRETHAW:
@@ -453,8 +455,8 @@ static int lynxfb_resume(struct pci_dev *pdev)
 	int ret;
 
 	ret = 0;
-	share = pci_get_drvdata(pdev);
-	sm750_dev = container_of(share, struct sm750_dev, share);
+	sm750_dev = pci_get_drvdata(pdev);
+	share = &sm750_dev->share;
 
 	console_lock();
 
@@ -1103,7 +1105,7 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 
 	pr_info("sm%3x mmio address = %p\n", share->devid, share->pvReg);
 
-	pci_set_drvdata(pdev, share);
+	pci_set_drvdata(pdev, sm750_dev);
 
 	/* call chipInit routine */
 	hw_sm750_inithw(sm750_dev, pdev);
@@ -1183,7 +1185,8 @@ static void lynxfb_pci_remove(struct pci_dev *pdev)
 	int cnt;
 
 	cnt = 2;
-	share = pci_get_drvdata(pdev);
+	sm750_dev = pci_get_drvdata(pdev);
+	share = &sm750_dev->share;
 
 	while (cnt-- > 0) {
 		info = share->fbinfo[cnt];
@@ -1199,7 +1202,6 @@ static void lynxfb_pci_remove(struct pci_dev *pdev)
 
 	iounmap(share->pvReg);
 	iounmap(share->pvMem);
-	sm750_dev = container_of(share, struct sm750_dev, share);
 	kfree(g_settings);
 	kfree(sm750_dev);
 	pci_set_drvdata(pdev, NULL);

commit 4fd92f51daa5748eebc2793b8da4af1bb4d37d23
Author: Mike Rapoport <mike.rapoport@gmail.com>
Date:   Mon Oct 26 09:06:02 2015 +0200

    staging: sm750fb: use 'struct sm750_dev *' instead of 'void *'
    
    Use proper 'struct sm750_dev *' type instead of 'void *'
    
    Signed-off-by: Mike Rapoport <mike.rapoport@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 58fcea537698..ac8e2a460ce8 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -1178,7 +1178,7 @@ static void lynxfb_pci_remove(struct pci_dev *pdev)
 {
 	struct fb_info *info;
 	struct lynx_share *share;
-	void *sm750_dev;
+	struct sm750_dev *sm750_dev;
 	struct lynxfb_par *par;
 	int cnt;
 

commit 700591a9adc8b1b8978283fd988fcb85aa1c8993
Author: Mike Rapoport <mike.rapoport@gmail.com>
Date:   Mon Oct 26 09:06:01 2015 +0200

    staging: sm750fb: replace lynx_share with sm750_dev in function calls
    
    Use sm750_dev rather than lynx_share as parameter for hw_sm750_map,
    hw_sm750_inithw and hw_sm750_initAccel functions.
    
    Signed-off-by: Mike Rapoport <mike.rapoport@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 39ab614911ca..58fcea537698 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -444,6 +444,7 @@ static int lynxfb_resume(struct pci_dev *pdev)
 {
 	struct fb_info *info;
 	struct lynx_share *share;
+	struct sm750_dev *sm750_dev;
 
 	struct lynxfb_par *par;
 	struct lynxfb_crtc *crtc;
@@ -453,6 +454,7 @@ static int lynxfb_resume(struct pci_dev *pdev)
 
 	ret = 0;
 	share = pci_get_drvdata(pdev);
+	sm750_dev = container_of(share, struct sm750_dev, share);
 
 	console_lock();
 
@@ -472,7 +474,7 @@ static int lynxfb_resume(struct pci_dev *pdev)
 		pci_set_master(pdev);
 	}
 
-	hw_sm750_inithw(share, pdev);
+	hw_sm750_inithw(sm750_dev, pdev);
 
 	info = share->fbinfo[0];
 
@@ -931,16 +933,15 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 }
 
 /*	chip specific g_option configuration routine */
-static void sm750fb_setup(struct lynx_share *share, char *src)
+static void sm750fb_setup(struct sm750_dev *sm750_dev, char *src)
 {
-	struct sm750_dev *sm750_dev;
+	struct lynx_share *share = &sm750_dev->share;
 	char *opt;
 #ifdef CAP_EXPENSION
 	char *exp_res;
 #endif
 	int swap;
 
-	sm750_dev = container_of(share, struct sm750_dev, share);
 #ifdef CAP_EXPENSIION
 	exp_res = NULL;
 #endif
@@ -1086,10 +1087,10 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 	}
 
 	/* call chip specific setup routine  */
-	sm750fb_setup(share, g_settings);
+	sm750fb_setup(sm750_dev, g_settings);
 
 	/* call chip specific mmap routine */
-	if (hw_sm750_map(share, pdev)) {
+	if (hw_sm750_map(sm750_dev, pdev)) {
 		pr_err("Memory map failed\n");
 		goto err_map;
 	}
@@ -1105,7 +1106,7 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 	pci_set_drvdata(pdev, share);
 
 	/* call chipInit routine */
-	hw_sm750_inithw(share, pdev);
+	hw_sm750_inithw(sm750_dev, pdev);
 
 	/* allocate frame buffer info structor according to g_dualview */
 	fbidx = 0;

commit f11fa2a972719520680f50352787618774dc0a9c
Author: Mike Rapoport <mike.rapoport@gmail.com>
Date:   Mon Oct 26 09:05:59 2015 +0200

    staging: sm750fb: replace lynx_share with sm750_dev in lynxfb_par
    
    Use sm750_dev instead of lynx_share in the private data of the
    frambuffer device.
    
    Signed-off-by: Mike Rapoport <mike.rapoport@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 46c236ee3fe8..39ab614911ca 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -173,7 +173,7 @@ static void lynxfb_ops_fillrect(struct fb_info *info,
 		return;
 
 	par = info->par;
-	share = par->share;
+	share = &par->dev->share;
 
 	/*
 	 * each time 2d function begin to work,below three variable always need
@@ -211,7 +211,7 @@ static void lynxfb_ops_copyarea(struct fb_info *info,
 	unsigned int base, pitch, Bpp;
 
 	par = info->par;
-	share = par->share;
+	share = &par->dev->share;
 
 	/*
 	 * each time 2d function begin to work,below three variable always need
@@ -245,7 +245,7 @@ static void lynxfb_ops_imageblit(struct fb_info *info,
 	struct lynx_share *share;
 
 	par = info->par;
-	share = par->share;
+	share = &par->dev->share;
 	/*
 	 * each time 2d function begin to work,below three variable always need
 	 * be set, seems we can put them together in some place
@@ -316,7 +316,7 @@ static int lynxfb_ops_set_par(struct fb_info *info)
 
 	ret = 0;
 	par = info->par;
-	share = par->share;
+	share = &par->dev->share;
 	crtc = &par->crtc;
 	output = &par->output;
 	var = &info->var;
@@ -516,7 +516,7 @@ static int lynxfb_ops_check_var(struct fb_var_screeninfo *var,
 	par = info->par;
 	crtc = &par->crtc;
 	output = &par->output;
-	share = par->share;
+	share = &par->dev->share;
 
 	pr_debug("check var:%dx%d-%d\n",
 		 var->xres,
@@ -652,8 +652,8 @@ static int sm750fb_set_drv(struct lynxfb_par *par)
 
 	ret = 0;
 
-	share = par->share;
-	sm750_dev = container_of(share, struct sm750_dev, share);
+	sm750_dev = par->dev;
+	share = &sm750_dev->share;
 	output = &par->output;
 	crtc = &par->crtc;
 
@@ -762,7 +762,7 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 
 	ret = 0;
 	par = (struct lynxfb_par *)info->par;
-	share = par->share;
+	share = &par->dev->share;
 	crtc = &par->crtc;
 	output = &par->output;
 	var = &info->var;
@@ -1124,7 +1124,7 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 		pr_info("framebuffer #%d alloc okay\n", fbidx);
 		share->fbinfo[fbidx] = info[fbidx];
 		par = info[fbidx]->par;
-		par->share = share;
+		par->dev = sm750_dev;
 
 		/* set fb_info structure */
 		if (lynxfb_set_fbinfo(info[fbidx], fbidx)) {

commit c96341916d3452e51f3c7d8460db4ecd344f8718
Author: Mike Rapoport <mike.rapoport@gmail.com>
Date:   Mon Oct 26 09:05:58 2015 +0200

    staging: sm750fb: remove unused PROC_SPEC_* typedefs
    
    The PROC_SPEC* typedefs are not used and can be removed
    
    Signed-off-by: Mike Rapoport <mike.rapoport@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index ad20a8aacad2..46c236ee3fe8 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -32,10 +32,6 @@
  * #endif
  */
 
-typedef void (*PROC_SPEC_SETUP)(struct lynx_share*, char *);
-typedef int (*PROC_SPEC_MAP)(struct lynx_share*, struct pci_dev*);
-typedef int (*PROC_SPEC_INITHW)(struct lynx_share*, struct pci_dev*);
-
 /* common var for all device */
 static int g_hwcursor = 1;
 static int g_noaccel;

commit 1757d106a9ce8cc299ffbc3cb87711ab72f95af6
Author: Mike Rapoport <mike.rapoport@gmail.com>
Date:   Mon Oct 26 09:05:57 2015 +0200

    staging: sm750fb: merge struct sm750_state into struct sm750_dev
    
    The struct sm750_state is never used on its own. Merge it into the
    struct sm750_dev.
    
    Signed-off-by: Mike Rapoport <mike.rapoport@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 2f3e35c30df0..ad20a8aacad2 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -676,7 +676,7 @@ static int sm750fb_set_drv(struct lynxfb_par *par)
 	/* chip specific phase */
 	share->accel.de_wait = (share->revid == SM750LE_REVISION_ID) ?
 				hw_sm750le_deWait : hw_sm750_deWait;
-	switch (sm750_dev->state.dataflow) {
+	switch (sm750_dev->dataflow) {
 	case sm750_simul_pri:
 		output->paths = sm750_pnc;
 		crtc->channel = sm750_primary;
@@ -950,12 +950,12 @@ static void sm750fb_setup(struct lynx_share *share, char *src)
 #endif
 	swap = 0;
 
-	sm750_dev->state.initParm.chip_clk = 0;
-	sm750_dev->state.initParm.mem_clk = 0;
-	sm750_dev->state.initParm.master_clk = 0;
-	sm750_dev->state.initParm.powerMode = 0;
-	sm750_dev->state.initParm.setAllEngOff = 0;
-	sm750_dev->state.initParm.resetMemory = 1;
+	sm750_dev->initParm.chip_clk = 0;
+	sm750_dev->initParm.mem_clk = 0;
+	sm750_dev->initParm.master_clk = 0;
+	sm750_dev->initParm.powerMode = 0;
+	sm750_dev->initParm.setAllEngOff = 0;
+	sm750_dev->initParm.resetMemory = 1;
 
 	/* defaultly turn g_hwcursor on for both view */
 	g_hwcursor = 3;
@@ -972,13 +972,13 @@ static void sm750fb_setup(struct lynx_share *share, char *src)
 		if (!strncmp(opt, "swap", strlen("swap")))
 			swap = 1;
 		else if (!strncmp(opt, "nocrt", strlen("nocrt")))
-			sm750_dev->state.nocrt = 1;
+			sm750_dev->nocrt = 1;
 		else if (!strncmp(opt, "36bit", strlen("36bit")))
-			sm750_dev->state.pnltype = sm750_doubleTFT;
+			sm750_dev->pnltype = sm750_doubleTFT;
 		else if (!strncmp(opt, "18bit", strlen("18bit")))
-			sm750_dev->state.pnltype = sm750_dualTFT;
+			sm750_dev->pnltype = sm750_dualTFT;
 		else if (!strncmp(opt, "24bit", strlen("24bit")))
-			sm750_dev->state.pnltype = sm750_24TFT;
+			sm750_dev->pnltype = sm750_24TFT;
 #ifdef CAP_EXPANSION
 		else if (!strncmp(opt, "exp:", strlen("exp:")))
 			exp_res = opt + strlen("exp:");
@@ -1003,10 +1003,10 @@ static void sm750fb_setup(struct lynx_share *share, char *src)
 	}
 #ifdef CAP_EXPANSION
 	if (getExpRes(exp_res,
-		      &sm750_dev->state.xLCD,
-		      &sm750_dev->state.yLCD)) {
+		      &sm750_dev->xLCD,
+		      &sm750_dev->yLCD)) {
 		/* seems exp_res is not valid */
-		sm750_dev->state.xLCD = sm750_dev->state.yLCD = 0;
+		sm750_dev->xLCD = sm750_dev->yLCD = 0;
 	}
 #endif
 
@@ -1014,20 +1014,20 @@ static void sm750fb_setup(struct lynx_share *share, char *src)
 	if (share->revid != SM750LE_REVISION_ID) {
 		if (share->dual) {
 			if (swap)
-				sm750_dev->state.dataflow = sm750_dual_swap;
+				sm750_dev->dataflow = sm750_dual_swap;
 			else
-				sm750_dev->state.dataflow = sm750_dual_normal;
+				sm750_dev->dataflow = sm750_dual_normal;
 		} else {
 			if (swap)
-				sm750_dev->state.dataflow = sm750_simul_sec;
+				sm750_dev->dataflow = sm750_simul_sec;
 			else
-				sm750_dev->state.dataflow = sm750_simul_pri;
+				sm750_dev->dataflow = sm750_simul_pri;
 		}
 	} else {
 		/* SM750LE only have one crt channel */
-		sm750_dev->state.dataflow = sm750_simul_sec;
+		sm750_dev->dataflow = sm750_simul_sec;
 		/* sm750le do not have complex attributes */
-		sm750_dev->state.nocrt = 0;
+		sm750_dev->nocrt = 0;
 	}
 }
 

commit 5ef2f688578c5de8231ae325f5dff8cfe970d2da
Author: Mike Rapoport <mike.rapoport@gmail.com>
Date:   Mon Oct 26 09:05:56 2015 +0200

    staging: sm750fb: rename 'struct sm750_dev' variables to sm750_dev
    
    Use consistent naming for 'struct sm750_dev' variables
    
    Signed-off-by: Mike Rapoport <mike.rapoport@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 4c689e0753df..2f3e35c30df0 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -650,21 +650,21 @@ static int sm750fb_set_drv(struct lynxfb_par *par)
 {
 	int ret;
 	struct lynx_share *share;
-	struct sm750_dev *spec_share;
+	struct sm750_dev *sm750_dev;
 	struct lynxfb_output *output;
 	struct lynxfb_crtc *crtc;
 
 	ret = 0;
 
 	share = par->share;
-	spec_share = container_of(share, struct sm750_dev, share);
+	sm750_dev = container_of(share, struct sm750_dev, share);
 	output = &par->output;
 	crtc = &par->crtc;
 
 	crtc->vidmem_size = (share->dual) ? share->vidmem_size >> 1 :
 			     share->vidmem_size;
 	/* setup crtc and output member */
-	spec_share->hwCursor = g_hwcursor;
+	sm750_dev->hwCursor = g_hwcursor;
 
 	crtc->line_pad = 16;
 	crtc->xpanstep = 8;
@@ -676,7 +676,7 @@ static int sm750fb_set_drv(struct lynxfb_par *par)
 	/* chip specific phase */
 	share->accel.de_wait = (share->revid == SM750LE_REVISION_ID) ?
 				hw_sm750le_deWait : hw_sm750_deWait;
-	switch (spec_share->state.dataflow) {
+	switch (sm750_dev->state.dataflow) {
 	case sm750_simul_pri:
 		output->paths = sm750_pnc;
 		crtc->channel = sm750_primary;
@@ -937,25 +937,25 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 /*	chip specific g_option configuration routine */
 static void sm750fb_setup(struct lynx_share *share, char *src)
 {
-	struct sm750_dev *spec_share;
+	struct sm750_dev *sm750_dev;
 	char *opt;
 #ifdef CAP_EXPENSION
 	char *exp_res;
 #endif
 	int swap;
 
-	spec_share = container_of(share, struct sm750_dev, share);
+	sm750_dev = container_of(share, struct sm750_dev, share);
 #ifdef CAP_EXPENSIION
 	exp_res = NULL;
 #endif
 	swap = 0;
 
-	spec_share->state.initParm.chip_clk = 0;
-	spec_share->state.initParm.mem_clk = 0;
-	spec_share->state.initParm.master_clk = 0;
-	spec_share->state.initParm.powerMode = 0;
-	spec_share->state.initParm.setAllEngOff = 0;
-	spec_share->state.initParm.resetMemory = 1;
+	sm750_dev->state.initParm.chip_clk = 0;
+	sm750_dev->state.initParm.mem_clk = 0;
+	sm750_dev->state.initParm.master_clk = 0;
+	sm750_dev->state.initParm.powerMode = 0;
+	sm750_dev->state.initParm.setAllEngOff = 0;
+	sm750_dev->state.initParm.resetMemory = 1;
 
 	/* defaultly turn g_hwcursor on for both view */
 	g_hwcursor = 3;
@@ -972,13 +972,13 @@ static void sm750fb_setup(struct lynx_share *share, char *src)
 		if (!strncmp(opt, "swap", strlen("swap")))
 			swap = 1;
 		else if (!strncmp(opt, "nocrt", strlen("nocrt")))
-			spec_share->state.nocrt = 1;
+			sm750_dev->state.nocrt = 1;
 		else if (!strncmp(opt, "36bit", strlen("36bit")))
-			spec_share->state.pnltype = sm750_doubleTFT;
+			sm750_dev->state.pnltype = sm750_doubleTFT;
 		else if (!strncmp(opt, "18bit", strlen("18bit")))
-			spec_share->state.pnltype = sm750_dualTFT;
+			sm750_dev->state.pnltype = sm750_dualTFT;
 		else if (!strncmp(opt, "24bit", strlen("24bit")))
-			spec_share->state.pnltype = sm750_24TFT;
+			sm750_dev->state.pnltype = sm750_24TFT;
 #ifdef CAP_EXPANSION
 		else if (!strncmp(opt, "exp:", strlen("exp:")))
 			exp_res = opt + strlen("exp:");
@@ -1003,10 +1003,10 @@ static void sm750fb_setup(struct lynx_share *share, char *src)
 	}
 #ifdef CAP_EXPANSION
 	if (getExpRes(exp_res,
-		      &spec_share->state.xLCD,
-		      &spec_share->state.yLCD)) {
+		      &sm750_dev->state.xLCD,
+		      &sm750_dev->state.yLCD)) {
 		/* seems exp_res is not valid */
-		spec_share->state.xLCD = spec_share->state.yLCD = 0;
+		sm750_dev->state.xLCD = sm750_dev->state.yLCD = 0;
 	}
 #endif
 
@@ -1014,20 +1014,20 @@ static void sm750fb_setup(struct lynx_share *share, char *src)
 	if (share->revid != SM750LE_REVISION_ID) {
 		if (share->dual) {
 			if (swap)
-				spec_share->state.dataflow = sm750_dual_swap;
+				sm750_dev->state.dataflow = sm750_dual_swap;
 			else
-				spec_share->state.dataflow = sm750_dual_normal;
+				sm750_dev->state.dataflow = sm750_dual_normal;
 		} else {
 			if (swap)
-				spec_share->state.dataflow = sm750_simul_sec;
+				sm750_dev->state.dataflow = sm750_simul_sec;
 			else
-				spec_share->state.dataflow = sm750_simul_pri;
+				sm750_dev->state.dataflow = sm750_simul_pri;
 		}
 	} else {
 		/* SM750LE only have one crt channel */
-		spec_share->state.dataflow = sm750_simul_sec;
+		sm750_dev->state.dataflow = sm750_simul_sec;
 		/* sm750le do not have complex attributes */
-		spec_share->state.nocrt = 0;
+		sm750_dev->state.nocrt = 0;
 	}
 }
 
@@ -1037,7 +1037,7 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 	struct fb_info *info[] = {NULL, NULL};
 	struct lynx_share *share = NULL;
 
-	struct sm750_dev *spec_share = NULL;
+	struct sm750_dev *sm750_dev = NULL;
 	size_t spec_offset = 0;
 	int fbidx;
 
@@ -1053,14 +1053,14 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 	 */
 	spec_offset = offsetof(struct sm750_dev, share);
 
-	spec_share = kzalloc(sizeof(*spec_share), GFP_KERNEL);
-	if (!spec_share) {
+	sm750_dev = kzalloc(sizeof(*sm750_dev), GFP_KERNEL);
+	if (!sm750_dev) {
 		pr_err("Could not allocate memory for share.\n");
 		goto err_share;
 	}
 
 	/* setting share structure */
-	share = (struct lynx_share *)(&(spec_share->share));
+	share = (struct lynx_share *)(&(sm750_dev->share));
 	share->fbinfo[0] = share->fbinfo[1] = NULL;
 	share->devid = pdev->device;
 	share->revid = pdev->revision;
@@ -1171,7 +1171,7 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 	framebuffer_release(info[0]);
 err_info0_alloc:
 err_map:
-	kfree(spec_share);
+	kfree(sm750_dev);
 err_share:
 err_enable:
 	return -ENODEV;
@@ -1181,7 +1181,7 @@ static void lynxfb_pci_remove(struct pci_dev *pdev)
 {
 	struct fb_info *info;
 	struct lynx_share *share;
-	void *spec_share;
+	void *sm750_dev;
 	struct lynxfb_par *par;
 	int cnt;
 
@@ -1202,9 +1202,9 @@ static void lynxfb_pci_remove(struct pci_dev *pdev)
 
 	iounmap(share->pvReg);
 	iounmap(share->pvMem);
-	spec_share = container_of(share, struct sm750_dev, share);
+	sm750_dev = container_of(share, struct sm750_dev, share);
 	kfree(g_settings);
-	kfree(spec_share);
+	kfree(sm750_dev);
 	pci_set_drvdata(pdev, NULL);
 }
 

commit bc3d48f33e0a0b9f1a28d3ab06d4adc788726a9b
Author: Mike Rapoport <mike.rapoport@gmail.com>
Date:   Mon Oct 26 09:05:55 2015 +0200

    staging: sm750fb: rename struct sm750_share to sm750_dev
    
    The struct sm750_share represents the device state and name sm750_dev
    seems more appropriate.
    
    Signed-off-by: Mike Rapoport <mike.rapoport@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 6b2c4dab4055..4c689e0753df 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -650,14 +650,14 @@ static int sm750fb_set_drv(struct lynxfb_par *par)
 {
 	int ret;
 	struct lynx_share *share;
-	struct sm750_share *spec_share;
+	struct sm750_dev *spec_share;
 	struct lynxfb_output *output;
 	struct lynxfb_crtc *crtc;
 
 	ret = 0;
 
 	share = par->share;
-	spec_share = container_of(share, struct sm750_share, share);
+	spec_share = container_of(share, struct sm750_dev, share);
 	output = &par->output;
 	crtc = &par->crtc;
 
@@ -937,14 +937,14 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 /*	chip specific g_option configuration routine */
 static void sm750fb_setup(struct lynx_share *share, char *src)
 {
-	struct sm750_share *spec_share;
+	struct sm750_dev *spec_share;
 	char *opt;
 #ifdef CAP_EXPENSION
 	char *exp_res;
 #endif
 	int swap;
 
-	spec_share = container_of(share, struct sm750_share, share);
+	spec_share = container_of(share, struct sm750_dev, share);
 #ifdef CAP_EXPENSIION
 	exp_res = NULL;
 #endif
@@ -1037,7 +1037,7 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 	struct fb_info *info[] = {NULL, NULL};
 	struct lynx_share *share = NULL;
 
-	struct sm750_share *spec_share = NULL;
+	struct sm750_dev *spec_share = NULL;
 	size_t spec_offset = 0;
 	int fbidx;
 
@@ -1048,10 +1048,10 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 	}
 
 	/*
-	 * though offset of share in sm750_share is 0,
+	 * though offset of share in sm750_dev is 0,
 	 * we use this marcro as the same
 	 */
-	spec_offset = offsetof(struct sm750_share, share);
+	spec_offset = offsetof(struct sm750_dev, share);
 
 	spec_share = kzalloc(sizeof(*spec_share), GFP_KERNEL);
 	if (!spec_share) {
@@ -1202,7 +1202,7 @@ static void lynxfb_pci_remove(struct pci_dev *pdev)
 
 	iounmap(share->pvReg);
 	iounmap(share->pvMem);
-	spec_share = container_of(share, struct sm750_share, share);
+	spec_share = container_of(share, struct sm750_dev, share);
 	kfree(g_settings);
 	kfree(spec_share);
 	pci_set_drvdata(pdev, NULL);

commit 05407e153fce1e548fe34086057960da3d5adb53
Author: Mike Rapoport <mike.rapoport@gmail.com>
Date:   Mon Oct 26 09:05:54 2015 +0200

    staging: sm750fb: merge sm750_hw.h into sm750.h
    
    There is no actual need to split type definitions and global function
    declarations between lots of small headers.
    
    Signed-off-by: Mike Rapoport <mike.rapoport@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 3801b647ba67..6b2c4dab4055 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -18,7 +18,6 @@
 #include <linux/console.h>
 #include <asm/fb.h>
 #include "sm750.h"
-#include "sm750_hw.h"
 #include "sm750_accel.h"
 #include "sm750_cursor.h"
 

commit 492bcecfd8faa5e83f76422c85f08d7efcfe925b
Author: Mike Rapoport <mike.rapoport@gmail.com>
Date:   Mon Oct 26 09:05:53 2015 +0200

    staging: sm750fb: remove unused smi_indent variable
    
    The smi_indent variable is only declared, but never used. Remove it.
    
    Signed-off-by: Mike Rapoport <mike.rapoport@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index e046123b4792..3801b647ba67 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -24,8 +24,6 @@
 
 #include "modedb.h"
 
-int smi_indent;
-
 /*
  * #ifdef __BIG_ENDIAN
  * ssize_t lynxfb_ops_write(struct fb_info *info, const char __user *buf,

commit e3a3f9f5123683bc87ce70189c9912a15b76b91b
Author: Mike Rapoport <mike.rapoport@gmail.com>
Date:   Mon Oct 26 09:05:52 2015 +0200

    staging: sm750fb: replace PADDING macro with ALIGN
    
    The custom macro PADDING differs from standard kernel ALIGN only in
    parameters order. Replace PADDING with ALIGN and remove it's definition.
    
    Signed-off-by: Mike Rapoport <mike.rapoport@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 3fbcee68c567..e046123b4792 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -331,7 +331,7 @@ static int lynxfb_ops_set_par(struct fb_info *info)
 
 	/* fix structur is not so FIX ... */
 	line_length = var->xres_virtual * var->bits_per_pixel / 8;
-	line_length = PADDING(crtc->line_pad, line_length);
+	line_length = ALIGN(line_length, crtc->line_pad);
 	fix->line_length = line_length;
 	pr_info("fix->line_length = %d\n", fix->line_length);
 
@@ -574,7 +574,7 @@ static int lynxfb_ops_check_var(struct fb_var_screeninfo *var,
 	request = var->xres_virtual * (var->bits_per_pixel >> 3);
 	/* defaulty crtc->channel go with par->index */
 
-	request = PADDING(crtc->line_pad, request);
+	request = ALIGN(request, crtc->line_pad);
 	request = request * var->yres_virtual;
 	if (crtc->vidmem_size < request) {
 		pr_err("not enough video memory for mode\n");
@@ -865,8 +865,8 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 	par->info = info;
 
 	/* set info */
-	line_length = PADDING(crtc->line_pad,
-			      (var->xres_virtual * var->bits_per_pixel / 8));
+	line_length = ALIGN((var->xres_virtual * var->bits_per_pixel / 8),
+			    crtc->line_pad);
 
 	info->pseudo_palette = &par->pseudo_palette[0];
 	info->screen_base = crtc->vScreen;

commit fb7f40559e292325e7b69e83a161f4e121a38cbe
Author: Mike Rapoport <mike.rapoport@gmail.com>
Date:   Mon Oct 26 09:05:50 2015 +0200

    staging: sm750fb: replace lynx_cursor methods with function calls
    
    The methods in lynx_cursor always use the same implementation and there is
    no point to use redirection rather than direct function call.
    
    Signed-off-by: Mike Rapoport <mike.rapoport@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index cd2062966f2f..3fbcee68c567 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -129,16 +129,16 @@ static int lynxfb_ops_cursor(struct fb_info *info, struct fb_cursor *fbcursor)
 		return -ENXIO;
 	}
 
-	cursor->disable(cursor);
+	hw_cursor_disable(cursor);
 	if (fbcursor->set & FB_CUR_SETSIZE)
-		cursor->setSize(cursor,
-				fbcursor->image.width,
-				fbcursor->image.height);
+		hw_cursor_setSize(cursor,
+				  fbcursor->image.width,
+				  fbcursor->image.height);
 
 	if (fbcursor->set & FB_CUR_SETPOS)
-		cursor->setPos(cursor,
-			       fbcursor->image.dx - info->var.xoffset,
-			       fbcursor->image.dy - info->var.yoffset);
+		hw_cursor_setPos(cursor,
+				 fbcursor->image.dx - info->var.xoffset,
+				 fbcursor->image.dy - info->var.yoffset);
 
 	if (fbcursor->set & FB_CUR_SETCMAP) {
 		/* get the 16bit color of kernel means */
@@ -152,18 +152,18 @@ static int lynxfb_ops_cursor(struct fb_info *info, struct fb_cursor *fbcursor)
 		      ((info->cmap.green[fbcursor->image.bg_color] & 0xfc00) >> 5) |
 		      ((info->cmap.blue[fbcursor->image.bg_color] & 0xf800) >> 11);
 
-		cursor->setColor(cursor, fg, bg);
+		hw_cursor_setColor(cursor, fg, bg);
 	}
 
 	if (fbcursor->set & (FB_CUR_SETSHAPE | FB_CUR_SETIMAGE)) {
-		cursor->setData(cursor,
-				fbcursor->rop,
-				fbcursor->image.data,
-				fbcursor->mask);
+		hw_cursor_setData(cursor,
+				  fbcursor->rop,
+				  fbcursor->image.data,
+				  fbcursor->mask);
 	}
 
 	if (fbcursor->enable)
-		cursor->enable(cursor);
+		hw_cursor_enable(cursor);
 
 	return 0;
 }
@@ -791,19 +791,13 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 	pr_info("crtc->cursor.mmio = %p\n", crtc->cursor.mmio);
 	crtc->cursor.maxH = crtc->cursor.maxW = 64;
 	crtc->cursor.size = crtc->cursor.maxH * crtc->cursor.maxW * 2 / 8;
-	crtc->cursor.disable = hw_cursor_disable;
-	crtc->cursor.enable = hw_cursor_enable;
-	crtc->cursor.setColor = hw_cursor_setColor;
-	crtc->cursor.setPos = hw_cursor_setPos;
-	crtc->cursor.setSize = hw_cursor_setSize;
-	crtc->cursor.setData = hw_cursor_setData;
 	crtc->cursor.vstart = share->pvMem + crtc->cursor.offset;
 
 	crtc->cursor.share = share;
 		memset_io(crtc->cursor.vstart, 0, crtc->cursor.size);
 	if (!g_hwcursor) {
 		lynxfb_ops.fb_cursor = NULL;
-		crtc->cursor.disable(&crtc->cursor);
+		hw_cursor_disable(&crtc->cursor);
 	}
 
 	/* set info->fbops, must be set before fb_find_mode */

commit 9821ed04795f019bfa14573847c743c6b89d96c4
Author: Mike Rapoport <mike.rapoport@gmail.com>
Date:   Fri Oct 23 17:55:11 2015 +0300

    staging: sm750fb: use direct call to hw_sm750_output_setMode
    
    The proc_setMode method in lynx_output always uses the same
    implementation and there is no point to use redirection rather than
    direct function call.
    
    Signed-off-by: Mike Rapoport <mike.rapoport@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 24c4f39c79b7..cd2062966f2f 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -386,7 +386,7 @@ static int lynxfb_ops_set_par(struct fb_info *info)
 	}
 	ret = hw_sm750_crtc_setMode(crtc, var, fix);
 	if (!ret)
-		ret = output->proc_setMode(output, var, fix);
+		ret = hw_sm750_output_setMode(output, var, fix);
 	return ret;
 }
 
@@ -674,8 +674,6 @@ static int sm750fb_set_drv(struct lynxfb_par *par)
 	crtc->ypanstep = 1;
 	crtc->ywrapstep = 0;
 
-	output->proc_setMode = hw_sm750_output_setMode;
-
 	output->proc_setBLANK = (share->revid == SM750LE_REVISION_ID) ?
 				 hw_sm750le_setBLANK : hw_sm750_setBLANK;
 	/* chip specific phase */

commit c202beee7f4b2b4f363e21fea714c8afcb08b12e
Author: Mike Rapoport <mike.rapoport@gmail.com>
Date:   Fri Oct 23 17:55:10 2015 +0300

    staging: sm750fb: replace lynx_crtc methods with function calls
    
    The methods in lynx_crtc always use the same implementation and there is
    no point to use redirection rather than direct function call.
    
    Signed-off-by: Mike Rapoport <mike.rapoport@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 7eca4cb3c656..24c4f39c79b7 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -304,7 +304,7 @@ static int lynxfb_ops_pan_display(struct fb_var_screeninfo *var,
 
 	par = info->par;
 	crtc = &par->crtc;
-	return crtc->proc_panDisplay(crtc, var, info);
+	return hw_sm750_pan_display(crtc, var, info);
 }
 
 static int lynxfb_ops_set_par(struct fb_info *info)
@@ -384,7 +384,7 @@ static int lynxfb_ops_set_par(struct fb_info *info)
 		pr_err("pixel bpp format not satisfied\n.");
 		return ret;
 	}
-	ret = crtc->proc_setMode(crtc, var, fix);
+	ret = hw_sm750_crtc_setMode(crtc, var, fix);
 	if (!ret)
 		ret = output->proc_setMode(output, var, fix);
 	return ret;
@@ -581,7 +581,7 @@ static int lynxfb_ops_check_var(struct fb_var_screeninfo *var,
 		return -ENOMEM;
 	}
 
-	return crtc->proc_checkMode(crtc, var);
+	return hw_sm750_crtc_checkMode(crtc, var);
 }
 
 static int lynxfb_ops_setcolreg(unsigned regno,
@@ -614,7 +614,7 @@ static int lynxfb_ops_setcolreg(unsigned regno,
 		red >>= 8;
 		green >>= 8;
 		blue >>= 8;
-		ret = crtc->proc_setColReg(crtc, regno, red, green, blue);
+		ret = hw_sm750_setColReg(crtc, regno, red, green, blue);
 		goto exit;
 	}
 
@@ -669,10 +669,6 @@ static int sm750fb_set_drv(struct lynxfb_par *par)
 	/* setup crtc and output member */
 	spec_share->hwCursor = g_hwcursor;
 
-	crtc->proc_setMode = hw_sm750_crtc_setMode;
-	crtc->proc_checkMode = hw_sm750_crtc_checkMode;
-	crtc->proc_setColReg = hw_sm750_setColReg;
-	crtc->proc_panDisplay = hw_sm750_pan_display;
 	crtc->line_pad = 16;
 	crtc->xpanstep = 8;
 	crtc->ypanstep = 1;

commit 9b2941e27e364c2c3ef7731dab9c7c8564acb690
Author: Mike Rapoport <mike.rapoport@gmail.com>
Date:   Fri Oct 23 17:55:09 2015 +0300

    staging: sm750fb: remove unused methods from lynx_share
    
    The suspend and resume methods in lynx_share are not implemented and
    never set. Remove them.
    
    Signed-off-by: Mike Rapoport <mike.rapoport@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 805a403eaba4..7eca4cb3c656 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -434,10 +434,6 @@ static int lynxfb_suspend(struct pci_dev *pdev, pm_message_t mesg)
 			return ret;
 		}
 
-		/* set chip to sleep mode */
-		if (share->suspend)
-			(*share->suspend)(share);
-
 		pci_disable_device(pdev);
 		ret = pci_set_power_state(pdev, pci_choose_state(pdev, mesg));
 		if (ret) {
@@ -482,8 +478,6 @@ static int lynxfb_resume(struct pci_dev *pdev)
 		}
 		pci_set_master(pdev);
 	}
-	if (share->resume)
-		(*share->resume)(share);
 
 	hw_sm750_inithw(share, pdev);
 

commit f955a398f2cc5bc896388b8046c3c12fc5ec687b
Author: Shivani Bhardwaj <shivanib134@gmail.com>
Date:   Wed Oct 14 03:06:20 2015 +0530

    Staging: sm750fb: sm750: Remove irrelevant code
    
    The variable ret is only declared and initialized to 0, but never
    referenced, so remove it.
    
    Signed-off-by: Shivani Bhardwaj <shivanib134@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 8c1ecb32f953..805a403eaba4 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -524,14 +524,12 @@ static int lynxfb_ops_check_var(struct fb_var_screeninfo *var,
 	struct lynxfb_crtc *crtc;
 	struct lynxfb_output *output;
 	struct lynx_share *share;
-	int ret;
 	resource_size_t request;
 
 	par = info->par;
 	crtc = &par->crtc;
 	output = &par->output;
 	share = par->share;
-	ret = 0;
 
 	pr_debug("check var:%dx%d-%d\n",
 		 var->xres,

commit 31557ea0337eb3db5937f441bfa028caba5836d6
Author: Binbin Zhou <zhoubb@lemote.com>
Date:   Mon Oct 12 09:48:27 2015 +0800

    staging: sm750fb: Fix the power state error in resume
    
    The PM_EVENT_RESUME state is needed when SM750 resume, otherwise it
    will be failed in the second time of continuous suspend/resume.
    
    Cc: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Binbin Zhou <zhoubb@lemote.com>
    Reviewed-by: Huacai Chen <chenhc@lemote.com>
    Reviewed-by: Teddy Wang <teddy.wang@siliconmotion.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 494017f5235c..8c1ecb32f953 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -511,6 +511,7 @@ static int lynxfb_resume(struct pci_dev *pdev)
 		fb_set_suspend(info, 0);
 	}
 
+	pdev->dev.power.power_state.event = PM_EVENT_RESUME;
 	console_unlock();
 	return ret;
 }

commit 4dc4d225550e12bb0526a2dc05c0073f44121714
Author: Mike Rapoport <mike.rapoport@gmail.com>
Date:   Thu Oct 1 12:14:04 2015 +0300

    staging: sm750fb: remove clear method from lynxfb_{crtc,output}
    
    The clear methods of lynxfb_crtc and lynxfb_output are empty and
    therefore they can be removed.
    
    Signed-off-by: Mike Rapoport <mike.rapoport@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 646d2814ea55..494017f5235c 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -680,7 +680,6 @@ static int sm750fb_set_drv(struct lynxfb_par *par)
 	crtc->proc_checkMode = hw_sm750_crtc_checkMode;
 	crtc->proc_setColReg = hw_sm750_setColReg;
 	crtc->proc_panDisplay = hw_sm750_pan_display;
-	crtc->clear = hw_sm750_crtc_clear;
 	crtc->line_pad = 16;
 	crtc->xpanstep = 8;
 	crtc->ypanstep = 1;
@@ -690,7 +689,6 @@ static int sm750fb_set_drv(struct lynxfb_par *par)
 
 	output->proc_setBLANK = (share->revid == SM750LE_REVISION_ID) ?
 				 hw_sm750le_setBLANK : hw_sm750_setBLANK;
-	output->clear = hw_sm750_output_clear;
 	/* chip specific phase */
 	share->accel.de_wait = (share->revid == SM750LE_REVISION_ID) ?
 				hw_sm750le_deWait : hw_sm750_deWait;
@@ -1219,9 +1217,6 @@ static void lynxfb_pci_remove(struct pci_dev *pdev)
 		par = info->par;
 
 		unregister_framebuffer(info);
-		/* clean crtc & output allocations */
-		par->crtc.clear(&par->crtc);
-		par->output.clear(&par->output);
 		/* release frame buffer */
 		framebuffer_release(info);
 	}

commit efca4885b2b86d9c1a2eb579f6e9d573d44896f8
Author: Mike Rapoport <mike.rapoport@gmail.com>
Date:   Thu Oct 1 12:14:03 2015 +0300

    staging: sm750fb: remove proc_checkMode method from lynxfb_output
    
    The proc_checkMode of lynxfb_output is set to function that always
    returns 0. Calling that function and checking for its return value is
    meaningless.
    
    Signed-off-by: Mike Rapoport <mike.rapoport@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 4d261d561053..646d2814ea55 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -588,10 +588,7 @@ static int lynxfb_ops_check_var(struct fb_var_screeninfo *var,
 		return -ENOMEM;
 	}
 
-	ret = output->proc_checkMode(output, var);
-	if (!ret)
-		ret = crtc->proc_checkMode(crtc, var);
-	return ret;
+	return crtc->proc_checkMode(crtc, var);
 }
 
 static int lynxfb_ops_setcolreg(unsigned regno,
@@ -690,7 +687,6 @@ static int sm750fb_set_drv(struct lynxfb_par *par)
 	crtc->ywrapstep = 0;
 
 	output->proc_setMode = hw_sm750_output_setMode;
-	output->proc_checkMode = hw_sm750_output_checkMode;
 
 	output->proc_setBLANK = (share->revid == SM750LE_REVISION_ID) ?
 				 hw_sm750le_setBLANK : hw_sm750_setBLANK;

commit 104f456ce1301fa49f7dffc129c0bce420da07df
Author: Mike Rapoport <mike.rapoport@gmail.com>
Date:   Thu Oct 1 12:14:02 2015 +0300

    staging: sm750fb: remove unneeded switch statement
    
    The lynxfb_ops_check_var function has two switch statements, the first
    one checks for validity of var->bits_per_pixel and it is is immediatly
    followed by another one that sets parameters according to
    var->bits_per_pixel value. These switch statements can be merged into
    one.
    
    Signed-off-by: Mike Rapoport <mike.rapoport@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 81fe3c3266d5..4d261d561053 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -537,18 +537,6 @@ static int lynxfb_ops_check_var(struct fb_var_screeninfo *var,
 		 var->yres,
 		 var->bits_per_pixel);
 
-	switch (var->bits_per_pixel) {
-	case 8:
-	case 16:
-	case 24: /* support 24 bpp for only lynx712/722/720 */
-	case 32:
-		break;
-	default:
-		pr_err("bpp %d not supported\n", var->bits_per_pixel);
-		ret = -EINVAL;
-		goto exit;
-	}
-
 	switch (var->bits_per_pixel) {
 	case 8:
 		info->fix.visual = FB_VISUAL_PSEUDOCOLOR;
@@ -583,8 +571,8 @@ static int lynxfb_ops_check_var(struct fb_var_screeninfo *var,
 		info->fix.visual = FB_VISUAL_TRUECOLOR;
 		break;
 	default:
-		ret = -EINVAL;
-		break;
+		pr_err("bpp %d not supported\n", var->bits_per_pixel);
+		return -EINVAL;
 	}
 	var->height = var->width = -1;
 	var->accel_flags = 0;/* FB_ACCELF_TEXT; */
@@ -603,7 +591,6 @@ static int lynxfb_ops_check_var(struct fb_var_screeninfo *var,
 	ret = output->proc_checkMode(output, var);
 	if (!ret)
 		ret = crtc->proc_checkMode(crtc, var);
-exit:
 	return ret;
 }
 

commit 67088d49a1c952c71448e75b6105ad5ce9c04719
Author: Mike Rapoport <mike.rapoport@gmail.com>
Date:   Tue Sep 22 12:01:16 2015 +0300

    staging: sm750fb: tidy up #include directives
    
    Add space between '#include' keyword and the header name
    
    Signed-off-by: Mike Rapoport <mike.rapoport@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 07f8afd2defe..81fe3c3266d5 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -1,20 +1,20 @@
-#include<linux/kernel.h>
-#include<linux/module.h>
-#include<linux/errno.h>
-#include<linux/string.h>
-#include<linux/mm.h>
-#include<linux/slab.h>
-#include<linux/delay.h>
-#include<linux/fb.h>
-#include<linux/ioport.h>
-#include<linux/init.h>
-#include<linux/pci.h>
-#include<linux/mm_types.h>
-#include<linux/vmalloc.h>
-#include<linux/pagemap.h>
-#include<linux/screen_info.h>
-#include<linux/vmalloc.h>
-#include<linux/pagemap.h>
+#include <linux/kernel.h>
+#include <linux/module.h>
+#include <linux/errno.h>
+#include <linux/string.h>
+#include <linux/mm.h>
+#include <linux/slab.h>
+#include <linux/delay.h>
+#include <linux/fb.h>
+#include <linux/ioport.h>
+#include <linux/init.h>
+#include <linux/pci.h>
+#include <linux/mm_types.h>
+#include <linux/vmalloc.h>
+#include <linux/pagemap.h>
+#include <linux/screen_info.h>
+#include <linux/vmalloc.h>
+#include <linux/pagemap.h>
 #include <linux/console.h>
 #include <asm/fb.h>
 #include "sm750.h"

commit 4063ea9af6d287975732a0c992e7fe870591d365
Author: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
Date:   Fri Aug 7 17:34:06 2015 +0530

    staging: sm750fb: simplify return
    
    Lets return the return value directly instead of using a variable to
    store the result.
    
    Signed-off-by: Sudip Mukherjee <sudip@vectorindia.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index e7fad0f2cdf8..07f8afd2defe 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -298,17 +298,13 @@ static int lynxfb_ops_pan_display(struct fb_var_screeninfo *var,
 {
 	struct lynxfb_par *par;
 	struct lynxfb_crtc *crtc;
-	int ret;
 
 	if (!info)
 		return -EINVAL;
 
-	ret = 0;
 	par = info->par;
 	crtc = &par->crtc;
-	ret = crtc->proc_panDisplay(crtc, var, info);
-
-	return ret;
+	return crtc->proc_panDisplay(crtc, var, info);
 }
 
 static int lynxfb_ops_set_par(struct fb_info *info)

commit f8fbc838f4b2cd72da11568b09b956806b98c29e
Author: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
Date:   Fri Aug 7 17:34:05 2015 +0530

    staging: sm750fb: rearrange code
    
    Rearrange the code to remove one exit label which also makes the code
    less indented and more readable.
    
    Signed-off-by: Sudip Mukherjee <sudip@vectorindia.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index fa2183d33bda..e7fad0f2cdf8 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -261,22 +261,21 @@ static void lynxfb_ops_imageblit(struct fb_info *info,
 	pitch = info->fix.line_length;
 	Bpp = info->var.bits_per_pixel >> 3;
 
-	if (image->depth == 1) {
-		if (info->fix.visual == FB_VISUAL_TRUECOLOR ||
-		    info->fix.visual == FB_VISUAL_DIRECTCOLOR) {
-			fgcol = ((u32 *)info->pseudo_palette)[image->fg_color];
-			bgcol = ((u32 *)info->pseudo_palette)[image->bg_color];
-		} else {
-			fgcol = image->fg_color;
-			bgcol = image->bg_color;
-		}
-		goto _do_work;
-	}
 	/* TODO: Implement hardware acceleration for image->depth > 1 */
-	cfb_imageblit(info, image);
-	return;
+	if (image->depth != 1) {
+		cfb_imageblit(info, image);
+		return;
+	}
+
+	if (info->fix.visual == FB_VISUAL_TRUECOLOR ||
+	    info->fix.visual == FB_VISUAL_DIRECTCOLOR) {
+		fgcol = ((u32 *)info->pseudo_palette)[image->fg_color];
+		bgcol = ((u32 *)info->pseudo_palette)[image->bg_color];
+	} else {
+		fgcol = image->fg_color;
+		bgcol = image->bg_color;
+	}
 
-_do_work:
 	/*
 	 * If not use spin_lock, system will die if user load driver
 	 * and immediately unload driver frequently (dual)

commit d11ac7cbcc266c6c2a6ae504e070b6dc4536c1f7
Author: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
Date:   Fri Aug 7 17:34:04 2015 +0530

    staging: sm750fb: fix multiline comment
    
    Multiline comments are edited to be in the kernel coding style.
    
    Signed-off-by: Sudip Mukherjee <sudip@vectorindia.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index c16b2934fec7..fa2183d33bda 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -182,8 +182,10 @@ static void lynxfb_ops_fillrect(struct fb_info *info,
 	par = info->par;
 	share = par->share;
 
-	/* each time 2d function begin to work,below three variable always need
-	 * be set, seems we can put them together in some place  */
+	/*
+	 * each time 2d function begin to work,below three variable always need
+	 * be set, seems we can put them together in some place
+	 */
 	base = par->crtc.oScreen;
 	pitch = info->fix.line_length;
 	Bpp = info->var.bits_per_pixel >> 3;
@@ -218,8 +220,10 @@ static void lynxfb_ops_copyarea(struct fb_info *info,
 	par = info->par;
 	share = par->share;
 
-	/* each time 2d function begin to work,below three variable always need
-	 * be set, seems we can put them together in some place  */
+	/*
+	 * each time 2d function begin to work,below three variable always need
+	 * be set, seems we can put them together in some place
+	 */
 	base = par->crtc.oScreen;
 	pitch = info->fix.line_length;
 	Bpp = info->var.bits_per_pixel >> 3;
@@ -249,8 +253,10 @@ static void lynxfb_ops_imageblit(struct fb_info *info,
 
 	par = info->par;
 	share = par->share;
-	/* each time 2d function begin to work,below three variable always need
-	 * be set, seems we can put them together in some place  */
+	/*
+	 * each time 2d function begin to work,below three variable always need
+	 * be set, seems we can put them together in some place
+	 */
 	base = par->crtc.oScreen;
 	pitch = info->fix.line_length;
 	Bpp = info->var.bits_per_pixel >> 3;
@@ -334,9 +340,10 @@ static int lynxfb_ops_set_par(struct fb_info *info)
 	fix->line_length = line_length;
 	pr_info("fix->line_length = %d\n", fix->line_length);
 
-	/* var->red,green,blue,transp are need to be set by driver
+	/*
+	 * var->red,green,blue,transp are need to be set by driver
 	 * and these data should be set before setcolreg routine
-	 * */
+	 */
 
 	switch (var->bits_per_pixel) {
 	case 8:
@@ -811,8 +818,10 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 	sm750fb_set_drv(par);
 	lynxfb_ops.fb_pan_display = lynxfb_ops_pan_display;
 
-	/* set current cursor variable and proc pointer,
-	 * must be set after crtc member initialized */
+	/*
+	 * set current cursor variable and proc pointer,
+	 * must be set after crtc member initialized
+	 */
 	crtc->cursor.offset = crtc->oScreen + crtc->vidmem_size - 1024;
 	crtc->cursor.mmio = share->pvReg + 0x800f0 + (int)crtc->channel * 0x140;
 
@@ -920,12 +929,13 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 
 	fix->smem_start = crtc->oScreen + share->vidmem_start;
 	pr_info("fix->smem_start = %lx\n", fix->smem_start);
-	/* according to mmap experiment from user space application,
+	/*
+	 * according to mmap experiment from user space application,
 	 * fix->mmio_len should not larger than virtual size
 	 * (xres_virtual x yres_virtual x ByPP)
 	 * Below line maybe buggy when user mmap fb dev node and write
 	 * data into the bound over virtual size
-	 * */
+	 */
 	fix->smem_len = crtc->vidmem_size;
 	pr_info("fix->smem_len = %x\n", fix->smem_len);
 	info->screen_size = fix->smem_len;
@@ -1083,8 +1093,10 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 		goto err_enable;
 	}
 
-	/* though offset of share in sm750_share is 0,
-	 * we use this marcro as the same */
+	/*
+	 * though offset of share in sm750_share is 0,
+	 * we use this marcro as the same
+	 */
 	spec_offset = offsetof(struct sm750_share, share);
 
 	spec_share = kzalloc(sizeof(*spec_share), GFP_KERNEL);
@@ -1108,10 +1120,12 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 	spin_lock_init(&share->slock);
 
 	if (!share->accel_off) {
-		/* hook deInit and 2d routines, notes that below hw_xxx
+		/*
+		 * hook deInit and 2d routines, notes that below hw_xxx
 		 * routine can work on most of lynx chips
 		 * if some chip need specific function,
-		 * please hook it in smXXX_set_drv routine */
+		 * please hook it in smXXX_set_drv routine
+		 */
 		share->accel.de_init = hw_de_init;
 		share->accel.de_fillrect = hw_fillrect;
 		share->accel.de_copyarea = hw_copyarea;
@@ -1262,14 +1276,15 @@ static int __init lynxfb_setup(char *options)
 
 	tmp = g_settings;
 
-	/*	Notes:
-		char * strsep(char **s,const char * ct);
-		@s: the string to be searched
-		@ct :the characters to search for
-
-		strsep() updates @options to pointer after the first found token
-		it also returns the pointer ahead the token.
-		*/
+	/*
+	 * Notes:
+	 * char * strsep(char **s,const char * ct);
+	 * @s: the string to be searched
+	 * @ct :the characters to search for
+	 *
+	 * strsep() updates @options to pointer after the first found token
+	 * it also returns the pointer ahead the token.
+	 */
 	while ((opt = strsep(&options, ":")) != NULL) {
 		/* options that mean for any lynx chips are configured here */
 		if (!strncmp(opt, "noaccel", strlen("noaccel")))

commit 13ef3458227d4095a4f86270b1f29690dfc248bd
Author: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
Date:   Fri Aug 7 17:34:03 2015 +0530

    staging: sm750fb: space around operator
    
    Kernel coding style says to have a space around the operators.
    
    Signed-off-by: Sudip Mukherjee <sudip@vectorindia.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 8990ff499332..c16b2934fec7 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -144,12 +144,12 @@ static int lynxfb_ops_cursor(struct fb_info *info, struct fb_cursor *fbcursor)
 		/* get the 16bit color of kernel means */
 		u16 fg, bg;
 
-		fg = ((info->cmap.red[fbcursor->image.fg_color] & 0xf800))|
-		      ((info->cmap.green[fbcursor->image.fg_color] & 0xfc00) >> 5)|
+		fg = ((info->cmap.red[fbcursor->image.fg_color] & 0xf800)) |
+		      ((info->cmap.green[fbcursor->image.fg_color] & 0xfc00) >> 5) |
 		      ((info->cmap.blue[fbcursor->image.fg_color] & 0xf800) >> 11);
 
-		bg = ((info->cmap.red[fbcursor->image.bg_color] & 0xf800))|
-		      ((info->cmap.green[fbcursor->image.bg_color] & 0xfc00) >> 5)|
+		bg = ((info->cmap.red[fbcursor->image.bg_color] & 0xf800)) |
+		      ((info->cmap.green[fbcursor->image.bg_color] & 0xfc00) >> 5) |
 		      ((info->cmap.blue[fbcursor->image.bg_color] & 0xf800) >> 11);
 
 		cursor->setColor(cursor, fg, bg);
@@ -188,8 +188,9 @@ static void lynxfb_ops_fillrect(struct fb_info *info,
 	pitch = info->fix.line_length;
 	Bpp = info->var.bits_per_pixel >> 3;
 
-	color = (Bpp == 1)?region->color:((u32 *)info->pseudo_palette)[region->color];
-	rop = (region->rop != ROP_COPY) ? HW_ROP2_XOR:HW_ROP2_COPY;
+	color = (Bpp == 1) ? region->color :
+		((u32 *)info->pseudo_palette)[region->color];
+	rop = (region->rop != ROP_COPY) ? HW_ROP2_XOR : HW_ROP2_COPY;
 
 	/*
 	 * If not use spin_lock,system will die if user load driver
@@ -278,7 +279,7 @@ static void lynxfb_ops_imageblit(struct fb_info *info,
 		spin_lock(&share->slock);
 
 	share->accel.de_imageblit(&share->accel,
-				  image->data, image->width>>3, 0,
+				  image->data, image->width >> 3, 0,
 				  base, pitch, Bpp,
 				  image->dx, image->dy,
 				  image->width, image->height,
@@ -684,7 +685,8 @@ static int sm750fb_set_drv(struct lynxfb_par *par)
 	output = &par->output;
 	crtc = &par->crtc;
 
-	crtc->vidmem_size = (share->dual)?share->vidmem_size>>1:share->vidmem_size;
+	crtc->vidmem_size = (share->dual) ? share->vidmem_size >> 1 :
+			     share->vidmem_size;
 	/* setup crtc and output member */
 	spec_share->hwCursor = g_hwcursor;
 
@@ -701,10 +703,12 @@ static int sm750fb_set_drv(struct lynxfb_par *par)
 	output->proc_setMode = hw_sm750_output_setMode;
 	output->proc_checkMode = hw_sm750_output_checkMode;
 
-	output->proc_setBLANK = (share->revid == SM750LE_REVISION_ID)?hw_sm750le_setBLANK:hw_sm750_setBLANK;
+	output->proc_setBLANK = (share->revid == SM750LE_REVISION_ID) ?
+				 hw_sm750le_setBLANK : hw_sm750_setBLANK;
 	output->clear = hw_sm750_output_clear;
 	/* chip specific phase */
-	share->accel.de_wait = (share->revid == SM750LE_REVISION_ID)?hw_sm750le_deWait : hw_sm750_deWait;
+	share->accel.de_wait = (share->revid == SM750LE_REVISION_ID) ?
+				hw_sm750le_deWait : hw_sm750_deWait;
 	switch (spec_share->state.dataflow) {
 	case sm750_simul_pri:
 		output->paths = sm750_pnc;
@@ -814,7 +818,7 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 
 	pr_info("crtc->cursor.mmio = %p\n", crtc->cursor.mmio);
 	crtc->cursor.maxH = crtc->cursor.maxW = 64;
-	crtc->cursor.size = crtc->cursor.maxH*crtc->cursor.maxW*2/8;
+	crtc->cursor.size = crtc->cursor.maxH * crtc->cursor.maxW * 2 / 8;
 	crtc->cursor.disable = hw_cursor_disable;
 	crtc->cursor.enable = hw_cursor_enable;
 	crtc->cursor.setColor = hw_cursor_setColor;
@@ -896,13 +900,13 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 
 	/* set info */
 	line_length = PADDING(crtc->line_pad,
-			      (var->xres_virtual * var->bits_per_pixel/8));
+			      (var->xres_virtual * var->bits_per_pixel / 8));
 
 	info->pseudo_palette = &par->pseudo_palette[0];
 	info->screen_base = crtc->vScreen;
 	pr_debug("screen_base vaddr = %p\n", info->screen_base);
 	info->screen_size = line_length * var->yres_virtual;
-	info->flags = FBINFO_FLAG_DEFAULT|0;
+	info->flags = FBINFO_FLAG_DEFAULT | 0;
 
 	/* set info->fix */
 	fix->type = FB_TYPE_PACKED_PIXELS;

commit 5fd93ddf32f3ae77e66bee9c341036e03dd389ae
Author: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
Date:   Fri Aug 7 17:34:02 2015 +0530

    staging: sm750fb: remove multiple blank line
    
    Multiple blank lines are not kernel coding style and so checkpatch
    complains. Remove them.
    
    Signed-off-by: Sudip Mukherjee <sudip@vectorindia.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index c7ab8189671f..8990ff499332 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -26,7 +26,6 @@
 
 int smi_indent;
 
-
 /*
  * #ifdef __BIG_ENDIAN
  * ssize_t lynxfb_ops_write(struct fb_info *info, const char __user *buf,
@@ -40,7 +39,6 @@ typedef void (*PROC_SPEC_SETUP)(struct lynx_share*, char *);
 typedef int (*PROC_SPEC_MAP)(struct lynx_share*, struct pci_dev*);
 typedef int (*PROC_SPEC_INITHW)(struct lynx_share*, struct pci_dev*);
 
-
 /* common var for all device */
 static int g_hwcursor = 1;
 static int g_noaccel;
@@ -51,7 +49,6 @@ static char *g_settings;
 static int g_dualview;
 static char *g_option;
 
-
 static const struct fb_videomode lynx750_ext[] = {
 	/*	1024x600-60 VESA	[1.71:1] */
 	{NULL,  60, 1024, 600, 20423, 144,  40, 18, 1, 104, 3,
@@ -115,8 +112,6 @@ static const struct fb_videomode lynx750_ext[] = {
 };
 
 
-
-
 /* no hardware cursor supported under version 2.6.10, kernel bug */
 static int lynxfb_ops_cursor(struct fb_info *info, struct fb_cursor *fbcursor)
 {
@@ -160,7 +155,6 @@ static int lynxfb_ops_cursor(struct fb_info *info, struct fb_cursor *fbcursor)
 		cursor->setColor(cursor, fg, bg);
 	}
 
-
 	if (fbcursor->set & (FB_CUR_SETSHAPE | FB_CUR_SETIMAGE)) {
 		cursor->setData(cursor,
 				fbcursor->rop,
@@ -300,7 +294,6 @@ static int lynxfb_ops_pan_display(struct fb_var_screeninfo *var,
 	struct lynxfb_crtc *crtc;
 	int ret;
 
-
 	if (!info)
 		return -EINVAL;
 
@@ -466,7 +459,6 @@ static int lynxfb_resume(struct pci_dev *pdev)
 
 	int ret;
 
-
 	ret = 0;
 	share = pci_get_drvdata(pdev);
 
@@ -478,7 +470,6 @@ static int lynxfb_resume(struct pci_dev *pdev)
 		return ret;
 	}
 
-
 	if (pdev->dev.power.power_state.event != PM_EVENT_FREEZE) {
 		pci_restore_state(pdev);
 		ret = pci_enable_device(pdev);
@@ -493,7 +484,6 @@ static int lynxfb_resume(struct pci_dev *pdev)
 
 	hw_sm750_inithw(share, pdev);
 
-
 	info = share->fbinfo[0];
 
 	if (info) {
@@ -518,7 +508,6 @@ static int lynxfb_resume(struct pci_dev *pdev)
 		fb_set_suspend(info, 0);
 	}
 
-
 	console_unlock();
 	return ret;
 }
@@ -534,7 +523,6 @@ static int lynxfb_ops_check_var(struct fb_var_screeninfo *var,
 	int ret;
 	resource_size_t request;
 
-
 	par = info->par;
 	crtc = &par->crtc;
 	output = &par->output;
@@ -546,7 +534,6 @@ static int lynxfb_ops_check_var(struct fb_var_screeninfo *var,
 		 var->yres,
 		 var->bits_per_pixel);
 
-
 	switch (var->bits_per_pixel) {
 	case 8:
 	case 16:
@@ -617,7 +604,6 @@ static int lynxfb_ops_check_var(struct fb_var_screeninfo *var,
 	return ret;
 }
 
-
 static int lynxfb_ops_setcolreg(unsigned regno,
 				unsigned red,
 				unsigned green,
@@ -652,7 +638,6 @@ static int lynxfb_ops_setcolreg(unsigned regno,
 		goto exit;
 	}
 
-
 	if (info->fix.visual == FB_VISUAL_TRUECOLOR && regno < 256) {
 		u32 val;
 
@@ -782,7 +767,6 @@ static struct fb_ops lynxfb_ops = {
 	.fb_cursor = lynxfb_ops_cursor,
 };
 
-
 static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 {
 	int i;
@@ -803,7 +787,6 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 		"kernel HELPERS prepared vesa_modes",
 	};
 
-
 	static const char *fixId[2] = {
 		"sm750_fb1", "sm750_fb2",
 	};
@@ -824,7 +807,6 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 	sm750fb_set_drv(par);
 	lynxfb_ops.fb_pan_display = lynxfb_ops_pan_display;
 
-
 	/* set current cursor variable and proc pointer,
 	 * must be set after crtc member initialized */
 	crtc->cursor.offset = crtc->oScreen + crtc->vidmem_size - 1024;
@@ -841,7 +823,6 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 	crtc->cursor.setData = hw_cursor_setData;
 	crtc->cursor.vstart = share->pvMem + crtc->cursor.offset;
 
-
 	crtc->cursor.share = share;
 		memset_io(crtc->cursor.vstart, 0, crtc->cursor.size);
 	if (!g_hwcursor) {
@@ -849,7 +830,6 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 		crtc->cursor.disable(&crtc->cursor);
 	}
 
-
 	/* set info->fbops, must be set before fb_find_mode */
 	if (!share->accel_off) {
 		/* use 2d acceleration */
@@ -865,7 +845,6 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 			g_fbmode[index] = g_fbmode[0];
 	}
 
-
 	for (i = 0; i < 3; i++) {
 
 		ret = fb_find_mode(var, info, g_fbmode[index],
@@ -935,7 +914,6 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 
 	strlcpy(fix->id, fixId[index], sizeof(fix->id));
 
-
 	fix->smem_start = crtc->oScreen + share->vidmem_start;
 	pr_info("fix->smem_start = %lx\n", fix->smem_start);
 	/* according to mmap experiment from user space application,
@@ -998,7 +976,6 @@ static void sm750fb_setup(struct lynx_share *share, char *src)
 #endif
 	int swap;
 
-
 	spec_share = container_of(share, struct sm750_share, share);
 #ifdef CAP_EXPENSIION
 	exp_res = NULL;
@@ -1096,7 +1073,6 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 	size_t spec_offset = 0;
 	int fbidx;
 
-
 	/* enable device */
 	if (pci_enable_device(pdev)) {
 		pr_err("can not enable device.\n");
@@ -1268,7 +1244,6 @@ static int __init lynxfb_setup(char *options)
 	int len;
 	char *opt, *tmp;
 
-
 	if (!options || !*options) {
 		pr_warn("no options.\n");
 		return 0;
@@ -1332,7 +1307,6 @@ static struct pci_driver lynxfb_driver = {
 #endif
 };
 
-
 static int __init lynxfb_init(void)
 {
 	char *option;

commit a1fe154f0f3dea1ba48aa4e96dbb0deec5c17125
Author: Juston Li <juston.h.li@gmail.com>
Date:   Tue Jul 14 21:14:44 2015 -0700

    staging: sm750fb: remove unnecessary whitespace
    
    Fixes checkpatch.pl warning:
    WARNING: unnecessary whitespace before a quoted newline
    
    Signed-off-by: Juston Li <juston.h.li@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 4d165ca3baad..c7ab8189671f 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -967,7 +967,7 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 	var->accel_flags = 0;
 	var->vmode = FB_VMODE_NONINTERLACED;
 
-	pr_debug("#1 show info->cmap : \nstart=%d,len=%d,red=%p,green=%p,blue=%p,transp=%p\n",
+	pr_debug("#1 show info->cmap :\nstart=%d,len=%d,red=%p,green=%p,blue=%p,transp=%p\n",
 		 info->cmap.start, info->cmap.len,
 		 info->cmap.red, info->cmap.green, info->cmap.blue,
 		 info->cmap.transp);

commit df525686865a79a44b39f7032cf94e625e894865
Author: Vinay Simha BN <simhavcs@gmail.com>
Date:   Tue Jul 14 19:15:28 2015 +0530

    staging: sm750fb: coding style global ERROR fixes
    
    kernel coding style fixes for below messages from
    scripts/checkpatch.pl
    
    ERROR: do not initialise globals to 0 or NULL
    
    Signed-off-by: Vinay Simha BN <simhavcs@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 8e201f19cc0d..4d165ca3baad 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -24,7 +24,7 @@
 
 #include "modedb.h"
 
-int smi_indent = 0;
+int smi_indent;
 
 
 /*
@@ -47,9 +47,9 @@ static int g_noaccel;
 static int g_nomtrr;
 static const char *g_fbmode[] = {NULL, NULL};
 static const char *g_def_fbmode = "800x600-16@60";
-static char *g_settings = NULL;
+static char *g_settings;
 static int g_dualview;
-static char *g_option = NULL;
+static char *g_option;
 
 
 static const struct fb_videomode lynx750_ext[] = {

commit eb0f4271ca1809dca130a7b3e2bbeb1059b75c5c
Author: Greg Donald <gdonald@gmail.com>
Date:   Thu Jun 18 15:06:56 2015 -0500

    drivers: staging: sm750fb: Fix "'foo * bar' should be 'foo *bar'" errors
    
    Fix checkpatch.pl "'foo * bar' should be 'foo *bar'" errors
    
    Signed-off-by: Greg Donald <gdonald@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 3f30bc0d503b..8e201f19cc0d 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -1087,7 +1087,7 @@ static void sm750fb_setup(struct lynx_share *share, char *src)
 }
 
 static int lynxfb_pci_probe(struct pci_dev *pdev,
-			    const struct pci_device_id * ent)
+			    const struct pci_device_id *ent)
 {
 	struct fb_info *info[] = {NULL, NULL};
 	struct lynx_share *share = NULL;

commit 78cb7a38c6d704194ad5e45b469256d2b1c763e5
Author: Hari Prasath Gujulan Elango <hgujulan@visteon.com>
Date:   Thu Jun 18 12:56:54 2015 +0000

    staging: sm750fb: convert pr_err to pr_info
    
    This patch modifies few debug prints from pr_err() to pr_info() as they
    fall under that category.
    
    Signed-off-by: Hari Prasath Gujulan Elango <hgujulan@visteon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 6b642d75b9b5..3f30bc0d503b 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -338,7 +338,7 @@ static int lynxfb_ops_set_par(struct fb_info *info)
 	line_length = var->xres_virtual * var->bits_per_pixel / 8;
 	line_length = PADDING(crtc->line_pad, line_length);
 	fix->line_length = line_length;
-	pr_err("fix->line_length = %d\n", fix->line_length);
+	pr_info("fix->line_length = %d\n", fix->line_length);
 
 	/* var->red,green,blue,transp are need to be set by driver
 	 * and these data should be set before setcolreg routine
@@ -1021,8 +1021,8 @@ static void sm750fb_setup(struct lynx_share *share, char *src)
 	}
 
 	while ((opt = strsep(&src, ":")) != NULL && *opt != 0) {
-		pr_err("opt=%s\n", opt);
-		pr_err("src=%s\n", src);
+		pr_info("opt=%s\n", opt);
+		pr_info("src=%s\n", src);
 
 		if (!strncmp(opt, "swap", strlen("swap")))
 			swap = 1;

commit 008272072d61a8ce9f9f1e7cf2807a59b2e67b64
Author: Masanari Iida <standby24x7@gmail.com>
Date:   Thu May 28 08:41:16 2015 +0900

    staging: sm750fb: Fix typo in sm750.c
    
    This patch fix a spelling typo in printk within sm750.c
    
    Signed-off-by: Masanari Iida <standby24x7@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index d90b4634b954..6b642d75b9b5 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -974,7 +974,7 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 
 	ret = fb_alloc_cmap(&info->cmap, 256, 0);
 	if (ret < 0) {
-		pr_err("Could not allcate memory for cmap.\n");
+		pr_err("Could not allocate memory for cmap.\n");
 		goto exit;
 	}
 

commit c4eacdad9d9a563c0b324123fa5d5e7e07cda33c
Author: Michel von Czettritz <michel.von.czettritz@gmail.com>
Date:   Tue May 26 17:22:39 2015 +0200

    staging: sm750fb: remove duplicate from fb_videomode
    
    As suggested by Sudip this patch removes the redundant 1360x768@60
    option from the fb_videomode struct array.
    The removed option and the option one it differ in a typo and a flag.
    
    Signed-off-by: Michel von Czettritz <michel.von.czettritz@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 69b18f399b90..d90b4634b954 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -88,9 +88,6 @@ static const struct fb_videomode lynx750_ext[] = {
 	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT,
 	 FB_VMODE_NONINTERLACED},
 
-	{NULL, 60, 1360, 768, 11804, 208, 64, 23, 1, 144, 3,
-	 FB_SYNC_HOR_HIGH_ACT|FB_VMODE_NONINTERLACED},
-
 	/*	1360 x 768	[1.77083:1]	*/
 	{NULL,  60, 1360, 768, 11804, 208,  64, 23, 1, 144, 3,
 	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT,

commit 288ef567ab7b43f19838afbe12b471f1ff5fdfa3
Author: Huacai Chen <chenhc@lemote.com>
Date:   Mon May 11 11:08:22 2015 +0800

    staging: sm750: Fix lynxfb_ops_imageblit() if image->depth != 1
    
    If image->depth != 1, lynxfb_ops_imageblit() should fallback to call
    cfb_imageblit(), not return directly. Otherwise it can't display the
    boot logo.
    
    Cc: Teddy Wang <teddy.wang@siliconmotion.com>
    Acked-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Huacai Chen <chenhc@lemote.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 97fe04a9451f..69b18f399b90 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -274,7 +274,10 @@ static void lynxfb_ops_imageblit(struct fb_info *info,
 		}
 		goto _do_work;
 	}
+	/* TODO: Implement hardware acceleration for image->depth > 1 */
+	cfb_imageblit(info, image);
 	return;
+
 _do_work:
 	/*
 	 * If not use spin_lock, system will die if user load driver

commit 2e043a923eb25c2ebeb33c1053357cc69ce2494e
Author: Luis R. Rodriguez <mcgrof@suse.com>
Date:   Thu May 14 07:07:55 2015 -0700

    staging: sm750fb: use arch_phys_wc_add() and ioremap_wc()
    
    The same area used for ioremap() is used for the MTRR area.
    Convert the driver from using the x86 specific MTRR code to
    the architecture agnostic arch_phys_wc_add(). arch_phys_wc_add()
    will avoid MTRR if write-combining is available, in order to
    take advantage of that also ensure the ioremap'd area is requested
    as write-combining.
    
    There are a few motivations for this:
    
    a) Take advantage of PAT when available
    
    b) Help bury MTRR code away, MTRR is architecture specific and on
       x86 its replaced by PAT
    
    c) Help with the goal of eventually using _PAGE_CACHE_UC over
       _PAGE_CACHE_UC_MINUS on x86 on ioremap_nocache() (see commit
       de33c442e titled "x86 PAT: fix performance drop for glx,
       use UC minus for ioremap(), ioremap_nocache() and
       pci_mmap_page_range()")
    
    The conversion done is expressed by the following Coccinelle
    SmPL patch, it additionally required manual intervention to
    address all the #ifdery and removal of redundant things which
    arch_phys_wc_add() already addresses such as verbose message
    about when MTRR fails and doing nothing when we didn't get
    an MTRR.
    
    @ mtrr_found @
    expression index, base, size;
    @@
    
    -index = mtrr_add(base, size, MTRR_TYPE_WRCOMB, 1);
    +index = arch_phys_wc_add(base, size);
    
    @ mtrr_rm depends on mtrr_found @
    expression mtrr_found.index, mtrr_found.base, mtrr_found.size;
    @@
    
    -mtrr_del(index, base, size);
    +arch_phys_wc_del(index);
    
    @ mtrr_rm_zero_arg depends on mtrr_found @
    expression mtrr_found.index;
    @@
    
    -mtrr_del(index, 0, 0);
    +arch_phys_wc_del(index);
    
    @ mtrr_rm_fb_info depends on mtrr_found @
    struct fb_info *info;
    expression mtrr_found.index;
    @@
    
    -mtrr_del(index, info->fix.smem_start, info->fix.smem_len);
    +arch_phys_wc_del(index);
    
    @ ioremap_replace_nocache depends on mtrr_found @
    struct fb_info *info;
    expression base, size;
    @@
    
    -info->screen_base = ioremap_nocache(base, size);
    +info->screen_base = ioremap_wc(base, size);
    
    @ ioremap_replace_default depends on mtrr_found @
    struct fb_info *info;
    expression base, size;
    @@
    
    -info->screen_base = ioremap(base, size);
    +info->screen_base = ioremap_wc(base, size);
    
    Generated-by: Coccinelle SmPL
    Cc: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Cc: Teddy Wang <teddy.wang@siliconmotion.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Suresh Siddha <sbsiddha@gmail.com>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Dave Airlie <airlied@redhat.com>
    Cc: Antonino Daplas <adaplas@gmail.com>
    Cc: Jean-Christophe Plagniol-Villard <plagnioj@jcrosoft.com>
    Cc: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Cc: devel@driverdev.osuosl.org
    Cc: linux-fbdev@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Luis R. Rodriguez <mcgrof@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 5529905ab88b..97fe04a9451f 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -16,9 +16,6 @@
 #include<linux/vmalloc.h>
 #include<linux/pagemap.h>
 #include <linux/console.h>
-#ifdef CONFIG_MTRR
-#include <asm/mtrr.h>
-#endif
 #include <asm/fb.h>
 #include "sm750.h"
 #include "sm750_hw.h"
@@ -47,9 +44,7 @@ typedef int (*PROC_SPEC_INITHW)(struct lynx_share*, struct pci_dev*);
 /* common var for all device */
 static int g_hwcursor = 1;
 static int g_noaccel;
-#ifdef CONFIG_MTRR
 static int g_nomtrr;
-#endif
 static const char *g_fbmode[] = {NULL, NULL};
 static const char *g_def_fbmode = "800x600-16@60";
 static char *g_settings = NULL;
@@ -1126,11 +1121,8 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 
 	pr_info("share->revid = %02x\n", share->revid);
 	share->pdev = pdev;
-#ifdef CONFIG_MTRR
 	share->mtrr_off = g_nomtrr;
 	share->mtrr.vram = 0;
-	share->mtrr.vram_added = 0;
-#endif
 	share->accel_off = g_noaccel;
 	share->dual = g_dualview;
 	spin_lock_init(&share->slock);
@@ -1158,22 +1150,9 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 		goto err_map;
 	}
 
-#ifdef CONFIG_MTRR
-	if (!share->mtrr_off) {
-		pr_info("enable mtrr\n");
-		share->mtrr.vram = mtrr_add(share->vidmem_start,
-					    share->vidmem_size,
-					    MTRR_TYPE_WRCOMB, 1);
-
-		if (share->mtrr.vram < 0) {
-			/* don't block driver with the failure of MTRR */
-			pr_err("Unable to setup MTRR.\n");
-		} else {
-			share->mtrr.vram_added = 1;
-			pr_info("MTRR added successfully\n");
-		}
-	}
-#endif
+	if (!share->mtrr_off)
+		share->mtrr.vram = arch_phys_wc_add(share->vidmem_start,
+						    share->vidmem_size);
 
 	memset_io(share->pvMem, 0, share->vidmem_size);
 
@@ -1274,12 +1253,7 @@ static void lynxfb_pci_remove(struct pci_dev *pdev)
 		/* release frame buffer */
 		framebuffer_release(info);
 	}
-#ifdef CONFIG_MTRR
-	if (share->mtrr.vram_added)
-		mtrr_del(share->mtrr.vram,
-			 share->vidmem_start,
-			 share->vidmem_size);
-#endif
+	arch_phys_wc_del(share->mtrr.vram);
 
 	iounmap(share->pvReg);
 	iounmap(share->pvMem);
@@ -1321,10 +1295,8 @@ static int __init lynxfb_setup(char *options)
 		/* options that mean for any lynx chips are configured here */
 		if (!strncmp(opt, "noaccel", strlen("noaccel")))
 			g_noaccel = 1;
-#ifdef CONFIG_MTRR
 		else if (!strncmp(opt, "nomtrr", strlen("nomtrr")))
 			g_nomtrr = 1;
-#endif
 		else if (!strncmp(opt, "dual", strlen("dual")))
 			g_dualview = 1;
 		else {

commit 936a0cd52aa5d024c583e36e2f21bf6ec2e527e4
Merge: 36bf51acc89d e26081808eda
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Mon May 18 13:52:44 2015 -0700

    Merge 4.1-rc4 into staging-next
    
    We want the fixes in here for testing and merge issues.
    
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 69e98df78271a71b688706dccf2ad4544d63a274
Author: Carlos E. Garcia <carlos@cgarcia.org>
Date:   Fri Apr 24 09:40:42 2015 -0400

    Staging: fixed multiple spelling errors.
    
    Fixed multiple spelling errors.
    
    Signed-off-by: Carlos E. Garcia <carlos@cgarcia.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 3c7ea95dd9f9..77310ff325b2 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -207,7 +207,7 @@ static void lynxfb_ops_fillrect(struct fb_info *info,
 
 	/*
 	 * If not use spin_lock,system will die if user load driver
-	 * and immediatly unload driver frequently (dual)
+	 * and immediately unload driver frequently (dual)
 	 */
 	if (share->dual)
 		spin_lock(&share->slock);
@@ -239,7 +239,7 @@ static void lynxfb_ops_copyarea(struct fb_info *info,
 
 	/*
 	 * If not use spin_lock, system will die if user load driver
-	 * and immediatly unload driver frequently (dual)
+	 * and immediately unload driver frequently (dual)
 	 */
 	if (share->dual)
 		spin_lock(&share->slock);
@@ -283,7 +283,7 @@ static void lynxfb_ops_imageblit(struct fb_info *info,
 _do_work:
 	/*
 	 * If not use spin_lock, system will die if user load driver
-	 * and immediatly unload driver frequently (dual)
+	 * and immediately unload driver frequently (dual)
 	 */
 	if (share->dual)
 		spin_lock(&share->slock);
@@ -479,7 +479,7 @@ static int lynxfb_resume(struct pci_dev *pdev)
 
 	ret = pci_set_power_state(pdev, PCI_D0);
 	if (ret) {
-		pr_err("error:%d occured in pci_set_power_state\n", ret);
+		pr_err("error:%d occurred in pci_set_power_state\n", ret);
 		return ret;
 	}
 
@@ -488,7 +488,7 @@ static int lynxfb_resume(struct pci_dev *pdev)
 		pci_restore_state(pdev);
 		ret = pci_enable_device(pdev);
 		if (ret) {
-			pr_err("error:%d occured in pci_enable_device\n", ret);
+			pr_err("error:%d occurred in pci_enable_device\n", ret);
 			return ret;
 		}
 		pci_set_master(pdev);
@@ -1170,7 +1170,7 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 			pr_err("Unable to setup MTRR.\n");
 		} else {
 			share->mtrr.vram_added = 1;
-			pr_info("MTRR added succesfully\n");
+			pr_info("MTRR added successfully\n");
 		}
 	}
 #endif

commit bb6ce8b28d97f39c591e94322e3ad28ff22649b2
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Sat Apr 11 00:03:19 2015 +0200

    staging: sm750: remove incorrect __exit annotation
    
    The lynxfb_pci_remove function is used as the 'remove' callback
    of the driver, and must not be discarded:
    
    lynxfb_pci_remove' referenced in section `.data' of drivers/built-in.o: defined in discarded section `.exit.text' of drivers/built-in.o
    
    This removes the extraneous annotation.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 3c7ea95dd9f9..dbbb2f879a29 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -1250,7 +1250,7 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 	return -ENODEV;
 }
 
-static void __exit lynxfb_pci_remove(struct pci_dev *pdev)
+static void lynxfb_pci_remove(struct pci_dev *pdev)
 {
 	struct fb_info *info;
 	struct lynx_share *share;

commit 61c507cf652da1bc8436bdb909343f33175fd566
Author: Michel von Czettritz <michel.von.czettritz@gmail.com>
Date:   Thu Mar 26 23:27:25 2015 +0100

    staging: sm750: move assignment out of if cond
    
    This patch moves the assignments from the if conditions to the line before the condition.
    The 3 occurrence are return values and the checks for errors.
    
    Signed-off-by: Michel von Czettritz <michel.von.czettritz@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index f300df4f8e87..3c7ea95dd9f9 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -477,7 +477,8 @@ static int lynxfb_resume(struct pci_dev *pdev)
 
 	console_lock();
 
-	if ((ret = pci_set_power_state(pdev, PCI_D0)) != 0) {
+	ret = pci_set_power_state(pdev, PCI_D0);
+	if (ret) {
 		pr_err("error:%d occured in pci_set_power_state\n", ret);
 		return ret;
 	}
@@ -485,7 +486,8 @@ static int lynxfb_resume(struct pci_dev *pdev)
 
 	if (pdev->dev.power.power_state.event != PM_EVENT_FREEZE) {
 		pci_restore_state(pdev);
-		if ((ret = pci_enable_device(pdev)) != 0) {
+		ret = pci_enable_device(pdev);
+		if (ret) {
 			pr_err("error:%d occured in pci_enable_device\n", ret);
 			return ret;
 		}
@@ -975,7 +977,8 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 		 info->cmap.red, info->cmap.green, info->cmap.blue,
 		 info->cmap.transp);
 
-	if ((ret = fb_alloc_cmap(&info->cmap, 256, 0)) < 0) {
+	ret = fb_alloc_cmap(&info->cmap, 256, 0);
+	if (ret < 0) {
 		pr_err("Could not allcate memory for cmap.\n");
 		goto exit;
 	}

commit eb1167a36cdb48ae6328132ad68bf1bdc29339cf
Author: Michel von Czettritz <michel.von.czettritz@gmail.com>
Date:   Thu Mar 26 23:27:09 2015 +0100

    staging: sm750: fix whitspace for cast to pointer
    
    This patch fixes the checkpatch.pl warning:
    'ERROR: "(foo*)" should be "(foo *)"'
    
    Signed-off-by: Michel von Czettritz <michel.von.czettritz@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index edd7d1d7edb3..f300df4f8e87 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -202,7 +202,7 @@ static void lynxfb_ops_fillrect(struct fb_info *info,
 	pitch = info->fix.line_length;
 	Bpp = info->var.bits_per_pixel >> 3;
 
-	color = (Bpp == 1)?region->color:((u32*)info->pseudo_palette)[region->color];
+	color = (Bpp == 1)?region->color:((u32 *)info->pseudo_palette)[region->color];
 	rop = (region->rop != ROP_COPY) ? HW_ROP2_XOR:HW_ROP2_COPY;
 
 	/*
@@ -271,8 +271,8 @@ static void lynxfb_ops_imageblit(struct fb_info *info,
 	if (image->depth == 1) {
 		if (info->fix.visual == FB_VISUAL_TRUECOLOR ||
 		    info->fix.visual == FB_VISUAL_DIRECTCOLOR) {
-			fgcol = ((u32*)info->pseudo_palette)[image->fg_color];
-			bgcol = ((u32*)info->pseudo_palette)[image->bg_color];
+			fgcol = ((u32 *)info->pseudo_palette)[image->fg_color];
+			bgcol = ((u32 *)info->pseudo_palette)[image->bg_color];
 		} else {
 			fgcol = image->fg_color;
 			bgcol = image->bg_color;

commit a0c838f10a18982a02f1a46904637748d066a6b9
Author: Michel von Czettritz <michel.von.czettritz@gmail.com>
Date:   Thu Mar 26 23:26:52 2015 +0100

    staging: sm750: fix whitespace
    
    This patch fixes whitespace checkpatch.pl warnings and errors.
    Mainly whitespaces around operators.
    
    - ERROR: spaces required around that ':' (ctx:VxW)
    - ERROR: space required after that ';' (ctx:VxV)
    - ERROR: spaces required around that '<' (ctx:VxV)
    - ERROR: spaces required around that '!=' (ctx:VxV)
    
    And some small warnings around whitespace:
    
    - ERROR: trailing whitespace
    - WARNING: space prohibited before semicolon
    - WARNING: unnecessary whitespace before a quoted newline
    
    Signed-off-by: Michel von Czettritz <michel.von.czettritz@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 832a4a1782d9..edd7d1d7edb3 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -378,7 +378,7 @@ static int lynxfb_ops_set_par(struct fb_info *info)
 		var->red.length = 8;
 		var->green.offset = 8;
 		var->green.length = 8;
-		var->blue.offset = 0 ;
+		var->blue.offset = 0;
 		var->blue.length = 8;
 		fix->visual = FB_VISUAL_TRUECOLOR;
 		break;
@@ -591,7 +591,7 @@ static int lynxfb_ops_check_var(struct fb_var_screeninfo *var,
 		var->red.length = 8;
 		var->green.offset = 8;
 		var->green.length = 8;
-		var->blue.offset = 0 ;
+		var->blue.offset = 0;
 		var->blue.length = 8;
 		info->fix.visual = FB_VISUAL_TRUECOLOR;
 		break;
@@ -722,7 +722,7 @@ static int sm750fb_set_drv(struct lynxfb_par *par)
 	output->proc_setBLANK = (share->revid == SM750LE_REVISION_ID)?hw_sm750le_setBLANK:hw_sm750_setBLANK;
 	output->clear = hw_sm750_output_clear;
 	/* chip specific phase */
-	share->accel.de_wait = (share->revid == SM750LE_REVISION_ID)?hw_sm750le_deWait: hw_sm750_deWait;
+	share->accel.de_wait = (share->revid == SM750LE_REVISION_ID)?hw_sm750le_deWait : hw_sm750_deWait;
 	switch (spec_share->state.dataflow) {
 	case sm750_simul_pri:
 		output->paths = sm750_pnc;
@@ -772,7 +772,7 @@ static int sm750fb_set_drv(struct lynxfb_par *par)
 	return ret;
 }
 
-static struct fb_ops lynxfb_ops={
+static struct fb_ops lynxfb_ops = {
 	.owner = THIS_MODULE,
 	.fb_check_var =  lynxfb_ops_check_var,
 	.fb_set_par = lynxfb_ops_set_par,
@@ -800,7 +800,7 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 		lynx750_ext, NULL, vesa_modes,
 	};
 	int cdb[] = {ARRAY_SIZE(lynx750_ext), 0, VESA_MODEDB_SIZE};
-	static const char *mdb_desc[] ={
+	static const char *mdb_desc[] = {
 		"driver prepared modes",
 		"kernel prepared default modedb",
 		"kernel HELPERS prepared vesa_modes",
@@ -869,7 +869,7 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 	}
 
 
-	for (i=0;i<3;i++) {
+	for (i = 0; i < 3; i++) {
 
 		ret = fb_find_mode(var, info, g_fbmode[index],
 				   pdb[i], cdb[i], NULL, 8);
@@ -980,7 +980,7 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 		goto exit;
 	}
 
-	pr_debug("#2 show info->cmap : \nstart=%d,len=%d,red=%p,green=%p,blue=%p,transp=%p\n",
+	pr_debug("#2 show info->cmap :\nstart=%d,len=%d,red=%p,green=%p,blue=%p,transp=%p\n",
 		 info->cmap.start, info->cmap.len,
 		 info->cmap.red, info->cmap.green, info->cmap.blue,
 		 info->cmap.transp);
@@ -1314,7 +1314,7 @@ static int __init lynxfb_setup(char *options)
 		strsep() updates @options to pointer after the first found token
 		it also returns the pointer ahead the token.
 		*/
-	while ((opt = strsep(&options, ":"))!=NULL) {
+	while ((opt = strsep(&options, ":")) != NULL) {
 		/* options that mean for any lynx chips are configured here */
 		if (!strncmp(opt, "noaccel", strlen("noaccel")))
 			g_noaccel = 1;
@@ -1360,7 +1360,7 @@ static struct pci_driver lynxfb_driver = {
 
 static int __init lynxfb_init(void)
 {
-	char *option ;
+	char *option;
 	int ret;
 
 #ifdef MODULE

commit 876e5a701f17e447ca6a828b9eda320f1cd835d7
Author: Michel von Czettritz <michel.von.czettritz@gmail.com>
Date:   Thu Mar 26 23:26:37 2015 +0100

    staging: sm750: blank line after declaration
    
    This patch fixes "WARNING: Missing a blank line after declaration"
    checkpatch.pl warnings.
    
    Signed-off-by: Michel von Czettritz <michel.von.czettritz@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 92668112fdeb..832a4a1782d9 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -156,6 +156,7 @@ static int lynxfb_ops_cursor(struct fb_info *info, struct fb_cursor *fbcursor)
 	if (fbcursor->set & FB_CUR_SETCMAP) {
 		/* get the 16bit color of kernel means */
 		u16 fg, bg;
+
 		fg = ((info->cmap.red[fbcursor->image.fg_color] & 0xf800))|
 		      ((info->cmap.green[fbcursor->image.fg_color] & 0xfc00) >> 5)|
 		      ((info->cmap.blue[fbcursor->image.fg_color] & 0xf800) >> 11);
@@ -269,7 +270,7 @@ static void lynxfb_ops_imageblit(struct fb_info *info,
 
 	if (image->depth == 1) {
 		if (info->fix.visual == FB_VISUAL_TRUECOLOR ||
-				info->fix.visual == FB_VISUAL_DIRECTCOLOR) {
+		    info->fix.visual == FB_VISUAL_DIRECTCOLOR) {
 			fgcol = ((u32*)info->pseudo_palette)[image->fg_color];
 			bgcol = ((u32*)info->pseudo_palette)[image->bg_color];
 		} else {
@@ -620,9 +621,12 @@ static int lynxfb_ops_check_var(struct fb_var_screeninfo *var,
 }
 
 
-static int lynxfb_ops_setcolreg(unsigned regno, unsigned red,
-				unsigned green, unsigned blue,
-				unsigned transp, struct fb_info *info)
+static int lynxfb_ops_setcolreg(unsigned regno,
+				unsigned red,
+				unsigned green,
+				unsigned blue,
+				unsigned transp,
+				struct fb_info *info)
 {
 	struct lynxfb_par *par;
 	struct lynxfb_crtc *crtc;
@@ -654,9 +658,10 @@ static int lynxfb_ops_setcolreg(unsigned regno, unsigned red,
 
 	if (info->fix.visual == FB_VISUAL_TRUECOLOR && regno < 256) {
 		u32 val;
+
 		if (var->bits_per_pixel == 16 ||
-		   var->bits_per_pixel == 32 ||
-		   var->bits_per_pixel == 24) {
+		    var->bits_per_pixel == 32 ||
+		    var->bits_per_pixel == 24) {
 			val = chan_to_field(red, &var->red);
 			val |= chan_to_field(green, &var->green);
 			val |= chan_to_field(blue, &var->blue);
@@ -1189,6 +1194,7 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 	} else {
 		struct lynxfb_par *par;
 		int errno;
+
 		pr_info("framebuffer #%d alloc okay\n", fbidx);
 		share->fbinfo[fbidx] = info[fbidx];
 		par = info[fbidx]->par;
@@ -1208,8 +1214,8 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 		errno = register_framebuffer(info[fbidx]);
 		if (errno < 0) {
 			pr_err("Failed to register fb_info #%d. err %d\n",
-				fbidx,
-				errno);
+			       fbidx,
+			       errno);
 			if (fbidx == 0)
 				goto err_register0;
 			else

commit 3318bb5e945f7007842fef4b6c69e559bc6a0e79
Author: Michel von Czettritz <michel.von.czettritz@gmail.com>
Date:   Thu Mar 26 23:26:23 2015 +0100

    staging: sm750: 80 characters per line
    
    This patch inserts line breaks to make lines fit into 80 characters and increase readability.
    
    Signed-off-by: Michel von Czettritz <michel.von.czettritz@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 2f8a6b232774..92668112fdeb 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -60,54 +60,66 @@ static char *g_option = NULL;
 static const struct fb_videomode lynx750_ext[] = {
 	/*	1024x600-60 VESA	[1.71:1] */
 	{NULL,  60, 1024, 600, 20423, 144,  40, 18, 1, 104, 3,
-	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
+	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT,
+	 FB_VMODE_NONINTERLACED},
 
 	/*	1024x600-70 VESA */
 	{NULL,  70, 1024, 600, 17211, 152,  48, 21, 1, 104, 3,
-	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
+	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT,
+	 FB_VMODE_NONINTERLACED},
 
 	/*	1024x600-75 VESA */
 	{NULL,  75, 1024, 600, 15822, 160,  56, 23, 1, 104, 3,
-	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
+	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT,
+	 FB_VMODE_NONINTERLACED},
 
 	/*	1024x600-85 VESA */
 	{NULL,  85, 1024, 600, 13730, 168,  56, 26, 1, 112, 3,
-	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
+	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT,
+	 FB_VMODE_NONINTERLACED},
 
 	/*	720x480	*/
 	{NULL, 60,  720,  480,  37427, 88,   16, 13, 1,   72,  3,
-	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
+	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT,
+	 FB_VMODE_NONINTERLACED},
 
 	/*	1280x720		[1.78:1]	*/
 	{NULL, 60,  1280,  720,  13426, 162, 86, 22, 1,  136, 3,
-	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
+	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT,
+	 FB_VMODE_NONINTERLACED},
 
 	/*	1280x768@60 */
 	{NULL, 60, 1280, 768, 12579, 192, 64, 20, 3, 128, 7,
-	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT,FB_VMODE_NONINTERLACED},
+	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT,
+	 FB_VMODE_NONINTERLACED},
 
 	{NULL, 60, 1360, 768, 11804, 208, 64, 23, 1, 144, 3,
 	 FB_SYNC_HOR_HIGH_ACT|FB_VMODE_NONINTERLACED},
 
 	/*	1360 x 768	[1.77083:1]	*/
 	{NULL,  60, 1360, 768, 11804, 208,  64, 23, 1, 144, 3,
-	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
+	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT,
+	 FB_VMODE_NONINTERLACED},
 
 	/*	1368 x 768      [1.78:1]	*/
 	{NULL, 60,  1368,  768,  11647, 216, 72, 23, 1,  144, 3,
-	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
+	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT,
+	 FB_VMODE_NONINTERLACED},
 
 	/*	1440 x 900		[16:10]	*/
 	{NULL, 60, 1440, 900, 9392, 232, 80, 28, 1, 152, 3,
-	 FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
+	 FB_SYNC_VERT_HIGH_ACT,
+	 FB_VMODE_NONINTERLACED},
 
 	/*	1440x960		[15:10]	*/
 	{NULL, 60, 1440, 960, 8733, 240, 88, 30, 1, 152, 3,
-	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
+	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT,
+	 FB_VMODE_NONINTERLACED},
 
 	/*	1920x1080	[16:9]	*/
 	{NULL, 60, 1920, 1080, 6734, 148, 88, 41, 1, 44, 3,
-	 FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
+	 FB_SYNC_VERT_HIGH_ACT,
+	 FB_VMODE_NONINTERLACED},
 };
 
 
@@ -132,12 +144,14 @@ static int lynxfb_ops_cursor(struct fb_info *info, struct fb_cursor *fbcursor)
 
 	cursor->disable(cursor);
 	if (fbcursor->set & FB_CUR_SETSIZE)
-		cursor->setSize(cursor, fbcursor->image.width, fbcursor->image.height);
+		cursor->setSize(cursor,
+				fbcursor->image.width,
+				fbcursor->image.height);
 
-	if (fbcursor->set & FB_CUR_SETPOS) {
-		cursor->setPos(cursor, fbcursor->image.dx - info->var.xoffset,
+	if (fbcursor->set & FB_CUR_SETPOS)
+		cursor->setPos(cursor,
+			       fbcursor->image.dx - info->var.xoffset,
 			       fbcursor->image.dy - info->var.yoffset);
-	}
 
 	if (fbcursor->set & FB_CUR_SETCMAP) {
 		/* get the 16bit color of kernel means */
@@ -167,7 +181,8 @@ static int lynxfb_ops_cursor(struct fb_info *info, struct fb_cursor *fbcursor)
 	return 0;
 }
 
-static void lynxfb_ops_fillrect(struct fb_info *info, const struct fb_fillrect *region)
+static void lynxfb_ops_fillrect(struct fb_info *info,
+				const struct fb_fillrect *region)
 {
 	struct lynxfb_par *par;
 	struct lynx_share *share;
@@ -205,7 +220,8 @@ static void lynxfb_ops_fillrect(struct fb_info *info, const struct fb_fillrect *
 		spin_unlock(&share->slock);
 }
 
-static void lynxfb_ops_copyarea(struct fb_info *info, const struct fb_copyarea *region)
+static void lynxfb_ops_copyarea(struct fb_info *info,
+				const struct fb_copyarea *region)
 {
 	struct lynxfb_par *par;
 	struct lynx_share *share;
@@ -235,7 +251,8 @@ static void lynxfb_ops_copyarea(struct fb_info *info, const struct fb_copyarea *
 		spin_unlock(&share->slock);
 }
 
-static void lynxfb_ops_imageblit(struct fb_info *info, const struct fb_image *image)
+static void lynxfb_ops_imageblit(struct fb_info *info,
+				 const struct fb_image *image)
 {
 	unsigned int base, pitch, Bpp;
 	unsigned int fgcol, bgcol;
@@ -381,7 +398,8 @@ static int lynxfb_ops_set_par(struct fb_info *info)
 	return ret;
 }
 
-static inline unsigned int chan_to_field(unsigned int chan, struct fb_bitfield *bf)
+static inline unsigned int chan_to_field(unsigned int chan,
+					 struct fb_bitfield *bf)
 {
 	chan &= 0xffff;
 	chan >>= 16 - bf->length;
@@ -508,7 +526,8 @@ static int lynxfb_resume(struct pci_dev *pdev)
 }
 #endif
 
-static int lynxfb_ops_check_var(struct fb_var_screeninfo *var, struct fb_info *info)
+static int lynxfb_ops_check_var(struct fb_var_screeninfo *var,
+				struct fb_info *info)
 {
 	struct lynxfb_par *par;
 	struct lynxfb_crtc *crtc;
@@ -582,7 +601,7 @@ static int lynxfb_ops_check_var(struct fb_var_screeninfo *var, struct fb_info *i
 	var->height = var->width = -1;
 	var->accel_flags = 0;/* FB_ACCELF_TEXT; */
 
-	/* check if current fb's video memory big enought to hold the onscreen */
+	/* check if current fb's video memory big enought to hold the onscreen*/
 	request = var->xres_virtual * (var->bits_per_pixel >> 3);
 	/* defaulty crtc->channel go with par->index */
 
@@ -623,7 +642,8 @@ static int lynxfb_ops_setcolreg(unsigned regno, unsigned red,
 	if (info->var.grayscale)
 		red = green = blue = (red * 77 + green * 151 + blue * 28) >> 8;
 
-	if (var->bits_per_pixel == 8 && info->fix.visual == FB_VISUAL_PSEUDOCOLOR) {
+	if (var->bits_per_pixel == 8 &&
+	    info->fix.visual == FB_VISUAL_PSEUDOCOLOR) {
 		red >>= 8;
 		green >>= 8;
 		blue >>= 8;
@@ -865,22 +885,30 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 		} else if (ret == 4) {
 			pr_warn("fall back to any valid mode\n");
 		} else {
-			pr_warn("ret = %d,fb_find_mode failed,with %s\n", ret, mdb_desc[i]);
+			pr_warn("ret = %d,fb_find_mode failed,with %s\n",
+				ret,
+				mdb_desc[i]);
 		}
 	}
 
 	/* some member of info->var had been set by fb_find_mode */
 
 	pr_info("Member of info->var is :\n\
-			xres=%d\n\
-			yres=%d\n\
-			xres_virtual=%d\n\
-			yres_virtual=%d\n\
-			xoffset=%d\n\
-			yoffset=%d\n\
-			bits_per_pixel=%d\n \
-			...\n", var->xres, var->yres, var->xres_virtual, var->yres_virtual,
-			var->xoffset, var->yoffset, var->bits_per_pixel);
+		xres=%d\n\
+		yres=%d\n\
+		xres_virtual=%d\n\
+		yres_virtual=%d\n\
+		xoffset=%d\n\
+		yoffset=%d\n\
+		bits_per_pixel=%d\n \
+		...\n",
+		var->xres,
+		var->yres,
+		var->xres_virtual,
+		var->yres_virtual,
+		var->xoffset,
+		var->yoffset,
+		var->bits_per_pixel);
 
 	/* set par */
 	par->info = info;
@@ -1026,7 +1054,9 @@ static void sm750fb_setup(struct lynx_share *share, char *src)
 		}
 	}
 #ifdef CAP_EXPANSION
-	if (getExpRes(exp_res, &spec_share->state.xLCD, &spec_share->state.yLCD)) {
+	if (getExpRes(exp_res,
+		      &spec_share->state.xLCD,
+		      &spec_share->state.yLCD)) {
 		/* seems exp_res is not valid */
 		spec_share->state.xLCD = spec_share->state.yLCD = 0;
 	}
@@ -1100,8 +1130,8 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 	if (!share->accel_off) {
 		/* hook deInit and 2d routines, notes that below hw_xxx
 		 * routine can work on most of lynx chips
-		 * if some chip need specific function,please hook it in smXXX_set_drv
-		 * routine */
+		 * if some chip need specific function,
+		 * please hook it in smXXX_set_drv routine */
 		share->accel.de_init = hw_de_init;
 		share->accel.de_fillrect = hw_fillrect;
 		share->accel.de_copyarea = hw_copyarea;
@@ -1177,7 +1207,9 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 		pr_info("Ready to register framebuffer #%d.\n", fbidx);
 		errno = register_framebuffer(info[fbidx]);
 		if (errno < 0) {
-			pr_err("Failed to register fb_info #%d. err %d\n", fbidx, errno);
+			pr_err("Failed to register fb_info #%d. err %d\n",
+				fbidx,
+				errno);
 			if (fbidx == 0)
 				goto err_register0;
 			else
@@ -1235,7 +1267,9 @@ static void __exit lynxfb_pci_remove(struct pci_dev *pdev)
 	}
 #ifdef CONFIG_MTRR
 	if (share->mtrr.vram_added)
-		mtrr_del(share->mtrr.vram, share->vidmem_start, share->vidmem_size);
+		mtrr_del(share->mtrr.vram,
+			 share->vidmem_start,
+			 share->vidmem_size);
 #endif
 
 	iounmap(share->pvReg);

commit 4bd9503d0becdb6f825fc13b3f4f5a194a91f7be
Author: Michel von Czettritz <michel.von.czettritz@gmail.com>
Date:   Thu Mar 26 23:26:04 2015 +0100

    staging: sm750: comment formating
    
    This patch fixes checkpatch.pl warnings / errors:
    
    - "WARNING: please, no space before tabs"
    - "ERROR: do not use C99 // comments"
    
    Signed-off-by: Michel von Czettritz <michel.von.czettritz@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 786679d0f6be..2f8a6b232774 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -58,19 +58,19 @@ static char *g_option = NULL;
 
 
 static const struct fb_videomode lynx750_ext[] = {
-	/*  	1024x600-60 VESA 	[1.71:1]	*/
+	/*	1024x600-60 VESA	[1.71:1] */
 	{NULL,  60, 1024, 600, 20423, 144,  40, 18, 1, 104, 3,
 	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
 
-	/* 	1024x600-70 VESA */
+	/*	1024x600-70 VESA */
 	{NULL,  70, 1024, 600, 17211, 152,  48, 21, 1, 104, 3,
 	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
 
-	/*  	1024x600-75 VESA */
+	/*	1024x600-75 VESA */
 	{NULL,  75, 1024, 600, 15822, 160,  56, 23, 1, 104, 3,
 	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
 
-	/*  	1024x600-85 VESA */
+	/*	1024x600-85 VESA */
 	{NULL,  85, 1024, 600, 13730, 168,  56, 26, 1, 112, 3,
 	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
 
@@ -82,7 +82,7 @@ static const struct fb_videomode lynx750_ext[] = {
 	{NULL, 60,  1280,  720,  13426, 162, 86, 22, 1,  136, 3,
 	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
 
-	/* 1280x768@60 */
+	/*	1280x768@60 */
 	{NULL, 60, 1280, 768, 12579, 192, 64, 20, 3, 128, 7,
 	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT,FB_VMODE_NONINTERLACED},
 
@@ -97,7 +97,7 @@ static const struct fb_videomode lynx750_ext[] = {
 	{NULL, 60,  1368,  768,  11647, 216, 72, 23, 1,  144, 3,
 	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
 
-	/* 	1440 x 900		[16:10]	*/
+	/*	1440 x 900		[16:10]	*/
 	{NULL, 60, 1440, 900, 9392, 232, 80, 28, 1, 152, 3,
 	 FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
 
@@ -411,11 +411,11 @@ static int lynxfb_suspend(struct pci_dev *pdev, pm_message_t mesg)
 	if (mesg.event & PM_EVENT_SLEEP) {
 		info = share->fbinfo[0];
 		if (info)
-			/* 1 means do suspend*/
+			/* 1 means do suspend */
 			fb_set_suspend(info, 1);
 		info = share->fbinfo[1];
 		if (info)
-			/* 1 means do suspend*/
+			/* 1 means do suspend */
 			fb_set_suspend(info, 1);
 
 		ret = pci_save_state(pdev);
@@ -424,7 +424,7 @@ static int lynxfb_suspend(struct pci_dev *pdev, pm_message_t mesg)
 			return ret;
 		}
 
-		/* set chip to sleep mode*/
+		/* set chip to sleep mode */
 		if (share->suspend)
 			(*share->suspend)(share);
 
@@ -580,7 +580,7 @@ static int lynxfb_ops_check_var(struct fb_var_screeninfo *var, struct fb_info *i
 		break;
 	}
 	var->height = var->width = -1;
-	var->accel_flags = 0;/*FB_ACCELF_TEXT;*/
+	var->accel_flags = 0;/* FB_ACCELF_TEXT; */
 
 	/* check if current fb's video memory big enought to hold the onscreen */
 	request = var->xres_virtual * (var->bits_per_pixel >> 3);
@@ -615,7 +615,6 @@ static int lynxfb_ops_setcolreg(unsigned regno, unsigned red,
 	var = &info->var;
 	ret = 0;
 
-	//pr_debug("regno=%d,red=%d,green=%d,blue=%d\n",regno,red,green,blue);
 	if (regno > 256) {
 		pr_err("regno = %d\n", regno);
 		return -EINVAL;
@@ -688,7 +687,6 @@ static int sm750fb_set_drv(struct lynxfb_par *par)
 	crtc->proc_panDisplay = hw_sm750_pan_display;
 	crtc->clear = hw_sm750_crtc_clear;
 	crtc->line_pad = 16;
-	//crtc->xpanstep = crtc->ypanstep = crtc->ywrapstep = 0;
 	crtc->xpanstep = 8;
 	crtc->ypanstep = 1;
 	crtc->ywrapstep = 0;
@@ -723,7 +721,7 @@ static int sm750fb_set_drv(struct lynxfb_par *par)
 		} else {
 			output->paths = sm750_crt;
 			crtc->channel = sm750_secondary;
-			/* not consider of padding stuffs for oScreen,need fix*/
+			/* not consider of padding stuffs for oScreen,need fix */
 			crtc->oScreen = (share->vidmem_size >> 1);
 			crtc->vScreen = share->pvMem + crtc->oScreen;
 		}
@@ -737,7 +735,7 @@ static int sm750fb_set_drv(struct lynxfb_par *par)
 		} else {
 			output->paths = sm750_crt;
 			crtc->channel = sm750_primary;
-			/* not consider of padding stuffs for oScreen,need fix*/
+			/* not consider of padding stuffs for oScreen,need fix */
 			crtc->oScreen = (share->vidmem_size >> 1);
 			crtc->vScreen = share->pvMem + crtc->oScreen;
 		}
@@ -863,7 +861,7 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 			break;
 		} else if (ret == 3) {
 			pr_warn("wanna use default mode\n");
-			//			break;
+			/*break;*/
 		} else if (ret == 4) {
 			pr_warn("fall back to any valid mode\n");
 		} else {
@@ -956,7 +954,6 @@ static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 
 exit:
 	lynxfb_ops_check_var(var, info);
-	//    lynxfb_ops_set_par(info);
 	return ret;
 }
 
@@ -984,7 +981,7 @@ static void sm750fb_setup(struct lynx_share *share, char *src)
 	spec_share->state.initParm.setAllEngOff = 0;
 	spec_share->state.initParm.resetMemory = 1;
 
-	/*defaultly turn g_hwcursor on for both view */
+	/* defaultly turn g_hwcursor on for both view */
 	g_hwcursor = 3;
 
 	if (!src || !*src) {
@@ -1030,7 +1027,7 @@ static void sm750fb_setup(struct lynx_share *share, char *src)
 	}
 #ifdef CAP_EXPANSION
 	if (getExpRes(exp_res, &spec_share->state.xLCD, &spec_share->state.yLCD)) {
-		/* seems exp_res is not valid*/
+		/* seems exp_res is not valid */
 		spec_share->state.xLCD = spec_share->state.yLCD = 0;
 	}
 #endif
@@ -1051,7 +1048,7 @@ static void sm750fb_setup(struct lynx_share *share, char *src)
 	} else {
 		/* SM750LE only have one crt channel */
 		spec_share->state.dataflow = sm750_simul_sec;
-		/* sm750le do not have complex attributes*/
+		/* sm750le do not have complex attributes */
 		spec_share->state.nocrt = 0;
 	}
 }
@@ -1176,7 +1173,7 @@ static int lynxfb_pci_probe(struct pci_dev *pdev,
 				goto err_info1_set;
 		}
 
-		/* register frame buffer*/
+		/* register frame buffer */
 		pr_info("Ready to register framebuffer #%d.\n", fbidx);
 		errno = register_framebuffer(info[fbidx]);
 		if (errno < 0) {
@@ -1230,17 +1227,16 @@ static void __exit lynxfb_pci_remove(struct pci_dev *pdev)
 		par = info->par;
 
 		unregister_framebuffer(info);
-		/* clean crtc & output allocations*/
+		/* clean crtc & output allocations */
 		par->crtc.clear(&par->crtc);
 		par->output.clear(&par->output);
-		/* release frame buffer*/
+		/* release frame buffer */
 		framebuffer_release(info);
 	}
 #ifdef CONFIG_MTRR
 	if (share->mtrr.vram_added)
 		mtrr_del(share->mtrr.vram, share->vidmem_start, share->vidmem_size);
 #endif
-	//	pci_release_regions(pdev);
 
 	iounmap(share->pvReg);
 	iounmap(share->pvMem);

commit f46a04c75605fd55879c797fd7f349f8cb32bb88
Author: Michel von Czettritz <michel.von.czettritz@gmail.com>
Date:   Fri Mar 27 19:42:48 2015 +0100

    staging: sm750: no braces for single stmt if blocks
    
    This patches fixes checkpatch.pl warning:
    "WARNING: braces {} are not necessary for single statement blocks"
    
    Signed-off-by: Michel von Czettritz <michel.von.czettritz@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index d9a94d75aed4..786679d0f6be 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -131,9 +131,8 @@ static int lynxfb_ops_cursor(struct fb_info *info, struct fb_cursor *fbcursor)
 	}
 
 	cursor->disable(cursor);
-	if (fbcursor->set & FB_CUR_SETSIZE) {
+	if (fbcursor->set & FB_CUR_SETSIZE)
 		cursor->setSize(cursor, fbcursor->image.width, fbcursor->image.height);
-	}
 
 	if (fbcursor->set & FB_CUR_SETPOS) {
 		cursor->setPos(cursor, fbcursor->image.dx - info->var.xoffset,
@@ -162,9 +161,8 @@ static int lynxfb_ops_cursor(struct fb_info *info, struct fb_cursor *fbcursor)
 				fbcursor->mask);
 	}
 
-	if (fbcursor->enable) {
+	if (fbcursor->enable)
 		cursor->enable(cursor);
-	}
 
 	return 0;
 }
@@ -176,9 +174,8 @@ static void lynxfb_ops_fillrect(struct fb_info *info, const struct fb_fillrect *
 	unsigned int base, pitch, Bpp, rop;
 	u32 color;
 
-	if (info->state != FBINFO_STATE_RUNNING) {
+	if (info->state != FBINFO_STATE_RUNNING)
 		return;
-	}
 
 	par = info->par;
 	share = par->share;

commit 27fa159bd2958ed2146d794c295c32e4fe4dd055
Author: Michel von Czettritz <michel.von.czettritz@gmail.com>
Date:   Thu Mar 26 23:25:37 2015 +0100

    staging: sm750: fix whitespaces around pointers
    
    This patch fixes checkpatch.pl errors:
    - ERROR: "foo * bar" should be "foo *bar"
    - ERROR: "foo* bar" should be "foo *bar"
    
    Signed-off-by: Michel von Czettritz <michel.von.czettritz@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 6d148a550d12..d9a94d75aed4 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -50,11 +50,12 @@ static int g_noaccel;
 #ifdef CONFIG_MTRR
 static int g_nomtrr;
 #endif
-static const char * g_fbmode[] = {NULL, NULL};
-static const char * g_def_fbmode = "800x600-16@60";
-static char * g_settings = NULL;
+static const char *g_fbmode[] = {NULL, NULL};
+static const char *g_def_fbmode = "800x600-16@60";
+static char *g_settings = NULL;
 static int g_dualview;
-static char * g_option = NULL;
+static char *g_option = NULL;
+
 
 static const struct fb_videomode lynx750_ext[] = {
 	/*  	1024x600-60 VESA 	[1.71:1]	*/
@@ -113,11 +114,11 @@ static const struct fb_videomode lynx750_ext[] = {
 
 
 /* no hardware cursor supported under version 2.6.10, kernel bug */
-static int lynxfb_ops_cursor(struct fb_info* info, struct fb_cursor* fbcursor)
+static int lynxfb_ops_cursor(struct fb_info *info, struct fb_cursor *fbcursor)
 {
-	struct lynxfb_par * par;
-	struct lynxfb_crtc * crtc;
-	struct lynx_cursor * cursor;
+	struct lynxfb_par *par;
+	struct lynxfb_crtc *crtc;
+	struct lynx_cursor *cursor;
 
 	par = info->par;
 	crtc = &par->crtc;
@@ -168,10 +169,10 @@ static int lynxfb_ops_cursor(struct fb_info* info, struct fb_cursor* fbcursor)
 	return 0;
 }
 
-static void lynxfb_ops_fillrect(struct fb_info* info, const struct fb_fillrect* region)
+static void lynxfb_ops_fillrect(struct fb_info *info, const struct fb_fillrect *region)
 {
-	struct lynxfb_par * par;
-	struct lynx_share * share;
+	struct lynxfb_par *par;
+	struct lynx_share *share;
 	unsigned int base, pitch, Bpp, rop;
 	u32 color;
 
@@ -207,10 +208,10 @@ static void lynxfb_ops_fillrect(struct fb_info* info, const struct fb_fillrect*
 		spin_unlock(&share->slock);
 }
 
-static void lynxfb_ops_copyarea(struct fb_info * info, const struct fb_copyarea * region)
+static void lynxfb_ops_copyarea(struct fb_info *info, const struct fb_copyarea *region)
 {
-	struct lynxfb_par * par;
-	struct lynx_share * share;
+	struct lynxfb_par *par;
+	struct lynx_share *share;
 	unsigned int base, pitch, Bpp;
 
 	par = info->par;
@@ -237,12 +238,12 @@ static void lynxfb_ops_copyarea(struct fb_info * info, const struct fb_copyarea
 		spin_unlock(&share->slock);
 }
 
-static void lynxfb_ops_imageblit(struct fb_info*info, const struct fb_image* image)
+static void lynxfb_ops_imageblit(struct fb_info *info, const struct fb_image *image)
 {
 	unsigned int base, pitch, Bpp;
 	unsigned int fgcol, bgcol;
-	struct lynxfb_par * par;
-	struct lynx_share * share;
+	struct lynxfb_par *par;
+	struct lynx_share *share;
 
 	par = info->par;
 	share = par->share;
@@ -285,8 +286,8 @@ static void lynxfb_ops_imageblit(struct fb_info*info, const struct fb_image* ima
 static int lynxfb_ops_pan_display(struct fb_var_screeninfo *var,
 				  struct fb_info *info)
 {
-	struct lynxfb_par * par;
-	struct lynxfb_crtc * crtc;
+	struct lynxfb_par *par;
+	struct lynxfb_crtc *crtc;
 	int ret;
 
 
@@ -301,14 +302,14 @@ static int lynxfb_ops_pan_display(struct fb_var_screeninfo *var,
 	return ret;
 }
 
-static int lynxfb_ops_set_par(struct fb_info * info)
+static int lynxfb_ops_set_par(struct fb_info *info)
 {
-	struct lynxfb_par * par;
-	struct lynx_share * share;
-	struct lynxfb_crtc * crtc;
-	struct lynxfb_output * output;
-	struct fb_var_screeninfo * var;
-	struct fb_fix_screeninfo * fix;
+	struct lynxfb_par *par;
+	struct lynx_share *share;
+	struct lynxfb_crtc *crtc;
+	struct lynxfb_output *output;
+	struct fb_var_screeninfo *var;
+	struct fb_fix_screeninfo *fix;
 	int ret;
 	unsigned int line_length;
 
@@ -383,7 +384,7 @@ static int lynxfb_ops_set_par(struct fb_info * info)
 	return ret;
 }
 
-static inline unsigned int chan_to_field(unsigned int chan, struct fb_bitfield * bf)
+static inline unsigned int chan_to_field(unsigned int chan, struct fb_bitfield *bf)
 {
 	chan &= 0xffff;
 	chan >>= 16 - bf->length;
@@ -443,14 +444,14 @@ static int lynxfb_suspend(struct pci_dev *pdev, pm_message_t mesg)
 	return ret;
 }
 
-static int lynxfb_resume(struct pci_dev* pdev)
+static int lynxfb_resume(struct pci_dev *pdev)
 {
-	struct fb_info * info;
-	struct lynx_share * share;
+	struct fb_info *info;
+	struct lynx_share *share;
 
-	struct lynxfb_par * par;
-	struct lynxfb_crtc * crtc;
-	struct lynx_cursor * cursor;
+	struct lynxfb_par *par;
+	struct lynxfb_crtc *crtc;
+	struct lynx_cursor *cursor;
 
 	int ret;
 
@@ -510,12 +511,12 @@ static int lynxfb_resume(struct pci_dev* pdev)
 }
 #endif
 
-static int lynxfb_ops_check_var(struct fb_var_screeninfo* var, struct fb_info* info)
+static int lynxfb_ops_check_var(struct fb_var_screeninfo *var, struct fb_info *info)
 {
-	struct lynxfb_par * par;
-	struct lynxfb_crtc * crtc;
-	struct lynxfb_output * output;
-	struct lynx_share * share;
+	struct lynxfb_par *par;
+	struct lynxfb_crtc *crtc;
+	struct lynxfb_output *output;
+	struct lynx_share *share;
 	int ret;
 	resource_size_t request;
 
@@ -605,11 +606,11 @@ static int lynxfb_ops_check_var(struct fb_var_screeninfo* var, struct fb_info* i
 
 static int lynxfb_ops_setcolreg(unsigned regno, unsigned red,
 				unsigned green, unsigned blue,
-				unsigned transp, struct fb_info * info)
+				unsigned transp, struct fb_info *info)
 {
-	struct lynxfb_par * par;
-	struct lynxfb_crtc * crtc;
-	struct fb_var_screeninfo * var;
+	struct lynxfb_par *par;
+	struct lynxfb_crtc *crtc;
+	struct fb_var_screeninfo *var;
 	int ret;
 
 	par = info->par;
@@ -654,10 +655,10 @@ static int lynxfb_ops_setcolreg(unsigned regno, unsigned red,
 	return ret;
 }
 
-static int lynxfb_ops_blank(int blank, struct fb_info* info)
+static int lynxfb_ops_blank(int blank, struct fb_info *info)
 {
-	struct lynxfb_par * par;
-	struct lynxfb_output * output;
+	struct lynxfb_par *par;
+	struct lynxfb_output *output;
 
 	pr_debug("blank = %d.\n", blank);
 	par = info->par;
@@ -665,13 +666,13 @@ static int lynxfb_ops_blank(int blank, struct fb_info* info)
 	return output->proc_setBLANK(output, blank);
 }
 
-static int sm750fb_set_drv(struct lynxfb_par * par)
+static int sm750fb_set_drv(struct lynxfb_par *par)
 {
 	int ret;
-	struct lynx_share * share;
-	struct sm750_share * spec_share;
-	struct lynxfb_output * output;
-	struct lynxfb_crtc * crtc;
+	struct lynx_share *share;
+	struct sm750_share *spec_share;
+	struct lynxfb_output *output;
+	struct lynxfb_crtc *crtc;
 
 	ret = 0;
 
@@ -765,28 +766,28 @@ static struct fb_ops lynxfb_ops={
 };
 
 
-static int lynxfb_set_fbinfo(struct fb_info* info, int index)
+static int lynxfb_set_fbinfo(struct fb_info *info, int index)
 {
 	int i;
-	struct lynxfb_par * par;
-	struct lynx_share * share;
-	struct lynxfb_crtc * crtc;
-	struct lynxfb_output * output;
-	struct fb_var_screeninfo * var;
-	struct fb_fix_screeninfo * fix;
-
-	const struct fb_videomode * pdb[] = {
+	struct lynxfb_par *par;
+	struct lynx_share *share;
+	struct lynxfb_crtc *crtc;
+	struct lynxfb_output *output;
+	struct fb_var_screeninfo *var;
+	struct fb_fix_screeninfo *fix;
+
+	const struct fb_videomode *pdb[] = {
 		lynx750_ext, NULL, vesa_modes,
 	};
 	int cdb[] = {ARRAY_SIZE(lynx750_ext), 0, VESA_MODEDB_SIZE};
-	static const char * mdb_desc[] ={
+	static const char *mdb_desc[] ={
 		"driver prepared modes",
 		"kernel prepared default modedb",
 		"kernel HELPERS prepared vesa_modes",
 	};
 
 
-	static const char * fixId[2] = {
+	static const char *fixId[2] = {
 		"sm750_fb1", "sm750_fb2",
 	};
 
@@ -963,12 +964,12 @@ static int lynxfb_set_fbinfo(struct fb_info* info, int index)
 }
 
 /*	chip specific g_option configuration routine */
-static void sm750fb_setup(struct lynx_share * share, char * src)
+static void sm750fb_setup(struct lynx_share *share, char *src)
 {
-	struct sm750_share * spec_share;
-	char * opt;
+	struct sm750_share *spec_share;
+	char *opt;
 #ifdef CAP_EXPENSION
-	char * exp_res;
+	char *exp_res;
 #endif
 	int swap;
 
@@ -1058,11 +1059,11 @@ static void sm750fb_setup(struct lynx_share * share, char * src)
 	}
 }
 
-static int lynxfb_pci_probe(struct pci_dev * pdev,
+static int lynxfb_pci_probe(struct pci_dev *pdev,
 			    const struct pci_device_id * ent)
 {
-	struct fb_info * info[] = {NULL, NULL};
-	struct lynx_share * share = NULL;
+	struct fb_info *info[] = {NULL, NULL};
+	struct lynx_share *share = NULL;
 
 	struct sm750_share *spec_share = NULL;
 	size_t spec_offset = 0;
@@ -1162,7 +1163,7 @@ static int lynxfb_pci_probe(struct pci_dev * pdev,
 		else
 			goto err_info1_alloc;
 	} else {
-		struct lynxfb_par * par;
+		struct lynxfb_par *par;
 		int errno;
 		pr_info("framebuffer #%d alloc okay\n", fbidx);
 		share->fbinfo[fbidx] = info[fbidx];
@@ -1214,12 +1215,12 @@ static int lynxfb_pci_probe(struct pci_dev * pdev,
 	return -ENODEV;
 }
 
-static void __exit lynxfb_pci_remove(struct pci_dev * pdev)
+static void __exit lynxfb_pci_remove(struct pci_dev *pdev)
 {
-	struct fb_info * info;
-	struct lynx_share * share;
-	void * spec_share;
-	struct lynxfb_par * par;
+	struct fb_info *info;
+	struct lynx_share *share;
+	void *spec_share;
+	struct lynxfb_par *par;
 	int cnt;
 
 	cnt = 2;
@@ -1252,10 +1253,10 @@ static void __exit lynxfb_pci_remove(struct pci_dev * pdev)
 	pci_set_drvdata(pdev, NULL);
 }
 
-static int __init lynxfb_setup(char * options)
+static int __init lynxfb_setup(char *options)
 {
 	int len;
-	char * opt,*tmp;
+	char *opt, *tmp;
 
 
 	if (!options || !*options) {

commit 5ace4e10c1cf7c8e9069b1299582899a61c9994f
Author: Michel von Czettritz <michel.von.czettritz@gmail.com>
Date:   Thu Mar 26 23:25:22 2015 +0100

    staging: sm750: fix whitespace around braces
    
    Fix multiple similar checkpatch.pl errors:
    
    - "ERROR: space required before the open parenthesis '('"
    - "ERROR: space required before the open brace '{'"
    - "ERROR: space prohibited after that open parenthesis '('"
    - "ERROR: space prohibited before that close parenthesis ')'"
    
    Signed-off-by: Michel von Czettritz <michel.von.czettritz@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index bc2986d9fee6..6d148a550d12 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -39,9 +39,9 @@ int smi_indent = 0;
  * #endif
  */
 
-typedef void (*PROC_SPEC_SETUP)(struct lynx_share*,char *);
-typedef int (*PROC_SPEC_MAP)(struct lynx_share*,struct pci_dev*);
-typedef int (*PROC_SPEC_INITHW)(struct lynx_share*,struct pci_dev*);
+typedef void (*PROC_SPEC_SETUP)(struct lynx_share*, char *);
+typedef int (*PROC_SPEC_MAP)(struct lynx_share*, struct pci_dev*);
+typedef int (*PROC_SPEC_INITHW)(struct lynx_share*, struct pci_dev*);
 
 
 /* common var for all device */
@@ -123,23 +123,23 @@ static int lynxfb_ops_cursor(struct fb_info* info, struct fb_cursor* fbcursor)
 	crtc = &par->crtc;
 	cursor = &crtc->cursor;
 
-	if(fbcursor->image.width > cursor->maxW ||
+	if (fbcursor->image.width > cursor->maxW ||
 	   fbcursor->image.height > cursor->maxH ||
-	   fbcursor->image.depth > 1){
+	   fbcursor->image.depth > 1) {
 		return -ENXIO;
 	}
 
 	cursor->disable(cursor);
-	if(fbcursor->set & FB_CUR_SETSIZE){
+	if (fbcursor->set & FB_CUR_SETSIZE) {
 		cursor->setSize(cursor, fbcursor->image.width, fbcursor->image.height);
 	}
 
-	if(fbcursor->set & FB_CUR_SETPOS){
+	if (fbcursor->set & FB_CUR_SETPOS) {
 		cursor->setPos(cursor, fbcursor->image.dx - info->var.xoffset,
 			       fbcursor->image.dy - info->var.yoffset);
 	}
 
-	if(fbcursor->set & FB_CUR_SETCMAP){
+	if (fbcursor->set & FB_CUR_SETCMAP) {
 		/* get the 16bit color of kernel means */
 		u16 fg, bg;
 		fg = ((info->cmap.red[fbcursor->image.fg_color] & 0xf800))|
@@ -154,14 +154,14 @@ static int lynxfb_ops_cursor(struct fb_info* info, struct fb_cursor* fbcursor)
 	}
 
 
-	if(fbcursor->set & (FB_CUR_SETSHAPE | FB_CUR_SETIMAGE)) {
+	if (fbcursor->set & (FB_CUR_SETSHAPE | FB_CUR_SETIMAGE)) {
 		cursor->setData(cursor,
 				fbcursor->rop,
 				fbcursor->image.data,
 				fbcursor->mask);
 	}
 
-	if(fbcursor->enable){
+	if (fbcursor->enable) {
 		cursor->enable(cursor);
 	}
 
@@ -175,7 +175,7 @@ static void lynxfb_ops_fillrect(struct fb_info* info, const struct fb_fillrect*
 	unsigned int base, pitch, Bpp, rop;
 	u32 color;
 
-	if(info->state != FBINFO_STATE_RUNNING){
+	if (info->state != FBINFO_STATE_RUNNING) {
 		return;
 	}
 
@@ -189,7 +189,7 @@ static void lynxfb_ops_fillrect(struct fb_info* info, const struct fb_fillrect*
 	Bpp = info->var.bits_per_pixel >> 3;
 
 	color = (Bpp == 1)?region->color:((u32*)info->pseudo_palette)[region->color];
-	rop = ( region->rop != ROP_COPY ) ? HW_ROP2_XOR:HW_ROP2_COPY;
+	rop = (region->rop != ROP_COPY) ? HW_ROP2_XOR:HW_ROP2_COPY;
 
 	/*
 	 * If not use spin_lock,system will die if user load driver
@@ -252,8 +252,8 @@ static void lynxfb_ops_imageblit(struct fb_info*info, const struct fb_image* ima
 	pitch = info->fix.line_length;
 	Bpp = info->var.bits_per_pixel >> 3;
 
-	if(image->depth == 1){
-		if(info->fix.visual == FB_VISUAL_TRUECOLOR ||
+	if (image->depth == 1) {
+		if (info->fix.visual == FB_VISUAL_TRUECOLOR ||
 				info->fix.visual == FB_VISUAL_DIRECTCOLOR) {
 			fgcol = ((u32*)info->pseudo_palette)[image->fg_color];
 			bgcol = ((u32*)info->pseudo_palette)[image->bg_color];
@@ -290,7 +290,7 @@ static int lynxfb_ops_pan_display(struct fb_var_screeninfo *var,
 	int ret;
 
 
-	if(!info)
+	if (!info)
 		return -EINVAL;
 
 	ret = 0;
@@ -312,7 +312,7 @@ static int lynxfb_ops_set_par(struct fb_info * info)
 	int ret;
 	unsigned int line_length;
 
-	if(!info)
+	if (!info)
 		return -EINVAL;
 
 	ret = 0;
@@ -333,7 +333,7 @@ static int lynxfb_ops_set_par(struct fb_info * info)
 	 * and these data should be set before setcolreg routine
 	 * */
 
-	switch(var->bits_per_pixel){
+	switch (var->bits_per_pixel) {
 	case 8:
 		fix->visual = FB_VISUAL_PSEUDOCOLOR;
 		var->red.offset = 0;
@@ -373,12 +373,12 @@ static int lynxfb_ops_set_par(struct fb_info * info)
 	var->height = var->width = -1;
 	var->accel_flags = 0;/*FB_ACCELF_TEXT;*/
 
-	if(ret){
+	if (ret) {
 		pr_err("pixel bpp format not satisfied\n.");
 		return ret;
 	}
 	ret = crtc->proc_setMode(crtc, var, fix);
-	if(!ret)
+	if (!ret)
 		ret = output->proc_setMode(output, var, fix);
 	return ret;
 }
@@ -460,21 +460,21 @@ static int lynxfb_resume(struct pci_dev* pdev)
 
 	console_lock();
 
-	if((ret = pci_set_power_state(pdev, PCI_D0)) != 0){
+	if ((ret = pci_set_power_state(pdev, PCI_D0)) != 0) {
 		pr_err("error:%d occured in pci_set_power_state\n", ret);
 		return ret;
 	}
 
 
-	if(pdev->dev.power.power_state.event != PM_EVENT_FREEZE){
+	if (pdev->dev.power.power_state.event != PM_EVENT_FREEZE) {
 		pci_restore_state(pdev);
-		if ((ret = pci_enable_device(pdev)) != 0){
+		if ((ret = pci_enable_device(pdev)) != 0) {
 			pr_err("error:%d occured in pci_enable_device\n", ret);
 			return ret;
 		}
 		pci_set_master(pdev);
 	}
-	if(share->resume)
+	if (share->resume)
 		(*share->resume)(share);
 
 	hw_sm750_inithw(share, pdev);
@@ -482,7 +482,7 @@ static int lynxfb_resume(struct pci_dev* pdev)
 
 	info = share->fbinfo[0];
 
-	if(info){
+	if (info) {
 		par = info->par;
 		crtc = &par->crtc;
 		cursor = &crtc->cursor;
@@ -494,7 +494,7 @@ static int lynxfb_resume(struct pci_dev* pdev)
 
 	info = share->fbinfo[1];
 
-	if(info){
+	if (info) {
 		par = info->par;
 		crtc = &par->crtc;
 		cursor = &crtc->cursor;
@@ -532,7 +532,7 @@ static int lynxfb_ops_check_var(struct fb_var_screeninfo* var, struct fb_info* i
 		 var->bits_per_pixel);
 
 
-	switch(var->bits_per_pixel){
+	switch (var->bits_per_pixel) {
 	case 8:
 	case 16:
 	case 24: /* support 24 bpp for only lynx712/722/720 */
@@ -544,7 +544,7 @@ static int lynxfb_ops_check_var(struct fb_var_screeninfo* var, struct fb_info* i
 		goto exit;
 	}
 
-	switch(var->bits_per_pixel){
+	switch (var->bits_per_pixel) {
 	case 8:
 		info->fix.visual = FB_VISUAL_PSEUDOCOLOR;
 		var->red.offset = 0;
@@ -590,13 +590,13 @@ static int lynxfb_ops_check_var(struct fb_var_screeninfo* var, struct fb_info* i
 
 	request = PADDING(crtc->line_pad, request);
 	request = request * var->yres_virtual;
-	if(crtc->vidmem_size < request){
+	if (crtc->vidmem_size < request) {
 		pr_err("not enough video memory for mode\n");
 		return -ENOMEM;
 	}
 
 	ret = output->proc_checkMode(output, var);
-	if(!ret)
+	if (!ret)
 		ret = crtc->proc_checkMode(crtc, var);
 exit:
 	return ret;
@@ -618,15 +618,15 @@ static int lynxfb_ops_setcolreg(unsigned regno, unsigned red,
 	ret = 0;
 
 	//pr_debug("regno=%d,red=%d,green=%d,blue=%d\n",regno,red,green,blue);
-	if(regno > 256){
+	if (regno > 256) {
 		pr_err("regno = %d\n", regno);
 		return -EINVAL;
 	}
 
-	if(info->var.grayscale)
+	if (info->var.grayscale)
 		red = green = blue = (red * 77 + green * 151 + blue * 28) >> 8;
 
-	if(var->bits_per_pixel == 8 && info->fix.visual == FB_VISUAL_PSEUDOCOLOR) {
+	if (var->bits_per_pixel == 8 && info->fix.visual == FB_VISUAL_PSEUDOCOLOR) {
 		red >>= 8;
 		green >>= 8;
 		blue >>= 8;
@@ -635,9 +635,9 @@ static int lynxfb_ops_setcolreg(unsigned regno, unsigned red,
 	}
 
 
-	if(info->fix.visual == FB_VISUAL_TRUECOLOR && regno < 256 ) {
+	if (info->fix.visual == FB_VISUAL_TRUECOLOR && regno < 256) {
 		u32 val;
-		if(var->bits_per_pixel == 16 ||
+		if (var->bits_per_pixel == 16 ||
 		   var->bits_per_pixel == 32 ||
 		   var->bits_per_pixel == 24) {
 			val = chan_to_field(red, &var->red);
@@ -717,12 +717,12 @@ static int sm750fb_set_drv(struct lynxfb_par * par)
 		crtc->vScreen = share->pvMem;
 		break;
 	case sm750_dual_normal:
-		if(par->index == 0){
+		if (par->index == 0) {
 			output->paths = sm750_panel;
 			crtc->channel = sm750_primary;
 			crtc->oScreen = 0;
 			crtc->vScreen = share->pvMem;
-		}else{
+		} else {
 			output->paths = sm750_crt;
 			crtc->channel = sm750_secondary;
 			/* not consider of padding stuffs for oScreen,need fix*/
@@ -731,12 +731,12 @@ static int sm750fb_set_drv(struct lynxfb_par * par)
 		}
 		break;
 	case sm750_dual_swap:
-		if(par->index == 0){
+		if (par->index == 0) {
 			output->paths = sm750_panel;
 			crtc->channel = sm750_secondary;
 			crtc->oScreen = 0;
 			crtc->vScreen = share->pvMem;
-		}else{
+		} else {
 			output->paths = sm750_crt;
 			crtc->channel = sm750_primary;
 			/* not consider of padding stuffs for oScreen,need fix*/
@@ -826,14 +826,14 @@ static int lynxfb_set_fbinfo(struct fb_info* info, int index)
 
 	crtc->cursor.share = share;
 		memset_io(crtc->cursor.vstart, 0, crtc->cursor.size);
-	if(!g_hwcursor){
+	if (!g_hwcursor) {
 		lynxfb_ops.fb_cursor = NULL;
 		crtc->cursor.disable(&crtc->cursor);
 	}
 
 
 	/* set info->fbops, must be set before fb_find_mode */
-	if(!share->accel_off){
+	if (!share->accel_off) {
 		/* use 2d acceleration */
 		lynxfb_ops.fb_fillrect = lynxfb_ops_fillrect;
 		lynxfb_ops.fb_copyarea = lynxfb_ops_copyarea;
@@ -841,34 +841,34 @@ static int lynxfb_set_fbinfo(struct fb_info* info, int index)
 	}
 	info->fbops = &lynxfb_ops;
 
-	if(!g_fbmode[index]){
+	if (!g_fbmode[index]) {
 		g_fbmode[index] = g_def_fbmode;
-		if(index)
+		if (index)
 			g_fbmode[index] = g_fbmode[0];
 	}
 
 
-	for(i=0;i<3;i++){
+	for (i=0;i<3;i++) {
 
 		ret = fb_find_mode(var, info, g_fbmode[index],
 				   pdb[i], cdb[i], NULL, 8);
 
-		if(ret == 1){
+		if (ret == 1) {
 			pr_info("success! use specified mode:%s in %s\n",
 				g_fbmode[index],
 				mdb_desc[i]);
 			break;
-		}else if(ret == 2){
+		} else if (ret == 2) {
 			pr_warn("use specified mode:%s in %s,with an ignored refresh rate\n",
 				g_fbmode[index],
 				mdb_desc[i]);
 			break;
-		}else if(ret == 3){
+		} else if (ret == 3) {
 			pr_warn("wanna use default mode\n");
 			//			break;
-		}else if(ret == 4){
+		} else if (ret == 4) {
 			pr_warn("fall back to any valid mode\n");
-		}else{
+		} else {
 			pr_warn("ret = %d,fb_find_mode failed,with %s\n", ret, mdb_desc[i]);
 		}
 	}
@@ -926,7 +926,7 @@ static int lynxfb_set_fbinfo(struct fb_info* info, int index)
 	pr_info("fix->mmio_start = %lx\n", fix->mmio_start);
 	fix->mmio_len = share->vidreg_size;
 	pr_info("fix->mmio_len = %x\n", fix->mmio_len);
-	switch(var->bits_per_pixel) {
+	switch (var->bits_per_pixel) {
 	case 8:
 		fix->visual = FB_VISUAL_PSEUDOCOLOR;
 		break;
@@ -946,7 +946,7 @@ static int lynxfb_set_fbinfo(struct fb_info* info, int index)
 		 info->cmap.red, info->cmap.green, info->cmap.blue,
 		 info->cmap.transp);
 
-	if((ret = fb_alloc_cmap(&info->cmap, 256, 0)) < 0){
+	if ((ret = fb_alloc_cmap(&info->cmap, 256, 0)) < 0) {
 		pr_err("Could not allcate memory for cmap.\n");
 		goto exit;
 	}
@@ -989,68 +989,68 @@ static void sm750fb_setup(struct lynx_share * share, char * src)
 	/*defaultly turn g_hwcursor on for both view */
 	g_hwcursor = 3;
 
-	if(!src || !*src){
+	if (!src || !*src) {
 		pr_warn("no specific g_option.\n");
 		goto NO_PARAM;
 	}
 
-	while((opt = strsep(&src, ":")) != NULL && *opt != 0){
+	while ((opt = strsep(&src, ":")) != NULL && *opt != 0) {
 		pr_err("opt=%s\n", opt);
 		pr_err("src=%s\n", src);
 
-		if(!strncmp(opt, "swap", strlen("swap")))
+		if (!strncmp(opt, "swap", strlen("swap")))
 			swap = 1;
-		else if(!strncmp(opt, "nocrt", strlen("nocrt")))
+		else if (!strncmp(opt, "nocrt", strlen("nocrt")))
 			spec_share->state.nocrt = 1;
-		else if(!strncmp(opt, "36bit", strlen("36bit")))
+		else if (!strncmp(opt, "36bit", strlen("36bit")))
 			spec_share->state.pnltype = sm750_doubleTFT;
-		else if(!strncmp(opt, "18bit", strlen("18bit")))
+		else if (!strncmp(opt, "18bit", strlen("18bit")))
 			spec_share->state.pnltype = sm750_dualTFT;
-		else if(!strncmp(opt, "24bit", strlen("24bit")))
+		else if (!strncmp(opt, "24bit", strlen("24bit")))
 			spec_share->state.pnltype = sm750_24TFT;
 #ifdef CAP_EXPANSION
-		else if(!strncmp(opt, "exp:", strlen("exp:")))
+		else if (!strncmp(opt, "exp:", strlen("exp:")))
 			exp_res = opt + strlen("exp:");
 #endif
-		else if(!strncmp(opt, "nohwc0", strlen("nohwc0")))
+		else if (!strncmp(opt, "nohwc0", strlen("nohwc0")))
 			g_hwcursor &= ~0x1;
-		else if(!strncmp(opt, "nohwc1", strlen("nohwc1")))
+		else if (!strncmp(opt, "nohwc1", strlen("nohwc1")))
 			g_hwcursor &= ~0x2;
-		else if(!strncmp(opt, "nohwc", strlen("nohwc")))
+		else if (!strncmp(opt, "nohwc", strlen("nohwc")))
 			g_hwcursor = 0;
 		else {
-			if(!g_fbmode[0]){
+			if (!g_fbmode[0]) {
 				g_fbmode[0] = opt;
 				pr_info("find fbmode0 : %s\n", g_fbmode[0]);
-			}else if(!g_fbmode[1]){
+			} else if (!g_fbmode[1]) {
 				g_fbmode[1] = opt;
 				pr_info("find fbmode1 : %s\n", g_fbmode[1]);
-			}else{
+			} else {
 				pr_warn("How many view you wann set?\n");
 			}
 		}
 	}
 #ifdef CAP_EXPANSION
-	if(getExpRes(exp_res, &spec_share->state.xLCD, &spec_share->state.yLCD)) {
+	if (getExpRes(exp_res, &spec_share->state.xLCD, &spec_share->state.yLCD)) {
 		/* seems exp_res is not valid*/
 		spec_share->state.xLCD = spec_share->state.yLCD = 0;
 	}
 #endif
 
 NO_PARAM:
-	if(share->revid != SM750LE_REVISION_ID){
-		if(share->dual) {
-			if(swap)
+	if (share->revid != SM750LE_REVISION_ID) {
+		if (share->dual) {
+			if (swap)
 				spec_share->state.dataflow = sm750_dual_swap;
 			else
 				spec_share->state.dataflow = sm750_dual_normal;
-		}else{
-			if(swap)
+		} else {
+			if (swap)
 				spec_share->state.dataflow = sm750_simul_sec;
 			else
 				spec_share->state.dataflow = sm750_simul_pri;
 		}
-	}else{
+	} else {
 		/* SM750LE only have one crt channel */
 		spec_share->state.dataflow = sm750_simul_sec;
 		/* sm750le do not have complex attributes*/
@@ -1070,7 +1070,7 @@ static int lynxfb_pci_probe(struct pci_dev * pdev,
 
 
 	/* enable device */
-	if(pci_enable_device(pdev)){
+	if (pci_enable_device(pdev)) {
 		pr_err("can not enable device.\n");
 		goto err_enable;
 	}
@@ -1080,13 +1080,13 @@ static int lynxfb_pci_probe(struct pci_dev * pdev,
 	spec_offset = offsetof(struct sm750_share, share);
 
 	spec_share = kzalloc(sizeof(*spec_share), GFP_KERNEL);
-	if(!spec_share){
+	if (!spec_share) {
 		pr_err("Could not allocate memory for share.\n");
 		goto err_share;
 	}
 
 	/* setting share structure */
-	share = (struct lynx_share * )(&(spec_share->share));
+	share = (struct lynx_share *)(&(spec_share->share));
 	share->fbinfo[0] = share->fbinfo[1] = NULL;
 	share->devid = pdev->device;
 	share->revid = pdev->revision;
@@ -1102,7 +1102,7 @@ static int lynxfb_pci_probe(struct pci_dev * pdev,
 	share->dual = g_dualview;
 	spin_lock_init(&share->slock);
 
-	if(!share->accel_off){
+	if (!share->accel_off) {
 		/* hook deInit and 2d routines, notes that below hw_xxx
 		 * routine can work on most of lynx chips
 		 * if some chip need specific function,please hook it in smXXX_set_drv
@@ -1112,7 +1112,7 @@ static int lynxfb_pci_probe(struct pci_dev * pdev,
 		share->accel.de_copyarea = hw_copyarea;
 		share->accel.de_imageblit = hw_imageblit;
 		pr_info("enable 2d acceleration\n");
-	}else{
+	} else {
 		pr_info("disable 2d acceleration\n");
 	}
 
@@ -1120,22 +1120,22 @@ static int lynxfb_pci_probe(struct pci_dev * pdev,
 	sm750fb_setup(share, g_settings);
 
 	/* call chip specific mmap routine */
-	if(hw_sm750_map(share, pdev)){
+	if (hw_sm750_map(share, pdev)) {
 		pr_err("Memory map failed\n");
 		goto err_map;
 	}
 
 #ifdef CONFIG_MTRR
-	if(!share->mtrr_off){
+	if (!share->mtrr_off) {
 		pr_info("enable mtrr\n");
 		share->mtrr.vram = mtrr_add(share->vidmem_start,
 					    share->vidmem_size,
 					    MTRR_TYPE_WRCOMB, 1);
 
-		if(share->mtrr.vram < 0){
+		if (share->mtrr.vram < 0) {
 			/* don't block driver with the failure of MTRR */
 			pr_err("Unable to setup MTRR.\n");
-		}else{
+		} else {
 			share->mtrr.vram_added = 1;
 			pr_info("MTRR added succesfully\n");
 		}
@@ -1155,9 +1155,9 @@ static int lynxfb_pci_probe(struct pci_dev * pdev,
 	fbidx = 0;
 ALLOC_FB:
 	info[fbidx] = framebuffer_alloc(sizeof(struct lynxfb_par), &pdev->dev);
-	if(!info[fbidx]) {
+	if (!info[fbidx]) {
 		pr_err("Could not allocate framebuffer #%d.\n", fbidx);
-		if(fbidx == 0)
+		if (fbidx == 0)
 			goto err_info0_alloc;
 		else
 			goto err_info1_alloc;
@@ -1170,9 +1170,9 @@ static int lynxfb_pci_probe(struct pci_dev * pdev,
 		par->share = share;
 
 		/* set fb_info structure */
-		if(lynxfb_set_fbinfo(info[fbidx], fbidx)){
+		if (lynxfb_set_fbinfo(info[fbidx], fbidx)) {
 			pr_err("Failed to initial fb_info #%d.\n", fbidx);
-			if(fbidx == 0)
+			if (fbidx == 0)
 				goto err_info0_set;
 			else
 				goto err_info1_set;
@@ -1183,7 +1183,7 @@ static int lynxfb_pci_probe(struct pci_dev * pdev,
 		errno = register_framebuffer(info[fbidx]);
 		if (errno < 0) {
 			pr_err("Failed to register fb_info #%d. err %d\n", fbidx, errno);
-			if(fbidx == 0)
+			if (fbidx == 0)
 				goto err_register0;
 			else
 				goto err_register1;
@@ -1193,7 +1193,7 @@ static int lynxfb_pci_probe(struct pci_dev * pdev,
 
 	/* no dual view by far */
 	fbidx++;
-	if(share->dual && fbidx < 2)
+	if (share->dual && fbidx < 2)
 		goto ALLOC_FB;
 
 	return 0;
@@ -1225,9 +1225,9 @@ static void __exit lynxfb_pci_remove(struct pci_dev * pdev)
 	cnt = 2;
 	share = pci_get_drvdata(pdev);
 
-	while(cnt-- > 0){
+	while (cnt-- > 0) {
 		info = share->fbinfo[cnt];
-		if(!info)
+		if (!info)
 			continue;
 		par = info->par;
 
@@ -1239,7 +1239,7 @@ static void __exit lynxfb_pci_remove(struct pci_dev * pdev)
 		framebuffer_release(info);
 	}
 #ifdef CONFIG_MTRR
-	if(share->mtrr.vram_added)
+	if (share->mtrr.vram_added)
 		mtrr_del(share->mtrr.vram, share->vidmem_start, share->vidmem_size);
 #endif
 	//	pci_release_regions(pdev);
@@ -1258,7 +1258,7 @@ static int __init lynxfb_setup(char * options)
 	char * opt,*tmp;
 
 
-	if(!options || !*options){
+	if (!options || !*options) {
 		pr_warn("no options.\n");
 		return 0;
 	}
@@ -1267,7 +1267,7 @@ static int __init lynxfb_setup(char * options)
 
 	len = strlen(options) + 1;
 	g_settings = kzalloc(len, GFP_KERNEL);
-	if(!g_settings)
+	if (!g_settings)
 		return -ENOMEM;
 
 	tmp = g_settings;
@@ -1280,20 +1280,20 @@ static int __init lynxfb_setup(char * options)
 		strsep() updates @options to pointer after the first found token
 		it also returns the pointer ahead the token.
 		*/
-	while((opt = strsep(&options, ":"))!=NULL) {
+	while ((opt = strsep(&options, ":"))!=NULL) {
 		/* options that mean for any lynx chips are configured here */
-		if(!strncmp(opt, "noaccel", strlen("noaccel")))
+		if (!strncmp(opt, "noaccel", strlen("noaccel")))
 			g_noaccel = 1;
 #ifdef CONFIG_MTRR
-		else if(!strncmp(opt, "nomtrr", strlen("nomtrr")))
+		else if (!strncmp(opt, "nomtrr", strlen("nomtrr")))
 			g_nomtrr = 1;
 #endif
-		else if(!strncmp(opt, "dual", strlen("dual")))
+		else if (!strncmp(opt, "dual", strlen("dual")))
 			g_dualview = 1;
 		else {
 			strcat(tmp, opt);
 			tmp += strlen(opt);
-			if(options != NULL)
+			if (options != NULL)
 				*tmp++ = ':';
 			else
 				*tmp++ = 0;
@@ -1332,7 +1332,7 @@ static int __init lynxfb_init(void)
 #ifdef MODULE
 	option = g_option;
 #else
-	if(fb_get_options("sm750fb", &option))
+	if (fb_get_options("sm750fb", &option))
 		return -ENODEV;
 #endif
 

commit 70407df77665c0e6bb6f6dea5e1561670fbadf18
Author: Michel von Czettritz <michel.von.czettritz@gmail.com>
Date:   Thu Mar 26 23:25:08 2015 +0100

    staging: sm750: move '{' to previous line
    
    Fix checkpatch.pl error:
    "ERROR: that open brace { should be on the previous line"
    
    Signed-off-by: Michel von Czettritz <michel.von.czettritz@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index e98eefcf3309..bc2986d9fee6 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -154,8 +154,7 @@ static int lynxfb_ops_cursor(struct fb_info* info, struct fb_cursor* fbcursor)
 	}
 
 
-	if(fbcursor->set & (FB_CUR_SETSHAPE | FB_CUR_SETIMAGE))
-	{
+	if(fbcursor->set & (FB_CUR_SETSHAPE | FB_CUR_SETIMAGE)) {
 		cursor->setData(cursor,
 				fbcursor->rop,
 				fbcursor->image.data,
@@ -255,13 +254,10 @@ static void lynxfb_ops_imageblit(struct fb_info*info, const struct fb_image* ima
 
 	if(image->depth == 1){
 		if(info->fix.visual == FB_VISUAL_TRUECOLOR ||
-		   info->fix.visual == FB_VISUAL_DIRECTCOLOR)
-		{
+				info->fix.visual == FB_VISUAL_DIRECTCOLOR) {
 			fgcol = ((u32*)info->pseudo_palette)[image->fg_color];
 			bgcol = ((u32*)info->pseudo_palette)[image->bg_color];
-		}
-		else
-		{
+		} else {
 			fgcol = image->fg_color;
 			bgcol = image->bg_color;
 		}
@@ -630,8 +626,7 @@ static int lynxfb_ops_setcolreg(unsigned regno, unsigned red,
 	if(info->var.grayscale)
 		red = green = blue = (red * 77 + green * 151 + blue * 28) >> 8;
 
-	if(var->bits_per_pixel == 8 && info->fix.visual == FB_VISUAL_PSEUDOCOLOR)
-	{
+	if(var->bits_per_pixel == 8 && info->fix.visual == FB_VISUAL_PSEUDOCOLOR) {
 		red >>= 8;
 		green >>= 8;
 		blue >>= 8;
@@ -640,13 +635,11 @@ static int lynxfb_ops_setcolreg(unsigned regno, unsigned red,
 	}
 
 
-	if(info->fix.visual == FB_VISUAL_TRUECOLOR && regno < 256 )
-	{
+	if(info->fix.visual == FB_VISUAL_TRUECOLOR && regno < 256 ) {
 		u32 val;
 		if(var->bits_per_pixel == 16 ||
 		   var->bits_per_pixel == 32 ||
-		   var->bits_per_pixel == 24)
-		{
+		   var->bits_per_pixel == 24) {
 			val = chan_to_field(red, &var->red);
 			val |= chan_to_field(green, &var->green);
 			val |= chan_to_field(blue, &var->blue);
@@ -709,8 +702,7 @@ static int sm750fb_set_drv(struct lynxfb_par * par)
 	output->clear = hw_sm750_output_clear;
 	/* chip specific phase */
 	share->accel.de_wait = (share->revid == SM750LE_REVISION_ID)?hw_sm750le_deWait: hw_sm750_deWait;
-	switch (spec_share->state.dataflow)
-	{
+	switch (spec_share->state.dataflow) {
 	case sm750_simul_pri:
 		output->paths = sm750_pnc;
 		crtc->channel = sm750_primary;
@@ -794,8 +786,7 @@ static int lynxfb_set_fbinfo(struct fb_info* info, int index)
 	};
 
 
-	static const char * fixId[2]=
-	{
+	static const char * fixId[2] = {
 		"sm750_fb1", "sm750_fb2",
 	};
 
@@ -935,8 +926,7 @@ static int lynxfb_set_fbinfo(struct fb_info* info, int index)
 	pr_info("fix->mmio_start = %lx\n", fix->mmio_start);
 	fix->mmio_len = share->vidreg_size;
 	pr_info("fix->mmio_len = %x\n", fix->mmio_len);
-	switch(var->bits_per_pixel)
-	{
+	switch(var->bits_per_pixel) {
 	case 8:
 		fix->visual = FB_VISUAL_PSEUDOCOLOR;
 		break;
@@ -1028,8 +1018,7 @@ static void sm750fb_setup(struct lynx_share * share, char * src)
 			g_hwcursor &= ~0x2;
 		else if(!strncmp(opt, "nohwc", strlen("nohwc")))
 			g_hwcursor = 0;
-		else
-		{
+		else {
 			if(!g_fbmode[0]){
 				g_fbmode[0] = opt;
 				pr_info("find fbmode0 : %s\n", g_fbmode[0]);
@@ -1042,8 +1031,7 @@ static void sm750fb_setup(struct lynx_share * share, char * src)
 		}
 	}
 #ifdef CAP_EXPANSION
-	if(getExpRes(exp_res, &spec_share->state.xLCD, &spec_share->state.yLCD))
-	{
+	if(getExpRes(exp_res, &spec_share->state.xLCD, &spec_share->state.yLCD)) {
 		/* seems exp_res is not valid*/
 		spec_share->state.xLCD = spec_share->state.yLCD = 0;
 	}
@@ -1051,8 +1039,7 @@ static void sm750fb_setup(struct lynx_share * share, char * src)
 
 NO_PARAM:
 	if(share->revid != SM750LE_REVISION_ID){
-		if(share->dual)
-		{
+		if(share->dual) {
 			if(swap)
 				spec_share->state.dataflow = sm750_dual_swap;
 			else
@@ -1168,16 +1155,13 @@ static int lynxfb_pci_probe(struct pci_dev * pdev,
 	fbidx = 0;
 ALLOC_FB:
 	info[fbidx] = framebuffer_alloc(sizeof(struct lynxfb_par), &pdev->dev);
-	if(!info[fbidx])
-	{
+	if(!info[fbidx]) {
 		pr_err("Could not allocate framebuffer #%d.\n", fbidx);
 		if(fbidx == 0)
 			goto err_info0_alloc;
 		else
 			goto err_info1_alloc;
-	}
-	else
-	{
+	} else {
 		struct lynxfb_par * par;
 		int errno;
 		pr_info("framebuffer #%d alloc okay\n", fbidx);
@@ -1296,8 +1280,7 @@ static int __init lynxfb_setup(char * options)
 		strsep() updates @options to pointer after the first found token
 		it also returns the pointer ahead the token.
 		*/
-	while((opt = strsep(&options, ":"))!=NULL)
-	{
+	while((opt = strsep(&options, ":"))!=NULL) {
 		/* options that mean for any lynx chips are configured here */
 		if(!strncmp(opt, "noaccel", strlen("noaccel")))
 			g_noaccel = 1;
@@ -1307,8 +1290,7 @@ static int __init lynxfb_setup(char * options)
 #endif
 		else if(!strncmp(opt, "dual", strlen("dual")))
 			g_dualview = 1;
-		else
-		{
+		else {
 			strcat(tmp, opt);
 			tmp += strlen(opt);
 			if(options != NULL)

commit 45e3b3da820ae612268294caac44776beb5ab885
Author: Michel von Czettritz <michel.von.czettritz@gmail.com>
Date:   Thu Mar 26 23:24:53 2015 +0100

    staging: sm750: add missing spaces after ','
    
    Fixes checkpatch.pl error:
    "ERROR: space required after that ',' (ctx:VxV)"
    
    Signed-off-by: Michel von Czettritz <michel.von.czettritz@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 87b50fce5dd9..e98eefcf3309 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -50,26 +50,26 @@ static int g_noaccel;
 #ifdef CONFIG_MTRR
 static int g_nomtrr;
 #endif
-static const char * g_fbmode[] = {NULL,NULL};
+static const char * g_fbmode[] = {NULL, NULL};
 static const char * g_def_fbmode = "800x600-16@60";
 static char * g_settings = NULL;
 static int g_dualview;
 static char * g_option = NULL;
 
 static const struct fb_videomode lynx750_ext[] = {
-	/*	1024x600-60 VESA	[1.71:1]	*/
+	/*  	1024x600-60 VESA 	[1.71:1]	*/
 	{NULL,  60, 1024, 600, 20423, 144,  40, 18, 1, 104, 3,
 	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
 
-	/*	1024x600-70 VESA */
+	/* 	1024x600-70 VESA */
 	{NULL,  70, 1024, 600, 17211, 152,  48, 21, 1, 104, 3,
 	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
 
-	/*	1024x600-75 VESA */
+	/*  	1024x600-75 VESA */
 	{NULL,  75, 1024, 600, 15822, 160,  56, 23, 1, 104, 3,
 	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
 
-	/*	1024x600-85 VESA */
+	/*  	1024x600-85 VESA */
 	{NULL,  85, 1024, 600, 13730, 168,  56, 26, 1, 112, 3,
 	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
 
@@ -79,13 +79,13 @@ static const struct fb_videomode lynx750_ext[] = {
 
 	/*	1280x720		[1.78:1]	*/
 	{NULL, 60,  1280,  720,  13426, 162, 86, 22, 1,  136, 3,
-	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT,FB_VMODE_NONINTERLACED},
+	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
 
-	/*	1280x768@60 */
-	{NULL,60,1280,768,12579,192,64,20,3,128,7,
+	/* 1280x768@60 */
+	{NULL, 60, 1280, 768, 12579, 192, 64, 20, 3, 128, 7,
 	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT,FB_VMODE_NONINTERLACED},
 
-	{NULL,60,1360,768,11804,208,64,23,1,144,3,
+	{NULL, 60, 1360, 768, 11804, 208, 64, 23, 1, 144, 3,
 	 FB_SYNC_HOR_HIGH_ACT|FB_VMODE_NONINTERLACED},
 
 	/*	1360 x 768	[1.77083:1]	*/
@@ -96,9 +96,9 @@ static const struct fb_videomode lynx750_ext[] = {
 	{NULL, 60,  1368,  768,  11647, 216, 72, 23, 1,  144, 3,
 	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
 
-	/*	1440 x 900		[16:10]	*/
+	/* 	1440 x 900		[16:10]	*/
 	{NULL, 60, 1440, 900, 9392, 232, 80, 28, 1, 152, 3,
-	 FB_SYNC_VERT_HIGH_ACT,FB_VMODE_NONINTERLACED},
+	 FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
 
 	/*	1440x960		[15:10]	*/
 	{NULL, 60, 1440, 960, 8733, 240, 88, 30, 1, 152, 3,
@@ -106,14 +106,14 @@ static const struct fb_videomode lynx750_ext[] = {
 
 	/*	1920x1080	[16:9]	*/
 	{NULL, 60, 1920, 1080, 6734, 148, 88, 41, 1, 44, 3,
-	 FB_SYNC_VERT_HIGH_ACT,FB_VMODE_NONINTERLACED},
+	 FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
 };
 
 
 
 
 /* no hardware cursor supported under version 2.6.10, kernel bug */
-static int lynxfb_ops_cursor(struct fb_info* info,struct fb_cursor* fbcursor)
+static int lynxfb_ops_cursor(struct fb_info* info, struct fb_cursor* fbcursor)
 {
 	struct lynxfb_par * par;
 	struct lynxfb_crtc * crtc;
@@ -131,17 +131,17 @@ static int lynxfb_ops_cursor(struct fb_info* info,struct fb_cursor* fbcursor)
 
 	cursor->disable(cursor);
 	if(fbcursor->set & FB_CUR_SETSIZE){
-		cursor->setSize(cursor,fbcursor->image.width,fbcursor->image.height);
+		cursor->setSize(cursor, fbcursor->image.width, fbcursor->image.height);
 	}
 
 	if(fbcursor->set & FB_CUR_SETPOS){
-		cursor->setPos(cursor,fbcursor->image.dx - info->var.xoffset,
+		cursor->setPos(cursor, fbcursor->image.dx - info->var.xoffset,
 			       fbcursor->image.dy - info->var.yoffset);
 	}
 
 	if(fbcursor->set & FB_CUR_SETCMAP){
 		/* get the 16bit color of kernel means */
-		u16 fg,bg;
+		u16 fg, bg;
 		fg = ((info->cmap.red[fbcursor->image.fg_color] & 0xf800))|
 		      ((info->cmap.green[fbcursor->image.fg_color] & 0xfc00) >> 5)|
 		      ((info->cmap.blue[fbcursor->image.fg_color] & 0xf800) >> 11);
@@ -150,7 +150,7 @@ static int lynxfb_ops_cursor(struct fb_info* info,struct fb_cursor* fbcursor)
 		      ((info->cmap.green[fbcursor->image.bg_color] & 0xfc00) >> 5)|
 		      ((info->cmap.blue[fbcursor->image.bg_color] & 0xf800) >> 11);
 
-		cursor->setColor(cursor,fg,bg);
+		cursor->setColor(cursor, fg, bg);
 	}
 
 
@@ -169,11 +169,11 @@ static int lynxfb_ops_cursor(struct fb_info* info,struct fb_cursor* fbcursor)
 	return 0;
 }
 
-static void lynxfb_ops_fillrect(struct fb_info* info,const struct fb_fillrect* region)
+static void lynxfb_ops_fillrect(struct fb_info* info, const struct fb_fillrect* region)
 {
 	struct lynxfb_par * par;
 	struct lynx_share * share;
-	unsigned int base,pitch,Bpp,rop;
+	unsigned int base, pitch, Bpp, rop;
 	u32 color;
 
 	if(info->state != FBINFO_STATE_RUNNING){
@@ -200,19 +200,19 @@ static void lynxfb_ops_fillrect(struct fb_info* info,const struct fb_fillrect* r
 		spin_lock(&share->slock);
 
 	share->accel.de_fillrect(&share->accel,
-				 base,pitch,Bpp,
-				 region->dx,region->dy,
-				 region->width,region->height,
-				 color,rop);
+				 base, pitch, Bpp,
+				 region->dx, region->dy,
+				 region->width, region->height,
+				 color, rop);
 	if (share->dual)
 		spin_unlock(&share->slock);
 }
 
-static void lynxfb_ops_copyarea(struct fb_info * info,const struct fb_copyarea * region)
+static void lynxfb_ops_copyarea(struct fb_info * info, const struct fb_copyarea * region)
 {
 	struct lynxfb_par * par;
 	struct lynx_share * share;
-	unsigned int base,pitch,Bpp;
+	unsigned int base, pitch, Bpp;
 
 	par = info->par;
 	share = par->share;
@@ -231,17 +231,17 @@ static void lynxfb_ops_copyarea(struct fb_info * info,const struct fb_copyarea *
 		spin_lock(&share->slock);
 
 	share->accel.de_copyarea(&share->accel,
-				 base,pitch,region->sx,region->sy,
-				 base,pitch,Bpp,region->dx,region->dy,
-				 region->width,region->height,HW_ROP2_COPY);
+				 base, pitch, region->sx, region->sy,
+				 base, pitch, Bpp, region->dx, region->dy,
+				 region->width, region->height, HW_ROP2_COPY);
 	if (share->dual)
 		spin_unlock(&share->slock);
 }
 
-static void lynxfb_ops_imageblit(struct fb_info*info,const struct fb_image* image)
+static void lynxfb_ops_imageblit(struct fb_info*info, const struct fb_image* image)
 {
-	unsigned int base,pitch,Bpp;
-	unsigned int fgcol,bgcol;
+	unsigned int base, pitch, Bpp;
+	unsigned int fgcol, bgcol;
 	struct lynxfb_par * par;
 	struct lynx_share * share;
 
@@ -277,11 +277,11 @@ static void lynxfb_ops_imageblit(struct fb_info*info,const struct fb_image* imag
 		spin_lock(&share->slock);
 
 	share->accel.de_imageblit(&share->accel,
-				  image->data,image->width>>3,0,
-				  base,pitch,Bpp,
-				  image->dx,image->dy,
-				  image->width,image->height,
-				  fgcol,bgcol,HW_ROP2_COPY);
+				  image->data, image->width>>3, 0,
+				  base, pitch, Bpp,
+				  image->dx, image->dy,
+				  image->width, image->height,
+				  fgcol, bgcol, HW_ROP2_COPY);
 	if (share->dual)
 		spin_unlock(&share->slock);
 }
@@ -329,9 +329,9 @@ static int lynxfb_ops_set_par(struct fb_info * info)
 
 	/* fix structur is not so FIX ... */
 	line_length = var->xres_virtual * var->bits_per_pixel / 8;
-	line_length = PADDING(crtc->line_pad,line_length);
+	line_length = PADDING(crtc->line_pad, line_length);
 	fix->line_length = line_length;
-	pr_err("fix->line_length = %d\n",fix->line_length);
+	pr_err("fix->line_length = %d\n", fix->line_length);
 
 	/* var->red,green,blue,transp are need to be set by driver
 	 * and these data should be set before setcolreg routine
@@ -381,13 +381,13 @@ static int lynxfb_ops_set_par(struct fb_info * info)
 		pr_err("pixel bpp format not satisfied\n.");
 		return ret;
 	}
-	ret = crtc->proc_setMode(crtc,var,fix);
+	ret = crtc->proc_setMode(crtc, var, fix);
 	if(!ret)
-		ret = output->proc_setMode(output,var,fix);
+		ret = output->proc_setMode(output, var, fix);
 	return ret;
 }
 
-static inline unsigned int chan_to_field(unsigned int chan,struct fb_bitfield * bf)
+static inline unsigned int chan_to_field(unsigned int chan, struct fb_bitfield * bf)
 {
 	chan &= 0xffff;
 	chan >>= 16 - bf->length;
@@ -465,7 +465,7 @@ static int lynxfb_resume(struct pci_dev* pdev)
 	console_lock();
 
 	if((ret = pci_set_power_state(pdev, PCI_D0)) != 0){
-		pr_err("error:%d occured in pci_set_power_state\n",ret);
+		pr_err("error:%d occured in pci_set_power_state\n", ret);
 		return ret;
 	}
 
@@ -473,7 +473,7 @@ static int lynxfb_resume(struct pci_dev* pdev)
 	if(pdev->dev.power.power_state.event != PM_EVENT_FREEZE){
 		pci_restore_state(pdev);
 		if ((ret = pci_enable_device(pdev)) != 0){
-			pr_err("error:%d occured in pci_enable_device\n",ret);
+			pr_err("error:%d occured in pci_enable_device\n", ret);
 			return ret;
 		}
 		pci_set_master(pdev);
@@ -481,7 +481,7 @@ static int lynxfb_resume(struct pci_dev* pdev)
 	if(share->resume)
 		(*share->resume)(share);
 
-	hw_sm750_inithw(share,pdev);
+	hw_sm750_inithw(share, pdev);
 
 
 	info = share->fbinfo[0];
@@ -514,7 +514,7 @@ static int lynxfb_resume(struct pci_dev* pdev)
 }
 #endif
 
-static int lynxfb_ops_check_var(struct fb_var_screeninfo* var,struct fb_info* info)
+static int lynxfb_ops_check_var(struct fb_var_screeninfo* var, struct fb_info* info)
 {
 	struct lynxfb_par * par;
 	struct lynxfb_crtc * crtc;
@@ -543,7 +543,7 @@ static int lynxfb_ops_check_var(struct fb_var_screeninfo* var,struct fb_info* in
 	case 32:
 		break;
 	default:
-		pr_err("bpp %d not supported\n",var->bits_per_pixel);
+		pr_err("bpp %d not supported\n", var->bits_per_pixel);
 		ret = -EINVAL;
 		goto exit;
 	}
@@ -592,24 +592,24 @@ static int lynxfb_ops_check_var(struct fb_var_screeninfo* var,struct fb_info* in
 	request = var->xres_virtual * (var->bits_per_pixel >> 3);
 	/* defaulty crtc->channel go with par->index */
 
-	request = PADDING(crtc->line_pad,request);
+	request = PADDING(crtc->line_pad, request);
 	request = request * var->yres_virtual;
 	if(crtc->vidmem_size < request){
 		pr_err("not enough video memory for mode\n");
 		return -ENOMEM;
 	}
 
-	ret = output->proc_checkMode(output,var);
+	ret = output->proc_checkMode(output, var);
 	if(!ret)
-		ret = crtc->proc_checkMode(crtc,var);
+		ret = crtc->proc_checkMode(crtc, var);
 exit:
 	return ret;
 }
 
 
-static int lynxfb_ops_setcolreg(unsigned regno,unsigned red,
-				unsigned green,unsigned blue,
-				unsigned transp,struct fb_info * info)
+static int lynxfb_ops_setcolreg(unsigned regno, unsigned red,
+				unsigned green, unsigned blue,
+				unsigned transp, struct fb_info * info)
 {
 	struct lynxfb_par * par;
 	struct lynxfb_crtc * crtc;
@@ -623,7 +623,7 @@ static int lynxfb_ops_setcolreg(unsigned regno,unsigned red,
 
 	//pr_debug("regno=%d,red=%d,green=%d,blue=%d\n",regno,red,green,blue);
 	if(regno > 256){
-		pr_err("regno = %d\n",regno);
+		pr_err("regno = %d\n", regno);
 		return -EINVAL;
 	}
 
@@ -635,7 +635,7 @@ static int lynxfb_ops_setcolreg(unsigned regno,unsigned red,
 		red >>= 8;
 		green >>= 8;
 		blue >>= 8;
-		ret = crtc->proc_setColReg(crtc,regno,red,green,blue);
+		ret = crtc->proc_setColReg(crtc, regno, red, green, blue);
 		goto exit;
 	}
 
@@ -647,9 +647,9 @@ static int lynxfb_ops_setcolreg(unsigned regno,unsigned red,
 		   var->bits_per_pixel == 32 ||
 		   var->bits_per_pixel == 24)
 		{
-			val = chan_to_field(red,&var->red);
-			val |= chan_to_field(green,&var->green);
-			val |= chan_to_field(blue,&var->blue);
+			val = chan_to_field(red, &var->red);
+			val |= chan_to_field(green, &var->green);
+			val |= chan_to_field(blue, &var->blue);
 			par->pseudo_palette[regno] = val;
 			goto exit;
 		}
@@ -661,15 +661,15 @@ static int lynxfb_ops_setcolreg(unsigned regno,unsigned red,
 	return ret;
 }
 
-static int lynxfb_ops_blank(int blank,struct fb_info* info)
+static int lynxfb_ops_blank(int blank, struct fb_info* info)
 {
 	struct lynxfb_par * par;
 	struct lynxfb_output * output;
 
-	pr_debug("blank = %d.\n",blank);
+	pr_debug("blank = %d.\n", blank);
 	par = info->par;
 	output = &par->output;
-	return output->proc_setBLANK(output,blank);
+	return output->proc_setBLANK(output, blank);
 }
 
 static int sm750fb_set_drv(struct lynxfb_par * par)
@@ -683,7 +683,7 @@ static int sm750fb_set_drv(struct lynxfb_par * par)
 	ret = 0;
 
 	share = par->share;
-	spec_share = container_of(share,struct sm750_share,share);
+	spec_share = container_of(share, struct sm750_share, share);
 	output = &par->output;
 	crtc = &par->crtc;
 
@@ -773,7 +773,7 @@ static struct fb_ops lynxfb_ops={
 };
 
 
-static int lynxfb_set_fbinfo(struct fb_info* info,int index)
+static int lynxfb_set_fbinfo(struct fb_info* info, int index)
 {
 	int i;
 	struct lynxfb_par * par;
@@ -784,9 +784,9 @@ static int lynxfb_set_fbinfo(struct fb_info* info,int index)
 	struct fb_fix_screeninfo * fix;
 
 	const struct fb_videomode * pdb[] = {
-		lynx750_ext, NULL,vesa_modes,
+		lynx750_ext, NULL, vesa_modes,
 	};
-	int cdb[] = {ARRAY_SIZE(lynx750_ext),0,VESA_MODEDB_SIZE};
+	int cdb[] = {ARRAY_SIZE(lynx750_ext), 0, VESA_MODEDB_SIZE};
 	static const char * mdb_desc[] ={
 		"driver prepared modes",
 		"kernel prepared default modedb",
@@ -796,10 +796,10 @@ static int lynxfb_set_fbinfo(struct fb_info* info,int index)
 
 	static const char * fixId[2]=
 	{
-		"sm750_fb1","sm750_fb2",
+		"sm750_fb1", "sm750_fb2",
 	};
 
-	int ret,line_length;
+	int ret, line_length;
 
 	ret = 0;
 	par = (struct lynxfb_par *)info->par;
@@ -821,7 +821,7 @@ static int lynxfb_set_fbinfo(struct fb_info* info,int index)
 	crtc->cursor.offset = crtc->oScreen + crtc->vidmem_size - 1024;
 	crtc->cursor.mmio = share->pvReg + 0x800f0 + (int)crtc->channel * 0x140;
 
-	pr_info("crtc->cursor.mmio = %p\n",crtc->cursor.mmio);
+	pr_info("crtc->cursor.mmio = %p\n", crtc->cursor.mmio);
 	crtc->cursor.maxH = crtc->cursor.maxW = 64;
 	crtc->cursor.size = crtc->cursor.maxH*crtc->cursor.maxW*2/8;
 	crtc->cursor.disable = hw_cursor_disable;
@@ -859,8 +859,8 @@ static int lynxfb_set_fbinfo(struct fb_info* info,int index)
 
 	for(i=0;i<3;i++){
 
-		ret = fb_find_mode(var,info,g_fbmode[index],
-				   pdb[i],cdb[i],NULL,8);
+		ret = fb_find_mode(var, info, g_fbmode[index],
+				   pdb[i], cdb[i], NULL, 8);
 
 		if(ret == 1){
 			pr_info("success! use specified mode:%s in %s\n",
@@ -878,7 +878,7 @@ static int lynxfb_set_fbinfo(struct fb_info* info,int index)
 		}else if(ret == 4){
 			pr_warn("fall back to any valid mode\n");
 		}else{
-			pr_warn("ret = %d,fb_find_mode failed,with %s\n",ret,mdb_desc[i]);
+			pr_warn("ret = %d,fb_find_mode failed,with %s\n", ret, mdb_desc[i]);
 		}
 	}
 
@@ -892,8 +892,8 @@ static int lynxfb_set_fbinfo(struct fb_info* info,int index)
 			xoffset=%d\n\
 			yoffset=%d\n\
 			bits_per_pixel=%d\n \
-			...\n",var->xres,var->yres,var->xres_virtual,var->yres_virtual,
-			var->xoffset,var->yoffset,var->bits_per_pixel);
+			...\n", var->xres, var->yres, var->xres_virtual, var->yres_virtual,
+			var->xoffset, var->yoffset, var->bits_per_pixel);
 
 	/* set par */
 	par->info = info;
@@ -904,7 +904,7 @@ static int lynxfb_set_fbinfo(struct fb_info* info,int index)
 
 	info->pseudo_palette = &par->pseudo_palette[0];
 	info->screen_base = crtc->vScreen;
-	pr_debug("screen_base vaddr = %p\n",info->screen_base);
+	pr_debug("screen_base vaddr = %p\n", info->screen_base);
 	info->screen_size = line_length * var->yres_virtual;
 	info->flags = FBINFO_FLAG_DEFAULT|0;
 
@@ -916,11 +916,11 @@ static int lynxfb_set_fbinfo(struct fb_info* info,int index)
 	fix->ywrapstep = crtc->ywrapstep;
 	fix->accel = FB_ACCEL_SMI;
 
-	strlcpy(fix->id,fixId[index],sizeof(fix->id));
+	strlcpy(fix->id, fixId[index], sizeof(fix->id));
 
 
 	fix->smem_start = crtc->oScreen + share->vidmem_start;
-	pr_info("fix->smem_start = %lx\n",fix->smem_start);
+	pr_info("fix->smem_start = %lx\n", fix->smem_start);
 	/* according to mmap experiment from user space application,
 	 * fix->mmio_len should not larger than virtual size
 	 * (xres_virtual x yres_virtual x ByPP)
@@ -928,13 +928,13 @@ static int lynxfb_set_fbinfo(struct fb_info* info,int index)
 	 * data into the bound over virtual size
 	 * */
 	fix->smem_len = crtc->vidmem_size;
-	pr_info("fix->smem_len = %x\n",fix->smem_len);
+	pr_info("fix->smem_len = %x\n", fix->smem_len);
 	info->screen_size = fix->smem_len;
 	fix->line_length = line_length;
 	fix->mmio_start = share->vidreg_start;
-	pr_info("fix->mmio_start = %lx\n",fix->mmio_start);
+	pr_info("fix->mmio_start = %lx\n", fix->mmio_start);
 	fix->mmio_len = share->vidreg_size;
-	pr_info("fix->mmio_len = %x\n",fix->mmio_len);
+	pr_info("fix->mmio_len = %x\n", fix->mmio_len);
 	switch(var->bits_per_pixel)
 	{
 	case 8:
@@ -952,28 +952,28 @@ static int lynxfb_set_fbinfo(struct fb_info* info,int index)
 	var->vmode = FB_VMODE_NONINTERLACED;
 
 	pr_debug("#1 show info->cmap : \nstart=%d,len=%d,red=%p,green=%p,blue=%p,transp=%p\n",
-		 info->cmap.start,info->cmap.len,
-		 info->cmap.red,info->cmap.green,info->cmap.blue,
+		 info->cmap.start, info->cmap.len,
+		 info->cmap.red, info->cmap.green, info->cmap.blue,
 		 info->cmap.transp);
 
-	if((ret = fb_alloc_cmap(&info->cmap,256,0)) < 0){
+	if((ret = fb_alloc_cmap(&info->cmap, 256, 0)) < 0){
 		pr_err("Could not allcate memory for cmap.\n");
 		goto exit;
 	}
 
 	pr_debug("#2 show info->cmap : \nstart=%d,len=%d,red=%p,green=%p,blue=%p,transp=%p\n",
-		 info->cmap.start,info->cmap.len,
-		 info->cmap.red,info->cmap.green,info->cmap.blue,
+		 info->cmap.start, info->cmap.len,
+		 info->cmap.red, info->cmap.green, info->cmap.blue,
 		 info->cmap.transp);
 
 exit:
-	lynxfb_ops_check_var(var,info);
+	lynxfb_ops_check_var(var, info);
 	//    lynxfb_ops_set_par(info);
 	return ret;
 }
 
 /*	chip specific g_option configuration routine */
-static void sm750fb_setup(struct lynx_share * share,char * src)
+static void sm750fb_setup(struct lynx_share * share, char * src)
 {
 	struct sm750_share * spec_share;
 	char * opt;
@@ -983,7 +983,7 @@ static void sm750fb_setup(struct lynx_share * share,char * src)
 	int swap;
 
 
-	spec_share = container_of(share,struct sm750_share,share);
+	spec_share = container_of(share, struct sm750_share, share);
 #ifdef CAP_EXPENSIION
 	exp_res = NULL;
 #endif
@@ -1004,45 +1004,45 @@ static void sm750fb_setup(struct lynx_share * share,char * src)
 		goto NO_PARAM;
 	}
 
-	while((opt = strsep(&src,":")) != NULL && *opt != 0){
-		pr_err("opt=%s\n",opt);
-		pr_err("src=%s\n",src);
+	while((opt = strsep(&src, ":")) != NULL && *opt != 0){
+		pr_err("opt=%s\n", opt);
+		pr_err("src=%s\n", src);
 
-		if(!strncmp(opt,"swap",strlen("swap")))
+		if(!strncmp(opt, "swap", strlen("swap")))
 			swap = 1;
-		else if(!strncmp(opt,"nocrt",strlen("nocrt")))
+		else if(!strncmp(opt, "nocrt", strlen("nocrt")))
 			spec_share->state.nocrt = 1;
-		else if(!strncmp(opt,"36bit",strlen("36bit")))
+		else if(!strncmp(opt, "36bit", strlen("36bit")))
 			spec_share->state.pnltype = sm750_doubleTFT;
-		else if(!strncmp(opt,"18bit",strlen("18bit")))
+		else if(!strncmp(opt, "18bit", strlen("18bit")))
 			spec_share->state.pnltype = sm750_dualTFT;
-		else if(!strncmp(opt,"24bit",strlen("24bit")))
+		else if(!strncmp(opt, "24bit", strlen("24bit")))
 			spec_share->state.pnltype = sm750_24TFT;
 #ifdef CAP_EXPANSION
-		else if(!strncmp(opt,"exp:",strlen("exp:")))
+		else if(!strncmp(opt, "exp:", strlen("exp:")))
 			exp_res = opt + strlen("exp:");
 #endif
-		else if(!strncmp(opt,"nohwc0",strlen("nohwc0")))
+		else if(!strncmp(opt, "nohwc0", strlen("nohwc0")))
 			g_hwcursor &= ~0x1;
-		else if(!strncmp(opt,"nohwc1",strlen("nohwc1")))
+		else if(!strncmp(opt, "nohwc1", strlen("nohwc1")))
 			g_hwcursor &= ~0x2;
-		else if(!strncmp(opt,"nohwc",strlen("nohwc")))
+		else if(!strncmp(opt, "nohwc", strlen("nohwc")))
 			g_hwcursor = 0;
 		else
 		{
 			if(!g_fbmode[0]){
 				g_fbmode[0] = opt;
-				pr_info("find fbmode0 : %s\n",g_fbmode[0]);
+				pr_info("find fbmode0 : %s\n", g_fbmode[0]);
 			}else if(!g_fbmode[1]){
 				g_fbmode[1] = opt;
-				pr_info("find fbmode1 : %s\n",g_fbmode[1]);
+				pr_info("find fbmode1 : %s\n", g_fbmode[1]);
 			}else{
 				pr_warn("How many view you wann set?\n");
 			}
 		}
 	}
 #ifdef CAP_EXPANSION
-	if(getExpRes(exp_res,&spec_share->state.xLCD,&spec_share->state.yLCD))
+	if(getExpRes(exp_res, &spec_share->state.xLCD, &spec_share->state.yLCD))
 	{
 		/* seems exp_res is not valid*/
 		spec_share->state.xLCD = spec_share->state.yLCD = 0;
@@ -1074,7 +1074,7 @@ static void sm750fb_setup(struct lynx_share * share,char * src)
 static int lynxfb_pci_probe(struct pci_dev * pdev,
 			    const struct pci_device_id * ent)
 {
-	struct fb_info * info[] = {NULL,NULL};
+	struct fb_info * info[] = {NULL, NULL};
 	struct lynx_share * share = NULL;
 
 	struct sm750_share *spec_share = NULL;
@@ -1090,9 +1090,9 @@ static int lynxfb_pci_probe(struct pci_dev * pdev,
 
 	/* though offset of share in sm750_share is 0,
 	 * we use this marcro as the same */
-	spec_offset = offsetof(struct sm750_share,share);
+	spec_offset = offsetof(struct sm750_share, share);
 
-	spec_share = kzalloc(sizeof(*spec_share),GFP_KERNEL);
+	spec_share = kzalloc(sizeof(*spec_share), GFP_KERNEL);
 	if(!spec_share){
 		pr_err("Could not allocate memory for share.\n");
 		goto err_share;
@@ -1104,7 +1104,7 @@ static int lynxfb_pci_probe(struct pci_dev * pdev,
 	share->devid = pdev->device;
 	share->revid = pdev->revision;
 
-	pr_info("share->revid = %02x\n",share->revid);
+	pr_info("share->revid = %02x\n", share->revid);
 	share->pdev = pdev;
 #ifdef CONFIG_MTRR
 	share->mtrr_off = g_nomtrr;
@@ -1130,10 +1130,10 @@ static int lynxfb_pci_probe(struct pci_dev * pdev,
 	}
 
 	/* call chip specific setup routine  */
-	sm750fb_setup(share,g_settings);
+	sm750fb_setup(share, g_settings);
 
 	/* call chip specific mmap routine */
-	if(hw_sm750_map(share,pdev)){
+	if(hw_sm750_map(share, pdev)){
 		pr_err("Memory map failed\n");
 		goto err_map;
 	}
@@ -1143,7 +1143,7 @@ static int lynxfb_pci_probe(struct pci_dev * pdev,
 		pr_info("enable mtrr\n");
 		share->mtrr.vram = mtrr_add(share->vidmem_start,
 					    share->vidmem_size,
-					    MTRR_TYPE_WRCOMB,1);
+					    MTRR_TYPE_WRCOMB, 1);
 
 		if(share->mtrr.vram < 0){
 			/* don't block driver with the failure of MTRR */
@@ -1157,20 +1157,20 @@ static int lynxfb_pci_probe(struct pci_dev * pdev,
 
 	memset_io(share->pvMem, 0, share->vidmem_size);
 
-	pr_info("sm%3x mmio address = %p\n",share->devid,share->pvReg);
+	pr_info("sm%3x mmio address = %p\n", share->devid, share->pvReg);
 
-	pci_set_drvdata(pdev,share);
+	pci_set_drvdata(pdev, share);
 
 	/* call chipInit routine */
-	hw_sm750_inithw(share,pdev);
+	hw_sm750_inithw(share, pdev);
 
 	/* allocate frame buffer info structor according to g_dualview */
 	fbidx = 0;
 ALLOC_FB:
-	info[fbidx] = framebuffer_alloc(sizeof(struct lynxfb_par),&pdev->dev);
+	info[fbidx] = framebuffer_alloc(sizeof(struct lynxfb_par), &pdev->dev);
 	if(!info[fbidx])
 	{
-		pr_err("Could not allocate framebuffer #%d.\n",fbidx);
+		pr_err("Could not allocate framebuffer #%d.\n", fbidx);
 		if(fbidx == 0)
 			goto err_info0_alloc;
 		else
@@ -1180,14 +1180,14 @@ static int lynxfb_pci_probe(struct pci_dev * pdev,
 	{
 		struct lynxfb_par * par;
 		int errno;
-		pr_info("framebuffer #%d alloc okay\n",fbidx);
+		pr_info("framebuffer #%d alloc okay\n", fbidx);
 		share->fbinfo[fbidx] = info[fbidx];
 		par = info[fbidx]->par;
 		par->share = share;
 
 		/* set fb_info structure */
-		if(lynxfb_set_fbinfo(info[fbidx],fbidx)){
-			pr_err("Failed to initial fb_info #%d.\n",fbidx);
+		if(lynxfb_set_fbinfo(info[fbidx], fbidx)){
+			pr_err("Failed to initial fb_info #%d.\n", fbidx);
 			if(fbidx == 0)
 				goto err_info0_set;
 			else
@@ -1195,16 +1195,16 @@ static int lynxfb_pci_probe(struct pci_dev * pdev,
 		}
 
 		/* register frame buffer*/
-		pr_info("Ready to register framebuffer #%d.\n",fbidx);
+		pr_info("Ready to register framebuffer #%d.\n", fbidx);
 		errno = register_framebuffer(info[fbidx]);
 		if (errno < 0) {
-			pr_err("Failed to register fb_info #%d. err %d\n",fbidx, errno);
+			pr_err("Failed to register fb_info #%d. err %d\n", fbidx, errno);
 			if(fbidx == 0)
 				goto err_register0;
 			else
 				goto err_register1;
 		}
-		pr_info("Accomplished register framebuffer #%d.\n",fbidx);
+		pr_info("Accomplished register framebuffer #%d.\n", fbidx);
 	}
 
 	/* no dual view by far */
@@ -1256,16 +1256,16 @@ static void __exit lynxfb_pci_remove(struct pci_dev * pdev)
 	}
 #ifdef CONFIG_MTRR
 	if(share->mtrr.vram_added)
-		mtrr_del(share->mtrr.vram,share->vidmem_start,share->vidmem_size);
+		mtrr_del(share->mtrr.vram, share->vidmem_start, share->vidmem_size);
 #endif
 	//	pci_release_regions(pdev);
 
 	iounmap(share->pvReg);
 	iounmap(share->pvMem);
-	spec_share = container_of(share,struct sm750_share,share);
+	spec_share = container_of(share, struct sm750_share, share);
 	kfree(g_settings);
 	kfree(spec_share);
-	pci_set_drvdata(pdev,NULL);
+	pci_set_drvdata(pdev, NULL);
 }
 
 static int __init lynxfb_setup(char * options)
@@ -1279,7 +1279,7 @@ static int __init lynxfb_setup(char * options)
 		return 0;
 	}
 
-	pr_info("options:%s\n",options);
+	pr_info("options:%s\n", options);
 
 	len = strlen(options) + 1;
 	g_settings = kzalloc(len, GFP_KERNEL);
@@ -1296,20 +1296,20 @@ static int __init lynxfb_setup(char * options)
 		strsep() updates @options to pointer after the first found token
 		it also returns the pointer ahead the token.
 		*/
-	while((opt = strsep(&options,":"))!=NULL)
+	while((opt = strsep(&options, ":"))!=NULL)
 	{
 		/* options that mean for any lynx chips are configured here */
-		if(!strncmp(opt,"noaccel",strlen("noaccel")))
+		if(!strncmp(opt, "noaccel", strlen("noaccel")))
 			g_noaccel = 1;
 #ifdef CONFIG_MTRR
-		else if(!strncmp(opt,"nomtrr",strlen("nomtrr")))
+		else if(!strncmp(opt, "nomtrr", strlen("nomtrr")))
 			g_nomtrr = 1;
 #endif
-		else if(!strncmp(opt,"dual",strlen("dual")))
+		else if(!strncmp(opt, "dual", strlen("dual")))
 			g_dualview = 1;
 		else
 		{
-			strcat(tmp,opt);
+			strcat(tmp, opt);
 			tmp += strlen(opt);
 			if(options != NULL)
 				*tmp++ = ':';
@@ -1319,7 +1319,7 @@ static int __init lynxfb_setup(char * options)
 	}
 
 	/* misc g_settings are transport to chip specific routines */
-	pr_info("parameter left for chip specific analysis:%s\n",g_settings);
+	pr_info("parameter left for chip specific analysis:%s\n", g_settings);
 	return 0;
 }
 
@@ -1328,7 +1328,7 @@ static struct pci_device_id smi_pci_table[] = {
 	{0,}
 };
 
-MODULE_DEVICE_TABLE(pci,smi_pci_table);
+MODULE_DEVICE_TABLE(pci, smi_pci_table);
 
 static struct pci_driver lynxfb_driver = {
 	.name =		"sm750fb",
@@ -1350,7 +1350,7 @@ static int __init lynxfb_init(void)
 #ifdef MODULE
 	option = g_option;
 #else
-	if(fb_get_options("sm750fb",&option))
+	if(fb_get_options("sm750fb", &option))
 		return -ENODEV;
 #endif
 
@@ -1366,7 +1366,7 @@ static void __exit lynxfb_exit(void)
 }
 module_exit(lynxfb_exit);
 
-module_param(g_option,charp,S_IRUGO);
+module_param(g_option, charp, S_IRUGO);
 
 MODULE_PARM_DESC(g_option,
 		 "\n\t\tCommon options:\n"

commit c52c3700d8a603dace184aed453c5e635645c523
Author: Michel von Czettritz <michel.von.czettritz@gmail.com>
Date:   Thu Mar 26 23:24:32 2015 +0100

    staging: sm750: Reindent
    
    The reindent fixes the
    "WARNING: please, no spaces at the start of a line",
    "ERROR: code indent should use tabs where possible"
    and some other small checkpatch.pl warnings and errors.
    
    Signed-off-by: Michel von Czettritz <michel.von.czettritz@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 4074375441c8..87b50fce5dd9 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -31,12 +31,12 @@ int smi_indent = 0;
 
 
 /*
-#ifdef __BIG_ENDIAN
-ssize_t lynxfb_ops_write(struct fb_info *info, const char __user *buf,
- 	    size_t count, loff_t *ppos);
-ssize_t lynxfb_ops_read(struct fb_info *info, char __user *buf,
-			   size_t count, loff_t *ppos);
-#endif
+ * #ifdef __BIG_ENDIAN
+ * ssize_t lynxfb_ops_write(struct fb_info *info, const char __user *buf,
+ * size_t count, loff_t *ppos);
+ * ssize_t lynxfb_ops_read(struct fb_info *info, char __user *buf,
+ * size_t count, loff_t *ppos);
+ * #endif
  */
 
 typedef void (*PROC_SPEC_SETUP)(struct lynx_share*,char *);
@@ -57,56 +57,56 @@ static int g_dualview;
 static char * g_option = NULL;
 
 static const struct fb_videomode lynx750_ext[] = {
-	/*  	1024x600-60 VESA 	[1.71:1]	*/
+	/*	1024x600-60 VESA	[1.71:1]	*/
 	{NULL,  60, 1024, 600, 20423, 144,  40, 18, 1, 104, 3,
-	FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
+	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
 
-	/* 	1024x600-70 VESA */
+	/*	1024x600-70 VESA */
 	{NULL,  70, 1024, 600, 17211, 152,  48, 21, 1, 104, 3,
-	FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
+	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
 
-	/*  	1024x600-75 VESA */
+	/*	1024x600-75 VESA */
 	{NULL,  75, 1024, 600, 15822, 160,  56, 23, 1, 104, 3,
-	FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
+	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
 
-	/*  	1024x600-85 VESA */
+	/*	1024x600-85 VESA */
 	{NULL,  85, 1024, 600, 13730, 168,  56, 26, 1, 112, 3,
-	FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
+	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
 
 	/*	720x480	*/
 	{NULL, 60,  720,  480,  37427, 88,   16, 13, 1,   72,  3,
-	FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
+	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
 
 	/*	1280x720		[1.78:1]	*/
 	{NULL, 60,  1280,  720,  13426, 162, 86, 22, 1,  136, 3,
-	FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT,FB_VMODE_NONINTERLACED},
+	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT,FB_VMODE_NONINTERLACED},
 
-	/* 1280x768@60 */
+	/*	1280x768@60 */
 	{NULL,60,1280,768,12579,192,64,20,3,128,7,
-	FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT,FB_VMODE_NONINTERLACED},
+	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT,FB_VMODE_NONINTERLACED},
 
 	{NULL,60,1360,768,11804,208,64,23,1,144,3,
-	FB_SYNC_HOR_HIGH_ACT|FB_VMODE_NONINTERLACED},
+	 FB_SYNC_HOR_HIGH_ACT|FB_VMODE_NONINTERLACED},
 
 	/*	1360 x 768	[1.77083:1]	*/
 	{NULL,  60, 1360, 768, 11804, 208,  64, 23, 1, 144, 3,
-	FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
+	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
 
 	/*	1368 x 768      [1.78:1]	*/
 	{NULL, 60,  1368,  768,  11647, 216, 72, 23, 1,  144, 3,
-	FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
+	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
 
-	/* 	1440 x 900		[16:10]	*/
+	/*	1440 x 900		[16:10]	*/
 	{NULL, 60, 1440, 900, 9392, 232, 80, 28, 1, 152, 3,
-	FB_SYNC_VERT_HIGH_ACT,FB_VMODE_NONINTERLACED},
+	 FB_SYNC_VERT_HIGH_ACT,FB_VMODE_NONINTERLACED},
 
 	/*	1440x960		[15:10]	*/
 	{NULL, 60, 1440, 960, 8733, 240, 88, 30, 1, 152, 3,
-	FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
+	 FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
 
 	/*	1920x1080	[16:9]	*/
 	{NULL, 60, 1920, 1080, 6734, 148, 88, 41, 1, 44, 3,
-	FB_SYNC_VERT_HIGH_ACT,FB_VMODE_NONINTERLACED},
+	 FB_SYNC_VERT_HIGH_ACT,FB_VMODE_NONINTERLACED},
 };
 
 
@@ -124,8 +124,8 @@ static int lynxfb_ops_cursor(struct fb_info* info,struct fb_cursor* fbcursor)
 	cursor = &crtc->cursor;
 
 	if(fbcursor->image.width > cursor->maxW ||
-		fbcursor->image.height > cursor->maxH ||
-		 fbcursor->image.depth > 1){
+	   fbcursor->image.height > cursor->maxH ||
+	   fbcursor->image.depth > 1){
 		return -ENXIO;
 	}
 
@@ -136,19 +136,19 @@ static int lynxfb_ops_cursor(struct fb_info* info,struct fb_cursor* fbcursor)
 
 	if(fbcursor->set & FB_CUR_SETPOS){
 		cursor->setPos(cursor,fbcursor->image.dx - info->var.xoffset,
-								fbcursor->image.dy - info->var.yoffset);
+			       fbcursor->image.dy - info->var.yoffset);
 	}
 
 	if(fbcursor->set & FB_CUR_SETCMAP){
 		/* get the 16bit color of kernel means */
 		u16 fg,bg;
 		fg = ((info->cmap.red[fbcursor->image.fg_color] & 0xf800))|
-				((info->cmap.green[fbcursor->image.fg_color] & 0xfc00) >> 5)|
-				((info->cmap.blue[fbcursor->image.fg_color] & 0xf800) >> 11);
+		      ((info->cmap.green[fbcursor->image.fg_color] & 0xfc00) >> 5)|
+		      ((info->cmap.blue[fbcursor->image.fg_color] & 0xf800) >> 11);
 
 		bg = ((info->cmap.red[fbcursor->image.bg_color] & 0xf800))|
-				((info->cmap.green[fbcursor->image.bg_color] & 0xfc00) >> 5)|
-				((info->cmap.blue[fbcursor->image.bg_color] & 0xf800) >> 11);
+		      ((info->cmap.green[fbcursor->image.bg_color] & 0xfc00) >> 5)|
+		      ((info->cmap.blue[fbcursor->image.bg_color] & 0xf800) >> 11);
 
 		cursor->setColor(cursor,fg,bg);
 	}
@@ -157,9 +157,9 @@ static int lynxfb_ops_cursor(struct fb_info* info,struct fb_cursor* fbcursor)
 	if(fbcursor->set & (FB_CUR_SETSHAPE | FB_CUR_SETIMAGE))
 	{
 		cursor->setData(cursor,
-						fbcursor->rop,
-						fbcursor->image.data,
-						fbcursor->mask);
+				fbcursor->rop,
+				fbcursor->image.data,
+				fbcursor->mask);
 	}
 
 	if(fbcursor->enable){
@@ -200,11 +200,10 @@ static void lynxfb_ops_fillrect(struct fb_info* info,const struct fb_fillrect* r
 		spin_lock(&share->slock);
 
 	share->accel.de_fillrect(&share->accel,
-							base,pitch,Bpp,
-							region->dx,region->dy,
-							region->width,region->height,
-							color,rop);
-
+				 base,pitch,Bpp,
+				 region->dx,region->dy,
+				 region->width,region->height,
+				 color,rop);
 	if (share->dual)
 		spin_unlock(&share->slock);
 }
@@ -232,10 +231,9 @@ static void lynxfb_ops_copyarea(struct fb_info * info,const struct fb_copyarea *
 		spin_lock(&share->slock);
 
 	share->accel.de_copyarea(&share->accel,
-							base,pitch,region->sx,region->sy,
-							base,pitch,Bpp,region->dx,region->dy,
-							region->width,region->height,HW_ROP2_COPY);
-
+				 base,pitch,region->sx,region->sy,
+				 base,pitch,Bpp,region->dx,region->dy,
+				 region->width,region->height,HW_ROP2_COPY);
 	if (share->dual)
 		spin_unlock(&share->slock);
 }
@@ -257,7 +255,7 @@ static void lynxfb_ops_imageblit(struct fb_info*info,const struct fb_image* imag
 
 	if(image->depth == 1){
 		if(info->fix.visual == FB_VISUAL_TRUECOLOR ||
-			info->fix.visual == FB_VISUAL_DIRECTCOLOR)
+		   info->fix.visual == FB_VISUAL_DIRECTCOLOR)
 		{
 			fgcol = ((u32*)info->pseudo_palette)[image->fg_color];
 			bgcol = ((u32*)info->pseudo_palette)[image->bg_color];
@@ -279,33 +277,32 @@ static void lynxfb_ops_imageblit(struct fb_info*info,const struct fb_image* imag
 		spin_lock(&share->slock);
 
 	share->accel.de_imageblit(&share->accel,
-					image->data,image->width>>3,0,
-					base,pitch,Bpp,
-					image->dx,image->dy,
-					image->width,image->height,
-					fgcol,bgcol,HW_ROP2_COPY);
-
+				  image->data,image->width>>3,0,
+				  base,pitch,Bpp,
+				  image->dx,image->dy,
+				  image->width,image->height,
+				  fgcol,bgcol,HW_ROP2_COPY);
 	if (share->dual)
 		spin_unlock(&share->slock);
 }
 
 static int lynxfb_ops_pan_display(struct fb_var_screeninfo *var,
-        struct fb_info *info)
+				  struct fb_info *info)
 {
-    struct lynxfb_par * par;
-    struct lynxfb_crtc * crtc;
-    int ret;
-    
+	struct lynxfb_par * par;
+	struct lynxfb_crtc * crtc;
+	int ret;
 
-    if(!info)
-        return -EINVAL;
 
-    ret = 0;
-    par = info->par;
-    crtc = &par->crtc;
-    ret = crtc->proc_panDisplay(crtc, var, info);
+	if(!info)
+		return -EINVAL;
 
-    return ret;
+	ret = 0;
+	par = info->par;
+	crtc = &par->crtc;
+	ret = crtc->proc_panDisplay(crtc, var, info);
+
+	return ret;
 }
 
 static int lynxfb_ops_set_par(struct fb_info * info)
@@ -460,7 +457,7 @@ static int lynxfb_resume(struct pci_dev* pdev)
 	struct lynx_cursor * cursor;
 
 	int ret;
-	
+
 
 	ret = 0;
 	share = pci_get_drvdata(pdev);
@@ -526,7 +523,7 @@ static int lynxfb_ops_check_var(struct fb_var_screeninfo* var,struct fb_info* in
 	int ret;
 	resource_size_t request;
 
-	
+
 	par = info->par;
 	crtc = &par->crtc;
 	output = &par->output;
@@ -534,9 +531,9 @@ static int lynxfb_ops_check_var(struct fb_var_screeninfo* var,struct fb_info* in
 	ret = 0;
 
 	pr_debug("check var:%dx%d-%d\n",
-			var->xres,
-			var->yres,
-			var->bits_per_pixel);
+		 var->xres,
+		 var->yres,
+		 var->bits_per_pixel);
 
 
 	switch(var->bits_per_pixel){
@@ -611,64 +608,64 @@ static int lynxfb_ops_check_var(struct fb_var_screeninfo* var,struct fb_info* in
 
 
 static int lynxfb_ops_setcolreg(unsigned regno,unsigned red,
-									unsigned green,unsigned blue,
-									unsigned transp,struct fb_info * info)
+				unsigned green,unsigned blue,
+				unsigned transp,struct fb_info * info)
 {
-    struct lynxfb_par * par;
-    struct lynxfb_crtc * crtc;
-    struct fb_var_screeninfo * var;
-    int ret;
-
-    par = info->par;
-    crtc = &par->crtc;
-    var = &info->var;
-    ret = 0;
-
-    //pr_debug("regno=%d,red=%d,green=%d,blue=%d\n",regno,red,green,blue);
-    if(regno > 256){
-        pr_err("regno = %d\n",regno);
-        return -EINVAL;
-    }
-
-    if(info->var.grayscale)
-        red = green = blue = (red * 77 + green * 151 + blue * 28) >> 8;
-
-    if(var->bits_per_pixel == 8 && info->fix.visual == FB_VISUAL_PSEUDOCOLOR)
-    {
-        red >>= 8;
-        green >>= 8;
-        blue >>= 8;
-        ret = crtc->proc_setColReg(crtc,regno,red,green,blue);
-        goto exit;
-    }
-
-
-    if(info->fix.visual == FB_VISUAL_TRUECOLOR && regno < 256 )
-    {
-        u32 val;
-        if(var->bits_per_pixel == 16 ||
-                var->bits_per_pixel == 32 ||
-                var->bits_per_pixel == 24)
-        {
-            val = chan_to_field(red,&var->red);
-            val |= chan_to_field(green,&var->green);
-            val |= chan_to_field(blue,&var->blue);
-            par->pseudo_palette[regno] = val;
-            goto exit;
-        }
-    }
-
-    ret = -EINVAL;
+	struct lynxfb_par * par;
+	struct lynxfb_crtc * crtc;
+	struct fb_var_screeninfo * var;
+	int ret;
+
+	par = info->par;
+	crtc = &par->crtc;
+	var = &info->var;
+	ret = 0;
+
+	//pr_debug("regno=%d,red=%d,green=%d,blue=%d\n",regno,red,green,blue);
+	if(regno > 256){
+		pr_err("regno = %d\n",regno);
+		return -EINVAL;
+	}
+
+	if(info->var.grayscale)
+		red = green = blue = (red * 77 + green * 151 + blue * 28) >> 8;
+
+	if(var->bits_per_pixel == 8 && info->fix.visual == FB_VISUAL_PSEUDOCOLOR)
+	{
+		red >>= 8;
+		green >>= 8;
+		blue >>= 8;
+		ret = crtc->proc_setColReg(crtc,regno,red,green,blue);
+		goto exit;
+	}
+
+
+	if(info->fix.visual == FB_VISUAL_TRUECOLOR && regno < 256 )
+	{
+		u32 val;
+		if(var->bits_per_pixel == 16 ||
+		   var->bits_per_pixel == 32 ||
+		   var->bits_per_pixel == 24)
+		{
+			val = chan_to_field(red,&var->red);
+			val |= chan_to_field(green,&var->green);
+			val |= chan_to_field(blue,&var->blue);
+			par->pseudo_palette[regno] = val;
+			goto exit;
+		}
+	}
+
+	ret = -EINVAL;
 
 exit:
-    return ret;
+	return ret;
 }
 
 static int lynxfb_ops_blank(int blank,struct fb_info* info)
 {
 	struct lynxfb_par * par;
 	struct lynxfb_output * output;
-	
+
 	pr_debug("blank = %d.\n",blank);
 	par = info->par;
 	output = &par->output;
@@ -677,89 +674,89 @@ static int lynxfb_ops_blank(int blank,struct fb_info* info)
 
 static int sm750fb_set_drv(struct lynxfb_par * par)
 {
-    int ret;
-    struct lynx_share * share;
-    struct sm750_share * spec_share;
-    struct lynxfb_output * output;
-    struct lynxfb_crtc * crtc;
-    
-    ret = 0;
-
-    share = par->share;
-    spec_share = container_of(share,struct sm750_share,share);
-    output = &par->output;
-    crtc = &par->crtc;
-
-    crtc->vidmem_size = (share->dual)?share->vidmem_size>>1:share->vidmem_size;
-    /* setup crtc and output member */
-    spec_share->hwCursor = g_hwcursor;
-
-    crtc->proc_setMode = hw_sm750_crtc_setMode;
-    crtc->proc_checkMode = hw_sm750_crtc_checkMode;
-    crtc->proc_setColReg = hw_sm750_setColReg;
-    crtc->proc_panDisplay = hw_sm750_pan_display;
-    crtc->clear = hw_sm750_crtc_clear;
-    crtc->line_pad = 16;
-    //crtc->xpanstep = crtc->ypanstep = crtc->ywrapstep = 0;
-    crtc->xpanstep = 8;
-    crtc->ypanstep = 1;
-    crtc->ywrapstep = 0;
-
-    output->proc_setMode = hw_sm750_output_setMode;
-    output->proc_checkMode = hw_sm750_output_checkMode;
-
-    output->proc_setBLANK = (share->revid == SM750LE_REVISION_ID)?hw_sm750le_setBLANK:hw_sm750_setBLANK;
-    output->clear = hw_sm750_output_clear;
-    /* chip specific phase */
-    share->accel.de_wait = (share->revid == SM750LE_REVISION_ID)?hw_sm750le_deWait: hw_sm750_deWait;
-    switch (spec_share->state.dataflow)
-    {
-        case sm750_simul_pri:
-            output->paths = sm750_pnc;
-            crtc->channel = sm750_primary;
-            crtc->oScreen = 0;
-            crtc->vScreen = share->pvMem;
-            pr_info("use simul primary mode\n");
-            break;
-        case sm750_simul_sec:
-            output->paths = sm750_pnc;
-            crtc->channel = sm750_secondary;
-            crtc->oScreen = 0;
-            crtc->vScreen = share->pvMem;
-            break;
-        case sm750_dual_normal:
-            if(par->index == 0){
-                output->paths = sm750_panel;
-                crtc->channel = sm750_primary;
-                crtc->oScreen = 0;
-                crtc->vScreen = share->pvMem;
-            }else{
-                output->paths = sm750_crt;
-                crtc->channel = sm750_secondary;
-                /* not consider of padding stuffs for oScreen,need fix*/
-                crtc->oScreen = (share->vidmem_size >> 1);
-                crtc->vScreen = share->pvMem + crtc->oScreen;
-            }
-            break;
-        case sm750_dual_swap:
-            if(par->index == 0){
-                output->paths = sm750_panel;
-                crtc->channel = sm750_secondary;
-                crtc->oScreen = 0;
-                crtc->vScreen = share->pvMem;
-            }else{
-                output->paths = sm750_crt;
-                crtc->channel = sm750_primary;
-                /* not consider of padding stuffs for oScreen,need fix*/
-                crtc->oScreen = (share->vidmem_size >> 1);
-                crtc->vScreen = share->pvMem + crtc->oScreen;
-            }
-            break;
-        default:
-            ret = -EINVAL;
-    }
-
-    return ret;
+	int ret;
+	struct lynx_share * share;
+	struct sm750_share * spec_share;
+	struct lynxfb_output * output;
+	struct lynxfb_crtc * crtc;
+
+	ret = 0;
+
+	share = par->share;
+	spec_share = container_of(share,struct sm750_share,share);
+	output = &par->output;
+	crtc = &par->crtc;
+
+	crtc->vidmem_size = (share->dual)?share->vidmem_size>>1:share->vidmem_size;
+	/* setup crtc and output member */
+	spec_share->hwCursor = g_hwcursor;
+
+	crtc->proc_setMode = hw_sm750_crtc_setMode;
+	crtc->proc_checkMode = hw_sm750_crtc_checkMode;
+	crtc->proc_setColReg = hw_sm750_setColReg;
+	crtc->proc_panDisplay = hw_sm750_pan_display;
+	crtc->clear = hw_sm750_crtc_clear;
+	crtc->line_pad = 16;
+	//crtc->xpanstep = crtc->ypanstep = crtc->ywrapstep = 0;
+	crtc->xpanstep = 8;
+	crtc->ypanstep = 1;
+	crtc->ywrapstep = 0;
+
+	output->proc_setMode = hw_sm750_output_setMode;
+	output->proc_checkMode = hw_sm750_output_checkMode;
+
+	output->proc_setBLANK = (share->revid == SM750LE_REVISION_ID)?hw_sm750le_setBLANK:hw_sm750_setBLANK;
+	output->clear = hw_sm750_output_clear;
+	/* chip specific phase */
+	share->accel.de_wait = (share->revid == SM750LE_REVISION_ID)?hw_sm750le_deWait: hw_sm750_deWait;
+	switch (spec_share->state.dataflow)
+	{
+	case sm750_simul_pri:
+		output->paths = sm750_pnc;
+		crtc->channel = sm750_primary;
+		crtc->oScreen = 0;
+		crtc->vScreen = share->pvMem;
+		pr_info("use simul primary mode\n");
+		break;
+	case sm750_simul_sec:
+		output->paths = sm750_pnc;
+		crtc->channel = sm750_secondary;
+		crtc->oScreen = 0;
+		crtc->vScreen = share->pvMem;
+		break;
+	case sm750_dual_normal:
+		if(par->index == 0){
+			output->paths = sm750_panel;
+			crtc->channel = sm750_primary;
+			crtc->oScreen = 0;
+			crtc->vScreen = share->pvMem;
+		}else{
+			output->paths = sm750_crt;
+			crtc->channel = sm750_secondary;
+			/* not consider of padding stuffs for oScreen,need fix*/
+			crtc->oScreen = (share->vidmem_size >> 1);
+			crtc->vScreen = share->pvMem + crtc->oScreen;
+		}
+		break;
+	case sm750_dual_swap:
+		if(par->index == 0){
+			output->paths = sm750_panel;
+			crtc->channel = sm750_secondary;
+			crtc->oScreen = 0;
+			crtc->vScreen = share->pvMem;
+		}else{
+			output->paths = sm750_crt;
+			crtc->channel = sm750_primary;
+			/* not consider of padding stuffs for oScreen,need fix*/
+			crtc->oScreen = (share->vidmem_size >> 1);
+			crtc->vScreen = share->pvMem + crtc->oScreen;
+		}
+		break;
+	default:
+		ret = -EINVAL;
+	}
+
+	return ret;
 }
 
 static struct fb_ops lynxfb_ops={
@@ -778,106 +775,106 @@ static struct fb_ops lynxfb_ops={
 
 static int lynxfb_set_fbinfo(struct fb_info* info,int index)
 {
-    int i;
-    struct lynxfb_par * par;
-    struct lynx_share * share;
-    struct lynxfb_crtc * crtc;
-    struct lynxfb_output * output;
-    struct fb_var_screeninfo * var;
-    struct fb_fix_screeninfo * fix;
-
-    const struct fb_videomode * pdb[] = {
-        lynx750_ext, NULL,vesa_modes,
-    };
-    int cdb[] = {ARRAY_SIZE(lynx750_ext),0,VESA_MODEDB_SIZE};
-    static const char * mdb_desc[] ={
-        "driver prepared modes",
-        "kernel prepared default modedb",
-        "kernel HELPERS prepared vesa_modes",
-    };
-
-
-    static const char * fixId[2]=
-    {
-        "sm750_fb1","sm750_fb2",
-    };
-
-    int ret,line_length;
-    
-    ret = 0;
-    par = (struct lynxfb_par *)info->par;
-    share = par->share;
-    crtc = &par->crtc;
-    output = &par->output;
-    var = &info->var;
-    fix = &info->fix;
-
-    /* set index */
-    par->index = index;
-    output->channel = &crtc->channel;
+	int i;
+	struct lynxfb_par * par;
+	struct lynx_share * share;
+	struct lynxfb_crtc * crtc;
+	struct lynxfb_output * output;
+	struct fb_var_screeninfo * var;
+	struct fb_fix_screeninfo * fix;
+
+	const struct fb_videomode * pdb[] = {
+		lynx750_ext, NULL,vesa_modes,
+	};
+	int cdb[] = {ARRAY_SIZE(lynx750_ext),0,VESA_MODEDB_SIZE};
+	static const char * mdb_desc[] ={
+		"driver prepared modes",
+		"kernel prepared default modedb",
+		"kernel HELPERS prepared vesa_modes",
+	};
+
+
+	static const char * fixId[2]=
+	{
+		"sm750_fb1","sm750_fb2",
+	};
+
+	int ret,line_length;
+
+	ret = 0;
+	par = (struct lynxfb_par *)info->par;
+	share = par->share;
+	crtc = &par->crtc;
+	output = &par->output;
+	var = &info->var;
+	fix = &info->fix;
+
+	/* set index */
+	par->index = index;
+	output->channel = &crtc->channel;
 	sm750fb_set_drv(par);
-        lynxfb_ops.fb_pan_display = lynxfb_ops_pan_display;
-
-
-    /* set current cursor variable and proc pointer,
-     * must be set after crtc member initialized */
-       crtc->cursor.offset = crtc->oScreen + crtc->vidmem_size - 1024;
-        crtc->cursor.mmio = share->pvReg + 0x800f0 + (int)crtc->channel * 0x140;
-
-        pr_info("crtc->cursor.mmio = %p\n",crtc->cursor.mmio);
-        crtc->cursor.maxH = crtc->cursor.maxW = 64;
-        crtc->cursor.size = crtc->cursor.maxH*crtc->cursor.maxW*2/8;
-        crtc->cursor.disable = hw_cursor_disable;
-        crtc->cursor.enable = hw_cursor_enable;
-        crtc->cursor.setColor = hw_cursor_setColor;
-        crtc->cursor.setPos = hw_cursor_setPos;
-        crtc->cursor.setSize = hw_cursor_setSize;
-        crtc->cursor.setData = hw_cursor_setData;
-        crtc->cursor.vstart = share->pvMem + crtc->cursor.offset;
-
-
-    crtc->cursor.share = share;
-	memset_io(crtc->cursor.vstart, 0, crtc->cursor.size);
-    if(!g_hwcursor){
-        lynxfb_ops.fb_cursor = NULL;
-        crtc->cursor.disable(&crtc->cursor);
-    }
-
-
-    /* set info->fbops, must be set before fb_find_mode */
-    if(!share->accel_off){
-        /* use 2d acceleration */
-        lynxfb_ops.fb_fillrect = lynxfb_ops_fillrect;
-        lynxfb_ops.fb_copyarea = lynxfb_ops_copyarea;
-        lynxfb_ops.fb_imageblit = lynxfb_ops_imageblit;
-    }
-    info->fbops = &lynxfb_ops;
-
-    if(!g_fbmode[index]){
-        g_fbmode[index] = g_def_fbmode;
-        if(index)
-            g_fbmode[index] = g_fbmode[0];
-    }
+	lynxfb_ops.fb_pan_display = lynxfb_ops_pan_display;
+
+
+	/* set current cursor variable and proc pointer,
+	 * must be set after crtc member initialized */
+	crtc->cursor.offset = crtc->oScreen + crtc->vidmem_size - 1024;
+	crtc->cursor.mmio = share->pvReg + 0x800f0 + (int)crtc->channel * 0x140;
+
+	pr_info("crtc->cursor.mmio = %p\n",crtc->cursor.mmio);
+	crtc->cursor.maxH = crtc->cursor.maxW = 64;
+	crtc->cursor.size = crtc->cursor.maxH*crtc->cursor.maxW*2/8;
+	crtc->cursor.disable = hw_cursor_disable;
+	crtc->cursor.enable = hw_cursor_enable;
+	crtc->cursor.setColor = hw_cursor_setColor;
+	crtc->cursor.setPos = hw_cursor_setPos;
+	crtc->cursor.setSize = hw_cursor_setSize;
+	crtc->cursor.setData = hw_cursor_setData;
+	crtc->cursor.vstart = share->pvMem + crtc->cursor.offset;
+
+
+	crtc->cursor.share = share;
+		memset_io(crtc->cursor.vstart, 0, crtc->cursor.size);
+	if(!g_hwcursor){
+		lynxfb_ops.fb_cursor = NULL;
+		crtc->cursor.disable(&crtc->cursor);
+	}
+
+
+	/* set info->fbops, must be set before fb_find_mode */
+	if(!share->accel_off){
+		/* use 2d acceleration */
+		lynxfb_ops.fb_fillrect = lynxfb_ops_fillrect;
+		lynxfb_ops.fb_copyarea = lynxfb_ops_copyarea;
+		lynxfb_ops.fb_imageblit = lynxfb_ops_imageblit;
+	}
+	info->fbops = &lynxfb_ops;
+
+	if(!g_fbmode[index]){
+		g_fbmode[index] = g_def_fbmode;
+		if(index)
+			g_fbmode[index] = g_fbmode[0];
+	}
 
 
 	for(i=0;i<3;i++){
 
 		ret = fb_find_mode(var,info,g_fbmode[index],
-				pdb[i],cdb[i],NULL,8);
+				   pdb[i],cdb[i],NULL,8);
 
 		if(ret == 1){
 			pr_info("success! use specified mode:%s in %s\n",
-					g_fbmode[index],
-					mdb_desc[i]);
+				g_fbmode[index],
+				mdb_desc[i]);
 			break;
 		}else if(ret == 2){
 			pr_warn("use specified mode:%s in %s,with an ignored refresh rate\n",
-					g_fbmode[index],
-					mdb_desc[i]);
+				g_fbmode[index],
+				mdb_desc[i]);
 			break;
 		}else if(ret == 3){
 			pr_warn("wanna use default mode\n");
-//			break;
+			//			break;
 		}else if(ret == 4){
 			pr_warn("fall back to any valid mode\n");
 		}else{
@@ -885,97 +882,97 @@ static int lynxfb_set_fbinfo(struct fb_info* info,int index)
 		}
 	}
 
-    /* some member of info->var had been set by fb_find_mode */
-
-    pr_info("Member of info->var is :\n\
-            xres=%d\n\
-            yres=%d\n\
-            xres_virtual=%d\n\
-            yres_virtual=%d\n\
-            xoffset=%d\n\
-            yoffset=%d\n\
-            bits_per_pixel=%d\n \
-            ...\n",var->xres,var->yres,var->xres_virtual,var->yres_virtual,
-            var->xoffset,var->yoffset,var->bits_per_pixel);
-
-    /* set par */
-    par->info = info;
-
-    /* set info */
-    line_length = PADDING(crtc->line_pad,
-            (var->xres_virtual * var->bits_per_pixel/8));
-
-    info->pseudo_palette = &par->pseudo_palette[0];
-    info->screen_base = crtc->vScreen;
-    pr_debug("screen_base vaddr = %p\n",info->screen_base);
+	/* some member of info->var had been set by fb_find_mode */
+
+	pr_info("Member of info->var is :\n\
+			xres=%d\n\
+			yres=%d\n\
+			xres_virtual=%d\n\
+			yres_virtual=%d\n\
+			xoffset=%d\n\
+			yoffset=%d\n\
+			bits_per_pixel=%d\n \
+			...\n",var->xres,var->yres,var->xres_virtual,var->yres_virtual,
+			var->xoffset,var->yoffset,var->bits_per_pixel);
+
+	/* set par */
+	par->info = info;
+
+	/* set info */
+	line_length = PADDING(crtc->line_pad,
+			      (var->xres_virtual * var->bits_per_pixel/8));
+
+	info->pseudo_palette = &par->pseudo_palette[0];
+	info->screen_base = crtc->vScreen;
+	pr_debug("screen_base vaddr = %p\n",info->screen_base);
 	info->screen_size = line_length * var->yres_virtual;
 	info->flags = FBINFO_FLAG_DEFAULT|0;
 
-    /* set info->fix */
-    fix->type = FB_TYPE_PACKED_PIXELS;
-    fix->type_aux = 0;
-    fix->xpanstep = crtc->xpanstep;
-    fix->ypanstep = crtc->ypanstep;
-    fix->ywrapstep = crtc->ywrapstep;
-    fix->accel = FB_ACCEL_SMI;
+	/* set info->fix */
+	fix->type = FB_TYPE_PACKED_PIXELS;
+	fix->type_aux = 0;
+	fix->xpanstep = crtc->xpanstep;
+	fix->ypanstep = crtc->ypanstep;
+	fix->ywrapstep = crtc->ywrapstep;
+	fix->accel = FB_ACCEL_SMI;
 
-    strlcpy(fix->id,fixId[index],sizeof(fix->id));
+	strlcpy(fix->id,fixId[index],sizeof(fix->id));
 
 
 	fix->smem_start = crtc->oScreen + share->vidmem_start;
 	pr_info("fix->smem_start = %lx\n",fix->smem_start);
-    /* according to mmap experiment from user space application,
-     * fix->mmio_len should not larger than virtual size
-     * (xres_virtual x yres_virtual x ByPP)
-     * Below line maybe buggy when user mmap fb dev node and write
-     * data into the bound over virtual size
-     * */
-    fix->smem_len = crtc->vidmem_size;
-    pr_info("fix->smem_len = %x\n",fix->smem_len);
-    info->screen_size = fix->smem_len;
-    fix->line_length = line_length;
-    fix->mmio_start = share->vidreg_start;
-    pr_info("fix->mmio_start = %lx\n",fix->mmio_start);
-    fix->mmio_len = share->vidreg_size;
-    pr_info("fix->mmio_len = %x\n",fix->mmio_len);
-    switch(var->bits_per_pixel)
-    {
-        case 8:
-            fix->visual = FB_VISUAL_PSEUDOCOLOR;
-            break;
-        case 16:
-        case 32:
-            fix->visual = FB_VISUAL_TRUECOLOR;
-            break;
-    }
-
-    /* set var */
-    var->activate = FB_ACTIVATE_NOW;
-    var->accel_flags = 0;
-    var->vmode = FB_VMODE_NONINTERLACED;
-
-    pr_debug("#1 show info->cmap : \nstart=%d,len=%d,red=%p,green=%p,blue=%p,transp=%p\n",
-            info->cmap.start,info->cmap.len,
-            info->cmap.red,info->cmap.green,info->cmap.blue,
-            info->cmap.transp);
-
-    if((ret = fb_alloc_cmap(&info->cmap,256,0)) < 0){
-        pr_err("Could not allcate memory for cmap.\n");
-        goto exit;
-    }
-
-    pr_debug("#2 show info->cmap : \nstart=%d,len=%d,red=%p,green=%p,blue=%p,transp=%p\n",
-            info->cmap.start,info->cmap.len,
-            info->cmap.red,info->cmap.green,info->cmap.blue,
-            info->cmap.transp);
+	/* according to mmap experiment from user space application,
+	 * fix->mmio_len should not larger than virtual size
+	 * (xres_virtual x yres_virtual x ByPP)
+	 * Below line maybe buggy when user mmap fb dev node and write
+	 * data into the bound over virtual size
+	 * */
+	fix->smem_len = crtc->vidmem_size;
+	pr_info("fix->smem_len = %x\n",fix->smem_len);
+	info->screen_size = fix->smem_len;
+	fix->line_length = line_length;
+	fix->mmio_start = share->vidreg_start;
+	pr_info("fix->mmio_start = %lx\n",fix->mmio_start);
+	fix->mmio_len = share->vidreg_size;
+	pr_info("fix->mmio_len = %x\n",fix->mmio_len);
+	switch(var->bits_per_pixel)
+	{
+	case 8:
+		fix->visual = FB_VISUAL_PSEUDOCOLOR;
+		break;
+	case 16:
+	case 32:
+		fix->visual = FB_VISUAL_TRUECOLOR;
+		break;
+	}
+
+	/* set var */
+	var->activate = FB_ACTIVATE_NOW;
+	var->accel_flags = 0;
+	var->vmode = FB_VMODE_NONINTERLACED;
+
+	pr_debug("#1 show info->cmap : \nstart=%d,len=%d,red=%p,green=%p,blue=%p,transp=%p\n",
+		 info->cmap.start,info->cmap.len,
+		 info->cmap.red,info->cmap.green,info->cmap.blue,
+		 info->cmap.transp);
+
+	if((ret = fb_alloc_cmap(&info->cmap,256,0)) < 0){
+		pr_err("Could not allcate memory for cmap.\n");
+		goto exit;
+	}
+
+	pr_debug("#2 show info->cmap : \nstart=%d,len=%d,red=%p,green=%p,blue=%p,transp=%p\n",
+		 info->cmap.start,info->cmap.len,
+		 info->cmap.red,info->cmap.green,info->cmap.blue,
+		 info->cmap.transp);
 
 exit:
 	lynxfb_ops_check_var(var,info);
-//    lynxfb_ops_set_par(info);
-    return ret;
+	//    lynxfb_ops_set_par(info);
+	return ret;
 }
 
-/* 	chip specific g_option configuration routine */
+/*	chip specific g_option configuration routine */
 static void sm750fb_setup(struct lynx_share * share,char * src)
 {
 	struct sm750_share * spec_share;
@@ -984,98 +981,98 @@ static void sm750fb_setup(struct lynx_share * share,char * src)
 	char * exp_res;
 #endif
 	int swap;
-	
+
 
 	spec_share = container_of(share,struct sm750_share,share);
 #ifdef CAP_EXPENSIION
-        exp_res = NULL;
+	exp_res = NULL;
 #endif
-        swap = 0;
-
-        spec_share->state.initParm.chip_clk = 0;
-        spec_share->state.initParm.mem_clk = 0;
-        spec_share->state.initParm.master_clk = 0;
-        spec_share->state.initParm.powerMode = 0;
-        spec_share->state.initParm.setAllEngOff = 0;
-        spec_share->state.initParm.resetMemory = 1;
-
-        /*defaultly turn g_hwcursor on for both view */
-        g_hwcursor = 3;
-
-        if(!src || !*src){
-            pr_warn("no specific g_option.\n");
-            goto NO_PARAM;
-        }
-
-        while((opt = strsep(&src,":")) != NULL && *opt != 0){
-			pr_err("opt=%s\n",opt);
-			pr_err("src=%s\n",src);
-
-            if(!strncmp(opt,"swap",strlen("swap")))
-                swap = 1;
-            else if(!strncmp(opt,"nocrt",strlen("nocrt")))
-                spec_share->state.nocrt = 1;
-            else if(!strncmp(opt,"36bit",strlen("36bit")))
-                spec_share->state.pnltype = sm750_doubleTFT;
-            else if(!strncmp(opt,"18bit",strlen("18bit")))
-                spec_share->state.pnltype = sm750_dualTFT;
-            else if(!strncmp(opt,"24bit",strlen("24bit")))
-                spec_share->state.pnltype = sm750_24TFT;
+	swap = 0;
+
+	spec_share->state.initParm.chip_clk = 0;
+	spec_share->state.initParm.mem_clk = 0;
+	spec_share->state.initParm.master_clk = 0;
+	spec_share->state.initParm.powerMode = 0;
+	spec_share->state.initParm.setAllEngOff = 0;
+	spec_share->state.initParm.resetMemory = 1;
+
+	/*defaultly turn g_hwcursor on for both view */
+	g_hwcursor = 3;
+
+	if(!src || !*src){
+		pr_warn("no specific g_option.\n");
+		goto NO_PARAM;
+	}
+
+	while((opt = strsep(&src,":")) != NULL && *opt != 0){
+		pr_err("opt=%s\n",opt);
+		pr_err("src=%s\n",src);
+
+		if(!strncmp(opt,"swap",strlen("swap")))
+			swap = 1;
+		else if(!strncmp(opt,"nocrt",strlen("nocrt")))
+			spec_share->state.nocrt = 1;
+		else if(!strncmp(opt,"36bit",strlen("36bit")))
+			spec_share->state.pnltype = sm750_doubleTFT;
+		else if(!strncmp(opt,"18bit",strlen("18bit")))
+			spec_share->state.pnltype = sm750_dualTFT;
+		else if(!strncmp(opt,"24bit",strlen("24bit")))
+			spec_share->state.pnltype = sm750_24TFT;
 #ifdef CAP_EXPANSION
-            else if(!strncmp(opt,"exp:",strlen("exp:")))
-                exp_res = opt + strlen("exp:");
+		else if(!strncmp(opt,"exp:",strlen("exp:")))
+			exp_res = opt + strlen("exp:");
 #endif
-            else if(!strncmp(opt,"nohwc0",strlen("nohwc0")))
-                g_hwcursor &= ~0x1;
-            else if(!strncmp(opt,"nohwc1",strlen("nohwc1")))
-                g_hwcursor &= ~0x2;
-            else if(!strncmp(opt,"nohwc",strlen("nohwc")))
-                g_hwcursor = 0;
-            else
-            {
-                if(!g_fbmode[0]){
-                    g_fbmode[0] = opt;
-                    pr_info("find fbmode0 : %s\n",g_fbmode[0]);
-                }else if(!g_fbmode[1]){
-                    g_fbmode[1] = opt;
-                    pr_info("find fbmode1 : %s\n",g_fbmode[1]);
-                }else{
-                    pr_warn("How many view you wann set?\n");
-                }
-            }
-        }
+		else if(!strncmp(opt,"nohwc0",strlen("nohwc0")))
+			g_hwcursor &= ~0x1;
+		else if(!strncmp(opt,"nohwc1",strlen("nohwc1")))
+			g_hwcursor &= ~0x2;
+		else if(!strncmp(opt,"nohwc",strlen("nohwc")))
+			g_hwcursor = 0;
+		else
+		{
+			if(!g_fbmode[0]){
+				g_fbmode[0] = opt;
+				pr_info("find fbmode0 : %s\n",g_fbmode[0]);
+			}else if(!g_fbmode[1]){
+				g_fbmode[1] = opt;
+				pr_info("find fbmode1 : %s\n",g_fbmode[1]);
+			}else{
+				pr_warn("How many view you wann set?\n");
+			}
+		}
+	}
 #ifdef CAP_EXPANSION
-        if(getExpRes(exp_res,&spec_share->state.xLCD,&spec_share->state.yLCD))
-        {
-            /* seems exp_res is not valid*/
-            spec_share->state.xLCD = spec_share->state.yLCD = 0;
-        }
+	if(getExpRes(exp_res,&spec_share->state.xLCD,&spec_share->state.yLCD))
+	{
+		/* seems exp_res is not valid*/
+		spec_share->state.xLCD = spec_share->state.yLCD = 0;
+	}
 #endif
 
 NO_PARAM:
-        if(share->revid != SM750LE_REVISION_ID){
-            if(share->dual)
-            {
-                if(swap)
-                    spec_share->state.dataflow = sm750_dual_swap;
-                else
-                    spec_share->state.dataflow = sm750_dual_normal;
-            }else{
-                if(swap)
-                    spec_share->state.dataflow = sm750_simul_sec;
-                else
-                    spec_share->state.dataflow = sm750_simul_pri;
-            }
-        }else{
-            /* SM750LE only have one crt channel */
-            spec_share->state.dataflow = sm750_simul_sec;
-            /* sm750le do not have complex attributes*/
-            spec_share->state.nocrt = 0;
-        }
+	if(share->revid != SM750LE_REVISION_ID){
+		if(share->dual)
+		{
+			if(swap)
+				spec_share->state.dataflow = sm750_dual_swap;
+			else
+				spec_share->state.dataflow = sm750_dual_normal;
+		}else{
+			if(swap)
+				spec_share->state.dataflow = sm750_simul_sec;
+			else
+				spec_share->state.dataflow = sm750_simul_pri;
+		}
+	}else{
+		/* SM750LE only have one crt channel */
+		spec_share->state.dataflow = sm750_simul_sec;
+		/* sm750le do not have complex attributes*/
+		spec_share->state.nocrt = 0;
+	}
 }
 
 static int lynxfb_pci_probe(struct pci_dev * pdev,
-		const struct pci_device_id * ent)
+			    const struct pci_device_id * ent)
 {
 	struct fb_info * info[] = {NULL,NULL};
 	struct lynx_share * share = NULL;
@@ -1083,7 +1080,7 @@ static int lynxfb_pci_probe(struct pci_dev * pdev,
 	struct sm750_share *spec_share = NULL;
 	size_t spec_offset = 0;
 	int fbidx;
-	
+
 
 	/* enable device */
 	if(pci_enable_device(pdev)){
@@ -1145,8 +1142,8 @@ static int lynxfb_pci_probe(struct pci_dev * pdev,
 	if(!share->mtrr_off){
 		pr_info("enable mtrr\n");
 		share->mtrr.vram = mtrr_add(share->vidmem_start,
-				share->vidmem_size,
-				MTRR_TYPE_WRCOMB,1);
+					    share->vidmem_size,
+					    MTRR_TYPE_WRCOMB,1);
 
 		if(share->mtrr.vram < 0){
 			/* don't block driver with the failure of MTRR */
@@ -1168,52 +1165,52 @@ static int lynxfb_pci_probe(struct pci_dev * pdev,
 	hw_sm750_inithw(share,pdev);
 
 	/* allocate frame buffer info structor according to g_dualview */
-		fbidx = 0;
+	fbidx = 0;
 ALLOC_FB:
-		info[fbidx] = framebuffer_alloc(sizeof(struct lynxfb_par),&pdev->dev);
-		if(!info[fbidx])
-		{
-			pr_err("Could not allocate framebuffer #%d.\n",fbidx);
+	info[fbidx] = framebuffer_alloc(sizeof(struct lynxfb_par),&pdev->dev);
+	if(!info[fbidx])
+	{
+		pr_err("Could not allocate framebuffer #%d.\n",fbidx);
+		if(fbidx == 0)
+			goto err_info0_alloc;
+		else
+			goto err_info1_alloc;
+	}
+	else
+	{
+		struct lynxfb_par * par;
+		int errno;
+		pr_info("framebuffer #%d alloc okay\n",fbidx);
+		share->fbinfo[fbidx] = info[fbidx];
+		par = info[fbidx]->par;
+		par->share = share;
+
+		/* set fb_info structure */
+		if(lynxfb_set_fbinfo(info[fbidx],fbidx)){
+			pr_err("Failed to initial fb_info #%d.\n",fbidx);
 			if(fbidx == 0)
-				goto err_info0_alloc;
+				goto err_info0_set;
 			else
-				goto err_info1_alloc;
+				goto err_info1_set;
 		}
-		else
-		{
-			struct lynxfb_par * par;
-			int errno;
-			pr_info("framebuffer #%d alloc okay\n",fbidx);
-			share->fbinfo[fbidx] = info[fbidx];
-			par = info[fbidx]->par;
-			par->share = share;
-
-			/* set fb_info structure */
-			if(lynxfb_set_fbinfo(info[fbidx],fbidx)){
-				pr_err("Failed to initial fb_info #%d.\n",fbidx);
-				if(fbidx == 0)
-					goto err_info0_set;
-				else
-					goto err_info1_set;
-			}
 
-			/* register frame buffer*/
-			pr_info("Ready to register framebuffer #%d.\n",fbidx);
-			errno = register_framebuffer(info[fbidx]);
-			if (errno < 0) {
-				pr_err("Failed to register fb_info #%d. err %d\n",fbidx, errno);
-				if(fbidx == 0)
-					goto err_register0;
-				else
-					goto err_register1;
-			}
-			pr_info("Accomplished register framebuffer #%d.\n",fbidx);
+		/* register frame buffer*/
+		pr_info("Ready to register framebuffer #%d.\n",fbidx);
+		errno = register_framebuffer(info[fbidx]);
+		if (errno < 0) {
+			pr_err("Failed to register fb_info #%d. err %d\n",fbidx, errno);
+			if(fbidx == 0)
+				goto err_register0;
+			else
+				goto err_register1;
 		}
+		pr_info("Accomplished register framebuffer #%d.\n",fbidx);
+	}
 
-		/* no dual view by far */
-		fbidx++;
-		if(share->dual && fbidx < 2)
-			goto ALLOC_FB;
+	/* no dual view by far */
+	fbidx++;
+	if(share->dual && fbidx < 2)
+		goto ALLOC_FB;
 
 	return 0;
 
@@ -1275,7 +1272,7 @@ static int __init lynxfb_setup(char * options)
 {
 	int len;
 	char * opt,*tmp;
-	
+
 
 	if(!options || !*options){
 		pr_warn("no options.\n");
@@ -1291,7 +1288,7 @@ static int __init lynxfb_setup(char * options)
 
 	tmp = g_settings;
 
-	/* 	Notes:
+	/*	Notes:
 		char * strsep(char **s,const char * ct);
 		@s: the string to be searched
 		@ct :the characters to search for
@@ -1372,14 +1369,14 @@ module_exit(lynxfb_exit);
 module_param(g_option,charp,S_IRUGO);
 
 MODULE_PARM_DESC(g_option,
-		"\n\t\tCommon options:\n"
-		"\t\tnoaccel:disable 2d capabilities\n"
-		"\t\tnomtrr:disable MTRR attribute for video memory\n"
-		"\t\tdualview:dual frame buffer feature enabled\n"
-		"\t\tnohwc:disable hardware cursor\n"
-		"\t\tUsual example:\n"
-		"\t\tinsmod ./sm750fb.ko g_option=\"noaccel,nohwc,1280x1024-8@60\"\n"
-		);
+		 "\n\t\tCommon options:\n"
+		 "\t\tnoaccel:disable 2d capabilities\n"
+		 "\t\tnomtrr:disable MTRR attribute for video memory\n"
+		 "\t\tdualview:dual frame buffer feature enabled\n"
+		 "\t\tnohwc:disable hardware cursor\n"
+		 "\t\tUsual example:\n"
+		 "\t\tinsmod ./sm750fb.ko g_option=\"noaccel,nohwc,1280x1024-8@60\"\n"
+		 );
 
 MODULE_AUTHOR("monk liu <monk.liu@siliconmotion.com>");
 MODULE_AUTHOR("Sudip Mukherjee <sudip@vectorindia.org>");

commit cb422f3bbc47ebf30ea3862b6ade462ea8e81e56
Author: Lorenzo Stoakes <lstoakes@gmail.com>
Date:   Fri Mar 20 15:22:15 2015 +0000

    staging: sm750fb: Remove spinlock helper function
    
    This patch removes the unnecessary spinlock helper function and instead
    calls spin_lock and spin_unlock directly.
    
    This does *not* resolve sparse warnings about context imbalances but these are
    spurious.
    
    Signed-off-by: Lorenzo Stoakes <lstoakes@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 402bf9b0a1a2..4074375441c8 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -56,23 +56,6 @@ static char * g_settings = NULL;
 static int g_dualview;
 static char * g_option = NULL;
 
-/* if not use spin_lock,system will die if user load driver
- * and immediatly unload driver frequently (dual)*/
-static inline void myspin_lock(spinlock_t * sl){
-	struct lynx_share * share;
-	share = container_of(sl,struct lynx_share,slock);
-	if(share->dual){
-		spin_lock(sl);
-	}
-}
-
-static inline void myspin_unlock(spinlock_t * sl){
-	struct lynx_share * share;
-	share = container_of(sl,struct lynx_share,slock);
-	if(share->dual){
-		spin_unlock(sl);
-	}
-}
 static const struct fb_videomode lynx750_ext[] = {
 	/*  	1024x600-60 VESA 	[1.71:1]	*/
 	{NULL,  60, 1024, 600, 20423, 144,  40, 18, 1, 104, 3,
@@ -209,13 +192,21 @@ static void lynxfb_ops_fillrect(struct fb_info* info,const struct fb_fillrect* r
 	color = (Bpp == 1)?region->color:((u32*)info->pseudo_palette)[region->color];
 	rop = ( region->rop != ROP_COPY ) ? HW_ROP2_XOR:HW_ROP2_COPY;
 
-	myspin_lock(&share->slock);
+	/*
+	 * If not use spin_lock,system will die if user load driver
+	 * and immediatly unload driver frequently (dual)
+	 */
+	if (share->dual)
+		spin_lock(&share->slock);
+
 	share->accel.de_fillrect(&share->accel,
 							base,pitch,Bpp,
 							region->dx,region->dy,
 							region->width,region->height,
 							color,rop);
-	myspin_unlock(&share->slock);
+
+	if (share->dual)
+		spin_unlock(&share->slock);
 }
 
 static void lynxfb_ops_copyarea(struct fb_info * info,const struct fb_copyarea * region)
@@ -233,12 +224,20 @@ static void lynxfb_ops_copyarea(struct fb_info * info,const struct fb_copyarea *
 	pitch = info->fix.line_length;
 	Bpp = info->var.bits_per_pixel >> 3;
 
-	myspin_lock(&share->slock);
+	/*
+	 * If not use spin_lock, system will die if user load driver
+	 * and immediatly unload driver frequently (dual)
+	 */
+	if (share->dual)
+		spin_lock(&share->slock);
+
 	share->accel.de_copyarea(&share->accel,
 							base,pitch,region->sx,region->sy,
 							base,pitch,Bpp,region->dx,region->dy,
 							region->width,region->height,HW_ROP2_COPY);
-	myspin_unlock(&share->slock);
+
+	if (share->dual)
+		spin_unlock(&share->slock);
 }
 
 static void lynxfb_ops_imageblit(struct fb_info*info,const struct fb_image* image)
@@ -272,14 +271,22 @@ static void lynxfb_ops_imageblit(struct fb_info*info,const struct fb_image* imag
 	}
 	return;
 _do_work:
-	myspin_lock(&share->slock);
+	/*
+	 * If not use spin_lock, system will die if user load driver
+	 * and immediatly unload driver frequently (dual)
+	 */
+	if (share->dual)
+		spin_lock(&share->slock);
+
 	share->accel.de_imageblit(&share->accel,
 					image->data,image->width>>3,0,
 					base,pitch,Bpp,
 					image->dx,image->dy,
 					image->width,image->height,
 					fgcol,bgcol,HW_ROP2_COPY);
-	myspin_unlock(&share->slock);
+
+	if (share->dual)
+		spin_unlock(&share->slock);
 }
 
 static int lynxfb_ops_pan_display(struct fb_var_screeninfo *var,

commit 3de08a2d14ff8c771b5f806d6186b4601b770f6f
Author: Lorenzo Stoakes <lstoakes@gmail.com>
Date:   Fri Mar 20 15:22:11 2015 +0000

    staging: sm750fb: Use memset_io instead of memset
    
    This patch takes into account that cursor->vstart, crtc->vScreen and
    share->pvMem are pointers to memory-mapped I/O and thus we should use memset_io
    to make this explicit. In addition, some architectures require special treatment
    of memory-mapped I/O so the previous code could actually break without this
    change.
    
    This fixes the following sparse warnings:-
    
    drivers/staging/sm750fb/sm750.c:489:17: warning: incorrect type in argument 1 (different address spaces)
    drivers/staging/sm750fb/sm750.c:490:17: warning: incorrect type in argument 1 (different address spaces)
    drivers/staging/sm750fb/sm750.c:501:17: warning: incorrect type in argument 1 (different address spaces)
    drivers/staging/sm750fb/sm750.c:502:17: warning: incorrect type in argument 1 (different address spaces)
    drivers/staging/sm750fb/sm750.c:833:5: warning: incorrect type in argument 1 (different address spaces)
    drivers/staging/sm750fb/sm750.c:1154:9: warning: incorrect type in argument 1 (different address spaces)
    
    Signed-off-by: Lorenzo Stoakes <lstoakes@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index a7b1b9c50239..402bf9b0a1a2 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -486,8 +486,8 @@ static int lynxfb_resume(struct pci_dev* pdev)
 		par = info->par;
 		crtc = &par->crtc;
 		cursor = &crtc->cursor;
-		memset(cursor->vstart, 0x0, cursor->size);
-		memset(crtc->vScreen,0x0,crtc->vidmem_size);
+		memset_io(cursor->vstart, 0x0, cursor->size);
+		memset_io(crtc->vScreen, 0x0, crtc->vidmem_size);
 		lynxfb_ops_set_par(info);
 		fb_set_suspend(info, 0);
 	}
@@ -498,8 +498,8 @@ static int lynxfb_resume(struct pci_dev* pdev)
 		par = info->par;
 		crtc = &par->crtc;
 		cursor = &crtc->cursor;
-		memset(cursor->vstart, 0x0, cursor->size);
-		memset(crtc->vScreen,0x0,crtc->vidmem_size);
+		memset_io(cursor->vstart, 0x0, cursor->size);
+		memset_io(crtc->vScreen, 0x0, crtc->vidmem_size);
 		lynxfb_ops_set_par(info);
 		fb_set_suspend(info, 0);
 	}
@@ -830,7 +830,7 @@ static int lynxfb_set_fbinfo(struct fb_info* info,int index)
 
 
     crtc->cursor.share = share;
-    memset(crtc->cursor.vstart, 0, crtc->cursor.size);
+	memset_io(crtc->cursor.vstart, 0, crtc->cursor.size);
     if(!g_hwcursor){
         lynxfb_ops.fb_cursor = NULL;
         crtc->cursor.disable(&crtc->cursor);
@@ -1151,7 +1151,7 @@ static int lynxfb_pci_probe(struct pci_dev * pdev,
 	}
 #endif
 
-	memset(share->pvMem,0,share->vidmem_size);
+	memset_io(share->pvMem, 0, share->vidmem_size);
 
 	pr_info("sm%3x mmio address = %p\n",share->devid,share->pvReg);
 

commit b30edfcd04b5ffdb6b36a5b36a37d911222b9d37
Author: Supriya Karanth <iskaranth@gmail.com>
Date:   Thu Mar 12 13:26:21 2015 +0900

    staging: sm750fb: remove intialization of static ints
    
    static ints are initialized to 0 by the compiler.
    Explicit initialization is not necessary.
    
    Found by checkpatch.pl - ERROR: do not initialise statics to 0 or NULL
    
    changes made using coccinelle script:
    @@
    type T;
    identifier var;
    @@
    static T var
    - =0
    ;
    
    Signed-off-by: Supriya Karanth <iskaranth@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 23d67b3e5e2f..a7b1b9c50239 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -46,14 +46,14 @@ typedef int (*PROC_SPEC_INITHW)(struct lynx_share*,struct pci_dev*);
 
 /* common var for all device */
 static int g_hwcursor = 1;
-static int g_noaccel = 0;
+static int g_noaccel;
 #ifdef CONFIG_MTRR
-static int g_nomtrr  = 0;
+static int g_nomtrr;
 #endif
 static const char * g_fbmode[] = {NULL,NULL};
 static const char * g_def_fbmode = "800x600-16@60";
 static char * g_settings = NULL;
-static int g_dualview = 0;
+static int g_dualview;
 static char * g_option = NULL;
 
 /* if not use spin_lock,system will die if user load driver

commit d6b0d6de1d2821dc0dd44b33fbe2b41e5ecac430
Author: Ioana Ciornei <ciorneiioana@gmail.com>
Date:   Wed Mar 11 04:35:04 2015 +0200

    staging: sm750: Fix switch-case indentation
    
    Remove switch cases indentation in order to follow the Linux coding style.
    
    Signed-off-by: Ioana Ciornei <ciorneiioana@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index aa0888c232b9..23d67b3e5e2f 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -334,41 +334,41 @@ static int lynxfb_ops_set_par(struct fb_info * info)
 	 * */
 
 	switch(var->bits_per_pixel){
-		case 8:
-			fix->visual = FB_VISUAL_PSEUDOCOLOR;
-			var->red.offset = 0;
-			var->red.length = 8;
-			var->green.offset = 0;
-			var->green.length = 8;
-			var->blue.offset = 0;
-			var->blue.length = 8;
-			var->transp.length = 0;
-			var->transp.offset = 0;
-			break;
-		case 16:
-			var->red.offset = 11;
-			var->red.length = 5;
-			var->green.offset = 5;
-			var->green.length = 6;
-			var->blue.offset = 0;
-			var->blue.length = 5;
-			var->transp.length = 0;
-			var->transp.offset = 0;
-			fix->visual = FB_VISUAL_TRUECOLOR;
-			break;
-		case 24:
-		case 32:
-			var->red.offset = 16;
-			var->red.length = 8;
-			var->green.offset = 8;
-			var->green.length = 8;
-			var->blue.offset = 0 ;
-			var->blue.length = 8;
-			fix->visual = FB_VISUAL_TRUECOLOR;
-			break;
-		default:
-			ret = -EINVAL;
-			break;
+	case 8:
+		fix->visual = FB_VISUAL_PSEUDOCOLOR;
+		var->red.offset = 0;
+		var->red.length = 8;
+		var->green.offset = 0;
+		var->green.length = 8;
+		var->blue.offset = 0;
+		var->blue.length = 8;
+		var->transp.length = 0;
+		var->transp.offset = 0;
+		break;
+	case 16:
+		var->red.offset = 11;
+		var->red.length = 5;
+		var->green.offset = 5;
+		var->green.length = 6;
+		var->blue.offset = 0;
+		var->blue.length = 5;
+		var->transp.length = 0;
+		var->transp.offset = 0;
+		fix->visual = FB_VISUAL_TRUECOLOR;
+		break;
+	case 24:
+	case 32:
+		var->red.offset = 16;
+		var->red.length = 8;
+		var->green.offset = 8;
+		var->green.length = 8;
+		var->blue.offset = 0 ;
+		var->blue.length = 8;
+		fix->visual = FB_VISUAL_TRUECOLOR;
+		break;
+	default:
+		ret = -EINVAL;
+		break;
 	}
 	var->height = var->width = -1;
 	var->accel_flags = 0;/*FB_ACCELF_TEXT;*/
@@ -533,53 +533,53 @@ static int lynxfb_ops_check_var(struct fb_var_screeninfo* var,struct fb_info* in
 
 
 	switch(var->bits_per_pixel){
-		case 8:
-		case 16:
-		case 24: /* support 24 bpp for only lynx712/722/720 */
-		case 32:
-			break;
-		default:
-			pr_err("bpp %d not supported\n",var->bits_per_pixel);
-			ret = -EINVAL;
-			goto exit;
+	case 8:
+	case 16:
+	case 24: /* support 24 bpp for only lynx712/722/720 */
+	case 32:
+		break;
+	default:
+		pr_err("bpp %d not supported\n",var->bits_per_pixel);
+		ret = -EINVAL;
+		goto exit;
 	}
 
 	switch(var->bits_per_pixel){
-		case 8:
-			info->fix.visual = FB_VISUAL_PSEUDOCOLOR;
-			var->red.offset = 0;
-			var->red.length = 8;
-			var->green.offset = 0;
-			var->green.length = 8;
-			var->blue.offset = 0;
-			var->blue.length = 8;
-			var->transp.length = 0;
-			var->transp.offset = 0;
-			break;
-		case 16:
-			var->red.offset = 11;
-			var->red.length = 5;
-			var->green.offset = 5;
-			var->green.length = 6;
-			var->blue.offset = 0;
-			var->blue.length = 5;
-			var->transp.length = 0;
-			var->transp.offset = 0;
-			info->fix.visual = FB_VISUAL_TRUECOLOR;
-			break;
-		case 24:
-		case 32:
-			var->red.offset = 16;
-			var->red.length = 8;
-			var->green.offset = 8;
-			var->green.length = 8;
-			var->blue.offset = 0 ;
-			var->blue.length = 8;
-			info->fix.visual = FB_VISUAL_TRUECOLOR;
-			break;
-		default:
-			ret = -EINVAL;
-			break;
+	case 8:
+		info->fix.visual = FB_VISUAL_PSEUDOCOLOR;
+		var->red.offset = 0;
+		var->red.length = 8;
+		var->green.offset = 0;
+		var->green.length = 8;
+		var->blue.offset = 0;
+		var->blue.length = 8;
+		var->transp.length = 0;
+		var->transp.offset = 0;
+		break;
+	case 16:
+		var->red.offset = 11;
+		var->red.length = 5;
+		var->green.offset = 5;
+		var->green.length = 6;
+		var->blue.offset = 0;
+		var->blue.length = 5;
+		var->transp.length = 0;
+		var->transp.offset = 0;
+		info->fix.visual = FB_VISUAL_TRUECOLOR;
+		break;
+	case 24:
+	case 32:
+		var->red.offset = 16;
+		var->red.length = 8;
+		var->green.offset = 8;
+		var->green.length = 8;
+		var->blue.offset = 0 ;
+		var->blue.length = 8;
+		info->fix.visual = FB_VISUAL_TRUECOLOR;
+		break;
+	default:
+		ret = -EINVAL;
+		break;
 	}
 	var->height = var->width = -1;
 	var->accel_flags = 0;/*FB_ACCELF_TEXT;*/

commit a99e334da16ce81163db0e47ec22469a79a91b72
Author: Madhusudhanan Ravindran <mravindran04@gmail.com>
Date:   Tue Mar 10 23:07:39 2015 +0530

    staging: sm750fb: Use kzalloc rather than kmalloc followed by memset with 0
    
    The semantic patch that makes this change is available
    in scriptcoccinelle/api/alloc/kzalloc-simple.cocci.
    
    Signed-off-by: Madhusudhanan Ravindran <mravindran04@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 5532a28e6030..aa0888c232b9 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -1278,11 +1278,10 @@ static int __init lynxfb_setup(char * options)
 	pr_info("options:%s\n",options);
 
 	len = strlen(options) + 1;
-	g_settings = kmalloc(len,GFP_KERNEL);
+	g_settings = kzalloc(len, GFP_KERNEL);
 	if(!g_settings)
 		return -ENOMEM;
 
-	memset(g_settings,0,len);
 	tmp = g_settings;
 
 	/* 	Notes:

commit 0fa96e39279988bde14cb6cf6cd0440185f2dae4
Author: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
Date:   Tue Mar 10 22:46:57 2015 +0530

    staging: sm750fb: correct integer comparison
    
    fixed the build warning about comparison of pointer and integer.
    end of string was being compared to NULL.
    
    Signed-off-by: Sudip Mukherjee <sudip@vectorindia.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 021b863dda95..5532a28e6030 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -1000,7 +1000,7 @@ static void sm750fb_setup(struct lynx_share * share,char * src)
             goto NO_PARAM;
         }
 
-        while((opt = strsep(&src,":")) != NULL && *opt != NULL){
+        while((opt = strsep(&src,":")) != NULL && *opt != 0){
 			pr_err("opt=%s\n",opt);
 			pr_err("src=%s\n",src);
 

commit 06a1bf813607ceb836d2b4b7c415a187253ea4ad
Author: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
Date:   Tue Mar 10 22:46:56 2015 +0530

    staging: sm750fb: fix mixed declarations
    
    we were getting build warning about mixed declaration. the variable
    is now declared at the beginning of the block.
    
    Signed-off-by: Sudip Mukherjee <sudip@vectorindia.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 87029b61ce83..021b863dda95 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -1175,6 +1175,7 @@ static int lynxfb_pci_probe(struct pci_dev * pdev,
 		else
 		{
 			struct lynxfb_par * par;
+			int errno;
 			pr_info("framebuffer #%d alloc okay\n",fbidx);
 			share->fbinfo[fbidx] = info[fbidx];
 			par = info[fbidx]->par;
@@ -1191,7 +1192,7 @@ static int lynxfb_pci_probe(struct pci_dev * pdev,
 
 			/* register frame buffer*/
 			pr_info("Ready to register framebuffer #%d.\n",fbidx);
-			int errno = register_framebuffer(info[fbidx]);
+			errno = register_framebuffer(info[fbidx]);
 			if (errno < 0) {
 				pr_err("Failed to register fb_info #%d. err %d\n",fbidx, errno);
 				if(fbidx == 0)

commit 4933b29bd4e007a0544c97ea47fa0a091c5fec53
Author: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
Date:   Tue Mar 10 22:46:52 2015 +0530

    staging: sm750fb: remove unused functions
    
    removed the functions which were not used anywhere.
    it has been build tested also confirmed with git grep that there is
    no other reference of these functions.
    
    Signed-off-by: Sudip Mukherjee <sudip@vectorindia.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 8c260ee5597d..87029b61ce83 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -510,69 +510,6 @@ static int lynxfb_resume(struct pci_dev* pdev)
 }
 #endif
 
-static int lynxfb_ops_mmap(struct fb_info * info, struct vm_area_struct * vma)
-{
-	unsigned long off;
-	unsigned long start;
-	u32 len;
-	struct file *file;
-	
-	file = vma->vm_file;
-	
-	if (!info)
-		return -ENODEV;
-	if (vma->vm_pgoff > (~0UL >> PAGE_SHIFT))
-		return -EINVAL;
-	off = vma->vm_pgoff << PAGE_SHIFT;
-	printk("lynxfb mmap pgoff: %lx\n", vma->vm_pgoff);
-	printk("lynxfb mmap off 1: %lx\n", off);
-	
-	/* frame buffer memory */
-	start = info->fix.smem_start;
-	len = PAGE_ALIGN((start & ~PAGE_MASK) + info->fix.smem_len);
-	
-	printk("lynxfb mmap start 1: %lx\n", start);
-	printk("lynxfb mmap len 1: %x\n", len);
-	
-	if (off >= len) {
-		/* memory mapped io */
-		off -= len;
-		printk("lynxfb mmap off 2: %lx\n", off);
-		if (info->var.accel_flags) {
-			printk("lynxfb mmap accel flags true");
-			return -EINVAL;
-		}
-		start = info->fix.mmio_start;
-		len = PAGE_ALIGN((start & ~PAGE_MASK) + info->fix.mmio_len);
-		
-		printk("lynxfb mmap start 2: %lx\n", start);
-		printk("lynxfb mmap len 2: %x\n", len);
-	}
-	start &= PAGE_MASK;
-	printk("lynxfb mmap start 3: %lx\n", start);
-	printk("lynxfb mmap vm start: %lx\n", vma->vm_start);
-	printk("lynxfb mmap vm end: %lx\n", vma->vm_end);
-	printk("lynxfb mmap len: %x\n", len);
-	printk("lynxfb mmap off: %lx\n", off);
-	if ((vma->vm_end - vma->vm_start + off) > len)
-	{
-		return -EINVAL;
-	}
-	off += start;
-	printk("lynxfb mmap off 3: %lx\n", off);
-	vma->vm_pgoff = off >> PAGE_SHIFT;
-	/* This is an IO map - tell maydump to skip this VMA */
-	vma->vm_flags |= VM_IO | VM_DONTEXPAND | VM_DONTDUMP;
-	vma->vm_page_prot = vm_get_page_prot(vma->vm_flags);
-	fb_pgprotect(file, vma, off);
-	printk("lynxfb mmap off 4: %lx\n", off);
-	printk("lynxfb mmap pgprot: %lx\n", (unsigned long) pgprot_val(vma->vm_page_prot));
-	if (io_remap_pfn_range(vma, vma->vm_start, off >> PAGE_SHIFT,
-			     vma->vm_end - vma->vm_start, vma->vm_page_prot))
-		return -EAGAIN;
-	return 0;
-}
-
 static int lynxfb_ops_check_var(struct fb_var_screeninfo* var,struct fb_info* info)
 {
 	struct lynxfb_par * par;
@@ -824,8 +761,6 @@ static struct fb_ops lynxfb_ops={
 	.fb_set_par = lynxfb_ops_set_par,
 	.fb_setcolreg = lynxfb_ops_setcolreg,
 	.fb_blank = lynxfb_ops_blank,
-	/*.fb_mmap = lynxfb_ops_mmap,*/
-	/* will be hooked by hardware */
 	.fb_fillrect = cfb_fillrect,
 	.fb_imageblit = cfb_imageblit,
 	.fb_copyarea = cfb_copyarea,

commit 5c7784b9d64027145ce4dee2b488c8c11af732cc
Author: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
Date:   Tue Mar 10 14:15:39 2015 +0530

    staging: sm750fb: fix build failure
    
    for powerpc-allyesconfig build failed with an error of g_option
    undeclared. we will get this error on all architecture if MODULE is
    not defined. fixed the declaration of g_option.
    
    Reported-by: Stephen Rothwell <sfr@canb.auug.org.au>
    Signed-off-by: Sudip Mukherjee <sudip@vectorindia.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 476dc5c02dc2..8c260ee5597d 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -54,9 +54,7 @@ static const char * g_fbmode[] = {NULL,NULL};
 static const char * g_def_fbmode = "800x600-16@60";
 static char * g_settings = NULL;
 static int g_dualview = 0;
-#ifdef MODULE
 static char * g_option = NULL;
-#endif
 
 /* if not use spin_lock,system will die if user load driver
  * and immediatly unload driver frequently (dual)*/

commit 848f2fce7b2713d853eaa7f32b31bb9ffe89e2ce
Author: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
Date:   Tue Mar 10 14:15:38 2015 +0530

    staging: sm750fb: fix undeclared function
    
    kbuild test robot reported that for microblaze-allyesconfig
    chan_to_field() and lynxfb_ops_set_par() were not defined. These two
    functions were defined under CONFIG_PM, so for any archtecture if
    CONFIG_PM is not defined we will have this error.
    
    while moving the lynxfb_suspend() function some very obvious
    checkpatch errors, like space after comma, space after if, space
    before opening brace, were taken care of.
    
    Reported-by: kbuild test robot <fengguang.wu@intel.com>
    Signed-off-by: Sudip Mukherjee <sudip@vectorindia.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 753869e3686d..476dc5c02dc2 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -303,62 +303,6 @@ static int lynxfb_ops_pan_display(struct fb_var_screeninfo *var,
     return ret;
 }
 
-
-
-
-#ifdef CONFIG_PM
-static int lynxfb_suspend(struct pci_dev * pdev,pm_message_t mesg)
-{
-	struct fb_info * info;
-	struct lynx_share * share;
-	int ret;
-	
-
-	if(mesg.event == pdev->dev.power.power_state.event)
-		return 0;
-
-	ret = 0;
-	share = pci_get_drvdata(pdev);
-	switch (mesg.event) {
-	case PM_EVENT_FREEZE:
-	case PM_EVENT_PRETHAW:
-		pdev->dev.power.power_state = mesg;
-		return 0;
-	}
-
-	console_lock();
-	if (mesg.event & PM_EVENT_SLEEP) {
-		info = share->fbinfo[0];
-		if(info)
-			fb_set_suspend(info, 1);/* 1 means do suspend*/
-
-		info = share->fbinfo[1];
-		if(info)
-			fb_set_suspend(info, 1);/* 1 means do suspend*/
-
-		ret = pci_save_state(pdev);
-		if(ret){
-			pr_err("error:%d occured in pci_save_state\n",ret);
-			return ret;
-		}
-
-		/* set chip to sleep mode	*/
-		if(share->suspend)
-			(*share->suspend)(share);
-
-		pci_disable_device(pdev);
-		ret = pci_set_power_state(pdev,pci_choose_state(pdev,mesg));
-		if(ret){
-			pr_err("error:%d occured in pci_set_power_state\n",ret);
-			return ret;
-		}
-	}
-
-	pdev->dev.power.power_state = mesg;
-	console_unlock();
-	return ret;
-}
-
 static int lynxfb_ops_set_par(struct fb_info * info)
 {
 	struct lynxfb_par * par;
@@ -369,7 +313,6 @@ static int lynxfb_ops_set_par(struct fb_info * info)
 	struct fb_fix_screeninfo * fix;
 	int ret;
 	unsigned int line_length;
-	
 
 	if(!info)
 		return -EINVAL;
@@ -441,6 +384,7 @@ static int lynxfb_ops_set_par(struct fb_info * info)
 		ret = output->proc_setMode(output,var,fix);
 	return ret;
 }
+
 static inline unsigned int chan_to_field(unsigned int chan,struct fb_bitfield * bf)
 {
 	chan &= 0xffff;
@@ -448,6 +392,58 @@ static inline unsigned int chan_to_field(unsigned int chan,struct fb_bitfield *
 	return chan << bf->offset;
 }
 
+#ifdef CONFIG_PM
+static int lynxfb_suspend(struct pci_dev *pdev, pm_message_t mesg)
+{
+	struct fb_info *info;
+	struct lynx_share *share;
+	int ret;
+
+	if (mesg.event == pdev->dev.power.power_state.event)
+		return 0;
+
+	ret = 0;
+	share = pci_get_drvdata(pdev);
+	switch (mesg.event) {
+	case PM_EVENT_FREEZE:
+	case PM_EVENT_PRETHAW:
+		pdev->dev.power.power_state = mesg;
+		return 0;
+	}
+
+	console_lock();
+	if (mesg.event & PM_EVENT_SLEEP) {
+		info = share->fbinfo[0];
+		if (info)
+			/* 1 means do suspend*/
+			fb_set_suspend(info, 1);
+		info = share->fbinfo[1];
+		if (info)
+			/* 1 means do suspend*/
+			fb_set_suspend(info, 1);
+
+		ret = pci_save_state(pdev);
+		if (ret) {
+			pr_err("error:%d occurred in pci_save_state\n", ret);
+			return ret;
+		}
+
+		/* set chip to sleep mode*/
+		if (share->suspend)
+			(*share->suspend)(share);
+
+		pci_disable_device(pdev);
+		ret = pci_set_power_state(pdev, pci_choose_state(pdev, mesg));
+		if (ret) {
+			pr_err("error:%d occurred in pci_set_power_state\n", ret);
+			return ret;
+		}
+	}
+
+	pdev->dev.power.power_state = mesg;
+	console_unlock();
+	return ret;
+}
 
 static int lynxfb_resume(struct pci_dev* pdev)
 {

commit e936351a611bca2ebd37634d81d168e6585e3634
Author: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
Date:   Tue Mar 10 14:15:35 2015 +0530

    staging: sm750fb: wrong type for print
    
    mention correct format specifier while printing.
    fixes all the build warnings about incorrect argument type while
    printing.
    since this is a framebuffer device and it should follow what the
    framebuffer layer is suggesting in struct fb_fix_screeninfo at
    smem_start and mmio_start, so accordingly changed the datatypes of
    vidmem_start, vidreg_start, vidmem_size and vidreg_size.
    
    Signed-off-by: Sudip Mukherjee <sudip@vectorindia.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
index 520c69e3ab74..753869e3686d 100644
--- a/drivers/staging/sm750fb/sm750.c
+++ b/drivers/staging/sm750fb/sm750.c
@@ -530,20 +530,20 @@ static int lynxfb_ops_mmap(struct fb_info * info, struct vm_area_struct * vma)
 	if (vma->vm_pgoff > (~0UL >> PAGE_SHIFT))
 		return -EINVAL;
 	off = vma->vm_pgoff << PAGE_SHIFT;
-	printk("lynxfb mmap pgoff: %x\n", vma->vm_pgoff);
-	printk("lynxfb mmap off 1: %x\n", off);
+	printk("lynxfb mmap pgoff: %lx\n", vma->vm_pgoff);
+	printk("lynxfb mmap off 1: %lx\n", off);
 	
 	/* frame buffer memory */
 	start = info->fix.smem_start;
 	len = PAGE_ALIGN((start & ~PAGE_MASK) + info->fix.smem_len);
 	
-	printk("lynxfb mmap start 1: %x\n", start);
+	printk("lynxfb mmap start 1: %lx\n", start);
 	printk("lynxfb mmap len 1: %x\n", len);
 	
 	if (off >= len) {
 		/* memory mapped io */
 		off -= len;
-		printk("lynxfb mmap off 2: %x\n", off);
+		printk("lynxfb mmap off 2: %lx\n", off);
 		if (info->var.accel_flags) {
 			printk("lynxfb mmap accel flags true");
 			return -EINVAL;
@@ -551,28 +551,28 @@ static int lynxfb_ops_mmap(struct fb_info * info, struct vm_area_struct * vma)
 		start = info->fix.mmio_start;
 		len = PAGE_ALIGN((start & ~PAGE_MASK) + info->fix.mmio_len);
 		
-		printk("lynxfb mmap start 2: %x\n", start);
+		printk("lynxfb mmap start 2: %lx\n", start);
 		printk("lynxfb mmap len 2: %x\n", len);
 	}
 	start &= PAGE_MASK;
-	printk("lynxfb mmap start 3: %x\n", start);
-	printk("lynxfb mmap vm start: %x\n", vma->vm_start);
-	printk("lynxfb mmap vm end: %x\n", vma->vm_end);
+	printk("lynxfb mmap start 3: %lx\n", start);
+	printk("lynxfb mmap vm start: %lx\n", vma->vm_start);
+	printk("lynxfb mmap vm end: %lx\n", vma->vm_end);
 	printk("lynxfb mmap len: %x\n", len);
-	printk("lynxfb mmap off: %x\n", off);
+	printk("lynxfb mmap off: %lx\n", off);
 	if ((vma->vm_end - vma->vm_start + off) > len)
 	{
 		return -EINVAL;
 	}
 	off += start;
-	printk("lynxfb mmap off 3: %x\n", off);
+	printk("lynxfb mmap off 3: %lx\n", off);
 	vma->vm_pgoff = off >> PAGE_SHIFT;
 	/* This is an IO map - tell maydump to skip this VMA */
 	vma->vm_flags |= VM_IO | VM_DONTEXPAND | VM_DONTDUMP;
 	vma->vm_page_prot = vm_get_page_prot(vma->vm_flags);
 	fb_pgprotect(file, vma, off);
-	printk("lynxfb mmap off 4: %x\n", off);
-	printk("lynxfb mmap pgprot: %x\n", vma->vm_page_prot);
+	printk("lynxfb mmap off 4: %lx\n", off);
+	printk("lynxfb mmap pgprot: %lx\n", (unsigned long) pgprot_val(vma->vm_page_prot));
 	if (io_remap_pfn_range(vma, vma->vm_start, off >> PAGE_SHIFT,
 			     vma->vm_end - vma->vm_start, vma->vm_page_prot))
 		return -EAGAIN;

commit 81dee67e215b23f0c98182eece122b906d35765a
Author: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
Date:   Tue Mar 3 16:21:06 2015 +0530

    staging: sm750fb: add sm750 to staging
    
    sm750 of Silicon Motion is pci-e display controller device and has
    features like dual display and 2D acceleration. This patch adds the
    driver to staging.
    
    Signed-off-by: Sudip Mukherjee <sudip@vectorindia.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/sm750fb/sm750.c b/drivers/staging/sm750fb/sm750.c
new file mode 100644
index 000000000000..520c69e3ab74
--- /dev/null
+++ b/drivers/staging/sm750fb/sm750.c
@@ -0,0 +1,1451 @@
+#include<linux/kernel.h>
+#include<linux/module.h>
+#include<linux/errno.h>
+#include<linux/string.h>
+#include<linux/mm.h>
+#include<linux/slab.h>
+#include<linux/delay.h>
+#include<linux/fb.h>
+#include<linux/ioport.h>
+#include<linux/init.h>
+#include<linux/pci.h>
+#include<linux/mm_types.h>
+#include<linux/vmalloc.h>
+#include<linux/pagemap.h>
+#include<linux/screen_info.h>
+#include<linux/vmalloc.h>
+#include<linux/pagemap.h>
+#include <linux/console.h>
+#ifdef CONFIG_MTRR
+#include <asm/mtrr.h>
+#endif
+#include <asm/fb.h>
+#include "sm750.h"
+#include "sm750_hw.h"
+#include "sm750_accel.h"
+#include "sm750_cursor.h"
+
+#include "modedb.h"
+
+int smi_indent = 0;
+
+
+/*
+#ifdef __BIG_ENDIAN
+ssize_t lynxfb_ops_write(struct fb_info *info, const char __user *buf,
+ 	    size_t count, loff_t *ppos);
+ssize_t lynxfb_ops_read(struct fb_info *info, char __user *buf,
+			   size_t count, loff_t *ppos);
+#endif
+ */
+
+typedef void (*PROC_SPEC_SETUP)(struct lynx_share*,char *);
+typedef int (*PROC_SPEC_MAP)(struct lynx_share*,struct pci_dev*);
+typedef int (*PROC_SPEC_INITHW)(struct lynx_share*,struct pci_dev*);
+
+
+/* common var for all device */
+static int g_hwcursor = 1;
+static int g_noaccel = 0;
+#ifdef CONFIG_MTRR
+static int g_nomtrr  = 0;
+#endif
+static const char * g_fbmode[] = {NULL,NULL};
+static const char * g_def_fbmode = "800x600-16@60";
+static char * g_settings = NULL;
+static int g_dualview = 0;
+#ifdef MODULE
+static char * g_option = NULL;
+#endif
+
+/* if not use spin_lock,system will die if user load driver
+ * and immediatly unload driver frequently (dual)*/
+static inline void myspin_lock(spinlock_t * sl){
+	struct lynx_share * share;
+	share = container_of(sl,struct lynx_share,slock);
+	if(share->dual){
+		spin_lock(sl);
+	}
+}
+
+static inline void myspin_unlock(spinlock_t * sl){
+	struct lynx_share * share;
+	share = container_of(sl,struct lynx_share,slock);
+	if(share->dual){
+		spin_unlock(sl);
+	}
+}
+static const struct fb_videomode lynx750_ext[] = {
+	/*  	1024x600-60 VESA 	[1.71:1]	*/
+	{NULL,  60, 1024, 600, 20423, 144,  40, 18, 1, 104, 3,
+	FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
+
+	/* 	1024x600-70 VESA */
+	{NULL,  70, 1024, 600, 17211, 152,  48, 21, 1, 104, 3,
+	FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
+
+	/*  	1024x600-75 VESA */
+	{NULL,  75, 1024, 600, 15822, 160,  56, 23, 1, 104, 3,
+	FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
+
+	/*  	1024x600-85 VESA */
+	{NULL,  85, 1024, 600, 13730, 168,  56, 26, 1, 112, 3,
+	FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
+
+	/*	720x480	*/
+	{NULL, 60,  720,  480,  37427, 88,   16, 13, 1,   72,  3,
+	FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
+
+	/*	1280x720		[1.78:1]	*/
+	{NULL, 60,  1280,  720,  13426, 162, 86, 22, 1,  136, 3,
+	FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT,FB_VMODE_NONINTERLACED},
+
+	/* 1280x768@60 */
+	{NULL,60,1280,768,12579,192,64,20,3,128,7,
+	FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT,FB_VMODE_NONINTERLACED},
+
+	{NULL,60,1360,768,11804,208,64,23,1,144,3,
+	FB_SYNC_HOR_HIGH_ACT|FB_VMODE_NONINTERLACED},
+
+	/*	1360 x 768	[1.77083:1]	*/
+	{NULL,  60, 1360, 768, 11804, 208,  64, 23, 1, 144, 3,
+	FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
+
+	/*	1368 x 768      [1.78:1]	*/
+	{NULL, 60,  1368,  768,  11647, 216, 72, 23, 1,  144, 3,
+	FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
+
+	/* 	1440 x 900		[16:10]	*/
+	{NULL, 60, 1440, 900, 9392, 232, 80, 28, 1, 152, 3,
+	FB_SYNC_VERT_HIGH_ACT,FB_VMODE_NONINTERLACED},
+
+	/*	1440x960		[15:10]	*/
+	{NULL, 60, 1440, 960, 8733, 240, 88, 30, 1, 152, 3,
+	FB_SYNC_HOR_HIGH_ACT | FB_SYNC_VERT_HIGH_ACT, FB_VMODE_NONINTERLACED},
+
+	/*	1920x1080	[16:9]	*/
+	{NULL, 60, 1920, 1080, 6734, 148, 88, 41, 1, 44, 3,
+	FB_SYNC_VERT_HIGH_ACT,FB_VMODE_NONINTERLACED},
+};
+
+
+
+
+/* no hardware cursor supported under version 2.6.10, kernel bug */
+static int lynxfb_ops_cursor(struct fb_info* info,struct fb_cursor* fbcursor)
+{
+	struct lynxfb_par * par;
+	struct lynxfb_crtc * crtc;
+	struct lynx_cursor * cursor;
+
+	par = info->par;
+	crtc = &par->crtc;
+	cursor = &crtc->cursor;
+
+	if(fbcursor->image.width > cursor->maxW ||
+		fbcursor->image.height > cursor->maxH ||
+		 fbcursor->image.depth > 1){
+		return -ENXIO;
+	}
+
+	cursor->disable(cursor);
+	if(fbcursor->set & FB_CUR_SETSIZE){
+		cursor->setSize(cursor,fbcursor->image.width,fbcursor->image.height);
+	}
+
+	if(fbcursor->set & FB_CUR_SETPOS){
+		cursor->setPos(cursor,fbcursor->image.dx - info->var.xoffset,
+								fbcursor->image.dy - info->var.yoffset);
+	}
+
+	if(fbcursor->set & FB_CUR_SETCMAP){
+		/* get the 16bit color of kernel means */
+		u16 fg,bg;
+		fg = ((info->cmap.red[fbcursor->image.fg_color] & 0xf800))|
+				((info->cmap.green[fbcursor->image.fg_color] & 0xfc00) >> 5)|
+				((info->cmap.blue[fbcursor->image.fg_color] & 0xf800) >> 11);
+
+		bg = ((info->cmap.red[fbcursor->image.bg_color] & 0xf800))|
+				((info->cmap.green[fbcursor->image.bg_color] & 0xfc00) >> 5)|
+				((info->cmap.blue[fbcursor->image.bg_color] & 0xf800) >> 11);
+
+		cursor->setColor(cursor,fg,bg);
+	}
+
+
+	if(fbcursor->set & (FB_CUR_SETSHAPE | FB_CUR_SETIMAGE))
+	{
+		cursor->setData(cursor,
+						fbcursor->rop,
+						fbcursor->image.data,
+						fbcursor->mask);
+	}
+
+	if(fbcursor->enable){
+		cursor->enable(cursor);
+	}
+
+	return 0;
+}
+
+static void lynxfb_ops_fillrect(struct fb_info* info,const struct fb_fillrect* region)
+{
+	struct lynxfb_par * par;
+	struct lynx_share * share;
+	unsigned int base,pitch,Bpp,rop;
+	u32 color;
+
+	if(info->state != FBINFO_STATE_RUNNING){
+		return;
+	}
+
+	par = info->par;
+	share = par->share;
+
+	/* each time 2d function begin to work,below three variable always need
+	 * be set, seems we can put them together in some place  */
+	base = par->crtc.oScreen;
+	pitch = info->fix.line_length;
+	Bpp = info->var.bits_per_pixel >> 3;
+
+	color = (Bpp == 1)?region->color:((u32*)info->pseudo_palette)[region->color];
+	rop = ( region->rop != ROP_COPY ) ? HW_ROP2_XOR:HW_ROP2_COPY;
+
+	myspin_lock(&share->slock);
+	share->accel.de_fillrect(&share->accel,
+							base,pitch,Bpp,
+							region->dx,region->dy,
+							region->width,region->height,
+							color,rop);
+	myspin_unlock(&share->slock);
+}
+
+static void lynxfb_ops_copyarea(struct fb_info * info,const struct fb_copyarea * region)
+{
+	struct lynxfb_par * par;
+	struct lynx_share * share;
+	unsigned int base,pitch,Bpp;
+
+	par = info->par;
+	share = par->share;
+
+	/* each time 2d function begin to work,below three variable always need
+	 * be set, seems we can put them together in some place  */
+	base = par->crtc.oScreen;
+	pitch = info->fix.line_length;
+	Bpp = info->var.bits_per_pixel >> 3;
+
+	myspin_lock(&share->slock);
+	share->accel.de_copyarea(&share->accel,
+							base,pitch,region->sx,region->sy,
+							base,pitch,Bpp,region->dx,region->dy,
+							region->width,region->height,HW_ROP2_COPY);
+	myspin_unlock(&share->slock);
+}
+
+static void lynxfb_ops_imageblit(struct fb_info*info,const struct fb_image* image)
+{
+	unsigned int base,pitch,Bpp;
+	unsigned int fgcol,bgcol;
+	struct lynxfb_par * par;
+	struct lynx_share * share;
+
+	par = info->par;
+	share = par->share;
+	/* each time 2d function begin to work,below three variable always need
+	 * be set, seems we can put them together in some place  */
+	base = par->crtc.oScreen;
+	pitch = info->fix.line_length;
+	Bpp = info->var.bits_per_pixel >> 3;
+
+	if(image->depth == 1){
+		if(info->fix.visual == FB_VISUAL_TRUECOLOR ||
+			info->fix.visual == FB_VISUAL_DIRECTCOLOR)
+		{
+			fgcol = ((u32*)info->pseudo_palette)[image->fg_color];
+			bgcol = ((u32*)info->pseudo_palette)[image->bg_color];
+		}
+		else
+		{
+			fgcol = image->fg_color;
+			bgcol = image->bg_color;
+		}
+		goto _do_work;
+	}
+	return;
+_do_work:
+	myspin_lock(&share->slock);
+	share->accel.de_imageblit(&share->accel,
+					image->data,image->width>>3,0,
+					base,pitch,Bpp,
+					image->dx,image->dy,
+					image->width,image->height,
+					fgcol,bgcol,HW_ROP2_COPY);
+	myspin_unlock(&share->slock);
+}
+
+static int lynxfb_ops_pan_display(struct fb_var_screeninfo *var,
+        struct fb_info *info)
+{
+    struct lynxfb_par * par;
+    struct lynxfb_crtc * crtc;
+    int ret;
+    
+
+    if(!info)
+        return -EINVAL;
+
+    ret = 0;
+    par = info->par;
+    crtc = &par->crtc;
+    ret = crtc->proc_panDisplay(crtc, var, info);
+
+    return ret;
+}
+
+
+
+
+#ifdef CONFIG_PM
+static int lynxfb_suspend(struct pci_dev * pdev,pm_message_t mesg)
+{
+	struct fb_info * info;
+	struct lynx_share * share;
+	int ret;
+	
+
+	if(mesg.event == pdev->dev.power.power_state.event)
+		return 0;
+
+	ret = 0;
+	share = pci_get_drvdata(pdev);
+	switch (mesg.event) {
+	case PM_EVENT_FREEZE:
+	case PM_EVENT_PRETHAW:
+		pdev->dev.power.power_state = mesg;
+		return 0;
+	}
+
+	console_lock();
+	if (mesg.event & PM_EVENT_SLEEP) {
+		info = share->fbinfo[0];
+		if(info)
+			fb_set_suspend(info, 1);/* 1 means do suspend*/
+
+		info = share->fbinfo[1];
+		if(info)
+			fb_set_suspend(info, 1);/* 1 means do suspend*/
+
+		ret = pci_save_state(pdev);
+		if(ret){
+			pr_err("error:%d occured in pci_save_state\n",ret);
+			return ret;
+		}
+
+		/* set chip to sleep mode	*/
+		if(share->suspend)
+			(*share->suspend)(share);
+
+		pci_disable_device(pdev);
+		ret = pci_set_power_state(pdev,pci_choose_state(pdev,mesg));
+		if(ret){
+			pr_err("error:%d occured in pci_set_power_state\n",ret);
+			return ret;
+		}
+	}
+
+	pdev->dev.power.power_state = mesg;
+	console_unlock();
+	return ret;
+}
+
+static int lynxfb_ops_set_par(struct fb_info * info)
+{
+	struct lynxfb_par * par;
+	struct lynx_share * share;
+	struct lynxfb_crtc * crtc;
+	struct lynxfb_output * output;
+	struct fb_var_screeninfo * var;
+	struct fb_fix_screeninfo * fix;
+	int ret;
+	unsigned int line_length;
+	
+
+	if(!info)
+		return -EINVAL;
+
+	ret = 0;
+	par = info->par;
+	share = par->share;
+	crtc = &par->crtc;
+	output = &par->output;
+	var = &info->var;
+	fix = &info->fix;
+
+	/* fix structur is not so FIX ... */
+	line_length = var->xres_virtual * var->bits_per_pixel / 8;
+	line_length = PADDING(crtc->line_pad,line_length);
+	fix->line_length = line_length;
+	pr_err("fix->line_length = %d\n",fix->line_length);
+
+	/* var->red,green,blue,transp are need to be set by driver
+	 * and these data should be set before setcolreg routine
+	 * */
+
+	switch(var->bits_per_pixel){
+		case 8:
+			fix->visual = FB_VISUAL_PSEUDOCOLOR;
+			var->red.offset = 0;
+			var->red.length = 8;
+			var->green.offset = 0;
+			var->green.length = 8;
+			var->blue.offset = 0;
+			var->blue.length = 8;
+			var->transp.length = 0;
+			var->transp.offset = 0;
+			break;
+		case 16:
+			var->red.offset = 11;
+			var->red.length = 5;
+			var->green.offset = 5;
+			var->green.length = 6;
+			var->blue.offset = 0;
+			var->blue.length = 5;
+			var->transp.length = 0;
+			var->transp.offset = 0;
+			fix->visual = FB_VISUAL_TRUECOLOR;
+			break;
+		case 24:
+		case 32:
+			var->red.offset = 16;
+			var->red.length = 8;
+			var->green.offset = 8;
+			var->green.length = 8;
+			var->blue.offset = 0 ;
+			var->blue.length = 8;
+			fix->visual = FB_VISUAL_TRUECOLOR;
+			break;
+		default:
+			ret = -EINVAL;
+			break;
+	}
+	var->height = var->width = -1;
+	var->accel_flags = 0;/*FB_ACCELF_TEXT;*/
+
+	if(ret){
+		pr_err("pixel bpp format not satisfied\n.");
+		return ret;
+	}
+	ret = crtc->proc_setMode(crtc,var,fix);
+	if(!ret)
+		ret = output->proc_setMode(output,var,fix);
+	return ret;
+}
+static inline unsigned int chan_to_field(unsigned int chan,struct fb_bitfield * bf)
+{
+	chan &= 0xffff;
+	chan >>= 16 - bf->length;
+	return chan << bf->offset;
+}
+
+
+static int lynxfb_resume(struct pci_dev* pdev)
+{
+	struct fb_info * info;
+	struct lynx_share * share;
+
+	struct lynxfb_par * par;
+	struct lynxfb_crtc * crtc;
+	struct lynx_cursor * cursor;
+
+	int ret;
+	
+
+	ret = 0;
+	share = pci_get_drvdata(pdev);
+
+	console_lock();
+
+	if((ret = pci_set_power_state(pdev, PCI_D0)) != 0){
+		pr_err("error:%d occured in pci_set_power_state\n",ret);
+		return ret;
+	}
+
+
+	if(pdev->dev.power.power_state.event != PM_EVENT_FREEZE){
+		pci_restore_state(pdev);
+		if ((ret = pci_enable_device(pdev)) != 0){
+			pr_err("error:%d occured in pci_enable_device\n",ret);
+			return ret;
+		}
+		pci_set_master(pdev);
+	}
+	if(share->resume)
+		(*share->resume)(share);
+
+	hw_sm750_inithw(share,pdev);
+
+
+	info = share->fbinfo[0];
+
+	if(info){
+		par = info->par;
+		crtc = &par->crtc;
+		cursor = &crtc->cursor;
+		memset(cursor->vstart, 0x0, cursor->size);
+		memset(crtc->vScreen,0x0,crtc->vidmem_size);
+		lynxfb_ops_set_par(info);
+		fb_set_suspend(info, 0);
+	}
+
+	info = share->fbinfo[1];
+
+	if(info){
+		par = info->par;
+		crtc = &par->crtc;
+		cursor = &crtc->cursor;
+		memset(cursor->vstart, 0x0, cursor->size);
+		memset(crtc->vScreen,0x0,crtc->vidmem_size);
+		lynxfb_ops_set_par(info);
+		fb_set_suspend(info, 0);
+	}
+
+
+	console_unlock();
+	return ret;
+}
+#endif
+
+static int lynxfb_ops_mmap(struct fb_info * info, struct vm_area_struct * vma)
+{
+	unsigned long off;
+	unsigned long start;
+	u32 len;
+	struct file *file;
+	
+	file = vma->vm_file;
+	
+	if (!info)
+		return -ENODEV;
+	if (vma->vm_pgoff > (~0UL >> PAGE_SHIFT))
+		return -EINVAL;
+	off = vma->vm_pgoff << PAGE_SHIFT;
+	printk("lynxfb mmap pgoff: %x\n", vma->vm_pgoff);
+	printk("lynxfb mmap off 1: %x\n", off);
+	
+	/* frame buffer memory */
+	start = info->fix.smem_start;
+	len = PAGE_ALIGN((start & ~PAGE_MASK) + info->fix.smem_len);
+	
+	printk("lynxfb mmap start 1: %x\n", start);
+	printk("lynxfb mmap len 1: %x\n", len);
+	
+	if (off >= len) {
+		/* memory mapped io */
+		off -= len;
+		printk("lynxfb mmap off 2: %x\n", off);
+		if (info->var.accel_flags) {
+			printk("lynxfb mmap accel flags true");
+			return -EINVAL;
+		}
+		start = info->fix.mmio_start;
+		len = PAGE_ALIGN((start & ~PAGE_MASK) + info->fix.mmio_len);
+		
+		printk("lynxfb mmap start 2: %x\n", start);
+		printk("lynxfb mmap len 2: %x\n", len);
+	}
+	start &= PAGE_MASK;
+	printk("lynxfb mmap start 3: %x\n", start);
+	printk("lynxfb mmap vm start: %x\n", vma->vm_start);
+	printk("lynxfb mmap vm end: %x\n", vma->vm_end);
+	printk("lynxfb mmap len: %x\n", len);
+	printk("lynxfb mmap off: %x\n", off);
+	if ((vma->vm_end - vma->vm_start + off) > len)
+	{
+		return -EINVAL;
+	}
+	off += start;
+	printk("lynxfb mmap off 3: %x\n", off);
+	vma->vm_pgoff = off >> PAGE_SHIFT;
+	/* This is an IO map - tell maydump to skip this VMA */
+	vma->vm_flags |= VM_IO | VM_DONTEXPAND | VM_DONTDUMP;
+	vma->vm_page_prot = vm_get_page_prot(vma->vm_flags);
+	fb_pgprotect(file, vma, off);
+	printk("lynxfb mmap off 4: %x\n", off);
+	printk("lynxfb mmap pgprot: %x\n", vma->vm_page_prot);
+	if (io_remap_pfn_range(vma, vma->vm_start, off >> PAGE_SHIFT,
+			     vma->vm_end - vma->vm_start, vma->vm_page_prot))
+		return -EAGAIN;
+	return 0;
+}
+
+static int lynxfb_ops_check_var(struct fb_var_screeninfo* var,struct fb_info* info)
+{
+	struct lynxfb_par * par;
+	struct lynxfb_crtc * crtc;
+	struct lynxfb_output * output;
+	struct lynx_share * share;
+	int ret;
+	resource_size_t request;
+
+	
+	par = info->par;
+	crtc = &par->crtc;
+	output = &par->output;
+	share = par->share;
+	ret = 0;
+
+	pr_debug("check var:%dx%d-%d\n",
+			var->xres,
+			var->yres,
+			var->bits_per_pixel);
+
+
+	switch(var->bits_per_pixel){
+		case 8:
+		case 16:
+		case 24: /* support 24 bpp for only lynx712/722/720 */
+		case 32:
+			break;
+		default:
+			pr_err("bpp %d not supported\n",var->bits_per_pixel);
+			ret = -EINVAL;
+			goto exit;
+	}
+
+	switch(var->bits_per_pixel){
+		case 8:
+			info->fix.visual = FB_VISUAL_PSEUDOCOLOR;
+			var->red.offset = 0;
+			var->red.length = 8;
+			var->green.offset = 0;
+			var->green.length = 8;
+			var->blue.offset = 0;
+			var->blue.length = 8;
+			var->transp.length = 0;
+			var->transp.offset = 0;
+			break;
+		case 16:
+			var->red.offset = 11;
+			var->red.length = 5;
+			var->green.offset = 5;
+			var->green.length = 6;
+			var->blue.offset = 0;
+			var->blue.length = 5;
+			var->transp.length = 0;
+			var->transp.offset = 0;
+			info->fix.visual = FB_VISUAL_TRUECOLOR;
+			break;
+		case 24:
+		case 32:
+			var->red.offset = 16;
+			var->red.length = 8;
+			var->green.offset = 8;
+			var->green.length = 8;
+			var->blue.offset = 0 ;
+			var->blue.length = 8;
+			info->fix.visual = FB_VISUAL_TRUECOLOR;
+			break;
+		default:
+			ret = -EINVAL;
+			break;
+	}
+	var->height = var->width = -1;
+	var->accel_flags = 0;/*FB_ACCELF_TEXT;*/
+
+	/* check if current fb's video memory big enought to hold the onscreen */
+	request = var->xres_virtual * (var->bits_per_pixel >> 3);
+	/* defaulty crtc->channel go with par->index */
+
+	request = PADDING(crtc->line_pad,request);
+	request = request * var->yres_virtual;
+	if(crtc->vidmem_size < request){
+		pr_err("not enough video memory for mode\n");
+		return -ENOMEM;
+	}
+
+	ret = output->proc_checkMode(output,var);
+	if(!ret)
+		ret = crtc->proc_checkMode(crtc,var);
+exit:
+	return ret;
+}
+
+
+static int lynxfb_ops_setcolreg(unsigned regno,unsigned red,
+									unsigned green,unsigned blue,
+									unsigned transp,struct fb_info * info)
+{
+    struct lynxfb_par * par;
+    struct lynxfb_crtc * crtc;
+    struct fb_var_screeninfo * var;
+    int ret;
+
+    par = info->par;
+    crtc = &par->crtc;
+    var = &info->var;
+    ret = 0;
+
+    //pr_debug("regno=%d,red=%d,green=%d,blue=%d\n",regno,red,green,blue);
+    if(regno > 256){
+        pr_err("regno = %d\n",regno);
+        return -EINVAL;
+    }
+
+    if(info->var.grayscale)
+        red = green = blue = (red * 77 + green * 151 + blue * 28) >> 8;
+
+    if(var->bits_per_pixel == 8 && info->fix.visual == FB_VISUAL_PSEUDOCOLOR)
+    {
+        red >>= 8;
+        green >>= 8;
+        blue >>= 8;
+        ret = crtc->proc_setColReg(crtc,regno,red,green,blue);
+        goto exit;
+    }
+
+
+    if(info->fix.visual == FB_VISUAL_TRUECOLOR && regno < 256 )
+    {
+        u32 val;
+        if(var->bits_per_pixel == 16 ||
+                var->bits_per_pixel == 32 ||
+                var->bits_per_pixel == 24)
+        {
+            val = chan_to_field(red,&var->red);
+            val |= chan_to_field(green,&var->green);
+            val |= chan_to_field(blue,&var->blue);
+            par->pseudo_palette[regno] = val;
+            goto exit;
+        }
+    }
+
+    ret = -EINVAL;
+
+exit:
+    return ret;
+}
+
+static int lynxfb_ops_blank(int blank,struct fb_info* info)
+{
+	struct lynxfb_par * par;
+	struct lynxfb_output * output;
+	
+	pr_debug("blank = %d.\n",blank);
+	par = info->par;
+	output = &par->output;
+	return output->proc_setBLANK(output,blank);
+}
+
+static int sm750fb_set_drv(struct lynxfb_par * par)
+{
+    int ret;
+    struct lynx_share * share;
+    struct sm750_share * spec_share;
+    struct lynxfb_output * output;
+    struct lynxfb_crtc * crtc;
+    
+    ret = 0;
+
+    share = par->share;
+    spec_share = container_of(share,struct sm750_share,share);
+    output = &par->output;
+    crtc = &par->crtc;
+
+    crtc->vidmem_size = (share->dual)?share->vidmem_size>>1:share->vidmem_size;
+    /* setup crtc and output member */
+    spec_share->hwCursor = g_hwcursor;
+
+    crtc->proc_setMode = hw_sm750_crtc_setMode;
+    crtc->proc_checkMode = hw_sm750_crtc_checkMode;
+    crtc->proc_setColReg = hw_sm750_setColReg;
+    crtc->proc_panDisplay = hw_sm750_pan_display;
+    crtc->clear = hw_sm750_crtc_clear;
+    crtc->line_pad = 16;
+    //crtc->xpanstep = crtc->ypanstep = crtc->ywrapstep = 0;
+    crtc->xpanstep = 8;
+    crtc->ypanstep = 1;
+    crtc->ywrapstep = 0;
+
+    output->proc_setMode = hw_sm750_output_setMode;
+    output->proc_checkMode = hw_sm750_output_checkMode;
+
+    output->proc_setBLANK = (share->revid == SM750LE_REVISION_ID)?hw_sm750le_setBLANK:hw_sm750_setBLANK;
+    output->clear = hw_sm750_output_clear;
+    /* chip specific phase */
+    share->accel.de_wait = (share->revid == SM750LE_REVISION_ID)?hw_sm750le_deWait: hw_sm750_deWait;
+    switch (spec_share->state.dataflow)
+    {
+        case sm750_simul_pri:
+            output->paths = sm750_pnc;
+            crtc->channel = sm750_primary;
+            crtc->oScreen = 0;
+            crtc->vScreen = share->pvMem;
+            pr_info("use simul primary mode\n");
+            break;
+        case sm750_simul_sec:
+            output->paths = sm750_pnc;
+            crtc->channel = sm750_secondary;
+            crtc->oScreen = 0;
+            crtc->vScreen = share->pvMem;
+            break;
+        case sm750_dual_normal:
+            if(par->index == 0){
+                output->paths = sm750_panel;
+                crtc->channel = sm750_primary;
+                crtc->oScreen = 0;
+                crtc->vScreen = share->pvMem;
+            }else{
+                output->paths = sm750_crt;
+                crtc->channel = sm750_secondary;
+                /* not consider of padding stuffs for oScreen,need fix*/
+                crtc->oScreen = (share->vidmem_size >> 1);
+                crtc->vScreen = share->pvMem + crtc->oScreen;
+            }
+            break;
+        case sm750_dual_swap:
+            if(par->index == 0){
+                output->paths = sm750_panel;
+                crtc->channel = sm750_secondary;
+                crtc->oScreen = 0;
+                crtc->vScreen = share->pvMem;
+            }else{
+                output->paths = sm750_crt;
+                crtc->channel = sm750_primary;
+                /* not consider of padding stuffs for oScreen,need fix*/
+                crtc->oScreen = (share->vidmem_size >> 1);
+                crtc->vScreen = share->pvMem + crtc->oScreen;
+            }
+            break;
+        default:
+            ret = -EINVAL;
+    }
+
+    return ret;
+}
+
+static struct fb_ops lynxfb_ops={
+	.owner = THIS_MODULE,
+	.fb_check_var =  lynxfb_ops_check_var,
+	.fb_set_par = lynxfb_ops_set_par,
+	.fb_setcolreg = lynxfb_ops_setcolreg,
+	.fb_blank = lynxfb_ops_blank,
+	/*.fb_mmap = lynxfb_ops_mmap,*/
+	/* will be hooked by hardware */
+	.fb_fillrect = cfb_fillrect,
+	.fb_imageblit = cfb_imageblit,
+	.fb_copyarea = cfb_copyarea,
+	/* cursor */
+	.fb_cursor = lynxfb_ops_cursor,
+};
+
+
+static int lynxfb_set_fbinfo(struct fb_info* info,int index)
+{
+    int i;
+    struct lynxfb_par * par;
+    struct lynx_share * share;
+    struct lynxfb_crtc * crtc;
+    struct lynxfb_output * output;
+    struct fb_var_screeninfo * var;
+    struct fb_fix_screeninfo * fix;
+
+    const struct fb_videomode * pdb[] = {
+        lynx750_ext, NULL,vesa_modes,
+    };
+    int cdb[] = {ARRAY_SIZE(lynx750_ext),0,VESA_MODEDB_SIZE};
+    static const char * mdb_desc[] ={
+        "driver prepared modes",
+        "kernel prepared default modedb",
+        "kernel HELPERS prepared vesa_modes",
+    };
+
+
+    static const char * fixId[2]=
+    {
+        "sm750_fb1","sm750_fb2",
+    };
+
+    int ret,line_length;
+    
+    ret = 0;
+    par = (struct lynxfb_par *)info->par;
+    share = par->share;
+    crtc = &par->crtc;
+    output = &par->output;
+    var = &info->var;
+    fix = &info->fix;
+
+    /* set index */
+    par->index = index;
+    output->channel = &crtc->channel;
+	sm750fb_set_drv(par);
+        lynxfb_ops.fb_pan_display = lynxfb_ops_pan_display;
+
+
+    /* set current cursor variable and proc pointer,
+     * must be set after crtc member initialized */
+       crtc->cursor.offset = crtc->oScreen + crtc->vidmem_size - 1024;
+        crtc->cursor.mmio = share->pvReg + 0x800f0 + (int)crtc->channel * 0x140;
+
+        pr_info("crtc->cursor.mmio = %p\n",crtc->cursor.mmio);
+        crtc->cursor.maxH = crtc->cursor.maxW = 64;
+        crtc->cursor.size = crtc->cursor.maxH*crtc->cursor.maxW*2/8;
+        crtc->cursor.disable = hw_cursor_disable;
+        crtc->cursor.enable = hw_cursor_enable;
+        crtc->cursor.setColor = hw_cursor_setColor;
+        crtc->cursor.setPos = hw_cursor_setPos;
+        crtc->cursor.setSize = hw_cursor_setSize;
+        crtc->cursor.setData = hw_cursor_setData;
+        crtc->cursor.vstart = share->pvMem + crtc->cursor.offset;
+
+
+    crtc->cursor.share = share;
+    memset(crtc->cursor.vstart, 0, crtc->cursor.size);
+    if(!g_hwcursor){
+        lynxfb_ops.fb_cursor = NULL;
+        crtc->cursor.disable(&crtc->cursor);
+    }
+
+
+    /* set info->fbops, must be set before fb_find_mode */
+    if(!share->accel_off){
+        /* use 2d acceleration */
+        lynxfb_ops.fb_fillrect = lynxfb_ops_fillrect;
+        lynxfb_ops.fb_copyarea = lynxfb_ops_copyarea;
+        lynxfb_ops.fb_imageblit = lynxfb_ops_imageblit;
+    }
+    info->fbops = &lynxfb_ops;
+
+    if(!g_fbmode[index]){
+        g_fbmode[index] = g_def_fbmode;
+        if(index)
+            g_fbmode[index] = g_fbmode[0];
+    }
+
+
+	for(i=0;i<3;i++){
+
+		ret = fb_find_mode(var,info,g_fbmode[index],
+				pdb[i],cdb[i],NULL,8);
+
+		if(ret == 1){
+			pr_info("success! use specified mode:%s in %s\n",
+					g_fbmode[index],
+					mdb_desc[i]);
+			break;
+		}else if(ret == 2){
+			pr_warn("use specified mode:%s in %s,with an ignored refresh rate\n",
+					g_fbmode[index],
+					mdb_desc[i]);
+			break;
+		}else if(ret == 3){
+			pr_warn("wanna use default mode\n");
+//			break;
+		}else if(ret == 4){
+			pr_warn("fall back to any valid mode\n");
+		}else{
+			pr_warn("ret = %d,fb_find_mode failed,with %s\n",ret,mdb_desc[i]);
+		}
+	}
+
+    /* some member of info->var had been set by fb_find_mode */
+
+    pr_info("Member of info->var is :\n\
+            xres=%d\n\
+            yres=%d\n\
+            xres_virtual=%d\n\
+            yres_virtual=%d\n\
+            xoffset=%d\n\
+            yoffset=%d\n\
+            bits_per_pixel=%d\n \
+            ...\n",var->xres,var->yres,var->xres_virtual,var->yres_virtual,
+            var->xoffset,var->yoffset,var->bits_per_pixel);
+
+    /* set par */
+    par->info = info;
+
+    /* set info */
+    line_length = PADDING(crtc->line_pad,
+            (var->xres_virtual * var->bits_per_pixel/8));
+
+    info->pseudo_palette = &par->pseudo_palette[0];
+    info->screen_base = crtc->vScreen;
+    pr_debug("screen_base vaddr = %p\n",info->screen_base);
+	info->screen_size = line_length * var->yres_virtual;
+	info->flags = FBINFO_FLAG_DEFAULT|0;
+
+    /* set info->fix */
+    fix->type = FB_TYPE_PACKED_PIXELS;
+    fix->type_aux = 0;
+    fix->xpanstep = crtc->xpanstep;
+    fix->ypanstep = crtc->ypanstep;
+    fix->ywrapstep = crtc->ywrapstep;
+    fix->accel = FB_ACCEL_SMI;
+
+    strlcpy(fix->id,fixId[index],sizeof(fix->id));
+
+
+	fix->smem_start = crtc->oScreen + share->vidmem_start;
+	pr_info("fix->smem_start = %lx\n",fix->smem_start);
+    /* according to mmap experiment from user space application,
+     * fix->mmio_len should not larger than virtual size
+     * (xres_virtual x yres_virtual x ByPP)
+     * Below line maybe buggy when user mmap fb dev node and write
+     * data into the bound over virtual size
+     * */
+    fix->smem_len = crtc->vidmem_size;
+    pr_info("fix->smem_len = %x\n",fix->smem_len);
+    info->screen_size = fix->smem_len;
+    fix->line_length = line_length;
+    fix->mmio_start = share->vidreg_start;
+    pr_info("fix->mmio_start = %lx\n",fix->mmio_start);
+    fix->mmio_len = share->vidreg_size;
+    pr_info("fix->mmio_len = %x\n",fix->mmio_len);
+    switch(var->bits_per_pixel)
+    {
+        case 8:
+            fix->visual = FB_VISUAL_PSEUDOCOLOR;
+            break;
+        case 16:
+        case 32:
+            fix->visual = FB_VISUAL_TRUECOLOR;
+            break;
+    }
+
+    /* set var */
+    var->activate = FB_ACTIVATE_NOW;
+    var->accel_flags = 0;
+    var->vmode = FB_VMODE_NONINTERLACED;
+
+    pr_debug("#1 show info->cmap : \nstart=%d,len=%d,red=%p,green=%p,blue=%p,transp=%p\n",
+            info->cmap.start,info->cmap.len,
+            info->cmap.red,info->cmap.green,info->cmap.blue,
+            info->cmap.transp);
+
+    if((ret = fb_alloc_cmap(&info->cmap,256,0)) < 0){
+        pr_err("Could not allcate memory for cmap.\n");
+        goto exit;
+    }
+
+    pr_debug("#2 show info->cmap : \nstart=%d,len=%d,red=%p,green=%p,blue=%p,transp=%p\n",
+            info->cmap.start,info->cmap.len,
+            info->cmap.red,info->cmap.green,info->cmap.blue,
+            info->cmap.transp);
+
+exit:
+	lynxfb_ops_check_var(var,info);
+//    lynxfb_ops_set_par(info);
+    return ret;
+}
+
+/* 	chip specific g_option configuration routine */
+static void sm750fb_setup(struct lynx_share * share,char * src)
+{
+	struct sm750_share * spec_share;
+	char * opt;
+#ifdef CAP_EXPENSION
+	char * exp_res;
+#endif
+	int swap;
+	
+
+	spec_share = container_of(share,struct sm750_share,share);
+#ifdef CAP_EXPENSIION
+        exp_res = NULL;
+#endif
+        swap = 0;
+
+        spec_share->state.initParm.chip_clk = 0;
+        spec_share->state.initParm.mem_clk = 0;
+        spec_share->state.initParm.master_clk = 0;
+        spec_share->state.initParm.powerMode = 0;
+        spec_share->state.initParm.setAllEngOff = 0;
+        spec_share->state.initParm.resetMemory = 1;
+
+        /*defaultly turn g_hwcursor on for both view */
+        g_hwcursor = 3;
+
+        if(!src || !*src){
+            pr_warn("no specific g_option.\n");
+            goto NO_PARAM;
+        }
+
+        while((opt = strsep(&src,":")) != NULL && *opt != NULL){
+			pr_err("opt=%s\n",opt);
+			pr_err("src=%s\n",src);
+
+            if(!strncmp(opt,"swap",strlen("swap")))
+                swap = 1;
+            else if(!strncmp(opt,"nocrt",strlen("nocrt")))
+                spec_share->state.nocrt = 1;
+            else if(!strncmp(opt,"36bit",strlen("36bit")))
+                spec_share->state.pnltype = sm750_doubleTFT;
+            else if(!strncmp(opt,"18bit",strlen("18bit")))
+                spec_share->state.pnltype = sm750_dualTFT;
+            else if(!strncmp(opt,"24bit",strlen("24bit")))
+                spec_share->state.pnltype = sm750_24TFT;
+#ifdef CAP_EXPANSION
+            else if(!strncmp(opt,"exp:",strlen("exp:")))
+                exp_res = opt + strlen("exp:");
+#endif
+            else if(!strncmp(opt,"nohwc0",strlen("nohwc0")))
+                g_hwcursor &= ~0x1;
+            else if(!strncmp(opt,"nohwc1",strlen("nohwc1")))
+                g_hwcursor &= ~0x2;
+            else if(!strncmp(opt,"nohwc",strlen("nohwc")))
+                g_hwcursor = 0;
+            else
+            {
+                if(!g_fbmode[0]){
+                    g_fbmode[0] = opt;
+                    pr_info("find fbmode0 : %s\n",g_fbmode[0]);
+                }else if(!g_fbmode[1]){
+                    g_fbmode[1] = opt;
+                    pr_info("find fbmode1 : %s\n",g_fbmode[1]);
+                }else{
+                    pr_warn("How many view you wann set?\n");
+                }
+            }
+        }
+#ifdef CAP_EXPANSION
+        if(getExpRes(exp_res,&spec_share->state.xLCD,&spec_share->state.yLCD))
+        {
+            /* seems exp_res is not valid*/
+            spec_share->state.xLCD = spec_share->state.yLCD = 0;
+        }
+#endif
+
+NO_PARAM:
+        if(share->revid != SM750LE_REVISION_ID){
+            if(share->dual)
+            {
+                if(swap)
+                    spec_share->state.dataflow = sm750_dual_swap;
+                else
+                    spec_share->state.dataflow = sm750_dual_normal;
+            }else{
+                if(swap)
+                    spec_share->state.dataflow = sm750_simul_sec;
+                else
+                    spec_share->state.dataflow = sm750_simul_pri;
+            }
+        }else{
+            /* SM750LE only have one crt channel */
+            spec_share->state.dataflow = sm750_simul_sec;
+            /* sm750le do not have complex attributes*/
+            spec_share->state.nocrt = 0;
+        }
+}
+
+static int lynxfb_pci_probe(struct pci_dev * pdev,
+		const struct pci_device_id * ent)
+{
+	struct fb_info * info[] = {NULL,NULL};
+	struct lynx_share * share = NULL;
+
+	struct sm750_share *spec_share = NULL;
+	size_t spec_offset = 0;
+	int fbidx;
+	
+
+	/* enable device */
+	if(pci_enable_device(pdev)){
+		pr_err("can not enable device.\n");
+		goto err_enable;
+	}
+
+	/* though offset of share in sm750_share is 0,
+	 * we use this marcro as the same */
+	spec_offset = offsetof(struct sm750_share,share);
+
+	spec_share = kzalloc(sizeof(*spec_share),GFP_KERNEL);
+	if(!spec_share){
+		pr_err("Could not allocate memory for share.\n");
+		goto err_share;
+	}
+
+	/* setting share structure */
+	share = (struct lynx_share * )(&(spec_share->share));
+	share->fbinfo[0] = share->fbinfo[1] = NULL;
+	share->devid = pdev->device;
+	share->revid = pdev->revision;
+
+	pr_info("share->revid = %02x\n",share->revid);
+	share->pdev = pdev;
+#ifdef CONFIG_MTRR
+	share->mtrr_off = g_nomtrr;
+	share->mtrr.vram = 0;
+	share->mtrr.vram_added = 0;
+#endif
+	share->accel_off = g_noaccel;
+	share->dual = g_dualview;
+	spin_lock_init(&share->slock);
+
+	if(!share->accel_off){
+		/* hook deInit and 2d routines, notes that below hw_xxx
+		 * routine can work on most of lynx chips
+		 * if some chip need specific function,please hook it in smXXX_set_drv
+		 * routine */
+		share->accel.de_init = hw_de_init;
+		share->accel.de_fillrect = hw_fillrect;
+		share->accel.de_copyarea = hw_copyarea;
+		share->accel.de_imageblit = hw_imageblit;
+		pr_info("enable 2d acceleration\n");
+	}else{
+		pr_info("disable 2d acceleration\n");
+	}
+
+	/* call chip specific setup routine  */
+	sm750fb_setup(share,g_settings);
+
+	/* call chip specific mmap routine */
+	if(hw_sm750_map(share,pdev)){
+		pr_err("Memory map failed\n");
+		goto err_map;
+	}
+
+#ifdef CONFIG_MTRR
+	if(!share->mtrr_off){
+		pr_info("enable mtrr\n");
+		share->mtrr.vram = mtrr_add(share->vidmem_start,
+				share->vidmem_size,
+				MTRR_TYPE_WRCOMB,1);
+
+		if(share->mtrr.vram < 0){
+			/* don't block driver with the failure of MTRR */
+			pr_err("Unable to setup MTRR.\n");
+		}else{
+			share->mtrr.vram_added = 1;
+			pr_info("MTRR added succesfully\n");
+		}
+	}
+#endif
+
+	memset(share->pvMem,0,share->vidmem_size);
+
+	pr_info("sm%3x mmio address = %p\n",share->devid,share->pvReg);
+
+	pci_set_drvdata(pdev,share);
+
+	/* call chipInit routine */
+	hw_sm750_inithw(share,pdev);
+
+	/* allocate frame buffer info structor according to g_dualview */
+		fbidx = 0;
+ALLOC_FB:
+		info[fbidx] = framebuffer_alloc(sizeof(struct lynxfb_par),&pdev->dev);
+		if(!info[fbidx])
+		{
+			pr_err("Could not allocate framebuffer #%d.\n",fbidx);
+			if(fbidx == 0)
+				goto err_info0_alloc;
+			else
+				goto err_info1_alloc;
+		}
+		else
+		{
+			struct lynxfb_par * par;
+			pr_info("framebuffer #%d alloc okay\n",fbidx);
+			share->fbinfo[fbidx] = info[fbidx];
+			par = info[fbidx]->par;
+			par->share = share;
+
+			/* set fb_info structure */
+			if(lynxfb_set_fbinfo(info[fbidx],fbidx)){
+				pr_err("Failed to initial fb_info #%d.\n",fbidx);
+				if(fbidx == 0)
+					goto err_info0_set;
+				else
+					goto err_info1_set;
+			}
+
+			/* register frame buffer*/
+			pr_info("Ready to register framebuffer #%d.\n",fbidx);
+			int errno = register_framebuffer(info[fbidx]);
+			if (errno < 0) {
+				pr_err("Failed to register fb_info #%d. err %d\n",fbidx, errno);
+				if(fbidx == 0)
+					goto err_register0;
+				else
+					goto err_register1;
+			}
+			pr_info("Accomplished register framebuffer #%d.\n",fbidx);
+		}
+
+		/* no dual view by far */
+		fbidx++;
+		if(share->dual && fbidx < 2)
+			goto ALLOC_FB;
+
+	return 0;
+
+err_register1:
+err_info1_set:
+	framebuffer_release(info[1]);
+err_info1_alloc:
+	unregister_framebuffer(info[0]);
+err_register0:
+err_info0_set:
+	framebuffer_release(info[0]);
+err_info0_alloc:
+err_map:
+	kfree(spec_share);
+err_share:
+err_enable:
+	return -ENODEV;
+}
+
+static void __exit lynxfb_pci_remove(struct pci_dev * pdev)
+{
+	struct fb_info * info;
+	struct lynx_share * share;
+	void * spec_share;
+	struct lynxfb_par * par;
+	int cnt;
+
+	cnt = 2;
+	share = pci_get_drvdata(pdev);
+
+	while(cnt-- > 0){
+		info = share->fbinfo[cnt];
+		if(!info)
+			continue;
+		par = info->par;
+
+		unregister_framebuffer(info);
+		/* clean crtc & output allocations*/
+		par->crtc.clear(&par->crtc);
+		par->output.clear(&par->output);
+		/* release frame buffer*/
+		framebuffer_release(info);
+	}
+#ifdef CONFIG_MTRR
+	if(share->mtrr.vram_added)
+		mtrr_del(share->mtrr.vram,share->vidmem_start,share->vidmem_size);
+#endif
+	//	pci_release_regions(pdev);
+
+	iounmap(share->pvReg);
+	iounmap(share->pvMem);
+	spec_share = container_of(share,struct sm750_share,share);
+	kfree(g_settings);
+	kfree(spec_share);
+	pci_set_drvdata(pdev,NULL);
+}
+
+static int __init lynxfb_setup(char * options)
+{
+	int len;
+	char * opt,*tmp;
+	
+
+	if(!options || !*options){
+		pr_warn("no options.\n");
+		return 0;
+	}
+
+	pr_info("options:%s\n",options);
+
+	len = strlen(options) + 1;
+	g_settings = kmalloc(len,GFP_KERNEL);
+	if(!g_settings)
+		return -ENOMEM;
+
+	memset(g_settings,0,len);
+	tmp = g_settings;
+
+	/* 	Notes:
+		char * strsep(char **s,const char * ct);
+		@s: the string to be searched
+		@ct :the characters to search for
+
+		strsep() updates @options to pointer after the first found token
+		it also returns the pointer ahead the token.
+		*/
+	while((opt = strsep(&options,":"))!=NULL)
+	{
+		/* options that mean for any lynx chips are configured here */
+		if(!strncmp(opt,"noaccel",strlen("noaccel")))
+			g_noaccel = 1;
+#ifdef CONFIG_MTRR
+		else if(!strncmp(opt,"nomtrr",strlen("nomtrr")))
+			g_nomtrr = 1;
+#endif
+		else if(!strncmp(opt,"dual",strlen("dual")))
+			g_dualview = 1;
+		else
+		{
+			strcat(tmp,opt);
+			tmp += strlen(opt);
+			if(options != NULL)
+				*tmp++ = ':';
+			else
+				*tmp++ = 0;
+		}
+	}
+
+	/* misc g_settings are transport to chip specific routines */
+	pr_info("parameter left for chip specific analysis:%s\n",g_settings);
+	return 0;
+}
+
+static struct pci_device_id smi_pci_table[] = {
+	{ PCI_DEVICE(0x126f, 0x0750), },
+	{0,}
+};
+
+MODULE_DEVICE_TABLE(pci,smi_pci_table);
+
+static struct pci_driver lynxfb_driver = {
+	.name =		"sm750fb",
+	.id_table =	smi_pci_table,
+	.probe =	lynxfb_pci_probe,
+	.remove =	lynxfb_pci_remove,
+#ifdef CONFIG_PM
+	.suspend = lynxfb_suspend,
+	.resume = lynxfb_resume,
+#endif
+};
+
+
+static int __init lynxfb_init(void)
+{
+	char *option ;
+	int ret;
+
+#ifdef MODULE
+	option = g_option;
+#else
+	if(fb_get_options("sm750fb",&option))
+		return -ENODEV;
+#endif
+
+	lynxfb_setup(option);
+	ret = pci_register_driver(&lynxfb_driver);
+	return ret;
+}
+module_init(lynxfb_init);
+
+static void __exit lynxfb_exit(void)
+{
+	pci_unregister_driver(&lynxfb_driver);
+}
+module_exit(lynxfb_exit);
+
+module_param(g_option,charp,S_IRUGO);
+
+MODULE_PARM_DESC(g_option,
+		"\n\t\tCommon options:\n"
+		"\t\tnoaccel:disable 2d capabilities\n"
+		"\t\tnomtrr:disable MTRR attribute for video memory\n"
+		"\t\tdualview:dual frame buffer feature enabled\n"
+		"\t\tnohwc:disable hardware cursor\n"
+		"\t\tUsual example:\n"
+		"\t\tinsmod ./sm750fb.ko g_option=\"noaccel,nohwc,1280x1024-8@60\"\n"
+		);
+
+MODULE_AUTHOR("monk liu <monk.liu@siliconmotion.com>");
+MODULE_AUTHOR("Sudip Mukherjee <sudip@vectorindia.org>");
+MODULE_DESCRIPTION("Frame buffer driver for SM750 chipset");
+MODULE_LICENSE("GPL v2");
