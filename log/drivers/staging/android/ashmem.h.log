commit a81403c426f72931c05bc800225f43610f0c22da
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Sun May 6 18:13:24 2018 -0700

    staging: android: Clean up license identifiers
    
    Add the identifiers when missing and fix the ones already present
    according to checkpatch.pl.
    
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/android/ashmem.h b/drivers/staging/android/ashmem.h
index 60d7208f110a..1a478173cd21 100644
--- a/drivers/staging/android/ashmem.h
+++ b/drivers/staging/android/ashmem.h
@@ -1,13 +1,9 @@
-// SPDX-License-Identifier: (GPL-2.0 OR Apache-2.0)
+/* SPDX-License-Identifier: GPL-2.0 OR Apache-2.0 */
 /*
  * include/linux/ashmem.h
  *
  * Copyright 2008 Google Inc.
  * Author: Robert Love
- *
- * This file is dual licensed.  It may be redistributed and/or modified
- * under the terms of the Apache 2.0 License OR version 2 of the GNU
- * General Public License.
  */
 
 #ifndef _LINUX_ASHMEM_H

commit bdcb7be6089b86ed42fe2a5a6344973f75c1675b
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Nov 7 21:07:54 2017 +0100

    staging: android: add SPDX identifiers to all android driver files
    
    It's good to have SPDX identifiers in all files to make it easier to
    audit the kernel tree for correct licenses.
    
    Update the android driver files with the correct SPDX license identifier
    based on the license text in the file itself.  The SPDX identifier is a
    legally binding shorthand, which can be used instead of the full boiler
    plate text.
    
    This work is based on a script and data from Thomas Gleixner, Philippe
    Ombredanne, and Kate Stewart.
    
    Cc: "Arve Hjønnevåg" <arve@android.com>
    Cc: Riley Andrews <riandrews@android.com>
    Cc: Sumit Semwal <sumit.semwal@linaro.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Kate Stewart <kstewart@linuxfoundation.org>
    Cc: Philippe Ombredanne <pombredanne@nexb.com>
    Acked-by: Laura Abbott <labbott@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/android/ashmem.h b/drivers/staging/android/ashmem.h
index 5abcfd7aa706..60d7208f110a 100644
--- a/drivers/staging/android/ashmem.h
+++ b/drivers/staging/android/ashmem.h
@@ -1,3 +1,4 @@
+// SPDX-License-Identifier: (GPL-2.0 OR Apache-2.0)
 /*
  * include/linux/ashmem.h
  *

commit fe8a78e4ba7946cf04c58c99d16c73af5884b8dd
Author: Colin Cross <ccross@android.com>
Date:   Mon Feb 17 13:58:31 2014 -0800

    staging: android: Split uapi out of ashmem.h
    
    Move the userspace interface of ashmem.h to
    drivers/staging/android/uapi/ashmem.h
    
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: Colin Cross <ccross@android.com>
    Cc: Android Kernel Team <kernel-team@android.com>
    Signed-off-by: Colin Cross <ccross@android.com>
    [jstultz: Minor commit message tweak]
    Signed-off-by: John Stultz <john.stultz@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/android/ashmem.h b/drivers/staging/android/ashmem.h
index 8dc0f0d3adf3..5abcfd7aa706 100644
--- a/drivers/staging/android/ashmem.h
+++ b/drivers/staging/android/ashmem.h
@@ -16,35 +16,7 @@
 #include <linux/ioctl.h>
 #include <linux/compat.h>
 
-#define ASHMEM_NAME_LEN		256
-
-#define ASHMEM_NAME_DEF		"dev/ashmem"
-
-/* Return values from ASHMEM_PIN: Was the mapping purged while unpinned? */
-#define ASHMEM_NOT_PURGED	0
-#define ASHMEM_WAS_PURGED	1
-
-/* Return values from ASHMEM_GET_PIN_STATUS: Is the mapping pinned? */
-#define ASHMEM_IS_UNPINNED	0
-#define ASHMEM_IS_PINNED	1
-
-struct ashmem_pin {
-	__u32 offset;	/* offset into region, in bytes, page-aligned */
-	__u32 len;	/* length forward from offset, in bytes, page-aligned */
-};
-
-#define __ASHMEMIOC		0x77
-
-#define ASHMEM_SET_NAME		_IOW(__ASHMEMIOC, 1, char[ASHMEM_NAME_LEN])
-#define ASHMEM_GET_NAME		_IOR(__ASHMEMIOC, 2, char[ASHMEM_NAME_LEN])
-#define ASHMEM_SET_SIZE		_IOW(__ASHMEMIOC, 3, size_t)
-#define ASHMEM_GET_SIZE		_IO(__ASHMEMIOC, 4)
-#define ASHMEM_SET_PROT_MASK	_IOW(__ASHMEMIOC, 5, unsigned long)
-#define ASHMEM_GET_PROT_MASK	_IO(__ASHMEMIOC, 6)
-#define ASHMEM_PIN		_IOW(__ASHMEMIOC, 7, struct ashmem_pin)
-#define ASHMEM_UNPIN		_IOW(__ASHMEMIOC, 8, struct ashmem_pin)
-#define ASHMEM_GET_PIN_STATUS	_IO(__ASHMEMIOC, 9)
-#define ASHMEM_PURGE_ALL_CACHES	_IO(__ASHMEMIOC, 10)
+#include "uapi/ashmem.h"
 
 /* support of 32bit userspace on 64bit platforms */
 #ifdef CONFIG_COMPAT

commit e9f5b8145af9a0ee34e98cf01dcd3afb87225538
Author: Serban Constantinescu <serban.constantinescu@arm.com>
Date:   Tue Mar 5 15:27:38 2013 +0000

    staging: android: ashmem: Add support for 32bit ashmem calls in a 64bit kernel
    
    Android's shared memory subsystem, Ashmem, does not support calls from a
    32bit userspace in a 64 bit kernel. This patch adds support for syscalls
    coming from a 32bit userspace in a 64bit kernel.
    
    The patch has been successfully tested on ARMv8 AEM(64bit
    platform model) and Versatile Express A9(32bit platform).
    
    v2: Fix missing compat.h include.
    
    Signed-off-by: Serban Constantinescu <serban.constantinescu@arm.com>
    Acked-by: Arve Hjønnevåg <arve@android.com>
    Acked-by: John Stultz <john.stultz@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/android/ashmem.h b/drivers/staging/android/ashmem.h
index 1976b10ef93e..8dc0f0d3adf3 100644
--- a/drivers/staging/android/ashmem.h
+++ b/drivers/staging/android/ashmem.h
@@ -14,6 +14,7 @@
 
 #include <linux/limits.h>
 #include <linux/ioctl.h>
+#include <linux/compat.h>
 
 #define ASHMEM_NAME_LEN		256
 
@@ -45,4 +46,10 @@ struct ashmem_pin {
 #define ASHMEM_GET_PIN_STATUS	_IO(__ASHMEMIOC, 9)
 #define ASHMEM_PURGE_ALL_CACHES	_IO(__ASHMEMIOC, 10)
 
+/* support of 32bit userspace on 64bit platforms */
+#ifdef CONFIG_COMPAT
+#define COMPAT_ASHMEM_SET_SIZE		_IOW(__ASHMEMIOC, 3, compat_size_t)
+#define COMPAT_ASHMEM_SET_PROT_MASK	_IOW(__ASHMEMIOC, 5, unsigned int)
+#endif
+
 #endif	/* _LINUX_ASHMEM_H */

commit 11980c2ac4ccfad21a5f8ee9e12059f1e687bb40
Author: Robert Love <rlove@google.com>
Date:   Tue Dec 20 16:49:48 2011 -0800

    ashmem: Anonymous shared memory subsystem
    
    The anonymous shared memory (ashmem) subsystem provides a
    Unix-y,file-based shared memory interface to user-space. It
    works like anonymous memory (e.g. mmapping fd=0) except if
    you share the file descriptor via the usual means, you will
    share the mapping. The shared memory can be accessed via both
    mmap or file I/O. The backing store is a simple shmem file.
    
    Additionally, ashmem introduces the concept of page pinning.
    Pinned pages (the default) behave like any anonymous memory.
    Unpinned pages are available to the kernel for eviction during
    VM pressure. When repinning the pages, the return value
    instructs user-space as to any eviction. In this manner,
    user-space processes may implement caching and similar
    resource management that efficiently integrates with kernel
    memory management.
    
    Signed-off-by: Robert Love <rlove@google.com>
    
    ashmem: Don't install fault handler for private mmaps.
    
    Ashmem is used to create named private heaps. If this heap is backed
    by a tmpfs file it will allocate two pages for every page touched.
    In 2.6.27, the extra page would later be freed, but 2.6.29 does not
    scan anonymous pages when running without swap so the memory is not
    freed while the file is referenced. This change changes the behavior
    of private ashmem mmaps to match /dev/zero instead tmpfs.
    
    Signed-off-by: Arve Hjønnevåg <arve@android.com>
    
    ashmem: Add common prefix to name reported in /proc/pid/maps
    
    Signed-off-by: Arve Hjønnevåg <arve@android.com>
    
    ashmem: don't require a page aligned size
    
    This makes ashmem more similar to shmem and mmap, by
    not requiring the specified size to be page aligned,
    instead rounding it internally as needed.
    
    Signed-off-by: Marco Nelissen <marcone@android.com>
    [jstultz: Improved commit subject and included patch description
    from rlove. Also moved ashmem files to staging dir, and reworked
    code to avoid touching mm/shmem.c while we're in staging.]
    CC: Brian Swetland <swetland@google.com>
    CC: Colin Cross <ccross@android.com>
    CC: Arve Hjønnevåg <arve@android.com>
    CC: Dima Zavin <dima@android.com>
    CC: Robert Love <rlove@google.com>
    Signed-off-by: John Stultz <john.stultz@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/staging/android/ashmem.h b/drivers/staging/android/ashmem.h
new file mode 100644
index 000000000000..1976b10ef93e
--- /dev/null
+++ b/drivers/staging/android/ashmem.h
@@ -0,0 +1,48 @@
+/*
+ * include/linux/ashmem.h
+ *
+ * Copyright 2008 Google Inc.
+ * Author: Robert Love
+ *
+ * This file is dual licensed.  It may be redistributed and/or modified
+ * under the terms of the Apache 2.0 License OR version 2 of the GNU
+ * General Public License.
+ */
+
+#ifndef _LINUX_ASHMEM_H
+#define _LINUX_ASHMEM_H
+
+#include <linux/limits.h>
+#include <linux/ioctl.h>
+
+#define ASHMEM_NAME_LEN		256
+
+#define ASHMEM_NAME_DEF		"dev/ashmem"
+
+/* Return values from ASHMEM_PIN: Was the mapping purged while unpinned? */
+#define ASHMEM_NOT_PURGED	0
+#define ASHMEM_WAS_PURGED	1
+
+/* Return values from ASHMEM_GET_PIN_STATUS: Is the mapping pinned? */
+#define ASHMEM_IS_UNPINNED	0
+#define ASHMEM_IS_PINNED	1
+
+struct ashmem_pin {
+	__u32 offset;	/* offset into region, in bytes, page-aligned */
+	__u32 len;	/* length forward from offset, in bytes, page-aligned */
+};
+
+#define __ASHMEMIOC		0x77
+
+#define ASHMEM_SET_NAME		_IOW(__ASHMEMIOC, 1, char[ASHMEM_NAME_LEN])
+#define ASHMEM_GET_NAME		_IOR(__ASHMEMIOC, 2, char[ASHMEM_NAME_LEN])
+#define ASHMEM_SET_SIZE		_IOW(__ASHMEMIOC, 3, size_t)
+#define ASHMEM_GET_SIZE		_IO(__ASHMEMIOC, 4)
+#define ASHMEM_SET_PROT_MASK	_IOW(__ASHMEMIOC, 5, unsigned long)
+#define ASHMEM_GET_PROT_MASK	_IO(__ASHMEMIOC, 6)
+#define ASHMEM_PIN		_IOW(__ASHMEMIOC, 7, struct ashmem_pin)
+#define ASHMEM_UNPIN		_IOW(__ASHMEMIOC, 8, struct ashmem_pin)
+#define ASHMEM_GET_PIN_STATUS	_IO(__ASHMEMIOC, 9)
+#define ASHMEM_PURGE_ALL_CACHES	_IO(__ASHMEMIOC, 10)
+
+#endif	/* _LINUX_ASHMEM_H */
