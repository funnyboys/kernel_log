commit 40fbffd9b9a110b7b1eb9e4fb609018d29dff157
Author: Marc Dietrich <marvin24@gmx.de>
Date:   Thu Apr 19 13:01:50 2018 +0200

    staging: nvec: convert to use GPIO descriptors
    
    Use GPIO descriptors instead of relying on the old method.
    
    Cc: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Marc Dietrich <marvin24@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/nvec/nvec.h b/drivers/staging/nvec/nvec.h
index 25efcdfa4f20..80c0353f141c 100644
--- a/drivers/staging/nvec/nvec.h
+++ b/drivers/staging/nvec/nvec.h
@@ -132,7 +132,7 @@ struct nvec_msg {
  */
 struct nvec_chip {
 	struct device *dev;
-	int gpio;
+	struct gpio_desc *gpiod;
 	int irq;
 	u32 i2c_addr;
 	void __iomem *base;

commit d6d69c824efb134918c373343f4ea841467ffcf6
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Jan 11 11:08:43 2018 +0100

    staging: nvec: remove redundant license text
    
    Now that the SPDX tag is in all drivers/staging/nvec/ files, that
    identifies the license in a specific and legally-defined manner.  So the
    extra GPL text wording can be removed as it is no longer needed at all.
    
    This is done on a quest to remove the 700+ different ways that files in
    the kernel describe the GPL license text.  And there's unneeded stuff
    like the address (sometimes incorrect) for the FSF which is never
    needed.
    
    No copyright headers or other non-license-description text was removed.
    
    Cc: Marc Dietrich <marvin24@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/nvec/nvec.h b/drivers/staging/nvec/nvec.h
index e8e952612604..25efcdfa4f20 100644
--- a/drivers/staging/nvec/nvec.h
+++ b/drivers/staging/nvec/nvec.h
@@ -8,11 +8,6 @@
  *           Ilya Petrov <ilya.muromec@gmail.com>
  *           Marc Dietrich <marvin24@gmx.de>
  *           Julian Andres Klode <jak@jak-linux.org>
- *
- * This file is subject to the terms and conditions of the GNU General Public
- * License.  See the file "COPYING" in the main directory of this archive
- * for more details.
- *
  */
 
 #ifndef __LINUX_MFD_NVEC

commit 971bcfca1f8db18681668b970f2e7cc6cb531eae
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Jan 11 11:08:42 2018 +0100

    staging: nvec: add SPDX identifier.
    
    It's good to have SPDX identifiers in all files to make it easier to
    audit the kernel tree for correct licenses.
    
    Fix up the staging nvec driver to have a proper SPDX identifiers, based
    on the license text in the file itself.  The SPDX identifier is a
    legally binding shorthand, which can be used instead of the full boiler
    plate text.
    
    This work is based on a script and data from Thomas Gleixner, Philippe
    Ombredanne, and Kate Stewart.
    
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Kate Stewart <kstewart@linuxfoundation.org>
    Cc: Philippe Ombredanne <pombredanne@nexb.com>
    Cc: Marc Dietrich <marvin24@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/nvec/nvec.h b/drivers/staging/nvec/nvec.h
index aa7c70ef94f5..e8e952612604 100644
--- a/drivers/staging/nvec/nvec.h
+++ b/drivers/staging/nvec/nvec.h
@@ -1,3 +1,4 @@
+/* SPDX-License-Identifier: GPL-2.0 */
 /*
  * NVEC: NVIDIA compliant embedded controller interface
  *

commit 4cf64a5f512da749ef635431fdf5da56bf1652af
Author: Franck Demathieu <franck.demathieu@intel.com>
Date:   Mon Feb 13 09:35:19 2017 +0100

    staging: nvec: Fix incorrect type of i2c address
    
    The i2c address is unsigned according to the dt-bindings.
    Fix sparse issue (-Wtypesign):
    
      drivers/staging/nvec/nvec.c:781:35: warning: incorrect type in argument 3 (different signedness)
      drivers/staging/nvec/nvec.c:781:35:    expected unsigned int [usertype] *out_value
      drivers/staging/nvec/nvec.c:781:35:    got int *<noident>
    
    Signed-off-by: Franck Demathieu <fdemathieu@gmail.com>
    Acked-by: Marc Dietrich <marvin24@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/nvec/nvec.h b/drivers/staging/nvec/nvec.h
index c03ca8d9572a..aa7c70ef94f5 100644
--- a/drivers/staging/nvec/nvec.h
+++ b/drivers/staging/nvec/nvec.h
@@ -138,7 +138,7 @@ struct nvec_chip {
 	struct device *dev;
 	int gpio;
 	int irq;
-	int i2c_addr;
+	u32 i2c_addr;
 	void __iomem *base;
 	struct clk *i2c_clk;
 	struct reset_control *rst;

commit 73b37c91ac5f31c296220bb20dabb881c80b4222
Author: Tomás Tormo <tomas.tormo@gmail.com>
Date:   Sun Feb 14 20:30:56 2016 +0100

    Staging: nvec: Modify the nvec_write_sync method to return the error code
    
    Modify the nvec_write_sync function to return the error code
    instead of the received message.
    
    The received message is now returned as an output parameter.
    
    Signed-off-by: Tomás Tormo <tomas.tormo@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/nvec/nvec.h b/drivers/staging/nvec/nvec.h
index 2ec9de906ca3..c03ca8d9572a 100644
--- a/drivers/staging/nvec/nvec.h
+++ b/drivers/staging/nvec/nvec.h
@@ -168,8 +168,9 @@ struct nvec_chip {
 int nvec_write_async(struct nvec_chip *nvec, const unsigned char *data,
 		     short size);
 
-struct nvec_msg *nvec_write_sync(struct nvec_chip *nvec,
-				 const unsigned char *data, short size);
+int nvec_write_sync(struct nvec_chip *nvec,
+		    const unsigned char *data, short size,
+		    struct nvec_msg **msg);
 
 int nvec_register_notifier(struct nvec_chip *nvec,
 			   struct notifier_block *nb,

commit ddc9bceb4c128aeec8107df816df1ceba4c68f8b
Author: Joe Perches <joe@perches.com>
Date:   Mon Aug 10 14:51:25 2015 -0700

    staging: nvec: Remove unnecessary externs
    
    Using 'extern' is not necessary for function prototypes.
    
    Miscellanea:
    
    o Reflow alignments
    
    Signed-off-by: Joe Perches <joe@perches.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/nvec/nvec.h b/drivers/staging/nvec/nvec.h
index e271375053fa..2ec9de906ca3 100644
--- a/drivers/staging/nvec/nvec.h
+++ b/drivers/staging/nvec/nvec.h
@@ -165,19 +165,18 @@ struct nvec_chip {
 	int state;
 };
 
-extern int nvec_write_async(struct nvec_chip *nvec, const unsigned char *data,
-			     short size);
+int nvec_write_async(struct nvec_chip *nvec, const unsigned char *data,
+		     short size);
 
-extern struct nvec_msg *nvec_write_sync(struct nvec_chip *nvec,
-					const unsigned char *data, short size);
+struct nvec_msg *nvec_write_sync(struct nvec_chip *nvec,
+				 const unsigned char *data, short size);
 
-extern int nvec_register_notifier(struct nvec_chip *nvec,
-				  struct notifier_block *nb,
-				  unsigned int events);
+int nvec_register_notifier(struct nvec_chip *nvec,
+			   struct notifier_block *nb,
+			   unsigned int events);
 
-extern int nvec_unregister_notifier(struct nvec_chip *dev,
-				    struct notifier_block *nb);
+int nvec_unregister_notifier(struct nvec_chip *dev, struct notifier_block *nb);
 
-extern void nvec_msg_free(struct nvec_chip *nvec, struct nvec_msg *msg);
+void nvec_msg_free(struct nvec_chip *nvec, struct nvec_msg *msg);
 
 #endif

commit c0df5bf5369ec5d12d781491c95e3207ec5ee2b7
Author: Stephen Warren <swarren@nvidia.com>
Date:   Wed Nov 6 16:46:24 2013 -0700

    staging: nvec: use reset framework
    
    Tegra's clock driver now provides an implementation of the common
    reset API (include/linux/reset.h). Use this instead of the old Tegra-
    specific API; that will soon be removed.
    
    Signed-off-by: Stephen Warren <swarren@nvidia.com>
    Acked-by: Marc Dietrich <marvin24@gmx.de>
    Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Reviewed-by: Thierry Reding <treding@nvidia.com>

diff --git a/drivers/staging/nvec/nvec.h b/drivers/staging/nvec/nvec.h
index e880518935fb..e271375053fa 100644
--- a/drivers/staging/nvec/nvec.h
+++ b/drivers/staging/nvec/nvec.h
@@ -23,6 +23,7 @@
 #include <linux/list.h>
 #include <linux/mutex.h>
 #include <linux/notifier.h>
+#include <linux/reset.h>
 #include <linux/spinlock.h>
 #include <linux/workqueue.h>
 
@@ -109,7 +110,8 @@ struct nvec_msg {
  * @irq: The IRQ of the I2C device
  * @i2c_addr: The address of the I2C slave
  * @base: The base of the memory mapped region of the I2C device
- * @clk: The clock of the I2C device
+ * @i2c_clk: The clock of the I2C device
+ * @rst: The reset of the I2C device
  * @notifier_list: Notifiers to be called on received messages, see
  *                 nvec_register_notifier()
  * @rx_data: Received messages that have to be processed
@@ -139,6 +141,7 @@ struct nvec_chip {
 	int i2c_addr;
 	void __iomem *base;
 	struct clk *i2c_clk;
+	struct reset_control *rst;
 	struct atomic_notifier_head notifier_list;
 	struct list_head rx_data, tx_data;
 	struct notifier_block nvec_status_notifier;

commit 2c6cbdd0ef966cdf5e93ea17475a577dacf44dd7
Author: Marc Dietrich <marvin24@gmx.de>
Date:   Fri Jun 21 10:28:54 2013 +0200

    staging: nvec: remove instantiating via platform device
    
    Tegra has been converted to support device tree only. Remove support
    for instantiating via platform device.
    
    Signed-off-by: Leon Romanovsky <leon@leon.nu>
    Signed-off-by: Marc Dietrich <marvin24@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/nvec/nvec.h b/drivers/staging/nvec/nvec.h
index 2b1316d87470..e880518935fb 100644
--- a/drivers/staging/nvec/nvec.h
+++ b/drivers/staging/nvec/nvec.h
@@ -102,31 +102,6 @@ struct nvec_msg {
 	atomic_t used;
 };
 
-/**
- * struct nvec_subdev - A subdevice of nvec, such as nvec_kbd
- * @name: The name of the sub device
- * @platform_data: Platform data
- * @id: Identifier of the sub device
- */
-struct nvec_subdev {
-	const char *name;
-	void *platform_data;
-	int id;
-};
-
-/**
- * struct nvec_platform_data - platform data for a tegra slave controller
- * @i2c_addr: number of i2c slave adapter the ec is connected to
- * @gpio: gpio number for the ec request line
- *
- * Platform data, to be used in board definitions. For an example, take a
- * look at the paz00 board in arch/arm/mach-tegra/board-paz00.c
- */
-struct nvec_platform_data {
-	int i2c_addr;
-	int gpio;
-};
-
 /**
  * struct nvec_chip - A single connection to an NVIDIA Embedded controller
  * @dev: The device

commit 218468f40d08600803ecb389c8b5139bbf736fa4
Author: Marc Dietrich <marvin24@gmx.de>
Date:   Mon Apr 29 23:14:51 2013 +0200

    staging: nvec: implement unregistering of notifiers
    
    This implements the unregistering of notifiers so kernel modules
    can be unloaded.
    
    Signed-off-by: Marc Dietrich <marvin24@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/nvec/nvec.h b/drivers/staging/nvec/nvec.h
index b7a14bc0ab91..2b1316d87470 100644
--- a/drivers/staging/nvec/nvec.h
+++ b/drivers/staging/nvec/nvec.h
@@ -197,9 +197,8 @@ extern int nvec_register_notifier(struct nvec_chip *nvec,
 				  struct notifier_block *nb,
 				  unsigned int events);
 
-extern int nvec_unregister_notifier(struct device *dev,
-				    struct notifier_block *nb,
-				    unsigned int events);
+extern int nvec_unregister_notifier(struct nvec_chip *dev,
+				    struct notifier_block *nb);
 
 extern void nvec_msg_free(struct nvec_chip *nvec, struct nvec_msg *msg);
 

commit 93eff83ff1640bef8062568687b5e0e41a0d4c42
Author: Marc Dietrich <marvin24@gmx.de>
Date:   Sun Jan 27 17:43:43 2013 +0100

    staging: nvec: cleanup the string mess
    
    Replace the various command strings by named constants.
    
    Signed-off-by: Marc Dietrich <marvin24@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/nvec/nvec.h b/drivers/staging/nvec/nvec.h
index bfcd9a9b36e1..b7a14bc0ab91 100644
--- a/drivers/staging/nvec/nvec.h
+++ b/drivers/staging/nvec/nvec.h
@@ -76,6 +76,7 @@ enum nvec_msg_type {
 	NVEC_KBD,
 	NVEC_PS2,
 	NVEC_CNTL,
+	NVEC_OEM0 = 0x0d,
 	NVEC_KB_EVT = 0x80,
 	NVEC_PS2_EVT,
 };

commit 518945fbfbe9e2bc39057115aa23e25b084a03e0
Author: Marc Dietrich <marvin24@gmx.de>
Date:   Sun Jan 27 17:43:41 2013 +0100

    staging: nvec: move toggle global event reporting to its own function
    
    Cleanup toggle of global event reporting by moving it to its own function.
    This simplifies the following cleanup.
    
    Signed-off-by: Marc Dietrich <marvin24@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/nvec/nvec.h b/drivers/staging/nvec/nvec.h
index ba6ed8f4e8a3..bfcd9a9b36e1 100644
--- a/drivers/staging/nvec/nvec.h
+++ b/drivers/staging/nvec/nvec.h
@@ -71,7 +71,9 @@ enum nvec_event_size {
 enum nvec_msg_type {
 	NVEC_SYS = 1,
 	NVEC_BAT,
-	NVEC_KBD = 5,
+	NVEC_GPIO,
+	NVEC_SLEEP,
+	NVEC_KBD,
 	NVEC_PS2,
 	NVEC_CNTL,
 	NVEC_KB_EVT = 0x80,

commit 535f2a5ffa5b11bd6824cbab6027d5092b5517c2
Author: Justin P. Mattock <justinmattock@gmail.com>
Date:   Mon Mar 19 08:17:49 2012 -0700

    staging:nvec:nvec.h Fix typos in staging:nvec
    
    The below patch fixes a typo I found while reading.
    
    Signed-off-by: Justin P. Mattock <justinmattock@gmail.com>
    Cc: Julian Andres Klode <jak@jak-linux.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/nvec/nvec.h b/drivers/staging/nvec/nvec.h
index a4c17b0e10cf..ba6ed8f4e8a3 100644
--- a/drivers/staging/nvec/nvec.h
+++ b/drivers/staging/nvec/nvec.h
@@ -42,7 +42,7 @@
  * enum nvec_event_size - The size of an event message
  * @NVEC_2BYTES: The message has one command byte and one data byte
  * @NVEC_3BYTES: The message has one command byte and two data bytes
- * @NVEC_VAR_SIZE: The message has one command byte, one count byte, and as
+ * @NVEC_VAR_SIZE: The message has one command byte, one count byte, and has
  *                 up to as many bytes as the number in the count byte. The
  *                 maximum is 32
  *

commit 12b5a55d725579d0978da67f26577224a1c40640
Author: Julian Andres Klode <jak@jak-linux.org>
Date:   Tue Sep 27 19:01:06 2011 +0200

    staging: nvec: Add missing includes and reorder them
    
    Add the includes that are currently missing in nvec.h
    and nvec.c and reorder them alphabetically.
    
    Signed-off-by: Julian Andres Klode <jak@jak-linux.org>
    Acked-by: Marc Dietrich <marvin24@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/staging/nvec/nvec.h b/drivers/staging/nvec/nvec.h
index f8ffe0002d1f..a4c17b0e10cf 100644
--- a/drivers/staging/nvec/nvec.h
+++ b/drivers/staging/nvec/nvec.h
@@ -18,8 +18,13 @@
 #define __LINUX_MFD_NVEC
 
 #include <linux/atomic.h>
+#include <linux/clk.h>
+#include <linux/completion.h>
+#include <linux/list.h>
+#include <linux/mutex.h>
 #include <linux/notifier.h>
-#include <linux/semaphore.h>
+#include <linux/spinlock.h>
+#include <linux/workqueue.h>
 
 /* NVEC_POOL_SIZE - Size of the pool in &struct nvec_msg */
 #define NVEC_POOL_SIZE	64

commit 198dd26714ba4a60ccc5ce70bc4506613b4f0c2d
Author: Julian Andres Klode <jak@jak-linux.org>
Date:   Tue Sep 27 19:00:58 2011 +0200

    staging: nvec: Export nvec_msg_free() to clients
    
    Client code wishing to make use of nvec_write_sync() must
    have a way to free the returned pointer, otherwise we run
    out of poool memory fairly soon.
    
    Signed-off-by: Julian Andres Klode <jak@jak-linux.org>
    Acked-by: Marc Dietrich <marvin24@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/staging/nvec/nvec.h b/drivers/staging/nvec/nvec.h
index 44787535c0ea..f8ffe0002d1f 100644
--- a/drivers/staging/nvec/nvec.h
+++ b/drivers/staging/nvec/nvec.h
@@ -192,4 +192,7 @@ extern int nvec_register_notifier(struct nvec_chip *nvec,
 extern int nvec_unregister_notifier(struct device *dev,
 				    struct notifier_block *nb,
 				    unsigned int events);
+
+extern void nvec_msg_free(struct nvec_chip *nvec, struct nvec_msg *msg);
+
 #endif

commit 391d2fa95c8e5e5ad3b06af235ce4aeae6514966
Author: Julian Andres Klode <jak@jak-linux.org>
Date:   Tue Sep 27 19:00:57 2011 +0200

    staging: nvec: Move implementation-only macros out of the header
    
    Those macros are needed only for implementation purposes and
    do not have any use for other code wishing to use nvec.
    
    Signed-off-by: Julian Andres Klode <jak@jak-linux.org>
    Acked-by: Marc Dietrich <marvin24@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/staging/nvec/nvec.h b/drivers/staging/nvec/nvec.h
index d1e4f57f8513..44787535c0ea 100644
--- a/drivers/staging/nvec/nvec.h
+++ b/drivers/staging/nvec/nvec.h
@@ -192,25 +192,4 @@ extern int nvec_register_notifier(struct nvec_chip *nvec,
 extern int nvec_unregister_notifier(struct device *dev,
 				    struct notifier_block *nb,
 				    unsigned int events);
-
-#define I2C_CNFG			0x00
-#define I2C_CNFG_PACKET_MODE_EN		(1<<10)
-#define I2C_CNFG_NEW_MASTER_SFM		(1<<11)
-#define I2C_CNFG_DEBOUNCE_CNT_SHIFT	12
-
-#define I2C_SL_CNFG		0x20
-#define I2C_SL_NEWL		(1<<2)
-#define I2C_SL_NACK		(1<<1)
-#define I2C_SL_RESP		(1<<0)
-#define I2C_SL_IRQ		(1<<3)
-#define END_TRANS		(1<<4)
-#define RCVD			(1<<2)
-#define RNW			(1<<1)
-
-#define I2C_SL_RCVD		0x24
-#define I2C_SL_STATUS		0x28
-#define I2C_SL_ADDR1		0x2c
-#define I2C_SL_ADDR2		0x30
-#define I2C_SL_DELAY_COUNT	0x3c
-
 #endif

commit bdf034d98676d143cb88f7b999a71fff5775fcd4
Author: Julian Andres Klode <jak@jak-linux.org>
Date:   Tue Sep 27 19:00:56 2011 +0200

    staging: nvec: Document public and private API
    
    Add kernel-doc comments describing the functions
    and structs we currently have.
    
    Signed-off-by: Julian Andres Klode <jak@jak-linux.org>
    Acked-by: Marc Dietrich <marvin24@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/staging/nvec/nvec.h b/drivers/staging/nvec/nvec.h
index a39cfc15b4cb..d1e4f57f8513 100644
--- a/drivers/staging/nvec/nvec.h
+++ b/drivers/staging/nvec/nvec.h
@@ -6,6 +6,7 @@
  * Authors:  Pierre-Hugues Husson <phhusson@free.fr>
  *           Ilya Petrov <ilya.muromec@gmail.com>
  *           Marc Dietrich <marvin24@gmx.de>
+ *           Julian Andres Klode <jak@jak-linux.org>
  *
  * This file is subject to the terms and conditions of the GNU General Public
  * License.  See the file "COPYING" in the main directory of this archive
@@ -32,13 +33,37 @@
  */
 #define NVEC_MSG_SIZE	34
 
-enum {
+/**
+ * enum nvec_event_size - The size of an event message
+ * @NVEC_2BYTES: The message has one command byte and one data byte
+ * @NVEC_3BYTES: The message has one command byte and two data bytes
+ * @NVEC_VAR_SIZE: The message has one command byte, one count byte, and as
+ *                 up to as many bytes as the number in the count byte. The
+ *                 maximum is 32
+ *
+ * Events can be fixed or variable sized. This is useless on other message
+ * types, which are always variable sized.
+ */
+enum nvec_event_size {
 	NVEC_2BYTES,
 	NVEC_3BYTES,
 	NVEC_VAR_SIZE,
 };
 
-enum {
+/**
+ * enum nvec_msg_type - The type of a message
+ * @NVEC_SYS: A system request/response
+ * @NVEC_BAT: A battery request/response
+ * @NVEC_KBD: A keyboard request/response
+ * @NVEC_PS2: A mouse request/response
+ * @NVEC_CNTL: A EC control request/response
+ * @NVEC_KB_EVT: An event from the keyboard
+ * @NVEC_PS2_EVT: An event from the mouse
+ *
+ * Events can be fixed or variable sized. This is useless on other message
+ * types, which are always variable sized.
+ */
+enum nvec_msg_type {
 	NVEC_SYS = 1,
 	NVEC_BAT,
 	NVEC_KBD = 5,
@@ -48,6 +73,19 @@ enum {
 	NVEC_PS2_EVT,
 };
 
+/**
+ * struct nvec_msg - A buffer for a single message
+ * @node: Messages are part of various lists in a &struct nvec_chip
+ * @data: The data of the message
+ * @size: For TX messages, the number of bytes used in @data
+ * @pos:  For RX messages, the current position to write to. For TX messages,
+ *        the position to read from.
+ * @used: Used for the message pool to mark a message as free/allocated.
+ *
+ * This structure is used to hold outgoing and incoming messages. Outgoing
+ * messages have a different format than incoming messages, and that is not
+ * documented yet.
+ */
 struct nvec_msg {
 	struct list_head node;
 	unsigned char data[NVEC_MSG_SIZE];
@@ -56,17 +94,61 @@ struct nvec_msg {
 	atomic_t used;
 };
 
+/**
+ * struct nvec_subdev - A subdevice of nvec, such as nvec_kbd
+ * @name: The name of the sub device
+ * @platform_data: Platform data
+ * @id: Identifier of the sub device
+ */
 struct nvec_subdev {
 	const char *name;
 	void *platform_data;
 	int id;
 };
 
+/**
+ * struct nvec_platform_data - platform data for a tegra slave controller
+ * @i2c_addr: number of i2c slave adapter the ec is connected to
+ * @gpio: gpio number for the ec request line
+ *
+ * Platform data, to be used in board definitions. For an example, take a
+ * look at the paz00 board in arch/arm/mach-tegra/board-paz00.c
+ */
 struct nvec_platform_data {
 	int i2c_addr;
 	int gpio;
 };
 
+/**
+ * struct nvec_chip - A single connection to an NVIDIA Embedded controller
+ * @dev: The device
+ * @gpio: The same as for &struct nvec_platform_data
+ * @irq: The IRQ of the I2C device
+ * @i2c_addr: The address of the I2C slave
+ * @base: The base of the memory mapped region of the I2C device
+ * @clk: The clock of the I2C device
+ * @notifier_list: Notifiers to be called on received messages, see
+ *                 nvec_register_notifier()
+ * @rx_data: Received messages that have to be processed
+ * @tx_data: Messages waiting to be sent to the controller
+ * @nvec_status_notifier: Internal notifier (see nvec_status_notifier())
+ * @rx_work: A work structure for the RX worker nvec_dispatch()
+ * @tx_work: A work structure for the TX worker nvec_request_master()
+ * @wq: The work queue in which @rx_work and @tx_work are executed
+ * @rx: The message currently being retrieved or %NULL
+ * @msg_pool: A pool of messages for allocation
+ * @tx: The message currently being transferred
+ * @tx_scratch: Used for building pseudo messages
+ * @ec_transfer: A completion that will be completed once a message has been
+ *               received (see nvec_rx_completed())
+ * @tx_lock: Spinlock for modifications on @tx_data
+ * @rx_lock: Spinlock for modifications on @rx_data
+ * @sync_write_mutex: A mutex for nvec_write_sync()
+ * @sync_write: A completion to signal that a synchronous message is complete
+ * @sync_write_pending: The first two bytes of the request (type and subtype)
+ * @last_sync_msg: The last synchronous message.
+ * @state: State of our finite state machine used in nvec_interrupt()
+ */
 struct nvec_chip {
 	struct device *dev;
 	int gpio;

commit 1b9bf629ea42fdacd951b9190f86b028557bbe19
Author: Julian Andres Klode <jak@jak-linux.org>
Date:   Tue Sep 27 19:00:55 2011 +0200

    staging: nvec: Have nvec_write_async() return -ENOMEM on OOM
    
    Change nvec_write_async() to return an integer, 0 by default,
    a negative error on failure. Change nvec_write_sync() to
    check the return value and abort if it is negative.
    
    Signed-off-by: Julian Andres Klode <jak@jak-linux.org>
    Acked-by: Marc Dietrich <marvin24@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/staging/nvec/nvec.h b/drivers/staging/nvec/nvec.h
index 851d7831a11d..a39cfc15b4cb 100644
--- a/drivers/staging/nvec/nvec.h
+++ b/drivers/staging/nvec/nvec.h
@@ -97,7 +97,7 @@ struct nvec_chip {
 	int state;
 };
 
-extern void nvec_write_async(struct nvec_chip *nvec, const unsigned char *data,
+extern int nvec_write_async(struct nvec_chip *nvec, const unsigned char *data,
 			     short size);
 
 extern struct nvec_msg *nvec_write_sync(struct nvec_chip *nvec,

commit 0cab4cb8526d7367c912c9a871d3ad1a9ac1fbf0
Author: Julian Andres Klode <jak@jak-linux.org>
Date:   Tue Sep 27 19:00:51 2011 +0200

    staging: nvec: Rewrite the interrupt handler
    
    Rewrite the interrupt handler to use a state machine similar to
    that found in the various kernels for the Advent Vega. This also
    changes the code to use the new functions introduced in the
    previous commits.
    
    This also merges the rewrite sent in August 2011 by Marc
    Dietrich, and thus also includes code by him. His original
    patch can be found on the mailing list.
    
    Signed-off-by: Julian Andres Klode <jak@jak-linux.org>
    Acked-by: Marc Dietrich <marvin24@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/staging/nvec/nvec.h b/drivers/staging/nvec/nvec.h
index 544080259e2c..851d7831a11d 100644
--- a/drivers/staging/nvec/nvec.h
+++ b/drivers/staging/nvec/nvec.h
@@ -23,39 +23,36 @@
 /* NVEC_POOL_SIZE - Size of the pool in &struct nvec_msg */
 #define NVEC_POOL_SIZE	64
 
-typedef enum {
+/*
+ * NVEC_MSG_SIZE - Maximum size of the data field of &struct nvec_msg.
+ *
+ * A message must store up to a SMBus block operation which consists of
+ * one command byte, one count byte, and up to 32 payload bytes = 34
+ * byte.
+ */
+#define NVEC_MSG_SIZE	34
+
+enum {
 	NVEC_2BYTES,
 	NVEC_3BYTES,
-	NVEC_VAR_SIZE
-} nvec_size;
-
-typedef enum {
-	NOT_REALLY,
-	YES,
-	NOT_AT_ALL,
-} how_care;
+	NVEC_VAR_SIZE,
+};
 
-typedef enum {
+enum {
 	NVEC_SYS = 1,
 	NVEC_BAT,
 	NVEC_KBD = 5,
 	NVEC_PS2,
 	NVEC_CNTL,
 	NVEC_KB_EVT = 0x80,
-	NVEC_PS2_EVT
-} nvec_event;
-
-typedef enum {
-	NVEC_WAIT,
-	NVEC_READ,
-	NVEC_WRITE
-} nvec_state;
+	NVEC_PS2_EVT,
+};
 
 struct nvec_msg {
-	unsigned char *data;
+	struct list_head node;
+	unsigned char data[NVEC_MSG_SIZE];
 	unsigned short size;
 	unsigned short pos;
-	struct list_head node;
 	atomic_t used;
 };
 
@@ -77,24 +74,35 @@ struct nvec_chip {
 	int i2c_addr;
 	void __iomem *base;
 	struct clk *i2c_clk;
-	nvec_state state;
 	struct atomic_notifier_head notifier_list;
 	struct list_head rx_data, tx_data;
 	struct notifier_block nvec_status_notifier;
 	struct work_struct rx_work, tx_work;
-	struct nvec_msg *rx, *tx;
+	struct workqueue_struct *wq;
 	struct nvec_msg msg_pool[NVEC_POOL_SIZE];
+	struct nvec_msg *rx;
+
+	struct nvec_msg *tx;
+	struct nvec_msg tx_scratch;
+	struct completion ec_transfer;
+
+	spinlock_t tx_lock, rx_lock;
 
 	/* sync write stuff */
-	struct semaphore sync_write_mutex;
+	struct mutex sync_write_mutex;
 	struct completion sync_write;
 	u16 sync_write_pending;
 	struct nvec_msg *last_sync_msg;
+
+	int state;
 };
 
 extern void nvec_write_async(struct nvec_chip *nvec, const unsigned char *data,
 			     short size);
 
+extern struct nvec_msg *nvec_write_sync(struct nvec_chip *nvec,
+					const unsigned char *data, short size);
+
 extern int nvec_register_notifier(struct nvec_chip *nvec,
 				  struct notifier_block *nb,
 				  unsigned int events);
@@ -103,10 +111,6 @@ extern int nvec_unregister_notifier(struct device *dev,
 				    struct notifier_block *nb,
 				    unsigned int events);
 
-const char *nvec_send_msg(unsigned char *src, unsigned char *dst_size,
-			  how_care care_resp,
-			  void (*rt_handler) (unsigned char *data));
-
 #define I2C_CNFG			0x00
 #define I2C_CNFG_PACKET_MODE_EN		(1<<10)
 #define I2C_CNFG_NEW_MASTER_SFM		(1<<11)

commit 0b1076c4b2a06e517fafbb2b4704f23e69b05386
Author: Julian Andres Klode <jak@jak-linux.org>
Date:   Tue Sep 27 19:00:48 2011 +0200

    staging: nvec: Introduce new internal API for msg alloc/free
    
    Introduce two new functions nvec_msg_alloc() and nvec_msg_free()
    that allocate and free message buffers from the internal pool
    of messages.
    
    Signed-off-by: Julian Andres Klode <jak@jak-linux.org>
    Acked-by: Marc Dietrich <marvin24@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/staging/nvec/nvec.h b/drivers/staging/nvec/nvec.h
index fe11225bcec1..544080259e2c 100644
--- a/drivers/staging/nvec/nvec.h
+++ b/drivers/staging/nvec/nvec.h
@@ -16,9 +16,13 @@
 #ifndef __LINUX_MFD_NVEC
 #define __LINUX_MFD_NVEC
 
+#include <linux/atomic.h>
 #include <linux/notifier.h>
 #include <linux/semaphore.h>
 
+/* NVEC_POOL_SIZE - Size of the pool in &struct nvec_msg */
+#define NVEC_POOL_SIZE	64
+
 typedef enum {
 	NVEC_2BYTES,
 	NVEC_3BYTES,
@@ -52,6 +56,7 @@ struct nvec_msg {
 	unsigned short size;
 	unsigned short pos;
 	struct list_head node;
+	atomic_t used;
 };
 
 struct nvec_subdev {
@@ -78,6 +83,7 @@ struct nvec_chip {
 	struct notifier_block nvec_status_notifier;
 	struct work_struct rx_work, tx_work;
 	struct nvec_msg *rx, *tx;
+	struct nvec_msg msg_pool[NVEC_POOL_SIZE];
 
 	/* sync write stuff */
 	struct semaphore sync_write_mutex;

commit 162c7d8c4be2d599583c42c2a8fe99bed6d87f67
Author: Marc Dietrich <marvin24@gmx.de>
Date:   Tue Sep 27 19:00:40 2011 +0200

    staging: nvec: coding style fixes / add copyright notice
    
    This patch fixes coding style and adds copyright notices.
    
    Signed-off-by: Marc Dietrich <marvin24@gmx.de>
    [jak@jak-linux.org: Merge later cleanup into that patch]
    Signed-off-by: Julian Andres Klode <jak@jak-linux.org>
    Acked-by: Marc Dietrich <marvin24@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/staging/nvec/nvec.h b/drivers/staging/nvec/nvec.h
index 7cf9b01f8989..fe11225bcec1 100644
--- a/drivers/staging/nvec/nvec.h
+++ b/drivers/staging/nvec/nvec.h
@@ -1,3 +1,18 @@
+/*
+ * NVEC: NVIDIA compliant embedded controller interface
+ *
+ * Copyright (C) 2011 The AC100 Kernel Team <ac100@lists.launchpad.net>
+ *
+ * Authors:  Pierre-Hugues Husson <phhusson@free.fr>
+ *           Ilya Petrov <ilya.muromec@gmail.com>
+ *           Marc Dietrich <marvin24@gmx.de>
+ *
+ * This file is subject to the terms and conditions of the GNU General Public
+ * License.  See the file "COPYING" in the main directory of this archive
+ * for more details.
+ *
+ */
+
 #ifndef __LINUX_MFD_NVEC
 #define __LINUX_MFD_NVEC
 
@@ -17,7 +32,7 @@ typedef enum {
 } how_care;
 
 typedef enum {
-	NVEC_SYS=1,
+	NVEC_SYS = 1,
 	NVEC_BAT,
 	NVEC_KBD = 5,
 	NVEC_PS2,
@@ -27,9 +42,9 @@ typedef enum {
 } nvec_event;
 
 typedef enum {
-       NVEC_WAIT,
-       NVEC_READ,
-       NVEC_WRITE
+	NVEC_WAIT,
+	NVEC_READ,
+	NVEC_WRITE
 } nvec_state;
 
 struct nvec_msg {
@@ -64,22 +79,27 @@ struct nvec_chip {
 	struct work_struct rx_work, tx_work;
 	struct nvec_msg *rx, *tx;
 
-/* sync write stuff */
+	/* sync write stuff */
 	struct semaphore sync_write_mutex;
 	struct completion sync_write;
 	u16 sync_write_pending;
 	struct nvec_msg *last_sync_msg;
 };
 
-extern void nvec_write_async(struct nvec_chip *nvec, unsigned char *data, short size);
+extern void nvec_write_async(struct nvec_chip *nvec, const unsigned char *data,
+			     short size);
 
 extern int nvec_register_notifier(struct nvec_chip *nvec,
-		 struct notifier_block *nb, unsigned int events);
+				  struct notifier_block *nb,
+				  unsigned int events);
 
 extern int nvec_unregister_notifier(struct device *dev,
-		struct notifier_block *nb, unsigned int events);
+				    struct notifier_block *nb,
+				    unsigned int events);
 
-const char *nvec_send_msg(unsigned char *src, unsigned char *dst_size, how_care care_resp, void (*rt_handler)(unsigned char *data));
+const char *nvec_send_msg(unsigned char *src, unsigned char *dst_size,
+			  how_care care_resp,
+			  void (*rt_handler) (unsigned char *data));
 
 #define I2C_CNFG			0x00
 #define I2C_CNFG_PACKET_MODE_EN		(1<<10)

commit 7974035c008d98ec23ec76d9f10bff2dfd866ecf
Author: Julian Andres Klode <jak@jak-linux.org>
Date:   Tue Sep 27 19:00:39 2011 +0200

    staging: nvec: Include missing headers
    
    Those headers were apparently included by other headers
    previously, but are not anymore.
    
    Signed-off-by: Julian Andres Klode <jak@jak-linux.org>
    Acked-by: Marc Dietrich <marvin24@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/staging/nvec/nvec.h b/drivers/staging/nvec/nvec.h
index d9ff721d1d8d..7cf9b01f8989 100644
--- a/drivers/staging/nvec/nvec.h
+++ b/drivers/staging/nvec/nvec.h
@@ -1,6 +1,7 @@
 #ifndef __LINUX_MFD_NVEC
 #define __LINUX_MFD_NVEC
 
+#include <linux/notifier.h>
 #include <linux/semaphore.h>
 
 typedef enum {

commit f686e9affba24cfdf94fb155aaeb36a1e14719f1
Author: Marc Dietrich <marvin24@gmx.de>
Date:   Wed Aug 24 20:23:07 2011 +0200

    staging: nvec: convert to use platform register and mfdcells
    
    This patch converts the nvec to use mfd cells and improves the
    registration of the platform driver. The child drivers are also
    converted to use mfd cells and platform registration.
    
    Signed-off-by: Marc Dietrich <marvin24@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/staging/nvec/nvec.h b/drivers/staging/nvec/nvec.h
index a2d82dce62d7..d9ff721d1d8d 100644
--- a/drivers/staging/nvec/nvec.h
+++ b/drivers/staging/nvec/nvec.h
@@ -45,21 +45,17 @@ struct nvec_subdev {
 };
 
 struct nvec_platform_data {
-	int num_subdevs;
 	int i2c_addr;
 	int gpio;
-	int irq;
-	int base;
-	int size;
-	char clock[16];
-	struct nvec_subdev *subdevs;
 };
 
 struct nvec_chip {
 	struct device *dev;
 	int gpio;
 	int irq;
-	unsigned char *i2c_regs;
+	int i2c_addr;
+	void __iomem *base;
+	struct clk *i2c_clk;
 	nvec_state state;
 	struct atomic_notifier_head notifier_list;
 	struct list_head rx_data, tx_data;
@@ -84,9 +80,6 @@ extern int nvec_unregister_notifier(struct device *dev,
 
 const char *nvec_send_msg(unsigned char *src, unsigned char *dst_size, how_care care_resp, void (*rt_handler)(unsigned char *data));
 
-extern int nvec_ps2(struct nvec_chip *nvec);
-extern int nvec_kbd_init(struct nvec_chip *nvec);
-
 #define I2C_CNFG			0x00
 #define I2C_CNFG_PACKET_MODE_EN		(1<<10)
 #define I2C_CNFG_NEW_MASTER_SFM		(1<<11)

commit 32890b983086136fef8721363a2d3860f337ad53
Author: Marc Dietrich <marvin24@gmx.de>
Date:   Thu May 19 16:34:42 2011 +0200

    Staging: initial version of the nvec driver
    
    This is an implementation of a NVidia compliant embedded controller
    protocol driver. It is used on some ARM-Tegra boards for device
    communication.
    
    Signed-off-by: Marc Dietrich <marvin24@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/staging/nvec/nvec.h b/drivers/staging/nvec/nvec.h
new file mode 100644
index 000000000000..a2d82dce62d7
--- /dev/null
+++ b/drivers/staging/nvec/nvec.h
@@ -0,0 +1,110 @@
+#ifndef __LINUX_MFD_NVEC
+#define __LINUX_MFD_NVEC
+
+#include <linux/semaphore.h>
+
+typedef enum {
+	NVEC_2BYTES,
+	NVEC_3BYTES,
+	NVEC_VAR_SIZE
+} nvec_size;
+
+typedef enum {
+	NOT_REALLY,
+	YES,
+	NOT_AT_ALL,
+} how_care;
+
+typedef enum {
+	NVEC_SYS=1,
+	NVEC_BAT,
+	NVEC_KBD = 5,
+	NVEC_PS2,
+	NVEC_CNTL,
+	NVEC_KB_EVT = 0x80,
+	NVEC_PS2_EVT
+} nvec_event;
+
+typedef enum {
+       NVEC_WAIT,
+       NVEC_READ,
+       NVEC_WRITE
+} nvec_state;
+
+struct nvec_msg {
+	unsigned char *data;
+	unsigned short size;
+	unsigned short pos;
+	struct list_head node;
+};
+
+struct nvec_subdev {
+	const char *name;
+	void *platform_data;
+	int id;
+};
+
+struct nvec_platform_data {
+	int num_subdevs;
+	int i2c_addr;
+	int gpio;
+	int irq;
+	int base;
+	int size;
+	char clock[16];
+	struct nvec_subdev *subdevs;
+};
+
+struct nvec_chip {
+	struct device *dev;
+	int gpio;
+	int irq;
+	unsigned char *i2c_regs;
+	nvec_state state;
+	struct atomic_notifier_head notifier_list;
+	struct list_head rx_data, tx_data;
+	struct notifier_block nvec_status_notifier;
+	struct work_struct rx_work, tx_work;
+	struct nvec_msg *rx, *tx;
+
+/* sync write stuff */
+	struct semaphore sync_write_mutex;
+	struct completion sync_write;
+	u16 sync_write_pending;
+	struct nvec_msg *last_sync_msg;
+};
+
+extern void nvec_write_async(struct nvec_chip *nvec, unsigned char *data, short size);
+
+extern int nvec_register_notifier(struct nvec_chip *nvec,
+		 struct notifier_block *nb, unsigned int events);
+
+extern int nvec_unregister_notifier(struct device *dev,
+		struct notifier_block *nb, unsigned int events);
+
+const char *nvec_send_msg(unsigned char *src, unsigned char *dst_size, how_care care_resp, void (*rt_handler)(unsigned char *data));
+
+extern int nvec_ps2(struct nvec_chip *nvec);
+extern int nvec_kbd_init(struct nvec_chip *nvec);
+
+#define I2C_CNFG			0x00
+#define I2C_CNFG_PACKET_MODE_EN		(1<<10)
+#define I2C_CNFG_NEW_MASTER_SFM		(1<<11)
+#define I2C_CNFG_DEBOUNCE_CNT_SHIFT	12
+
+#define I2C_SL_CNFG		0x20
+#define I2C_SL_NEWL		(1<<2)
+#define I2C_SL_NACK		(1<<1)
+#define I2C_SL_RESP		(1<<0)
+#define I2C_SL_IRQ		(1<<3)
+#define END_TRANS		(1<<4)
+#define RCVD			(1<<2)
+#define RNW			(1<<1)
+
+#define I2C_SL_RCVD		0x24
+#define I2C_SL_STATUS		0x28
+#define I2C_SL_ADDR1		0x2c
+#define I2C_SL_ADDR2		0x30
+#define I2C_SL_DELAY_COUNT	0x3c
+
+#endif
