commit 7dc7967fc39af81191558f63eeaf3d2b83899b1c
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Apr 19 20:42:05 2019 +0200

    staging: kpc2000: add initial set of Daktronics drivers
    
    These drivers have been outside of the kernel tree since the 2.x days,
    and it's time to bring them into the tree so they can get properly
    cleaned up.
    
    This first dump of drivers is based on a tarball Matt gave to me, minus
    an odd "dma" driver that I could not get to build at all.  I renamed a
    few files, added the proper SPDX lines to it, added Kconfig entries and
    tied it into the kernel build.  I also fixed up a number of initial
    obvious kernel build warnings, but left the odd bitfield warning that
    gcc is spitting out, as I'm not quite sure what to do about that.
    
    There's loads of low-hanging coding style cleanups in here for people to
    start attacking, as well as the more obvious logic and api cleanups as
    well.
    
    Cc: Matt Sickler <Matt.Sickler@daktronics.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/kpc2000/kpc.h b/drivers/staging/kpc2000/kpc.h
new file mode 100644
index 000000000000..a3fc9c9221aa
--- /dev/null
+++ b/drivers/staging/kpc2000/kpc.h
@@ -0,0 +1,23 @@
+/* SPDX-License-Identifier: GPL-2.0+ */
+#ifndef KPC_H_
+#define KPC_H_
+
+/* *****  Driver Names  ***** */
+#define KP_DRIVER_NAME_KP2000           "kp2000"
+#define KP_DRIVER_NAME_INVALID          "kpc_invalid"
+#define KP_DRIVER_NAME_DMA_CONTROLLER   "kpc_nwl_dma"
+#define KP_DRIVER_NAME_UIO              "uio_pdrv_genirq"
+#define KP_DRIVER_NAME_I2C              "kpc_i2c"
+#define KP_DRIVER_NAME_SPI              "kpc_spi"
+
+struct kpc_core_device_platdata {
+	u32 card_id;
+	u32 build_version;
+	u32 hardware_revision;
+	u64 ssid;
+	u64 ddna;
+};
+
+#define PCI_DEVICE_ID_DAKTRONICS_KADOKA_P2KR0           0x4b03
+
+#endif /* KPC_H_ */
