commit 77612720a2362230af726baa4149c40ec7a7fb05
Author: Sricharan R <sricharan@codeaurora.org>
Date:   Tue Aug 14 17:42:31 2018 +0530

    clk: qcom: Add safe switch hook for krait mux clocks
    
    When the Hfplls are reprogrammed during the rate change,
    the primary muxes which are sourced from the same hfpll
    for higher frequencies, needs to be switched to the 'safe
    secondary mux' as the parent for that small window. This
    is done by registering a clk notifier for the muxes and
    switching to the safe parent in the PRE_RATE_CHANGE notifier
    and back to the original parent in the POST_RATE_CHANGE notifier.
    
    Signed-off-by: Sricharan R <sricharan@codeaurora.org>
    Tested-by: Craig Tatlor <ctatlor97@gmail.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>

diff --git a/drivers/clk/qcom/clk-krait.h b/drivers/clk/qcom/clk-krait.h
index 441ba1e18b81..9120bd2f5297 100644
--- a/drivers/clk/qcom/clk-krait.h
+++ b/drivers/clk/qcom/clk-krait.h
@@ -12,6 +12,9 @@ struct krait_mux_clk {
 	u32		shift;
 	u32		en_mask;
 	bool		lpl;
+	u8		safe_sel;
+	u8		old_index;
+	bool		reparent;
 
 	struct clk_hw	hw;
 	struct notifier_block   clk_nb;

commit 4d7dc77babfef1d6cb8fd825e2f17dc3384c3272
Author: Stephen Boyd <sboyd@codeaurora.org>
Date:   Tue Aug 14 17:42:26 2018 +0530

    clk: qcom: Add support for Krait clocks
    
    The Krait clocks are made up of a series of muxes and a divider
    that choose between a fixed rate clock and dedicated HFPLLs for
    each CPU. Instead of using mmio accesses to remux parents, the
    Krait implementation exposes the remux control via cp15
    registers. Support these clocks.
    
    Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: Sricharan R <sricharan@codeaurora.org>
    Tested-by: Craig Tatlor <ctatlor97@gmail.com>
    [sboyd@kernel.org: Move hidden config to top outside of the visible qcom
    config zone so that menuconfig looks nice]
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>

diff --git a/drivers/clk/qcom/clk-krait.h b/drivers/clk/qcom/clk-krait.h
new file mode 100644
index 000000000000..441ba1e18b81
--- /dev/null
+++ b/drivers/clk/qcom/clk-krait.h
@@ -0,0 +1,37 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+
+#ifndef __QCOM_CLK_KRAIT_H
+#define __QCOM_CLK_KRAIT_H
+
+#include <linux/clk-provider.h>
+
+struct krait_mux_clk {
+	unsigned int	*parent_map;
+	u32		offset;
+	u32		mask;
+	u32		shift;
+	u32		en_mask;
+	bool		lpl;
+
+	struct clk_hw	hw;
+	struct notifier_block   clk_nb;
+};
+
+#define to_krait_mux_clk(_hw) container_of(_hw, struct krait_mux_clk, hw)
+
+extern const struct clk_ops krait_mux_clk_ops;
+
+struct krait_div2_clk {
+	u32		offset;
+	u8		width;
+	u32		shift;
+	bool		lpl;
+
+	struct clk_hw	hw;
+};
+
+#define to_krait_div2_clk(_hw) container_of(_hw, struct krait_div2_clk, hw)
+
+extern const struct clk_ops krait_div2_clk_ops;
+
+#endif
