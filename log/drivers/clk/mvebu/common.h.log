commit c3828949a21d95326f08f02d97fea97172319300
Author: Gregory CLEMENT <gregory.clement@bootlin.com>
Date:   Wed Sep 12 15:40:17 2018 +0200

    clk: mvebu: use SPDX-License-Identifier
    
    Convert the remaining files to SPDX license description.
    
    Signed-off-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>

diff --git a/drivers/clk/mvebu/common.h b/drivers/clk/mvebu/common.h
index f0de6c8a494a..d1ab79b43105 100644
--- a/drivers/clk/mvebu/common.h
+++ b/drivers/clk/mvebu/common.h
@@ -1,3 +1,4 @@
+/* SPDX-License-Identifier: GPL-2.0 */
 /*
  * Marvell EBU SoC common clock handling
  *
@@ -7,9 +8,6 @@
  * Sebastian Hesselbarth <sebastian.hesselbarth@gmail.com>
  * Andrew Lunn <andrew@lunn.ch>
  *
- * This file is licensed under the terms of the GNU General Public
- * License version 2. This program is licensed "as is" without any
- * warranty of any kind, whether express or implied.
  */
 
 #ifndef __CLK_MVEBU_COMMON_H_

commit 42b5f40610fd222a9e7100f5b77582940bfdcbde
Author: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
Date:   Tue Mar 3 15:41:08 2015 +0100

    clk: mvebu: extend common code to allow an optional refclk
    
    The Armada 39x, contrary to its predecessor, has a configurable
    reference clock frequency, of either 25 Mhz, or 40 Mhz. For the
    previous SoCs, it was fixed to 25 Mhz and described directly as such
    in the Device Tree.
    
    For Armada 39x, we need to read certain registers to know whether the
    frequency is 25 or 40 Mhz. Therefore, this commit extends the common
    mvebu clock code to allow the SoC-specific code to say it wants to
    register a reference clock, by giving a non-NULL ->get_refclk_freq()
    function pointer in its coreclk_soc_desc structure.
    
    Signed-off-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Signed-off-by: Gregory CLEMENT <gregory.clement@free-electrons.com>

diff --git a/drivers/clk/mvebu/common.h b/drivers/clk/mvebu/common.h
index 783b5631a453..f0de6c8a494a 100644
--- a/drivers/clk/mvebu/common.h
+++ b/drivers/clk/mvebu/common.h
@@ -30,6 +30,7 @@ struct coreclk_soc_desc {
 	u32 (*get_tclk_freq)(void __iomem *sar);
 	u32 (*get_cpu_freq)(void __iomem *sar);
 	void (*get_clk_ratio)(void __iomem *sar, int id, int *mult, int *div);
+	u32 (*get_refclk_freq)(void __iomem *sar);
 	bool (*is_sscg_enabled)(void __iomem *sar);
 	u32 (*fix_sscg_deviation)(u32 system_clk);
 	const struct coreclk_ratio *ratios;

commit a66993e05b6af0d981ba2cc9a529df63151942b5
Merge: 23c4a3a52127 5f093ee76c8f
Author: Mike Turquette <mturquette@linaro.org>
Date:   Fri Oct 3 16:43:02 2014 -0700

    Merge tag 'clk-mvebu-3.18-2' of git://git.infradead.org/linux-mvebu into clk-next
    
    clock mvebu changes for v3.18 (round 2)
    
     - armada 370/375
        - Fix SSCG node lookup

commit 8791db53a9d2556b8908af300d8327eecb110d8a
Merge: c873d14d30b8 ceac26c64200
Author: Mike Turquette <mturquette@linaro.org>
Date:   Fri Sep 26 17:04:08 2014 -0700

    Merge tag 'clk-mvebu-3.18' of git://git.infradead.org/linux-mvebu into clk-next
    
    clock changes for mvebu for v3.18
    
     - correct timer drift caused by SSCG deviation
     - fix typo in comment

commit 5f093ee76c8fc1ec82de8da04bd087663c853e7b
Author: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
Date:   Tue Sep 16 17:15:03 2014 +0200

    clk: mvebu: fix sscg node lookup
    
    Commit 15917b16022427c53755abff4dc7051f3076dd7a ("clk: mvebu: Fix clk
    frequency value if SSCG is enabled") introduced some logic in the
    common mvebu clock code to adjust the clock frequency according to the
    configuration of the SSCG.
    
    In order to do this, it looks up for a DT node called "sscg" and maps
    it before accessing the SSCG configuration register.
    
    However, the lookup is currently done using:
    
             sscg_np = of_find_node_by_name(np, "sscg");
    
    where "np" is a pointer to the DT node of the clock for which we are
    calculating the adjusted frequency. This means that if the "sscg" node
    is *after* the clock node in the Device Tree, it works fine (and
    that's the case for Armada 370).
    
    However, if it turns out that the "sscg" node is *before* the clock
    node in the Device Tree, it won't work because the sscg node will not
    be found.
    
    What we really want here is a search of the entire Device Tree, not
    only starting from the clock node, so instead of passing "np" as first
    argument of of_find_node_by_name(), we simply need to pass
    NULL. Passing a non-NULL argument is typically used in a loop, so that
    the search for the next matching node starts right after the node that
    was matched.
    
    This makes the "np" argument to the kirkwood_fix_sscg_deviation()
    function unnecessary, which leads to further cleanups.
    
    Signed-off-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Fixes: 15917b1602242 ("clk: mvebu: Fix clk frequency value if SSCG is enabled")
    Acked-by: Gregory CLEMENT <gregory.clement@free-electrons.com>
    Link: https://lkml.kernel.org/r/1410880503-2322-1-git-send-email-thomas.petazzoni@free-electrons.com
    Signed-off-by: Jason Cooper <jason@lakedaemon.net>

diff --git a/drivers/clk/mvebu/common.h b/drivers/clk/mvebu/common.h
index 59efaa850bde..989ab1464617 100644
--- a/drivers/clk/mvebu/common.h
+++ b/drivers/clk/mvebu/common.h
@@ -29,7 +29,7 @@ struct coreclk_soc_desc {
 	u32 (*get_cpu_freq)(void __iomem *sar);
 	void (*get_clk_ratio)(void __iomem *sar, int id, int *mult, int *div);
 	bool (*is_sscg_enabled)(void __iomem *sar);
-	u32 (*fix_sscg_deviation)(struct device_node *np, u32 system_clk);
+	u32 (*fix_sscg_deviation)(u32 system_clk);
 	const struct coreclk_ratio *ratios;
 	int num_ratios;
 };
@@ -51,5 +51,5 @@ void __init mvebu_clk_gating_setup(struct device_node *np,
  * This function is shared among the Kirkwood, Armada 370, Armada XP
  * and Armada 375 SoC
  */
-u32 kirkwood_fix_sscg_deviation(struct device_node *np, u32 system_clk);
+u32 kirkwood_fix_sscg_deviation(u32 system_clk);
 #endif

commit 15917b16022427c53755abff4dc7051f3076dd7a
Author: Gregory CLEMENT <gregory.clement@free-electrons.com>
Date:   Tue Sep 2 10:15:16 2014 +0200

    clk: mvebu: Fix clk frequency value if SSCG is enabled
    
    When the SSCG (Spread Spectrum Clock Generator) is enabled, it shifts
    the frequency of the clock. The percentage is no more than 1% but when
    the clock is used for a timer it leads to a clock drift.
    
    This patch allows to correct the affected clock when the SSCG is
    enabled. The check is done in an new optional function related to each
    SoC: is_sscg_enabled(). The fix is done with the other new optional
    function related to each SoC: fix_sscg_deviation. If one these
    functions are not present then no correction is done on the clock
    frequency.
    
    Signed-off-by: Gregory CLEMENT <gregory.clement@free-electrons.com>
    Tested-by: Leigh Brown <leigh@solinno.co.uk>
    Link: https://lkml.kernel.org/r/1409645719-20003-2-git-send-email-gregory.clement@free-electrons.com
    Signed-off-by: Jason Cooper <jason@lakedaemon.net>

diff --git a/drivers/clk/mvebu/common.h b/drivers/clk/mvebu/common.h
index f968b4d9df92..59efaa850bde 100644
--- a/drivers/clk/mvebu/common.h
+++ b/drivers/clk/mvebu/common.h
@@ -28,6 +28,8 @@ struct coreclk_soc_desc {
 	u32 (*get_tclk_freq)(void __iomem *sar);
 	u32 (*get_cpu_freq)(void __iomem *sar);
 	void (*get_clk_ratio)(void __iomem *sar, int id, int *mult, int *div);
+	bool (*is_sscg_enabled)(void __iomem *sar);
+	u32 (*fix_sscg_deviation)(struct device_node *np, u32 system_clk);
 	const struct coreclk_ratio *ratios;
 	int num_ratios;
 };
@@ -45,4 +47,9 @@ void __init mvebu_coreclk_setup(struct device_node *np,
 void __init mvebu_clk_gating_setup(struct device_node *np,
 				   const struct clk_gating_soc_desc *desc);
 
+/*
+ * This function is shared among the Kirkwood, Armada 370, Armada XP
+ * and Armada 375 SoC
+ */
+u32 kirkwood_fix_sscg_deviation(struct device_node *np, u32 system_clk);
 #endif

commit 87e392164ab6c0f3f055f8483dc7dc3f1afa19ad
Author: Mike Turquette <mturquette@linaro.org>
Date:   Wed Aug 27 15:36:37 2014 -0700

    clk: mvebu: share locks between gate clocks
    
    Refactor mvebu_clk_gating_setup() to use a common spinlock instead of a
    unique lock for every instance of a struct clk_gating_ctrl object. This
    will be used later for a separate mux clock type that shares a register
    with gate clock types and needs to use the same lock to protect access
    to the register.
    
    Cc: Andrew Lunn <andrew@lunn.ch>
    Tested-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: Mike Turquette <mturquette@linaro.org>

diff --git a/drivers/clk/mvebu/common.h b/drivers/clk/mvebu/common.h
index f968b4d9df92..8cd28e47471c 100644
--- a/drivers/clk/mvebu/common.h
+++ b/drivers/clk/mvebu/common.h
@@ -17,6 +17,8 @@
 
 #include <linux/kernel.h>
 
+extern spinlock_t ctrl_gating_lock;
+
 struct device_node;
 
 struct coreclk_ratio {

commit a45184099affdd5d14fc357376d388ae069ec79a
Author: Sebastian Hesselbarth <sebastian.hesselbarth@gmail.com>
Date:   Sat May 11 03:08:02 2013 +0200

    clk: mvebu: add common clock functions for core clk and clk gating
    
    Based on the current common functions for core clocks and clock
    gating control, new common functions are joined in a single file.
    Given the opportunity, names of functions and structs are unified,
    and also a Kconfig entry is added.
    
    Signed-off-by: Sebastian Hesselbarth <sebastian.hesselbarth@gmail.com>
    Tested-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Acked-by: Mike Turquette <mturquette@linaro.org>
    Signed-off-by: Jason Cooper <jason@lakedaemon.net>

diff --git a/drivers/clk/mvebu/common.h b/drivers/clk/mvebu/common.h
new file mode 100644
index 000000000000..f968b4d9df92
--- /dev/null
+++ b/drivers/clk/mvebu/common.h
@@ -0,0 +1,48 @@
+/*
+ * Marvell EBU SoC common clock handling
+ *
+ * Copyright (C) 2012 Marvell
+ *
+ * Gregory CLEMENT <gregory.clement@free-electrons.com>
+ * Sebastian Hesselbarth <sebastian.hesselbarth@gmail.com>
+ * Andrew Lunn <andrew@lunn.ch>
+ *
+ * This file is licensed under the terms of the GNU General Public
+ * License version 2. This program is licensed "as is" without any
+ * warranty of any kind, whether express or implied.
+ */
+
+#ifndef __CLK_MVEBU_COMMON_H_
+#define __CLK_MVEBU_COMMON_H_
+
+#include <linux/kernel.h>
+
+struct device_node;
+
+struct coreclk_ratio {
+	int id;
+	const char *name;
+};
+
+struct coreclk_soc_desc {
+	u32 (*get_tclk_freq)(void __iomem *sar);
+	u32 (*get_cpu_freq)(void __iomem *sar);
+	void (*get_clk_ratio)(void __iomem *sar, int id, int *mult, int *div);
+	const struct coreclk_ratio *ratios;
+	int num_ratios;
+};
+
+struct clk_gating_soc_desc {
+	const char *name;
+	const char *parent;
+	int bit_idx;
+	unsigned long flags;
+};
+
+void __init mvebu_coreclk_setup(struct device_node *np,
+				const struct coreclk_soc_desc *desc);
+
+void __init mvebu_clk_gating_setup(struct device_node *np,
+				   const struct clk_gating_soc_desc *desc);
+
+#endif
