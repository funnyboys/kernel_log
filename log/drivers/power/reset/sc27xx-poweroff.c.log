commit a10c9c710f9ecea87b9f4bbb837467893b4bef01
Merge: c48b07226bd4 f78c55e3b480
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Apr 5 13:47:57 2020 -0700

    Merge tag 'for-v5.7' of git://git.kernel.org/pub/scm/linux/kernel/git/sre/linux-power-supply
    
    Pull power supply and reset changes from Sebastian Reichel:
     "Core:
       - Nothing
    
      Drivers:
       - at91-reset: cleanups, proper handling for sam9x60
       - sc27xx, charger-manager: allow building as module
       - sc27xx: add support to read current charge capacity
       - axp288: more quirks for weird hardware
       - misc fixes"
    
    * tag 'for-v5.7' of git://git.kernel.org/pub/scm/linux/kernel/git/sre/linux-power-supply: (26 commits)
      power: reset: sc27xx: Allow the SC27XX poweroff driver building into a module
      power: reset: sc27xx: Change to use cpu_down()
      power: reset: sc27xx: Power off the external subsystems' connection
      power: twl4030: Use scnprintf() for avoiding potential buffer overflow
      power: supply: bq27xxx_battery: Silence deferred-probe error
      power: reset: at91-reset: handle nrst async for sam9x60
      power: reset: at91-reset: get rid of at91_reset_data
      power: reset: at91-reset: keep only one reset function
      power: reset: at91-reset: make at91sam9g45_restart() generic
      power: reset: at91-reset: introduce ramc_lpr to struct at91_reset
      power: reset: at91-reset: use r4 as tmp argument
      power: reset: at91-reset: introduce args member in at91_reset_data
      power: reset: at91-reset: introduce struct at91_reset_data
      power: reset: at91-reset: devm_kzalloc() for at91_reset data structure
      power: reset: at91-reset: pass rstc base address to at91_reset_status()
      power: reset: at91-reset: convert reset in pointer to struct at91_reset
      power: reset: at91-reset: add notifier block to struct at91_reset
      power: reset: at91-reset: add sclk to struct at91_reset
      power: reset: at91-reset: add ramc_base[] to struct at91_reset
      power: reset: at91-reset: introduce struct at91_reset
      ...

commit f78c55e3b4806974f7d590b2aab8683232b7bd25
Author: Baolin Wang <baolin.wang7@gmail.com>
Date:   Mon Mar 9 16:18:46 2020 +0800

    power: reset: sc27xx: Allow the SC27XX poweroff driver building into a module
    
    Change the config to 'tristate' and use module_platform_driver() to
    allow the SC27XX poweroff driver building into a module, as well as
    adding some mudule information.
    
    Signed-off-by: Baolin Wang <baolin.wang7@gmail.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>

diff --git a/drivers/power/reset/sc27xx-poweroff.c b/drivers/power/reset/sc27xx-poweroff.c
index 91b5eceeb810..69863074daf6 100644
--- a/drivers/power/reset/sc27xx-poweroff.c
+++ b/drivers/power/reset/sc27xx-poweroff.c
@@ -6,6 +6,7 @@
 
 #include <linux/cpu.h>
 #include <linux/kernel.h>
+#include <linux/module.h>
 #include <linux/platform_device.h>
 #include <linux/pm.h>
 #include <linux/regmap.h>
@@ -71,4 +72,8 @@ static struct platform_driver sc27xx_poweroff_driver = {
 		.name = "sc27xx-poweroff",
 	},
 };
-builtin_platform_driver(sc27xx_poweroff_driver);
+module_platform_driver(sc27xx_poweroff_driver);
+
+MODULE_DESCRIPTION("Power off driver for SC27XX PMIC Device");
+MODULE_AUTHOR("Baolin Wang <baolin.wang@unisoc.com>");
+MODULE_LICENSE("GPL v2");

commit 274afbc3ad33136962d66447e89d02e3c142a30a
Author: Baolin Wang <baolin.wang7@gmail.com>
Date:   Mon Mar 9 16:18:45 2020 +0800

    power: reset: sc27xx: Change to use cpu_down()
    
    To allow the SC27XX driver can be built as a module, and the
    freeze_secondary_cpus() symbol is not exported, thus we can change
    to use the exported cpu_down() API to shut down other cpus to avoid
    racing, which is same as the freeze_secondary_cpus().
    
    Signed-off-by: Baolin Wang <baolin.wang7@gmail.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>

diff --git a/drivers/power/reset/sc27xx-poweroff.c b/drivers/power/reset/sc27xx-poweroff.c
index 2bedd4c58ddc..91b5eceeb810 100644
--- a/drivers/power/reset/sc27xx-poweroff.c
+++ b/drivers/power/reset/sc27xx-poweroff.c
@@ -29,10 +29,13 @@ static struct regmap *regmap;
  */
 static void sc27xx_poweroff_shutdown(void)
 {
-#ifdef CONFIG_PM_SLEEP_SMP
-	int cpu = smp_processor_id();
+#ifdef CONFIG_HOTPLUG_CPU
+	int cpu;
 
-	freeze_secondary_cpus(cpu);
+	for_each_online_cpu(cpu) {
+		if (cpu != smp_processor_id())
+			cpu_down(cpu);
+	}
 #endif
 }
 

commit 6cdd5b09cbe67365c42aee539f6fd00f2ecfdaab
Author: Sherry Zong <sherry.zong@unisoc.com>
Date:   Mon Mar 9 16:18:44 2020 +0800

    power: reset: sc27xx: Power off the external subsystems' connection
    
    When powering off the whole system, we should power off some external
    subsystems' connection firstly, otherwise some external subsystems
    will hold some power and result in powering down abnormally.
    
    Signed-off-by: Sherry Zong <sherry.zong@unisoc.com>
    Signed-off-by: Baolin Wang <baolin.wang7@gmail.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>

diff --git a/drivers/power/reset/sc27xx-poweroff.c b/drivers/power/reset/sc27xx-poweroff.c
index 29fb08b8faa0..2bedd4c58ddc 100644
--- a/drivers/power/reset/sc27xx-poweroff.c
+++ b/drivers/power/reset/sc27xx-poweroff.c
@@ -13,6 +13,8 @@
 
 #define SC27XX_PWR_PD_HW	0xc2c
 #define SC27XX_PWR_OFF_EN	BIT(0)
+#define SC27XX_SLP_CTRL		0xdf0
+#define SC27XX_LDO_XTL_EN	BIT(3)
 
 static struct regmap *regmap;
 
@@ -40,6 +42,9 @@ static struct syscore_ops poweroff_syscore_ops = {
 
 static void sc27xx_poweroff_do_poweroff(void)
 {
+	/* Disable the external subsys connection's power firstly */
+	regmap_write(regmap, SC27XX_SLP_CTRL, SC27XX_LDO_XTL_EN);
+
 	regmap_write(regmap, SC27XX_PWR_PD_HW, SC27XX_PWR_OFF_EN);
 }
 

commit 93619fdec96fa1cd19e5dffc5031cf4c63e6b431
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue Mar 13 10:54:06 2018 +0000

    power: reset: make function sc27xx_poweroff_shutdown static
    
    The function sc27xx_poweroff_shutdown is local to the source and does
    not need to be in global scope, so make it static.
    
    Cleans up sparse warning:
    drivers/power/reset/sc27xx-poweroff.c:28:6: warning: symbol
    'sc27xx_poweroff_shutdown' was not declared. Should it be static?
    
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.co.uk>

diff --git a/drivers/power/reset/sc27xx-poweroff.c b/drivers/power/reset/sc27xx-poweroff.c
index 65c477eee559..29fb08b8faa0 100644
--- a/drivers/power/reset/sc27xx-poweroff.c
+++ b/drivers/power/reset/sc27xx-poweroff.c
@@ -25,7 +25,7 @@ static struct regmap *regmap;
  * taking cpus down to avoid racing regmap or spi mutex lock when poweroff
  * system through PMIC.
  */
-void sc27xx_poweroff_shutdown(void)
+static void sc27xx_poweroff_shutdown(void)
 {
 #ifdef CONFIG_PM_SLEEP_SMP
 	int cpu = smp_processor_id();

commit 3f5faf3a0667ea39faf7152c5bdd4befb9e483a8
Author: Baolin Wang <baolin.wang@linaro.org>
Date:   Mon Feb 26 10:23:14 2018 +0800

    power: reset: Add Spreadtrum SC27xx PMIC power off support
    
    On Spreadtrum platform, we need power off system through external SC27xx
    series PMICs including the SC2720, SC2721, SC2723, SC2730 and SC2731 chips.
    Thus this patch adds SC27xx series PMICs power-off support.
    
    Signed-off-by: Baolin Wang <baolin.wang@linaro.org>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.co.uk>

diff --git a/drivers/power/reset/sc27xx-poweroff.c b/drivers/power/reset/sc27xx-poweroff.c
new file mode 100644
index 000000000000..65c477eee559
--- /dev/null
+++ b/drivers/power/reset/sc27xx-poweroff.c
@@ -0,0 +1,66 @@
+// SPDX-License-Identifier: GPL-2.0
+/*
+ * Copyright (C) 2018 Spreadtrum Communications Inc.
+ * Copyright (C) 2018 Linaro Ltd.
+ */
+
+#include <linux/cpu.h>
+#include <linux/kernel.h>
+#include <linux/platform_device.h>
+#include <linux/pm.h>
+#include <linux/regmap.h>
+#include <linux/syscore_ops.h>
+
+#define SC27XX_PWR_PD_HW	0xc2c
+#define SC27XX_PWR_OFF_EN	BIT(0)
+
+static struct regmap *regmap;
+
+/*
+ * On Spreadtrum platform, we need power off system through external SC27xx
+ * series PMICs, and it is one similar SPI bus mapped by regmap to access PMIC,
+ * which is not fast io access.
+ *
+ * So before stopping other cores, we need release other cores' resource by
+ * taking cpus down to avoid racing regmap or spi mutex lock when poweroff
+ * system through PMIC.
+ */
+void sc27xx_poweroff_shutdown(void)
+{
+#ifdef CONFIG_PM_SLEEP_SMP
+	int cpu = smp_processor_id();
+
+	freeze_secondary_cpus(cpu);
+#endif
+}
+
+static struct syscore_ops poweroff_syscore_ops = {
+	.shutdown = sc27xx_poweroff_shutdown,
+};
+
+static void sc27xx_poweroff_do_poweroff(void)
+{
+	regmap_write(regmap, SC27XX_PWR_PD_HW, SC27XX_PWR_OFF_EN);
+}
+
+static int sc27xx_poweroff_probe(struct platform_device *pdev)
+{
+	if (regmap)
+		return -EINVAL;
+
+	regmap = dev_get_regmap(pdev->dev.parent, NULL);
+	if (!regmap)
+		return -ENODEV;
+
+	pm_power_off = sc27xx_poweroff_do_poweroff;
+	register_syscore_ops(&poweroff_syscore_ops);
+	return 0;
+}
+
+static struct platform_driver sc27xx_poweroff_driver = {
+	.probe = sc27xx_poweroff_probe,
+	.driver = {
+		.name = "sc27xx-poweroff",
+	},
+};
+builtin_platform_driver(sc27xx_poweroff_driver);
