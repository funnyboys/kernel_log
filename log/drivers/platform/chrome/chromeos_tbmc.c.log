commit 0144c00ed86bc34b8318268fb63f10ecccf0445c
Author: Ravi Chandra Sadineni <ravisadineni@chromium.org>
Date:   Fri Aug 30 16:14:04 2019 -0700

    platform/chrome: chromeos_tbmc: Report wake events
    
    Mark chromeos_tbmc as wake capable and report wake events. This helps to
    abort suspend on seeing a tablet mode switch event when kernel is
    suspending. This also helps identifying if chromeos_tbmc is the wake
    source.
    
    Signed-off-by: Ravi Chandra Sadineni <ravisadineni@chromium.org>
    Signed-off-by: Enric Balletbo i Serra <enric.balletbo@collabora.com>

diff --git a/drivers/platform/chrome/chromeos_tbmc.c b/drivers/platform/chrome/chromeos_tbmc.c
index ce259ec9f990..d1cf8f3463ce 100644
--- a/drivers/platform/chrome/chromeos_tbmc.c
+++ b/drivers/platform/chrome/chromeos_tbmc.c
@@ -47,6 +47,7 @@ static __maybe_unused int chromeos_tbmc_resume(struct device *dev)
 
 static void chromeos_tbmc_notify(struct acpi_device *adev, u32 event)
 {
+	acpi_pm_wakeup_event(&adev->dev);
 	switch (event) {
 	case 0x80:
 		chromeos_tbmc_query_switch(adev, adev->driver_data);
@@ -90,6 +91,7 @@ static int chromeos_tbmc_add(struct acpi_device *adev)
 		dev_err(dev, "cannot register input device\n");
 		return ret;
 	}
+	device_init_wakeup(dev, true);
 	return 0;
 }
 

commit bc3f4b5c60db2a835e68bfdce23b6ae75df7e295
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Mon Oct 8 15:20:41 2018 -0700

    platform/chrome: chromeos_tbmc - Remove unneeded const
    
    Clang warns:
    
    drivers/platform/chrome/chromeos_tbmc.c:102:14: warning: duplicate
    'const' declaration specifier [-Wduplicate-decl-specifier]
    static const SIMPLE_DEV_PM_OPS(chromeos_tbmc_pm_ops, NULL,
                 ^
    ./include/linux/pm.h:365:56: note: expanded from macro
    'SIMPLE_DEV_PM_OPS'
                                                           ^
    1 warning generated.
    
    SIMPLE_DEV_PM_OPS is already declared as const, this one is unnecessary
    so remove it.
    
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Benson Leung <bleung@chromium.org>

diff --git a/drivers/platform/chrome/chromeos_tbmc.c b/drivers/platform/chrome/chromeos_tbmc.c
index 1e81f8144c0d..ce259ec9f990 100644
--- a/drivers/platform/chrome/chromeos_tbmc.c
+++ b/drivers/platform/chrome/chromeos_tbmc.c
@@ -99,7 +99,7 @@ static const struct acpi_device_id chromeos_tbmc_acpi_device_ids[] = {
 };
 MODULE_DEVICE_TABLE(acpi, chromeos_tbmc_acpi_device_ids);
 
-static const SIMPLE_DEV_PM_OPS(chromeos_tbmc_pm_ops, NULL,
+static SIMPLE_DEV_PM_OPS(chromeos_tbmc_pm_ops, NULL,
 		chromeos_tbmc_resume);
 
 static struct acpi_driver chromeos_tbmc_driver = {

commit c474e9f2be9992861d926eea3e5d4fb393cd6e2a
Author: Benson Leung <bleung@chromium.org>
Date:   Tue Jun 5 14:05:29 2018 -0700

    platform/chrome: chromeos_tbmc - fix SPDX identifier
    
    Original submission was GPLv2 only, so mark as GPL-2.0.
    Also restored some descriptive lines that were there before.
    
    Signed-off-by: Benson Leung <bleung@chromium.org>

diff --git a/drivers/platform/chrome/chromeos_tbmc.c b/drivers/platform/chrome/chromeos_tbmc.c
index b935df6a9694..1e81f8144c0d 100644
--- a/drivers/platform/chrome/chromeos_tbmc.c
+++ b/drivers/platform/chrome/chromeos_tbmc.c
@@ -1,8 +1,16 @@
-// SPDX-License-Identifier: GPL-2.0+
+// SPDX-License-Identifier: GPL-2.0
 // Driver to detect Tablet Mode for ChromeOS convertible.
 //
 // Copyright (C) 2017 Google, Inc.
 // Author: Gwendal Grignou <gwendal@chromium.org>
+//
+// On Chromebook using ACPI, this device listens for notification
+// from GOOG0006 and issue method TBMC to retrieve the status.
+//
+// GOOG0006 issues the notification when it receives EC_HOST_EVENT_MODE_CHANGE
+// from the EC.
+// Method TBMC reads EC_ACPI_MEM_DEVICE_ORIENTATION byte from the shared
+// memory region.
 
 #include <linux/acpi.h>
 #include <linux/input.h>

commit 4574d1d61da3561713a6bb7332abe8ff5a9c7fbf
Author: Benson Leung <bleung@chromium.org>
Date:   Wed May 23 12:00:47 2018 -0700

    platform/chrome: chromeos_tbmc - add SPDX identifier
    
    Replace the original license statement with the SPDX identifier.
    Add also one line of description as recommended by the COPYING file.
    
    Signed-off-by: Benson Leung <bleung@chromium.org>

diff --git a/drivers/platform/chrome/chromeos_tbmc.c b/drivers/platform/chrome/chromeos_tbmc.c
index c87e53319dae..b935df6a9694 100644
--- a/drivers/platform/chrome/chromeos_tbmc.c
+++ b/drivers/platform/chrome/chromeos_tbmc.c
@@ -1,25 +1,8 @@
-/*
- * chromeos_tbmc - Driver to detect Tablet Mode for ChromeOS convertible.
- *
- * Copyright 2017 Google, Inc
- *
- * This software is licensed under the terms of the GNU General Public
- * License version 2, as published by the Free Software Foundation, and
- * may be copied, distributed, and modified under those terms.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * On Chromebook using ACPI, this device listens for notification
- * from GOOG0006 and issue method TBMC to retrieve the status.
- *
- * GOOG0006 issues the notification when it receives EC_HOST_EVENT_MODE_CHANGE
- * from the EC.
- * Method TBMC reads EC_ACPI_MEM_DEVICE_ORIENTATION byte from the shared
- * memory region.
- */
+// SPDX-License-Identifier: GPL-2.0+
+// Driver to detect Tablet Mode for ChromeOS convertible.
+//
+// Copyright (C) 2017 Google, Inc.
+// Author: Gwendal Grignou <gwendal@chromium.org>
 
 #include <linux/acpi.h>
 #include <linux/input.h>

commit b418f74170d7e066bad802e8563cabdb1b6032c6
Author: Gwendal Grignou <gwendal@chromium.org>
Date:   Mon Jan 30 15:47:22 2017 -0800

    platform: chrome: Add Tablet Switch ACPI driver
    
    Add a kernel driver for GOOG0006, an ACPI driver reporting an event when
    the tablet switch status changes.
    
    On an ACPI based convertible chromebook check evtest display tablet mode
    switch changes:
    Available devices:
    ..
    /dev/input/event3:      Tablet Mode Switch
    ..
    Testing ... (interrupt to exit)
    Event: time 1484879712.604360, type 5 (EV_SW), code 1 (SW_TABLET_MODE),
    value 1
    Event: time 1484879712.604360, -------------- SYN_REPORT ------------
    Event: time 1484879715.132228, type 5 (EV_SW), code 1 (SW_TABLET_MODE),
    value 0
    Event: time 1484879715.132228, -------------- SYN_REPORT ------------
    ...
    Check state is updated at resume time when different from suspend time.
    
    Signed-off-by: Gwendal Grignou <gwendal@chromium.org>
    Signed-off-by: Benson Leung <bleung@chromium.org>

diff --git a/drivers/platform/chrome/chromeos_tbmc.c b/drivers/platform/chrome/chromeos_tbmc.c
new file mode 100644
index 000000000000..c87e53319dae
--- /dev/null
+++ b/drivers/platform/chrome/chromeos_tbmc.c
@@ -0,0 +1,128 @@
+/*
+ * chromeos_tbmc - Driver to detect Tablet Mode for ChromeOS convertible.
+ *
+ * Copyright 2017 Google, Inc
+ *
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * On Chromebook using ACPI, this device listens for notification
+ * from GOOG0006 and issue method TBMC to retrieve the status.
+ *
+ * GOOG0006 issues the notification when it receives EC_HOST_EVENT_MODE_CHANGE
+ * from the EC.
+ * Method TBMC reads EC_ACPI_MEM_DEVICE_ORIENTATION byte from the shared
+ * memory region.
+ */
+
+#include <linux/acpi.h>
+#include <linux/input.h>
+#include <linux/io.h>
+#include <linux/module.h>
+#include <linux/printk.h>
+
+#define DRV_NAME "chromeos_tbmc"
+#define ACPI_DRV_NAME "GOOG0006"
+
+static int chromeos_tbmc_query_switch(struct acpi_device *adev,
+				     struct input_dev *idev)
+{
+	unsigned long long state;
+	acpi_status status;
+
+	status = acpi_evaluate_integer(adev->handle, "TBMC", NULL, &state);
+	if (ACPI_FAILURE(status))
+		return -ENODEV;
+
+	/* input layer checks if event is redundant */
+	input_report_switch(idev, SW_TABLET_MODE, state);
+	input_sync(idev);
+
+	return 0;
+}
+
+static __maybe_unused int chromeos_tbmc_resume(struct device *dev)
+{
+	struct acpi_device *adev = to_acpi_device(dev);
+
+	return chromeos_tbmc_query_switch(adev, adev->driver_data);
+}
+
+static void chromeos_tbmc_notify(struct acpi_device *adev, u32 event)
+{
+	switch (event) {
+	case 0x80:
+		chromeos_tbmc_query_switch(adev, adev->driver_data);
+		break;
+	default:
+		dev_err(&adev->dev, "Unexpected event: 0x%08X\n", event);
+	}
+}
+
+static int chromeos_tbmc_open(struct input_dev *idev)
+{
+	struct acpi_device *adev = input_get_drvdata(idev);
+
+	return chromeos_tbmc_query_switch(adev, idev);
+}
+
+static int chromeos_tbmc_add(struct acpi_device *adev)
+{
+	struct input_dev *idev;
+	struct device *dev = &adev->dev;
+	int ret;
+
+	idev = devm_input_allocate_device(dev);
+	if (!idev)
+		return -ENOMEM;
+
+	idev->name = "Tablet Mode Switch";
+	idev->phys = acpi_device_hid(adev);
+
+	idev->id.bustype = BUS_HOST;
+	idev->id.version = 1;
+	idev->id.product = 0;
+	idev->open = chromeos_tbmc_open;
+
+	input_set_drvdata(idev, adev);
+	adev->driver_data = idev;
+
+	input_set_capability(idev, EV_SW, SW_TABLET_MODE);
+	ret = input_register_device(idev);
+	if (ret) {
+		dev_err(dev, "cannot register input device\n");
+		return ret;
+	}
+	return 0;
+}
+
+static const struct acpi_device_id chromeos_tbmc_acpi_device_ids[] = {
+	{ ACPI_DRV_NAME, 0 },
+	{ }
+};
+MODULE_DEVICE_TABLE(acpi, chromeos_tbmc_acpi_device_ids);
+
+static const SIMPLE_DEV_PM_OPS(chromeos_tbmc_pm_ops, NULL,
+		chromeos_tbmc_resume);
+
+static struct acpi_driver chromeos_tbmc_driver = {
+	.name = DRV_NAME,
+	.class = DRV_NAME,
+	.ids = chromeos_tbmc_acpi_device_ids,
+	.ops = {
+		.add = chromeos_tbmc_add,
+		.notify = chromeos_tbmc_notify,
+	},
+	.drv.pm = &chromeos_tbmc_pm_ops,
+};
+
+module_acpi_driver(chromeos_tbmc_driver);
+
+MODULE_LICENSE("GPL v2");
+MODULE_DESCRIPTION("ChromeOS ACPI tablet switch driver");
