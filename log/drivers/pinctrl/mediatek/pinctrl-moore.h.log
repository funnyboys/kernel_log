commit 22d7fe4984a23fea13f2fbc285e505624469de2a
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Tue Sep 18 15:03:13 2018 -0700

    pinctrl: mtk: Fix up GPIO includes
    
    Include only <linux/gpio/driver.h> since this is a driver,
    not a consumer.
    
    Cc: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>

diff --git a/drivers/pinctrl/mediatek/pinctrl-moore.h b/drivers/pinctrl/mediatek/pinctrl-moore.h
index 74a6568a9220..e1b4b82b9d3d 100644
--- a/drivers/pinctrl/mediatek/pinctrl-moore.h
+++ b/drivers/pinctrl/mediatek/pinctrl-moore.h
@@ -8,8 +8,6 @@
 #ifndef __PINCTRL_MOORE_H
 #define __PINCTRL_MOORE_H
 
-#include <linux/gpio.h>
-#include <linux/gpio/driver.h>
 #include <linux/io.h>
 #include <linux/init.h>
 #include <linux/of.h>

commit b7d7f9eeca551f9cf1f6418749cd609d371faf55
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Sat Sep 8 19:07:32 2018 +0800

    pinctrl: mediatek: extend struct mtk_pin_desc which per-pin driver depends on
    
    Because the pincrl-mtk-common.c is an implementation for per-pin binding,
    its pin descriptor includes more information than pinctrl-mtk-common-v2
    so far can support. So, we complement these data before writing a driver
    using pincrl-mtk-common-v2.c for per-pin binding. By the way, the size of
    struct mtk_pin_desc would be larger than struct pinctrl_pin_desc can hold,
    so it's necessary to have a copy before the pins information is being
    registered into the core.
    
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>

diff --git a/drivers/pinctrl/mediatek/pinctrl-moore.h b/drivers/pinctrl/mediatek/pinctrl-moore.h
index b965cc1ba9f6..74a6568a9220 100644
--- a/drivers/pinctrl/mediatek/pinctrl-moore.h
+++ b/drivers/pinctrl/mediatek/pinctrl-moore.h
@@ -28,11 +28,15 @@
 
 #define MTK_RANGE(_a)		{ .range = (_a), .nranges = ARRAY_SIZE(_a), }
 
-#define MTK_PIN(_number, _name, _eint_n, _drv_n) {	\
+#define MTK_PIN(_number, _name, _eint_m, _eint_n, _drv_n) {	\
 		.number = _number,			\
 		.name = _name,				\
-		.eint_n = _eint_n,			\
+		.eint = {				\
+			.eint_m = _eint_m,		\
+			.eint_n = _eint_n,		\
+		},					\
 		.drv_n = _drv_n,			\
+		.funcs = NULL,				\
 	}
 
 #define PINCTRL_PIN_GROUP(name, id)			\

commit fb5fa8dc151b2364c975a9070eedb28a354a995a
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Sat Sep 8 19:07:20 2018 +0800

    pinctrl: mediatek: extend struct mtk_pin_desc to pinctrl-mtk-common-v2.c
    
    This patch introduces a data structure mtk_pin_desc, which is used to
    provide information per pin characteristic such as driving current,
    eint number and a driving index, that is used to lookup table describing
    the details about the groups of driving current by which the pin is able
    to adjust the driving strength so that the driver could get the
    appropriate driving group when calls .pin_config_get()/set().
    
    Signed-off-by: Ryder.Lee <ryder.lee@mediatek.com>
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>

diff --git a/drivers/pinctrl/mediatek/pinctrl-moore.h b/drivers/pinctrl/mediatek/pinctrl-moore.h
index 1011e9056ee4..b965cc1ba9f6 100644
--- a/drivers/pinctrl/mediatek/pinctrl-moore.h
+++ b/drivers/pinctrl/mediatek/pinctrl-moore.h
@@ -27,6 +27,14 @@
 #include "pinctrl-mtk-common-v2.h"
 
 #define MTK_RANGE(_a)		{ .range = (_a), .nranges = ARRAY_SIZE(_a), }
+
+#define MTK_PIN(_number, _name, _eint_n, _drv_n) {	\
+		.number = _number,			\
+		.name = _name,				\
+		.eint_n = _eint_n,			\
+		.drv_n = _drv_n,			\
+	}
+
 #define PINCTRL_PIN_GROUP(name, id)			\
 	{						\
 		name,					\

commit e78d57b2f87c053c224a612121fc842ebe511ad2
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Sat Sep 8 19:07:18 2018 +0800

    pinctrl: mediatek: add pinctrl-moore that implements the generic pinctrl dt-bindings
    
    Add a generic driver pinctrl-moore.c for MT762x SoC and any other SoC
    that would like to use generic dt-binding. The patch is furtherly
    refactored from pinctrl-mt7622.c that totally uses the functions back by
    the generic pinctrl core such as GENERIC_PINCONF, GENERIC_PINCTRL_GROUPS,
    and GENERIC_PINMUX_FUNCTIONS and its binding also completely follows up
    pinctrl-bindings.txt in Documentation/devicetree/bindings/pinctrl/ to
    implement.
    
    Signed-off-by: Ryder.Lee <ryder.lee@mediatek.com>
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>

diff --git a/drivers/pinctrl/mediatek/pinctrl-moore.h b/drivers/pinctrl/mediatek/pinctrl-moore.h
new file mode 100644
index 000000000000..1011e9056ee4
--- /dev/null
+++ b/drivers/pinctrl/mediatek/pinctrl-moore.h
@@ -0,0 +1,41 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+/*
+ * Copyright (C) 2017-2018 MediaTek Inc.
+ *
+ * Author: Sean Wang <sean.wang@mediatek.com>
+ *
+ */
+#ifndef __PINCTRL_MOORE_H
+#define __PINCTRL_MOORE_H
+
+#include <linux/gpio.h>
+#include <linux/gpio/driver.h>
+#include <linux/io.h>
+#include <linux/init.h>
+#include <linux/of.h>
+#include <linux/of_platform.h>
+#include <linux/platform_device.h>
+#include <linux/pinctrl/pinctrl.h>
+#include <linux/pinctrl/pinmux.h>
+#include <linux/pinctrl/pinconf.h>
+#include <linux/pinctrl/pinconf-generic.h>
+
+#include "../core.h"
+#include "../pinconf.h"
+#include "../pinmux.h"
+#include "mtk-eint.h"
+#include "pinctrl-mtk-common-v2.h"
+
+#define MTK_RANGE(_a)		{ .range = (_a), .nranges = ARRAY_SIZE(_a), }
+#define PINCTRL_PIN_GROUP(name, id)			\
+	{						\
+		name,					\
+		id##_pins,				\
+		ARRAY_SIZE(id##_pins),			\
+		id##_funcs,				\
+	}
+
+int mtk_moore_pinctrl_probe(struct platform_device *pdev,
+			    const struct mtk_pin_soc *soc);
+
+#endif /* __PINCTRL_MOORE_H */
