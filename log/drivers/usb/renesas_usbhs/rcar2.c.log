commit 50f737ab96c7977317a47e60c52f4f0ce8b64e7f
Merge: 4baa550ecc86 8a79db5e83a5
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Jan 17 07:52:26 2020 +0100

    Merge tag 'phy-for-5.6_v2' of git://git.kernel.org/pub/scm/linux/kernel/git/kishon/linux-phy into usb-next
    
    Kishon writes:
    
    phy: for 5.6
    
    *) Add support in PHY core to create link between PHY consumer and PHY
       provider
    *) Add DisplayPort PHY configuration set to be used for negotiating the
       configurations to be used between DisplayPort controller and
       DisplayPort PHY
    *) Add PHY wrapper driver (configure inputs to Cadence Sierra PHY) for
       TI's J721E SoC and adapt Cadence Sierra PHY driver to be used for
       J721E SoC (Supports USB and PCIe)
    *) Add PHY driver for eMMC PHY in Intel LGM SoC
    *) Add PHY support for 7216 and 7211 Broadcom SoCs which uses the new
       Synopsys USB Controller
    *) Add support for 16nm SATA PHY present in Broadcom 7216 SoC
    *) Fix lost packet issue, fix MDIO from getting inaccessible, fix
       occasional transaction failures, fix USB driver from crashing in
       Broadcom USB PHY driver
    *) Fix missing PCS SW reset in UFS PHY of Qualcomm SM8150
    *) Use "struct phy_configure_opts_mipi_dphy" to pass parameters from
       display controller to rockchip-inno-dsidphy
    *) Other cleanups including compile testing for some of the PHY drivers,
       fixing Kconfig indentation, duplicate writes in drivers etc.,
    
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
    
    * tag 'phy-for-5.6_v2' of git://git.kernel.org/pub/scm/linux/kernel/git/kishon/linux-phy: (54 commits)
      dt-bindings: phy: Add PHY_TYPE_DP definition
      phy: ti: j721e-wiz: Fix return value check in wiz_probe()
      dt-bindings: usb: Convert Allwinner A80 USB PHY controller to a schema
      phy: intel-lgm-emmc: Fix warning by adding missing MODULE_LICENSE
      phy: ti: j721e-wiz: Manage typec-gpio-dir
      dt-bindings: phy: ti,phy-j721e-wiz: Add Type-C dir GPIO
      phy: cadence: Sierra: add phy_reset hook
      phy: cadence: Sierra: remove redundant initialization of pointer regmap
      phy: Add DisplayPort configuration options
      phy: Enable compile testing for some of drivers
      phy: mediatek: Fix Kconfig indentation
      phy: intel-lgm-emmc: Add support for eMMC PHY
      dt-bindings: phy: intel-emmc-phy: Add YAML schema for LGM eMMC PHY
      phy: ti: j721e-wiz: Add support for WIZ module present in TI J721E SoC
      dt-bindings: phy: Document WIZ (SERDES wrapper) bindings
      phy: cadence: Sierra: Use correct dev pointer in cdns_sierra_phy_remove()
      phy: cadence: Sierra: Set cmn_refclk_dig_div/cmn_refclk1_dig_div frequency to 25MHz
      phy: cadence: Sierra: Change MAX_LANES of Sierra to 16
      phy: cadence: Sierra: Check for PLL lock during PHY power on
      phy: cadence: Sierra: Get reset control "array" for each link
      ...

commit 987351e1ea7772cf2f0795e917fb33b2e282e1c1
Author: Alexandre Torgue <alexandre.torgue@st.com>
Date:   Mon Nov 4 15:37:13 2019 +0100

    phy: core: Add consumer device link support
    
    In order to enforce suspend/resume ordering, this commit creates link
    between phy consumers and phy devices. This link avoids to suspend phy
    before phy consumers.
    
    Signed-off-by: Alexandre Torgue <alexandre.torgue@st.com>
    [jonathanh@nvidia.com: Fix an abort when of_phy_get() returns error]
    Signed-off-by: Jonathan Hunter <jonathanh@nvidia.com>
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>

diff --git a/drivers/usb/renesas_usbhs/rcar2.c b/drivers/usb/renesas_usbhs/rcar2.c
index 440d213e1749..791908f8cf73 100644
--- a/drivers/usb/renesas_usbhs/rcar2.c
+++ b/drivers/usb/renesas_usbhs/rcar2.c
@@ -34,7 +34,7 @@ static int usbhs_rcar2_hardware_exit(struct platform_device *pdev)
 	struct usbhs_priv *priv = usbhs_pdev_to_priv(pdev);
 
 	if (priv->phy) {
-		phy_put(priv->phy);
+		phy_put(&pdev->dev, priv->phy);
 		priv->phy = NULL;
 	}
 

commit 3b31ec1848ec41d9501db3de61805e3ae173f485
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Tue Dec 17 15:12:41 2019 +0100

    usb: renesas_usbhs: Switch to GPIO descriptor
    
    The Renesas USBHS driver includes a bit of surplus headers
    and uses the old GPIO API so let's switch it to use the
    GPIO descriptor.
    
    I noticed that the enable_gpio inside renesas_usbhs_driver_param
    isn't really referenced anywhere, and it is also the wrong
    type (u32) so let's just delete it and use a local variable
    instead.
    
    Cc: Eugeniu Rosca <erosca@de.adit-jv.com>
    Cc: Veeraiyan Chidambaram <veeraiyan.chidambaram@in.bosch.com>
    Cc: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Link: https://lore.kernel.org/r/20191217141241.57639-1-linus.walleij@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/usb/renesas_usbhs/rcar2.c b/drivers/usb/renesas_usbhs/rcar2.c
index 440d213e1749..7f2f06586ea5 100644
--- a/drivers/usb/renesas_usbhs/rcar2.c
+++ b/drivers/usb/renesas_usbhs/rcar2.c
@@ -6,8 +6,6 @@
  * Copyright (C) 2019 Renesas Electronics Corporation
  */
 
-#include <linux/gpio.h>
-#include <linux/of_gpio.h>
 #include <linux/phy/phy.h>
 #include "common.h"
 #include "rcar2.h"

commit 76eff170bb05e59218008a21df670cb7177110e4
Author: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
Date:   Tue Jun 25 14:38:56 2019 +0900

    usb: renesas_usbhs: Use renesas_usbhs_platform_info on of_device_id.data
    
    In device tree environment, the previous code allocates
    renesas_usbhs_platform_info by using devm_kzalloc() and then copies
    usbhs_of_data to the allocated memory. This reason is some values
    (e.g. .platform_callback.get_vbus) are overwritten by the driver,
    but the of_device_id.data is "const". Now the driver doesn't have
    such a code, so this patch uses renesas_usbhs_platform_info on
    of_device_id.data.
    
    Note that the previous code set the pdev->dev.platform_data pointer
    even if device tree environment, but the value is not used. So,
    this patch also remove such a code.
    
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/usb/renesas_usbhs/rcar2.c b/drivers/usb/renesas_usbhs/rcar2.c
index 741bd8170117..440d213e1749 100644
--- a/drivers/usb/renesas_usbhs/rcar2.c
+++ b/drivers/usb/renesas_usbhs/rcar2.c
@@ -63,9 +63,15 @@ static int usbhs_rcar2_power_ctrl(struct platform_device *pdev,
 	return retval;
 }
 
-const struct renesas_usbhs_platform_callback usbhs_rcar2_ops = {
-	.hardware_init = usbhs_rcar2_hardware_init,
-	.hardware_exit = usbhs_rcar2_hardware_exit,
-	.power_ctrl = usbhs_rcar2_power_ctrl,
-	.get_id = usbhs_get_id_as_gadget,
+const struct renesas_usbhs_platform_info usbhs_rcar_gen2_plat_info = {
+	.platform_callback = {
+		.hardware_init = usbhs_rcar2_hardware_init,
+		.hardware_exit = usbhs_rcar2_hardware_exit,
+		.power_ctrl = usbhs_rcar2_power_ctrl,
+		.get_id = usbhs_get_id_as_gadget,
+	},
+	.driver_param = {
+		.has_usb_dmac = 1,
+		.has_new_pipe_configs = 1,
+	},
 };

commit be0a42a7d62605cfcabd8cbba6c104a80471cd94
Author: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
Date:   Tue Jun 25 14:38:55 2019 +0900

    usb: renesas_usbhs: Add a common function for the .get_id
    
    All platform related codes (rcar[23].c and rza{2}.c) has its own
    .get_id function as "USBHS_GADGET". So, we can use a common
    function for it.
    
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/usb/renesas_usbhs/rcar2.c b/drivers/usb/renesas_usbhs/rcar2.c
index 0027092b1118..741bd8170117 100644
--- a/drivers/usb/renesas_usbhs/rcar2.c
+++ b/drivers/usb/renesas_usbhs/rcar2.c
@@ -3,6 +3,7 @@
  * Renesas USB driver R-Car Gen. 2 initialization and power control
  *
  * Copyright (C) 2014 Ulrich Hecht
+ * Copyright (C) 2019 Renesas Electronics Corporation
  */
 
 #include <linux/gpio.h>
@@ -62,14 +63,9 @@ static int usbhs_rcar2_power_ctrl(struct platform_device *pdev,
 	return retval;
 }
 
-static int usbhs_rcar2_get_id(struct platform_device *pdev)
-{
-	return USBHS_GADGET;
-}
-
 const struct renesas_usbhs_platform_callback usbhs_rcar2_ops = {
 	.hardware_init = usbhs_rcar2_hardware_init,
 	.hardware_exit = usbhs_rcar2_hardware_exit,
 	.power_ctrl = usbhs_rcar2_power_ctrl,
-	.get_id = usbhs_rcar2_get_id,
+	.get_id = usbhs_get_id_as_gadget,
 };

commit d8351953fbb6ed6d7834ac57d9d943d2177c2b20
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Apr 18 11:26:23 2018 +0200

    USB: renesas_usbhs: drop unused legacy-phy support
    
    Drop support for legacy phys for rcar2 which hasn't been used with a
    mainline kernel since commit 9080b8dc761a ("ARM: OMAP2+: Remove legacy
    usb-host.c platform init code"). Specifically, since that commit
    usb_get_phy_dev() have always returned -ENODEV and consequently this
    code has not been used.
    
    Note that the legacy-phy API is still being used in gadget mode to bind
    the peripheral controller.
    
    Acked-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/usb/renesas_usbhs/rcar2.c b/drivers/usb/renesas_usbhs/rcar2.c
index 85a0e0933917..0027092b1118 100644
--- a/drivers/usb/renesas_usbhs/rcar2.c
+++ b/drivers/usb/renesas_usbhs/rcar2.c
@@ -8,7 +8,6 @@
 #include <linux/gpio.h>
 #include <linux/of_gpio.h>
 #include <linux/phy/phy.h>
-#include <linux/usb/phy.h>
 #include "common.h"
 #include "rcar2.h"
 
@@ -26,16 +25,6 @@ static int usbhs_rcar2_hardware_init(struct platform_device *pdev)
 		return 0;
 	}
 
-	if (IS_ENABLED(CONFIG_USB_PHY)) {
-		struct usb_phy *usb_phy = usb_get_phy_dev(&pdev->dev, 0);
-
-		if (IS_ERR(usb_phy))
-			return PTR_ERR(usb_phy);
-
-		priv->usb_phy = usb_phy;
-		return 0;
-	}
-
 	return -ENXIO;
 }
 
@@ -48,11 +37,6 @@ static int usbhs_rcar2_hardware_exit(struct platform_device *pdev)
 		priv->phy = NULL;
 	}
 
-	if (priv->usb_phy) {
-		usb_put_phy(priv->usb_phy);
-		priv->usb_phy = NULL;
-	}
-
 	return 0;
 }
 
@@ -75,19 +59,6 @@ static int usbhs_rcar2_power_ctrl(struct platform_device *pdev,
 		}
 	}
 
-	if (priv->usb_phy) {
-		if (enable) {
-			retval = usb_phy_init(priv->usb_phy);
-
-			if (!retval)
-				retval = usb_phy_set_suspend(priv->usb_phy, 0);
-		} else {
-			usb_phy_set_suspend(priv->usb_phy, 1);
-			usb_phy_shutdown(priv->usb_phy);
-			retval = 0;
-		}
-	}
-
 	return retval;
 }
 

commit 1250413a81612f49a0ae9f89342108c625779280
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Mon Nov 6 15:37:12 2017 +0100

    USB: renesas_usbhs: Remove redundant license text
    
    Now that the SPDX tag is in all USB files, that identifies the license
    in a specific and legally-defined manner.  So the extra GPL text wording
    can be removed as it is no longer needed at all.
    
    This is done on a quest to remove the 700+ different ways that files in
    the kernel describe the GPL license text.  And there's unneeded stuff
    like the address (sometimes incorrect) for the FSF which is never
    needed.
    
    No copyright headers or other non-license-description text was removed.
    
    Cc: Rob Herring <robh@kernel.org>
    Cc: Simon Horman <horms+renesas@verge.net.au>
    Cc: Geert Uytterhoeven <geert+renesas@glider.be>
    Cc: Chanwoo Choi <cw00.choi@samsung.com>
    Cc: Johan Hovold <johan@kernel.org>
    Cc: Kazuya Mizuguchi <kazuya.mizuguchi.ks@renesas.com>
    Cc: Bhumika Goyal <bhumirks@gmail.com>
    Acked-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Acked-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/usb/renesas_usbhs/rcar2.c b/drivers/usb/renesas_usbhs/rcar2.c
index b03b3cb36b49..85a0e0933917 100644
--- a/drivers/usb/renesas_usbhs/rcar2.c
+++ b/drivers/usb/renesas_usbhs/rcar2.c
@@ -3,12 +3,6 @@
  * Renesas USB driver R-Car Gen. 2 initialization and power control
  *
  * Copyright (C) 2014 Ulrich Hecht
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
  */
 
 #include <linux/gpio.h>

commit 5fd54ace4721fc5ce2bb5aef6318fcf17f421460
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Nov 3 11:28:30 2017 +0100

    USB: add SPDX identifiers to all remaining files in drivers/usb/
    
    It's good to have SPDX identifiers in all files to make it easier to
    audit the kernel tree for correct licenses.
    
    Update the drivers/usb/ and include/linux/usb* files with the correct
    SPDX license identifier based on the license text in the file itself.
    The SPDX identifier is a legally binding shorthand, which can be used
    instead of the full boiler plate text.
    
    This work is based on a script and data from Thomas Gleixner, Philippe
    Ombredanne, and Kate Stewart.
    
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Kate Stewart <kstewart@linuxfoundation.org>
    Cc: Philippe Ombredanne <pombredanne@nexb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Acked-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Acked-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/usb/renesas_usbhs/rcar2.c b/drivers/usb/renesas_usbhs/rcar2.c
index 277160bc6f25..b03b3cb36b49 100644
--- a/drivers/usb/renesas_usbhs/rcar2.c
+++ b/drivers/usb/renesas_usbhs/rcar2.c
@@ -1,3 +1,4 @@
+// SPDX-License-Identifier: GPL-1.0+
 /*
  * Renesas USB driver R-Car Gen. 2 initialization and power control
  *

commit f15f30449ab252fdc9405f99d46edacc225328cf
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Fri Sep 25 10:51:02 2015 +0200

    usb: renesas_usbhs: Remove unneeded #include <linux/platform_data/gpio-rcar.h>
    
    This header file will be removed soon.
    
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Acked-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Acked-by: Felipe Balbi <balbi@ti.com>

diff --git a/drivers/usb/renesas_usbhs/rcar2.c b/drivers/usb/renesas_usbhs/rcar2.c
index 8fc15c0ba339..277160bc6f25 100644
--- a/drivers/usb/renesas_usbhs/rcar2.c
+++ b/drivers/usb/renesas_usbhs/rcar2.c
@@ -13,7 +13,6 @@
 #include <linux/gpio.h>
 #include <linux/of_gpio.h>
 #include <linux/phy/phy.h>
-#include <linux/platform_data/gpio-rcar.h>
 #include <linux/usb/phy.h>
 #include "common.h"
 #include "rcar2.h"

commit 420974a0ed2d9da76637c2c2dc9324850e4f9a24
Author: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
Date:   Tue Oct 7 12:43:06 2014 +0900

    usb: renesas_usbhs: add support for generic PHY
    
    This patch adds support for the generic PHY. The generic PHY will be
    used in multiplatform environment.
    
    Acked-by: Kishon Vijay Abraham I <kishon@ti.com>
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Signed-off-by: Felipe Balbi <balbi@ti.com>

diff --git a/drivers/usb/renesas_usbhs/rcar2.c b/drivers/usb/renesas_usbhs/rcar2.c
index 485b88957a2f..8fc15c0ba339 100644
--- a/drivers/usb/renesas_usbhs/rcar2.c
+++ b/drivers/usb/renesas_usbhs/rcar2.c
@@ -12,6 +12,7 @@
 
 #include <linux/gpio.h>
 #include <linux/of_gpio.h>
+#include <linux/phy/phy.h>
 #include <linux/platform_data/gpio-rcar.h>
 #include <linux/usb/phy.h>
 #include "common.h"
@@ -21,6 +22,16 @@ static int usbhs_rcar2_hardware_init(struct platform_device *pdev)
 {
 	struct usbhs_priv *priv = usbhs_pdev_to_priv(pdev);
 
+	if (IS_ENABLED(CONFIG_GENERIC_PHY)) {
+		struct phy *phy = phy_get(&pdev->dev, "usb");
+
+		if (IS_ERR(phy))
+			return PTR_ERR(phy);
+
+		priv->phy = phy;
+		return 0;
+	}
+
 	if (IS_ENABLED(CONFIG_USB_PHY)) {
 		struct usb_phy *usb_phy = usb_get_phy_dev(&pdev->dev, 0);
 
@@ -38,6 +49,11 @@ static int usbhs_rcar2_hardware_exit(struct platform_device *pdev)
 {
 	struct usbhs_priv *priv = usbhs_pdev_to_priv(pdev);
 
+	if (priv->phy) {
+		phy_put(priv->phy);
+		priv->phy = NULL;
+	}
+
 	if (priv->usb_phy) {
 		usb_put_phy(priv->usb_phy);
 		priv->usb_phy = NULL;
@@ -52,6 +68,19 @@ static int usbhs_rcar2_power_ctrl(struct platform_device *pdev,
 	struct usbhs_priv *priv = usbhs_pdev_to_priv(pdev);
 	int retval = -ENODEV;
 
+	if (priv->phy) {
+		if (enable) {
+			retval = phy_init(priv->phy);
+
+			if (!retval)
+				retval = phy_power_on(priv->phy);
+		} else {
+			phy_power_off(priv->phy);
+			phy_exit(priv->phy);
+			retval = 0;
+		}
+	}
+
 	if (priv->usb_phy) {
 		if (enable) {
 			retval = usb_phy_init(priv->usb_phy);

commit 5f6aea3453ccafc0c3e16f9f7db79ce91b377e9a
Author: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
Date:   Tue Oct 7 12:43:05 2014 +0900

    usb: renesas_usbhs: clean up rcar2.c to support a generic PHY
    
    To support both usb PHY and generic PHY, this patch cleans up rcar2.c.
    
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Signed-off-by: Felipe Balbi <balbi@ti.com>

diff --git a/drivers/usb/renesas_usbhs/rcar2.c b/drivers/usb/renesas_usbhs/rcar2.c
index f264cadc12cd..485b88957a2f 100644
--- a/drivers/usb/renesas_usbhs/rcar2.c
+++ b/drivers/usb/renesas_usbhs/rcar2.c
@@ -20,25 +20,28 @@
 static int usbhs_rcar2_hardware_init(struct platform_device *pdev)
 {
 	struct usbhs_priv *priv = usbhs_pdev_to_priv(pdev);
-	struct usb_phy *usb_phy;
 
-	usb_phy = usb_get_phy_dev(&pdev->dev, 0);
-	if (IS_ERR(usb_phy))
-		return PTR_ERR(usb_phy);
+	if (IS_ENABLED(CONFIG_USB_PHY)) {
+		struct usb_phy *usb_phy = usb_get_phy_dev(&pdev->dev, 0);
 
-	priv->usb_phy = usb_phy;
-	return 0;
+		if (IS_ERR(usb_phy))
+			return PTR_ERR(usb_phy);
+
+		priv->usb_phy = usb_phy;
+		return 0;
+	}
+
+	return -ENXIO;
 }
 
 static int usbhs_rcar2_hardware_exit(struct platform_device *pdev)
 {
 	struct usbhs_priv *priv = usbhs_pdev_to_priv(pdev);
 
-	if (!priv->usb_phy)
-		return 0;
-
-	usb_put_phy(priv->usb_phy);
-	priv->usb_phy = NULL;
+	if (priv->usb_phy) {
+		usb_put_phy(priv->usb_phy);
+		priv->usb_phy = NULL;
+	}
 
 	return 0;
 }
@@ -47,21 +50,22 @@ static int usbhs_rcar2_power_ctrl(struct platform_device *pdev,
 				void __iomem *base, int enable)
 {
 	struct usbhs_priv *priv = usbhs_pdev_to_priv(pdev);
+	int retval = -ENODEV;
 
-	if (!priv->usb_phy)
-		return -ENODEV;
+	if (priv->usb_phy) {
+		if (enable) {
+			retval = usb_phy_init(priv->usb_phy);
 
-	if (enable) {
-		int retval = usb_phy_init(priv->usb_phy);
-
-		if (!retval)
-			retval = usb_phy_set_suspend(priv->usb_phy, 0);
-		return retval;
+			if (!retval)
+				retval = usb_phy_set_suspend(priv->usb_phy, 0);
+		} else {
+			usb_phy_set_suspend(priv->usb_phy, 1);
+			usb_phy_shutdown(priv->usb_phy);
+			retval = 0;
+		}
 	}
 
-	usb_phy_set_suspend(priv->usb_phy, 1);
-	usb_phy_shutdown(priv->usb_phy);
-	return 0;
+	return retval;
 }
 
 static int usbhs_rcar2_get_id(struct platform_device *pdev)

commit c042b85a2cbb0c612e9ed3c7ea1af684bba5dcd3
Author: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
Date:   Tue Oct 7 12:43:04 2014 +0900

    usb: renesas_usbhs: rename phy to usb_phy in usbhs_priv
    
    To support a generic phy driver in this driver later, this patch
    renames "struct usb_phy *phy" to "struct usb_phy *usb_phy".
    
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Signed-off-by: Felipe Balbi <balbi@ti.com>

diff --git a/drivers/usb/renesas_usbhs/rcar2.c b/drivers/usb/renesas_usbhs/rcar2.c
index e6b9dcc1c289..f264cadc12cd 100644
--- a/drivers/usb/renesas_usbhs/rcar2.c
+++ b/drivers/usb/renesas_usbhs/rcar2.c
@@ -20,13 +20,13 @@
 static int usbhs_rcar2_hardware_init(struct platform_device *pdev)
 {
 	struct usbhs_priv *priv = usbhs_pdev_to_priv(pdev);
-	struct usb_phy *phy;
+	struct usb_phy *usb_phy;
 
-	phy = usb_get_phy_dev(&pdev->dev, 0);
-	if (IS_ERR(phy))
-		return PTR_ERR(phy);
+	usb_phy = usb_get_phy_dev(&pdev->dev, 0);
+	if (IS_ERR(usb_phy))
+		return PTR_ERR(usb_phy);
 
-	priv->phy = phy;
+	priv->usb_phy = usb_phy;
 	return 0;
 }
 
@@ -34,11 +34,11 @@ static int usbhs_rcar2_hardware_exit(struct platform_device *pdev)
 {
 	struct usbhs_priv *priv = usbhs_pdev_to_priv(pdev);
 
-	if (!priv->phy)
+	if (!priv->usb_phy)
 		return 0;
 
-	usb_put_phy(priv->phy);
-	priv->phy = NULL;
+	usb_put_phy(priv->usb_phy);
+	priv->usb_phy = NULL;
 
 	return 0;
 }
@@ -48,19 +48,19 @@ static int usbhs_rcar2_power_ctrl(struct platform_device *pdev,
 {
 	struct usbhs_priv *priv = usbhs_pdev_to_priv(pdev);
 
-	if (!priv->phy)
+	if (!priv->usb_phy)
 		return -ENODEV;
 
 	if (enable) {
-		int retval = usb_phy_init(priv->phy);
+		int retval = usb_phy_init(priv->usb_phy);
 
 		if (!retval)
-			retval = usb_phy_set_suspend(priv->phy, 0);
+			retval = usb_phy_set_suspend(priv->usb_phy, 0);
 		return retval;
 	}
 
-	usb_phy_set_suspend(priv->phy, 1);
-	usb_phy_shutdown(priv->phy);
+	usb_phy_set_suspend(priv->usb_phy, 1);
+	usb_phy_shutdown(priv->usb_phy);
 	return 0;
 }
 

commit 8ecef00fe1f33658ee36e902dba6850b51312073
Author: Ulrich Hecht <ulrich.hecht@gmail.com>
Date:   Thu Jul 10 09:53:59 2014 +0200

    usb: renesas_usbhs: add R-Car Gen. 2 init and power control
    
    In preparation for DT conversion to reduce reliance on platform device
    callbacks.
    
    Signed-off-by: Ulrich Hecht <ulrich.hecht+renesas@gmail.com>
    Signed-off-by: Felipe Balbi <balbi@ti.com>

diff --git a/drivers/usb/renesas_usbhs/rcar2.c b/drivers/usb/renesas_usbhs/rcar2.c
new file mode 100644
index 000000000000..e6b9dcc1c289
--- /dev/null
+++ b/drivers/usb/renesas_usbhs/rcar2.c
@@ -0,0 +1,77 @@
+/*
+ * Renesas USB driver R-Car Gen. 2 initialization and power control
+ *
+ * Copyright (C) 2014 Ulrich Hecht
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ */
+
+#include <linux/gpio.h>
+#include <linux/of_gpio.h>
+#include <linux/platform_data/gpio-rcar.h>
+#include <linux/usb/phy.h>
+#include "common.h"
+#include "rcar2.h"
+
+static int usbhs_rcar2_hardware_init(struct platform_device *pdev)
+{
+	struct usbhs_priv *priv = usbhs_pdev_to_priv(pdev);
+	struct usb_phy *phy;
+
+	phy = usb_get_phy_dev(&pdev->dev, 0);
+	if (IS_ERR(phy))
+		return PTR_ERR(phy);
+
+	priv->phy = phy;
+	return 0;
+}
+
+static int usbhs_rcar2_hardware_exit(struct platform_device *pdev)
+{
+	struct usbhs_priv *priv = usbhs_pdev_to_priv(pdev);
+
+	if (!priv->phy)
+		return 0;
+
+	usb_put_phy(priv->phy);
+	priv->phy = NULL;
+
+	return 0;
+}
+
+static int usbhs_rcar2_power_ctrl(struct platform_device *pdev,
+				void __iomem *base, int enable)
+{
+	struct usbhs_priv *priv = usbhs_pdev_to_priv(pdev);
+
+	if (!priv->phy)
+		return -ENODEV;
+
+	if (enable) {
+		int retval = usb_phy_init(priv->phy);
+
+		if (!retval)
+			retval = usb_phy_set_suspend(priv->phy, 0);
+		return retval;
+	}
+
+	usb_phy_set_suspend(priv->phy, 1);
+	usb_phy_shutdown(priv->phy);
+	return 0;
+}
+
+static int usbhs_rcar2_get_id(struct platform_device *pdev)
+{
+	return USBHS_GADGET;
+}
+
+const struct renesas_usbhs_platform_callback usbhs_rcar2_ops = {
+	.hardware_init = usbhs_rcar2_hardware_init,
+	.hardware_exit = usbhs_rcar2_hardware_exit,
+	.power_ctrl = usbhs_rcar2_power_ctrl,
+	.get_id = usbhs_rcar2_get_id,
+};
