commit d266e96820cc3654ba1338c55e5731fc67030d8e
Author: Ajay Gupta <ajayg@nvidia.com>
Date:   Tue Apr 23 17:21:50 2019 +0300

    usb: typec: displayport: Export probe and remove functions
    
    VirtualLink standard extends the DisplayPort Alt Mode by
    utilizing also the USB 2 pins on the USB Type-C connector.
    It uses the same messages as DisplayPort, but not the DP
    SVID. At the time of writing, USB IF has not assigned a
    Standard ID (SID) for VirtualLink, so the manufacturers of
    VirtualLink adapters use their Vendor IDs as the SVID.
    
    Since the SVID specific communication is exactly the same as
    with DisplayPort alternate mode, there is no need to
    implement separate driver for VirtualLink. We'll handle the
    current VirtualLink adapters with probe drivers, and once
    there is SVID assigned for it, we add it to the displayport
    alt mode driver.
    
    To support probing drivers, exporting the probe and remove
    functions, and also changing the DP_HEADER helper macro to
    use the SVID of the alternate mode device instead of the
    DisplayPort alt mode SVID.
    
    Suggested-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Signed-off-by: Ajay Gupta <ajayg@nvidia.com>
    Signed-off-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/usb/typec/altmodes/displayport.h b/drivers/usb/typec/altmodes/displayport.h
new file mode 100644
index 000000000000..e120364da9fd
--- /dev/null
+++ b/drivers/usb/typec/altmodes/displayport.h
@@ -0,0 +1,8 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+#if IS_ENABLED(CONFIG_TYPEC_DP_ALTMODE)
+int dp_altmode_probe(struct typec_altmode *alt);
+void dp_altmode_remove(struct typec_altmode *alt);
+#else
+int dp_altmode_probe(struct typec_altmode *alt) { return -ENOTSUPP; }
+void dp_altmode_remove(struct typec_altmode *alt) { }
+#endif /* CONFIG_TYPEC_DP_ALTMODE */
