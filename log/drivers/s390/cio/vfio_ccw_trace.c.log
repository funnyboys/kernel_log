commit b2dd9a44a1098c96935c495570b663bd223a087e
Author: Eric Farman <farman@linux.ibm.com>
Date:   Tue May 5 14:27:45 2020 +0200

    vfio-ccw: Add trace for CRW event
    
    Since CRW events are (should be) rare, let's put a trace
    in that routine too.
    
    Signed-off-by: Eric Farman <farman@linux.ibm.com>
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Message-Id: <20200505122745.53208-9-farman@linux.ibm.com>
    Signed-off-by: Cornelia Huck <cohuck@redhat.com>

diff --git a/drivers/s390/cio/vfio_ccw_trace.c b/drivers/s390/cio/vfio_ccw_trace.c
index 8c671d2519f6..4a0205905afc 100644
--- a/drivers/s390/cio/vfio_ccw_trace.c
+++ b/drivers/s390/cio/vfio_ccw_trace.c
@@ -9,6 +9,7 @@
 #define CREATE_TRACE_POINTS
 #include "vfio_ccw_trace.h"
 
+EXPORT_TRACEPOINT_SYMBOL(vfio_ccw_chp_event);
 EXPORT_TRACEPOINT_SYMBOL(vfio_ccw_fsm_async_request);
 EXPORT_TRACEPOINT_SYMBOL(vfio_ccw_fsm_event);
 EXPORT_TRACEPOINT_SYMBOL(vfio_ccw_fsm_io_request);

commit 8529888070f15e7c784b1c93bad358bf1d08045f
Author: Eric Farman <farman@linux.ibm.com>
Date:   Wed Oct 16 16:20:40 2019 +0200

    vfio-ccw: Rework the io_fctl trace
    
    Using __field_struct for the schib is convenient, but it doesn't
    appear to let us filter based on any of the schib elements.
    Specifying the full schid or any element within it results
    in various errors by the parser.  So, expand that out to its
    component elements, so we can limit the trace to a single device.
    
    While we are at it, rename this trace to the function name, so we
    remember what is being traced instead of an abstract reference to the
    function control bit of the SCSW.
    
    Signed-off-by: Eric Farman <farman@linux.ibm.com>
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Message-Id: <20191016142040.14132-5-farman@linux.ibm.com>
    Acked-by: Halil Pasic <pasic@linux.ibm.com>
    Signed-off-by: Cornelia Huck <cohuck@redhat.com>

diff --git a/drivers/s390/cio/vfio_ccw_trace.c b/drivers/s390/cio/vfio_ccw_trace.c
index 37ecbf8be805..8c671d2519f6 100644
--- a/drivers/s390/cio/vfio_ccw_trace.c
+++ b/drivers/s390/cio/vfio_ccw_trace.c
@@ -11,4 +11,4 @@
 
 EXPORT_TRACEPOINT_SYMBOL(vfio_ccw_fsm_async_request);
 EXPORT_TRACEPOINT_SYMBOL(vfio_ccw_fsm_event);
-EXPORT_TRACEPOINT_SYMBOL(vfio_ccw_io_fctl);
+EXPORT_TRACEPOINT_SYMBOL(vfio_ccw_fsm_io_request);

commit d5950b02b79eed046dd52ec40f3485221e95146b
Author: Eric Farman <farman@linux.ibm.com>
Date:   Wed Oct 16 16:20:39 2019 +0200

    vfio-ccw: Add a trace for asynchronous requests
    
    Since the asynchronous requests are typically associated with
    error recovery, let's add a simple trace when one of those is
    issued to a device.
    
    Signed-off-by: Eric Farman <farman@linux.ibm.com>
    Message-Id: <20191016142040.14132-4-farman@linux.ibm.com>
    Acked-by: Halil Pasic <pasic@linux.ibm.com>
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Signed-off-by: Cornelia Huck <cohuck@redhat.com>

diff --git a/drivers/s390/cio/vfio_ccw_trace.c b/drivers/s390/cio/vfio_ccw_trace.c
index b37bc68e7f18..37ecbf8be805 100644
--- a/drivers/s390/cio/vfio_ccw_trace.c
+++ b/drivers/s390/cio/vfio_ccw_trace.c
@@ -9,5 +9,6 @@
 #define CREATE_TRACE_POINTS
 #include "vfio_ccw_trace.h"
 
+EXPORT_TRACEPOINT_SYMBOL(vfio_ccw_fsm_async_request);
 EXPORT_TRACEPOINT_SYMBOL(vfio_ccw_fsm_event);
 EXPORT_TRACEPOINT_SYMBOL(vfio_ccw_io_fctl);

commit 970ebeb84880906b396e53539b95fdbbf3e786a2
Author: Eric Farman <farman@linux.ibm.com>
Date:   Wed Oct 16 16:20:38 2019 +0200

    vfio-ccw: Trace the FSM jumptable
    
    It would be nice if we could track the sequence of events within
    vfio-ccw, based on the state of the device/FSM and our calling
    sequence within it.  So let's add a simple trace here so we can
    watch the states change as things go, and allow it to be folded
    into the rest of the other cio traces.
    
    Signed-off-by: Eric Farman <farman@linux.ibm.com>
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Message-Id: <20191016142040.14132-3-farman@linux.ibm.com>
    Acked-by: Halil Pasic <pasic@linux.ibm.com>
    Signed-off-by: Cornelia Huck <cohuck@redhat.com>

diff --git a/drivers/s390/cio/vfio_ccw_trace.c b/drivers/s390/cio/vfio_ccw_trace.c
index d5cc943c6864..b37bc68e7f18 100644
--- a/drivers/s390/cio/vfio_ccw_trace.c
+++ b/drivers/s390/cio/vfio_ccw_trace.c
@@ -9,4 +9,5 @@
 #define CREATE_TRACE_POINTS
 #include "vfio_ccw_trace.h"
 
+EXPORT_TRACEPOINT_SYMBOL(vfio_ccw_fsm_event);
 EXPORT_TRACEPOINT_SYMBOL(vfio_ccw_io_fctl);

commit 7af52cca6f1c4d785b652682a8f7687df1061318
Author: Eric Farman <farman@linux.ibm.com>
Date:   Wed Oct 16 16:20:37 2019 +0200

    vfio-ccw: Refactor how the traces are built
    
    Commit 3cd90214b70f ("vfio: ccw: add tracepoints for interesting error
    paths") added a quick trace point to determine where a channel program
    failed while being processed.  It's a great addition, but adding more
    traces to vfio-ccw is more cumbersome than it needs to be.
    
    Let's refactor how this is done, so that additional traces are easier
    to add and can exist outside of the FSM if we ever desire.
    
    Signed-off-by: Eric Farman <farman@linux.ibm.com>
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Message-Id: <20191016142040.14132-2-farman@linux.ibm.com>
    Acked-by: Halil Pasic <pasic@linux.ibm.com>
    Signed-off-by: Cornelia Huck <cohuck@redhat.com>

diff --git a/drivers/s390/cio/vfio_ccw_trace.c b/drivers/s390/cio/vfio_ccw_trace.c
new file mode 100644
index 000000000000..d5cc943c6864
--- /dev/null
+++ b/drivers/s390/cio/vfio_ccw_trace.c
@@ -0,0 +1,12 @@
+// SPDX-License-Identifier: GPL-2.0
+/*
+ * Tracepoint definitions for vfio_ccw
+ *
+ * Copyright IBM Corp. 2019
+ * Author(s): Eric Farman <farman@linux.ibm.com>
+ */
+
+#define CREATE_TRACE_POINTS
+#include "vfio_ccw_trace.h"
+
+EXPORT_TRACEPOINT_SYMBOL(vfio_ccw_io_fctl);
