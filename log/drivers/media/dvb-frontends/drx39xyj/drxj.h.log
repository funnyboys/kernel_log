commit 868c9a17e22c89d241f12501e21ae4f104ce036c
Author: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
Date:   Mon Feb 18 14:28:55 2019 -0500

    media: dvb-frontends: fix several typos
    
    Use codespell to fix lots of typos over frontends.
    
    Manually verified to avoid false-positives.
    
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>

diff --git a/drivers/media/dvb-frontends/drx39xyj/drxj.h b/drivers/media/dvb-frontends/drx39xyj/drxj.h
index d3ee1c23bb2f..d62412f71c88 100644
--- a/drivers/media/dvb-frontends/drx39xyj/drxj.h
+++ b/drivers/media/dvb-frontends/drx39xyj/drxj.h
@@ -49,7 +49,7 @@ INCLUDES
 #if ((DRXDAP_SINGLE_MASTER == 0) && (DRXDAPFASI_LONG_ADDR_ALLOWED == 0))
 #error "Multi master mode and short addressing only is an illegal combination"
 	*;			/* Generate a fatal compiler error to make sure it stops here,
-				   this is necesarry because not all compilers stop after a #error. */
+				   this is necessary because not all compilers stop after a #error. */
 #endif
 
 /*-------------------------------------------------------------------------
@@ -203,7 +203,7 @@ struct drxj_agc_status {
 * /struct drxjrs_errors
 * Available failure information in DRXJ_FEC_RS.
 *
-* Container for errors that are received in the most recently finished measurment period
+* Container for errors that are received in the most recently finished measurement period
 *
 */
 	struct drxjrs_errors {
@@ -405,7 +405,7 @@ struct drxj_cfg_atv_output {
 *
 */
 	struct drxj_data {
-		/* device capabilties (determined during drx_open()) */
+		/* device capabilities (determined during drx_open()) */
 		bool has_lna;		  /*< true if LNA (aka PGA) present */
 		bool has_oob;		  /*< true if OOB supported */
 		bool has_ntsc;		  /*< true if NTSC supported */
@@ -455,7 +455,7 @@ struct drxj_cfg_atv_output {
 
 		/* IQM fs frequecy shift and inversion */
 		u32 iqm_fs_rate_ofs;	   /*< frequency shifter setting after setchannel      */
-		bool pos_image;	   /*< Ture: positive image                            */
+		bool pos_image;	   /*< True: positive image                            */
 		/* IQM RC frequecy shift */
 		u32 iqm_rc_rate_ofs;	   /*< frequency shifter setting after setchannel      */
 
@@ -468,8 +468,8 @@ struct drxj_cfg_atv_output {
 		bool phase_correction_bypass;/*< flag: true=bypass */
 		s16 atv_top_vid_peak;	  /*< shadow of ATV_TOP_VID_PEAK__A */
 		u16 atv_top_noise_th;	  /*< shadow of ATV_TOP_NOISE_TH__A */
-		bool enable_cvbs_output;  /*< flag CVBS ouput enable */
-		bool enable_sif_output;	  /*< flag SIF ouput enable */
+		bool enable_cvbs_output;  /*< flag CVBS output enable */
+		bool enable_sif_output;	  /*< flag SIF output enable */
 		 enum drxjsif_attenuation sif_attenuation;
 					  /*< current SIF att setting */
 		/* Agc configuration for QAM and VSB */

commit b95b0c98f52883f9b907836f3421341af6f0145f
Author: Mauro Carvalho Chehab <mchehab@s-opensource.com>
Date:   Wed Nov 29 12:39:19 2017 -0500

    media: dvb_frontends: fix kernel-doc macros
    
    Now, the Kernel checks for kernel_doc format issues.
    Weird enough, it didn't get any of those troubles. Shssst!
    
    Well, let's fix it, as a preventive way to avoid having
    hundreds of new warnings on some next Linux version.
    
    Tested by adding all files under dvb-frontends that have
    "/**" on them.
    
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>

diff --git a/drivers/media/dvb-frontends/drx39xyj/drxj.h b/drivers/media/dvb-frontends/drx39xyj/drxj.h
index 6c5b8f78f9f6..d3ee1c23bb2f 100644
--- a/drivers/media/dvb-frontends/drx39xyj/drxj.h
+++ b/drivers/media/dvb-frontends/drx39xyj/drxj.h
@@ -69,15 +69,15 @@ TYPEDEFS
 
 	struct drxjscu_cmd {
 		u16 command;
-			/**< Command number */
+			/*< Command number */
 		u16 parameter_len;
-			/**< Data length in byte */
+			/*< Data length in byte */
 		u16 result_len;
-			/**< result length in byte */
+			/*< result length in byte */
 		u16 *parameter;
-			/**< General purpous param */
+			/*< General purpous param */
 		u16 *result;
-			/**< General purpous param */};
+			/*< General purpous param */};
 
 /*============================================================================*/
 /*============================================================================*/
@@ -130,7 +130,7 @@ TYPEDEFS
 
 		DRXJ_CFG_MAX	/* dummy, never to be used */};
 
-/**
+/*
 * /struct enum drxj_cfg_smart_ant_io * smart antenna i/o.
 */
 enum drxj_cfg_smart_ant_io {
@@ -138,7 +138,7 @@ enum drxj_cfg_smart_ant_io {
 	DRXJ_SMT_ANT_INPUT
 };
 
-/**
+/*
 * /struct struct drxj_cfg_smart_ant * Set smart antenna.
 */
 	struct drxj_cfg_smart_ant {
@@ -146,7 +146,7 @@ enum drxj_cfg_smart_ant_io {
 		u16 ctrl_data;
 	};
 
-/**
+/*
 * /struct DRXJAGCSTATUS_t
 * AGC status information from the DRXJ-IQM-AF.
 */
@@ -158,7 +158,7 @@ struct drxj_agc_status {
 
 /* DRXJ_CFG_AGC_RF, DRXJ_CFG_AGC_IF */
 
-/**
+/*
 * /struct enum drxj_agc_ctrl_mode * Available AGCs modes in the DRXJ.
 */
 	enum drxj_agc_ctrl_mode {
@@ -166,7 +166,7 @@ struct drxj_agc_status {
 		DRX_AGC_CTRL_USER,
 		DRX_AGC_CTRL_OFF};
 
-/**
+/*
 * /struct struct drxj_cfg_agc * Generic interface for all AGCs present on the DRXJ.
 */
 	struct drxj_cfg_agc {
@@ -182,7 +182,7 @@ struct drxj_agc_status {
 
 /* DRXJ_CFG_PRE_SAW */
 
-/**
+/*
 * /struct struct drxj_cfg_pre_saw * Interface to configure pre SAW sense.
 */
 	struct drxj_cfg_pre_saw {
@@ -192,14 +192,14 @@ struct drxj_agc_status {
 
 /* DRXJ_CFG_AFE_GAIN */
 
-/**
+/*
 * /struct struct drxj_cfg_afe_gain * Interface to configure gain of AFE (LNA + PGA).
 */
 	struct drxj_cfg_afe_gain {
 		enum drx_standard standard;	/* standard to which these settings apply */
 		u16 gain;	/* gain in 0.1 dB steps, DRXJ range 140 .. 335 */};
 
-/**
+/*
 * /struct drxjrs_errors
 * Available failure information in DRXJ_FEC_RS.
 *
@@ -208,25 +208,25 @@ struct drxj_agc_status {
 */
 	struct drxjrs_errors {
 		u16 nr_bit_errors;
-				/**< no of pre RS bit errors          */
+				/*< no of pre RS bit errors          */
 		u16 nr_symbol_errors;
-				/**< no of pre RS symbol errors       */
+				/*< no of pre RS symbol errors       */
 		u16 nr_packet_errors;
-				/**< no of pre RS packet errors       */
+				/*< no of pre RS packet errors       */
 		u16 nr_failures;
-				/**< no of post RS failures to decode */
+				/*< no of post RS failures to decode */
 		u16 nr_snc_par_fail_count;
-				/**< no of post RS bit erros          */
+				/*< no of post RS bit erros          */
 	};
 
-/**
+/*
 * /struct struct drxj_cfg_vsb_misc * symbol error rate
 */
 	struct drxj_cfg_vsb_misc {
 		u32 symb_error;
-			      /**< symbol error rate sps */};
+			      /*< symbol error rate sps */};
 
-/**
+/*
 * /enum enum drxj_mpeg_output_clock_rate * Mpeg output clock rate.
 *
 */
@@ -234,7 +234,7 @@ struct drxj_agc_status {
 		DRXJ_MPEG_START_WIDTH_1CLKCYC,
 		DRXJ_MPEG_START_WIDTH_8CLKCYC};
 
-/**
+/*
 * /enum enum drxj_mpeg_output_clock_rate * Mpeg output clock rate.
 *
 */
@@ -247,20 +247,20 @@ struct drxj_agc_status {
 		DRXJ_MPEGOUTPUT_CLOCK_RATE_25313K,
 		DRXJ_MPEGOUTPUT_CLOCK_RATE_21696K};
 
-/**
+/*
 * /struct DRXJCfgMisc_t
 * Change TEI bit of MPEG output
 * reverse MPEG output bit order
 * set MPEG output clock rate
 */
 	struct drxj_cfg_mpeg_output_misc {
-		bool disable_tei_handling;	      /**< if true pass (not change) TEI bit */
-		bool bit_reverse_mpeg_outout;	      /**< if true, parallel: msb on MD0; serial: lsb out first */
+		bool disable_tei_handling;	      /*< if true pass (not change) TEI bit */
+		bool bit_reverse_mpeg_outout;	      /*< if true, parallel: msb on MD0; serial: lsb out first */
 		enum drxj_mpeg_output_clock_rate mpeg_output_clock_rate;
-						      /**< set MPEG output clock rate that overwirtes the derived one from symbol rate */
-		enum drxj_mpeg_start_width mpeg_start_width;  /**< set MPEG output start width */};
+						      /*< set MPEG output clock rate that overwirtes the derived one from symbol rate */
+		enum drxj_mpeg_start_width mpeg_start_width;  /*< set MPEG output start width */};
 
-/**
+/*
 * /enum enum drxj_xtal_freq * Supported external crystal reference frequency.
 */
 	enum drxj_xtal_freq {
@@ -269,21 +269,21 @@ struct drxj_agc_status {
 		DRXJ_XTAL_FREQ_20P25MHZ,
 		DRXJ_XTAL_FREQ_4MHZ};
 
-/**
+/*
 * /enum enum drxj_xtal_freq * Supported external crystal reference frequency.
 */
 	enum drxji2c_speed {
 		DRXJ_I2C_SPEED_400KBPS,
 		DRXJ_I2C_SPEED_100KBPS};
 
-/**
+/*
 * /struct struct drxj_cfg_hw_cfg * Get hw configuration, such as crystal reference frequency, I2C speed, etc...
 */
 	struct drxj_cfg_hw_cfg {
 		enum drxj_xtal_freq xtal_freq;
-				   /**< crystal reference frequency */
+				   /*< crystal reference frequency */
 		enum drxji2c_speed i2c_speed;
-				   /**< 100 or 400 kbps */};
+				   /*< 100 or 400 kbps */};
 
 /*
  *  DRXJ_CFG_ATV_MISC
@@ -352,7 +352,7 @@ struct drxj_cfg_oob_misc {
  *  DRXJ_CFG_ATV_OUTPUT
  */
 
-/**
+/*
 * /enum DRXJAttenuation_t
 * Attenuation setting for SIF AGC.
 *
@@ -363,7 +363,7 @@ struct drxj_cfg_oob_misc {
 		DRXJ_SIF_ATTENUATION_6DB,
 		DRXJ_SIF_ATTENUATION_9DB};
 
-/**
+/*
 * /struct struct drxj_cfg_atv_output * SIF attenuation setting.
 *
 */
@@ -398,7 +398,7 @@ struct drxj_cfg_atv_output {
 /*============================================================================*/
 
 /*========================================*/
-/**
+/*
 * /struct struct drxj_data * DRXJ specific attributes.
 *
 * Global data container for DRXJ specific data.
@@ -406,93 +406,93 @@ struct drxj_cfg_atv_output {
 */
 	struct drxj_data {
 		/* device capabilties (determined during drx_open()) */
-		bool has_lna;		  /**< true if LNA (aka PGA) present */
-		bool has_oob;		  /**< true if OOB supported */
-		bool has_ntsc;		  /**< true if NTSC supported */
-		bool has_btsc;		  /**< true if BTSC supported */
-		bool has_smatx;	  /**< true if mat_tx is available */
-		bool has_smarx;	  /**< true if mat_rx is available */
-		bool has_gpio;		  /**< true if GPIO is available */
-		bool has_irqn;		  /**< true if IRQN is available */
+		bool has_lna;		  /*< true if LNA (aka PGA) present */
+		bool has_oob;		  /*< true if OOB supported */
+		bool has_ntsc;		  /*< true if NTSC supported */
+		bool has_btsc;		  /*< true if BTSC supported */
+		bool has_smatx;	  /*< true if mat_tx is available */
+		bool has_smarx;	  /*< true if mat_rx is available */
+		bool has_gpio;		  /*< true if GPIO is available */
+		bool has_irqn;		  /*< true if IRQN is available */
 		/* A1/A2/A... */
-		u8 mfx;		  /**< metal fix */
+		u8 mfx;		  /*< metal fix */
 
 		/* tuner settings */
-		bool mirror_freq_spect_oob;/**< tuner inversion (true = tuner mirrors the signal */
+		bool mirror_freq_spect_oob;/*< tuner inversion (true = tuner mirrors the signal */
 
 		/* standard/channel settings */
-		enum drx_standard standard;	  /**< current standard information                     */
+		enum drx_standard standard;	  /*< current standard information                     */
 		enum drx_modulation constellation;
-					  /**< current constellation                            */
-		s32 frequency; /**< center signal frequency in KHz                   */
+					  /*< current constellation                            */
+		s32 frequency; /*< center signal frequency in KHz                   */
 		enum drx_bandwidth curr_bandwidth;
-					  /**< current channel bandwidth                        */
-		enum drx_mirror mirror;	  /**< current channel mirror                           */
+					  /*< current channel bandwidth                        */
+		enum drx_mirror mirror;	  /*< current channel mirror                           */
 
 		/* signal quality information */
-		u32 fec_bits_desired;	  /**< BER accounting period                            */
-		u16 fec_vd_plen;	  /**< no of trellis symbols: VD SER measurement period */
-		u16 qam_vd_prescale;	  /**< Viterbi Measurement Prescale                     */
-		u16 qam_vd_period;	  /**< Viterbi Measurement period                       */
-		u16 fec_rs_plen;	  /**< defines RS BER measurement period                */
-		u16 fec_rs_prescale;	  /**< ReedSolomon Measurement Prescale                 */
-		u16 fec_rs_period;	  /**< ReedSolomon Measurement period                   */
-		bool reset_pkt_err_acc;	  /**< Set a flag to reset accumulated packet error     */
-		u16 pkt_err_acc_start;	  /**< Set a flag to reset accumulated packet error     */
+		u32 fec_bits_desired;	  /*< BER accounting period                            */
+		u16 fec_vd_plen;	  /*< no of trellis symbols: VD SER measurement period */
+		u16 qam_vd_prescale;	  /*< Viterbi Measurement Prescale                     */
+		u16 qam_vd_period;	  /*< Viterbi Measurement period                       */
+		u16 fec_rs_plen;	  /*< defines RS BER measurement period                */
+		u16 fec_rs_prescale;	  /*< ReedSolomon Measurement Prescale                 */
+		u16 fec_rs_period;	  /*< ReedSolomon Measurement period                   */
+		bool reset_pkt_err_acc;	  /*< Set a flag to reset accumulated packet error     */
+		u16 pkt_err_acc_start;	  /*< Set a flag to reset accumulated packet error     */
 
 		/* HI configuration */
-		u16 hi_cfg_timing_div;	  /**< HI Configure() parameter 2                       */
-		u16 hi_cfg_bridge_delay;	  /**< HI Configure() parameter 3                       */
-		u16 hi_cfg_wake_up_key;	  /**< HI Configure() parameter 4                       */
-		u16 hi_cfg_ctrl;	  /**< HI Configure() parameter 5                       */
-		u16 hi_cfg_transmit;	  /**< HI Configure() parameter 6                       */
+		u16 hi_cfg_timing_div;	  /*< HI Configure() parameter 2                       */
+		u16 hi_cfg_bridge_delay;	  /*< HI Configure() parameter 3                       */
+		u16 hi_cfg_wake_up_key;	  /*< HI Configure() parameter 4                       */
+		u16 hi_cfg_ctrl;	  /*< HI Configure() parameter 5                       */
+		u16 hi_cfg_transmit;	  /*< HI Configure() parameter 6                       */
 
 		/* UIO configuration */
-		enum drxuio_mode uio_sma_rx_mode;/**< current mode of SmaRx pin                        */
-		enum drxuio_mode uio_sma_tx_mode;/**< current mode of SmaTx pin                        */
-		enum drxuio_mode uio_gpio_mode; /**< current mode of ASEL pin                         */
-		enum drxuio_mode uio_irqn_mode; /**< current mode of IRQN pin                         */
+		enum drxuio_mode uio_sma_rx_mode;/*< current mode of SmaRx pin                        */
+		enum drxuio_mode uio_sma_tx_mode;/*< current mode of SmaTx pin                        */
+		enum drxuio_mode uio_gpio_mode; /*< current mode of ASEL pin                         */
+		enum drxuio_mode uio_irqn_mode; /*< current mode of IRQN pin                         */
 
 		/* IQM fs frequecy shift and inversion */
-		u32 iqm_fs_rate_ofs;	   /**< frequency shifter setting after setchannel      */
-		bool pos_image;	   /**< Ture: positive image                            */
+		u32 iqm_fs_rate_ofs;	   /*< frequency shifter setting after setchannel      */
+		bool pos_image;	   /*< Ture: positive image                            */
 		/* IQM RC frequecy shift */
-		u32 iqm_rc_rate_ofs;	   /**< frequency shifter setting after setchannel      */
+		u32 iqm_rc_rate_ofs;	   /*< frequency shifter setting after setchannel      */
 
 		/* ATV configuration */
-		u32 atv_cfg_changed_flags; /**< flag: flags cfg changes */
-		s16 atv_top_equ0[DRXJ_COEF_IDX_MAX];	     /**< shadow of ATV_TOP_EQU0__A */
-		s16 atv_top_equ1[DRXJ_COEF_IDX_MAX];	     /**< shadow of ATV_TOP_EQU1__A */
-		s16 atv_top_equ2[DRXJ_COEF_IDX_MAX];	     /**< shadow of ATV_TOP_EQU2__A */
-		s16 atv_top_equ3[DRXJ_COEF_IDX_MAX];	     /**< shadow of ATV_TOP_EQU3__A */
-		bool phase_correction_bypass;/**< flag: true=bypass */
-		s16 atv_top_vid_peak;	  /**< shadow of ATV_TOP_VID_PEAK__A */
-		u16 atv_top_noise_th;	  /**< shadow of ATV_TOP_NOISE_TH__A */
-		bool enable_cvbs_output;  /**< flag CVBS ouput enable */
-		bool enable_sif_output;	  /**< flag SIF ouput enable */
+		u32 atv_cfg_changed_flags; /*< flag: flags cfg changes */
+		s16 atv_top_equ0[DRXJ_COEF_IDX_MAX];	     /*< shadow of ATV_TOP_EQU0__A */
+		s16 atv_top_equ1[DRXJ_COEF_IDX_MAX];	     /*< shadow of ATV_TOP_EQU1__A */
+		s16 atv_top_equ2[DRXJ_COEF_IDX_MAX];	     /*< shadow of ATV_TOP_EQU2__A */
+		s16 atv_top_equ3[DRXJ_COEF_IDX_MAX];	     /*< shadow of ATV_TOP_EQU3__A */
+		bool phase_correction_bypass;/*< flag: true=bypass */
+		s16 atv_top_vid_peak;	  /*< shadow of ATV_TOP_VID_PEAK__A */
+		u16 atv_top_noise_th;	  /*< shadow of ATV_TOP_NOISE_TH__A */
+		bool enable_cvbs_output;  /*< flag CVBS ouput enable */
+		bool enable_sif_output;	  /*< flag SIF ouput enable */
 		 enum drxjsif_attenuation sif_attenuation;
-					  /**< current SIF att setting */
+					  /*< current SIF att setting */
 		/* Agc configuration for QAM and VSB */
-		struct drxj_cfg_agc qam_rf_agc_cfg; /**< qam RF AGC config */
-		struct drxj_cfg_agc qam_if_agc_cfg; /**< qam IF AGC config */
-		struct drxj_cfg_agc vsb_rf_agc_cfg; /**< vsb RF AGC config */
-		struct drxj_cfg_agc vsb_if_agc_cfg; /**< vsb IF AGC config */
+		struct drxj_cfg_agc qam_rf_agc_cfg; /*< qam RF AGC config */
+		struct drxj_cfg_agc qam_if_agc_cfg; /*< qam IF AGC config */
+		struct drxj_cfg_agc vsb_rf_agc_cfg; /*< vsb RF AGC config */
+		struct drxj_cfg_agc vsb_if_agc_cfg; /*< vsb IF AGC config */
 
 		/* PGA gain configuration for QAM and VSB */
-		u16 qam_pga_cfg;	  /**< qam PGA config */
-		u16 vsb_pga_cfg;	  /**< vsb PGA config */
+		u16 qam_pga_cfg;	  /*< qam PGA config */
+		u16 vsb_pga_cfg;	  /*< vsb PGA config */
 
 		/* Pre SAW configuration for QAM and VSB */
 		struct drxj_cfg_pre_saw qam_pre_saw_cfg;
-					  /**< qam pre SAW config */
+					  /*< qam pre SAW config */
 		struct drxj_cfg_pre_saw vsb_pre_saw_cfg;
-					  /**< qam pre SAW config */
+					  /*< qam pre SAW config */
 
 		/* Version information */
-		char v_text[2][12];	  /**< allocated text versions */
-		struct drx_version v_version[2]; /**< allocated versions structs */
+		char v_text[2][12];	  /*< allocated text versions */
+		struct drx_version v_version[2]; /*< allocated versions structs */
 		struct drx_version_list v_list_elements[2];
-					  /**< allocated version list */
+					  /*< allocated version list */
 
 		/* smart antenna configuration */
 		bool smart_ant_inverted;
@@ -502,25 +502,25 @@ struct drxj_cfg_atv_output {
 		bool oob_power_on;
 
 		/* MPEG static bitrate setting */
-		u32 mpeg_ts_static_bitrate;  /**< bitrate static MPEG output */
-		bool disable_te_ihandling;  /**< MPEG TS TEI handling */
-		bool bit_reverse_mpeg_outout;/**< MPEG output bit order */
+		u32 mpeg_ts_static_bitrate;  /*< bitrate static MPEG output */
+		bool disable_te_ihandling;  /*< MPEG TS TEI handling */
+		bool bit_reverse_mpeg_outout;/*< MPEG output bit order */
 		 enum drxj_mpeg_output_clock_rate mpeg_output_clock_rate;
-					    /**< MPEG output clock rate */
+					    /*< MPEG output clock rate */
 		 enum drxj_mpeg_start_width mpeg_start_width;
-					    /**< MPEG Start width */
+					    /*< MPEG Start width */
 
 		/* Pre SAW & Agc configuration for ATV */
 		struct drxj_cfg_pre_saw atv_pre_saw_cfg;
-					  /**< atv pre SAW config */
-		struct drxj_cfg_agc atv_rf_agc_cfg; /**< atv RF AGC config */
-		struct drxj_cfg_agc atv_if_agc_cfg; /**< atv IF AGC config */
-		u16 atv_pga_cfg;	  /**< atv pga config    */
+					  /*< atv pre SAW config */
+		struct drxj_cfg_agc atv_rf_agc_cfg; /*< atv RF AGC config */
+		struct drxj_cfg_agc atv_if_agc_cfg; /*< atv IF AGC config */
+		u16 atv_pga_cfg;	  /*< atv pga config    */
 
 		u32 curr_symbol_rate;
 
 		/* pin-safe mode */
-		bool pdr_safe_mode;	    /**< PDR safe mode activated      */
+		bool pdr_safe_mode;	    /*< PDR safe mode activated      */
 		u16 pdr_safe_restore_val_gpio;
 		u16 pdr_safe_restore_val_v_sync;
 		u16 pdr_safe_restore_val_sma_rx;
@@ -531,12 +531,12 @@ struct drxj_cfg_atv_output {
 		enum drxj_cfg_oob_lo_power oob_lo_pow;
 
 		struct drx_aud_data aud_data;
-				    /**< audio storage                  */};
+				    /*< audio storage                  */};
 
 /*-------------------------------------------------------------------------
 Access MACROS
 -------------------------------------------------------------------------*/
-/**
+/*
 * \brief Compilable references to attributes
 * \param d pointer to demod instance
 *
@@ -554,7 +554,7 @@ Access MACROS
 DEFINES
 -------------------------------------------------------------------------*/
 
-/**
+/*
 * \def DRXJ_NTSC_CARRIER_FREQ_OFFSET
 * \brief Offset from picture carrier to centre frequency in kHz, in RF domain
 *
@@ -569,7 +569,7 @@ DEFINES
 */
 #define DRXJ_NTSC_CARRIER_FREQ_OFFSET           ((s32)(1750))
 
-/**
+/*
 * \def DRXJ_PAL_SECAM_BG_CARRIER_FREQ_OFFSET
 * \brief Offset from picture carrier to centre frequency in kHz, in RF domain
 *
@@ -585,7 +585,7 @@ DEFINES
 */
 #define DRXJ_PAL_SECAM_BG_CARRIER_FREQ_OFFSET   ((s32)(2375))
 
-/**
+/*
 * \def DRXJ_PAL_SECAM_DKIL_CARRIER_FREQ_OFFSET
 * \brief Offset from picture carrier to centre frequency in kHz, in RF domain
 *
@@ -601,7 +601,7 @@ DEFINES
 */
 #define DRXJ_PAL_SECAM_DKIL_CARRIER_FREQ_OFFSET ((s32)(2775))
 
-/**
+/*
 * \def DRXJ_PAL_SECAM_LP_CARRIER_FREQ_OFFSET
 * \brief Offset from picture carrier to centre frequency in kHz, in RF domain
 *
@@ -616,7 +616,7 @@ DEFINES
 */
 #define DRXJ_PAL_SECAM_LP_CARRIER_FREQ_OFFSET   ((s32)(-3255))
 
-/**
+/*
 * \def DRXJ_FM_CARRIER_FREQ_OFFSET
 * \brief Offset from sound carrier to centre frequency in kHz, in RF domain
 *

commit 2c149601001ba25b5b4e5aa9dd481d677cae15ae
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Mon Feb 27 14:29:31 2017 -0800

    scripts/spelling.txt: add "configuartion" pattern and fix typo instances
    
    Fix typos and add the following to the scripts/spelling.txt:
    
      configuartion||configuration
    
    While we are here, fix the "ouput" as well in the touched hunk in
    drivers/media/dvb-frontends/drx39xyj/drx_driver.h.
    
    Link: http://lkml.kernel.org/r/1481573103-11329-23-git-send-email-yamada.masahiro@socionext.com
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/drivers/media/dvb-frontends/drx39xyj/drxj.h b/drivers/media/dvb-frontends/drx39xyj/drxj.h
index 55ad535197d2..6c5b8f78f9f6 100644
--- a/drivers/media/dvb-frontends/drx39xyj/drxj.h
+++ b/drivers/media/dvb-frontends/drx39xyj/drxj.h
@@ -447,7 +447,7 @@ struct drxj_cfg_atv_output {
 		u16 hi_cfg_ctrl;	  /**< HI Configure() parameter 5                       */
 		u16 hi_cfg_transmit;	  /**< HI Configure() parameter 6                       */
 
-		/* UIO configuartion */
+		/* UIO configuration */
 		enum drxuio_mode uio_sma_rx_mode;/**< current mode of SmaRx pin                        */
 		enum drxuio_mode uio_sma_tx_mode;/**< current mode of SmaTx pin                        */
 		enum drxuio_mode uio_gpio_mode; /**< current mode of ASEL pin                         */
@@ -459,7 +459,7 @@ struct drxj_cfg_atv_output {
 		/* IQM RC frequecy shift */
 		u32 iqm_rc_rate_ofs;	   /**< frequency shifter setting after setchannel      */
 
-		/* ATV configuartion */
+		/* ATV configuration */
 		u32 atv_cfg_changed_flags; /**< flag: flags cfg changes */
 		s16 atv_top_equ0[DRXJ_COEF_IDX_MAX];	     /**< shadow of ATV_TOP_EQU0__A */
 		s16 atv_top_equ1[DRXJ_COEF_IDX_MAX];	     /**< shadow of ATV_TOP_EQU1__A */

commit 01473146394f28735778aefaf9faae109d6ee5f2
Author: Mauro Carvalho Chehab <m.chehab@samsung.com>
Date:   Sun Mar 9 10:33:19 2014 -0300

    [media] drx-j: remove external symbols
    
    This driver doesn't export any external symbol, except for
    the attach() method.
    
    Signed-off-by: Mauro Carvalho Chehab <m.chehab@samsung.com>

diff --git a/drivers/media/dvb-frontends/drx39xyj/drxj.h b/drivers/media/dvb-frontends/drx39xyj/drxj.h
index 6d46513b7169..55ad535197d2 100644
--- a/drivers/media/dvb-frontends/drx39xyj/drxj.h
+++ b/drivers/media/dvb-frontends/drx39xyj/drxj.h
@@ -647,34 +647,4 @@ DEFINES
 	(x == DRX_LOCK_STATE_2) ? "sync lock" : \
 	"(Invalid)")
 
-/*-------------------------------------------------------------------------
-ENUM
--------------------------------------------------------------------------*/
-
-/*-------------------------------------------------------------------------
-STRUCTS
--------------------------------------------------------------------------*/
-
-/*-------------------------------------------------------------------------
-Exported FUNCTIONS
--------------------------------------------------------------------------*/
-
-	int drxj_open(struct drx_demod_instance *demod);
-	int drxj_close(struct drx_demod_instance *demod);
-	int drxj_ctrl(struct drx_demod_instance *demod,
-				     u32 ctrl, void *ctrl_data);
-
-/*-------------------------------------------------------------------------
-Exported GLOBAL VARIABLES
--------------------------------------------------------------------------*/
-	extern struct drx_access_func drx_dap_drxj_funct_g;
-	extern struct drx_demod_func drxj_functions_g;
-	extern struct drxj_data drxj_data_g;
-	extern struct i2c_device_addr drxj_default_addr_g;
-	extern struct drx_common_attr drxj_default_comm_attr_g;
-	extern struct drx_demod_instance drxj_default_demod_g;
-
-/*-------------------------------------------------------------------------
-THE END
--------------------------------------------------------------------------*/
 #endif				/* __DRXJ_H__ */

commit 2f1f733386ce6dac70c0936b81b9f630ddfb1837
Author: Mauro Carvalho Chehab <m.chehab@samsung.com>
Date:   Fri Jan 17 11:51:52 2014 -0300

    [media] drx-j: make checkpatch.pl happy
    
    Fix the remaining checkpatch.pl compliants at drxj.
    
    Acked-by: Devin Heitmueller <dheitmueller@kernellabs.com>
    Signed-off-by: Mauro Carvalho Chehab <m.chehab@samsung.com>

diff --git a/drivers/media/dvb-frontends/drx39xyj/drxj.h b/drivers/media/dvb-frontends/drx39xyj/drxj.h
index c38245ee15ed..6d46513b7169 100644
--- a/drivers/media/dvb-frontends/drx39xyj/drxj.h
+++ b/drivers/media/dvb-frontends/drx39xyj/drxj.h
@@ -27,14 +27,10 @@
   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
   POSSIBILITY OF SUCH DAMAGE.
-*/
 
-/**
-* \file $Id: drxj.h,v 1.132 2009/12/22 12:13:48 danielg Exp $
-*
-* \brief DRXJ specific header file
-*
-* \author Dragan Savic, Milos Nikolic, Mihajlo Katona, Tao Ding, Paul Janssen
+ DRXJ specific header file
+
+ Authors: Dragan Savic, Milos Nikolic, Mihajlo Katona, Tao Ding, Paul Janssen
 */
 
 #ifndef __DRXJ_H__
@@ -46,10 +42,6 @@ INCLUDES
 #include "drx_driver.h"
 #include "drx_dap_fasi.h"
 
-#ifdef __cplusplus
-extern "C" {
-#endif
-
 /* Check DRX-J specific dap condition */
 /* Multi master mode and short addr format only will not work.
    RMW, CRC reset, broadcast and switching back to single master mode
@@ -322,7 +314,7 @@ struct drxj_cfg_oob_misc {
 	bool dig_gain_lock;
 	bool ana_gain_lock;
 	u8 state;
- };
+};
 
 /*
  *  Index of in array of coef
@@ -558,27 +550,6 @@ Access MACROS
 #define DRXJ_ATTR_BTSC_DETECT(d)                       \
 			(((struct drxj_data *)(d)->my_ext_attr)->aud_data.btsc_detect)
 
-/**
-* \brief Actual access macros
-* \param d pointer to demod instance
-* \param x value to set or to get
-*
-* SET macros must be used to set the value of an attribute.
-* GET macros must be used to retrieve the value of an attribute.
-* Depending on the value of DRX_USE_ACCESS_FUNCTIONS the macro's will be
-* substituted by "direct-access-inline-code" or a function call.
-*
-*/
-#define DRXJ_GET_BTSC_DETECT(d, x)                     \
-   do {                                                  \
-      (x) = DRXJ_ATTR_BTSC_DETECT((d);                 \
-   } while (0)
-
-#define DRXJ_SET_BTSC_DETECT(d, x)                     \
-   do {                                                  \
-      DRXJ_ATTR_BTSC_DETECT(d) = (x);                  \
-   } while (0)
-
 /*-------------------------------------------------------------------------
 DEFINES
 -------------------------------------------------------------------------*/
@@ -669,12 +640,12 @@ DEFINES
 
 /* Convert OOB lock status to string */
 #define DRXJ_STR_OOB_LOCKSTATUS(x) ( \
-   (x == DRX_NEVER_LOCK)  ?  "Never"           : \
-   (x == DRX_NOT_LOCKED)  ?  "No"              : \
-   (x == DRX_LOCKED)  ?  "Locked"          : \
-   (x == DRX_LOCK_STATE_1)  ?  "AGC lock"        : \
-   (x == DRX_LOCK_STATE_2)  ?  "sync lock"       : \
-					     "(Invalid)")
+	(x == DRX_NEVER_LOCK) ? "Never" : \
+	(x == DRX_NOT_LOCKED) ? "No" : \
+	(x == DRX_LOCKED) ? "Locked" : \
+	(x == DRX_LOCK_STATE_1) ? "AGC lock" : \
+	(x == DRX_LOCK_STATE_2) ? "sync lock" : \
+	"(Invalid)")
 
 /*-------------------------------------------------------------------------
 ENUM
@@ -706,7 +677,4 @@ Exported GLOBAL VARIABLES
 /*-------------------------------------------------------------------------
 THE END
 -------------------------------------------------------------------------*/
-#ifdef __cplusplus
-}
-#endif
 #endif				/* __DRXJ_H__ */

commit e33f2193ade658a509d01178a95c32b9242b7d61
Author: Mauro Carvalho Chehab <m.chehab@samsung.com>
Date:   Fri Jan 17 06:47:04 2014 -0300

    [media] drx-j: More CamelCase fixups
    
    Acked-by: Devin Heitmueller <dheitmueller@kernellabs.com>
    Signed-off-by: Mauro Carvalho Chehab <m.chehab@samsung.com>

diff --git a/drivers/media/dvb-frontends/drx39xyj/drxj.h b/drivers/media/dvb-frontends/drx39xyj/drxj.h
index f41a61e49594..c38245ee15ed 100644
--- a/drivers/media/dvb-frontends/drx39xyj/drxj.h
+++ b/drivers/media/dvb-frontends/drx39xyj/drxj.h
@@ -426,7 +426,7 @@ struct drxj_cfg_atv_output {
 		u8 mfx;		  /**< metal fix */
 
 		/* tuner settings */
-		bool mirror_freq_spectOOB;/**< tuner inversion (true = tuner mirrors the signal */
+		bool mirror_freq_spect_oob;/**< tuner inversion (true = tuner mirrors the signal */
 
 		/* standard/channel settings */
 		enum drx_standard standard;	  /**< current standard information                     */
@@ -446,7 +446,7 @@ struct drxj_cfg_atv_output {
 		u16 fec_rs_prescale;	  /**< ReedSolomon Measurement Prescale                 */
 		u16 fec_rs_period;	  /**< ReedSolomon Measurement period                   */
 		bool reset_pkt_err_acc;	  /**< Set a flag to reset accumulated packet error     */
-		u16 pkt_errAccStart;	  /**< Set a flag to reset accumulated packet error     */
+		u16 pkt_err_acc_start;	  /**< Set a flag to reset accumulated packet error     */
 
 		/* HI configuration */
 		u16 hi_cfg_timing_div;	  /**< HI Configure() parameter 2                       */

commit b3ce3a8311615df43ec3a1969086f9fffcc8dceb
Author: Mauro Carvalho Chehab <m.chehab@samsung.com>
Date:   Thu Jan 16 15:33:14 2014 -0300

    [media] drx-j: Get rid of typedefs on drxh.h
    
    This were fixed with the help of this small perl script:
    
            #!/usr/bin/perl
            my $dir = shift or die "need a dir";
            my $type = shift or die "need type";
            my $var = shift or die "need var";
            sub handle_file {
                    my $file = shift;
                    my $out;
                    open IN, $file or die "can't open $file";
                    $out .= $_ while (<IN>);
                    close IN;
                    $out =~ s/\btypedef\s+($type)\s+\{([\d\D]+?)\s*\}\s+\b($var)[^\;]+\;/$type $var \{\2\};/;
                    $out =~ s,\b($var)_t\s+,$type \1 ,g;
                    $out =~ s,\bp_*($var)_t\s+,$type \1 *,g;
                    $out =~ s,\b($var)_t\b,$type \1,g;
                    $out =~ s,\bp_*($var)_t\b,$type \1 *,g;
                    open OUT, ">$file" or die "can't open $file";
                    print OUT $out;
                    close OUT;
            }
            sub parse_dir {
                    my $file = $File::Find::name;
                    return if (!($file =~ /.[ch]$/));
                    handle_file $file;
            }
            find({wanted => \&parse_dir, no_chdir => 1}, $dir);
    
    Some manual work were needed.
    
    Acked-by: Devin Heitmueller <dheitmueller@kernellabs.com>
    Signed-off-by: Mauro Carvalho Chehab <m.chehab@samsung.com>

diff --git a/drivers/media/dvb-frontends/drx39xyj/drxj.h b/drivers/media/dvb-frontends/drx39xyj/drxj.h
index 91272f100128..f41a61e49594 100644
--- a/drivers/media/dvb-frontends/drx39xyj/drxj.h
+++ b/drivers/media/dvb-frontends/drx39xyj/drxj.h
@@ -1,3 +1,4 @@
+
 /*
   Copyright (c), 2004-2005,2007-2010 Trident Microsystems, Inc.
   All rights reserved.
@@ -74,7 +75,7 @@ TYPEDEFS
 /*============================================================================*/
 /*============================================================================*/
 
-	typedef struct {
+	struct drxjscu_cmd {
 		u16 command;
 			/**< Command number */
 		u16 parameter_len;
@@ -84,8 +85,7 @@ TYPEDEFS
 		u16 *parameter;
 			/**< General purpous param */
 		u16 *result;
-			/**< General purpous param */
-	} drxjscu_cmd_t, *p_drxjscu_cmd_t;
+			/**< General purpous param */};
 
 /*============================================================================*/
 /*============================================================================*/
@@ -111,7 +111,7 @@ TYPEDEFS
 /*#define DRX_CTRL_BASE         (0x0000)*/
 
 #define DRXJ_CTRL_CFG_BASE    (0x1000)
-	typedef enum {
+	enum drxj_cfg_type {
 		DRXJ_CFG_AGC_RF = DRXJ_CTRL_CFG_BASE,
 		DRXJ_CFG_AGC_IF,
 		DRXJ_CFG_AGC_INTERNAL,
@@ -136,96 +136,85 @@ TYPEDEFS
 		DRXJ_CFG_HW_CFG,
 		DRXJ_CFG_OOB_LO_POW,
 
-		DRXJ_CFG_MAX	/* dummy, never to be used */
-	} drxj_cfg_type_t, *pdrxj_cfg_type_t;
+		DRXJ_CFG_MAX	/* dummy, never to be used */};
 
 /**
-* /struct drxj_cfg_smart_ant_io_t
-* smart antenna i/o.
+* /struct enum drxj_cfg_smart_ant_io * smart antenna i/o.
 */
-	typedef enum drxj_cfg_smart_ant_io_t {
-		DRXJ_SMT_ANT_OUTPUT = 0,
-		DRXJ_SMT_ANT_INPUT
-	} drxj_cfg_smart_ant_io_t, *pdrxj_cfg_smart_ant_io_t;
+enum drxj_cfg_smart_ant_io {
+	DRXJ_SMT_ANT_OUTPUT = 0,
+	DRXJ_SMT_ANT_INPUT
+};
 
 /**
-* /struct drxj_cfg_smart_ant_t
-* Set smart antenna.
+* /struct struct drxj_cfg_smart_ant * Set smart antenna.
 */
-	typedef struct {
-		drxj_cfg_smart_ant_io_t io;
+	struct drxj_cfg_smart_ant {
+		enum drxj_cfg_smart_ant_io io;
 		u16 ctrl_data;
-	} drxj_cfg_smart_ant_t, *p_drxj_cfg_smart_ant_t;
+	};
 
 /**
 * /struct DRXJAGCSTATUS_t
 * AGC status information from the DRXJ-IQM-AF.
 */
-	typedef struct {
-		u16 IFAGC;
-		u16 RFAGC;
-		u16 digital_agc;
-	} drxj_agc_status_t, *pdrxj_agc_status_t;
+struct drxj_agc_status {
+	u16 IFAGC;
+	u16 RFAGC;
+	u16 digital_agc;
+};
 
 /* DRXJ_CFG_AGC_RF, DRXJ_CFG_AGC_IF */
 
 /**
-* /struct drxj_agc_ctrl_mode_t
-* Available AGCs modes in the DRXJ.
+* /struct enum drxj_agc_ctrl_mode * Available AGCs modes in the DRXJ.
 */
-	typedef enum {
+	enum drxj_agc_ctrl_mode {
 		DRX_AGC_CTRL_AUTO = 0,
 		DRX_AGC_CTRL_USER,
-		DRX_AGC_CTRL_OFF
-	} drxj_agc_ctrl_mode_t, *pdrxj_agc_ctrl_mode_t;
+		DRX_AGC_CTRL_OFF};
 
 /**
-* /struct drxj_cfg_agc_t
-* Generic interface for all AGCs present on the DRXJ.
+* /struct struct drxj_cfg_agc * Generic interface for all AGCs present on the DRXJ.
 */
-	typedef struct {
+	struct drxj_cfg_agc {
 		enum drx_standard standard;	/* standard for which these settings apply */
-		drxj_agc_ctrl_mode_t ctrl_mode;	/* off, user, auto          */
+		enum drxj_agc_ctrl_mode ctrl_mode;	/* off, user, auto          */
 		u16 output_level;	/* range dependent on AGC   */
 		u16 min_output_level;	/* range dependent on AGC   */
 		u16 max_output_level;	/* range dependent on AGC   */
 		u16 speed;	/* range dependent on AGC   */
 		u16 top;	/* rf-agc take over point   */
 		u16 cut_off_current;	/* rf-agc is accelerated if output current
-					   is below cut-off current                */
-	} drxj_cfg_agc_t, *p_drxj_cfg_agc_t;
+					   is below cut-off current                */};
 
 /* DRXJ_CFG_PRE_SAW */
 
 /**
-* /struct drxj_cfg_pre_saw_t
-* Interface to configure pre SAW sense.
+* /struct struct drxj_cfg_pre_saw * Interface to configure pre SAW sense.
 */
-	typedef struct {
+	struct drxj_cfg_pre_saw {
 		enum drx_standard standard;	/* standard to which these settings apply */
 		u16 reference;	/* pre SAW reference value, range 0 .. 31 */
-		bool use_pre_saw;	/* true algorithms must use pre SAW sense */
-	} drxj_cfg_pre_saw_t, *p_drxj_cfg_pre_saw_t;
+		bool use_pre_saw;	/* true algorithms must use pre SAW sense */};
 
 /* DRXJ_CFG_AFE_GAIN */
 
 /**
-* /struct drxj_cfg_afe_gain_t
-* Interface to configure gain of AFE (LNA + PGA).
+* /struct struct drxj_cfg_afe_gain * Interface to configure gain of AFE (LNA + PGA).
 */
-	typedef struct {
+	struct drxj_cfg_afe_gain {
 		enum drx_standard standard;	/* standard to which these settings apply */
-		u16 gain;	/* gain in 0.1 dB steps, DRXJ range 140 .. 335 */
-	} drxj_cfg_afe_gain_t, *p_drxj_cfg_afe_gain_t;
+		u16 gain;	/* gain in 0.1 dB steps, DRXJ range 140 .. 335 */};
 
 /**
-* /struct DRXJrs_errors_t
+* /struct drxjrs_errors
 * Available failure information in DRXJ_FEC_RS.
 *
 * Container for errors that are received in the most recently finished measurment period
 *
 */
-	typedef struct {
+	struct drxjrs_errors {
 		u16 nr_bit_errors;
 				/**< no of pre RS bit errors          */
 		u16 nr_symbol_errors;
@@ -236,41 +225,35 @@ TYPEDEFS
 				/**< no of post RS failures to decode */
 		u16 nr_snc_par_fail_count;
 				/**< no of post RS bit erros          */
-	} DRXJrs_errors_t, *p_drxjrs_errors_t;
+	};
 
 /**
-* /struct drxj_cfg_vsb_misc_t
-* symbol error rate
+* /struct struct drxj_cfg_vsb_misc * symbol error rate
 */
-	typedef struct {
+	struct drxj_cfg_vsb_misc {
 		u32 symb_error;
-			      /**< symbol error rate sps */
-	} drxj_cfg_vsb_misc_t, *p_drxj_cfg_vsb_misc_t;
+			      /**< symbol error rate sps */};
 
 /**
-* /enum drxj_mpeg_output_clock_rate_t
-* Mpeg output clock rate.
+* /enum enum drxj_mpeg_output_clock_rate * Mpeg output clock rate.
 *
 */
-	typedef enum {
+	enum drxj_mpeg_start_width {
 		DRXJ_MPEG_START_WIDTH_1CLKCYC,
-		DRXJ_MPEG_START_WIDTH_8CLKCYC
-	} drxj_mpeg_start_width_t, *pdrxj_mpeg_start_width_t;
+		DRXJ_MPEG_START_WIDTH_8CLKCYC};
 
 /**
-* /enum drxj_mpeg_output_clock_rate_t
-* Mpeg output clock rate.
+* /enum enum drxj_mpeg_output_clock_rate * Mpeg output clock rate.
 *
 */
-	typedef enum {
+	enum drxj_mpeg_output_clock_rate {
 		DRXJ_MPEGOUTPUT_CLOCK_RATE_AUTO,
 		DRXJ_MPEGOUTPUT_CLOCK_RATE_75973K,
 		DRXJ_MPEGOUTPUT_CLOCK_RATE_50625K,
 		DRXJ_MPEGOUTPUT_CLOCK_RATE_37968K,
 		DRXJ_MPEGOUTPUT_CLOCK_RATE_30375K,
 		DRXJ_MPEGOUTPUT_CLOCK_RATE_25313K,
-		DRXJ_MPEGOUTPUT_CLOCK_RATE_21696K
-	} drxj_mpeg_output_clock_rate_t, *pdrxj_mpeg_output_clock_rate_t;
+		DRXJ_MPEGOUTPUT_CLOCK_RATE_21696K};
 
 /**
 * /struct DRXJCfgMisc_t
@@ -278,56 +261,47 @@ TYPEDEFS
 * reverse MPEG output bit order
 * set MPEG output clock rate
 */
-	typedef struct {
+	struct drxj_cfg_mpeg_output_misc {
 		bool disable_tei_handling;	      /**< if true pass (not change) TEI bit */
 		bool bit_reverse_mpeg_outout;	      /**< if true, parallel: msb on MD0; serial: lsb out first */
-		drxj_mpeg_output_clock_rate_t mpeg_output_clock_rate;
+		enum drxj_mpeg_output_clock_rate mpeg_output_clock_rate;
 						      /**< set MPEG output clock rate that overwirtes the derived one from symbol rate */
-		drxj_mpeg_start_width_t mpeg_start_width;  /**< set MPEG output start width */
-	} drxj_cfg_mpeg_output_misc_t, *p_drxj_cfg_mpeg_output_misc_t;
+		enum drxj_mpeg_start_width mpeg_start_width;  /**< set MPEG output start width */};
 
 /**
-* /enum drxj_xtal_freq_t
-* Supported external crystal reference frequency.
+* /enum enum drxj_xtal_freq * Supported external crystal reference frequency.
 */
-	typedef enum {
+	enum drxj_xtal_freq {
 		DRXJ_XTAL_FREQ_RSVD,
 		DRXJ_XTAL_FREQ_27MHZ,
 		DRXJ_XTAL_FREQ_20P25MHZ,
-		DRXJ_XTAL_FREQ_4MHZ
-	} drxj_xtal_freq_t, *pdrxj_xtal_freq_t;
+		DRXJ_XTAL_FREQ_4MHZ};
 
 /**
-* /enum drxj_xtal_freq_t
-* Supported external crystal reference frequency.
+* /enum enum drxj_xtal_freq * Supported external crystal reference frequency.
 */
-	typedef enum {
+	enum drxji2c_speed {
 		DRXJ_I2C_SPEED_400KBPS,
-		DRXJ_I2C_SPEED_100KBPS
-	} drxji2c_speed_t, *pdrxji2c_speed_t;
+		DRXJ_I2C_SPEED_100KBPS};
 
 /**
-* /struct drxj_cfg_hw_cfg_t
-* Get hw configuration, such as crystal reference frequency, I2C speed, etc...
+* /struct struct drxj_cfg_hw_cfg * Get hw configuration, such as crystal reference frequency, I2C speed, etc...
 */
-	typedef struct {
-		drxj_xtal_freq_t xtal_freq;
+	struct drxj_cfg_hw_cfg {
+		enum drxj_xtal_freq xtal_freq;
 				   /**< crystal reference frequency */
-		drxji2c_speed_t i2c_speed;
-				   /**< 100 or 400 kbps */
-	} drxj_cfg_hw_cfg_t, *p_drxj_cfg_hw_cfg_t;
+		enum drxji2c_speed i2c_speed;
+				   /**< 100 or 400 kbps */};
 
 /*
  *  DRXJ_CFG_ATV_MISC
  */
-	typedef struct {
+	struct drxj_cfg_atv_misc {
 		s16 peak_filter;	/* -8 .. 15 */
-		u16 noise_filter;	/* 0 .. 15 */
-	} drxj_cfg_atv_misc_t, *p_drxj_cfg_atv_misc_t;
+		u16 noise_filter;	/* 0 .. 15 */};
 
 /*
- *  drxj_cfg_oob_misc_t
- */
+ *  struct drxj_cfg_oob_misc */
 #define   DRXJ_OOB_STATE_RESET                                        0x0
 #define   DRXJ_OOB_STATE_AGN_HUNT                                     0x1
 #define   DRXJ_OOB_STATE_DGN_HUNT                                     0x2
@@ -339,42 +313,40 @@ TYPEDEFS
 #define   DRXJ_OOB_STATE_EQT_HUNT                                     0x30
 #define   DRXJ_OOB_STATE_SYNC                                         0x40
 
-	typedef struct {
-		drxj_agc_status_t agc;
-		bool eq_lock;
-		bool sym_timing_lock;
-		bool phase_lock;
-		bool freq_lock;
-		bool dig_gain_lock;
-		bool ana_gain_lock;
-		u8 state;
-	} drxj_cfg_oob_misc_t, *p_drxj_cfg_oob_misc_t;
+struct drxj_cfg_oob_misc {
+	struct drxj_agc_status agc;
+	bool eq_lock;
+	bool sym_timing_lock;
+	bool phase_lock;
+	bool freq_lock;
+	bool dig_gain_lock;
+	bool ana_gain_lock;
+	u8 state;
+ };
 
 /*
  *  Index of in array of coef
  */
-	typedef enum {
+	enum drxj_cfg_oob_lo_power {
 		DRXJ_OOB_LO_POW_MINUS0DB = 0,
 		DRXJ_OOB_LO_POW_MINUS5DB,
 		DRXJ_OOB_LO_POW_MINUS10DB,
 		DRXJ_OOB_LO_POW_MINUS15DB,
-		DRXJ_OOB_LO_POW_MAX
-	} drxj_cfg_oob_lo_power_t, *p_drxj_cfg_oob_lo_power_t;
+		DRXJ_OOB_LO_POW_MAX};
 
 /*
  *  DRXJ_CFG_ATV_EQU_COEF
  */
-	typedef struct {
+	struct drxj_cfg_atv_equ_coef {
 		s16 coef0;	/* -256 .. 255 */
 		s16 coef1;	/* -256 .. 255 */
 		s16 coef2;	/* -256 .. 255 */
-		s16 coef3;	/* -256 .. 255 */
-	} drxj_cfg_atv_equ_coef_t, *p_drxj_cfg_atv_equ_coef_t;
+		s16 coef3;	/* -256 .. 255 */};
 
 /*
  *  Index of in array of coef
  */
-	typedef enum {
+	enum drxj_coef_array_index {
 		DRXJ_COEF_IDX_MN = 0,
 		DRXJ_COEF_IDX_FM,
 		DRXJ_COEF_IDX_L,
@@ -382,8 +354,7 @@ TYPEDEFS
 		DRXJ_COEF_IDX_BG,
 		DRXJ_COEF_IDX_DK,
 		DRXJ_COEF_IDX_I,
-		DRXJ_COEF_IDX_MAX
-	} drxj_coef_array_index_t, *pdrxj_coef_array_index_t;
+		DRXJ_COEF_IDX_MAX};
 
 /*
  *  DRXJ_CFG_ATV_OUTPUT
@@ -394,37 +365,34 @@ TYPEDEFS
 * Attenuation setting for SIF AGC.
 *
 */
-	typedef enum {
+	enum drxjsif_attenuation {
 		DRXJ_SIF_ATTENUATION_0DB,
 		DRXJ_SIF_ATTENUATION_3DB,
 		DRXJ_SIF_ATTENUATION_6DB,
-		DRXJ_SIF_ATTENUATION_9DB
-	} drxjsif_attenuation_t, *pdrxjsif_attenuation_t;
+		DRXJ_SIF_ATTENUATION_9DB};
 
 /**
-* /struct drxj_cfg_atv_output_t
-* SIF attenuation setting.
+* /struct struct drxj_cfg_atv_output * SIF attenuation setting.
 *
 */
-	typedef struct {
-		bool enable_cvbs_output;	/* true= enabled */
-		bool enable_sif_output;	/* true= enabled */
-		drxjsif_attenuation_t sif_attenuation;
-	} drxj_cfg_atv_output_t, *p_drxj_cfg_atv_output_t;
+struct drxj_cfg_atv_output {
+	bool enable_cvbs_output;	/* true= enabled */
+	bool enable_sif_output;	/* true= enabled */
+	enum drxjsif_attenuation sif_attenuation;
+};
 
 /*
    DRXJ_CFG_ATV_AGC_STATUS (get only)
 */
 /* TODO : AFE interface not yet finished, subject to change */
-	typedef struct {
+	struct drxj_cfg_atv_agc_status {
 		u16 rf_agc_gain;	/* 0 .. 877 uA */
 		u16 if_agc_gain;	/* 0 .. 877  uA */
 		s16 video_agc_gain;	/* -75 .. 1972 in 0.1 dB steps */
 		s16 audio_agc_gain;	/* -4 .. 1020 in 0.1 dB steps */
 		u16 rf_agc_loop_gain;	/* 0 .. 7 */
 		u16 if_agc_loop_gain;	/* 0 .. 7 */
-		u16 video_agc_loop_gain;	/* 0 .. 7 */
-	} drxj_cfg_atv_agc_status_t, *p_drxj_cfg_atv_agc_status_t;
+		u16 video_agc_loop_gain;	/* 0 .. 7 */};
 
 /*============================================================================*/
 /*============================================================================*/
@@ -439,13 +407,12 @@ TYPEDEFS
 
 /*========================================*/
 /**
-* /struct drxj_data_t
-* DRXJ specific attributes.
+* /struct struct drxj_data * DRXJ specific attributes.
 *
 * Global data container for DRXJ specific data.
 *
 */
-	typedef struct {
+	struct drxj_data {
 		/* device capabilties (determined during drx_open()) */
 		bool has_lna;		  /**< true if LNA (aka PGA) present */
 		bool has_oob;		  /**< true if OOB supported */
@@ -511,22 +478,22 @@ TYPEDEFS
 		u16 atv_top_noise_th;	  /**< shadow of ATV_TOP_NOISE_TH__A */
 		bool enable_cvbs_output;  /**< flag CVBS ouput enable */
 		bool enable_sif_output;	  /**< flag SIF ouput enable */
-		 drxjsif_attenuation_t sif_attenuation;
+		 enum drxjsif_attenuation sif_attenuation;
 					  /**< current SIF att setting */
 		/* Agc configuration for QAM and VSB */
-		drxj_cfg_agc_t qam_rf_agc_cfg; /**< qam RF AGC config */
-		drxj_cfg_agc_t qam_if_agc_cfg; /**< qam IF AGC config */
-		drxj_cfg_agc_t vsb_rf_agc_cfg; /**< vsb RF AGC config */
-		drxj_cfg_agc_t vsb_if_agc_cfg; /**< vsb IF AGC config */
+		struct drxj_cfg_agc qam_rf_agc_cfg; /**< qam RF AGC config */
+		struct drxj_cfg_agc qam_if_agc_cfg; /**< qam IF AGC config */
+		struct drxj_cfg_agc vsb_rf_agc_cfg; /**< vsb RF AGC config */
+		struct drxj_cfg_agc vsb_if_agc_cfg; /**< vsb IF AGC config */
 
 		/* PGA gain configuration for QAM and VSB */
 		u16 qam_pga_cfg;	  /**< qam PGA config */
 		u16 vsb_pga_cfg;	  /**< vsb PGA config */
 
 		/* Pre SAW configuration for QAM and VSB */
-		drxj_cfg_pre_saw_t qam_pre_saw_cfg;
+		struct drxj_cfg_pre_saw qam_pre_saw_cfg;
 					  /**< qam pre SAW config */
-		drxj_cfg_pre_saw_t vsb_pre_saw_cfg;
+		struct drxj_cfg_pre_saw vsb_pre_saw_cfg;
 					  /**< qam pre SAW config */
 
 		/* Version information */
@@ -546,16 +513,16 @@ TYPEDEFS
 		u32 mpeg_ts_static_bitrate;  /**< bitrate static MPEG output */
 		bool disable_te_ihandling;  /**< MPEG TS TEI handling */
 		bool bit_reverse_mpeg_outout;/**< MPEG output bit order */
-		 drxj_mpeg_output_clock_rate_t mpeg_output_clock_rate;
+		 enum drxj_mpeg_output_clock_rate mpeg_output_clock_rate;
 					    /**< MPEG output clock rate */
-		 drxj_mpeg_start_width_t mpeg_start_width;
+		 enum drxj_mpeg_start_width mpeg_start_width;
 					    /**< MPEG Start width */
 
 		/* Pre SAW & Agc configuration for ATV */
-		drxj_cfg_pre_saw_t atv_pre_saw_cfg;
+		struct drxj_cfg_pre_saw atv_pre_saw_cfg;
 					  /**< atv pre SAW config */
-		drxj_cfg_agc_t atv_rf_agc_cfg; /**< atv RF AGC config */
-		drxj_cfg_agc_t atv_if_agc_cfg; /**< atv IF AGC config */
+		struct drxj_cfg_agc atv_rf_agc_cfg; /**< atv RF AGC config */
+		struct drxj_cfg_agc atv_if_agc_cfg; /**< atv IF AGC config */
 		u16 atv_pga_cfg;	  /**< atv pga config    */
 
 		u32 curr_symbol_rate;
@@ -569,12 +536,10 @@ TYPEDEFS
 
 		/* OOB pre-saw value */
 		u16 oob_pre_saw;
-		drxj_cfg_oob_lo_power_t oob_lo_pow;
+		enum drxj_cfg_oob_lo_power oob_lo_pow;
 
 		struct drx_aud_data aud_data;
-				    /**< audio storage                  */
-
-	} drxj_data_t, *pdrxj_data_t;
+				    /**< audio storage                  */};
 
 /*-------------------------------------------------------------------------
 Access MACROS
@@ -591,7 +556,7 @@ Access MACROS
 */
 
 #define DRXJ_ATTR_BTSC_DETECT(d)                       \
-			(((pdrxj_data_t)(d)->my_ext_attr)->aud_data.btsc_detect)
+			(((struct drxj_data *)(d)->my_ext_attr)->aud_data.btsc_detect)
 
 /**
 * \brief Actual access macros
@@ -733,7 +698,7 @@ Exported GLOBAL VARIABLES
 -------------------------------------------------------------------------*/
 	extern struct drx_access_func drx_dap_drxj_funct_g;
 	extern struct drx_demod_func drxj_functions_g;
-	extern drxj_data_t drxj_data_g;
+	extern struct drxj_data drxj_data_g;
 	extern struct i2c_device_addr drxj_default_addr_g;
 	extern struct drx_common_attr drxj_default_comm_attr_g;
 	extern struct drx_demod_instance drxj_default_demod_g;

commit 1bfc9e15a10ae88eb94cba17dba4d31941f5d939
Author: Mauro Carvalho Chehab <m.chehab@samsung.com>
Date:   Thu Jan 16 12:51:36 2014 -0300

    [media] drx-j: get rid of typedefs in drx_driver.h
    
    Most of the changes were done with scripts like:
            for i in drivers/media/dvb-frontends/drx39xyj/*.[ch]; do perl -ne '$var = "drx_sig_quality"; s,\b($var)_t\s+,struct \1 ,g; s,\bp_*($var)_t\s+,struct \1 *,g; s,\b($var)_t\b,struct \1,g; s,\bp_*($var)_t\b,struct \1 *,g; print $_' <$i >a && mv a $i; done
    
    Acked-by: Devin Heitmueller <dheitmueller@kernellabs.com>
    Signed-off-by: Mauro Carvalho Chehab <m.chehab@samsung.com>

diff --git a/drivers/media/dvb-frontends/drx39xyj/drxj.h b/drivers/media/dvb-frontends/drx39xyj/drxj.h
index d882f2279619..91272f100128 100644
--- a/drivers/media/dvb-frontends/drx39xyj/drxj.h
+++ b/drivers/media/dvb-frontends/drx39xyj/drxj.h
@@ -489,10 +489,10 @@ TYPEDEFS
 		u16 hi_cfg_transmit;	  /**< HI Configure() parameter 6                       */
 
 		/* UIO configuartion */
-		drxuio_mode_t uio_sma_rx_mode;/**< current mode of SmaRx pin                        */
-		drxuio_mode_t uio_sma_tx_mode;/**< current mode of SmaTx pin                        */
-		drxuio_mode_t uio_gpio_mode; /**< current mode of ASEL pin                         */
-		drxuio_mode_t uio_irqn_mode; /**< current mode of IRQN pin                         */
+		enum drxuio_mode uio_sma_rx_mode;/**< current mode of SmaRx pin                        */
+		enum drxuio_mode uio_sma_tx_mode;/**< current mode of SmaTx pin                        */
+		enum drxuio_mode uio_gpio_mode; /**< current mode of ASEL pin                         */
+		enum drxuio_mode uio_irqn_mode; /**< current mode of IRQN pin                         */
 
 		/* IQM fs frequecy shift and inversion */
 		u32 iqm_fs_rate_ofs;	   /**< frequency shifter setting after setchannel      */
@@ -531,8 +531,8 @@ TYPEDEFS
 
 		/* Version information */
 		char v_text[2][12];	  /**< allocated text versions */
-		drx_version_t v_version[2]; /**< allocated versions structs */
-		drx_version_list_t v_list_elements[2];
+		struct drx_version v_version[2]; /**< allocated versions structs */
+		struct drx_version_list v_list_elements[2];
 					  /**< allocated version list */
 
 		/* smart antenna configuration */
@@ -571,7 +571,7 @@ TYPEDEFS
 		u16 oob_pre_saw;
 		drxj_cfg_oob_lo_power_t oob_lo_pow;
 
-		drx_aud_data_t aud_data;
+		struct drx_aud_data aud_data;
 				    /**< audio storage                  */
 
 	} drxj_data_t, *pdrxj_data_t;
@@ -723,20 +723,20 @@ STRUCTS
 Exported FUNCTIONS
 -------------------------------------------------------------------------*/
 
-	int drxj_open(pdrx_demod_instance_t demod);
-	int drxj_close(pdrx_demod_instance_t demod);
-	int drxj_ctrl(pdrx_demod_instance_t demod,
+	int drxj_open(struct drx_demod_instance *demod);
+	int drxj_close(struct drx_demod_instance *demod);
+	int drxj_ctrl(struct drx_demod_instance *demod,
 				     u32 ctrl, void *ctrl_data);
 
 /*-------------------------------------------------------------------------
 Exported GLOBAL VARIABLES
 -------------------------------------------------------------------------*/
-	extern drx_access_func_t drx_dap_drxj_funct_g;
-	extern drx_demod_func_t drxj_functions_g;
+	extern struct drx_access_func drx_dap_drxj_funct_g;
+	extern struct drx_demod_func drxj_functions_g;
 	extern drxj_data_t drxj_data_g;
 	extern struct i2c_device_addr drxj_default_addr_g;
-	extern drx_common_attr_t drxj_default_comm_attr_g;
-	extern drx_demod_instance_t drxj_default_demod_g;
+	extern struct drx_common_attr drxj_default_comm_attr_g;
+	extern struct drx_demod_instance drxj_default_demod_g;
 
 /*-------------------------------------------------------------------------
 THE END

commit 22892268cd65d50b5d2faa2232fc39ebd98b7142
Author: Mauro Carvalho Chehab <m.chehab@samsung.com>
Date:   Thu Jan 16 11:28:52 2014 -0300

    [media] drx-j: do more CodingStyle fixes
    
    This time, use checkpatch --strict --fix.
    
    Acked-by: Devin Heitmueller <dheitmueller@kernellabs.com>
    Signed-off-by: Mauro Carvalho Chehab <m.chehab@samsung.com>

diff --git a/drivers/media/dvb-frontends/drx39xyj/drxj.h b/drivers/media/dvb-frontends/drx39xyj/drxj.h
index 54b5c14f57cf..d882f2279619 100644
--- a/drivers/media/dvb-frontends/drx39xyj/drxj.h
+++ b/drivers/media/dvb-frontends/drx39xyj/drxj.h
@@ -723,9 +723,9 @@ STRUCTS
 Exported FUNCTIONS
 -------------------------------------------------------------------------*/
 
-	extern int drxj_open(pdrx_demod_instance_t demod);
-	extern int drxj_close(pdrx_demod_instance_t demod);
-	extern int drxj_ctrl(pdrx_demod_instance_t demod,
+	int drxj_open(pdrx_demod_instance_t demod);
+	int drxj_close(pdrx_demod_instance_t demod);
+	int drxj_ctrl(pdrx_demod_instance_t demod,
 				     u32 ctrl, void *ctrl_data);
 
 /*-------------------------------------------------------------------------

commit 57afe2f0bb0cca758701679f141c9fa92a034415
Author: Mauro Carvalho Chehab <m.chehab@samsung.com>
Date:   Thu Jan 16 11:24:57 2014 -0300

    [media] drx-j: Don't use CamelCase
    
    There's no reason at all to use CamelCase here. Convert all of
    them to normal case.
    
    Acked-by: Devin Heitmueller <dheitmueller@kernellabs.com>
    Signed-off-by: Mauro Carvalho Chehab <m.chehab@samsung.com>

diff --git a/drivers/media/dvb-frontends/drx39xyj/drxj.h b/drivers/media/dvb-frontends/drx39xyj/drxj.h
index 15b2bb065468..54b5c14f57cf 100644
--- a/drivers/media/dvb-frontends/drx39xyj/drxj.h
+++ b/drivers/media/dvb-frontends/drx39xyj/drxj.h
@@ -77,15 +77,15 @@ TYPEDEFS
 	typedef struct {
 		u16 command;
 			/**< Command number */
-		u16 parameterLen;
+		u16 parameter_len;
 			/**< Data length in byte */
-		u16 resultLen;
+		u16 result_len;
 			/**< result length in byte */
 		u16 *parameter;
 			/**< General purpous param */
 		u16 *result;
 			/**< General purpous param */
-	} DRXJSCUCmd_t, *pDRXJSCUCmd_t;
+	} drxjscu_cmd_t, *p_drxjscu_cmd_t;
 
 /*============================================================================*/
 /*============================================================================*/
@@ -137,25 +137,25 @@ TYPEDEFS
 		DRXJ_CFG_OOB_LO_POW,
 
 		DRXJ_CFG_MAX	/* dummy, never to be used */
-	} DRXJCfgType_t, *pDRXJCfgType_t;
+	} drxj_cfg_type_t, *pdrxj_cfg_type_t;
 
 /**
-* /struct DRXJCfgSmartAntIO_t
+* /struct drxj_cfg_smart_ant_io_t
 * smart antenna i/o.
 */
-	typedef enum DRXJCfgSmartAntIO_t {
+	typedef enum drxj_cfg_smart_ant_io_t {
 		DRXJ_SMT_ANT_OUTPUT = 0,
 		DRXJ_SMT_ANT_INPUT
-	} DRXJCfgSmartAntIO_t, *pDRXJCfgSmartAntIO_t;
+	} drxj_cfg_smart_ant_io_t, *pdrxj_cfg_smart_ant_io_t;
 
 /**
-* /struct DRXJCfgSmartAnt_t
+* /struct drxj_cfg_smart_ant_t
 * Set smart antenna.
 */
 	typedef struct {
-		DRXJCfgSmartAntIO_t io;
-		u16 ctrlData;
-	} DRXJCfgSmartAnt_t, *pDRXJCfgSmartAnt_t;
+		drxj_cfg_smart_ant_io_t io;
+		u16 ctrl_data;
+	} drxj_cfg_smart_ant_t, *p_drxj_cfg_smart_ant_t;
 
 /**
 * /struct DRXJAGCSTATUS_t
@@ -164,101 +164,101 @@ TYPEDEFS
 	typedef struct {
 		u16 IFAGC;
 		u16 RFAGC;
-		u16 DigitalAGC;
-	} DRXJAgcStatus_t, *pDRXJAgcStatus_t;
+		u16 digital_agc;
+	} drxj_agc_status_t, *pdrxj_agc_status_t;
 
 /* DRXJ_CFG_AGC_RF, DRXJ_CFG_AGC_IF */
 
 /**
-* /struct DRXJAgcCtrlMode_t
+* /struct drxj_agc_ctrl_mode_t
 * Available AGCs modes in the DRXJ.
 */
 	typedef enum {
 		DRX_AGC_CTRL_AUTO = 0,
 		DRX_AGC_CTRL_USER,
 		DRX_AGC_CTRL_OFF
-	} DRXJAgcCtrlMode_t, *pDRXJAgcCtrlMode_t;
+	} drxj_agc_ctrl_mode_t, *pdrxj_agc_ctrl_mode_t;
 
 /**
-* /struct DRXJCfgAgc_t
+* /struct drxj_cfg_agc_t
 * Generic interface for all AGCs present on the DRXJ.
 */
 	typedef struct {
 		enum drx_standard standard;	/* standard for which these settings apply */
-		DRXJAgcCtrlMode_t ctrlMode;	/* off, user, auto          */
-		u16 outputLevel;	/* range dependent on AGC   */
-		u16 minOutputLevel;	/* range dependent on AGC   */
-		u16 maxOutputLevel;	/* range dependent on AGC   */
+		drxj_agc_ctrl_mode_t ctrl_mode;	/* off, user, auto          */
+		u16 output_level;	/* range dependent on AGC   */
+		u16 min_output_level;	/* range dependent on AGC   */
+		u16 max_output_level;	/* range dependent on AGC   */
 		u16 speed;	/* range dependent on AGC   */
 		u16 top;	/* rf-agc take over point   */
-		u16 cutOffCurrent;	/* rf-agc is accelerated if output current
+		u16 cut_off_current;	/* rf-agc is accelerated if output current
 					   is below cut-off current                */
-	} DRXJCfgAgc_t, *pDRXJCfgAgc_t;
+	} drxj_cfg_agc_t, *p_drxj_cfg_agc_t;
 
 /* DRXJ_CFG_PRE_SAW */
 
 /**
-* /struct DRXJCfgPreSaw_t
+* /struct drxj_cfg_pre_saw_t
 * Interface to configure pre SAW sense.
 */
 	typedef struct {
 		enum drx_standard standard;	/* standard to which these settings apply */
 		u16 reference;	/* pre SAW reference value, range 0 .. 31 */
-		bool usePreSaw;	/* true algorithms must use pre SAW sense */
-	} DRXJCfgPreSaw_t, *pDRXJCfgPreSaw_t;
+		bool use_pre_saw;	/* true algorithms must use pre SAW sense */
+	} drxj_cfg_pre_saw_t, *p_drxj_cfg_pre_saw_t;
 
 /* DRXJ_CFG_AFE_GAIN */
 
 /**
-* /struct DRXJCfgAfeGain_t
+* /struct drxj_cfg_afe_gain_t
 * Interface to configure gain of AFE (LNA + PGA).
 */
 	typedef struct {
 		enum drx_standard standard;	/* standard to which these settings apply */
 		u16 gain;	/* gain in 0.1 dB steps, DRXJ range 140 .. 335 */
-	} DRXJCfgAfeGain_t, *pDRXJCfgAfeGain_t;
+	} drxj_cfg_afe_gain_t, *p_drxj_cfg_afe_gain_t;
 
 /**
-* /struct DRXJRSErrors_t
+* /struct DRXJrs_errors_t
 * Available failure information in DRXJ_FEC_RS.
 *
 * Container for errors that are received in the most recently finished measurment period
 *
 */
 	typedef struct {
-		u16 nrBitErrors;
+		u16 nr_bit_errors;
 				/**< no of pre RS bit errors          */
-		u16 nrSymbolErrors;
+		u16 nr_symbol_errors;
 				/**< no of pre RS symbol errors       */
-		u16 nrPacketErrors;
+		u16 nr_packet_errors;
 				/**< no of pre RS packet errors       */
-		u16 nrFailures;
+		u16 nr_failures;
 				/**< no of post RS failures to decode */
-		u16 nrSncParFailCount;
+		u16 nr_snc_par_fail_count;
 				/**< no of post RS bit erros          */
-	} DRXJRSErrors_t, *pDRXJRSErrors_t;
+	} DRXJrs_errors_t, *p_drxjrs_errors_t;
 
 /**
-* /struct DRXJCfgVSBMisc_t
+* /struct drxj_cfg_vsb_misc_t
 * symbol error rate
 */
 	typedef struct {
-		u32 symbError;
+		u32 symb_error;
 			      /**< symbol error rate sps */
-	} DRXJCfgVSBMisc_t, *pDRXJCfgVSBMisc_t;
+	} drxj_cfg_vsb_misc_t, *p_drxj_cfg_vsb_misc_t;
 
 /**
-* /enum DRXJMpegOutputClockRate_t
+* /enum drxj_mpeg_output_clock_rate_t
 * Mpeg output clock rate.
 *
 */
 	typedef enum {
 		DRXJ_MPEG_START_WIDTH_1CLKCYC,
 		DRXJ_MPEG_START_WIDTH_8CLKCYC
-	} DRXJMpegStartWidth_t, *pDRXJMpegStartWidth_t;
+	} drxj_mpeg_start_width_t, *pdrxj_mpeg_start_width_t;
 
 /**
-* /enum DRXJMpegOutputClockRate_t
+* /enum drxj_mpeg_output_clock_rate_t
 * Mpeg output clock rate.
 *
 */
@@ -270,7 +270,7 @@ TYPEDEFS
 		DRXJ_MPEGOUTPUT_CLOCK_RATE_30375K,
 		DRXJ_MPEGOUTPUT_CLOCK_RATE_25313K,
 		DRXJ_MPEGOUTPUT_CLOCK_RATE_21696K
-	} DRXJMpegOutputClockRate_t, *pDRXJMpegOutputClockRate_t;
+	} drxj_mpeg_output_clock_rate_t, *pdrxj_mpeg_output_clock_rate_t;
 
 /**
 * /struct DRXJCfgMisc_t
@@ -279,15 +279,15 @@ TYPEDEFS
 * set MPEG output clock rate
 */
 	typedef struct {
-		bool disableTEIHandling;	      /**< if true pass (not change) TEI bit */
-		bool bitReverseMpegOutout;	      /**< if true, parallel: msb on MD0; serial: lsb out first */
-		DRXJMpegOutputClockRate_t mpegOutputClockRate;
+		bool disable_tei_handling;	      /**< if true pass (not change) TEI bit */
+		bool bit_reverse_mpeg_outout;	      /**< if true, parallel: msb on MD0; serial: lsb out first */
+		drxj_mpeg_output_clock_rate_t mpeg_output_clock_rate;
 						      /**< set MPEG output clock rate that overwirtes the derived one from symbol rate */
-		DRXJMpegStartWidth_t mpegStartWidth;  /**< set MPEG output start width */
-	} DRXJCfgMpegOutputMisc_t, *pDRXJCfgMpegOutputMisc_t;
+		drxj_mpeg_start_width_t mpeg_start_width;  /**< set MPEG output start width */
+	} drxj_cfg_mpeg_output_misc_t, *p_drxj_cfg_mpeg_output_misc_t;
 
 /**
-* /enum DRXJXtalFreq_t
+* /enum drxj_xtal_freq_t
 * Supported external crystal reference frequency.
 */
 	typedef enum {
@@ -295,38 +295,38 @@ TYPEDEFS
 		DRXJ_XTAL_FREQ_27MHZ,
 		DRXJ_XTAL_FREQ_20P25MHZ,
 		DRXJ_XTAL_FREQ_4MHZ
-	} DRXJXtalFreq_t, *pDRXJXtalFreq_t;
+	} drxj_xtal_freq_t, *pdrxj_xtal_freq_t;
 
 /**
-* /enum DRXJXtalFreq_t
+* /enum drxj_xtal_freq_t
 * Supported external crystal reference frequency.
 */
 	typedef enum {
 		DRXJ_I2C_SPEED_400KBPS,
 		DRXJ_I2C_SPEED_100KBPS
-	} DRXJI2CSpeed_t, *pDRXJI2CSpeed_t;
+	} drxji2c_speed_t, *pdrxji2c_speed_t;
 
 /**
-* /struct DRXJCfgHwCfg_t
+* /struct drxj_cfg_hw_cfg_t
 * Get hw configuration, such as crystal reference frequency, I2C speed, etc...
 */
 	typedef struct {
-		DRXJXtalFreq_t xtalFreq;
+		drxj_xtal_freq_t xtal_freq;
 				   /**< crystal reference frequency */
-		DRXJI2CSpeed_t i2cSpeed;
+		drxji2c_speed_t i2c_speed;
 				   /**< 100 or 400 kbps */
-	} DRXJCfgHwCfg_t, *pDRXJCfgHwCfg_t;
+	} drxj_cfg_hw_cfg_t, *p_drxj_cfg_hw_cfg_t;
 
 /*
  *  DRXJ_CFG_ATV_MISC
  */
 	typedef struct {
-		s16 peakFilter;	/* -8 .. 15 */
-		u16 noiseFilter;	/* 0 .. 15 */
-	} DRXJCfgAtvMisc_t, *pDRXJCfgAtvMisc_t;
+		s16 peak_filter;	/* -8 .. 15 */
+		u16 noise_filter;	/* 0 .. 15 */
+	} drxj_cfg_atv_misc_t, *p_drxj_cfg_atv_misc_t;
 
 /*
- *  DRXJCfgOOBMisc_t
+ *  drxj_cfg_oob_misc_t
  */
 #define   DRXJ_OOB_STATE_RESET                                        0x0
 #define   DRXJ_OOB_STATE_AGN_HUNT                                     0x1
@@ -340,15 +340,15 @@ TYPEDEFS
 #define   DRXJ_OOB_STATE_SYNC                                         0x40
 
 	typedef struct {
-		DRXJAgcStatus_t agc;
-		bool eqLock;
-		bool symTimingLock;
-		bool phaseLock;
-		bool freqLock;
-		bool digGainLock;
-		bool anaGainLock;
+		drxj_agc_status_t agc;
+		bool eq_lock;
+		bool sym_timing_lock;
+		bool phase_lock;
+		bool freq_lock;
+		bool dig_gain_lock;
+		bool ana_gain_lock;
 		u8 state;
-	} DRXJCfgOOBMisc_t, *pDRXJCfgOOBMisc_t;
+	} drxj_cfg_oob_misc_t, *p_drxj_cfg_oob_misc_t;
 
 /*
  *  Index of in array of coef
@@ -359,7 +359,7 @@ TYPEDEFS
 		DRXJ_OOB_LO_POW_MINUS10DB,
 		DRXJ_OOB_LO_POW_MINUS15DB,
 		DRXJ_OOB_LO_POW_MAX
-	} DRXJCfgOobLoPower_t, *pDRXJCfgOobLoPower_t;
+	} drxj_cfg_oob_lo_power_t, *p_drxj_cfg_oob_lo_power_t;
 
 /*
  *  DRXJ_CFG_ATV_EQU_COEF
@@ -369,7 +369,7 @@ TYPEDEFS
 		s16 coef1;	/* -256 .. 255 */
 		s16 coef2;	/* -256 .. 255 */
 		s16 coef3;	/* -256 .. 255 */
-	} DRXJCfgAtvEquCoef_t, *pDRXJCfgAtvEquCoef_t;
+	} drxj_cfg_atv_equ_coef_t, *p_drxj_cfg_atv_equ_coef_t;
 
 /*
  *  Index of in array of coef
@@ -383,7 +383,7 @@ TYPEDEFS
 		DRXJ_COEF_IDX_DK,
 		DRXJ_COEF_IDX_I,
 		DRXJ_COEF_IDX_MAX
-	} DRXJCoefArrayIndex_t, *pDRXJCoefArrayIndex_t;
+	} drxj_coef_array_index_t, *pdrxj_coef_array_index_t;
 
 /*
  *  DRXJ_CFG_ATV_OUTPUT
@@ -399,32 +399,32 @@ TYPEDEFS
 		DRXJ_SIF_ATTENUATION_3DB,
 		DRXJ_SIF_ATTENUATION_6DB,
 		DRXJ_SIF_ATTENUATION_9DB
-	} DRXJSIFAttenuation_t, *pDRXJSIFAttenuation_t;
+	} drxjsif_attenuation_t, *pdrxjsif_attenuation_t;
 
 /**
-* /struct DRXJCfgAtvOutput_t
+* /struct drxj_cfg_atv_output_t
 * SIF attenuation setting.
 *
 */
 	typedef struct {
-		bool enableCVBSOutput;	/* true= enabled */
-		bool enableSIFOutput;	/* true= enabled */
-		DRXJSIFAttenuation_t sifAttenuation;
-	} DRXJCfgAtvOutput_t, *pDRXJCfgAtvOutput_t;
+		bool enable_cvbs_output;	/* true= enabled */
+		bool enable_sif_output;	/* true= enabled */
+		drxjsif_attenuation_t sif_attenuation;
+	} drxj_cfg_atv_output_t, *p_drxj_cfg_atv_output_t;
 
 /*
    DRXJ_CFG_ATV_AGC_STATUS (get only)
 */
 /* TODO : AFE interface not yet finished, subject to change */
 	typedef struct {
-		u16 rfAgcGain;	/* 0 .. 877 uA */
-		u16 ifAgcGain;	/* 0 .. 877  uA */
-		s16 videoAgcGain;	/* -75 .. 1972 in 0.1 dB steps */
-		s16 audioAgcGain;	/* -4 .. 1020 in 0.1 dB steps */
-		u16 rfAgcLoopGain;	/* 0 .. 7 */
-		u16 ifAgcLoopGain;	/* 0 .. 7 */
-		u16 videoAgcLoopGain;	/* 0 .. 7 */
-	} DRXJCfgAtvAgcStatus_t, *pDRXJCfgAtvAgcStatus_t;
+		u16 rf_agc_gain;	/* 0 .. 877 uA */
+		u16 if_agc_gain;	/* 0 .. 877  uA */
+		s16 video_agc_gain;	/* -75 .. 1972 in 0.1 dB steps */
+		s16 audio_agc_gain;	/* -4 .. 1020 in 0.1 dB steps */
+		u16 rf_agc_loop_gain;	/* 0 .. 7 */
+		u16 if_agc_loop_gain;	/* 0 .. 7 */
+		u16 video_agc_loop_gain;	/* 0 .. 7 */
+	} drxj_cfg_atv_agc_status_t, *p_drxj_cfg_atv_agc_status_t;
 
 /*============================================================================*/
 /*============================================================================*/
@@ -439,142 +439,142 @@ TYPEDEFS
 
 /*========================================*/
 /**
-* /struct DRXJData_t
+* /struct drxj_data_t
 * DRXJ specific attributes.
 *
 * Global data container for DRXJ specific data.
 *
 */
 	typedef struct {
-		/* device capabilties (determined during DRX_Open()) */
-		bool hasLNA;		  /**< true if LNA (aka PGA) present */
-		bool hasOOB;		  /**< true if OOB supported */
-		bool hasNTSC;		  /**< true if NTSC supported */
-		bool hasBTSC;		  /**< true if BTSC supported */
-		bool hasSMATX;	  /**< true if mat_tx is available */
-		bool hasSMARX;	  /**< true if mat_rx is available */
-		bool hasGPIO;		  /**< true if GPIO is available */
-		bool hasIRQN;		  /**< true if IRQN is available */
+		/* device capabilties (determined during drx_open()) */
+		bool has_lna;		  /**< true if LNA (aka PGA) present */
+		bool has_oob;		  /**< true if OOB supported */
+		bool has_ntsc;		  /**< true if NTSC supported */
+		bool has_btsc;		  /**< true if BTSC supported */
+		bool has_smatx;	  /**< true if mat_tx is available */
+		bool has_smarx;	  /**< true if mat_rx is available */
+		bool has_gpio;		  /**< true if GPIO is available */
+		bool has_irqn;		  /**< true if IRQN is available */
 		/* A1/A2/A... */
 		u8 mfx;		  /**< metal fix */
 
 		/* tuner settings */
-		bool mirrorFreqSpectOOB;/**< tuner inversion (true = tuner mirrors the signal */
+		bool mirror_freq_spectOOB;/**< tuner inversion (true = tuner mirrors the signal */
 
 		/* standard/channel settings */
 		enum drx_standard standard;	  /**< current standard information                     */
 		enum drx_modulation constellation;
 					  /**< current constellation                            */
 		s32 frequency; /**< center signal frequency in KHz                   */
-		enum drx_bandwidth currBandwidth;
+		enum drx_bandwidth curr_bandwidth;
 					  /**< current channel bandwidth                        */
 		enum drx_mirror mirror;	  /**< current channel mirror                           */
 
 		/* signal quality information */
-		u32 fecBitsDesired;	  /**< BER accounting period                            */
-		u16 fecVdPlen;	  /**< no of trellis symbols: VD SER measurement period */
-		u16 qamVdPrescale;	  /**< Viterbi Measurement Prescale                     */
-		u16 qamVdPeriod;	  /**< Viterbi Measurement period                       */
-		u16 fecRsPlen;	  /**< defines RS BER measurement period                */
-		u16 fecRsPrescale;	  /**< ReedSolomon Measurement Prescale                 */
-		u16 fecRsPeriod;	  /**< ReedSolomon Measurement period                   */
-		bool resetPktErrAcc;	  /**< Set a flag to reset accumulated packet error     */
-		u16 pktErrAccStart;	  /**< Set a flag to reset accumulated packet error     */
+		u32 fec_bits_desired;	  /**< BER accounting period                            */
+		u16 fec_vd_plen;	  /**< no of trellis symbols: VD SER measurement period */
+		u16 qam_vd_prescale;	  /**< Viterbi Measurement Prescale                     */
+		u16 qam_vd_period;	  /**< Viterbi Measurement period                       */
+		u16 fec_rs_plen;	  /**< defines RS BER measurement period                */
+		u16 fec_rs_prescale;	  /**< ReedSolomon Measurement Prescale                 */
+		u16 fec_rs_period;	  /**< ReedSolomon Measurement period                   */
+		bool reset_pkt_err_acc;	  /**< Set a flag to reset accumulated packet error     */
+		u16 pkt_errAccStart;	  /**< Set a flag to reset accumulated packet error     */
 
 		/* HI configuration */
-		u16 HICfgTimingDiv;	  /**< HI Configure() parameter 2                       */
-		u16 HICfgBridgeDelay;	  /**< HI Configure() parameter 3                       */
-		u16 HICfgWakeUpKey;	  /**< HI Configure() parameter 4                       */
-		u16 HICfgCtrl;	  /**< HI Configure() parameter 5                       */
-		u16 HICfgTransmit;	  /**< HI Configure() parameter 6                       */
+		u16 hi_cfg_timing_div;	  /**< HI Configure() parameter 2                       */
+		u16 hi_cfg_bridge_delay;	  /**< HI Configure() parameter 3                       */
+		u16 hi_cfg_wake_up_key;	  /**< HI Configure() parameter 4                       */
+		u16 hi_cfg_ctrl;	  /**< HI Configure() parameter 5                       */
+		u16 hi_cfg_transmit;	  /**< HI Configure() parameter 6                       */
 
 		/* UIO configuartion */
-		DRXUIOMode_t uioSmaRxMode;/**< current mode of SmaRx pin                        */
-		DRXUIOMode_t uioSmaTxMode;/**< current mode of SmaTx pin                        */
-		DRXUIOMode_t uioGPIOMode; /**< current mode of ASEL pin                         */
-		DRXUIOMode_t uioIRQNMode; /**< current mode of IRQN pin                         */
+		drxuio_mode_t uio_sma_rx_mode;/**< current mode of SmaRx pin                        */
+		drxuio_mode_t uio_sma_tx_mode;/**< current mode of SmaTx pin                        */
+		drxuio_mode_t uio_gpio_mode; /**< current mode of ASEL pin                         */
+		drxuio_mode_t uio_irqn_mode; /**< current mode of IRQN pin                         */
 
 		/* IQM fs frequecy shift and inversion */
-		u32 iqmFsRateOfs;	   /**< frequency shifter setting after setchannel      */
-		bool posImage;	   /**< Ture: positive image                            */
+		u32 iqm_fs_rate_ofs;	   /**< frequency shifter setting after setchannel      */
+		bool pos_image;	   /**< Ture: positive image                            */
 		/* IQM RC frequecy shift */
-		u32 iqmRcRateOfs;	   /**< frequency shifter setting after setchannel      */
+		u32 iqm_rc_rate_ofs;	   /**< frequency shifter setting after setchannel      */
 
 		/* ATV configuartion */
-		u32 atvCfgChangedFlags; /**< flag: flags cfg changes */
-		s16 atvTopEqu0[DRXJ_COEF_IDX_MAX];	     /**< shadow of ATV_TOP_EQU0__A */
-		s16 atvTopEqu1[DRXJ_COEF_IDX_MAX];	     /**< shadow of ATV_TOP_EQU1__A */
-		s16 atvTopEqu2[DRXJ_COEF_IDX_MAX];	     /**< shadow of ATV_TOP_EQU2__A */
-		s16 atvTopEqu3[DRXJ_COEF_IDX_MAX];	     /**< shadow of ATV_TOP_EQU3__A */
-		bool phaseCorrectionBypass;/**< flag: true=bypass */
-		s16 atvTopVidPeak;	  /**< shadow of ATV_TOP_VID_PEAK__A */
-		u16 atvTopNoiseTh;	  /**< shadow of ATV_TOP_NOISE_TH__A */
-		bool enableCVBSOutput;  /**< flag CVBS ouput enable */
-		bool enableSIFOutput;	  /**< flag SIF ouput enable */
-		 DRXJSIFAttenuation_t sifAttenuation;
+		u32 atv_cfg_changed_flags; /**< flag: flags cfg changes */
+		s16 atv_top_equ0[DRXJ_COEF_IDX_MAX];	     /**< shadow of ATV_TOP_EQU0__A */
+		s16 atv_top_equ1[DRXJ_COEF_IDX_MAX];	     /**< shadow of ATV_TOP_EQU1__A */
+		s16 atv_top_equ2[DRXJ_COEF_IDX_MAX];	     /**< shadow of ATV_TOP_EQU2__A */
+		s16 atv_top_equ3[DRXJ_COEF_IDX_MAX];	     /**< shadow of ATV_TOP_EQU3__A */
+		bool phase_correction_bypass;/**< flag: true=bypass */
+		s16 atv_top_vid_peak;	  /**< shadow of ATV_TOP_VID_PEAK__A */
+		u16 atv_top_noise_th;	  /**< shadow of ATV_TOP_NOISE_TH__A */
+		bool enable_cvbs_output;  /**< flag CVBS ouput enable */
+		bool enable_sif_output;	  /**< flag SIF ouput enable */
+		 drxjsif_attenuation_t sif_attenuation;
 					  /**< current SIF att setting */
 		/* Agc configuration for QAM and VSB */
-		DRXJCfgAgc_t qamRfAgcCfg; /**< qam RF AGC config */
-		DRXJCfgAgc_t qamIfAgcCfg; /**< qam IF AGC config */
-		DRXJCfgAgc_t vsbRfAgcCfg; /**< vsb RF AGC config */
-		DRXJCfgAgc_t vsbIfAgcCfg; /**< vsb IF AGC config */
+		drxj_cfg_agc_t qam_rf_agc_cfg; /**< qam RF AGC config */
+		drxj_cfg_agc_t qam_if_agc_cfg; /**< qam IF AGC config */
+		drxj_cfg_agc_t vsb_rf_agc_cfg; /**< vsb RF AGC config */
+		drxj_cfg_agc_t vsb_if_agc_cfg; /**< vsb IF AGC config */
 
 		/* PGA gain configuration for QAM and VSB */
-		u16 qamPgaCfg;	  /**< qam PGA config */
-		u16 vsbPgaCfg;	  /**< vsb PGA config */
+		u16 qam_pga_cfg;	  /**< qam PGA config */
+		u16 vsb_pga_cfg;	  /**< vsb PGA config */
 
 		/* Pre SAW configuration for QAM and VSB */
-		DRXJCfgPreSaw_t qamPreSawCfg;
+		drxj_cfg_pre_saw_t qam_pre_saw_cfg;
 					  /**< qam pre SAW config */
-		DRXJCfgPreSaw_t vsbPreSawCfg;
+		drxj_cfg_pre_saw_t vsb_pre_saw_cfg;
 					  /**< qam pre SAW config */
 
 		/* Version information */
-		char vText[2][12];	  /**< allocated text versions */
-		DRXVersion_t vVersion[2]; /**< allocated versions structs */
-		DRXVersionList_t vListElements[2];
+		char v_text[2][12];	  /**< allocated text versions */
+		drx_version_t v_version[2]; /**< allocated versions structs */
+		drx_version_list_t v_list_elements[2];
 					  /**< allocated version list */
 
 		/* smart antenna configuration */
-		bool smartAntInverted;
+		bool smart_ant_inverted;
 
 		/* Tracking filter setting for OOB */
-		u16 oobTrkFilterCfg[8];
-		bool oobPowerOn;
+		u16 oob_trk_filter_cfg[8];
+		bool oob_power_on;
 
 		/* MPEG static bitrate setting */
-		u32 mpegTsStaticBitrate;  /**< bitrate static MPEG output */
-		bool disableTEIhandling;  /**< MPEG TS TEI handling */
-		bool bitReverseMpegOutout;/**< MPEG output bit order */
-		 DRXJMpegOutputClockRate_t mpegOutputClockRate;
+		u32 mpeg_ts_static_bitrate;  /**< bitrate static MPEG output */
+		bool disable_te_ihandling;  /**< MPEG TS TEI handling */
+		bool bit_reverse_mpeg_outout;/**< MPEG output bit order */
+		 drxj_mpeg_output_clock_rate_t mpeg_output_clock_rate;
 					    /**< MPEG output clock rate */
-		 DRXJMpegStartWidth_t mpegStartWidth;
+		 drxj_mpeg_start_width_t mpeg_start_width;
 					    /**< MPEG Start width */
 
 		/* Pre SAW & Agc configuration for ATV */
-		DRXJCfgPreSaw_t atvPreSawCfg;
+		drxj_cfg_pre_saw_t atv_pre_saw_cfg;
 					  /**< atv pre SAW config */
-		DRXJCfgAgc_t atvRfAgcCfg; /**< atv RF AGC config */
-		DRXJCfgAgc_t atvIfAgcCfg; /**< atv IF AGC config */
-		u16 atvPgaCfg;	  /**< atv pga config    */
+		drxj_cfg_agc_t atv_rf_agc_cfg; /**< atv RF AGC config */
+		drxj_cfg_agc_t atv_if_agc_cfg; /**< atv IF AGC config */
+		u16 atv_pga_cfg;	  /**< atv pga config    */
 
-		u32 currSymbolRate;
+		u32 curr_symbol_rate;
 
 		/* pin-safe mode */
-		bool pdrSafeMode;	    /**< PDR safe mode activated      */
-		u16 pdrSafeRestoreValGpio;
-		u16 pdrSafeRestoreValVSync;
-		u16 pdrSafeRestoreValSmaRx;
-		u16 pdrSafeRestoreValSmaTx;
+		bool pdr_safe_mode;	    /**< PDR safe mode activated      */
+		u16 pdr_safe_restore_val_gpio;
+		u16 pdr_safe_restore_val_v_sync;
+		u16 pdr_safe_restore_val_sma_rx;
+		u16 pdr_safe_restore_val_sma_tx;
 
 		/* OOB pre-saw value */
-		u16 oobPreSaw;
-		DRXJCfgOobLoPower_t oobLoPow;
+		u16 oob_pre_saw;
+		drxj_cfg_oob_lo_power_t oob_lo_pow;
 
-		DRXAudData_t audData;
+		drx_aud_data_t aud_data;
 				    /**< audio storage                  */
 
-	} DRXJData_t, *pDRXJData_t;
+	} drxj_data_t, *pdrxj_data_t;
 
 /*-------------------------------------------------------------------------
 Access MACROS
@@ -591,7 +591,7 @@ Access MACROS
 */
 
 #define DRXJ_ATTR_BTSC_DETECT(d)                       \
-			(((pDRXJData_t)(d)->myExtAttr)->audData.btscDetect)
+			(((pdrxj_data_t)(d)->my_ext_attr)->aud_data.btsc_detect)
 
 /**
 * \brief Actual access macros
@@ -723,20 +723,20 @@ STRUCTS
 Exported FUNCTIONS
 -------------------------------------------------------------------------*/
 
-	extern int DRXJ_Open(pDRXDemodInstance_t demod);
-	extern int DRXJ_Close(pDRXDemodInstance_t demod);
-	extern int DRXJ_Ctrl(pDRXDemodInstance_t demod,
-				     u32 ctrl, void *ctrlData);
+	extern int drxj_open(pdrx_demod_instance_t demod);
+	extern int drxj_close(pdrx_demod_instance_t demod);
+	extern int drxj_ctrl(pdrx_demod_instance_t demod,
+				     u32 ctrl, void *ctrl_data);
 
 /*-------------------------------------------------------------------------
 Exported GLOBAL VARIABLES
 -------------------------------------------------------------------------*/
-	extern DRXAccessFunc_t drxDapDRXJFunct_g;
-	extern DRXDemodFunc_t DRXJFunctions_g;
-	extern DRXJData_t DRXJData_g;
-	extern struct i2c_device_addr DRXJDefaultAddr_g;
-	extern DRXCommonAttr_t DRXJDefaultCommAttr_g;
-	extern DRXDemodInstance_t DRXJDefaultDemod_g;
+	extern drx_access_func_t drx_dap_drxj_funct_g;
+	extern drx_demod_func_t drxj_functions_g;
+	extern drxj_data_t drxj_data_g;
+	extern struct i2c_device_addr drxj_default_addr_g;
+	extern drx_common_attr_t drxj_default_comm_attr_g;
+	extern drx_demod_instance_t drxj_default_demod_g;
 
 /*-------------------------------------------------------------------------
 THE END

commit 7ef66759a3c45aa861133b8905d4f2de1a935f54
Author: Mauro Carvalho Chehab <m.chehab@samsung.com>
Date:   Thu Jan 16 11:08:15 2014 -0300

    [media] drx-j: Use checkpatch --fix to solve several issues
    
    Instead of manually fixing the issues, use the --fix experimental
    checkpatch. That solves a bunch of checkpatch issues.
    
    Acked-by: Devin Heitmueller <dheitmueller@kernellabs.com>
    Signed-off-by: Mauro Carvalho Chehab <m.chehab@samsung.com>

diff --git a/drivers/media/dvb-frontends/drx39xyj/drxj.h b/drivers/media/dvb-frontends/drx39xyj/drxj.h
index 47a0e3cc5b4b..15b2bb065468 100644
--- a/drivers/media/dvb-frontends/drx39xyj/drxj.h
+++ b/drivers/media/dvb-frontends/drx39xyj/drxj.h
@@ -53,7 +53,7 @@ extern "C" {
 /* Multi master mode and short addr format only will not work.
    RMW, CRC reset, broadcast and switching back to single master mode
    cannot be done with short addr only in multi master mode. */
-#if ((DRXDAP_SINGLE_MASTER==0)&&(DRXDAPFASI_LONG_ADDR_ALLOWED==0))
+#if ((DRXDAP_SINGLE_MASTER == 0) && (DRXDAPFASI_LONG_ADDR_ALLOWED == 0))
 #error "Multi master mode and short addressing only is an illegal combination"
 	*;			/* Generate a fatal compiler error to make sure it stops here,
 				   this is necesarry because not all compilers stop after a #error. */
@@ -590,7 +590,7 @@ Access MACROS
 *
 */
 
-#define DRXJ_ATTR_BTSC_DETECT( d )                       \
+#define DRXJ_ATTR_BTSC_DETECT(d)                       \
 			(((pDRXJData_t)(d)->myExtAttr)->audData.btscDetect)
 
 /**
@@ -604,15 +604,15 @@ Access MACROS
 * substituted by "direct-access-inline-code" or a function call.
 *
 */
-#define DRXJ_GET_BTSC_DETECT( d, x )                     \
+#define DRXJ_GET_BTSC_DETECT(d, x)                     \
    do {                                                  \
-      (x) = DRXJ_ATTR_BTSC_DETECT(( d );                 \
-   } while(0)
+      (x) = DRXJ_ATTR_BTSC_DETECT((d);                 \
+   } while (0)
 
-#define DRXJ_SET_BTSC_DETECT( d, x )                     \
+#define DRXJ_SET_BTSC_DETECT(d, x)                     \
    do {                                                  \
-      DRXJ_ATTR_BTSC_DETECT( d ) = (x);                  \
-   } while(0)
+      DRXJ_ATTR_BTSC_DETECT(d) = (x);                  \
+   } while (0)
 
 /*-------------------------------------------------------------------------
 DEFINES
@@ -704,12 +704,12 @@ DEFINES
 
 /* Convert OOB lock status to string */
 #define DRXJ_STR_OOB_LOCKSTATUS(x) ( \
-   ( x == DRX_NEVER_LOCK               )  ?  "Never"           : \
-   ( x == DRX_NOT_LOCKED               )  ?  "No"              : \
-   ( x == DRX_LOCKED                   )  ?  "Locked"          : \
-   ( x == DRX_LOCK_STATE_1             )  ?  "AGC lock"        : \
-   ( x == DRX_LOCK_STATE_2             )  ?  "sync lock"       : \
-					     "(Invalid)" )
+   (x == DRX_NEVER_LOCK)  ?  "Never"           : \
+   (x == DRX_NOT_LOCKED)  ?  "No"              : \
+   (x == DRX_LOCKED)  ?  "Locked"          : \
+   (x == DRX_LOCK_STATE_1)  ?  "AGC lock"        : \
+   (x == DRX_LOCK_STATE_2)  ?  "sync lock"       : \
+					     "(Invalid)")
 
 /*-------------------------------------------------------------------------
 ENUM

commit 61263c751bafaecb3a23a7f9db05db9addc5f0f6
Author: Mauro Carvalho Chehab <mchehab@redhat.com>
Date:   Tue Mar 20 01:18:02 2012 -0300

    [media] drx-j: get rid of most of the typedefs
    
    There are lots of typedefs there. Let's get rid of them.
    
    Most of the work here is due to this small script:
    
            if [ "$3" == "" ]; then
                    echo "usage: $0 type DRXName drx_name"
            fi
            t=$1; f=$2; g=$3
            for i in *.[ch]; do
                    sed s,"p${f}_t","$t $g *",g <$i >a && mv a $i && \
                    sed s,"${f}_t","$t $g",g <$i >a && mv a $i
            done
    
    Just kept there the function typedefs, as those are still useful.
    
    Yet, all those tuner_ops can likely be just removed on a latter
    cleanup patch.
    
    Acked-by: Devin Heitmueller <dheitmueller@kernellabs.com>
    Signed-off-by: Mauro Carvalho Chehab <m.chehab@samsung.com>

diff --git a/drivers/media/dvb-frontends/drx39xyj/drxj.h b/drivers/media/dvb-frontends/drx39xyj/drxj.h
index 87a8f2c188d4..47a0e3cc5b4b 100644
--- a/drivers/media/dvb-frontends/drx39xyj/drxj.h
+++ b/drivers/media/dvb-frontends/drx39xyj/drxj.h
@@ -184,7 +184,7 @@ TYPEDEFS
 * Generic interface for all AGCs present on the DRXJ.
 */
 	typedef struct {
-		DRXStandard_t standard;	/* standard for which these settings apply */
+		enum drx_standard standard;	/* standard for which these settings apply */
 		DRXJAgcCtrlMode_t ctrlMode;	/* off, user, auto          */
 		u16 outputLevel;	/* range dependent on AGC   */
 		u16 minOutputLevel;	/* range dependent on AGC   */
@@ -202,7 +202,7 @@ TYPEDEFS
 * Interface to configure pre SAW sense.
 */
 	typedef struct {
-		DRXStandard_t standard;	/* standard to which these settings apply */
+		enum drx_standard standard;	/* standard to which these settings apply */
 		u16 reference;	/* pre SAW reference value, range 0 .. 31 */
 		bool usePreSaw;	/* true algorithms must use pre SAW sense */
 	} DRXJCfgPreSaw_t, *pDRXJCfgPreSaw_t;
@@ -214,7 +214,7 @@ TYPEDEFS
 * Interface to configure gain of AFE (LNA + PGA).
 */
 	typedef struct {
-		DRXStandard_t standard;	/* standard to which these settings apply */
+		enum drx_standard standard;	/* standard to which these settings apply */
 		u16 gain;	/* gain in 0.1 dB steps, DRXJ range 140 .. 335 */
 	} DRXJCfgAfeGain_t, *pDRXJCfgAfeGain_t;
 
@@ -462,13 +462,13 @@ TYPEDEFS
 		bool mirrorFreqSpectOOB;/**< tuner inversion (true = tuner mirrors the signal */
 
 		/* standard/channel settings */
-		DRXStandard_t standard;	  /**< current standard information                     */
-		DRXConstellation_t constellation;
+		enum drx_standard standard;	  /**< current standard information                     */
+		enum drx_modulation constellation;
 					  /**< current constellation                            */
 		s32 frequency; /**< center signal frequency in KHz                   */
-		DRXBandwidth_t currBandwidth;
+		enum drx_bandwidth currBandwidth;
 					  /**< current channel bandwidth                        */
-		DRXMirror_t mirror;	  /**< current channel mirror                           */
+		enum drx_mirror mirror;	  /**< current channel mirror                           */
 
 		/* signal quality information */
 		u32 fecBitsDesired;	  /**< BER accounting period                            */
@@ -723,10 +723,10 @@ STRUCTS
 Exported FUNCTIONS
 -------------------------------------------------------------------------*/
 
-	extern DRXStatus_t DRXJ_Open(pDRXDemodInstance_t demod);
-	extern DRXStatus_t DRXJ_Close(pDRXDemodInstance_t demod);
-	extern DRXStatus_t DRXJ_Ctrl(pDRXDemodInstance_t demod,
-				     DRXCtrlIndex_t ctrl, void *ctrlData);
+	extern int DRXJ_Open(pDRXDemodInstance_t demod);
+	extern int DRXJ_Close(pDRXDemodInstance_t demod);
+	extern int DRXJ_Ctrl(pDRXDemodInstance_t demod,
+				     u32 ctrl, void *ctrlData);
 
 /*-------------------------------------------------------------------------
 Exported GLOBAL VARIABLES

commit 73f7065be6f31080d92ceec14c69b76b9f7b705c
Author: Mauro Carvalho Chehab <mchehab@redhat.com>
Date:   Tue Mar 20 00:59:03 2012 -0300

    [media] drx-j: get rid of the other typedefs at bsp_types.h
    
    Most of the work were done by those small scripts:
    
    for i in *; do sed s,pDRXFrequency_t,"s32 *",g <$i >a && mv a $i; done
    for i in *; do sed s,DRXFrequency_t,"s32",g <$i >a && mv a $i; done
    for i in *; do sed s,pDRXSymbolrate_t,"u32 *",g <$i >a && mv a $i; done
    for i in *; do sed s,DRXSymbolrate_t,"u32",g <$i >a && mv a $i; done
    for i in *; do sed s,FALSE,false,g <$i >a && mv a $i; done
    for i in *; do sed s,TRUE,true,g <$i >a && mv a $i; done
    for i in *; do sed s,Bool_t,bool,g <$i >a && mv a $i; done
    for i in *; do sed s,pbool,"bool *",g <$i >a && mv a $i; done
    
    The only remaining things there are the return values.
    
    Acked-by: Devin Heitmueller <dheitmueller@kernellabs.com>
    Signed-off-by: Mauro Carvalho Chehab <m.chehab@samsung.com>

diff --git a/drivers/media/dvb-frontends/drx39xyj/drxj.h b/drivers/media/dvb-frontends/drx39xyj/drxj.h
index 29b6450fb3c4..87a8f2c188d4 100644
--- a/drivers/media/dvb-frontends/drx39xyj/drxj.h
+++ b/drivers/media/dvb-frontends/drx39xyj/drxj.h
@@ -204,7 +204,7 @@ TYPEDEFS
 	typedef struct {
 		DRXStandard_t standard;	/* standard to which these settings apply */
 		u16 reference;	/* pre SAW reference value, range 0 .. 31 */
-		Bool_t usePreSaw;	/* TRUE algorithms must use pre SAW sense */
+		bool usePreSaw;	/* true algorithms must use pre SAW sense */
 	} DRXJCfgPreSaw_t, *pDRXJCfgPreSaw_t;
 
 /* DRXJ_CFG_AFE_GAIN */
@@ -279,8 +279,8 @@ TYPEDEFS
 * set MPEG output clock rate
 */
 	typedef struct {
-		Bool_t disableTEIHandling;	      /**< if TRUE pass (not change) TEI bit */
-		Bool_t bitReverseMpegOutout;	      /**< if TRUE, parallel: msb on MD0; serial: lsb out first */
+		bool disableTEIHandling;	      /**< if true pass (not change) TEI bit */
+		bool bitReverseMpegOutout;	      /**< if true, parallel: msb on MD0; serial: lsb out first */
 		DRXJMpegOutputClockRate_t mpegOutputClockRate;
 						      /**< set MPEG output clock rate that overwirtes the derived one from symbol rate */
 		DRXJMpegStartWidth_t mpegStartWidth;  /**< set MPEG output start width */
@@ -341,12 +341,12 @@ TYPEDEFS
 
 	typedef struct {
 		DRXJAgcStatus_t agc;
-		Bool_t eqLock;
-		Bool_t symTimingLock;
-		Bool_t phaseLock;
-		Bool_t freqLock;
-		Bool_t digGainLock;
-		Bool_t anaGainLock;
+		bool eqLock;
+		bool symTimingLock;
+		bool phaseLock;
+		bool freqLock;
+		bool digGainLock;
+		bool anaGainLock;
 		u8 state;
 	} DRXJCfgOOBMisc_t, *pDRXJCfgOOBMisc_t;
 
@@ -407,8 +407,8 @@ TYPEDEFS
 *
 */
 	typedef struct {
-		Bool_t enableCVBSOutput;	/* TRUE= enabled */
-		Bool_t enableSIFOutput;	/* TRUE= enabled */
+		bool enableCVBSOutput;	/* true= enabled */
+		bool enableSIFOutput;	/* true= enabled */
 		DRXJSIFAttenuation_t sifAttenuation;
 	} DRXJCfgAtvOutput_t, *pDRXJCfgAtvOutput_t;
 
@@ -447,25 +447,25 @@ TYPEDEFS
 */
 	typedef struct {
 		/* device capabilties (determined during DRX_Open()) */
-		Bool_t hasLNA;		  /**< TRUE if LNA (aka PGA) present */
-		Bool_t hasOOB;		  /**< TRUE if OOB supported */
-		Bool_t hasNTSC;		  /**< TRUE if NTSC supported */
-		Bool_t hasBTSC;		  /**< TRUE if BTSC supported */
-		Bool_t hasSMATX;	  /**< TRUE if mat_tx is available */
-		Bool_t hasSMARX;	  /**< TRUE if mat_rx is available */
-		Bool_t hasGPIO;		  /**< TRUE if GPIO is available */
-		Bool_t hasIRQN;		  /**< TRUE if IRQN is available */
+		bool hasLNA;		  /**< true if LNA (aka PGA) present */
+		bool hasOOB;		  /**< true if OOB supported */
+		bool hasNTSC;		  /**< true if NTSC supported */
+		bool hasBTSC;		  /**< true if BTSC supported */
+		bool hasSMATX;	  /**< true if mat_tx is available */
+		bool hasSMARX;	  /**< true if mat_rx is available */
+		bool hasGPIO;		  /**< true if GPIO is available */
+		bool hasIRQN;		  /**< true if IRQN is available */
 		/* A1/A2/A... */
 		u8 mfx;		  /**< metal fix */
 
 		/* tuner settings */
-		Bool_t mirrorFreqSpectOOB;/**< tuner inversion (TRUE = tuner mirrors the signal */
+		bool mirrorFreqSpectOOB;/**< tuner inversion (true = tuner mirrors the signal */
 
 		/* standard/channel settings */
 		DRXStandard_t standard;	  /**< current standard information                     */
 		DRXConstellation_t constellation;
 					  /**< current constellation                            */
-		DRXFrequency_t frequency; /**< center signal frequency in KHz                   */
+		s32 frequency; /**< center signal frequency in KHz                   */
 		DRXBandwidth_t currBandwidth;
 					  /**< current channel bandwidth                        */
 		DRXMirror_t mirror;	  /**< current channel mirror                           */
@@ -478,7 +478,7 @@ TYPEDEFS
 		u16 fecRsPlen;	  /**< defines RS BER measurement period                */
 		u16 fecRsPrescale;	  /**< ReedSolomon Measurement Prescale                 */
 		u16 fecRsPeriod;	  /**< ReedSolomon Measurement period                   */
-		Bool_t resetPktErrAcc;	  /**< Set a flag to reset accumulated packet error     */
+		bool resetPktErrAcc;	  /**< Set a flag to reset accumulated packet error     */
 		u16 pktErrAccStart;	  /**< Set a flag to reset accumulated packet error     */
 
 		/* HI configuration */
@@ -496,7 +496,7 @@ TYPEDEFS
 
 		/* IQM fs frequecy shift and inversion */
 		u32 iqmFsRateOfs;	   /**< frequency shifter setting after setchannel      */
-		Bool_t posImage;	   /**< Ture: positive image                            */
+		bool posImage;	   /**< Ture: positive image                            */
 		/* IQM RC frequecy shift */
 		u32 iqmRcRateOfs;	   /**< frequency shifter setting after setchannel      */
 
@@ -506,11 +506,11 @@ TYPEDEFS
 		s16 atvTopEqu1[DRXJ_COEF_IDX_MAX];	     /**< shadow of ATV_TOP_EQU1__A */
 		s16 atvTopEqu2[DRXJ_COEF_IDX_MAX];	     /**< shadow of ATV_TOP_EQU2__A */
 		s16 atvTopEqu3[DRXJ_COEF_IDX_MAX];	     /**< shadow of ATV_TOP_EQU3__A */
-		Bool_t phaseCorrectionBypass;/**< flag: TRUE=bypass */
+		bool phaseCorrectionBypass;/**< flag: true=bypass */
 		s16 atvTopVidPeak;	  /**< shadow of ATV_TOP_VID_PEAK__A */
 		u16 atvTopNoiseTh;	  /**< shadow of ATV_TOP_NOISE_TH__A */
-		Bool_t enableCVBSOutput;  /**< flag CVBS ouput enable */
-		Bool_t enableSIFOutput;	  /**< flag SIF ouput enable */
+		bool enableCVBSOutput;  /**< flag CVBS ouput enable */
+		bool enableSIFOutput;	  /**< flag SIF ouput enable */
 		 DRXJSIFAttenuation_t sifAttenuation;
 					  /**< current SIF att setting */
 		/* Agc configuration for QAM and VSB */
@@ -536,16 +536,16 @@ TYPEDEFS
 					  /**< allocated version list */
 
 		/* smart antenna configuration */
-		Bool_t smartAntInverted;
+		bool smartAntInverted;
 
 		/* Tracking filter setting for OOB */
 		u16 oobTrkFilterCfg[8];
-		Bool_t oobPowerOn;
+		bool oobPowerOn;
 
 		/* MPEG static bitrate setting */
 		u32 mpegTsStaticBitrate;  /**< bitrate static MPEG output */
-		Bool_t disableTEIhandling;  /**< MPEG TS TEI handling */
-		Bool_t bitReverseMpegOutout;/**< MPEG output bit order */
+		bool disableTEIhandling;  /**< MPEG TS TEI handling */
+		bool bitReverseMpegOutout;/**< MPEG output bit order */
 		 DRXJMpegOutputClockRate_t mpegOutputClockRate;
 					    /**< MPEG output clock rate */
 		 DRXJMpegStartWidth_t mpegStartWidth;
@@ -561,7 +561,7 @@ TYPEDEFS
 		u32 currSymbolRate;
 
 		/* pin-safe mode */
-		Bool_t pdrSafeMode;	    /**< PDR safe mode activated      */
+		bool pdrSafeMode;	    /**< PDR safe mode activated      */
 		u16 pdrSafeRestoreValGpio;
 		u16 pdrSafeRestoreValVSync;
 		u16 pdrSafeRestoreValSmaRx;
@@ -631,7 +631,7 @@ DEFINES
 * Fcentre = Fpc + DRXJ_NTSC_CARRIER_FREQ_OFFSET
 *
 */
-#define DRXJ_NTSC_CARRIER_FREQ_OFFSET           ((DRXFrequency_t)(1750))
+#define DRXJ_NTSC_CARRIER_FREQ_OFFSET           ((s32)(1750))
 
 /**
 * \def DRXJ_PAL_SECAM_BG_CARRIER_FREQ_OFFSET
@@ -647,7 +647,7 @@ DEFINES
 * care of this.
 *
 */
-#define DRXJ_PAL_SECAM_BG_CARRIER_FREQ_OFFSET   ((DRXFrequency_t)(2375))
+#define DRXJ_PAL_SECAM_BG_CARRIER_FREQ_OFFSET   ((s32)(2375))
 
 /**
 * \def DRXJ_PAL_SECAM_DKIL_CARRIER_FREQ_OFFSET
@@ -663,7 +663,7 @@ DEFINES
 * care of this.
 *
 */
-#define DRXJ_PAL_SECAM_DKIL_CARRIER_FREQ_OFFSET ((DRXFrequency_t)(2775))
+#define DRXJ_PAL_SECAM_DKIL_CARRIER_FREQ_OFFSET ((s32)(2775))
 
 /**
 * \def DRXJ_PAL_SECAM_LP_CARRIER_FREQ_OFFSET
@@ -678,7 +678,7 @@ DEFINES
 * In case the tuner module is NOT used the application programmer must take
 * care of this.
 */
-#define DRXJ_PAL_SECAM_LP_CARRIER_FREQ_OFFSET   ((DRXFrequency_t)(-3255))
+#define DRXJ_PAL_SECAM_LP_CARRIER_FREQ_OFFSET   ((s32)(-3255))
 
 /**
 * \def DRXJ_FM_CARRIER_FREQ_OFFSET
@@ -694,7 +694,7 @@ DEFINES
 * Ffm = Fsc + DRXJ_FM_CARRIER_FREQ_OFFSET
 *
 */
-#define DRXJ_FM_CARRIER_FREQ_OFFSET             ((DRXFrequency_t)(-3000))
+#define DRXJ_FM_CARRIER_FREQ_OFFSET             ((s32)(-3000))
 
 /* Revision types -------------------------------------------------------*/
 

commit 43a431e4b2244b25a51b0a5900e894c2a4764ff6
Author: Mauro Carvalho Chehab <mchehab@redhat.com>
Date:   Tue Mar 20 00:49:45 2012 -0300

    [media] drx-j: get rid of the integer typedefs
    
    Patch created using this small script:
    
    for j in 8 16 32; do for i in *; do sed s,pu${j}_t,"u$j *",g <$i >a && mv a $i; done; done
    for j in 8 16 32; do for i in *; do sed s,ps${j}_t,"s$j *",g <$i >a && mv a $i; done; done
    for j in 8 16 32; do for i in *; do sed s,s${j}_t,"s$j",g <$i >a && mv a $i; done; done
    for j in 8 16 32; do for i in *; do sed s,u${j}_t,"u$j",g <$i >a && mv a $i; done; done
    
    and fixing the bsp_types.h header.
    
    Acked-by: Devin Heitmueller <dheitmueller@kernellabs.com>
    Signed-off-by: Mauro Carvalho Chehab <m.chehab@samsung.com>

diff --git a/drivers/media/dvb-frontends/drx39xyj/drxj.h b/drivers/media/dvb-frontends/drx39xyj/drxj.h
index dbd27da9de7f..29b6450fb3c4 100644
--- a/drivers/media/dvb-frontends/drx39xyj/drxj.h
+++ b/drivers/media/dvb-frontends/drx39xyj/drxj.h
@@ -75,15 +75,15 @@ TYPEDEFS
 /*============================================================================*/
 
 	typedef struct {
-		u16_t command;
+		u16 command;
 			/**< Command number */
-		u16_t parameterLen;
+		u16 parameterLen;
 			/**< Data length in byte */
-		u16_t resultLen;
+		u16 resultLen;
 			/**< result length in byte */
-		u16_t *parameter;
+		u16 *parameter;
 			/**< General purpous param */
-		u16_t *result;
+		u16 *result;
 			/**< General purpous param */
 	} DRXJSCUCmd_t, *pDRXJSCUCmd_t;
 
@@ -154,7 +154,7 @@ TYPEDEFS
 */
 	typedef struct {
 		DRXJCfgSmartAntIO_t io;
-		u16_t ctrlData;
+		u16 ctrlData;
 	} DRXJCfgSmartAnt_t, *pDRXJCfgSmartAnt_t;
 
 /**
@@ -162,9 +162,9 @@ TYPEDEFS
 * AGC status information from the DRXJ-IQM-AF.
 */
 	typedef struct {
-		u16_t IFAGC;
-		u16_t RFAGC;
-		u16_t DigitalAGC;
+		u16 IFAGC;
+		u16 RFAGC;
+		u16 DigitalAGC;
 	} DRXJAgcStatus_t, *pDRXJAgcStatus_t;
 
 /* DRXJ_CFG_AGC_RF, DRXJ_CFG_AGC_IF */
@@ -186,12 +186,12 @@ TYPEDEFS
 	typedef struct {
 		DRXStandard_t standard;	/* standard for which these settings apply */
 		DRXJAgcCtrlMode_t ctrlMode;	/* off, user, auto          */
-		u16_t outputLevel;	/* range dependent on AGC   */
-		u16_t minOutputLevel;	/* range dependent on AGC   */
-		u16_t maxOutputLevel;	/* range dependent on AGC   */
-		u16_t speed;	/* range dependent on AGC   */
-		u16_t top;	/* rf-agc take over point   */
-		u16_t cutOffCurrent;	/* rf-agc is accelerated if output current
+		u16 outputLevel;	/* range dependent on AGC   */
+		u16 minOutputLevel;	/* range dependent on AGC   */
+		u16 maxOutputLevel;	/* range dependent on AGC   */
+		u16 speed;	/* range dependent on AGC   */
+		u16 top;	/* rf-agc take over point   */
+		u16 cutOffCurrent;	/* rf-agc is accelerated if output current
 					   is below cut-off current                */
 	} DRXJCfgAgc_t, *pDRXJCfgAgc_t;
 
@@ -203,7 +203,7 @@ TYPEDEFS
 */
 	typedef struct {
 		DRXStandard_t standard;	/* standard to which these settings apply */
-		u16_t reference;	/* pre SAW reference value, range 0 .. 31 */
+		u16 reference;	/* pre SAW reference value, range 0 .. 31 */
 		Bool_t usePreSaw;	/* TRUE algorithms must use pre SAW sense */
 	} DRXJCfgPreSaw_t, *pDRXJCfgPreSaw_t;
 
@@ -215,7 +215,7 @@ TYPEDEFS
 */
 	typedef struct {
 		DRXStandard_t standard;	/* standard to which these settings apply */
-		u16_t gain;	/* gain in 0.1 dB steps, DRXJ range 140 .. 335 */
+		u16 gain;	/* gain in 0.1 dB steps, DRXJ range 140 .. 335 */
 	} DRXJCfgAfeGain_t, *pDRXJCfgAfeGain_t;
 
 /**
@@ -226,15 +226,15 @@ TYPEDEFS
 *
 */
 	typedef struct {
-		u16_t nrBitErrors;
+		u16 nrBitErrors;
 				/**< no of pre RS bit errors          */
-		u16_t nrSymbolErrors;
+		u16 nrSymbolErrors;
 				/**< no of pre RS symbol errors       */
-		u16_t nrPacketErrors;
+		u16 nrPacketErrors;
 				/**< no of pre RS packet errors       */
-		u16_t nrFailures;
+		u16 nrFailures;
 				/**< no of post RS failures to decode */
-		u16_t nrSncParFailCount;
+		u16 nrSncParFailCount;
 				/**< no of post RS bit erros          */
 	} DRXJRSErrors_t, *pDRXJRSErrors_t;
 
@@ -243,7 +243,7 @@ TYPEDEFS
 * symbol error rate
 */
 	typedef struct {
-		u32_t symbError;
+		u32 symbError;
 			      /**< symbol error rate sps */
 	} DRXJCfgVSBMisc_t, *pDRXJCfgVSBMisc_t;
 
@@ -321,8 +321,8 @@ TYPEDEFS
  *  DRXJ_CFG_ATV_MISC
  */
 	typedef struct {
-		s16_t peakFilter;	/* -8 .. 15 */
-		u16_t noiseFilter;	/* 0 .. 15 */
+		s16 peakFilter;	/* -8 .. 15 */
+		u16 noiseFilter;	/* 0 .. 15 */
 	} DRXJCfgAtvMisc_t, *pDRXJCfgAtvMisc_t;
 
 /*
@@ -347,7 +347,7 @@ TYPEDEFS
 		Bool_t freqLock;
 		Bool_t digGainLock;
 		Bool_t anaGainLock;
-		u8_t state;
+		u8 state;
 	} DRXJCfgOOBMisc_t, *pDRXJCfgOOBMisc_t;
 
 /*
@@ -365,10 +365,10 @@ TYPEDEFS
  *  DRXJ_CFG_ATV_EQU_COEF
  */
 	typedef struct {
-		s16_t coef0;	/* -256 .. 255 */
-		s16_t coef1;	/* -256 .. 255 */
-		s16_t coef2;	/* -256 .. 255 */
-		s16_t coef3;	/* -256 .. 255 */
+		s16 coef0;	/* -256 .. 255 */
+		s16 coef1;	/* -256 .. 255 */
+		s16 coef2;	/* -256 .. 255 */
+		s16 coef3;	/* -256 .. 255 */
 	} DRXJCfgAtvEquCoef_t, *pDRXJCfgAtvEquCoef_t;
 
 /*
@@ -417,13 +417,13 @@ TYPEDEFS
 */
 /* TODO : AFE interface not yet finished, subject to change */
 	typedef struct {
-		u16_t rfAgcGain;	/* 0 .. 877 uA */
-		u16_t ifAgcGain;	/* 0 .. 877  uA */
-		s16_t videoAgcGain;	/* -75 .. 1972 in 0.1 dB steps */
-		s16_t audioAgcGain;	/* -4 .. 1020 in 0.1 dB steps */
-		u16_t rfAgcLoopGain;	/* 0 .. 7 */
-		u16_t ifAgcLoopGain;	/* 0 .. 7 */
-		u16_t videoAgcLoopGain;	/* 0 .. 7 */
+		u16 rfAgcGain;	/* 0 .. 877 uA */
+		u16 ifAgcGain;	/* 0 .. 877  uA */
+		s16 videoAgcGain;	/* -75 .. 1972 in 0.1 dB steps */
+		s16 audioAgcGain;	/* -4 .. 1020 in 0.1 dB steps */
+		u16 rfAgcLoopGain;	/* 0 .. 7 */
+		u16 ifAgcLoopGain;	/* 0 .. 7 */
+		u16 videoAgcLoopGain;	/* 0 .. 7 */
 	} DRXJCfgAtvAgcStatus_t, *pDRXJCfgAtvAgcStatus_t;
 
 /*============================================================================*/
@@ -456,7 +456,7 @@ TYPEDEFS
 		Bool_t hasGPIO;		  /**< TRUE if GPIO is available */
 		Bool_t hasIRQN;		  /**< TRUE if IRQN is available */
 		/* A1/A2/A... */
-		u8_t mfx;		  /**< metal fix */
+		u8 mfx;		  /**< metal fix */
 
 		/* tuner settings */
 		Bool_t mirrorFreqSpectOOB;/**< tuner inversion (TRUE = tuner mirrors the signal */
@@ -471,22 +471,22 @@ TYPEDEFS
 		DRXMirror_t mirror;	  /**< current channel mirror                           */
 
 		/* signal quality information */
-		u32_t fecBitsDesired;	  /**< BER accounting period                            */
-		u16_t fecVdPlen;	  /**< no of trellis symbols: VD SER measurement period */
-		u16_t qamVdPrescale;	  /**< Viterbi Measurement Prescale                     */
-		u16_t qamVdPeriod;	  /**< Viterbi Measurement period                       */
-		u16_t fecRsPlen;	  /**< defines RS BER measurement period                */
-		u16_t fecRsPrescale;	  /**< ReedSolomon Measurement Prescale                 */
-		u16_t fecRsPeriod;	  /**< ReedSolomon Measurement period                   */
+		u32 fecBitsDesired;	  /**< BER accounting period                            */
+		u16 fecVdPlen;	  /**< no of trellis symbols: VD SER measurement period */
+		u16 qamVdPrescale;	  /**< Viterbi Measurement Prescale                     */
+		u16 qamVdPeriod;	  /**< Viterbi Measurement period                       */
+		u16 fecRsPlen;	  /**< defines RS BER measurement period                */
+		u16 fecRsPrescale;	  /**< ReedSolomon Measurement Prescale                 */
+		u16 fecRsPeriod;	  /**< ReedSolomon Measurement period                   */
 		Bool_t resetPktErrAcc;	  /**< Set a flag to reset accumulated packet error     */
-		u16_t pktErrAccStart;	  /**< Set a flag to reset accumulated packet error     */
+		u16 pktErrAccStart;	  /**< Set a flag to reset accumulated packet error     */
 
 		/* HI configuration */
-		u16_t HICfgTimingDiv;	  /**< HI Configure() parameter 2                       */
-		u16_t HICfgBridgeDelay;	  /**< HI Configure() parameter 3                       */
-		u16_t HICfgWakeUpKey;	  /**< HI Configure() parameter 4                       */
-		u16_t HICfgCtrl;	  /**< HI Configure() parameter 5                       */
-		u16_t HICfgTransmit;	  /**< HI Configure() parameter 6                       */
+		u16 HICfgTimingDiv;	  /**< HI Configure() parameter 2                       */
+		u16 HICfgBridgeDelay;	  /**< HI Configure() parameter 3                       */
+		u16 HICfgWakeUpKey;	  /**< HI Configure() parameter 4                       */
+		u16 HICfgCtrl;	  /**< HI Configure() parameter 5                       */
+		u16 HICfgTransmit;	  /**< HI Configure() parameter 6                       */
 
 		/* UIO configuartion */
 		DRXUIOMode_t uioSmaRxMode;/**< current mode of SmaRx pin                        */
@@ -495,20 +495,20 @@ TYPEDEFS
 		DRXUIOMode_t uioIRQNMode; /**< current mode of IRQN pin                         */
 
 		/* IQM fs frequecy shift and inversion */
-		u32_t iqmFsRateOfs;	   /**< frequency shifter setting after setchannel      */
+		u32 iqmFsRateOfs;	   /**< frequency shifter setting after setchannel      */
 		Bool_t posImage;	   /**< Ture: positive image                            */
 		/* IQM RC frequecy shift */
-		u32_t iqmRcRateOfs;	   /**< frequency shifter setting after setchannel      */
+		u32 iqmRcRateOfs;	   /**< frequency shifter setting after setchannel      */
 
 		/* ATV configuartion */
-		u32_t atvCfgChangedFlags; /**< flag: flags cfg changes */
-		s16_t atvTopEqu0[DRXJ_COEF_IDX_MAX];	     /**< shadow of ATV_TOP_EQU0__A */
-		s16_t atvTopEqu1[DRXJ_COEF_IDX_MAX];	     /**< shadow of ATV_TOP_EQU1__A */
-		s16_t atvTopEqu2[DRXJ_COEF_IDX_MAX];	     /**< shadow of ATV_TOP_EQU2__A */
-		s16_t atvTopEqu3[DRXJ_COEF_IDX_MAX];	     /**< shadow of ATV_TOP_EQU3__A */
+		u32 atvCfgChangedFlags; /**< flag: flags cfg changes */
+		s16 atvTopEqu0[DRXJ_COEF_IDX_MAX];	     /**< shadow of ATV_TOP_EQU0__A */
+		s16 atvTopEqu1[DRXJ_COEF_IDX_MAX];	     /**< shadow of ATV_TOP_EQU1__A */
+		s16 atvTopEqu2[DRXJ_COEF_IDX_MAX];	     /**< shadow of ATV_TOP_EQU2__A */
+		s16 atvTopEqu3[DRXJ_COEF_IDX_MAX];	     /**< shadow of ATV_TOP_EQU3__A */
 		Bool_t phaseCorrectionBypass;/**< flag: TRUE=bypass */
-		s16_t atvTopVidPeak;	  /**< shadow of ATV_TOP_VID_PEAK__A */
-		u16_t atvTopNoiseTh;	  /**< shadow of ATV_TOP_NOISE_TH__A */
+		s16 atvTopVidPeak;	  /**< shadow of ATV_TOP_VID_PEAK__A */
+		u16 atvTopNoiseTh;	  /**< shadow of ATV_TOP_NOISE_TH__A */
 		Bool_t enableCVBSOutput;  /**< flag CVBS ouput enable */
 		Bool_t enableSIFOutput;	  /**< flag SIF ouput enable */
 		 DRXJSIFAttenuation_t sifAttenuation;
@@ -520,8 +520,8 @@ TYPEDEFS
 		DRXJCfgAgc_t vsbIfAgcCfg; /**< vsb IF AGC config */
 
 		/* PGA gain configuration for QAM and VSB */
-		u16_t qamPgaCfg;	  /**< qam PGA config */
-		u16_t vsbPgaCfg;	  /**< vsb PGA config */
+		u16 qamPgaCfg;	  /**< qam PGA config */
+		u16 vsbPgaCfg;	  /**< vsb PGA config */
 
 		/* Pre SAW configuration for QAM and VSB */
 		DRXJCfgPreSaw_t qamPreSawCfg;
@@ -539,11 +539,11 @@ TYPEDEFS
 		Bool_t smartAntInverted;
 
 		/* Tracking filter setting for OOB */
-		u16_t oobTrkFilterCfg[8];
+		u16 oobTrkFilterCfg[8];
 		Bool_t oobPowerOn;
 
 		/* MPEG static bitrate setting */
-		u32_t mpegTsStaticBitrate;  /**< bitrate static MPEG output */
+		u32 mpegTsStaticBitrate;  /**< bitrate static MPEG output */
 		Bool_t disableTEIhandling;  /**< MPEG TS TEI handling */
 		Bool_t bitReverseMpegOutout;/**< MPEG output bit order */
 		 DRXJMpegOutputClockRate_t mpegOutputClockRate;
@@ -556,19 +556,19 @@ TYPEDEFS
 					  /**< atv pre SAW config */
 		DRXJCfgAgc_t atvRfAgcCfg; /**< atv RF AGC config */
 		DRXJCfgAgc_t atvIfAgcCfg; /**< atv IF AGC config */
-		u16_t atvPgaCfg;	  /**< atv pga config    */
+		u16 atvPgaCfg;	  /**< atv pga config    */
 
-		u32_t currSymbolRate;
+		u32 currSymbolRate;
 
 		/* pin-safe mode */
 		Bool_t pdrSafeMode;	    /**< PDR safe mode activated      */
-		u16_t pdrSafeRestoreValGpio;
-		u16_t pdrSafeRestoreValVSync;
-		u16_t pdrSafeRestoreValSmaRx;
-		u16_t pdrSafeRestoreValSmaTx;
+		u16 pdrSafeRestoreValGpio;
+		u16 pdrSafeRestoreValVSync;
+		u16 pdrSafeRestoreValSmaRx;
+		u16 pdrSafeRestoreValSmaTx;
 
 		/* OOB pre-saw value */
-		u16_t oobPreSaw;
+		u16 oobPreSaw;
 		DRXJCfgOobLoPower_t oobLoPow;
 
 		DRXAudData_t audData;

commit 5b223b390d0b6a58921ebd024f5161315ba316df
Author: Mauro Carvalho Chehab <mchehab@redhat.com>
Date:   Tue Mar 20 00:33:46 2012 -0300

    [media] drx-j: get rid of the typedefs on bsp_i2c.h
    
    Most of the hard work here were done by this small script:
    
    for i in *; do sed s,pI2CDeviceAddr_t,"struct i2c_device_addr *",g <$i >a && mv a $i; done
    for i in *; do sed s,I2CDeviceAddr_t,"struct i2c_device_addr",g <$i >a && mv a $i; done
    
    Only bsp_i2c.h were added by hand.
    
    Acked-by: Devin Heitmueller <dheitmueller@kernellabs.com>
    Signed-off-by: Mauro Carvalho Chehab <m.chehab@samsung.com>

diff --git a/drivers/media/dvb-frontends/drx39xyj/drxj.h b/drivers/media/dvb-frontends/drx39xyj/drxj.h
index b9e51b44c221..dbd27da9de7f 100644
--- a/drivers/media/dvb-frontends/drx39xyj/drxj.h
+++ b/drivers/media/dvb-frontends/drx39xyj/drxj.h
@@ -734,7 +734,7 @@ Exported GLOBAL VARIABLES
 	extern DRXAccessFunc_t drxDapDRXJFunct_g;
 	extern DRXDemodFunc_t DRXJFunctions_g;
 	extern DRXJData_t DRXJData_g;
-	extern I2CDeviceAddr_t DRXJDefaultAddr_g;
+	extern struct i2c_device_addr DRXJDefaultAddr_g;
 	extern DRXCommonAttr_t DRXJDefaultCommAttr_g;
 	extern DRXDemodInstance_t DRXJDefaultDemod_g;
 

commit 443f18d0d52d513810311601a9235cb22c72a85b
Author: Mauro Carvalho Chehab <mchehab@redhat.com>
Date:   Tue Mar 20 00:00:42 2012 -0300

    [media] drx-j: CodingStyle fixes
    
    Do the automatic CodingStyle fixes found at Lindent.
    
    No functional changes.
    
    Acked-by: Devin Heitmueller <dheitmueller@kernellabs.com>
    Signed-off-by: Mauro Carvalho Chehab <m.chehab@samsung.com>

diff --git a/drivers/media/dvb-frontends/drx39xyj/drxj.h b/drivers/media/dvb-frontends/drx39xyj/drxj.h
index cb6cc3f4309e..b9e51b44c221 100644
--- a/drivers/media/dvb-frontends/drx39xyj/drxj.h
+++ b/drivers/media/dvb-frontends/drx39xyj/drxj.h
@@ -55,8 +55,8 @@ extern "C" {
    cannot be done with short addr only in multi master mode. */
 #if ((DRXDAP_SINGLE_MASTER==0)&&(DRXDAPFASI_LONG_ADDR_ALLOWED==0))
 #error "Multi master mode and short addressing only is an illegal combination"
-*; /* Generate a fatal compiler error to make sure it stops here,
-      this is necesarry because not all compilers stop after a #error. */
+	*;			/* Generate a fatal compiler error to make sure it stops here,
+				   this is necesarry because not all compilers stop after a #error. */
 #endif
 
 /*-------------------------------------------------------------------------
@@ -74,14 +74,18 @@ TYPEDEFS
 /*============================================================================*/
 /*============================================================================*/
 
-typedef struct {
-   u16_t command;       /**< Command number */
-   u16_t parameterLen;  /**< Data length in byte */
-   u16_t resultLen;     /**< result length in byte */
-   u16_t *parameter;    /**< General purpous param */
-   u16_t *result;       /**< General purpous param */
-} DRXJSCUCmd_t, *pDRXJSCUCmd_t;
-
+	typedef struct {
+		u16_t command;
+			/**< Command number */
+		u16_t parameterLen;
+			/**< Data length in byte */
+		u16_t resultLen;
+			/**< result length in byte */
+		u16_t *parameter;
+			/**< General purpous param */
+		u16_t *result;
+			/**< General purpous param */
+	} DRXJSCUCmd_t, *pDRXJSCUCmd_t;
 
 /*============================================================================*/
 /*============================================================================*/
@@ -93,8 +97,8 @@ typedef struct {
 #define DRXJ_DEMOD_LOCK       (DRX_LOCK_STATE_1)
 
 /* OOB lock states */
-#define DRXJ_OOB_AGC_LOCK     (DRX_LOCK_STATE_1)   /* analog gain control lock */
-#define DRXJ_OOB_SYNC_LOCK    (DRX_LOCK_STATE_2)   /* digital gain control lock */
+#define DRXJ_OOB_AGC_LOCK     (DRX_LOCK_STATE_1)	/* analog gain control lock */
+#define DRXJ_OOB_SYNC_LOCK    (DRX_LOCK_STATE_2)	/* digital gain control lock */
 
 /* Intermediate powermodes for DRXJ */
 #define DRXJ_POWER_DOWN_MAIN_PATH   DRX_POWER_MODE_8
@@ -107,62 +111,61 @@ typedef struct {
 /*#define DRX_CTRL_BASE         (0x0000)*/
 
 #define DRXJ_CTRL_CFG_BASE    (0x1000)
-typedef enum {
-   DRXJ_CFG_AGC_RF = DRXJ_CTRL_CFG_BASE,
-   DRXJ_CFG_AGC_IF,
-   DRXJ_CFG_AGC_INTERNAL,
-   DRXJ_CFG_PRE_SAW,
-   DRXJ_CFG_AFE_GAIN,
-   DRXJ_CFG_SYMBOL_CLK_OFFSET,
-   DRXJ_CFG_ACCUM_CR_RS_CW_ERR,
-   DRXJ_CFG_FEC_MERS_SEQ_COUNT,
-   DRXJ_CFG_OOB_MISC,
-   DRXJ_CFG_SMART_ANT,
-   DRXJ_CFG_OOB_PRE_SAW,
-   DRXJ_CFG_VSB_MISC,
-   DRXJ_CFG_RESET_PACKET_ERR,
-
-   /* ATV (FM) */
-   DRXJ_CFG_ATV_OUTPUT,       /* also for FM (SIF control) but not likely */
-   DRXJ_CFG_ATV_MISC,
-   DRXJ_CFG_ATV_EQU_COEF,
-   DRXJ_CFG_ATV_AGC_STATUS,   /* also for FM ( IF,RF, audioAGC ) */
-
-   DRXJ_CFG_MPEG_OUTPUT_MISC,
-   DRXJ_CFG_HW_CFG,
-   DRXJ_CFG_OOB_LO_POW,
-
-   DRXJ_CFG_MAX               /* dummy, never to be used */
-
-} DRXJCfgType_t, *pDRXJCfgType_t;
+	typedef enum {
+		DRXJ_CFG_AGC_RF = DRXJ_CTRL_CFG_BASE,
+		DRXJ_CFG_AGC_IF,
+		DRXJ_CFG_AGC_INTERNAL,
+		DRXJ_CFG_PRE_SAW,
+		DRXJ_CFG_AFE_GAIN,
+		DRXJ_CFG_SYMBOL_CLK_OFFSET,
+		DRXJ_CFG_ACCUM_CR_RS_CW_ERR,
+		DRXJ_CFG_FEC_MERS_SEQ_COUNT,
+		DRXJ_CFG_OOB_MISC,
+		DRXJ_CFG_SMART_ANT,
+		DRXJ_CFG_OOB_PRE_SAW,
+		DRXJ_CFG_VSB_MISC,
+		DRXJ_CFG_RESET_PACKET_ERR,
+
+		/* ATV (FM) */
+		DRXJ_CFG_ATV_OUTPUT,	/* also for FM (SIF control) but not likely */
+		DRXJ_CFG_ATV_MISC,
+		DRXJ_CFG_ATV_EQU_COEF,
+		DRXJ_CFG_ATV_AGC_STATUS,	/* also for FM ( IF,RF, audioAGC ) */
+
+		DRXJ_CFG_MPEG_OUTPUT_MISC,
+		DRXJ_CFG_HW_CFG,
+		DRXJ_CFG_OOB_LO_POW,
+
+		DRXJ_CFG_MAX	/* dummy, never to be used */
+	} DRXJCfgType_t, *pDRXJCfgType_t;
 
 /**
 * /struct DRXJCfgSmartAntIO_t
 * smart antenna i/o.
 */
-typedef enum DRXJCfgSmartAntIO_t {
-    DRXJ_SMT_ANT_OUTPUT = 0,
-    DRXJ_SMT_ANT_INPUT
-} DRXJCfgSmartAntIO_t, *pDRXJCfgSmartAntIO_t;
+	typedef enum DRXJCfgSmartAntIO_t {
+		DRXJ_SMT_ANT_OUTPUT = 0,
+		DRXJ_SMT_ANT_INPUT
+	} DRXJCfgSmartAntIO_t, *pDRXJCfgSmartAntIO_t;
 
 /**
 * /struct DRXJCfgSmartAnt_t
 * Set smart antenna.
 */
-typedef struct {
-   DRXJCfgSmartAntIO_t    io;
-   u16_t                  ctrlData;
-} DRXJCfgSmartAnt_t, *pDRXJCfgSmartAnt_t;
+	typedef struct {
+		DRXJCfgSmartAntIO_t io;
+		u16_t ctrlData;
+	} DRXJCfgSmartAnt_t, *pDRXJCfgSmartAnt_t;
 
 /**
 * /struct DRXJAGCSTATUS_t
 * AGC status information from the DRXJ-IQM-AF.
 */
-typedef struct {
-   u16_t   IFAGC;
-   u16_t   RFAGC;
-   u16_t   DigitalAGC;
-}DRXJAgcStatus_t, *pDRXJAgcStatus_t;
+	typedef struct {
+		u16_t IFAGC;
+		u16_t RFAGC;
+		u16_t DigitalAGC;
+	} DRXJAgcStatus_t, *pDRXJAgcStatus_t;
 
 /* DRXJ_CFG_AGC_RF, DRXJ_CFG_AGC_IF */
 
@@ -170,27 +173,27 @@ typedef struct {
 * /struct DRXJAgcCtrlMode_t
 * Available AGCs modes in the DRXJ.
 */
-typedef enum {
-   DRX_AGC_CTRL_AUTO = 0,
-   DRX_AGC_CTRL_USER,
-   DRX_AGC_CTRL_OFF
-} DRXJAgcCtrlMode_t, *pDRXJAgcCtrlMode_t;
+	typedef enum {
+		DRX_AGC_CTRL_AUTO = 0,
+		DRX_AGC_CTRL_USER,
+		DRX_AGC_CTRL_OFF
+	} DRXJAgcCtrlMode_t, *pDRXJAgcCtrlMode_t;
 
 /**
 * /struct DRXJCfgAgc_t
 * Generic interface for all AGCs present on the DRXJ.
 */
-typedef struct {
-   DRXStandard_t     standard;        /* standard for which these settings apply */
-   DRXJAgcCtrlMode_t ctrlMode;        /* off, user, auto          */
-   u16_t             outputLevel;     /* range dependent on AGC   */
-   u16_t             minOutputLevel;  /* range dependent on AGC   */
-   u16_t             maxOutputLevel;  /* range dependent on AGC   */
-   u16_t             speed;           /* range dependent on AGC   */
-   u16_t             top;             /* rf-agc take over point   */
-   u16_t             cutOffCurrent;   /* rf-agc is accelerated if output current
-					 is below cut-off current                */
-}DRXJCfgAgc_t, *pDRXJCfgAgc_t;
+	typedef struct {
+		DRXStandard_t standard;	/* standard for which these settings apply */
+		DRXJAgcCtrlMode_t ctrlMode;	/* off, user, auto          */
+		u16_t outputLevel;	/* range dependent on AGC   */
+		u16_t minOutputLevel;	/* range dependent on AGC   */
+		u16_t maxOutputLevel;	/* range dependent on AGC   */
+		u16_t speed;	/* range dependent on AGC   */
+		u16_t top;	/* rf-agc take over point   */
+		u16_t cutOffCurrent;	/* rf-agc is accelerated if output current
+					   is below cut-off current                */
+	} DRXJCfgAgc_t, *pDRXJCfgAgc_t;
 
 /* DRXJ_CFG_PRE_SAW */
 
@@ -198,11 +201,11 @@ typedef struct {
 * /struct DRXJCfgPreSaw_t
 * Interface to configure pre SAW sense.
 */
-typedef struct {
-   DRXStandard_t  standard;  /* standard to which these settings apply */
-   u16_t          reference; /* pre SAW reference value, range 0 .. 31 */
-   Bool_t         usePreSaw; /* TRUE algorithms must use pre SAW sense */
-} DRXJCfgPreSaw_t, *pDRXJCfgPreSaw_t;
+	typedef struct {
+		DRXStandard_t standard;	/* standard to which these settings apply */
+		u16_t reference;	/* pre SAW reference value, range 0 .. 31 */
+		Bool_t usePreSaw;	/* TRUE algorithms must use pre SAW sense */
+	} DRXJCfgPreSaw_t, *pDRXJCfgPreSaw_t;
 
 /* DRXJ_CFG_AFE_GAIN */
 
@@ -210,10 +213,10 @@ typedef struct {
 * /struct DRXJCfgAfeGain_t
 * Interface to configure gain of AFE (LNA + PGA).
 */
-typedef struct {
-   DRXStandard_t  standard;  /* standard to which these settings apply */
-   u16_t          gain;      /* gain in 0.1 dB steps, DRXJ range 140 .. 335 */
-} DRXJCfgAfeGain_t, *pDRXJCfgAfeGain_t;
+	typedef struct {
+		DRXStandard_t standard;	/* standard to which these settings apply */
+		u16_t gain;	/* gain in 0.1 dB steps, DRXJ range 140 .. 335 */
+	} DRXJCfgAfeGain_t, *pDRXJCfgAfeGain_t;
 
 /**
 * /struct DRXJRSErrors_t
@@ -222,46 +225,52 @@ typedef struct {
 * Container for errors that are received in the most recently finished measurment period
 *
 */
-typedef struct {
-   u16_t    nrBitErrors;        /**< no of pre RS bit errors          */
-   u16_t    nrSymbolErrors;     /**< no of pre RS symbol errors       */
-   u16_t    nrPacketErrors;     /**< no of pre RS packet errors       */
-   u16_t    nrFailures;         /**< no of post RS failures to decode */
-   u16_t    nrSncParFailCount;  /**< no of post RS bit erros          */
-} DRXJRSErrors_t, *pDRXJRSErrors_t;
+	typedef struct {
+		u16_t nrBitErrors;
+				/**< no of pre RS bit errors          */
+		u16_t nrSymbolErrors;
+				/**< no of pre RS symbol errors       */
+		u16_t nrPacketErrors;
+				/**< no of pre RS packet errors       */
+		u16_t nrFailures;
+				/**< no of post RS failures to decode */
+		u16_t nrSncParFailCount;
+				/**< no of post RS bit erros          */
+	} DRXJRSErrors_t, *pDRXJRSErrors_t;
 
 /**
 * /struct DRXJCfgVSBMisc_t
 * symbol error rate
 */
-typedef struct{
-   u32_t    symbError;        /**< symbol error rate sps */
-}DRXJCfgVSBMisc_t, *pDRXJCfgVSBMisc_t;
+	typedef struct {
+		u32_t symbError;
+			      /**< symbol error rate sps */
+	} DRXJCfgVSBMisc_t, *pDRXJCfgVSBMisc_t;
 
 /**
 * /enum DRXJMpegOutputClockRate_t
 * Mpeg output clock rate.
 *
 */
-typedef enum {
-   DRXJ_MPEG_START_WIDTH_1CLKCYC,
-   DRXJ_MPEG_START_WIDTH_8CLKCYC
-} DRXJMpegStartWidth_t, *pDRXJMpegStartWidth_t;
+	typedef enum {
+		DRXJ_MPEG_START_WIDTH_1CLKCYC,
+		DRXJ_MPEG_START_WIDTH_8CLKCYC
+	} DRXJMpegStartWidth_t, *pDRXJMpegStartWidth_t;
 
 /**
 * /enum DRXJMpegOutputClockRate_t
 * Mpeg output clock rate.
 *
 */
-typedef enum {
-   DRXJ_MPEGOUTPUT_CLOCK_RATE_AUTO,
-   DRXJ_MPEGOUTPUT_CLOCK_RATE_75973K,
-   DRXJ_MPEGOUTPUT_CLOCK_RATE_50625K,
-   DRXJ_MPEGOUTPUT_CLOCK_RATE_37968K,
-   DRXJ_MPEGOUTPUT_CLOCK_RATE_30375K,
-   DRXJ_MPEGOUTPUT_CLOCK_RATE_25313K,
-   DRXJ_MPEGOUTPUT_CLOCK_RATE_21696K
-} DRXJMpegOutputClockRate_t, *pDRXJMpegOutputClockRate_t;
+	typedef enum {
+		DRXJ_MPEGOUTPUT_CLOCK_RATE_AUTO,
+		DRXJ_MPEGOUTPUT_CLOCK_RATE_75973K,
+		DRXJ_MPEGOUTPUT_CLOCK_RATE_50625K,
+		DRXJ_MPEGOUTPUT_CLOCK_RATE_37968K,
+		DRXJ_MPEGOUTPUT_CLOCK_RATE_30375K,
+		DRXJ_MPEGOUTPUT_CLOCK_RATE_25313K,
+		DRXJ_MPEGOUTPUT_CLOCK_RATE_21696K
+	} DRXJMpegOutputClockRate_t, *pDRXJMpegOutputClockRate_t;
 
 /**
 * /struct DRXJCfgMisc_t
@@ -269,49 +278,52 @@ typedef enum {
 * reverse MPEG output bit order
 * set MPEG output clock rate
 */
-typedef struct{
-   Bool_t                     disableTEIHandling;     /**< if TRUE pass (not change) TEI bit */
-   Bool_t                     bitReverseMpegOutout;   /**< if TRUE, parallel: msb on MD0; serial: lsb out first */
-   DRXJMpegOutputClockRate_t  mpegOutputClockRate;    /**< set MPEG output clock rate that overwirtes the derived one from symbol rate */
-   DRXJMpegStartWidth_t       mpegStartWidth;         /**< set MPEG output start width */
-}DRXJCfgMpegOutputMisc_t, *pDRXJCfgMpegOutputMisc_t;
+	typedef struct {
+		Bool_t disableTEIHandling;	      /**< if TRUE pass (not change) TEI bit */
+		Bool_t bitReverseMpegOutout;	      /**< if TRUE, parallel: msb on MD0; serial: lsb out first */
+		DRXJMpegOutputClockRate_t mpegOutputClockRate;
+						      /**< set MPEG output clock rate that overwirtes the derived one from symbol rate */
+		DRXJMpegStartWidth_t mpegStartWidth;  /**< set MPEG output start width */
+	} DRXJCfgMpegOutputMisc_t, *pDRXJCfgMpegOutputMisc_t;
 
 /**
 * /enum DRXJXtalFreq_t
 * Supported external crystal reference frequency.
 */
-typedef enum{
-   DRXJ_XTAL_FREQ_RSVD,
-   DRXJ_XTAL_FREQ_27MHZ,
-   DRXJ_XTAL_FREQ_20P25MHZ,
-   DRXJ_XTAL_FREQ_4MHZ
-}DRXJXtalFreq_t, *pDRXJXtalFreq_t;
+	typedef enum {
+		DRXJ_XTAL_FREQ_RSVD,
+		DRXJ_XTAL_FREQ_27MHZ,
+		DRXJ_XTAL_FREQ_20P25MHZ,
+		DRXJ_XTAL_FREQ_4MHZ
+	} DRXJXtalFreq_t, *pDRXJXtalFreq_t;
 
 /**
 * /enum DRXJXtalFreq_t
 * Supported external crystal reference frequency.
 */
-typedef enum{
-   DRXJ_I2C_SPEED_400KBPS,
-   DRXJ_I2C_SPEED_100KBPS
-}DRXJI2CSpeed_t, *pDRXJI2CSpeed_t;
+	typedef enum {
+		DRXJ_I2C_SPEED_400KBPS,
+		DRXJ_I2C_SPEED_100KBPS
+	} DRXJI2CSpeed_t, *pDRXJI2CSpeed_t;
 
 /**
 * /struct DRXJCfgHwCfg_t
 * Get hw configuration, such as crystal reference frequency, I2C speed, etc...
 */
-typedef struct{
-   DRXJXtalFreq_t    xtalFreq;     /**< crystal reference frequency */
-   DRXJI2CSpeed_t    i2cSpeed;     /**< 100 or 400 kbps */
-}DRXJCfgHwCfg_t, *pDRXJCfgHwCfg_t;
+	typedef struct {
+		DRXJXtalFreq_t xtalFreq;
+				   /**< crystal reference frequency */
+		DRXJI2CSpeed_t i2cSpeed;
+				   /**< 100 or 400 kbps */
+	} DRXJCfgHwCfg_t, *pDRXJCfgHwCfg_t;
 
 /*
  *  DRXJ_CFG_ATV_MISC
  */
-typedef struct{
-   s16_t                       peakFilter;  /* -8 .. 15 */
-   u16_t                       noiseFilter; /* 0 .. 15 */
-}DRXJCfgAtvMisc_t, *pDRXJCfgAtvMisc_t;
+	typedef struct {
+		s16_t peakFilter;	/* -8 .. 15 */
+		u16_t noiseFilter;	/* 0 .. 15 */
+	} DRXJCfgAtvMisc_t, *pDRXJCfgAtvMisc_t;
 
 /*
  *  DRXJCfgOOBMisc_t
@@ -327,51 +339,51 @@ typedef struct{
 #define   DRXJ_OOB_STATE_EQT_HUNT                                     0x30
 #define   DRXJ_OOB_STATE_SYNC                                         0x40
 
-typedef struct{
-   DRXJAgcStatus_t   agc;
-   Bool_t            eqLock;
-   Bool_t            symTimingLock;
-   Bool_t            phaseLock;
-   Bool_t            freqLock;
-   Bool_t            digGainLock;
-   Bool_t            anaGainLock;
-   u8_t              state;
-}DRXJCfgOOBMisc_t, *pDRXJCfgOOBMisc_t;
+	typedef struct {
+		DRXJAgcStatus_t agc;
+		Bool_t eqLock;
+		Bool_t symTimingLock;
+		Bool_t phaseLock;
+		Bool_t freqLock;
+		Bool_t digGainLock;
+		Bool_t anaGainLock;
+		u8_t state;
+	} DRXJCfgOOBMisc_t, *pDRXJCfgOOBMisc_t;
 
 /*
  *  Index of in array of coef
  */
-typedef enum {
-   DRXJ_OOB_LO_POW_MINUS0DB  = 0,
-   DRXJ_OOB_LO_POW_MINUS5DB,
-   DRXJ_OOB_LO_POW_MINUS10DB,
-   DRXJ_OOB_LO_POW_MINUS15DB,
-   DRXJ_OOB_LO_POW_MAX
-} DRXJCfgOobLoPower_t, *pDRXJCfgOobLoPower_t;
+	typedef enum {
+		DRXJ_OOB_LO_POW_MINUS0DB = 0,
+		DRXJ_OOB_LO_POW_MINUS5DB,
+		DRXJ_OOB_LO_POW_MINUS10DB,
+		DRXJ_OOB_LO_POW_MINUS15DB,
+		DRXJ_OOB_LO_POW_MAX
+	} DRXJCfgOobLoPower_t, *pDRXJCfgOobLoPower_t;
 
 /*
  *  DRXJ_CFG_ATV_EQU_COEF
  */
-typedef struct {
-   s16_t coef0;  /* -256 .. 255 */
-   s16_t coef1;  /* -256 .. 255 */
-   s16_t coef2;  /* -256 .. 255 */
-   s16_t coef3;  /* -256 .. 255 */
-} DRXJCfgAtvEquCoef_t, *pDRXJCfgAtvEquCoef_t;
+	typedef struct {
+		s16_t coef0;	/* -256 .. 255 */
+		s16_t coef1;	/* -256 .. 255 */
+		s16_t coef2;	/* -256 .. 255 */
+		s16_t coef3;	/* -256 .. 255 */
+	} DRXJCfgAtvEquCoef_t, *pDRXJCfgAtvEquCoef_t;
 
 /*
  *  Index of in array of coef
  */
-typedef enum {
-   DRXJ_COEF_IDX_MN = 0,
-   DRXJ_COEF_IDX_FM    ,
-   DRXJ_COEF_IDX_L     ,
-   DRXJ_COEF_IDX_LP    ,
-   DRXJ_COEF_IDX_BG    ,
-   DRXJ_COEF_IDX_DK    ,
-   DRXJ_COEF_IDX_I     ,
-   DRXJ_COEF_IDX_MAX
-} DRXJCoefArrayIndex_t, *pDRXJCoefArrayIndex_t;
+	typedef enum {
+		DRXJ_COEF_IDX_MN = 0,
+		DRXJ_COEF_IDX_FM,
+		DRXJ_COEF_IDX_L,
+		DRXJ_COEF_IDX_LP,
+		DRXJ_COEF_IDX_BG,
+		DRXJ_COEF_IDX_DK,
+		DRXJ_COEF_IDX_I,
+		DRXJ_COEF_IDX_MAX
+	} DRXJCoefArrayIndex_t, *pDRXJCoefArrayIndex_t;
 
 /*
  *  DRXJ_CFG_ATV_OUTPUT
@@ -382,37 +394,37 @@ typedef enum {
 * Attenuation setting for SIF AGC.
 *
 */
-typedef enum {
-   DRXJ_SIF_ATTENUATION_0DB,
-   DRXJ_SIF_ATTENUATION_3DB,
-   DRXJ_SIF_ATTENUATION_6DB,
-   DRXJ_SIF_ATTENUATION_9DB
-} DRXJSIFAttenuation_t, *pDRXJSIFAttenuation_t;
+	typedef enum {
+		DRXJ_SIF_ATTENUATION_0DB,
+		DRXJ_SIF_ATTENUATION_3DB,
+		DRXJ_SIF_ATTENUATION_6DB,
+		DRXJ_SIF_ATTENUATION_9DB
+	} DRXJSIFAttenuation_t, *pDRXJSIFAttenuation_t;
 
 /**
 * /struct DRXJCfgAtvOutput_t
 * SIF attenuation setting.
 *
 */
-typedef struct {
-   Bool_t               enableCVBSOutput; /* TRUE= enabled */
-   Bool_t               enableSIFOutput;  /* TRUE= enabled */
-   DRXJSIFAttenuation_t sifAttenuation;
-} DRXJCfgAtvOutput_t, *pDRXJCfgAtvOutput_t;
+	typedef struct {
+		Bool_t enableCVBSOutput;	/* TRUE= enabled */
+		Bool_t enableSIFOutput;	/* TRUE= enabled */
+		DRXJSIFAttenuation_t sifAttenuation;
+	} DRXJCfgAtvOutput_t, *pDRXJCfgAtvOutput_t;
 
 /*
    DRXJ_CFG_ATV_AGC_STATUS (get only)
 */
 /* TODO : AFE interface not yet finished, subject to change */
-typedef struct {
-   u16_t rfAgcGain       ; /* 0 .. 877 uA */
-   u16_t ifAgcGain       ; /* 0 .. 877  uA */
-   s16_t videoAgcGain    ; /* -75 .. 1972 in 0.1 dB steps */
-   s16_t audioAgcGain    ; /* -4 .. 1020 in 0.1 dB steps */
-   u16_t rfAgcLoopGain   ; /* 0 .. 7 */
-   u16_t ifAgcLoopGain   ; /* 0 .. 7 */
-   u16_t videoAgcLoopGain; /* 0 .. 7 */
-} DRXJCfgAtvAgcStatus_t, *pDRXJCfgAtvAgcStatus_t;
+	typedef struct {
+		u16_t rfAgcGain;	/* 0 .. 877 uA */
+		u16_t ifAgcGain;	/* 0 .. 877  uA */
+		s16_t videoAgcGain;	/* -75 .. 1972 in 0.1 dB steps */
+		s16_t audioAgcGain;	/* -4 .. 1020 in 0.1 dB steps */
+		u16_t rfAgcLoopGain;	/* 0 .. 7 */
+		u16_t ifAgcLoopGain;	/* 0 .. 7 */
+		u16_t videoAgcLoopGain;	/* 0 .. 7 */
+	} DRXJCfgAtvAgcStatus_t, *pDRXJCfgAtvAgcStatus_t;
 
 /*============================================================================*/
 /*============================================================================*/
@@ -433,129 +445,136 @@ typedef struct {
 * Global data container for DRXJ specific data.
 *
 */
-typedef struct {
-   /* device capabilties (determined during DRX_Open()) */
-   Bool_t             hasLNA;             /**< TRUE if LNA (aka PGA) present */
-   Bool_t             hasOOB;             /**< TRUE if OOB supported */
-   Bool_t             hasNTSC;            /**< TRUE if NTSC supported */
-   Bool_t             hasBTSC;            /**< TRUE if BTSC supported */
-   Bool_t             hasSMATX;           /**< TRUE if mat_tx is available */
-   Bool_t             hasSMARX;           /**< TRUE if mat_rx is available */
-   Bool_t             hasGPIO;            /**< TRUE if GPIO is available */
-   Bool_t             hasIRQN;            /**< TRUE if IRQN is available */
-   /* A1/A2/A... */
-   u8_t               mfx;                /**< metal fix */
-
-   /* tuner settings */
-   Bool_t             mirrorFreqSpectOOB; /**< tuner inversion (TRUE = tuner mirrors the signal */
-
-   /* standard/channel settings */
-   DRXStandard_t      standard;           /**< current standard information                     */
-   DRXConstellation_t constellation;      /**< current constellation                            */
-   DRXFrequency_t     frequency;          /**< center signal frequency in KHz                   */
-   DRXBandwidth_t     currBandwidth;      /**< current channel bandwidth                        */
-   DRXMirror_t        mirror;             /**< current channel mirror                           */
-
-   /* signal quality information */
-   u32_t              fecBitsDesired;     /**< BER accounting period                            */
-   u16_t              fecVdPlen;          /**< no of trellis symbols: VD SER measurement period */
-   u16_t              qamVdPrescale;      /**< Viterbi Measurement Prescale                     */
-   u16_t              qamVdPeriod;        /**< Viterbi Measurement period                       */
-   u16_t              fecRsPlen;          /**< defines RS BER measurement period                */
-   u16_t              fecRsPrescale;      /**< ReedSolomon Measurement Prescale                 */
-   u16_t              fecRsPeriod;        /**< ReedSolomon Measurement period                   */
-   Bool_t             resetPktErrAcc;     /**< Set a flag to reset accumulated packet error     */
-   u16_t              pktErrAccStart;     /**< Set a flag to reset accumulated packet error     */
-
-   /* HI configuration */
-   u16_t              HICfgTimingDiv;     /**< HI Configure() parameter 2                       */
-   u16_t              HICfgBridgeDelay;   /**< HI Configure() parameter 3                       */
-   u16_t              HICfgWakeUpKey;     /**< HI Configure() parameter 4                       */
-   u16_t              HICfgCtrl;          /**< HI Configure() parameter 5                       */
-   u16_t              HICfgTransmit;      /**< HI Configure() parameter 6                       */
-
-   /* UIO configuartion */
-   DRXUIOMode_t       uioSmaRxMode;       /**< current mode of SmaRx pin                        */
-   DRXUIOMode_t       uioSmaTxMode;       /**< current mode of SmaTx pin                        */
-   DRXUIOMode_t       uioGPIOMode;        /**< current mode of ASEL pin                         */
-   DRXUIOMode_t       uioIRQNMode;        /**< current mode of IRQN pin                         */
-
-   /* IQM fs frequecy shift and inversion */
-   u32_t              iqmFsRateOfs;        /**< frequency shifter setting after setchannel      */
-   Bool_t             posImage;            /**< Ture: positive image                            */
-   /* IQM RC frequecy shift */
-   u32_t              iqmRcRateOfs;        /**< frequency shifter setting after setchannel      */
-
-   /* ATV configuartion */
-   u32_t              atvCfgChangedFlags; /**< flag: flags cfg changes */
-   s16_t              atvTopEqu0[DRXJ_COEF_IDX_MAX];         /**< shadow of ATV_TOP_EQU0__A */
-   s16_t              atvTopEqu1[DRXJ_COEF_IDX_MAX];         /**< shadow of ATV_TOP_EQU1__A */
-   s16_t              atvTopEqu2[DRXJ_COEF_IDX_MAX];         /**< shadow of ATV_TOP_EQU2__A */
-   s16_t              atvTopEqu3[DRXJ_COEF_IDX_MAX];         /**< shadow of ATV_TOP_EQU3__A */
-   Bool_t             phaseCorrectionBypass; /**< flag: TRUE=bypass */
-   s16_t              atvTopVidPeak;      /**< shadow of ATV_TOP_VID_PEAK__A */
-   u16_t              atvTopNoiseTh;      /**< shadow of ATV_TOP_NOISE_TH__A */
-   Bool_t             enableCVBSOutput;   /**< flag CVBS ouput enable */
-   Bool_t             enableSIFOutput;    /**< flag SIF ouput enable */
-   DRXJSIFAttenuation_t
-		      sifAttenuation;     /**< current SIF att setting */
-   /* Agc configuration for QAM and VSB */
-   DRXJCfgAgc_t       qamRfAgcCfg;        /**< qam RF AGC config */
-   DRXJCfgAgc_t       qamIfAgcCfg;        /**< qam IF AGC config */
-   DRXJCfgAgc_t       vsbRfAgcCfg;        /**< vsb RF AGC config */
-   DRXJCfgAgc_t       vsbIfAgcCfg;        /**< vsb IF AGC config */
-
-   /* PGA gain configuration for QAM and VSB */
-   u16_t              qamPgaCfg;          /**< qam PGA config */
-   u16_t              vsbPgaCfg;          /**< vsb PGA config */
-
-   /* Pre SAW configuration for QAM and VSB */
-   DRXJCfgPreSaw_t    qamPreSawCfg;       /**< qam pre SAW config */
-   DRXJCfgPreSaw_t    vsbPreSawCfg;       /**< qam pre SAW config */
-
-   /* Version information */
-   char               vText[2][12];       /**< allocated text versions */
-   DRXVersion_t       vVersion[2];        /**< allocated versions structs */
-   DRXVersionList_t   vListElements[2];   /**< allocated version list */
-
-   /* smart antenna configuration */
-   Bool_t             smartAntInverted;
-
-   /* Tracking filter setting for OOB */
-   u16_t              oobTrkFilterCfg[8];
-   Bool_t             oobPowerOn;
-
-   /* MPEG static bitrate setting */
-   u32_t              mpegTsStaticBitrate;  /**< bitrate static MPEG output */
-   Bool_t             disableTEIhandling;   /**< MPEG TS TEI handling */
-   Bool_t             bitReverseMpegOutout; /**< MPEG output bit order */
-   DRXJMpegOutputClockRate_t
-		      mpegOutputClockRate;  /**< MPEG output clock rate */
-   DRXJMpegStartWidth_t
-		      mpegStartWidth;       /**< MPEG Start width */
-
-   /* Pre SAW & Agc configuration for ATV */
-   DRXJCfgPreSaw_t    atvPreSawCfg;       /**< atv pre SAW config */
-   DRXJCfgAgc_t       atvRfAgcCfg;        /**< atv RF AGC config */
-   DRXJCfgAgc_t       atvIfAgcCfg;        /**< atv IF AGC config */
-   u16_t              atvPgaCfg;          /**< atv pga config    */
-
-   u32_t              currSymbolRate;
-
-   /* pin-safe mode */
-   Bool_t pdrSafeMode;                      /**< PDR safe mode activated      */
-   u16_t  pdrSafeRestoreValGpio;
-   u16_t  pdrSafeRestoreValVSync;
-   u16_t  pdrSafeRestoreValSmaRx;
-   u16_t  pdrSafeRestoreValSmaTx;
-
-   /* OOB pre-saw value */
-   u16_t              oobPreSaw;
-   DRXJCfgOobLoPower_t oobLoPow;
-
-   DRXAudData_t   audData;          /**< audio storage                  */
-
-} DRXJData_t, *pDRXJData_t;
+	typedef struct {
+		/* device capabilties (determined during DRX_Open()) */
+		Bool_t hasLNA;		  /**< TRUE if LNA (aka PGA) present */
+		Bool_t hasOOB;		  /**< TRUE if OOB supported */
+		Bool_t hasNTSC;		  /**< TRUE if NTSC supported */
+		Bool_t hasBTSC;		  /**< TRUE if BTSC supported */
+		Bool_t hasSMATX;	  /**< TRUE if mat_tx is available */
+		Bool_t hasSMARX;	  /**< TRUE if mat_rx is available */
+		Bool_t hasGPIO;		  /**< TRUE if GPIO is available */
+		Bool_t hasIRQN;		  /**< TRUE if IRQN is available */
+		/* A1/A2/A... */
+		u8_t mfx;		  /**< metal fix */
+
+		/* tuner settings */
+		Bool_t mirrorFreqSpectOOB;/**< tuner inversion (TRUE = tuner mirrors the signal */
+
+		/* standard/channel settings */
+		DRXStandard_t standard;	  /**< current standard information                     */
+		DRXConstellation_t constellation;
+					  /**< current constellation                            */
+		DRXFrequency_t frequency; /**< center signal frequency in KHz                   */
+		DRXBandwidth_t currBandwidth;
+					  /**< current channel bandwidth                        */
+		DRXMirror_t mirror;	  /**< current channel mirror                           */
+
+		/* signal quality information */
+		u32_t fecBitsDesired;	  /**< BER accounting period                            */
+		u16_t fecVdPlen;	  /**< no of trellis symbols: VD SER measurement period */
+		u16_t qamVdPrescale;	  /**< Viterbi Measurement Prescale                     */
+		u16_t qamVdPeriod;	  /**< Viterbi Measurement period                       */
+		u16_t fecRsPlen;	  /**< defines RS BER measurement period                */
+		u16_t fecRsPrescale;	  /**< ReedSolomon Measurement Prescale                 */
+		u16_t fecRsPeriod;	  /**< ReedSolomon Measurement period                   */
+		Bool_t resetPktErrAcc;	  /**< Set a flag to reset accumulated packet error     */
+		u16_t pktErrAccStart;	  /**< Set a flag to reset accumulated packet error     */
+
+		/* HI configuration */
+		u16_t HICfgTimingDiv;	  /**< HI Configure() parameter 2                       */
+		u16_t HICfgBridgeDelay;	  /**< HI Configure() parameter 3                       */
+		u16_t HICfgWakeUpKey;	  /**< HI Configure() parameter 4                       */
+		u16_t HICfgCtrl;	  /**< HI Configure() parameter 5                       */
+		u16_t HICfgTransmit;	  /**< HI Configure() parameter 6                       */
+
+		/* UIO configuartion */
+		DRXUIOMode_t uioSmaRxMode;/**< current mode of SmaRx pin                        */
+		DRXUIOMode_t uioSmaTxMode;/**< current mode of SmaTx pin                        */
+		DRXUIOMode_t uioGPIOMode; /**< current mode of ASEL pin                         */
+		DRXUIOMode_t uioIRQNMode; /**< current mode of IRQN pin                         */
+
+		/* IQM fs frequecy shift and inversion */
+		u32_t iqmFsRateOfs;	   /**< frequency shifter setting after setchannel      */
+		Bool_t posImage;	   /**< Ture: positive image                            */
+		/* IQM RC frequecy shift */
+		u32_t iqmRcRateOfs;	   /**< frequency shifter setting after setchannel      */
+
+		/* ATV configuartion */
+		u32_t atvCfgChangedFlags; /**< flag: flags cfg changes */
+		s16_t atvTopEqu0[DRXJ_COEF_IDX_MAX];	     /**< shadow of ATV_TOP_EQU0__A */
+		s16_t atvTopEqu1[DRXJ_COEF_IDX_MAX];	     /**< shadow of ATV_TOP_EQU1__A */
+		s16_t atvTopEqu2[DRXJ_COEF_IDX_MAX];	     /**< shadow of ATV_TOP_EQU2__A */
+		s16_t atvTopEqu3[DRXJ_COEF_IDX_MAX];	     /**< shadow of ATV_TOP_EQU3__A */
+		Bool_t phaseCorrectionBypass;/**< flag: TRUE=bypass */
+		s16_t atvTopVidPeak;	  /**< shadow of ATV_TOP_VID_PEAK__A */
+		u16_t atvTopNoiseTh;	  /**< shadow of ATV_TOP_NOISE_TH__A */
+		Bool_t enableCVBSOutput;  /**< flag CVBS ouput enable */
+		Bool_t enableSIFOutput;	  /**< flag SIF ouput enable */
+		 DRXJSIFAttenuation_t sifAttenuation;
+					  /**< current SIF att setting */
+		/* Agc configuration for QAM and VSB */
+		DRXJCfgAgc_t qamRfAgcCfg; /**< qam RF AGC config */
+		DRXJCfgAgc_t qamIfAgcCfg; /**< qam IF AGC config */
+		DRXJCfgAgc_t vsbRfAgcCfg; /**< vsb RF AGC config */
+		DRXJCfgAgc_t vsbIfAgcCfg; /**< vsb IF AGC config */
+
+		/* PGA gain configuration for QAM and VSB */
+		u16_t qamPgaCfg;	  /**< qam PGA config */
+		u16_t vsbPgaCfg;	  /**< vsb PGA config */
+
+		/* Pre SAW configuration for QAM and VSB */
+		DRXJCfgPreSaw_t qamPreSawCfg;
+					  /**< qam pre SAW config */
+		DRXJCfgPreSaw_t vsbPreSawCfg;
+					  /**< qam pre SAW config */
+
+		/* Version information */
+		char vText[2][12];	  /**< allocated text versions */
+		DRXVersion_t vVersion[2]; /**< allocated versions structs */
+		DRXVersionList_t vListElements[2];
+					  /**< allocated version list */
+
+		/* smart antenna configuration */
+		Bool_t smartAntInverted;
+
+		/* Tracking filter setting for OOB */
+		u16_t oobTrkFilterCfg[8];
+		Bool_t oobPowerOn;
+
+		/* MPEG static bitrate setting */
+		u32_t mpegTsStaticBitrate;  /**< bitrate static MPEG output */
+		Bool_t disableTEIhandling;  /**< MPEG TS TEI handling */
+		Bool_t bitReverseMpegOutout;/**< MPEG output bit order */
+		 DRXJMpegOutputClockRate_t mpegOutputClockRate;
+					    /**< MPEG output clock rate */
+		 DRXJMpegStartWidth_t mpegStartWidth;
+					    /**< MPEG Start width */
+
+		/* Pre SAW & Agc configuration for ATV */
+		DRXJCfgPreSaw_t atvPreSawCfg;
+					  /**< atv pre SAW config */
+		DRXJCfgAgc_t atvRfAgcCfg; /**< atv RF AGC config */
+		DRXJCfgAgc_t atvIfAgcCfg; /**< atv IF AGC config */
+		u16_t atvPgaCfg;	  /**< atv pga config    */
+
+		u32_t currSymbolRate;
+
+		/* pin-safe mode */
+		Bool_t pdrSafeMode;	    /**< PDR safe mode activated      */
+		u16_t pdrSafeRestoreValGpio;
+		u16_t pdrSafeRestoreValVSync;
+		u16_t pdrSafeRestoreValSmaRx;
+		u16_t pdrSafeRestoreValSmaTx;
+
+		/* OOB pre-saw value */
+		u16_t oobPreSaw;
+		DRXJCfgOobLoPower_t oobLoPow;
+
+		DRXAudData_t audData;
+				    /**< audio storage                  */
+
+	} DRXJData_t, *pDRXJData_t;
 
 /*-------------------------------------------------------------------------
 Access MACROS
@@ -595,7 +614,6 @@ Access MACROS
       DRXJ_ATTR_BTSC_DETECT( d ) = (x);                  \
    } while(0)
 
-
 /*-------------------------------------------------------------------------
 DEFINES
 -------------------------------------------------------------------------*/
@@ -705,21 +723,20 @@ STRUCTS
 Exported FUNCTIONS
 -------------------------------------------------------------------------*/
 
-extern DRXStatus_t DRXJ_Open(pDRXDemodInstance_t  demod);
-extern DRXStatus_t DRXJ_Close(pDRXDemodInstance_t demod);
-extern DRXStatus_t DRXJ_Ctrl(pDRXDemodInstance_t  demod,
-				 DRXCtrlIndex_t       ctrl,
-				 void                 *ctrlData);
+	extern DRXStatus_t DRXJ_Open(pDRXDemodInstance_t demod);
+	extern DRXStatus_t DRXJ_Close(pDRXDemodInstance_t demod);
+	extern DRXStatus_t DRXJ_Ctrl(pDRXDemodInstance_t demod,
+				     DRXCtrlIndex_t ctrl, void *ctrlData);
 
 /*-------------------------------------------------------------------------
 Exported GLOBAL VARIABLES
 -------------------------------------------------------------------------*/
-extern DRXAccessFunc_t     drxDapDRXJFunct_g;
-extern DRXDemodFunc_t      DRXJFunctions_g;
-extern DRXJData_t          DRXJData_g;
-extern I2CDeviceAddr_t     DRXJDefaultAddr_g;
-extern DRXCommonAttr_t     DRXJDefaultCommAttr_g;
-extern DRXDemodInstance_t  DRXJDefaultDemod_g;
+	extern DRXAccessFunc_t drxDapDRXJFunct_g;
+	extern DRXDemodFunc_t DRXJFunctions_g;
+	extern DRXJData_t DRXJData_g;
+	extern I2CDeviceAddr_t DRXJDefaultAddr_g;
+	extern DRXCommonAttr_t DRXJDefaultCommAttr_g;
+	extern DRXDemodInstance_t DRXJDefaultDemod_g;
 
 /*-------------------------------------------------------------------------
 THE END
@@ -727,4 +744,4 @@ THE END
 #ifdef __cplusplus
 }
 #endif
-#endif /* __DRXJ_H__ */
+#endif				/* __DRXJ_H__ */

commit ca3355a94755cad2a334354b1a9bcbab9239bec9
Author: Devin Heitmueller <dheitmueller@kernellabs.com>
Date:   Sun Jul 4 18:42:11 2010 -0300

    [media] drx-j: put under 3-clause BSD license
    
    Relicense the drx-j driver under a standard 3-clause BSD license, which makes
    it GPL compatible.
    
    This was done explicitly with permission from Trident Microsystems.
    
    Signed-off-by: Devin Heitmueller <dheitmueller@kernellabs.com>
    Signed-off-by: Mauro Carvalho Chehab <m.chehab@samsung.com>

diff --git a/drivers/media/dvb-frontends/drx39xyj/drxj.h b/drivers/media/dvb-frontends/drx39xyj/drxj.h
index ee7aa6aeac51..cb6cc3f4309e 100644
--- a/drivers/media/dvb-frontends/drx39xyj/drxj.h
+++ b/drivers/media/dvb-frontends/drx39xyj/drxj.h
@@ -1,3 +1,33 @@
+/*
+  Copyright (c), 2004-2005,2007-2010 Trident Microsystems, Inc.
+  All rights reserved.
+
+  Redistribution and use in source and binary forms, with or without
+  modification, are permitted provided that the following conditions are met:
+
+  * Redistributions of source code must retain the above copyright notice,
+    this list of conditions and the following disclaimer.
+  * Redistributions in binary form must reproduce the above copyright notice,
+    this list of conditions and the following disclaimer in the documentation
+	and/or other materials provided with the distribution.
+  * Neither the name of Trident Microsystems nor Hauppauge Computer Works
+    nor the names of its contributors may be used to endorse or promote
+	products derived from this software without specific prior written
+	permission.
+
+  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+  POSSIBILITY OF SUCH DAMAGE.
+*/
+
 /**
 * \file $Id: drxj.h,v 1.132 2009/12/22 12:13:48 danielg Exp $
 *
@@ -6,38 +36,6 @@
 * \author Dragan Savic, Milos Nikolic, Mihajlo Katona, Tao Ding, Paul Janssen
 */
 
-/*
-* $(c) 2006-2009 Trident Microsystems, Inc. - All rights reserved.
-*
-* This software and related documentation (the 'Software') are intellectual
-* property owned by Trident and are copyright of Trident, unless specifically
-* noted otherwise.
-*
-* Any use of the Software is permitted only pursuant to the terms of the
-* license agreement, if any, which accompanies, is included with or applicable
-* to the Software ('License Agreement') or upon express written consent of
-* Trident. Any copying, reproduction or redistribution of the Software in
-* whole or in part by any means not in accordance with the License Agreement
-* or as agreed in writing by Trident is expressly prohibited.
-*
-* THE SOFTWARE IS WARRANTED, IF AT ALL, ONLY ACCORDING TO THE TERMS OF THE
-* LICENSE AGREEMENT. EXCEPT AS WARRANTED IN THE LICENSE AGREEMENT THE SOFTWARE
-* IS DELIVERED 'AS IS' AND TRIDENT HEREBY DISCLAIMS ALL WARRANTIES AND
-* CONDITIONS WITH REGARD TO THE SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES
-* AND CONDITIONS OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIT
-* ENJOYMENT, TITLE AND NON-INFRINGEMENT OF ANY THIRD PARTY INTELLECTUAL
-* PROPERTY OR OTHER RIGHTS WHICH MAY RESULT FROM THE USE OR THE INABILITY
-* TO USE THE SOFTWARE.
-*
-* IN NO EVENT SHALL TRIDENT BE LIABLE FOR INDIRECT, INCIDENTAL, CONSEQUENTIAL,
-* PUNITIVE, SPECIAL OR OTHER DAMAGES WHATSOEVER INCLUDING WITHOUT LIMITATION,
-* DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS INTERRUPTION, LOSS OF BUSINESS
-* INFORMATION, AND THE LIKE, ARISING OUT OF OR RELATING TO THE USE OF OR THE
-* INABILITY TO USE THE SOFTWARE, EVEN IF TRIDENT HAS BEEN ADVISED OF THE
-* POSSIBILITY OF SUCH DAMAGES, EXCEPT PERSONAL INJURY OR DEATH RESULTING FROM
-* TRIDENT'S NEGLIGENCE.                                                        $
-*
-*/
 #ifndef __DRXJ_H__
 #define __DRXJ_H__
 /*-------------------------------------------------------------------------

commit 38b2df95c53be4bd5421d933ca0dabbcb82741d0
Author: Devin Heitmueller <dheitmueller@kernellabs.com>
Date:   Mon Aug 13 21:18:02 2012 -0300

    [media] drx-j: add a driver for Trident drx-j frontend
    
    Add support for the Trident DRX-J driver, including a card profile for the
    PCTV 80e which uses the chip.
    
    Thanks to Trident for allowing the release of this code under a BSD license,
    and of course Hauppauge/PCTV for pushing for its release to the community.
    
    [pdickeybeta@gmail.com: modified to fix compilation errors and also to move
     the driver files from the drx39xy subdirectory to the frontends directory]
    
    [m.chehab@samsung.com: fix merge conflicts, commented drx-j compilation and
     added EM28XX_R06_I2C_CLK setup also to the board setup]
    
    Signed-off-by: Devin Heitmueller <dheitmueller@kernellabs.com>
    Signed-off-by: Mauro Carvalho Chehab <m.chehab@samsung.com>

diff --git a/drivers/media/dvb-frontends/drx39xyj/drxj.h b/drivers/media/dvb-frontends/drx39xyj/drxj.h
new file mode 100644
index 000000000000..ee7aa6aeac51
--- /dev/null
+++ b/drivers/media/dvb-frontends/drx39xyj/drxj.h
@@ -0,0 +1,732 @@
+/**
+* \file $Id: drxj.h,v 1.132 2009/12/22 12:13:48 danielg Exp $
+*
+* \brief DRXJ specific header file
+*
+* \author Dragan Savic, Milos Nikolic, Mihajlo Katona, Tao Ding, Paul Janssen
+*/
+
+/*
+* $(c) 2006-2009 Trident Microsystems, Inc. - All rights reserved.
+*
+* This software and related documentation (the 'Software') are intellectual
+* property owned by Trident and are copyright of Trident, unless specifically
+* noted otherwise.
+*
+* Any use of the Software is permitted only pursuant to the terms of the
+* license agreement, if any, which accompanies, is included with or applicable
+* to the Software ('License Agreement') or upon express written consent of
+* Trident. Any copying, reproduction or redistribution of the Software in
+* whole or in part by any means not in accordance with the License Agreement
+* or as agreed in writing by Trident is expressly prohibited.
+*
+* THE SOFTWARE IS WARRANTED, IF AT ALL, ONLY ACCORDING TO THE TERMS OF THE
+* LICENSE AGREEMENT. EXCEPT AS WARRANTED IN THE LICENSE AGREEMENT THE SOFTWARE
+* IS DELIVERED 'AS IS' AND TRIDENT HEREBY DISCLAIMS ALL WARRANTIES AND
+* CONDITIONS WITH REGARD TO THE SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES
+* AND CONDITIONS OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIT
+* ENJOYMENT, TITLE AND NON-INFRINGEMENT OF ANY THIRD PARTY INTELLECTUAL
+* PROPERTY OR OTHER RIGHTS WHICH MAY RESULT FROM THE USE OR THE INABILITY
+* TO USE THE SOFTWARE.
+*
+* IN NO EVENT SHALL TRIDENT BE LIABLE FOR INDIRECT, INCIDENTAL, CONSEQUENTIAL,
+* PUNITIVE, SPECIAL OR OTHER DAMAGES WHATSOEVER INCLUDING WITHOUT LIMITATION,
+* DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS INTERRUPTION, LOSS OF BUSINESS
+* INFORMATION, AND THE LIKE, ARISING OUT OF OR RELATING TO THE USE OF OR THE
+* INABILITY TO USE THE SOFTWARE, EVEN IF TRIDENT HAS BEEN ADVISED OF THE
+* POSSIBILITY OF SUCH DAMAGES, EXCEPT PERSONAL INJURY OR DEATH RESULTING FROM
+* TRIDENT'S NEGLIGENCE.                                                        $
+*
+*/
+#ifndef __DRXJ_H__
+#define __DRXJ_H__
+/*-------------------------------------------------------------------------
+INCLUDES
+-------------------------------------------------------------------------*/
+
+#include "drx_driver.h"
+#include "drx_dap_fasi.h"
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+/* Check DRX-J specific dap condition */
+/* Multi master mode and short addr format only will not work.
+   RMW, CRC reset, broadcast and switching back to single master mode
+   cannot be done with short addr only in multi master mode. */
+#if ((DRXDAP_SINGLE_MASTER==0)&&(DRXDAPFASI_LONG_ADDR_ALLOWED==0))
+#error "Multi master mode and short addressing only is an illegal combination"
+*; /* Generate a fatal compiler error to make sure it stops here,
+      this is necesarry because not all compilers stop after a #error. */
+#endif
+
+/*-------------------------------------------------------------------------
+TYPEDEFS
+-------------------------------------------------------------------------*/
+/*============================================================================*/
+/*============================================================================*/
+/*== code support ============================================================*/
+/*============================================================================*/
+/*============================================================================*/
+
+/*============================================================================*/
+/*============================================================================*/
+/*== SCU cmd if  =============================================================*/
+/*============================================================================*/
+/*============================================================================*/
+
+typedef struct {
+   u16_t command;       /**< Command number */
+   u16_t parameterLen;  /**< Data length in byte */
+   u16_t resultLen;     /**< result length in byte */
+   u16_t *parameter;    /**< General purpous param */
+   u16_t *result;       /**< General purpous param */
+} DRXJSCUCmd_t, *pDRXJSCUCmd_t;
+
+
+/*============================================================================*/
+/*============================================================================*/
+/*== CTRL CFG related data structures ========================================*/
+/*============================================================================*/
+/*============================================================================*/
+
+/* extra intermediate lock state for VSB,QAM,NTSC */
+#define DRXJ_DEMOD_LOCK       (DRX_LOCK_STATE_1)
+
+/* OOB lock states */
+#define DRXJ_OOB_AGC_LOCK     (DRX_LOCK_STATE_1)   /* analog gain control lock */
+#define DRXJ_OOB_SYNC_LOCK    (DRX_LOCK_STATE_2)   /* digital gain control lock */
+
+/* Intermediate powermodes for DRXJ */
+#define DRXJ_POWER_DOWN_MAIN_PATH   DRX_POWER_MODE_8
+#define DRXJ_POWER_DOWN_CORE        DRX_POWER_MODE_9
+#define DRXJ_POWER_DOWN_PLL         DRX_POWER_MODE_10
+
+/* supstition for GPIO FNC mux */
+#define APP_O                 (0x0000)
+
+/*#define DRX_CTRL_BASE         (0x0000)*/
+
+#define DRXJ_CTRL_CFG_BASE    (0x1000)
+typedef enum {
+   DRXJ_CFG_AGC_RF = DRXJ_CTRL_CFG_BASE,
+   DRXJ_CFG_AGC_IF,
+   DRXJ_CFG_AGC_INTERNAL,
+   DRXJ_CFG_PRE_SAW,
+   DRXJ_CFG_AFE_GAIN,
+   DRXJ_CFG_SYMBOL_CLK_OFFSET,
+   DRXJ_CFG_ACCUM_CR_RS_CW_ERR,
+   DRXJ_CFG_FEC_MERS_SEQ_COUNT,
+   DRXJ_CFG_OOB_MISC,
+   DRXJ_CFG_SMART_ANT,
+   DRXJ_CFG_OOB_PRE_SAW,
+   DRXJ_CFG_VSB_MISC,
+   DRXJ_CFG_RESET_PACKET_ERR,
+
+   /* ATV (FM) */
+   DRXJ_CFG_ATV_OUTPUT,       /* also for FM (SIF control) but not likely */
+   DRXJ_CFG_ATV_MISC,
+   DRXJ_CFG_ATV_EQU_COEF,
+   DRXJ_CFG_ATV_AGC_STATUS,   /* also for FM ( IF,RF, audioAGC ) */
+
+   DRXJ_CFG_MPEG_OUTPUT_MISC,
+   DRXJ_CFG_HW_CFG,
+   DRXJ_CFG_OOB_LO_POW,
+
+   DRXJ_CFG_MAX               /* dummy, never to be used */
+
+} DRXJCfgType_t, *pDRXJCfgType_t;
+
+/**
+* /struct DRXJCfgSmartAntIO_t
+* smart antenna i/o.
+*/
+typedef enum DRXJCfgSmartAntIO_t {
+    DRXJ_SMT_ANT_OUTPUT = 0,
+    DRXJ_SMT_ANT_INPUT
+} DRXJCfgSmartAntIO_t, *pDRXJCfgSmartAntIO_t;
+
+/**
+* /struct DRXJCfgSmartAnt_t
+* Set smart antenna.
+*/
+typedef struct {
+   DRXJCfgSmartAntIO_t    io;
+   u16_t                  ctrlData;
+} DRXJCfgSmartAnt_t, *pDRXJCfgSmartAnt_t;
+
+/**
+* /struct DRXJAGCSTATUS_t
+* AGC status information from the DRXJ-IQM-AF.
+*/
+typedef struct {
+   u16_t   IFAGC;
+   u16_t   RFAGC;
+   u16_t   DigitalAGC;
+}DRXJAgcStatus_t, *pDRXJAgcStatus_t;
+
+/* DRXJ_CFG_AGC_RF, DRXJ_CFG_AGC_IF */
+
+/**
+* /struct DRXJAgcCtrlMode_t
+* Available AGCs modes in the DRXJ.
+*/
+typedef enum {
+   DRX_AGC_CTRL_AUTO = 0,
+   DRX_AGC_CTRL_USER,
+   DRX_AGC_CTRL_OFF
+} DRXJAgcCtrlMode_t, *pDRXJAgcCtrlMode_t;
+
+/**
+* /struct DRXJCfgAgc_t
+* Generic interface for all AGCs present on the DRXJ.
+*/
+typedef struct {
+   DRXStandard_t     standard;        /* standard for which these settings apply */
+   DRXJAgcCtrlMode_t ctrlMode;        /* off, user, auto          */
+   u16_t             outputLevel;     /* range dependent on AGC   */
+   u16_t             minOutputLevel;  /* range dependent on AGC   */
+   u16_t             maxOutputLevel;  /* range dependent on AGC   */
+   u16_t             speed;           /* range dependent on AGC   */
+   u16_t             top;             /* rf-agc take over point   */
+   u16_t             cutOffCurrent;   /* rf-agc is accelerated if output current
+					 is below cut-off current                */
+}DRXJCfgAgc_t, *pDRXJCfgAgc_t;
+
+/* DRXJ_CFG_PRE_SAW */
+
+/**
+* /struct DRXJCfgPreSaw_t
+* Interface to configure pre SAW sense.
+*/
+typedef struct {
+   DRXStandard_t  standard;  /* standard to which these settings apply */
+   u16_t          reference; /* pre SAW reference value, range 0 .. 31 */
+   Bool_t         usePreSaw; /* TRUE algorithms must use pre SAW sense */
+} DRXJCfgPreSaw_t, *pDRXJCfgPreSaw_t;
+
+/* DRXJ_CFG_AFE_GAIN */
+
+/**
+* /struct DRXJCfgAfeGain_t
+* Interface to configure gain of AFE (LNA + PGA).
+*/
+typedef struct {
+   DRXStandard_t  standard;  /* standard to which these settings apply */
+   u16_t          gain;      /* gain in 0.1 dB steps, DRXJ range 140 .. 335 */
+} DRXJCfgAfeGain_t, *pDRXJCfgAfeGain_t;
+
+/**
+* /struct DRXJRSErrors_t
+* Available failure information in DRXJ_FEC_RS.
+*
+* Container for errors that are received in the most recently finished measurment period
+*
+*/
+typedef struct {
+   u16_t    nrBitErrors;        /**< no of pre RS bit errors          */
+   u16_t    nrSymbolErrors;     /**< no of pre RS symbol errors       */
+   u16_t    nrPacketErrors;     /**< no of pre RS packet errors       */
+   u16_t    nrFailures;         /**< no of post RS failures to decode */
+   u16_t    nrSncParFailCount;  /**< no of post RS bit erros          */
+} DRXJRSErrors_t, *pDRXJRSErrors_t;
+
+/**
+* /struct DRXJCfgVSBMisc_t
+* symbol error rate
+*/
+typedef struct{
+   u32_t    symbError;        /**< symbol error rate sps */
+}DRXJCfgVSBMisc_t, *pDRXJCfgVSBMisc_t;
+
+/**
+* /enum DRXJMpegOutputClockRate_t
+* Mpeg output clock rate.
+*
+*/
+typedef enum {
+   DRXJ_MPEG_START_WIDTH_1CLKCYC,
+   DRXJ_MPEG_START_WIDTH_8CLKCYC
+} DRXJMpegStartWidth_t, *pDRXJMpegStartWidth_t;
+
+/**
+* /enum DRXJMpegOutputClockRate_t
+* Mpeg output clock rate.
+*
+*/
+typedef enum {
+   DRXJ_MPEGOUTPUT_CLOCK_RATE_AUTO,
+   DRXJ_MPEGOUTPUT_CLOCK_RATE_75973K,
+   DRXJ_MPEGOUTPUT_CLOCK_RATE_50625K,
+   DRXJ_MPEGOUTPUT_CLOCK_RATE_37968K,
+   DRXJ_MPEGOUTPUT_CLOCK_RATE_30375K,
+   DRXJ_MPEGOUTPUT_CLOCK_RATE_25313K,
+   DRXJ_MPEGOUTPUT_CLOCK_RATE_21696K
+} DRXJMpegOutputClockRate_t, *pDRXJMpegOutputClockRate_t;
+
+/**
+* /struct DRXJCfgMisc_t
+* Change TEI bit of MPEG output
+* reverse MPEG output bit order
+* set MPEG output clock rate
+*/
+typedef struct{
+   Bool_t                     disableTEIHandling;     /**< if TRUE pass (not change) TEI bit */
+   Bool_t                     bitReverseMpegOutout;   /**< if TRUE, parallel: msb on MD0; serial: lsb out first */
+   DRXJMpegOutputClockRate_t  mpegOutputClockRate;    /**< set MPEG output clock rate that overwirtes the derived one from symbol rate */
+   DRXJMpegStartWidth_t       mpegStartWidth;         /**< set MPEG output start width */
+}DRXJCfgMpegOutputMisc_t, *pDRXJCfgMpegOutputMisc_t;
+
+/**
+* /enum DRXJXtalFreq_t
+* Supported external crystal reference frequency.
+*/
+typedef enum{
+   DRXJ_XTAL_FREQ_RSVD,
+   DRXJ_XTAL_FREQ_27MHZ,
+   DRXJ_XTAL_FREQ_20P25MHZ,
+   DRXJ_XTAL_FREQ_4MHZ
+}DRXJXtalFreq_t, *pDRXJXtalFreq_t;
+
+/**
+* /enum DRXJXtalFreq_t
+* Supported external crystal reference frequency.
+*/
+typedef enum{
+   DRXJ_I2C_SPEED_400KBPS,
+   DRXJ_I2C_SPEED_100KBPS
+}DRXJI2CSpeed_t, *pDRXJI2CSpeed_t;
+
+/**
+* /struct DRXJCfgHwCfg_t
+* Get hw configuration, such as crystal reference frequency, I2C speed, etc...
+*/
+typedef struct{
+   DRXJXtalFreq_t    xtalFreq;     /**< crystal reference frequency */
+   DRXJI2CSpeed_t    i2cSpeed;     /**< 100 or 400 kbps */
+}DRXJCfgHwCfg_t, *pDRXJCfgHwCfg_t;
+
+/*
+ *  DRXJ_CFG_ATV_MISC
+ */
+typedef struct{
+   s16_t                       peakFilter;  /* -8 .. 15 */
+   u16_t                       noiseFilter; /* 0 .. 15 */
+}DRXJCfgAtvMisc_t, *pDRXJCfgAtvMisc_t;
+
+/*
+ *  DRXJCfgOOBMisc_t
+ */
+#define   DRXJ_OOB_STATE_RESET                                        0x0
+#define   DRXJ_OOB_STATE_AGN_HUNT                                     0x1
+#define   DRXJ_OOB_STATE_DGN_HUNT                                     0x2
+#define   DRXJ_OOB_STATE_AGC_HUNT                                     0x3
+#define   DRXJ_OOB_STATE_FRQ_HUNT                                     0x4
+#define   DRXJ_OOB_STATE_PHA_HUNT                                     0x8
+#define   DRXJ_OOB_STATE_TIM_HUNT                                     0x10
+#define   DRXJ_OOB_STATE_EQU_HUNT                                     0x20
+#define   DRXJ_OOB_STATE_EQT_HUNT                                     0x30
+#define   DRXJ_OOB_STATE_SYNC                                         0x40
+
+typedef struct{
+   DRXJAgcStatus_t   agc;
+   Bool_t            eqLock;
+   Bool_t            symTimingLock;
+   Bool_t            phaseLock;
+   Bool_t            freqLock;
+   Bool_t            digGainLock;
+   Bool_t            anaGainLock;
+   u8_t              state;
+}DRXJCfgOOBMisc_t, *pDRXJCfgOOBMisc_t;
+
+/*
+ *  Index of in array of coef
+ */
+typedef enum {
+   DRXJ_OOB_LO_POW_MINUS0DB  = 0,
+   DRXJ_OOB_LO_POW_MINUS5DB,
+   DRXJ_OOB_LO_POW_MINUS10DB,
+   DRXJ_OOB_LO_POW_MINUS15DB,
+   DRXJ_OOB_LO_POW_MAX
+} DRXJCfgOobLoPower_t, *pDRXJCfgOobLoPower_t;
+
+/*
+ *  DRXJ_CFG_ATV_EQU_COEF
+ */
+typedef struct {
+   s16_t coef0;  /* -256 .. 255 */
+   s16_t coef1;  /* -256 .. 255 */
+   s16_t coef2;  /* -256 .. 255 */
+   s16_t coef3;  /* -256 .. 255 */
+} DRXJCfgAtvEquCoef_t, *pDRXJCfgAtvEquCoef_t;
+
+/*
+ *  Index of in array of coef
+ */
+typedef enum {
+   DRXJ_COEF_IDX_MN = 0,
+   DRXJ_COEF_IDX_FM    ,
+   DRXJ_COEF_IDX_L     ,
+   DRXJ_COEF_IDX_LP    ,
+   DRXJ_COEF_IDX_BG    ,
+   DRXJ_COEF_IDX_DK    ,
+   DRXJ_COEF_IDX_I     ,
+   DRXJ_COEF_IDX_MAX
+} DRXJCoefArrayIndex_t, *pDRXJCoefArrayIndex_t;
+
+/*
+ *  DRXJ_CFG_ATV_OUTPUT
+ */
+
+/**
+* /enum DRXJAttenuation_t
+* Attenuation setting for SIF AGC.
+*
+*/
+typedef enum {
+   DRXJ_SIF_ATTENUATION_0DB,
+   DRXJ_SIF_ATTENUATION_3DB,
+   DRXJ_SIF_ATTENUATION_6DB,
+   DRXJ_SIF_ATTENUATION_9DB
+} DRXJSIFAttenuation_t, *pDRXJSIFAttenuation_t;
+
+/**
+* /struct DRXJCfgAtvOutput_t
+* SIF attenuation setting.
+*
+*/
+typedef struct {
+   Bool_t               enableCVBSOutput; /* TRUE= enabled */
+   Bool_t               enableSIFOutput;  /* TRUE= enabled */
+   DRXJSIFAttenuation_t sifAttenuation;
+} DRXJCfgAtvOutput_t, *pDRXJCfgAtvOutput_t;
+
+/*
+   DRXJ_CFG_ATV_AGC_STATUS (get only)
+*/
+/* TODO : AFE interface not yet finished, subject to change */
+typedef struct {
+   u16_t rfAgcGain       ; /* 0 .. 877 uA */
+   u16_t ifAgcGain       ; /* 0 .. 877  uA */
+   s16_t videoAgcGain    ; /* -75 .. 1972 in 0.1 dB steps */
+   s16_t audioAgcGain    ; /* -4 .. 1020 in 0.1 dB steps */
+   u16_t rfAgcLoopGain   ; /* 0 .. 7 */
+   u16_t ifAgcLoopGain   ; /* 0 .. 7 */
+   u16_t videoAgcLoopGain; /* 0 .. 7 */
+} DRXJCfgAtvAgcStatus_t, *pDRXJCfgAtvAgcStatus_t;
+
+/*============================================================================*/
+/*============================================================================*/
+/*== CTRL related data structures ============================================*/
+/*============================================================================*/
+/*============================================================================*/
+
+/* NONE */
+
+/*============================================================================*/
+/*============================================================================*/
+
+/*========================================*/
+/**
+* /struct DRXJData_t
+* DRXJ specific attributes.
+*
+* Global data container for DRXJ specific data.
+*
+*/
+typedef struct {
+   /* device capabilties (determined during DRX_Open()) */
+   Bool_t             hasLNA;             /**< TRUE if LNA (aka PGA) present */
+   Bool_t             hasOOB;             /**< TRUE if OOB supported */
+   Bool_t             hasNTSC;            /**< TRUE if NTSC supported */
+   Bool_t             hasBTSC;            /**< TRUE if BTSC supported */
+   Bool_t             hasSMATX;           /**< TRUE if mat_tx is available */
+   Bool_t             hasSMARX;           /**< TRUE if mat_rx is available */
+   Bool_t             hasGPIO;            /**< TRUE if GPIO is available */
+   Bool_t             hasIRQN;            /**< TRUE if IRQN is available */
+   /* A1/A2/A... */
+   u8_t               mfx;                /**< metal fix */
+
+   /* tuner settings */
+   Bool_t             mirrorFreqSpectOOB; /**< tuner inversion (TRUE = tuner mirrors the signal */
+
+   /* standard/channel settings */
+   DRXStandard_t      standard;           /**< current standard information                     */
+   DRXConstellation_t constellation;      /**< current constellation                            */
+   DRXFrequency_t     frequency;          /**< center signal frequency in KHz                   */
+   DRXBandwidth_t     currBandwidth;      /**< current channel bandwidth                        */
+   DRXMirror_t        mirror;             /**< current channel mirror                           */
+
+   /* signal quality information */
+   u32_t              fecBitsDesired;     /**< BER accounting period                            */
+   u16_t              fecVdPlen;          /**< no of trellis symbols: VD SER measurement period */
+   u16_t              qamVdPrescale;      /**< Viterbi Measurement Prescale                     */
+   u16_t              qamVdPeriod;        /**< Viterbi Measurement period                       */
+   u16_t              fecRsPlen;          /**< defines RS BER measurement period                */
+   u16_t              fecRsPrescale;      /**< ReedSolomon Measurement Prescale                 */
+   u16_t              fecRsPeriod;        /**< ReedSolomon Measurement period                   */
+   Bool_t             resetPktErrAcc;     /**< Set a flag to reset accumulated packet error     */
+   u16_t              pktErrAccStart;     /**< Set a flag to reset accumulated packet error     */
+
+   /* HI configuration */
+   u16_t              HICfgTimingDiv;     /**< HI Configure() parameter 2                       */
+   u16_t              HICfgBridgeDelay;   /**< HI Configure() parameter 3                       */
+   u16_t              HICfgWakeUpKey;     /**< HI Configure() parameter 4                       */
+   u16_t              HICfgCtrl;          /**< HI Configure() parameter 5                       */
+   u16_t              HICfgTransmit;      /**< HI Configure() parameter 6                       */
+
+   /* UIO configuartion */
+   DRXUIOMode_t       uioSmaRxMode;       /**< current mode of SmaRx pin                        */
+   DRXUIOMode_t       uioSmaTxMode;       /**< current mode of SmaTx pin                        */
+   DRXUIOMode_t       uioGPIOMode;        /**< current mode of ASEL pin                         */
+   DRXUIOMode_t       uioIRQNMode;        /**< current mode of IRQN pin                         */
+
+   /* IQM fs frequecy shift and inversion */
+   u32_t              iqmFsRateOfs;        /**< frequency shifter setting after setchannel      */
+   Bool_t             posImage;            /**< Ture: positive image                            */
+   /* IQM RC frequecy shift */
+   u32_t              iqmRcRateOfs;        /**< frequency shifter setting after setchannel      */
+
+   /* ATV configuartion */
+   u32_t              atvCfgChangedFlags; /**< flag: flags cfg changes */
+   s16_t              atvTopEqu0[DRXJ_COEF_IDX_MAX];         /**< shadow of ATV_TOP_EQU0__A */
+   s16_t              atvTopEqu1[DRXJ_COEF_IDX_MAX];         /**< shadow of ATV_TOP_EQU1__A */
+   s16_t              atvTopEqu2[DRXJ_COEF_IDX_MAX];         /**< shadow of ATV_TOP_EQU2__A */
+   s16_t              atvTopEqu3[DRXJ_COEF_IDX_MAX];         /**< shadow of ATV_TOP_EQU3__A */
+   Bool_t             phaseCorrectionBypass; /**< flag: TRUE=bypass */
+   s16_t              atvTopVidPeak;      /**< shadow of ATV_TOP_VID_PEAK__A */
+   u16_t              atvTopNoiseTh;      /**< shadow of ATV_TOP_NOISE_TH__A */
+   Bool_t             enableCVBSOutput;   /**< flag CVBS ouput enable */
+   Bool_t             enableSIFOutput;    /**< flag SIF ouput enable */
+   DRXJSIFAttenuation_t
+		      sifAttenuation;     /**< current SIF att setting */
+   /* Agc configuration for QAM and VSB */
+   DRXJCfgAgc_t       qamRfAgcCfg;        /**< qam RF AGC config */
+   DRXJCfgAgc_t       qamIfAgcCfg;        /**< qam IF AGC config */
+   DRXJCfgAgc_t       vsbRfAgcCfg;        /**< vsb RF AGC config */
+   DRXJCfgAgc_t       vsbIfAgcCfg;        /**< vsb IF AGC config */
+
+   /* PGA gain configuration for QAM and VSB */
+   u16_t              qamPgaCfg;          /**< qam PGA config */
+   u16_t              vsbPgaCfg;          /**< vsb PGA config */
+
+   /* Pre SAW configuration for QAM and VSB */
+   DRXJCfgPreSaw_t    qamPreSawCfg;       /**< qam pre SAW config */
+   DRXJCfgPreSaw_t    vsbPreSawCfg;       /**< qam pre SAW config */
+
+   /* Version information */
+   char               vText[2][12];       /**< allocated text versions */
+   DRXVersion_t       vVersion[2];        /**< allocated versions structs */
+   DRXVersionList_t   vListElements[2];   /**< allocated version list */
+
+   /* smart antenna configuration */
+   Bool_t             smartAntInverted;
+
+   /* Tracking filter setting for OOB */
+   u16_t              oobTrkFilterCfg[8];
+   Bool_t             oobPowerOn;
+
+   /* MPEG static bitrate setting */
+   u32_t              mpegTsStaticBitrate;  /**< bitrate static MPEG output */
+   Bool_t             disableTEIhandling;   /**< MPEG TS TEI handling */
+   Bool_t             bitReverseMpegOutout; /**< MPEG output bit order */
+   DRXJMpegOutputClockRate_t
+		      mpegOutputClockRate;  /**< MPEG output clock rate */
+   DRXJMpegStartWidth_t
+		      mpegStartWidth;       /**< MPEG Start width */
+
+   /* Pre SAW & Agc configuration for ATV */
+   DRXJCfgPreSaw_t    atvPreSawCfg;       /**< atv pre SAW config */
+   DRXJCfgAgc_t       atvRfAgcCfg;        /**< atv RF AGC config */
+   DRXJCfgAgc_t       atvIfAgcCfg;        /**< atv IF AGC config */
+   u16_t              atvPgaCfg;          /**< atv pga config    */
+
+   u32_t              currSymbolRate;
+
+   /* pin-safe mode */
+   Bool_t pdrSafeMode;                      /**< PDR safe mode activated      */
+   u16_t  pdrSafeRestoreValGpio;
+   u16_t  pdrSafeRestoreValVSync;
+   u16_t  pdrSafeRestoreValSmaRx;
+   u16_t  pdrSafeRestoreValSmaTx;
+
+   /* OOB pre-saw value */
+   u16_t              oobPreSaw;
+   DRXJCfgOobLoPower_t oobLoPow;
+
+   DRXAudData_t   audData;          /**< audio storage                  */
+
+} DRXJData_t, *pDRXJData_t;
+
+/*-------------------------------------------------------------------------
+Access MACROS
+-------------------------------------------------------------------------*/
+/**
+* \brief Compilable references to attributes
+* \param d pointer to demod instance
+*
+* Used as main reference to an attribute field.
+* Can be used by both macro implementation and function implementation.
+* These macros are defined to avoid duplication of code in macro and function
+* definitions that handle access of demod common or extended attributes.
+*
+*/
+
+#define DRXJ_ATTR_BTSC_DETECT( d )                       \
+			(((pDRXJData_t)(d)->myExtAttr)->audData.btscDetect)
+
+/**
+* \brief Actual access macros
+* \param d pointer to demod instance
+* \param x value to set or to get
+*
+* SET macros must be used to set the value of an attribute.
+* GET macros must be used to retrieve the value of an attribute.
+* Depending on the value of DRX_USE_ACCESS_FUNCTIONS the macro's will be
+* substituted by "direct-access-inline-code" or a function call.
+*
+*/
+#define DRXJ_GET_BTSC_DETECT( d, x )                     \
+   do {                                                  \
+      (x) = DRXJ_ATTR_BTSC_DETECT(( d );                 \
+   } while(0)
+
+#define DRXJ_SET_BTSC_DETECT( d, x )                     \
+   do {                                                  \
+      DRXJ_ATTR_BTSC_DETECT( d ) = (x);                  \
+   } while(0)
+
+
+/*-------------------------------------------------------------------------
+DEFINES
+-------------------------------------------------------------------------*/
+
+/**
+* \def DRXJ_NTSC_CARRIER_FREQ_OFFSET
+* \brief Offset from picture carrier to centre frequency in kHz, in RF domain
+*
+* For NTSC standard.
+* NTSC channels are listed by their picture carrier frequency (Fpc).
+* The function DRX_CTRL_SET_CHANNEL requires the centre frequency as input.
+* In case the tuner module is not used the DRX-J requires that the tuner is
+* tuned to the centre frequency of the channel:
+*
+* Fcentre = Fpc + DRXJ_NTSC_CARRIER_FREQ_OFFSET
+*
+*/
+#define DRXJ_NTSC_CARRIER_FREQ_OFFSET           ((DRXFrequency_t)(1750))
+
+/**
+* \def DRXJ_PAL_SECAM_BG_CARRIER_FREQ_OFFSET
+* \brief Offset from picture carrier to centre frequency in kHz, in RF domain
+*
+* For PAL/SECAM - BG standard. This define is needed in case the tuner module
+* is NOT used. PAL/SECAM channels are listed by their picture carrier frequency (Fpc).
+* The DRX-J requires that the tuner is tuned to:
+* Fpc + DRXJ_PAL_SECAM_BG_CARRIER_FREQ_OFFSET
+*
+* In case the tuner module is used the drxdriver takes care of this.
+* In case the tuner module is NOT used the application programmer must take
+* care of this.
+*
+*/
+#define DRXJ_PAL_SECAM_BG_CARRIER_FREQ_OFFSET   ((DRXFrequency_t)(2375))
+
+/**
+* \def DRXJ_PAL_SECAM_DKIL_CARRIER_FREQ_OFFSET
+* \brief Offset from picture carrier to centre frequency in kHz, in RF domain
+*
+* For PAL/SECAM - DK, I, L standards. This define is needed in case the tuner module
+* is NOT used. PAL/SECAM channels are listed by their picture carrier frequency (Fpc).
+* The DRX-J requires that the tuner is tuned to:
+* Fpc + DRXJ_PAL_SECAM_DKIL_CARRIER_FREQ_OFFSET
+*
+* In case the tuner module is used the drxdriver takes care of this.
+* In case the tuner module is NOT used the application programmer must take
+* care of this.
+*
+*/
+#define DRXJ_PAL_SECAM_DKIL_CARRIER_FREQ_OFFSET ((DRXFrequency_t)(2775))
+
+/**
+* \def DRXJ_PAL_SECAM_LP_CARRIER_FREQ_OFFSET
+* \brief Offset from picture carrier to centre frequency in kHz, in RF domain
+*
+* For PAL/SECAM - LP standard. This define is needed in case the tuner module
+* is NOT used. PAL/SECAM channels are listed by their picture carrier frequency (Fpc).
+* The DRX-J requires that the tuner is tuned to:
+* Fpc + DRXJ_PAL_SECAM_LP_CARRIER_FREQ_OFFSET
+*
+* In case the tuner module is used the drxdriver takes care of this.
+* In case the tuner module is NOT used the application programmer must take
+* care of this.
+*/
+#define DRXJ_PAL_SECAM_LP_CARRIER_FREQ_OFFSET   ((DRXFrequency_t)(-3255))
+
+/**
+* \def DRXJ_FM_CARRIER_FREQ_OFFSET
+* \brief Offset from sound carrier to centre frequency in kHz, in RF domain
+*
+* For FM standard.
+* FM channels are listed by their sound carrier frequency (Fsc).
+* The function DRX_CTRL_SET_CHANNEL requires the Ffm frequency (see below) as
+* input.
+* In case the tuner module is not used the DRX-J requires that the tuner is
+* tuned to the Ffm frequency of the channel.
+*
+* Ffm = Fsc + DRXJ_FM_CARRIER_FREQ_OFFSET
+*
+*/
+#define DRXJ_FM_CARRIER_FREQ_OFFSET             ((DRXFrequency_t)(-3000))
+
+/* Revision types -------------------------------------------------------*/
+
+#define DRXJ_TYPE_ID (0x3946000DUL)
+
+/* Macros ---------------------------------------------------------------*/
+
+/* Convert OOB lock status to string */
+#define DRXJ_STR_OOB_LOCKSTATUS(x) ( \
+   ( x == DRX_NEVER_LOCK               )  ?  "Never"           : \
+   ( x == DRX_NOT_LOCKED               )  ?  "No"              : \
+   ( x == DRX_LOCKED                   )  ?  "Locked"          : \
+   ( x == DRX_LOCK_STATE_1             )  ?  "AGC lock"        : \
+   ( x == DRX_LOCK_STATE_2             )  ?  "sync lock"       : \
+					     "(Invalid)" )
+
+/*-------------------------------------------------------------------------
+ENUM
+-------------------------------------------------------------------------*/
+
+/*-------------------------------------------------------------------------
+STRUCTS
+-------------------------------------------------------------------------*/
+
+/*-------------------------------------------------------------------------
+Exported FUNCTIONS
+-------------------------------------------------------------------------*/
+
+extern DRXStatus_t DRXJ_Open(pDRXDemodInstance_t  demod);
+extern DRXStatus_t DRXJ_Close(pDRXDemodInstance_t demod);
+extern DRXStatus_t DRXJ_Ctrl(pDRXDemodInstance_t  demod,
+				 DRXCtrlIndex_t       ctrl,
+				 void                 *ctrlData);
+
+/*-------------------------------------------------------------------------
+Exported GLOBAL VARIABLES
+-------------------------------------------------------------------------*/
+extern DRXAccessFunc_t     drxDapDRXJFunct_g;
+extern DRXDemodFunc_t      DRXJFunctions_g;
+extern DRXJData_t          DRXJData_g;
+extern I2CDeviceAddr_t     DRXJDefaultAddr_g;
+extern DRXCommonAttr_t     DRXJDefaultCommAttr_g;
+extern DRXDemodInstance_t  DRXJDefaultDemod_g;
+
+/*-------------------------------------------------------------------------
+THE END
+-------------------------------------------------------------------------*/
+#ifdef __cplusplus
+}
+#endif
+#endif /* __DRXJ_H__ */
