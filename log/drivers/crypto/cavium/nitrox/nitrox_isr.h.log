commit 7a027b57f959660547779b6290a3b50ff1601980
Author: Srikanth, Jampala <Jampala.Srikanth@cavium.com>
Date:   Wed Nov 21 09:52:24 2018 +0000

    crypto: cavium/nitrox - Enable interrups for PF in SR-IOV mode.
    
    Enable the available interrupt vectors for PF in SR-IOV Mode.
    Only single vector entry 192 is valid of PF. This is used to
    notify any hardware errors and mailbox messages from VF(s).
    
    Signed-off-by: Srikanth Jampala <Jampala.Srikanth@cavium.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>

diff --git a/drivers/crypto/cavium/nitrox/nitrox_isr.h b/drivers/crypto/cavium/nitrox/nitrox_isr.h
index 63418a6cc52c..1062c9336c1f 100644
--- a/drivers/crypto/cavium/nitrox/nitrox_isr.h
+++ b/drivers/crypto/cavium/nitrox/nitrox_isr.h
@@ -6,5 +6,7 @@
 
 int nitrox_register_interrupts(struct nitrox_device *ndev);
 void nitrox_unregister_interrupts(struct nitrox_device *ndev);
+int nitrox_sriov_register_interupts(struct nitrox_device *ndev);
+void nitrox_sriov_unregister_interrupts(struct nitrox_device *ndev);
 
 #endif /* __NITROX_ISR_H */

commit 5155e118dda982342c2d21ecb292c8cc8b566e8d
Author: Srikanth Jampala <Jampala.Srikanth@cavium.com>
Date:   Sat Sep 29 13:49:10 2018 +0530

    crypto: cavium/nitrox - use pci_alloc_irq_vectors() while enabling MSI-X.
    
    replace pci_enable_msix_exact() with pci_alloc_irq_vectors(). get the
    required vector count from pci_msix_vec_count().
    use struct nitrox_q_vector as the argument to tasklets.
    
    Signed-off-by: Srikanth Jampala <Jampala.Srikanth@cavium.com>
    Reviewed-by: Gadam Sreerama <sgadam@cavium.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>

diff --git a/drivers/crypto/cavium/nitrox/nitrox_isr.h b/drivers/crypto/cavium/nitrox/nitrox_isr.h
new file mode 100644
index 000000000000..63418a6cc52c
--- /dev/null
+++ b/drivers/crypto/cavium/nitrox/nitrox_isr.h
@@ -0,0 +1,10 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+#ifndef __NITROX_ISR_H
+#define __NITROX_ISR_H
+
+#include "nitrox_dev.h"
+
+int nitrox_register_interrupts(struct nitrox_device *ndev);
+void nitrox_unregister_interrupts(struct nitrox_device *ndev);
+
+#endif /* __NITROX_ISR_H */
