commit 24552d10339f13d2174e013002da3ed90e26adda
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Mon Jun 15 12:31:14 2020 +0200

    efi/libstub: Fix missing-prototype warning for skip_spaces()
    
    Include <linux/string.h> into skip_spaces.c to silence a compiler
    warning about a missing prototype.
    
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>

diff --git a/drivers/firmware/efi/libstub/skip_spaces.c b/drivers/firmware/efi/libstub/skip_spaces.c
index a700b3c7f7d0..159fb4e456c6 100644
--- a/drivers/firmware/efi/libstub/skip_spaces.c
+++ b/drivers/firmware/efi/libstub/skip_spaces.c
@@ -1,6 +1,7 @@
 // SPDX-License-Identifier: GPL-2.0
 
 #include <linux/ctype.h>
+#include <linux/string.h>
 #include <linux/types.h>
 
 char *skip_spaces(const char *str)

commit 91d150c0cc637b9d9d6394936add7cd2b7ccc410
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Mon Feb 10 17:02:46 2020 +0100

    efi/libstub: Clean up command line parsing routine
    
    We currently parse the command non-destructively, to avoid having to
    allocate memory for a copy before passing it to the standard parsing
    routines that are used by the core kernel, and which modify the input
    to delineate the parsed tokens with NUL characters.
    
    Instead, we call strstr() and strncmp() to go over the input multiple
    times, and match prefixes rather than tokens, which implies that we
    would match, e.g., 'nokaslrfoo' in the stub and disable KASLR, while
    the kernel would disregard the option and run with KASLR enabled.
    
    In order to avoid having to reason about whether and how this behavior
    may be abused, let's clean up the parsing routines, and rebuild them
    on top of the existing helpers.
    
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>

diff --git a/drivers/firmware/efi/libstub/skip_spaces.c b/drivers/firmware/efi/libstub/skip_spaces.c
new file mode 100644
index 000000000000..a700b3c7f7d0
--- /dev/null
+++ b/drivers/firmware/efi/libstub/skip_spaces.c
@@ -0,0 +1,11 @@
+// SPDX-License-Identifier: GPL-2.0
+
+#include <linux/ctype.h>
+#include <linux/types.h>
+
+char *skip_spaces(const char *str)
+{
+	while (isspace(*str))
+		++str;
+	return (char *)str;
+}
