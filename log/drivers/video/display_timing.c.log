commit 55716d26439f5c4008b0bcb7f17d1f7c0d8fbcfc
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Sat Jun 1 10:08:42 2019 +0200

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 428
    
    Based on 1 normalized pattern(s):
    
      this file is released under the gplv2
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-only
    
    has been chosen to replace the boilerplate/reference in 68 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Armijn Hemel <armijn@tjaldur.nl>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190531190114.292346262@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/video/display_timing.c b/drivers/video/display_timing.c
index 5e1822cef571..daca8227bfc6 100644
--- a/drivers/video/display_timing.c
+++ b/drivers/video/display_timing.c
@@ -1,9 +1,8 @@
+// SPDX-License-Identifier: GPL-2.0-only
 /*
  * generic display timing functions
  *
  * Copyright (c) 2012 Steffen Trumtrar <s.trumtrar@pengutronix.de>, Pengutronix
- *
- * This file is released under the GPLv2
  */
 
 #include <linux/export.h>

commit 8714c0cecfc28f7ce73a520be4831f09743c4fd7
Author: Steffen Trumtrar <s.trumtrar@pengutronix.de>
Date:   Mon Dec 17 14:20:17 2012 +0100

    video: add display_timing and videomode
    
    Add display_timing structure and the according helper functions. This allows
    the description of a display via its supported timing parameters.
    
    Also, add helper functions to convert from display timings to a generic videomode
    structure.
    
    The struct display_timing specifies all needed parameters to describe the signal
    properties of a display in one mode. This includes
        - ranges for signals that may have min-, max- and typical values
        - single integers for signals that can be on, off or are ignored
        - booleans for signals that are either on or off
    
    As a display may support multiple modes like this, a struct display_timings is
    added, that holds all given struct display_timing pointers and declares the
    native mode of the display.
    
    Although a display may state that a signal can be in a range, it is driven with
    fixed values that indicate a videomode. Therefore graphic drivers don't need all
    the information of struct display_timing, but would generate a videomode from
    the given set of supported signal timings and work with that.
    
    The video subsystems all define their own structs that describe a mode and work
    with that (e.g. fb_videomode or drm_display_mode). To slowly replace all those
    various structures and allow code reuse across those subsystems, add struct
    videomode as a generic description.
    
    This patch only includes the most basic fields in struct videomode. All missing
    fields that are needed to have a really generic video mode description can be
    added at a later stage.
    
    Signed-off-by: Steffen Trumtrar <s.trumtrar@pengutronix.de>
    Reviewed-by: Thierry Reding <thierry.reding@avionic-design.de>
    Acked-by: Thierry Reding <thierry.reding@avionic-design.de>
    Tested-by: Thierry Reding <thierry.reding@avionic-design.de>
    Tested-by: Philipp Zabel <p.zabel@pengutronix.de>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Acked-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Tested-by: Afzal Mohammed <Afzal@ti.com>
    Tested-by: Rob Clark <robclark@gmail.com>
    Tested-by: Leela Krishna Amudala <leelakrishna.a@gmail.com>

diff --git a/drivers/video/display_timing.c b/drivers/video/display_timing.c
new file mode 100644
index 000000000000..5e1822cef571
--- /dev/null
+++ b/drivers/video/display_timing.c
@@ -0,0 +1,24 @@
+/*
+ * generic display timing functions
+ *
+ * Copyright (c) 2012 Steffen Trumtrar <s.trumtrar@pengutronix.de>, Pengutronix
+ *
+ * This file is released under the GPLv2
+ */
+
+#include <linux/export.h>
+#include <linux/slab.h>
+#include <video/display_timing.h>
+
+void display_timings_release(struct display_timings *disp)
+{
+	if (disp->timings) {
+		unsigned int i;
+
+		for (i = 0; i < disp->num_timings; i++)
+			kfree(disp->timings[i]);
+		kfree(disp->timings);
+	}
+	kfree(disp);
+}
+EXPORT_SYMBOL_GPL(display_timings_release);
