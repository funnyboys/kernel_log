commit 55716d26439f5c4008b0bcb7f17d1f7c0d8fbcfc
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Sat Jun 1 10:08:42 2019 +0200

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 428
    
    Based on 1 normalized pattern(s):
    
      this file is released under the gplv2
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-only
    
    has been chosen to replace the boilerplate/reference in 68 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Armijn Hemel <armijn@tjaldur.nl>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190531190114.292346262@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/video/videomode.c b/drivers/video/videomode.c
index df375c96c5d3..2ecf80c082e4 100644
--- a/drivers/video/videomode.c
+++ b/drivers/video/videomode.c
@@ -1,9 +1,8 @@
+// SPDX-License-Identifier: GPL-2.0-only
 /*
  * generic display timing functions
  *
  * Copyright (c) 2012 Steffen Trumtrar <s.trumtrar@pengutronix.de>, Pengutronix
- *
- * This file is released under the GPLv2
  */
 
 #include <linux/errno.h>

commit 6cd2c7db41eab204b6474534df4ca68a7dc53d86
Author: Tomi Valkeinen <tomi.valkeinen@ti.com>
Date:   Thu Mar 21 14:20:12 2013 +0200

    videomode: videomode_from_timing work
    
    We currently have videomode_from_timing(), which takes one
    display_timing entry from display_timings.
    
    To make it easier to use display_timing without display_timings, this
    patch renames videomode_from_timing() to videomode_from_timings(), and
    adds a new videomode_from_timing() which just converts a given
    display_timing to videomode.
    
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Cc: Steffen Trumtrar <s.trumtrar@pengutronix.de>

diff --git a/drivers/video/videomode.c b/drivers/video/videomode.c
index a3d95f263cd5..df375c96c5d3 100644
--- a/drivers/video/videomode.c
+++ b/drivers/video/videomode.c
@@ -11,15 +11,9 @@
 #include <video/display_timing.h>
 #include <video/videomode.h>
 
-int videomode_from_timing(const struct display_timings *disp,
-			  struct videomode *vm, unsigned int index)
+void videomode_from_timing(const struct display_timing *dt,
+			  struct videomode *vm)
 {
-	struct display_timing *dt;
-
-	dt = display_timings_get(disp, index);
-	if (!dt)
-		return -EINVAL;
-
 	vm->pixelclock = dt->pixelclock.typ;
 	vm->hactive = dt->hactive.typ;
 	vm->hfront_porch = dt->hfront_porch.typ;
@@ -32,7 +26,20 @@ int videomode_from_timing(const struct display_timings *disp,
 	vm->vsync_len = dt->vsync_len.typ;
 
 	vm->flags = dt->flags;
+}
+EXPORT_SYMBOL_GPL(videomode_from_timing);
+
+int videomode_from_timings(const struct display_timings *disp,
+			  struct videomode *vm, unsigned int index)
+{
+	struct display_timing *dt;
+
+	dt = display_timings_get(disp, index);
+	if (!dt)
+		return -EINVAL;
+
+	videomode_from_timing(dt, vm);
 
 	return 0;
 }
-EXPORT_SYMBOL_GPL(videomode_from_timing);
+EXPORT_SYMBOL_GPL(videomode_from_timings);

commit 694f050650798b82f2c7b9983e80117d58b34bf3
Author: Tomi Valkeinen <tomi.valkeinen@ti.com>
Date:   Tue Mar 12 10:35:16 2013 +0200

    videomode: remove timing_entry_index
    
    Display timing's fields have minimum, typical and maximum values. These
    can be accessed by using timing_entry_index enum, and
    display_timing_get_value() function.
    
    There's no real need for this extra complexity. The values can be
    accessed more easily by just using the min/typ/max fields.
    
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Cc: Steffen Trumtrar <s.trumtrar@pengutronix.de>

diff --git a/drivers/video/videomode.c b/drivers/video/videomode.c
index 810afff79bc1..a3d95f263cd5 100644
--- a/drivers/video/videomode.c
+++ b/drivers/video/videomode.c
@@ -20,16 +20,16 @@ int videomode_from_timing(const struct display_timings *disp,
 	if (!dt)
 		return -EINVAL;
 
-	vm->pixelclock = display_timing_get_value(&dt->pixelclock, TE_TYP);
-	vm->hactive = display_timing_get_value(&dt->hactive, TE_TYP);
-	vm->hfront_porch = display_timing_get_value(&dt->hfront_porch, TE_TYP);
-	vm->hback_porch = display_timing_get_value(&dt->hback_porch, TE_TYP);
-	vm->hsync_len = display_timing_get_value(&dt->hsync_len, TE_TYP);
+	vm->pixelclock = dt->pixelclock.typ;
+	vm->hactive = dt->hactive.typ;
+	vm->hfront_porch = dt->hfront_porch.typ;
+	vm->hback_porch = dt->hback_porch.typ;
+	vm->hsync_len = dt->hsync_len.typ;
 
-	vm->vactive = display_timing_get_value(&dt->vactive, TE_TYP);
-	vm->vfront_porch = display_timing_get_value(&dt->vfront_porch, TE_TYP);
-	vm->vback_porch = display_timing_get_value(&dt->vback_porch, TE_TYP);
-	vm->vsync_len = display_timing_get_value(&dt->vsync_len, TE_TYP);
+	vm->vactive = dt->vactive.typ;
+	vm->vfront_porch = dt->vfront_porch.typ;
+	vm->vback_porch = dt->vback_porch.typ;
+	vm->vsync_len = dt->vsync_len.typ;
 
 	vm->flags = dt->flags;
 

commit 06a3307975aac2d5b5a0e0f2e05d23e769f176b4
Author: Tomi Valkeinen <tomi.valkeinen@ti.com>
Date:   Tue Mar 12 10:26:45 2013 +0200

    videomode: combine videomode dmt_flags and data_flags
    
    Both videomode and display_timing contain flags describing the modes.
    These are stored in dmt_flags and data_flags. There's no need to
    separate these flags, and having separate fields just makes the flags
    more difficult to use.
    
    This patch combines the fields and renames VESA_DMT_* flags to
    DISPLAY_FLAGS_*.
    
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Cc: Steffen Trumtrar <s.trumtrar@pengutronix.de>

diff --git a/drivers/video/videomode.c b/drivers/video/videomode.c
index 21c47a202afa..810afff79bc1 100644
--- a/drivers/video/videomode.c
+++ b/drivers/video/videomode.c
@@ -31,8 +31,7 @@ int videomode_from_timing(const struct display_timings *disp,
 	vm->vback_porch = display_timing_get_value(&dt->vback_porch, TE_TYP);
 	vm->vsync_len = display_timing_get_value(&dt->vsync_len, TE_TYP);
 
-	vm->dmt_flags = dt->dmt_flags;
-	vm->data_flags = dt->data_flags;
+	vm->flags = dt->flags;
 
 	return 0;
 }

commit 8714c0cecfc28f7ce73a520be4831f09743c4fd7
Author: Steffen Trumtrar <s.trumtrar@pengutronix.de>
Date:   Mon Dec 17 14:20:17 2012 +0100

    video: add display_timing and videomode
    
    Add display_timing structure and the according helper functions. This allows
    the description of a display via its supported timing parameters.
    
    Also, add helper functions to convert from display timings to a generic videomode
    structure.
    
    The struct display_timing specifies all needed parameters to describe the signal
    properties of a display in one mode. This includes
        - ranges for signals that may have min-, max- and typical values
        - single integers for signals that can be on, off or are ignored
        - booleans for signals that are either on or off
    
    As a display may support multiple modes like this, a struct display_timings is
    added, that holds all given struct display_timing pointers and declares the
    native mode of the display.
    
    Although a display may state that a signal can be in a range, it is driven with
    fixed values that indicate a videomode. Therefore graphic drivers don't need all
    the information of struct display_timing, but would generate a videomode from
    the given set of supported signal timings and work with that.
    
    The video subsystems all define their own structs that describe a mode and work
    with that (e.g. fb_videomode or drm_display_mode). To slowly replace all those
    various structures and allow code reuse across those subsystems, add struct
    videomode as a generic description.
    
    This patch only includes the most basic fields in struct videomode. All missing
    fields that are needed to have a really generic video mode description can be
    added at a later stage.
    
    Signed-off-by: Steffen Trumtrar <s.trumtrar@pengutronix.de>
    Reviewed-by: Thierry Reding <thierry.reding@avionic-design.de>
    Acked-by: Thierry Reding <thierry.reding@avionic-design.de>
    Tested-by: Thierry Reding <thierry.reding@avionic-design.de>
    Tested-by: Philipp Zabel <p.zabel@pengutronix.de>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Acked-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Tested-by: Afzal Mohammed <Afzal@ti.com>
    Tested-by: Rob Clark <robclark@gmail.com>
    Tested-by: Leela Krishna Amudala <leelakrishna.a@gmail.com>

diff --git a/drivers/video/videomode.c b/drivers/video/videomode.c
new file mode 100644
index 000000000000..21c47a202afa
--- /dev/null
+++ b/drivers/video/videomode.c
@@ -0,0 +1,39 @@
+/*
+ * generic display timing functions
+ *
+ * Copyright (c) 2012 Steffen Trumtrar <s.trumtrar@pengutronix.de>, Pengutronix
+ *
+ * This file is released under the GPLv2
+ */
+
+#include <linux/errno.h>
+#include <linux/export.h>
+#include <video/display_timing.h>
+#include <video/videomode.h>
+
+int videomode_from_timing(const struct display_timings *disp,
+			  struct videomode *vm, unsigned int index)
+{
+	struct display_timing *dt;
+
+	dt = display_timings_get(disp, index);
+	if (!dt)
+		return -EINVAL;
+
+	vm->pixelclock = display_timing_get_value(&dt->pixelclock, TE_TYP);
+	vm->hactive = display_timing_get_value(&dt->hactive, TE_TYP);
+	vm->hfront_porch = display_timing_get_value(&dt->hfront_porch, TE_TYP);
+	vm->hback_porch = display_timing_get_value(&dt->hback_porch, TE_TYP);
+	vm->hsync_len = display_timing_get_value(&dt->hsync_len, TE_TYP);
+
+	vm->vactive = display_timing_get_value(&dt->vactive, TE_TYP);
+	vm->vfront_porch = display_timing_get_value(&dt->vfront_porch, TE_TYP);
+	vm->vback_porch = display_timing_get_value(&dt->vback_porch, TE_TYP);
+	vm->vsync_len = display_timing_get_value(&dt->vsync_len, TE_TYP);
+
+	vm->dmt_flags = dt->dmt_flags;
+	vm->data_flags = dt->data_flags;
+
+	return 0;
+}
+EXPORT_SYMBOL_GPL(videomode_from_timing);
