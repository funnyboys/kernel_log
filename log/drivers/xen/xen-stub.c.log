commit 4359375c31677ea4f7c2a8200165afdfb0d10a6b
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Sun May 19 15:51:42 2019 +0200

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 12
    
    Based on 1 normalized pattern(s):
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license as published by
      the free software foundation either version 2 of the license or at
      your option any later version this program is distributed in the
      hope that it will be useful but without any warranty without even
      the implied warranty of merchantability or fitness for a particular
      purpose good title or non infringement see the gnu general public
      license for more details
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-or-later
    
    has been chosen to replace the boilerplate/reference in 7 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Steve Winslow <swinslow@gmail.com>
    Reviewed-by: Jilayne Lovejoy <opensource@jilayne.com>
    Reviewed-by: Kate Stewart <kstewart@linuxfoundation.org>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190519154041.727898173@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/xen/xen-stub.c b/drivers/xen/xen-stub.c
index bbef194c5b01..3be4e74660b5 100644
--- a/drivers/xen/xen-stub.c
+++ b/drivers/xen/xen-stub.c
@@ -1,3 +1,4 @@
+// SPDX-License-Identifier: GPL-2.0-or-later
 /*
  * xen-stub.c - stub drivers to reserve space for Xen
  *
@@ -7,17 +8,6 @@
  *
  * Copyright (C) 2012 Oracle Inc
  *    Author: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or (at
- * your option) any later version.
- *
- * This program is distributed in the hope that it will be useful, but
- * WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, GOOD TITLE or
- * NON INFRINGEMENT.  See the GNU General Public License for more
- * details.
  */
 
 #include <linux/kernel.h>

commit d2e0bca377dc0f85acd19df465122f361a6c9e99
Author: Liu Jinsong <jinsong.liu@intel.com>
Date:   Tue Mar 12 06:42:16 2013 +0800

    xen/acpi: remove redundant acpi/acpi_drivers.h include
    
    It's redundant since linux/acpi.h has include it when CONFIG_ACPI enabled,
    and when CONFIG_ACPI disabled it will trigger compiling warning
    
    In file included from drivers/xen/xen-stub.c:28:0:
    include/acpi/acpi_drivers.h:103:31:
    warning: 'struct acpi_device' declared inside parameter list [enabled by default]
    include/acpi/acpi_drivers.h:103:31:
    warning: its scope is only this definition or declaration, which is probably not what you want [enabled by default]
    include/acpi/acpi_drivers.h:107:43:
    warning: 'struct acpi_pci_root' declared inside parameter list [enabled by default]
    
    Reported-by: Wu Fengguang <fengguang.wu@intel.com>
    Signed-off-by: Liu Jinsong <jinsong.liu@intel.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>

diff --git a/drivers/xen/xen-stub.c b/drivers/xen/xen-stub.c
index d85e411cbf89..bbef194c5b01 100644
--- a/drivers/xen/xen-stub.c
+++ b/drivers/xen/xen-stub.c
@@ -25,7 +25,6 @@
 #include <linux/export.h>
 #include <linux/types.h>
 #include <linux/acpi.h>
-#include <acpi/acpi_drivers.h>
 #include <xen/acpi.h>
 
 #ifdef CONFIG_ACPI

commit b22ff77b82598ff131d215627533e09e4a472220
Author: Liu Jinsong <jinsong.liu@intel.com>
Date:   Thu Jan 24 22:12:30 2013 +0800

    xen/stub: driver for CPU hotplug
    
    Add Xen stub driver for CPU hotplug, early occupy to block native,
    will be replaced later by real Xen processor driver module.
    
    Signed-off-by: Liu Jinsong <jinsong.liu@intel.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>

diff --git a/drivers/xen/xen-stub.c b/drivers/xen/xen-stub.c
index 811152f67137..d85e411cbf89 100644
--- a/drivers/xen/xen-stub.c
+++ b/drivers/xen/xen-stub.c
@@ -28,12 +28,12 @@
 #include <acpi/acpi_drivers.h>
 #include <xen/acpi.h>
 
+#ifdef CONFIG_ACPI
+
 /*--------------------------------------------
 	stub driver for Xen memory hotplug
 --------------------------------------------*/
 
-#ifdef CONFIG_ACPI
-
 static const struct acpi_device_id memory_device_ids[] = {
 	{ACPI_MEMORY_DEVICE_HID, 0},
 	{"", 0},
@@ -63,4 +63,39 @@ void xen_stub_memory_device_exit(void)
 }
 EXPORT_SYMBOL_GPL(xen_stub_memory_device_exit);
 
+
+/*--------------------------------------------
+	stub driver for Xen cpu hotplug
+--------------------------------------------*/
+
+static const struct acpi_device_id processor_device_ids[] = {
+	{ACPI_PROCESSOR_OBJECT_HID, 0},
+	{ACPI_PROCESSOR_DEVICE_HID, 0},
+	{"", 0},
+};
+
+static struct acpi_driver xen_stub_processor_driver = {
+	/* same name as native processor driver to block native loaded */
+	.name = "processor",
+	.class = ACPI_PROCESSOR_CLASS,
+	.ids = processor_device_ids,
+};
+
+int xen_stub_processor_init(void)
+{
+	if (!xen_initial_domain())
+		return -ENODEV;
+
+	/* just reserve space for Xen, block native driver loaded */
+	return acpi_bus_register_driver(&xen_stub_processor_driver);
+}
+EXPORT_SYMBOL_GPL(xen_stub_processor_init);
+subsys_initcall(xen_stub_processor_init);
+
+void xen_stub_processor_exit(void)
+{
+	acpi_bus_unregister_driver(&xen_stub_processor_driver);
+}
+EXPORT_SYMBOL_GPL(xen_stub_processor_exit);
+
 #endif

commit dcb93b96cec723783a81e8cac7df62feaf964792
Author: Liu Jinsong <jinsong.liu@intel.com>
Date:   Thu Jan 24 20:16:59 2013 +0800

    xen/stub: driver for memory hotplug
    
    This patch create a file (xen-stub.c) for Xen stub drivers.
    Xen stub drivers are used to reserve space for Xen drivers, i.e.
    memory hotplug and cpu hotplug, and to block native drivers loaded,
    so that real Xen drivers can be modular and loaded on demand.
    
    This patch is specific for Xen memory hotplug (other Xen logic
    can add stub drivers on their own). The xen stub driver will
    occupied earlier via subsys_initcall (than native memory hotplug
    driver via module_init and so blocking native). Later real Xen
    memory hotplug logic will unregister the stub driver and register
    itself to take effect on demand.
    
    Signed-off-by: Liu Jinsong <jinsong.liu@intel.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>

diff --git a/drivers/xen/xen-stub.c b/drivers/xen/xen-stub.c
new file mode 100644
index 000000000000..811152f67137
--- /dev/null
+++ b/drivers/xen/xen-stub.c
@@ -0,0 +1,66 @@
+/*
+ * xen-stub.c - stub drivers to reserve space for Xen
+ *
+ * Copyright (C) 2012 Intel Corporation
+ *    Author: Liu Jinsong <jinsong.liu@intel.com>
+ *    Author: Jiang Yunhong <yunhong.jiang@intel.com>
+ *
+ * Copyright (C) 2012 Oracle Inc
+ *    Author: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or (at
+ * your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, GOOD TITLE or
+ * NON INFRINGEMENT.  See the GNU General Public License for more
+ * details.
+ */
+
+#include <linux/kernel.h>
+#include <linux/init.h>
+#include <linux/export.h>
+#include <linux/types.h>
+#include <linux/acpi.h>
+#include <acpi/acpi_drivers.h>
+#include <xen/acpi.h>
+
+/*--------------------------------------------
+	stub driver for Xen memory hotplug
+--------------------------------------------*/
+
+#ifdef CONFIG_ACPI
+
+static const struct acpi_device_id memory_device_ids[] = {
+	{ACPI_MEMORY_DEVICE_HID, 0},
+	{"", 0},
+};
+
+static struct acpi_driver xen_stub_memory_device_driver = {
+	/* same name as native memory driver to block native loaded */
+	.name = "acpi_memhotplug",
+	.class = ACPI_MEMORY_DEVICE_CLASS,
+	.ids = memory_device_ids,
+};
+
+int xen_stub_memory_device_init(void)
+{
+	if (!xen_initial_domain())
+		return -ENODEV;
+
+	/* just reserve space for Xen, block native driver loaded */
+	return acpi_bus_register_driver(&xen_stub_memory_device_driver);
+}
+EXPORT_SYMBOL_GPL(xen_stub_memory_device_init);
+subsys_initcall(xen_stub_memory_device_init);
+
+void xen_stub_memory_device_exit(void)
+{
+	acpi_bus_unregister_driver(&xen_stub_memory_device_driver);
+}
+EXPORT_SYMBOL_GPL(xen_stub_memory_device_exit);
+
+#endif
