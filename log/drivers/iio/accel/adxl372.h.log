commit 94dbb46c7a8f0ee27394bc81f34b666dc4a14b71
Author: Stefan Popa <stefan.popa@analog.com>
Date:   Tue Sep 4 17:12:32 2018 +0300

    iio: adxl372: Add support for I2C communication
    
    The adxl372 is designed to communicate in either SPI or I2C protocol. It
    autodetects the format being used, requiring no configuration control to
    select the format.
    
    Signed-off-by: Stefan Popa <stefan.popa@analog.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>

diff --git a/drivers/iio/accel/adxl372.h b/drivers/iio/accel/adxl372.h
index 5da89b19c17e..80a0aa9714fc 100644
--- a/drivers/iio/accel/adxl372.h
+++ b/drivers/iio/accel/adxl372.h
@@ -8,6 +8,8 @@
 #ifndef _ADXL372_H_
 #define _ADXL372_H_
 
+#define ADXL372_REVID	0x03
+
 int adxl372_probe(struct device *dev, struct regmap *regmap,
 		  int irq, const char *name);
 bool adxl372_readable_noinc_reg(struct device *dev, unsigned int reg);

commit d9e8fd0421c2047ac233141612a433490963d211
Author: Stefan Popa <stefan.popa@analog.com>
Date:   Tue Sep 4 17:11:31 2018 +0300

    iio: adxl372: Refactor the driver
    
    This patch restructures the existing adxl372 driver by adding a module for
    SPI and a header file, while the baseline module deals with the chip-logic.
    
    This is a necessary step, as this driver should support in the future
    a similar device which differs only in the type of interface used (I2C
    instead of SPI).
    
    Signed-off-by: Stefan Popa <stefan.popa@analog.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>

diff --git a/drivers/iio/accel/adxl372.h b/drivers/iio/accel/adxl372.h
new file mode 100644
index 000000000000..5da89b19c17e
--- /dev/null
+++ b/drivers/iio/accel/adxl372.h
@@ -0,0 +1,15 @@
+/* SPDX-License-Identifier: GPL-2.0+ */
+/*
+ * ADXL372 3-Axis Digital Accelerometer
+ *
+ * Copyright 2018 Analog Devices Inc.
+ */
+
+#ifndef _ADXL372_H_
+#define _ADXL372_H_
+
+int adxl372_probe(struct device *dev, struct regmap *regmap,
+		  int irq, const char *name);
+bool adxl372_readable_noinc_reg(struct device *dev, unsigned int reg);
+
+#endif /* _ADXL372_H_ */
