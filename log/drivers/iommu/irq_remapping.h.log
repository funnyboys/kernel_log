commit 4505153954fdb1465d2b178288a9bf646f2a2166
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed May 29 16:57:47 2019 -0700

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 333
    
    Based on 1 normalized pattern(s):
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license version 2 as
      published by the free software foundation this program is
      distributed in the hope that it will be useful but without any
      warranty without even the implied warranty of merchantability or
      fitness for a particular purpose see the gnu general public license
      for more details you should have received a copy of the gnu general
      public license along with this program if not write to the free
      software foundation inc 59 temple place suite 330 boston ma 02111
      1307 usa
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-only
    
    has been chosen to replace the boilerplate/reference in 136 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Alexios Zavras <alexios.zavras@intel.com>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190530000436.384967451@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/iommu/irq_remapping.h b/drivers/iommu/irq_remapping.h
index f8609e9f1f5d..6a190d504eb6 100644
--- a/drivers/iommu/irq_remapping.h
+++ b/drivers/iommu/irq_remapping.h
@@ -1,20 +1,8 @@
+/* SPDX-License-Identifier: GPL-2.0-only */
 /*
  * Copyright (C) 2012 Advanced Micro Devices, Inc.
  * Author: Joerg Roedel <jroedel@suse.de>
  *
- * This program is free software; you can redistribute it and/or modify it
- * under the terms of the GNU General Public License version 2 as published
- * by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
- *
  * This header file contains stuff that is shared between different interrupt
  * remapping drivers but with no need to be visible outside of the IOMMU layer.
  */

commit 29217a4746835fef35279abbd12c1a1efe83bfca
Author: Lan Tianyu <Tianyu.Lan@microsoft.com>
Date:   Wed Feb 27 22:54:04 2019 +0800

    iommu/hyper-v: Add Hyper-V stub IOMMU driver
    
    On the bare metal, enabling X2APIC mode requires interrupt remapping
    function which helps to deliver irq to cpu with 32-bit APIC ID.
    Hyper-V doesn't provide interrupt remapping function so far and Hyper-V
    MSI protocol already supports to deliver interrupt to the CPU whose
    virtual processor index is more than 255. IO-APIC interrupt still has
    8-bit APIC ID limitation.
    
    This patch is to add Hyper-V stub IOMMU driver in order to enable
    X2APIC mode successfully in Hyper-V Linux guest. The driver returns X2APIC
    interrupt remapping capability when X2APIC mode is available. Otherwise,
    it creates a Hyper-V irq domain to limit IO-APIC interrupts' affinity
    and make sure cpus assigned with IO-APIC interrupt have 8-bit APIC ID.
    
    Define 24 IO-APIC remapping entries because Hyper-V only expose one
    single IO-APIC and one IO-APIC has 24 pins according IO-APIC spec(
    https://pdos.csail.mit.edu/6.828/2016/readings/ia32/ioapic.pdf).
    
    Reviewed-by: Michael Kelley <mikelley@microsoft.com>
    Signed-off-by: Lan Tianyu <Tianyu.Lan@microsoft.com>
    Signed-off-by: Joerg Roedel <jroedel@suse.de>

diff --git a/drivers/iommu/irq_remapping.h b/drivers/iommu/irq_remapping.h
index 0afef6e43be4..f8609e9f1f5d 100644
--- a/drivers/iommu/irq_remapping.h
+++ b/drivers/iommu/irq_remapping.h
@@ -64,6 +64,7 @@ struct irq_remap_ops {
 
 extern struct irq_remap_ops intel_irq_remap_ops;
 extern struct irq_remap_ops amd_iommu_irq_ops;
+extern struct irq_remap_ops hyperv_irq_remap_ops;
 
 #else  /* CONFIG_IRQ_REMAP */
 

commit 8a2b7d142e7ac477d52f5f92251e59fc136d7ddd
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon Jun 4 17:33:56 2018 +0200

    irq_remapping: Use apic_ack_irq()
    
    To address the EBUSY fail of interrupt affinity settings in case that the
    previous setting has not been cleaned up yet, use the new apic_ack_irq()
    function instead of the special ir_ack_apic_edge() implementation which is
    merily a wrapper around ack_APIC_irq().
    
    Preparatory change for the real fix
    
    Fixes: dccfe3147b42 ("x86/vector: Simplify vector move cleanup")
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Song Liu <songliubraving@fb.com>
    Cc: Joerg Roedel <jroedel@suse.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Song Liu <liu.song.a23@gmail.com>
    Cc: Dmitry Safonov <0x7f454c46@gmail.com>
    Cc: stable@vger.kernel.org
    Cc: Mike Travis <mike.travis@hpe.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Tariq Toukan <tariqt@mellanox.com>
    Link: https://lkml.kernel.org/r/20180604162224.555716895@linutronix.de

diff --git a/drivers/iommu/irq_remapping.h b/drivers/iommu/irq_remapping.h
index 039c7af7b190..0afef6e43be4 100644
--- a/drivers/iommu/irq_remapping.h
+++ b/drivers/iommu/irq_remapping.h
@@ -65,8 +65,6 @@ struct irq_remap_ops {
 extern struct irq_remap_ops intel_irq_remap_ops;
 extern struct irq_remap_ops amd_iommu_irq_ops;
 
-extern void ir_ack_apic_edge(struct irq_data *data);
-
 #else  /* CONFIG_IRQ_REMAP */
 
 #define irq_remapping_enabled 0

commit 3d9b98f4ec17ba8d555f1972a3870035a87574a0
Author: Feng Wu <feng.wu@intel.com>
Date:   Tue Jun 9 13:20:35 2015 +0800

    iommu, x86: Setup Posted-Interrupts capability for Intel iommu
    
    Set Posted-Interrupts capability for Intel iommu when Interrupt
    Remapping is enabled, clear it when disabled.
    
    Signed-off-by: Feng Wu <feng.wu@intel.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Joerg Roedel <joro@8bytes.org>
    Cc: jiang.liu@linux.intel.com
    Cc: iommu@lists.linux-foundation.org
    Cc: dwmw2@infradead.org
    Link: http://lkml.kernel.org/r/1433827237-3382-9-git-send-email-feng.wu@intel.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

diff --git a/drivers/iommu/irq_remapping.h b/drivers/iommu/irq_remapping.h
index b6ca30d31986..039c7af7b190 100644
--- a/drivers/iommu/irq_remapping.h
+++ b/drivers/iommu/irq_remapping.h
@@ -34,6 +34,8 @@ extern int disable_sourceid_checking;
 extern int no_x2apic_optout;
 extern int irq_remapping_enabled;
 
+extern int disable_irq_post;
+
 struct irq_remap_ops {
 	/* The supported capabilities */
 	int capability;
@@ -69,6 +71,7 @@ extern void ir_ack_apic_edge(struct irq_data *data);
 
 #define irq_remapping_enabled 0
 #define irq_remap_broken      0
+#define disable_irq_post      1
 
 #endif /* CONFIG_IRQ_REMAP */
 

commit 6f281923949a4944a7d5625e4f900ec02fefee59
Author: Feng Wu <feng.wu@intel.com>
Date:   Tue Jun 9 13:20:28 2015 +0800

    iommu: Add new member capability to struct irq_remap_ops
    
    Add a new member 'capability' to struct irq_remap_ops for storing
    information about available capabilities such as VT-d
    Posted-Interrupts.
    
    Signed-off-by: Feng Wu <feng.wu@intel.com>
    Reviewed-by: Jiang Liu <jiang.liu@linux.intel.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Joerg Roedel <joro@8bytes.org>
    Cc: iommu@lists.linux-foundation.org
    Cc: dwmw2@infradead.org
    Link: http://lkml.kernel.org/r/1433827237-3382-2-git-send-email-feng.wu@intel.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

diff --git a/drivers/iommu/irq_remapping.h b/drivers/iommu/irq_remapping.h
index 91d5a119956a..b6ca30d31986 100644
--- a/drivers/iommu/irq_remapping.h
+++ b/drivers/iommu/irq_remapping.h
@@ -35,6 +35,9 @@ extern int no_x2apic_optout;
 extern int irq_remapping_enabled;
 
 struct irq_remap_ops {
+	/* The supported capabilities */
+	int capability;
+
 	/* Initializes hardware and makes it ready for remapping interrupts */
 	int  (*prepare)(void);
 

commit 4c77c983868ef652bcfc207b40054620219ac2a3
Author: Jiang Liu <jiang.liu@linux.intel.com>
Date:   Tue Apr 14 10:29:49 2015 +0800

    irq_remapping: Clean up unused interfaces
    
    Now we have converted to hierarchical irqdomains, so clean up unused
    interfaces.
    
    Signed-off-by: Jiang Liu <jiang.liu@linux.intel.com>
    Tested-by: Joerg Roedel <jroedel@suse.de>
    Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: David Cohen <david.a.cohen@linux.intel.com>
    Cc: Sander Eikelenboom <linux@eikelenboom.it>
    Cc: David Vrabel <david.vrabel@citrix.com>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: iommu@lists.linux-foundation.org
    Cc: Bjorn Helgaas <bhelgaas@google.com>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Rafael J. Wysocki <rjw@rjwysocki.net>
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Cc: Yinghai Lu <yinghai@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dimitri Sivanich <sivanich@sgi.com>
    Cc: Joerg Roedel <joro@8bytes.org>
    Link: http://lkml.kernel.org/r/1428978610-28986-13-git-send-email-jiang.liu@linux.intel.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

diff --git a/drivers/iommu/irq_remapping.h b/drivers/iommu/irq_remapping.h
index 16b7d814e6fe..91d5a119956a 100644
--- a/drivers/iommu/irq_remapping.h
+++ b/drivers/iommu/irq_remapping.h
@@ -24,11 +24,7 @@
 
 #ifdef CONFIG_IRQ_REMAP
 
-struct IO_APIC_route_entry;
-struct io_apic_irq_attr;
 struct irq_data;
-struct cpumask;
-struct pci_dev;
 struct msi_msg;
 struct irq_domain;
 struct irq_alloc_info;
@@ -54,18 +50,6 @@ struct irq_remap_ops {
 	/* Enable fault handling */
 	int  (*enable_faulting)(void);
 
-	/* IO-APIC setup routine */
-	int (*setup_ioapic_entry)(int irq, struct IO_APIC_route_entry *,
-				  unsigned int, int,
-				  struct io_apic_irq_attr *);
-
-	/* Set the CPU affinity of a remapped interrupt */
-	int (*set_affinity)(struct irq_data *data, const struct cpumask *mask,
-			    bool force);
-
-	/* Free an IRQ */
-	int (*free_irq)(int);
-
 	/* Get the irqdomain associated the IOMMU device */
 	struct irq_domain *(*get_ir_irq_domain)(struct irq_alloc_info *);
 

commit 7a53a12162cbe5feb66380b96cc794a031a8f39a
Author: Jiang Liu <jiang.liu@linux.intel.com>
Date:   Mon Apr 13 14:11:39 2015 +0800

    irq_remapping: Clean up unused MSI related code
    
    Now MSI interrupt has been converted to new hierarchical irqdomain
    interfaces, so remove legacy MSI related code and interfaces.
    
    Signed-off-by: Jiang Liu <jiang.liu@linux.intel.com>
    Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: David Cohen <david.a.cohen@linux.intel.com>
    Cc: Sander Eikelenboom <linux@eikelenboom.it>
    Cc: David Vrabel <david.vrabel@citrix.com>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: iommu@lists.linux-foundation.org
    Cc: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Cc: Joerg Roedel <jroedel@suse.de>
    Cc: Bjorn Helgaas <bhelgaas@google.com>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Rafael J. Wysocki <rjw@rjwysocki.net>
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Cc: Yinghai Lu <yinghai@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dimitri Sivanich <sivanich@sgi.com>
    Cc: Joerg Roedel <joro@8bytes.org>
    Cc: Yijing Wang <wangyijing@huawei.com>
    Link: http://lkml.kernel.org/r/1428905519-23704-18-git-send-email-jiang.liu@linux.intel.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

diff --git a/drivers/iommu/irq_remapping.h b/drivers/iommu/irq_remapping.h
index 3e109b1ea688..16b7d814e6fe 100644
--- a/drivers/iommu/irq_remapping.h
+++ b/drivers/iommu/irq_remapping.h
@@ -66,20 +66,6 @@ struct irq_remap_ops {
 	/* Free an IRQ */
 	int (*free_irq)(int);
 
-	/* Create MSI msg to use for interrupt remapping */
-	void (*compose_msi_msg)(struct pci_dev *,
-				unsigned int, unsigned int,
-				struct msi_msg *, u8);
-
-	/* Allocate remapping resources for MSI */
-	int (*msi_alloc_irq)(struct pci_dev *, int, int);
-
-	/* Setup the remapped MSI irq */
-	int (*msi_setup_irq)(struct pci_dev *, unsigned int, int, int);
-
-	/* Setup interrupt remapping for an HPET MSI */
-	int (*alloc_hpet_msi)(unsigned int, unsigned int);
-
 	/* Get the irqdomain associated the IOMMU device */
 	struct irq_domain *(*get_ir_irq_domain)(struct irq_alloc_info *);
 

commit 947045a2aac1157c85a24984c9a8128846ae7266
Author: Jiang Liu <jiang.liu@linux.intel.com>
Date:   Mon Apr 13 14:11:30 2015 +0800

    irq_remapping: Introduce new interfaces to support hierarchical irqdomains
    
    Introduce new interfaces for interrupt remapping drivers to support
    hierarchical irqdomains:
    
    1) irq_remapping_get_ir_irq_domain(): get irqdomain associated with an
       interrupt remapping unit. IOAPIC/HPET drivers use this interface to
       get parent interrupt remapping irqdomain.
    
    2) irq_remapping_get_irq_domain(): get irqdomain for an IRQ allocation.
       This is mainly used to support MSI irqdomain. We must build one MSI
       irqdomain for each interrupt remapping unit. MSI driver calls this
       interface to get MSI irqdomain associated with an IR irqdomain which
       manages the PCI devices. In a further step we will store the irqdomain
       pointer in the device struct to avoid this call in the irq allocation
       path.
    
    Architecture specific hooks:
    1) arch_get_ir_parent_domain(): get parent irqdomain for IR irqdomain,
       which is x86_vector_domain on x86 platforms.
    2) arch_create_msi_irq_domain(): create an MSI irqdomain associated with
       the interrupt remapping unit.
    
    We also add following callbacks into struct irq_remap_ops:
            struct irq_domain *(*get_ir_irq_domain)(struct irq_alloc_info *);
            struct irq_domain *(*get_irq_domain)(struct irq_alloc_info *);
    
    Once all clients of IR have been converted to the new hierarchical irqdomain
    interfaces, we will:
    1) Remove set_ioapic_entry, set_affinity, free_irq, compose_msi_msg,
       msi_alloc_irq, msi_setup_irq, setup_hpet_msi from struct remap_osp
    2) Remove setup_ioapic_remapped_entry, free_remapped_irq,
       compose_remapped_msi_msg, setup_hpet_msi_remapped, setup_remapped_irq.
    3) Simplify x86_io_apic_ops and x86_msi.
    
    We can achieve a way clearer architecture with all these changes
    applied.
    
    Signed-off-by: Jiang Liu <jiang.liu@linux.intel.com>
    Acked-by: Joerg Roedel <jroedel@suse.de>
    Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: David Cohen <david.a.cohen@linux.intel.com>
    Cc: Sander Eikelenboom <linux@eikelenboom.it>
    Cc: David Vrabel <david.vrabel@citrix.com>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: iommu@lists.linux-foundation.org
    Cc: Bjorn Helgaas <bhelgaas@google.com>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Rafael J. Wysocki <rjw@rjwysocki.net>
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Cc: Yinghai Lu <yinghai@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dimitri Sivanich <sivanich@sgi.com>
    Cc: Joerg Roedel <joro@8bytes.org>
    Link: http://lkml.kernel.org/r/1428905519-23704-9-git-send-email-jiang.liu@linux.intel.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

diff --git a/drivers/iommu/irq_remapping.h b/drivers/iommu/irq_remapping.h
index 7c70cc29ffe6..3e109b1ea688 100644
--- a/drivers/iommu/irq_remapping.h
+++ b/drivers/iommu/irq_remapping.h
@@ -30,6 +30,8 @@ struct irq_data;
 struct cpumask;
 struct pci_dev;
 struct msi_msg;
+struct irq_domain;
+struct irq_alloc_info;
 
 extern int irq_remap_broken;
 extern int disable_sourceid_checking;
@@ -77,11 +79,19 @@ struct irq_remap_ops {
 
 	/* Setup interrupt remapping for an HPET MSI */
 	int (*alloc_hpet_msi)(unsigned int, unsigned int);
+
+	/* Get the irqdomain associated the IOMMU device */
+	struct irq_domain *(*get_ir_irq_domain)(struct irq_alloc_info *);
+
+	/* Get the MSI irqdomain associated with the IOMMU device */
+	struct irq_domain *(*get_irq_domain)(struct irq_alloc_info *);
 };
 
 extern struct irq_remap_ops intel_irq_remap_ops;
 extern struct irq_remap_ops amd_iommu_irq_ops;
 
+extern void ir_ack_apic_edge(struct irq_data *data);
+
 #else  /* CONFIG_IRQ_REMAP */
 
 #define irq_remapping_enabled 0

commit a26be149facb22d30cd92cadb26f651d6fe802c9
Merge: cdd305454ebd a20cc76b9efa
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Feb 12 09:16:56 2015 -0800

    Merge tag 'iommu-updates-v3.20' of git://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu
    
    Pull IOMMU updates from Joerg Roedel:
     "This time with:
    
       - Generic page-table framework for ARM IOMMUs using the LPAE
         page-table format, ARM-SMMU and Renesas IPMMU make use of it
         already.
    
       - Break out the IO virtual address allocator from the Intel IOMMU so
         that it can be used by other DMA-API implementations too.  The
         first user will be the ARM64 common DMA-API implementation for
         IOMMUs
    
       - Device tree support for Renesas IPMMU
    
       - Various fixes and cleanups all over the place"
    
    * tag 'iommu-updates-v3.20' of git://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu: (36 commits)
      iommu/amd: Convert non-returned local variable to boolean when relevant
      iommu: Update my email address
      iommu/amd: Use wait_event in put_pasid_state_wait
      iommu/amd: Fix amd_iommu_free_device()
      iommu/arm-smmu: Avoid build warning
      iommu/fsl: Various cleanups
      iommu/fsl: Use %pa to print phys_addr_t
      iommu/omap: Print phys_addr_t using %pa
      iommu: Make more drivers depend on COMPILE_TEST
      iommu/ipmmu-vmsa: Fix IOMMU lookup when multiple IOMMUs are registered
      iommu: Disable on !MMU builds
      iommu/fsl: Remove unused fsl_of_pamu_ids[]
      iommu/fsl: Fix section mismatch
      iommu/ipmmu-vmsa: Use the ARM LPAE page table allocator
      iommu: Fix trace_map() to report original iova and original size
      iommu/arm-smmu: add support for iova_to_phys through ATS1PR
      iopoll: Introduce memory-mapped IO polling macros
      iommu/arm-smmu: don't touch the secure STLBIALL register
      iommu/arm-smmu: make use of generic LPAE allocator
      iommu: io-pgtable-arm: add non-secure quirk
      ...

commit 63ce3ae889db917cff0cf0c65c837ca7160c8a83
Author: Joerg Roedel <jroedel@suse.de>
Date:   Wed Feb 4 16:12:55 2015 +0100

    iommu: Update my email address
    
    The AMD address is dead for a long time already, replace it
    with a working one.
    
    Signed-off-by: Joerg Roedel <jroedel@suse.de>

diff --git a/drivers/iommu/irq_remapping.h b/drivers/iommu/irq_remapping.h
index fde250f86e60..a2b750110bd1 100644
--- a/drivers/iommu/irq_remapping.h
+++ b/drivers/iommu/irq_remapping.h
@@ -1,6 +1,6 @@
 /*
  * Copyright (C) 2012 Advanced Micro Devices, Inc.
- * Author: Joerg Roedel <joerg.roedel@amd.com>
+ * Author: Joerg Roedel <jroedel@suse.de>
  *
  * This program is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 as published

commit 7fa1c842caca3b1d8a55a64033403cab8ca8583a
Author: Jiang Liu <jiang.liu@linux.intel.com>
Date:   Wed Jan 7 15:31:42 2015 +0800

    iommu/irq_remapping: Change variable disable_irq_remap to be static
    
    Change variable disable_irq_remap to be static and simplify the code.
    
    Signed-off-by: Jiang Liu <jiang.liu@linux.intel.com>
    Tested-by: Joerg Roedel <joro@8bytes.org>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: iommu@lists.linux-foundation.org
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Yinghai Lu <yinghai@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Link: http://lkml.kernel.org/r/1420615903-28253-16-git-send-email-jiang.liu@linux.intel.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

diff --git a/drivers/iommu/irq_remapping.h b/drivers/iommu/irq_remapping.h
index a8edfea0ab5d..c448eb48340a 100644
--- a/drivers/iommu/irq_remapping.h
+++ b/drivers/iommu/irq_remapping.h
@@ -31,7 +31,6 @@ struct cpumask;
 struct pci_dev;
 struct msi_msg;
 
-extern int disable_irq_remap;
 extern int irq_remap_broken;
 extern int disable_sourceid_checking;
 extern int no_x2apic_optout;
@@ -86,7 +85,6 @@ extern struct irq_remap_ops amd_iommu_irq_ops;
 #else  /* CONFIG_IRQ_REMAP */
 
 #define irq_remapping_enabled 0
-#define disable_irq_remap     1
 #define irq_remap_broken      0
 
 #endif /* CONFIG_IRQ_REMAP */

commit c392f56c946033bd136043079a62b9188888828d
Author: Jiang Liu <jiang.liu@linux.intel.com>
Date:   Wed Jan 7 15:31:40 2015 +0800

    iommu/irq_remapping: Kill function irq_remapping_supported() and related code
    
    Simplify irq_remapping code by killing irq_remapping_supported() and
    related interfaces.
    
    Joerg posted a similar patch at https://lkml.org/lkml/2014/12/15/490,
    so assume an signed-off from Joerg.
    
    Signed-off-by: Jiang Liu <jiang.liu@linux.intel.com>
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Tested-by: Joerg Roedel <joro@8bytes.org>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: iommu@lists.linux-foundation.org
    Cc: H. Peter Anvin <hpa@linux.intel.com>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Yinghai Lu <yinghai@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: David Rientjes <rientjes@google.com>
    Cc: HATAYAMA Daisuke <d.hatayama@jp.fujitsu.com>
    Cc: Jan Beulich <JBeulich@suse.com>
    Cc: Richard Weinberger <richard@nod.at>
    Cc: Oren Twaig <oren@scalemp.com>
    Link: http://lkml.kernel.org/r/1420615903-28253-14-git-send-email-jiang.liu@linux.intel.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

diff --git a/drivers/iommu/irq_remapping.h b/drivers/iommu/irq_remapping.h
index fde250f86e60..a8edfea0ab5d 100644
--- a/drivers/iommu/irq_remapping.h
+++ b/drivers/iommu/irq_remapping.h
@@ -38,9 +38,6 @@ extern int no_x2apic_optout;
 extern int irq_remapping_enabled;
 
 struct irq_remap_ops {
-	/* Check whether Interrupt Remapping is supported */
-	int (*supported)(void);
-
 	/* Initializes hardware and makes it ready for remapping interrupts */
 	int  (*prepare)(void);
 

commit 5fc24d8cb9d43e0db335137051092da03a6845dc
Author: Yijing Wang <wangyijing@huawei.com>
Date:   Wed Sep 17 17:32:19 2014 +0800

    iommu/irq_remapping: Fix the regression of hpet irq remapping
    
    Commit 71054d8841b4 ("x86, hpet: Introduce x86_msi_ops.setup_hpet_msi")
    introduced x86_msi_ops.setup_hpet_msi to setup hpet MSI irq
    when irq remapping enabled. This caused a regression of
    hpet MSI irq remapping.
    
    Original code flow before commit 71054d8841b4:
    hpet_setup_msi_irq()
            arch_setup_hpet_msi()
                    setup_hpet_msi_remapped()
                            remap_ops->setup_hpet_msi()
                                    alloc_irte()
                    msi_compose_msg()
                    hpet_msi_write()
                    ...
    
    Current code flow after commit 71054d8841b4:
    hpet_setup_msi_irq()
            x86_msi.setup_hpet_msi()
                    setup_hpet_msi_remapped()
                            intel_setup_hpet_msi()
                                    alloc_irte()
    
    Currently, we only call alloc_irte() for hpet MSI, but
    do not composed and wrote its msg...
    
    Signed-off-by: Yijing Wang <wangyijing@huawei.com>
    Signed-off-by: Joerg Roedel <jroedel@suse.de>

diff --git a/drivers/iommu/irq_remapping.h b/drivers/iommu/irq_remapping.h
index 90c4dae5a46b..fde250f86e60 100644
--- a/drivers/iommu/irq_remapping.h
+++ b/drivers/iommu/irq_remapping.h
@@ -80,7 +80,7 @@ struct irq_remap_ops {
 	int (*msi_setup_irq)(struct pci_dev *, unsigned int, int, int);
 
 	/* Setup interrupt remapping for an HPET MSI */
-	int (*setup_hpet_msi)(unsigned int, unsigned int);
+	int (*alloc_hpet_msi)(unsigned int, unsigned int);
 };
 
 extern struct irq_remap_ops intel_irq_remap_ops;

commit 03bbcb2e7e292838bb0244f5a7816d194c911d62
Author: Neil Horman <nhorman@tuxdriver.com>
Date:   Tue Apr 16 16:38:32 2013 -0400

    iommu/vt-d: add quirk for broken interrupt remapping on 55XX chipsets
    
    A few years back intel published a spec update:
    http://www.intel.com/content/dam/doc/specification-update/5520-and-5500-chipset-ioh-specification-update.pdf
    
    For the 5520 and 5500 chipsets which contained an errata (specificially errata
    53), which noted that these chipsets can't properly do interrupt remapping, and
    as a result the recommend that interrupt remapping be disabled in bios.  While
    many vendors have a bios update to do exactly that, not all do, and of course
    not all users update their bios to a level that corrects the problem.  As a
    result, occasionally interrupts can arrive at a cpu even after affinity for that
    interrupt has be moved, leading to lost or spurrious interrupts (usually
    characterized by the message:
    kernel: do_IRQ: 7.71 No irq handler for vector (irq -1)
    
    There have been several incidents recently of people seeing this error, and
    investigation has shown that they have system for which their BIOS level is such
    that this feature was not properly turned off.  As such, it would be good to
    give them a reminder that their systems are vulnurable to this problem.  For
    details of those that reported the problem, please see:
    https://bugzilla.redhat.com/show_bug.cgi?id=887006
    
    [ Joerg: Removed CONFIG_IRQ_REMAP ifdef from early-quirks.c ]
    
    Signed-off-by: Neil Horman <nhorman@tuxdriver.com>
    CC: Prarit Bhargava <prarit@redhat.com>
    CC: Don Zickus <dzickus@redhat.com>
    CC: Don Dutile <ddutile@redhat.com>
    CC: Bjorn Helgaas <bhelgaas@google.com>
    CC: Asit Mallick <asit.k.mallick@intel.com>
    CC: David Woodhouse <dwmw2@infradead.org>
    CC: linux-pci@vger.kernel.org
    CC: Joerg Roedel <joro@8bytes.org>
    CC: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    CC: Arkadiusz Miśkiewicz <arekm@maven.pl>
    Signed-off-by: Joerg Roedel <joro@8bytes.org>

diff --git a/drivers/iommu/irq_remapping.h b/drivers/iommu/irq_remapping.h
index ecb637670405..90c4dae5a46b 100644
--- a/drivers/iommu/irq_remapping.h
+++ b/drivers/iommu/irq_remapping.h
@@ -32,6 +32,7 @@ struct pci_dev;
 struct msi_msg;
 
 extern int disable_irq_remap;
+extern int irq_remap_broken;
 extern int disable_sourceid_checking;
 extern int no_x2apic_optout;
 extern int irq_remapping_enabled;
@@ -89,6 +90,7 @@ extern struct irq_remap_ops amd_iommu_irq_ops;
 
 #define irq_remapping_enabled 0
 #define disable_irq_remap     1
+#define irq_remap_broken      0
 
 #endif /* CONFIG_IRQ_REMAP */
 

commit 078e1ee26a061663bd7a4773c06b33cdb997380d
Author: Joerg Roedel <joro@8bytes.org>
Date:   Wed Sep 26 12:44:43 2012 +0200

    x86, irq: Move irq_remapping_enabled declaration to iommu code
    
    Remove the last left-over from this flag from x86 code.
    
    Signed-off-by: Joerg Roedel <joro@8bytes.org>
    Acked-by: Sebastian Andrzej Siewior <sebastian@breakpoint.cc>
    Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>

diff --git a/drivers/iommu/irq_remapping.h b/drivers/iommu/irq_remapping.h
index 95363acb583f..ecb637670405 100644
--- a/drivers/iommu/irq_remapping.h
+++ b/drivers/iommu/irq_remapping.h
@@ -34,6 +34,7 @@ struct msi_msg;
 extern int disable_irq_remap;
 extern int disable_sourceid_checking;
 extern int no_x2apic_optout;
+extern int irq_remapping_enabled;
 
 struct irq_remap_ops {
 	/* Check whether Interrupt Remapping is supported */

commit 6b474b8224cdb473f19e8c925171e608499cc45d
Author: Joerg Roedel <joerg.roedel@amd.com>
Date:   Tue Jun 26 16:46:04 2012 +0200

    iommu/amd: Add initialization routines for AMD interrupt remapping
    
    Add the six routines required to setup interrupt remapping
    with the AMD IOMMU. Also put it all together into the AMD
    specific irq_remap_ops.
    
    Signed-off-by: Joerg Roedel <joerg.roedel@amd.com>

diff --git a/drivers/iommu/irq_remapping.h b/drivers/iommu/irq_remapping.h
index 624d360d9be4..95363acb583f 100644
--- a/drivers/iommu/irq_remapping.h
+++ b/drivers/iommu/irq_remapping.h
@@ -82,6 +82,7 @@ struct irq_remap_ops {
 };
 
 extern struct irq_remap_ops intel_irq_remap_ops;
+extern struct irq_remap_ops amd_iommu_irq_ops;
 
 #else  /* CONFIG_IRQ_REMAP */
 

commit 05152a0494449f60031da683e6d4cd60d0882214
Author: Joerg Roedel <joerg.roedel@amd.com>
Date:   Fri Jun 15 16:53:51 2012 +0200

    iommu/amd: Add slab-cache for irq remapping tables
    
    The irq remapping tables for the AMD IOMMU need to be
    aligned on a 128 byte boundary. Create a seperate slab-cache
    to guarantee this alignment.
    
    Signed-off-by: Joerg Roedel <joerg.roedel@amd.com>

diff --git a/drivers/iommu/irq_remapping.h b/drivers/iommu/irq_remapping.h
index b12974cc1dfe..624d360d9be4 100644
--- a/drivers/iommu/irq_remapping.h
+++ b/drivers/iommu/irq_remapping.h
@@ -83,6 +83,11 @@ struct irq_remap_ops {
 
 extern struct irq_remap_ops intel_irq_remap_ops;
 
+#else  /* CONFIG_IRQ_REMAP */
+
+#define irq_remapping_enabled 0
+#define disable_irq_remap     1
+
 #endif /* CONFIG_IRQ_REMAP */
 
 #endif /* __IRQ_REMAPPING_H */

commit 7eb9ae0799b1e9f0b77733b432bc5f6f055b020b
Author: Suresh Siddha <suresh.b.siddha@intel.com>
Date:   Thu Jun 14 18:28:49 2012 -0700

    irq/apic: Use config_enabled(CONFIG_SMP) checks to clean up irq_set_affinity() for UP
    
    Move the ->irq_set_affinity() routines out of the #ifdef CONFIG_SMP
    sections and use config_enabled(CONFIG_SMP) checks inside those
    routines. Thus making those routines simple null stubs for
    !CONFIG_SMP and retaining those routines with no additional
    runtime overhead for CONFIG_SMP kernels.
    
    Cleans up the ifdef CONFIG_SMP in and around routines related to
    irq_set_affinity in io_apic and irq_remapping subsystems.
    
    Signed-off-by: Suresh Siddha <suresh.b.siddha@intel.com>
    Cc: torvalds@linux-foundation.org
    Cc: joerg.roedel@amd.com
    Cc: Sam Ravnborg <sam@ravnborg.org>
    Cc: Paul Gortmaker <paul.gortmaker@windriver.com>
    Link: http://lkml.kernel.org/r/1339723729.3475.63.camel@sbsiddha-desk.sc.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

diff --git a/drivers/iommu/irq_remapping.h b/drivers/iommu/irq_remapping.h
index be9d72950c51..b12974cc1dfe 100644
--- a/drivers/iommu/irq_remapping.h
+++ b/drivers/iommu/irq_remapping.h
@@ -59,11 +59,9 @@ struct irq_remap_ops {
 				  unsigned int, int,
 				  struct io_apic_irq_attr *);
 
-#ifdef CONFIG_SMP
 	/* Set the CPU affinity of a remapped interrupt */
 	int (*set_affinity)(struct irq_data *data, const struct cpumask *mask,
 			    bool force);
-#endif
 
 	/* Free an IRQ */
 	int (*free_irq)(int);

commit 82b481e80d8a17720b5805393684a95184cfb6bb
Author: Suresh Siddha <suresh.b.siddha@intel.com>
Date:   Tue May 8 00:08:53 2012 -0700

    irq_remap: Fix UP build failure
    
    Fix the below UP build failure with CONFIG_IRQ_REMAP enabled.
    
     drivers/iommu/intel_irq_remapping.c:955:19: error: ‘struct irq_data’ has no member named ‘affinity’
    
    Reported-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Suresh Siddha <suresh.b.siddha@intel.com>
    Cc: joro@8bytes.org
    Cc: iommu@lists.linux-foundation.org
    Cc: Joerg Roedel <joerg.roedel@amd.com>
    Link: http://lkml.kernel.org/r/1336460934-23592-2-git-send-email-suresh.b.siddha@intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

diff --git a/drivers/iommu/irq_remapping.h b/drivers/iommu/irq_remapping.h
index b12974cc1dfe..be9d72950c51 100644
--- a/drivers/iommu/irq_remapping.h
+++ b/drivers/iommu/irq_remapping.h
@@ -59,9 +59,11 @@ struct irq_remap_ops {
 				  unsigned int, int,
 				  struct io_apic_irq_attr *);
 
+#ifdef CONFIG_SMP
 	/* Set the CPU affinity of a remapped interrupt */
 	int (*set_affinity)(struct irq_data *data, const struct cpumask *mask,
 			    bool force);
+#endif
 
 	/* Free an IRQ */
 	int (*free_irq)(int);

commit 8a8f422d3b4f2cde8e0e1d31638279a26a886a82
Author: Suresh Siddha <suresh.b.siddha@intel.com>
Date:   Fri Mar 30 11:47:08 2012 -0700

    iommu: rename intr_remapping.[ch] to irq_remapping.[ch]
    
    Make the file names consistent with the naming conventions of irq subsystem.
    
    Signed-off-by: Suresh Siddha <suresh.b.siddha@intel.com>
    Cc: Joerg Roedel <joerg.roedel@amd.com>
    Cc: Yinghai Lu <yinghai@kernel.org>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Joerg Roedel <joerg.roedel@amd.com>

diff --git a/drivers/iommu/irq_remapping.h b/drivers/iommu/irq_remapping.h
new file mode 100644
index 000000000000..b12974cc1dfe
--- /dev/null
+++ b/drivers/iommu/irq_remapping.h
@@ -0,0 +1,88 @@
+/*
+ * Copyright (C) 2012 Advanced Micro Devices, Inc.
+ * Author: Joerg Roedel <joerg.roedel@amd.com>
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License version 2 as published
+ * by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
+ *
+ * This header file contains stuff that is shared between different interrupt
+ * remapping drivers but with no need to be visible outside of the IOMMU layer.
+ */
+
+#ifndef __IRQ_REMAPPING_H
+#define __IRQ_REMAPPING_H
+
+#ifdef CONFIG_IRQ_REMAP
+
+struct IO_APIC_route_entry;
+struct io_apic_irq_attr;
+struct irq_data;
+struct cpumask;
+struct pci_dev;
+struct msi_msg;
+
+extern int disable_irq_remap;
+extern int disable_sourceid_checking;
+extern int no_x2apic_optout;
+
+struct irq_remap_ops {
+	/* Check whether Interrupt Remapping is supported */
+	int (*supported)(void);
+
+	/* Initializes hardware and makes it ready for remapping interrupts */
+	int  (*prepare)(void);
+
+	/* Enables the remapping hardware */
+	int  (*enable)(void);
+
+	/* Disables the remapping hardware */
+	void (*disable)(void);
+
+	/* Reenables the remapping hardware */
+	int  (*reenable)(int);
+
+	/* Enable fault handling */
+	int  (*enable_faulting)(void);
+
+	/* IO-APIC setup routine */
+	int (*setup_ioapic_entry)(int irq, struct IO_APIC_route_entry *,
+				  unsigned int, int,
+				  struct io_apic_irq_attr *);
+
+	/* Set the CPU affinity of a remapped interrupt */
+	int (*set_affinity)(struct irq_data *data, const struct cpumask *mask,
+			    bool force);
+
+	/* Free an IRQ */
+	int (*free_irq)(int);
+
+	/* Create MSI msg to use for interrupt remapping */
+	void (*compose_msi_msg)(struct pci_dev *,
+				unsigned int, unsigned int,
+				struct msi_msg *, u8);
+
+	/* Allocate remapping resources for MSI */
+	int (*msi_alloc_irq)(struct pci_dev *, int, int);
+
+	/* Setup the remapped MSI irq */
+	int (*msi_setup_irq)(struct pci_dev *, unsigned int, int, int);
+
+	/* Setup interrupt remapping for an HPET MSI */
+	int (*setup_hpet_msi)(unsigned int, unsigned int);
+};
+
+extern struct irq_remap_ops intel_irq_remap_ops;
+
+#endif /* CONFIG_IRQ_REMAP */
+
+#endif /* __IRQ_REMAPPING_H */
