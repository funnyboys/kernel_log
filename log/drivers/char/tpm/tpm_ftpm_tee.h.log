commit 09e574831b277a3f77d78ceadd08a3859a84fdb3
Author: Sasha Levin <sashal@kernel.org>
Date:   Fri Jul 5 16:47:45 2019 -0400

    tpm/tpm_ftpm_tee: A driver for firmware TPM running inside TEE
    
    Add a driver for a firmware TPM running inside TEE.
    
    Documentation of the firmware TPM:
    https://www.microsoft.com/en-us/research/publication/ftpm-software-implementation-tpm-chip/ .
    
    Implementation of the firmware TPM:
    https://github.com/Microsoft/ms-tpm-20-ref/tree/master/Samples/ARM32-FirmwareTPM
    
    Tested-by: Ilias Apalodimas <ilias.apalodimas@linaro.org>
    Tested-by: Thirupathaiah Annapureddy <thiruan@microsoft.com>
    Signed-off-by: Thirupathaiah Annapureddy <thiruan@microsoft.com>
    Co-authored-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Reviewed-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>

diff --git a/drivers/char/tpm/tpm_ftpm_tee.h b/drivers/char/tpm/tpm_ftpm_tee.h
new file mode 100644
index 000000000000..f98daa7bf68c
--- /dev/null
+++ b/drivers/char/tpm/tpm_ftpm_tee.h
@@ -0,0 +1,40 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+/*
+ * Copyright (C) Microsoft Corporation
+ */
+
+#ifndef __TPM_FTPM_TEE_H__
+#define __TPM_FTPM_TEE_H__
+
+#include <linux/tee_drv.h>
+#include <linux/tpm.h>
+#include <linux/uuid.h>
+
+/* The TAFs ID implemented in this TA */
+#define FTPM_OPTEE_TA_SUBMIT_COMMAND  (0)
+#define FTPM_OPTEE_TA_EMULATE_PPI     (1)
+
+/* max. buffer size supported by fTPM  */
+#define MAX_COMMAND_SIZE       4096
+#define MAX_RESPONSE_SIZE      4096
+
+/**
+ * struct ftpm_tee_private - fTPM's private data
+ * @chip:     struct tpm_chip instance registered with tpm framework.
+ * @state:    internal state
+ * @session:  fTPM TA session identifier.
+ * @resp_len: cached response buffer length.
+ * @resp_buf: cached response buffer.
+ * @ctx:      TEE context handler.
+ * @shm:      Memory pool shared with fTPM TA in TEE.
+ */
+struct ftpm_tee_private {
+	struct tpm_chip *chip;
+	u32 session;
+	size_t resp_len;
+	u8 resp_buf[MAX_RESPONSE_SIZE];
+	struct tee_context *ctx;
+	struct tee_shm *shm;
+};
+
+#endif /* __TPM_FTPM_TEE_H__ */
