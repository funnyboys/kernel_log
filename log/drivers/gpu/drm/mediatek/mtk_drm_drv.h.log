commit 2c758e301ed95aefde68f98584204811d55c9bb8
Author: Enric Balletbo i Serra <enric.balletbo@collabora.com>
Date:   Wed Mar 25 18:31:22 2020 +0100

    soc / drm: mediatek: Move routing control to mmsys device
    
    Provide a mtk_mmsys_ddp_connect() and mtk_mmsys_disconnect() functions to
    replace mtk_ddp_add_comp_to_path() and mtk_ddp_remove_comp_from_path().
    Those functions will allow DRM driver and others to control the data
    path routing.
    
    Signed-off-by: Enric Balletbo i Serra <enric.balletbo@collabora.com>
    Reviewed-by: Matthias Brugger <matthias.bgg@gmail.com>
    Reviewed-by: CK Hu <ck.hu@mediatek.com>
    Acked-by: CK Hu <ck.hu@mediatek.com>
    Tested-by: Anders Roxell <anders.roxell@linaro.org>
    Reviewed-by: Chun-Kuang Hu <chunkuang.hu@kernel.org>
    Signed-off-by: Matthias Brugger <matthias.bgg@gmail.com>

diff --git a/drivers/gpu/drm/mediatek/mtk_drm_drv.h b/drivers/gpu/drm/mediatek/mtk_drm_drv.h
index 17bc99b9f5d4..b5be63e53176 100644
--- a/drivers/gpu/drm/mediatek/mtk_drm_drv.h
+++ b/drivers/gpu/drm/mediatek/mtk_drm_drv.h
@@ -39,7 +39,7 @@ struct mtk_drm_private {
 
 	struct device_node *mutex_node;
 	struct device *mutex_dev;
-	void __iomem *config_regs;
+	struct device *mmsys_dev;
 	struct device_node *comp_node[DDP_COMPONENT_ID_MAX];
 	struct mtk_ddp_comp *ddp_comp[DDP_COMPONENT_ID_MAX];
 	const struct mtk_mmsys_driver_data *data;

commit 60b874f6427936fb87f034a46970c7ca3a172181
Author: Bibby Hsieh <bibby.hsieh@mediatek.com>
Date:   Tue Dec 10 13:05:20 2019 +0800

    drm/mediatek: use DRM core's atomic commit helper
    
    The DRM core atomic helper now supports asynchronous commits natively.
    The custom drm implementation isn't needed anymore, remove it.
    
    Signed-off-by: Bibby Hsieh <bibby.hsieh@mediatek.com>
    Signed-off-by: CK Hu <ck.hu@mediatek.com>

diff --git a/drivers/gpu/drm/mediatek/mtk_drm_drv.h b/drivers/gpu/drm/mediatek/mtk_drm_drv.h
index e03fea12ff59..17bc99b9f5d4 100644
--- a/drivers/gpu/drm/mediatek/mtk_drm_drv.h
+++ b/drivers/gpu/drm/mediatek/mtk_drm_drv.h
@@ -43,13 +43,6 @@ struct mtk_drm_private {
 	struct device_node *comp_node[DDP_COMPONENT_ID_MAX];
 	struct mtk_ddp_comp *ddp_comp[DDP_COMPONENT_ID_MAX];
 	const struct mtk_mmsys_driver_data *data;
-
-	struct {
-		struct drm_atomic_state *state;
-		struct work_struct work;
-		struct mutex lock;
-	} commit;
-
 	struct drm_atomic_state *suspend_state;
 
 	bool dma_parms_allocated;

commit 070955558e820b9a89c570b91b1f21762f62b288
Author: Alexandre Courbot <acourbot@chromium.org>
Date:   Mon Jul 29 14:33:35 2019 +0900

    drm/mediatek: set DMA max segment size
    
    This driver requires imported PRIME buffers to appear contiguously in
    its IO address space. Make sure this is the case by setting the maximum
    DMA segment size to a more suitable value than the default 64KB.
    
    Signed-off-by: Alexandre Courbot <acourbot@chromium.org>
    Reviewed-by: Tomasz Figa <tfiga@chromium.org>
    Signed-off-by: CK Hu <ck.hu@mediatek.com>

diff --git a/drivers/gpu/drm/mediatek/mtk_drm_drv.h b/drivers/gpu/drm/mediatek/mtk_drm_drv.h
index 598ff3e70446..e03fea12ff59 100644
--- a/drivers/gpu/drm/mediatek/mtk_drm_drv.h
+++ b/drivers/gpu/drm/mediatek/mtk_drm_drv.h
@@ -51,6 +51,8 @@ struct mtk_drm_private {
 	} commit;
 
 	struct drm_atomic_state *suspend_state;
+
+	bool dma_parms_allocated;
 };
 
 extern struct platform_driver mtk_ddp_driver;

commit 1802d0beecafe581ad584634ba92f8a471d8a63a
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon May 27 08:55:21 2019 +0200

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 174
    
    Based on 1 normalized pattern(s):
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license version 2 as
      published by the free software foundation this program is
      distributed in the hope that it will be useful but without any
      warranty without even the implied warranty of merchantability or
      fitness for a particular purpose see the gnu general public license
      for more details
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-only
    
    has been chosen to replace the boilerplate/reference in 655 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Reviewed-by: Kate Stewart <kstewart@linuxfoundation.org>
    Reviewed-by: Richard Fontana <rfontana@redhat.com>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190527070034.575739538@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/gpu/drm/mediatek/mtk_drm_drv.h b/drivers/gpu/drm/mediatek/mtk_drm_drv.h
index ecc00ca3221d..598ff3e70446 100644
--- a/drivers/gpu/drm/mediatek/mtk_drm_drv.h
+++ b/drivers/gpu/drm/mediatek/mtk_drm_drv.h
@@ -1,14 +1,6 @@
+/* SPDX-License-Identifier: GPL-2.0-only */
 /*
  * Copyright (c) 2015 MediaTek Inc.
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License version 2 as
- * published by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
  */
 
 #ifndef MTK_DRM_DRV_H

commit 561fad31e697b73c22e0373e01a33311912b58eb
Author: stu.hsieh@mediatek.com <stu.hsieh@mediatek.com>
Date:   Wed Jun 20 16:19:30 2018 +0800

    drm/mediatek: add third ddp path
    
    This patch create third crtc by third ddp path
    
    Signed-off-by: Stu Hsieh <stu.hsieh@mediatek.com>
    Signed-off-by: CK Hu <ck.hu@mediatek.com>

diff --git a/drivers/gpu/drm/mediatek/mtk_drm_drv.h b/drivers/gpu/drm/mediatek/mtk_drm_drv.h
index c3378c452c0a..ecc00ca3221d 100644
--- a/drivers/gpu/drm/mediatek/mtk_drm_drv.h
+++ b/drivers/gpu/drm/mediatek/mtk_drm_drv.h
@@ -17,7 +17,7 @@
 #include <linux/io.h>
 #include "mtk_drm_ddp_comp.h"
 
-#define MAX_CRTC	2
+#define MAX_CRTC	3
 #define MAX_CONNECTOR	2
 
 struct device;
@@ -33,6 +33,9 @@ struct mtk_mmsys_driver_data {
 	unsigned int main_len;
 	const enum mtk_ddp_comp_id *ext_path;
 	unsigned int ext_len;
+	const enum mtk_ddp_comp_id *third_path;
+	unsigned int third_len;
+
 	bool shadow_register;
 };
 

commit 5ac5895a84d92bd2b3db490f8ee242ccb4d77e96
Author: yt.shen@mediatek.com <yt.shen@mediatek.com>
Date:   Fri Jun 16 22:02:16 2017 +0800

    drm/mediatek: separate color module to fixup error memory reallocation
    
    Previous patch (c5f228ef6c drm/mediatek: add *driver_data for different
    hardware settings) calls devm_kfree() and then devm_kzalloc() to
    reallocate color module data structure.  But this reallocation cannnot
    guarantee the new address is unchanged, but the caller will use the
    old address, which is wrong.
    
    Fix it by separate color module from general components, this patch
    separate color module to independent files, like mtk_disp_ovl.c and
    mtk_disp_rdma.c do
    
    Fixes: c5f228ef6ccd ("drm/mediatek: add *driver_data for different hardware settings")
    Signed-off-by: YT Shen <yt.shen@mediatek.com>
    Tested-by: Bibby Hsieh <bibby.hsieh@mediatek.com>
    Signed-off-by: CK Hu <ck.hu@mediatek>

diff --git a/drivers/gpu/drm/mediatek/mtk_drm_drv.h b/drivers/gpu/drm/mediatek/mtk_drm_drv.h
index aef8747d810b..c3378c452c0a 100644
--- a/drivers/gpu/drm/mediatek/mtk_drm_drv.h
+++ b/drivers/gpu/drm/mediatek/mtk_drm_drv.h
@@ -59,6 +59,7 @@ struct mtk_drm_private {
 };
 
 extern struct platform_driver mtk_ddp_driver;
+extern struct platform_driver mtk_disp_color_driver;
 extern struct platform_driver mtk_disp_ovl_driver;
 extern struct platform_driver mtk_disp_rdma_driver;
 extern struct platform_driver mtk_dpi_driver;

commit 9dc84e98a31f64363c32ecae8ec0b9e8cf3ce156
Author: yt.shen@mediatek.com <yt.shen@mediatek.com>
Date:   Fri Mar 31 19:30:31 2017 +0800

    drm/mediatek: add shadow register support
    
    We need to acquire mutex before using the resources,
    and need to release it after finished.
    So we don't need to write registers in the blanking period.
    
    Signed-off-by: YT Shen <yt.shen@mediatek.com>
    Acked-by: CK Hu <ck.hu@mediatek.com>

diff --git a/drivers/gpu/drm/mediatek/mtk_drm_drv.h b/drivers/gpu/drm/mediatek/mtk_drm_drv.h
index 21a433903afd..aef8747d810b 100644
--- a/drivers/gpu/drm/mediatek/mtk_drm_drv.h
+++ b/drivers/gpu/drm/mediatek/mtk_drm_drv.h
@@ -33,6 +33,7 @@ struct mtk_mmsys_driver_data {
 	unsigned int main_len;
 	const enum mtk_ddp_comp_id *ext_path;
 	unsigned int ext_len;
+	bool shadow_register;
 };
 
 struct mtk_drm_private {

commit c5f228ef6ccddbc3ebc346e2cfb2b11c1762696f
Author: yt.shen@mediatek.com <yt.shen@mediatek.com>
Date:   Fri Mar 31 19:30:30 2017 +0800

    drm/mediatek: add *driver_data for different hardware settings
    
    There are some hardware settings changed, between MT8173 & MT2701:
    DISP_OVL address offset changed, color format definition changed.
    DISP_RDMA fifo size changed.
    DISP_COLOR offset changed.
    MIPI_TX pll setting changed.
    And add prefix for mtk_ddp_main & mtk_ddp_ext & mutex_mod.
    
    Signed-off-by: YT Shen <yt.shen@mediatek.com>
    Acked-by: CK Hu <ck.hu@mediatek.com>

diff --git a/drivers/gpu/drm/mediatek/mtk_drm_drv.h b/drivers/gpu/drm/mediatek/mtk_drm_drv.h
index df322a7a5fcb..21a433903afd 100644
--- a/drivers/gpu/drm/mediatek/mtk_drm_drv.h
+++ b/drivers/gpu/drm/mediatek/mtk_drm_drv.h
@@ -28,6 +28,13 @@ struct drm_fb_helper;
 struct drm_property;
 struct regmap;
 
+struct mtk_mmsys_driver_data {
+	const enum mtk_ddp_comp_id *main_path;
+	unsigned int main_len;
+	const enum mtk_ddp_comp_id *ext_path;
+	unsigned int ext_len;
+};
+
 struct mtk_drm_private {
 	struct drm_device *drm;
 	struct device *dma_dev;
@@ -39,6 +46,7 @@ struct mtk_drm_private {
 	void __iomem *config_regs;
 	struct device_node *comp_node[DDP_COMPONENT_ID_MAX];
 	struct mtk_ddp_comp *ddp_comp[DDP_COMPONENT_ID_MAX];
+	const struct mtk_mmsys_driver_data *data;
 
 	struct {
 		struct drm_atomic_state *state;

commit ffec8925836caf1e91dce9c37c322c363eef58b3
Author: Shawn Guo <shawn.guo@linaro.org>
Date:   Mon Jan 9 19:25:42 2017 +0800

    drm: mediatek: use crtc helper drm_crtc_from_index()
    
    Use drm_crtc_from_index() to find drm_crtc for given index, so that we
    do not need to maintain a pointer array in struct mtk_drm_private.
    
    Signed-off-by: Shawn Guo <shawn.guo@linaro.org>
    Cc: CK Hu <ck.hu@mediatek.com>
    Signed-off-by: Sean Paul <seanpaul@chromium.org>
    Link: http://patchwork.freedesktop.org/patch/msgid/1483961145-18453-4-git-send-email-shawnguo@kernel.org

diff --git a/drivers/gpu/drm/mediatek/mtk_drm_drv.h b/drivers/gpu/drm/mediatek/mtk_drm_drv.h
index aa9389446785..df322a7a5fcb 100644
--- a/drivers/gpu/drm/mediatek/mtk_drm_drv.h
+++ b/drivers/gpu/drm/mediatek/mtk_drm_drv.h
@@ -32,7 +32,6 @@ struct mtk_drm_private {
 	struct drm_device *drm;
 	struct device *dma_dev;
 
-	struct drm_crtc *crtc[MAX_CRTC];
 	unsigned int num_pipes;
 
 	struct device_node *mutex_node;

commit 9e629c17aa8d7a75b8c1d99ed42892cd8ba7cdc4
Author: Jie Qiu <jie.qiu@mediatek.com>
Date:   Mon Jan 4 18:36:36 2016 +0100

    drm/mediatek: Add DPI sub driver
    
    Add DPI connector/encoder to support HDMI output via the
    attached HDMI bridge.
    
    Signed-off-by: Jie Qiu <jie.qiu@mediatek.com>
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>

diff --git a/drivers/gpu/drm/mediatek/mtk_drm_drv.h b/drivers/gpu/drm/mediatek/mtk_drm_drv.h
index ac6c92b5bc11..aa9389446785 100644
--- a/drivers/gpu/drm/mediatek/mtk_drm_drv.h
+++ b/drivers/gpu/drm/mediatek/mtk_drm_drv.h
@@ -53,6 +53,7 @@ struct mtk_drm_private {
 extern struct platform_driver mtk_ddp_driver;
 extern struct platform_driver mtk_disp_ovl_driver;
 extern struct platform_driver mtk_disp_rdma_driver;
+extern struct platform_driver mtk_dpi_driver;
 extern struct platform_driver mtk_dsi_driver;
 extern struct platform_driver mtk_mipi_tx_driver;
 

commit 2e54c14e310f655bb0915413e8e4a3da67c78a66
Author: CK Hu <ck.hu@mediatek.com>
Date:   Mon Jan 4 18:36:35 2016 +0100

    drm/mediatek: Add DSI sub driver
    
    This patch add a drm encoder/connector driver for the MIPI DSI function
    block of the Mediatek display subsystem and a phy driver for the MIPI TX
    D-PHY control module.
    
    Signed-off-by: Jitao Shi <jitao.shi@mediatek.com>
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>

diff --git a/drivers/gpu/drm/mediatek/mtk_drm_drv.h b/drivers/gpu/drm/mediatek/mtk_drm_drv.h
index 27dc8fadd6fd..ac6c92b5bc11 100644
--- a/drivers/gpu/drm/mediatek/mtk_drm_drv.h
+++ b/drivers/gpu/drm/mediatek/mtk_drm_drv.h
@@ -53,5 +53,7 @@ struct mtk_drm_private {
 extern struct platform_driver mtk_ddp_driver;
 extern struct platform_driver mtk_disp_ovl_driver;
 extern struct platform_driver mtk_disp_rdma_driver;
+extern struct platform_driver mtk_dsi_driver;
+extern struct platform_driver mtk_mipi_tx_driver;
 
 #endif /* MTK_DRM_DRV_H */

commit 119f5173628aa7a0c3cf9db83460d40709e8241d
Author: CK Hu <ck.hu@mediatek.com>
Date:   Mon Jan 4 18:36:34 2016 +0100

    drm/mediatek: Add DRM Driver for Mediatek SoC MT8173.
    
    This patch adds an initial DRM driver for the Mediatek MT8173 DISP
    subsystem. It currently supports two fixed output streams from the
    OVL0/OVL1 sources to the DSI0/DPI0 sinks, respectively.
    
    Signed-off-by: CK Hu <ck.hu@mediatek.com>
    Signed-off-by: YT Shen <yt.shen@mediatek.com>
    Signed-off-by: Daniel Kurtz <djkurtz@chromium.org>
    Signed-off-by: Bibby Hsieh <bibby.hsieh@mediatek.com>
    Signed-off-by: Mao Huang <littlecvr@chromium.org>
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>

diff --git a/drivers/gpu/drm/mediatek/mtk_drm_drv.h b/drivers/gpu/drm/mediatek/mtk_drm_drv.h
new file mode 100644
index 000000000000..27dc8fadd6fd
--- /dev/null
+++ b/drivers/gpu/drm/mediatek/mtk_drm_drv.h
@@ -0,0 +1,57 @@
+/*
+ * Copyright (c) 2015 MediaTek Inc.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+#ifndef MTK_DRM_DRV_H
+#define MTK_DRM_DRV_H
+
+#include <linux/io.h>
+#include "mtk_drm_ddp_comp.h"
+
+#define MAX_CRTC	2
+#define MAX_CONNECTOR	2
+
+struct device;
+struct device_node;
+struct drm_crtc;
+struct drm_device;
+struct drm_fb_helper;
+struct drm_property;
+struct regmap;
+
+struct mtk_drm_private {
+	struct drm_device *drm;
+	struct device *dma_dev;
+
+	struct drm_crtc *crtc[MAX_CRTC];
+	unsigned int num_pipes;
+
+	struct device_node *mutex_node;
+	struct device *mutex_dev;
+	void __iomem *config_regs;
+	struct device_node *comp_node[DDP_COMPONENT_ID_MAX];
+	struct mtk_ddp_comp *ddp_comp[DDP_COMPONENT_ID_MAX];
+
+	struct {
+		struct drm_atomic_state *state;
+		struct work_struct work;
+		struct mutex lock;
+	} commit;
+
+	struct drm_atomic_state *suspend_state;
+};
+
+extern struct platform_driver mtk_ddp_driver;
+extern struct platform_driver mtk_disp_ovl_driver;
+extern struct platform_driver mtk_disp_rdma_driver;
+
+#endif /* MTK_DRM_DRV_H */
