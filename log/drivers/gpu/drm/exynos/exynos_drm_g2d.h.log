commit 9f06080f861ccd67e15228d30177614a49b039dc
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Sat Jun 1 10:08:38 2019 +0200

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 423
    
    Based on 1 normalized pattern(s):
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license version 2 as
      published by the free software foundationr
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-only
    
    has been chosen to replace the boilerplate/reference in 7 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Armijn Hemel <armijn@tjaldur.nl>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190531190113.913773588@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/gpu/drm/exynos/exynos_drm_g2d.h b/drivers/gpu/drm/exynos/exynos_drm_g2d.h
index 287b2ed8f178..74ea3c26dead 100644
--- a/drivers/gpu/drm/exynos/exynos_drm_g2d.h
+++ b/drivers/gpu/drm/exynos/exynos_drm_g2d.h
@@ -1,10 +1,7 @@
+/* SPDX-License-Identifier: GPL-2.0-only */
 /*
  * Copyright (C) 2012 Samsung Electronics Co.Ltd
  * Authors: Joonyoung Shim <jy0922.shim@samsung.com>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License version 2 as
- * published by the Free Software Foundationr
  */
 
 #ifdef CONFIG_DRM_EXYNOS_G2D

commit eb4d9796fa340495b519c75d0be44ae583e67ec3
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Mon Jul 9 15:44:30 2018 +0200

    drm/exynos: g2d: Convert to driver component API
    
    Exynos G2D driver is the last client of the custom Exynos 'sub-driver'
    framework. In the current state it doesn't really resolve any of the
    issues it has been designed for, as Exynos DRM is already built only
    as a single kernel module. Remove the custom 'sub-driver' framework and
    simply use generic component framework also in G2D driver.
    
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Inki Dae <inki.dae@samsung.com>

diff --git a/drivers/gpu/drm/exynos/exynos_drm_g2d.h b/drivers/gpu/drm/exynos/exynos_drm_g2d.h
index 1a9c7ca8c15b..287b2ed8f178 100644
--- a/drivers/gpu/drm/exynos/exynos_drm_g2d.h
+++ b/drivers/gpu/drm/exynos/exynos_drm_g2d.h
@@ -14,6 +14,9 @@ extern int exynos_g2d_set_cmdlist_ioctl(struct drm_device *dev, void *data,
 					struct drm_file *file_priv);
 extern int exynos_g2d_exec_ioctl(struct drm_device *dev, void *data,
 				 struct drm_file *file_priv);
+
+extern int g2d_open(struct drm_device *drm_dev, struct drm_file *file);
+extern void g2d_close(struct drm_device *drm_dev, struct drm_file *file);
 #else
 static inline int exynos_g2d_get_ver_ioctl(struct drm_device *dev, void *data,
 					   struct drm_file *file_priv)
@@ -33,4 +36,12 @@ static inline int exynos_g2d_exec_ioctl(struct drm_device *dev, void *data,
 {
 	return -ENODEV;
 }
+
+int g2d_open(struct drm_device *drm_dev, struct drm_file *file)
+{
+	return 0;
+}
+
+void g2d_close(struct drm_device *drm_dev, struct drm_file *file)
+{ }
 #endif

commit d7f1642c90ab5eb2d7c48af0581c993094f97e1a
Author: Joonyoung Shim <jy0922.shim@samsung.com>
Date:   Thu May 17 20:06:32 2012 +0900

    drm/exynos: add G2D driver
    
    Changelog v3:
    - use __u64 instead of pointer in ioctl struct.
    
    The G2D is a 2D graphic accelerator that supports Bit Block Transfer.
    This G2D driver is exynos drm specific and supports only G2D(version
    4.1) of later Exynos series from Exynos4X12 because supporting DMA.
    
    The G2D is performed by two tasks simply.
    1. Configures the rendering parameters, such as foreground color and
       coordinates data by setting the drawing context registers.
    2. Start the rendering process by setting thre relevant command
       registers accordingly.
    
    The G2D version 4.1 supports DMA mode as host interface. User can make
    command list to reduce HOST(ARM) loads. The contents of The command list
    is setted to relevant registers of G2D by DMA.
    
    The command list is composed Header and command sets and Tail.
    - Header: The number of command set(4Bytes)
    - Command set: Register offset(4Bytes) + Register data(4Bytes)
    - Tail: Pointer of base address of the other command list(4Bytes)
    
    By Tail field, the G2D can process many command lists without halt at
    one go.
    
    The G2D has following the rendering pipeline.
    --> Primitive Drawing --> Rotation --> Clipping --> Bilinear Sampling
    --> Color Key --> ROP --> Mask Operation --> Alpha Blending -->
    Dithering --> FrameBuffer
    
    And supports various operations from the rendering pipeline.
    - copy
    - fast solid color fill
    - window clipping
    - rotation
    - flip
    - 4 operand raster operation(ROP4)
    - masking operation
    - alpha blending
    - color key
    - dithering
    - etc
    
    User should make the command list to data and registers needed by
    operation to use. The Exynos G2D driver only manages the command lists
    received from user. Some registers needs memory base address(physical
    address) of image. User doesn't know its physical address, so fills the
    gem handle of that memory than address to command sets, then G2D driver
    converts it to memory base address.
    
    We adds three ioctls and one event for Exynos G2D.
    
    - ioctls
    DRM_EXYNOS_G2D_GET_VER: get the G2D hardware version
    DRM_EXYNOS_G2D_SET_CMDLIST: set the command list from user to driver
    DRM_EXYNOS_G2D_EXEC: execute the command lists setted to driver
    
    - event
    DRM_EXYNOS_G2D_EVENT: event to give notification completion of the
                          command list to user
    
    Signed-off-by: Joonyoung Shim <jy0922.shim@samsung.com>
    Signed-off-by: Inki Dae <inki.dae@samsung.com>
    Signed-off-by: Kyungmin Park <kyungmin.park@samsung.com>

diff --git a/drivers/gpu/drm/exynos/exynos_drm_g2d.h b/drivers/gpu/drm/exynos/exynos_drm_g2d.h
new file mode 100644
index 000000000000..1a9c7ca8c15b
--- /dev/null
+++ b/drivers/gpu/drm/exynos/exynos_drm_g2d.h
@@ -0,0 +1,36 @@
+/*
+ * Copyright (C) 2012 Samsung Electronics Co.Ltd
+ * Authors: Joonyoung Shim <jy0922.shim@samsung.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundationr
+ */
+
+#ifdef CONFIG_DRM_EXYNOS_G2D
+extern int exynos_g2d_get_ver_ioctl(struct drm_device *dev, void *data,
+				    struct drm_file *file_priv);
+extern int exynos_g2d_set_cmdlist_ioctl(struct drm_device *dev, void *data,
+					struct drm_file *file_priv);
+extern int exynos_g2d_exec_ioctl(struct drm_device *dev, void *data,
+				 struct drm_file *file_priv);
+#else
+static inline int exynos_g2d_get_ver_ioctl(struct drm_device *dev, void *data,
+					   struct drm_file *file_priv)
+{
+	return -ENODEV;
+}
+
+static inline int exynos_g2d_set_cmdlist_ioctl(struct drm_device *dev,
+					       void *data,
+					       struct drm_file *file_priv)
+{
+	return -ENODEV;
+}
+
+static inline int exynos_g2d_exec_ioctl(struct drm_device *dev, void *data,
+					struct drm_file *file_priv)
+{
+	return -ENODEV;
+}
+#endif
