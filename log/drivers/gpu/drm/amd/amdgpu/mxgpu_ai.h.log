commit 312a79b6eafe5c45e3e232506a4a6e97d7cdbba4
Author: Monk Liu <Monk.Liu@amd.com>
Date:   Tue Apr 21 18:04:50 2020 +0800

    drm/amdgpu:  extent threshold of waiting FLR_COMPLETE
    
    to 5s to satisfy WHOLE GPU reset which need 3+ seconds to
    finish
    
    Signed-off-by: Monk Liu <Monk.Liu@amd.com>
    Acked-by: Yintian Tao <yttao@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>

diff --git a/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h b/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h
index 52a697545801..83b453f5d717 100644
--- a/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h
+++ b/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h
@@ -26,7 +26,7 @@
 
 #define AI_MAILBOX_POLL_ACK_TIMEDOUT	500
 #define AI_MAILBOX_POLL_MSG_TIMEDOUT	12000
-#define AI_MAILBOX_POLL_FLR_TIMEDOUT	500
+#define AI_MAILBOX_POLL_FLR_TIMEDOUT	5000
 
 enum idh_request {
 	IDH_REQ_GPU_INIT_ACCESS = 1,

commit 4d130238a7600fbaa47fb07bf5ede5a2cb2c1622
Author: Monk Liu <Monk.Liu@amd.com>
Date:   Tue Mar 3 16:40:00 2020 +0800

    drm/amdgpu: cleanup idh event/req for NV headers
    
    1) drop the headers from AI in mxgpu_nv.c, should refer to mxgpu_nv.h
    
    2) the IDH_EVENT_MAX is not used and not aligned with host side
       so drop it
    3) the IDH_TEXT_MESSAG was provided in host but not defined in guest
    
    Signed-off-by: Monk Liu <Monk.Liu@amd.com>
    Reviewed-by: Emily Deng <Emily.Deng@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>

diff --git a/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h b/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h
index 37dbe0f2142f..52a697545801 100644
--- a/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h
+++ b/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h
@@ -46,7 +46,8 @@ enum idh_event {
 	IDH_SUCCESS,
 	IDH_FAIL,
 	IDH_QUERY_ALIVE,
-	IDH_EVENT_MAX
+
+	IDH_TEXT_MESSAGE = 255,
 };
 
 extern const struct amdgpu_virt_ops xgpu_ai_virt_ops;

commit c9ffa427db34e6896523f0ef0c172a0bbb77c9ad
Author: Yintian Tao <yttao@amd.com>
Date:   Wed Oct 30 17:16:35 2019 +0800

    drm/amd/powerplay: enable pp one vf mode for vega10
    
    Originally, due to the restriction from PSP and SMU, VF has
    to send message to hypervisor driver to handle powerplay
    change which is complicated and redundant. Currently, SMU
    and PSP can support VF to directly handle powerplay
    change by itself. Therefore, the old code about the handshake
    between VF and PF to handle powerplay will be removed and VF
    will use new the registers below to handshake with SMU.
    mmMP1_SMN_C2PMSG_101: register to handle SMU message
    mmMP1_SMN_C2PMSG_102: register to handle SMU parameter
    mmMP1_SMN_C2PMSG_103: register to handle SMU response
    
    v2: remove module parameter pp_one_vf
    v3: fix the parens
    v4: forbid vf to change smu feature
    v5: use hwmon_attributes_visible to skip sepicified hwmon atrribute
    v6: change skip condition at vega10_copy_table_to_smc
    
    Signed-off-by: Yintian Tao <yttao@amd.com>
    Acked-by: Evan Quan <evan.quan@amd.com>
    Reviewed-by: Kenneth Feng <kenneth.feng@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>

diff --git a/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h b/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h
index 077e91a33d62..37dbe0f2142f 100644
--- a/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h
+++ b/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h
@@ -35,10 +35,6 @@ enum idh_request {
 	IDH_REL_GPU_FINI_ACCESS,
 	IDH_REQ_GPU_RESET_ACCESS,
 
-	IDH_IRQ_FORCE_DPM_LEVEL = 10,
-	IDH_IRQ_GET_PP_SCLK,
-	IDH_IRQ_GET_PP_MCLK,
-
 	IDH_LOG_VF_ERROR       = 200,
 };
 

commit b6818520edb0dc83d8de807cb40dff44995eab86
Author: Trigger Huang <Trigger.Huang@amd.com>
Date:   Tue Apr 30 16:23:29 2019 +0800

    drm/amdgpu: Add IDH_QUERY_ALIVE event for SR-IOV
    
    SR-IOV host side will send IDH_QUERY_ALIVE to guest VM to check
    if this guest VM is still alive (not destroyed). The only thing
    guest KMD need to do is to send ACK back to host.
    
    Signed-off-by: Trigger Huang <Trigger.Huang@amd.com>
    Acked-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>

diff --git a/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h b/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h
index 39d151b79153..077e91a33d62 100644
--- a/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h
+++ b/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h
@@ -49,6 +49,7 @@ enum idh_event {
 	IDH_FLR_NOTIFICATION_CMPL,
 	IDH_SUCCESS,
 	IDH_FAIL,
+	IDH_QUERY_ALIVE,
 	IDH_EVENT_MAX
 };
 

commit bb5a2bdf36a8df79e1437b443299b7fe1ea3abfc
Author: Yintian Tao <yttao@amd.com>
Date:   Tue Apr 9 20:33:20 2019 +0800

    drm/amdgpu: support dpm level modification under virtualization v3
    
    Under vega10 virtualuzation, smu ip block will not be added.
    Therefore, we need add pp clk query and force dpm level function
    at amdgpu_virt_ops to support the feature.
    
    v2: add get_pp_clk existence check and use kzalloc to allocate buf
    
    v3: return -ENOMEM for allocation failure and correct the coding style
    
    Signed-off-by: Yintian Tao <yttao@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>

diff --git a/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h b/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h
index b4a9ceea334b..39d151b79153 100644
--- a/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h
+++ b/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h
@@ -35,6 +35,10 @@ enum idh_request {
 	IDH_REL_GPU_FINI_ACCESS,
 	IDH_REQ_GPU_RESET_ACCESS,
 
+	IDH_IRQ_FORCE_DPM_LEVEL = 10,
+	IDH_IRQ_GET_PP_SCLK,
+	IDH_IRQ_GET_PP_MCLK,
+
 	IDH_LOG_VF_ERROR       = 200,
 };
 
@@ -43,6 +47,8 @@ enum idh_event {
 	IDH_READY_TO_ACCESS_GPU,
 	IDH_FLR_NOTIFICATION,
 	IDH_FLR_NOTIFICATION_CMPL,
+	IDH_SUCCESS,
+	IDH_FAIL,
 	IDH_EVENT_MAX
 };
 

commit 48527e5296edc7b952fb2c1c40fd8c388cc935ed
Author: Monk Liu <Monk.Liu@amd.com>
Date:   Mon Jan 15 13:44:30 2018 +0800

    drm/amdgpu: refactoring mailbox to fix TDR handshake bugs(v2)
    
    this patch actually refactor mailbox implmentations, and
    all below changes are needed together to fix all those mailbox
    handshake issues exposured by heavey TDR test.
    
    1)refactor all mailbox functions based on byte accessing for mb_control
    reason is to avoid touching non-related bits when writing trn/rcv part of
    mailbox_control, this way some incorrect INTR sent to hypervisor
    side could be avoided, and it fixes couple handshake bug.
    
    2)trans_msg function re-impled: put a invalid
    logic before transmitting message to make sure the ACK bit is in
    a clear status, otherwise there is chance that ACK asserted already
    before transmitting message and lead to fake ACK polling.
    (hypervisor side have some tricks to workaround ACK bit being corrupted
    by VF FLR which hase an side effects that may make guest side ACK bit
    asserted wrongly), and clear TRANS_MSG words after message transferred.
    
    3)for mailbox_flr_work, it is also re-worked: it takes the mutex lock
    first if invoked, to block gpu recover's participate too early while
    hypervisor side is doing VF FLR. (hypervisor sends FLR_NOTIFY to guest
    before doing VF FLR and sentds FLR_COMPLETE after VF FLR done, and
    the FLR_NOTIFY will trigger interrupt to guest which lead to
    mailbox_flr_work being invoked)
    
    This can avoid the issue that mailbox trans msg being cleared by its VF FLR.
    
    4)for mailbox_rcv_irq IRQ routine, it should only peek msg and schedule
    mailbox_flr_work, instead of ACK to hypervisor itself, because FLR_NOTIFY
    msg sent from hypervisor side doesn't need VF's ACK (this is because
    VF's ACK would lead to hypervisor clear its trans_valid/msg, and this
    would cause handshake bug if trans_valid/msg is cleared not due to
    correct VF ACK but from a wrong VF ACK like this "FLR_NOTIFY" one)
    
    This fixed handshake bug that sometimes GUEST always couldn't receive
    "READY_TO_ACCESS_GPU" msg from hypervisor.
    
    5)seperate polling time limite accordingly:
    POLL ACK cost no more than 500ms
    POLL MSG cost no more than 12000ms
    POLL FLR finish cost no more than 500ms
    
    6) we still need to set adev into in_gpu_reset mode after we received
    FLR_NOTIFY from host side, this can prevent innocent app wrongly succesed
    to open amdgpu dri device.
    
    FLR_NOFITY is received due to an IDLE hang detected from hypervisor side
    which indicating GPU is already die in this VF.
    
    v2:
    use MACRO as the offset of mailbox_control register
    don't test if NOTIFY_CMPL event in rcv_msg since it won't
    recieve that message anymore
    
    Signed-off-by: Monk Liu <Monk.Liu@amd.com>
    Reviewed-by: Pixel Ding <Pixel.Ding@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>

diff --git a/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h b/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h
index 67e78576a9eb..b4a9ceea334b 100644
--- a/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h
+++ b/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h
@@ -24,7 +24,9 @@
 #ifndef __MXGPU_AI_H__
 #define __MXGPU_AI_H__
 
-#define AI_MAILBOX_TIMEDOUT	12000
+#define AI_MAILBOX_POLL_ACK_TIMEDOUT	500
+#define AI_MAILBOX_POLL_MSG_TIMEDOUT	12000
+#define AI_MAILBOX_POLL_FLR_TIMEDOUT	500
 
 enum idh_request {
 	IDH_REQ_GPU_INIT_ACCESS = 1,
@@ -51,4 +53,7 @@ int xgpu_ai_mailbox_add_irq_id(struct amdgpu_device *adev);
 int xgpu_ai_mailbox_get_irq(struct amdgpu_device *adev);
 void xgpu_ai_mailbox_put_irq(struct amdgpu_device *adev);
 
+#define AI_MAIBOX_CONTROL_TRN_OFFSET_BYTE SOC15_REG_OFFSET(NBIO, 0, mmBIF_BX_PF0_MAILBOX_CONTROL) * 4
+#define AI_MAIBOX_CONTROL_RCV_OFFSET_BYTE SOC15_REG_OFFSET(NBIO, 0, mmBIF_BX_PF0_MAILBOX_CONTROL) * 4 + 1
+
 #endif

commit 6e132ca0bb62b30c0eb053d99f75bb827f7876f5
Author: Horace Chen <horace.chen@amd.com>
Date:   Wed Jun 28 17:51:50 2017 +0800

    drm/amdgpu/sriov:increate mailbox polling timeout
    
    increase timeout to 12 seconds,because there may have multiple
    FLR waiting for done, the waiting time of events may be long,
    increase to 12s to reduce timeout failure.
    
    Signed-off-by: Horace Chen <horace.chen@amd.com>
    Acked-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>

diff --git a/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h b/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h
index 1e91b9a1c591..67e78576a9eb 100644
--- a/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h
+++ b/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h
@@ -24,7 +24,7 @@
 #ifndef __MXGPU_AI_H__
 #define __MXGPU_AI_H__
 
-#define AI_MAILBOX_TIMEDOUT	5000
+#define AI_MAILBOX_TIMEDOUT	12000
 
 enum idh_request {
 	IDH_REQ_GPU_INIT_ACCESS = 1,

commit 890419409a3aba2ca7185a824e47d8ded8df11a2
Author: Gavin Wan <Gavin.Wan@amd.com>
Date:   Fri Jun 23 13:55:15 2017 -0400

    drm/amdgpu: Support passing amdgpu critical error to host via GPU Mailbox.
    
    This feature works for SRIOV enviroment. For non-SRIOV enviroment, the
    trans_error function does nothing.
    
    The error information includes error_code (16bit), error_flags(16bit)
    and error_data(64bit). Since there are not many errors, we keep the
    errors in an array and transfer all errors to Host before amdgpu
    initialization function (amdgpu_device_init) exit.
    
    Signed-off-by: Gavin Wan <Gavin.Wan@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>

diff --git a/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h b/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h
index 9aefc44d2c34..1e91b9a1c591 100644
--- a/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h
+++ b/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h
@@ -31,7 +31,9 @@ enum idh_request {
 	IDH_REL_GPU_INIT_ACCESS,
 	IDH_REQ_GPU_FINI_ACCESS,
 	IDH_REL_GPU_FINI_ACCESS,
-	IDH_REQ_GPU_RESET_ACCESS
+	IDH_REQ_GPU_RESET_ACCESS,
+
+	IDH_LOG_VF_ERROR       = 200,
 };
 
 enum idh_event {

commit 8758cb6a96aec6a2474c1827d38f094264ac034b
Author: Monk Liu <Monk.Liu@amd.com>
Date:   Wed Apr 5 12:17:39 2017 +0800

    drm/amdgpu/vega10:timeout set to equal with VI
    
    Signed-off-by: Monk Liu <Monk.Liu@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>

diff --git a/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h b/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h
index a9815b68f5de..9aefc44d2c34 100644
--- a/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h
+++ b/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h
@@ -24,7 +24,7 @@
 #ifndef __MXGPU_AI_H__
 #define __MXGPU_AI_H__
 
-#define AI_MAILBOX_TIMEDOUT	150000
+#define AI_MAILBOX_TIMEDOUT	5000
 
 enum idh_request {
 	IDH_REQ_GPU_INIT_ACCESS = 1,

commit f98b617ed5cc47157c4ccb8204b41ccec9f1281d
Author: Monk Liu <Monk.Liu@amd.com>
Date:   Wed Apr 5 12:17:18 2017 +0800

    drm/amdgpu:implement the reset MB func for vega10
    
    they are lack in the bringup stage, we need them for GPU reset
    feature.
    
    Signed-off-by: Monk Liu <Monk.Liu@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>

diff --git a/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h b/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h
index bf8ab8fd4367..a9815b68f5de 100644
--- a/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h
+++ b/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h
@@ -44,4 +44,9 @@ enum idh_event {
 
 extern const struct amdgpu_virt_ops xgpu_ai_virt_ops;
 
+void xgpu_ai_mailbox_set_irq_funcs(struct amdgpu_device *adev);
+int xgpu_ai_mailbox_add_irq_id(struct amdgpu_device *adev);
+int xgpu_ai_mailbox_get_irq(struct amdgpu_device *adev);
+void xgpu_ai_mailbox_put_irq(struct amdgpu_device *adev);
+
 #endif

commit c9c9de93a33ccdbf7eaef0c86a5e60551f3410bd
Author: Xiangliang Yu <Xiangliang.Yu@amd.com>
Date:   Fri Mar 10 14:18:17 2017 +0800

    drm/amdgpu/virt: impl mailbox for ai
    
    Implement mailbox protocol for AI so that guest vf can communicate
    with GPU hypervisor.
    
    Signed-off-by: Xiangliang Yu <Xiangliang.Yu@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Reviewed-by: Monk Liu <Monk.Liu@amd.com>
    Acked-by: Christian KÃ¶nig <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>

diff --git a/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h b/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h
new file mode 100644
index 000000000000..bf8ab8fd4367
--- /dev/null
+++ b/drivers/gpu/drm/amd/amdgpu/mxgpu_ai.h
@@ -0,0 +1,47 @@
+/*
+ * Copyright 2014 Advanced Micro Devices, Inc.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a
+ * copy of this software and associated documentation files (the "Software"),
+ * to deal in the Software without restriction, including without limitation
+ * the rights to use, copy, modify, merge, publish, distribute, sublicense,
+ * and/or sell copies of the Software, and to permit persons to whom the
+ * Software is furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
+ * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
+ * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
+ * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
+ * OTHER DEALINGS IN THE SOFTWARE.
+ *
+ */
+
+#ifndef __MXGPU_AI_H__
+#define __MXGPU_AI_H__
+
+#define AI_MAILBOX_TIMEDOUT	150000
+
+enum idh_request {
+	IDH_REQ_GPU_INIT_ACCESS = 1,
+	IDH_REL_GPU_INIT_ACCESS,
+	IDH_REQ_GPU_FINI_ACCESS,
+	IDH_REL_GPU_FINI_ACCESS,
+	IDH_REQ_GPU_RESET_ACCESS
+};
+
+enum idh_event {
+	IDH_CLR_MSG_BUF	= 0,
+	IDH_READY_TO_ACCESS_GPU,
+	IDH_FLR_NOTIFICATION,
+	IDH_FLR_NOTIFICATION_CMPL,
+	IDH_EVENT_MAX
+};
+
+extern const struct amdgpu_virt_ops xgpu_ai_virt_ops;
+
+#endif
