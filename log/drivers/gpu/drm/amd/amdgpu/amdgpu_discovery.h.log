commit dffa11b4f74b1572341a667ec7a006420dc48626
Author: Monk Liu <Monk.Liu@amd.com>
Date:   Wed Mar 4 21:33:27 2020 +0800

    drm/amdgpu: adjust sequence of ip_discovery init and timeout_setting
    
    what:
    1)move timtout setting before ip_early_init to reduce exclusive mode
    cost for SRIOV
    
    2)move ip_discovery_init() to inside of amdgpu_discovery_reg_base_init()
    it is a prepare for the later upcoming patches.
    
    why:
    in later upcoming patches we would use a new mailbox event --
    "req_gpu_init_data", which is a callback hooked in adev->virt.ops and
    this callback send a new event "REQ_GPU_INIT_DAT" to host to notify
    host to do some preparation like "IP discovery/vbios on the VF FB"
    and this callback must be:
    
    A) invoked after set_ip_block() because virt.ops is configured during
    set_ip_block()
    
    B) invoked before ip_discovery_init() becausen ip_discovery_init()
    need host side prepares everything in VF FB first.
    
    current place of ip_discovery_init() is before we can invoke callback
    of adev->virt.ops, thus we must move ip_discovery_init() to a place
    after the adev->virt.ops all settle done, and the perfect place is in
    amdgpu_discovery_reg_base_init()
    
    Signed-off-by: Monk Liu <Monk.Liu@amd.com>
    Reviewed-by: Emily Deng <Emily.Deng@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>

diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_discovery.h b/drivers/gpu/drm/amd/amdgpu/amdgpu_discovery.h
index ba78e15d9b05..d50d597c45ed 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_discovery.h
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_discovery.h
@@ -26,7 +26,6 @@
 
 #define DISCOVERY_TMR_SIZE  (64 << 10)
 
-int amdgpu_discovery_init(struct amdgpu_device *adev);
 void amdgpu_discovery_fini(struct amdgpu_device *adev);
 int amdgpu_discovery_reg_base_init(struct amdgpu_device *adev);
 int amdgpu_discovery_get_ip_version(struct amdgpu_device *adev, int hw_id,

commit 45cf454e4c0fa34d33980063408095179369c5f0
Author: Tianci.Yin <tianci.yin@amd.com>
Date:   Mon Sep 30 13:10:03 2019 +0800

    drm/amdgpu: update amdgpu_discovery to handle revision
    
    update amdgpu_discovery to get IP revision.
    
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Reviewed-by: Luben Tuikov <luben.tuikov@amd.com>
    Signed-off-by: Tianci.Yin <tianci.yin@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>

diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_discovery.h b/drivers/gpu/drm/amd/amdgpu/amdgpu_discovery.h
index 5a6693d7d269..ba78e15d9b05 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_discovery.h
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_discovery.h
@@ -30,7 +30,7 @@ int amdgpu_discovery_init(struct amdgpu_device *adev);
 void amdgpu_discovery_fini(struct amdgpu_device *adev);
 int amdgpu_discovery_reg_base_init(struct amdgpu_device *adev);
 int amdgpu_discovery_get_ip_version(struct amdgpu_device *adev, int hw_id,
-                                    int *major, int *minor);
+                                    int *major, int *minor, int *revision);
 int amdgpu_discovery_get_gfx_info(struct amdgpu_device *adev);
 
 #endif /* __AMDGPU_DISCOVERY__ */

commit 5f6a556f98de425fcb7928456839a06f02156633
Author: Xiaojie Yuan <xiaojie.yuan@amd.com>
Date:   Thu Oct 10 20:44:20 2019 +0800

    drm/amdgpu/discovery: reserve discovery data at the top of VRAM
    
    IP Discovery data is TMR fenced by the latest PSP BL,
    so we need to reserve this region.
    
    Tested on navi10/12/14 with VBIOS integrated with latest PSP BL.
    
    v2: use DISCOVERY_TMR_SIZE macro as bo size
        use amdgpu_bo_create_kernel_at() to allocate bo
    
    Signed-off-by: Xiaojie Yuan <xiaojie.yuan@amd.com>
    Reviewed-by: Hawking Zhang <Hawking.Zhang@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>

diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_discovery.h b/drivers/gpu/drm/amd/amdgpu/amdgpu_discovery.h
index 85b8c4d4d576..5a6693d7d269 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_discovery.h
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_discovery.h
@@ -24,6 +24,8 @@
 #ifndef __AMDGPU_DISCOVERY__
 #define __AMDGPU_DISCOVERY__
 
+#define DISCOVERY_TMR_SIZE  (64 << 10)
+
 int amdgpu_discovery_init(struct amdgpu_device *adev);
 void amdgpu_discovery_fini(struct amdgpu_device *adev);
 int amdgpu_discovery_reg_base_init(struct amdgpu_device *adev);

commit f39f5bb1c9d68d557ff1539fea7adfe7c4d4ed7a
Author: Xiaojie Yuan <xiaojie.yuan@amd.com>
Date:   Thu Jun 20 10:18:50 2019 -0500

    drm/amdgpu/discovery: add ip discovery initial support
    
    The IP discovery table lists is populated by the psp at power on
    and includes all of the hw details on the board:
    - List of IPs and MMIO offsets
    - IP harvest details
    - IP configuration details
    
    v2: prefix struct and function names with 'amdgpu'
    v3: read table binary from vram using mmMM_INDEX and mmMM_DATA
        update TABLE_BINARY_MAX_SIZE to 64kb (1 TMR)
        add 'instance_number' field per ip info
        consider endianness and replace uint8/16/32_t with u8/16/32
        initialize register base addresses
        initialize adev->gfx.config and adev->gfx.cu_info to replace gpu info fw
        get major and minor version using a single api
        don't expose internal data structures in amdgpu_discovery.h
    v4: RCC_CONFIG_MEMSIZE is in MB units
        hold mmio_idx_lock while reading ip discovery binary
    v5: pick out discovery.h as a cross-OS header
        do structure pointer cast directly
        consider endianness while using the member of structure
        convert base addresses to dword
    
    at boot up, PSP BL copies ip discovery binary from VBIOS(SPIROM) image to the
    top of the frame buffer (just below the reserved regions for PSP & SMU).
    
    ip discovery data table includes the collection of each ip's identification
    number, base addresses, version number, and harvest setting placeholder.
    
    gc data table includes gfx info structure.
    
    Signed-off-by: Xiaojie Yuan <xiaojie.yuan@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>

diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_discovery.h b/drivers/gpu/drm/amd/amdgpu/amdgpu_discovery.h
new file mode 100644
index 000000000000..85b8c4d4d576
--- /dev/null
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_discovery.h
@@ -0,0 +1,34 @@
+/*
+ * Copyright 2018 Advanced Micro Devices, Inc.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a
+ * copy of this software and associated documentation files (the "Software"),
+ * to deal in the Software without restriction, including without limitation
+ * the rights to use, copy, modify, merge, publish, distribute, sublicense,
+ * and/or sell copies of the Software, and to permit persons to whom the
+ * Software is furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
+ * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
+ * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
+ * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
+ * OTHER DEALINGS IN THE SOFTWARE.
+ *
+ */
+
+#ifndef __AMDGPU_DISCOVERY__
+#define __AMDGPU_DISCOVERY__
+
+int amdgpu_discovery_init(struct amdgpu_device *adev);
+void amdgpu_discovery_fini(struct amdgpu_device *adev);
+int amdgpu_discovery_reg_base_init(struct amdgpu_device *adev);
+int amdgpu_discovery_get_ip_version(struct amdgpu_device *adev, int hw_id,
+                                    int *major, int *minor);
+int amdgpu_discovery_get_gfx_info(struct amdgpu_device *adev);
+
+#endif /* __AMDGPU_DISCOVERY__ */
