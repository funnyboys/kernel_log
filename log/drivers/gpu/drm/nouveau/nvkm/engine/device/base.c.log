commit 0f85bbb6ae517d9a4308527188afe35c2012bbc9
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Apr 30 14:08:53 2020 +1000

    drm/nouveau/device: use regular PRI accessors in chipset detection
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index f977dddcd809..5b90c2a1bf3d 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2925,9 +2925,9 @@ nvkm_device_del(struct nvkm_device **pdevice)
 }
 
 static inline bool
-nvkm_device_endianness(void __iomem *pri)
+nvkm_device_endianness(struct nvkm_device *device)
 {
-	u32 boot1 = ioread32_native(pri + 0x000004) & 0x01000001;
+	u32 boot1 = nvkm_rd32(device, 0x000004) & 0x01000001;
 #ifdef __BIG_ENDIAN
 	if (!boot1)
 		return false;
@@ -2949,7 +2949,6 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 	struct nvkm_subdev *subdev;
 	u64 mmio_base, mmio_size;
 	u32 boot0, boot1, strap;
-	void __iomem *map = NULL;
 	int ret = -EEXIST, i;
 	unsigned chipset;
 
@@ -2976,8 +2975,8 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 	mmio_size = device->func->resource_size(device, 0);
 
 	if (detect || mmio) {
-		map = ioremap(mmio_base, mmio_size);
-		if (map == NULL) {
+		device->pri = ioremap(mmio_base, mmio_size);
+		if (device->pri == NULL) {
 			nvdev_error(device, "unable to map PRI\n");
 			ret = -ENOMEM;
 			goto done;
@@ -2987,10 +2986,10 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 	/* identify the chipset, and determine classes of subdev/engines */
 	if (detect) {
 		/* switch mmio to cpu's native endianness */
-		if (!nvkm_device_endianness(map)) {
-			iowrite32_native(0x01000001, map + 0x000004);
-			ioread32_native(map);
-			if (!nvkm_device_endianness(map)) {
+		if (!nvkm_device_endianness(device)) {
+			nvkm_wr32(device, 0x000004, 0x01000001);
+			nvkm_rd32(device, 0x000000);
+			if (!nvkm_device_endianness(device)) {
 				nvdev_error(device,
 					    "GPU not supported on big-endian\n");
 				ret = -ENOSYS;
@@ -2998,7 +2997,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 			}
 		}
 
-		boot0 = ioread32_native(map + 0x000000);
+		boot0 = nvkm_rd32(device, 0x000000);
 
 		/* chipset can be overridden for devel/testing purposes */
 		chipset = nvkm_longopt(device->cfgopt, "NvChipset", 0);
@@ -3157,7 +3156,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 			   device->chip->name, boot0);
 
 		/* vGPU detection */
-		boot1 = ioread32_native(map + 0x000004);
+		boot1 = nvkm_rd32(device, 0x0000004);
 		if (device->card_type >= TU100 && (boot1 & 0x00030000)) {
 			nvdev_info(device, "vGPUs are not supported\n");
 			ret = -ENODEV;
@@ -3165,7 +3164,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		}
 
 		/* read strapping information */
-		strap = ioread32_native(map + 0x101000);
+		strap = nvkm_rd32(device, 0x101000);
 
 		/* determine frequency of timing crystal */
 		if ( device->card_type <= NV_10 || device->chipset < 0x17 ||
@@ -3187,10 +3186,6 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 	if (!device->name)
 		device->name = device->chip->name;
 
-	if (mmio) {
-		device->pri = map;
-	}
-
 	mutex_init(&device->mutex);
 
 	for (i = 0; i < NVKM_SUBDEV_NR; i++) {
@@ -3278,9 +3273,9 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 
 	ret = 0;
 done:
-	if (map && (!mmio || ret)) {
+	if (device->pri && (!mmio || ret)) {
+		iounmap(device->pri);
 		device->pri = NULL;
-		iounmap(map);
 	}
 	mutex_unlock(&nv_devices_mutex);
 	return ret;

commit 2924779bcaead13828ce3101e573eb5663900b92
Author: Karol Herbst <kherbst@redhat.com>
Date:   Tue Apr 28 18:54:04 2020 +0200

    drm/nouveau/device: detect vGPUs
    
    Using ENODEV as this prevents probe failed errors in dmesg.
    
    v2: move check further down
    
    Signed-off-by: Karol Herbst <kherbst@redhat.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index c732074bf790..f977dddcd809 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2948,7 +2948,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 {
 	struct nvkm_subdev *subdev;
 	u64 mmio_base, mmio_size;
-	u32 boot0, strap;
+	u32 boot0, boot1, strap;
 	void __iomem *map = NULL;
 	int ret = -EEXIST, i;
 	unsigned chipset;
@@ -2998,9 +2998,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 			}
 		}
 
-		/* read boot0 and strapping information */
 		boot0 = ioread32_native(map + 0x000000);
-		strap = ioread32_native(map + 0x101000);
 
 		/* chipset can be overridden for devel/testing purposes */
 		chipset = nvkm_longopt(device->cfgopt, "NvChipset", 0);
@@ -3158,6 +3156,17 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		nvdev_info(device, "NVIDIA %s (%08x)\n",
 			   device->chip->name, boot0);
 
+		/* vGPU detection */
+		boot1 = ioread32_native(map + 0x000004);
+		if (device->card_type >= TU100 && (boot1 & 0x00030000)) {
+			nvdev_info(device, "vGPUs are not supported\n");
+			ret = -ENODEV;
+			goto done;
+		}
+
+		/* read strapping information */
+		strap = ioread32_native(map + 0x101000);
+
 		/* determine frequency of timing crystal */
 		if ( device->card_type <= NV_10 || device->chipset < 0x17 ||
 		    (device->chipset >= 0x20 && device->chipset < 0x25))

commit 51c05340e407b14b7d8ca5c6ad7027f269fc617b
Author: Karol Herbst <kherbst@redhat.com>
Date:   Tue Apr 28 18:54:03 2020 +0200

    drm/nouveau/device: detect if changing endianness failed
    
    v2: relax the checks a little
    
    Signed-off-by: Karol Herbst <kherbst@redhat.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 37589f36546d..c732074bf790 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2924,6 +2924,20 @@ nvkm_device_del(struct nvkm_device **pdevice)
 	}
 }
 
+static inline bool
+nvkm_device_endianness(void __iomem *pri)
+{
+	u32 boot1 = ioread32_native(pri + 0x000004) & 0x01000001;
+#ifdef __BIG_ENDIAN
+	if (!boot1)
+		return false;
+#else
+	if (boot1)
+		return false;
+#endif
+	return true;
+}
+
 int
 nvkm_device_ctor(const struct nvkm_device_func *func,
 		 const struct nvkm_device_quirk *quirk,
@@ -2973,13 +2987,15 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 	/* identify the chipset, and determine classes of subdev/engines */
 	if (detect) {
 		/* switch mmio to cpu's native endianness */
-#ifndef __BIG_ENDIAN
-		if (ioread32_native(map + 0x000004) != 0x00000000) {
-#else
-		if (ioread32_native(map + 0x000004) == 0x00000000) {
-#endif
+		if (!nvkm_device_endianness(map)) {
 			iowrite32_native(0x01000001, map + 0x000004);
 			ioread32_native(map);
+			if (!nvkm_device_endianness(map)) {
+				nvdev_error(device,
+					    "GPU not supported on big-endian\n");
+				ret = -ENOSYS;
+				goto done;
+			}
 		}
 
 		/* read boot0 and strapping information */

commit 24d5ff40a732633dceab68c6559ba723784f4a68
Author: Karol Herbst <kherbst@redhat.com>
Date:   Tue Apr 28 18:54:02 2020 +0200

    drm/nouveau/device: rework mmio mapping code to get rid of second map
    
    Fixes warnings on GPUs with smaller a smaller mmio region like vGPUs.
    
    Signed-off-by: Karol Herbst <kherbst@redhat.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 8ebbe1656008..37589f36546d 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2935,7 +2935,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 	struct nvkm_subdev *subdev;
 	u64 mmio_base, mmio_size;
 	u32 boot0, strap;
-	void __iomem *map;
+	void __iomem *map = NULL;
 	int ret = -EEXIST, i;
 	unsigned chipset;
 
@@ -2961,12 +2961,17 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 	mmio_base = device->func->resource_addr(device, 0);
 	mmio_size = device->func->resource_size(device, 0);
 
-	/* identify the chipset, and determine classes of subdev/engines */
-	if (detect) {
-		map = ioremap(mmio_base, 0x102000);
-		if (ret = -ENOMEM, map == NULL)
+	if (detect || mmio) {
+		map = ioremap(mmio_base, mmio_size);
+		if (map == NULL) {
+			nvdev_error(device, "unable to map PRI\n");
+			ret = -ENOMEM;
 			goto done;
+		}
+	}
 
+	/* identify the chipset, and determine classes of subdev/engines */
+	if (detect) {
 		/* switch mmio to cpu's native endianness */
 #ifndef __BIG_ENDIAN
 		if (ioread32_native(map + 0x000004) != 0x00000000) {
@@ -2980,7 +2985,6 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		/* read boot0 and strapping information */
 		boot0 = ioread32_native(map + 0x000000);
 		strap = ioread32_native(map + 0x101000);
-		iounmap(map);
 
 		/* chipset can be overridden for devel/testing purposes */
 		chipset = nvkm_longopt(device->cfgopt, "NvChipset", 0);
@@ -3159,12 +3163,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		device->name = device->chip->name;
 
 	if (mmio) {
-		device->pri = ioremap(mmio_base, mmio_size);
-		if (!device->pri) {
-			nvdev_error(device, "unable to map PRI\n");
-			ret = -ENOMEM;
-			goto done;
-		}
+		device->pri = map;
 	}
 
 	mutex_init(&device->mutex);
@@ -3254,6 +3253,10 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 
 	ret = 0;
 done:
+	if (map && (!mmio || ret)) {
+		device->pri = NULL;
+		iounmap(map);
+	}
 	mutex_unlock(&nv_devices_mutex);
 	return ret;
 }

commit b99ef12b80cfe48a14e7918c2f799c37d2195aca
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Jan 15 06:34:22 2020 +1000

    drm/nouveau/gr/tu11x: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 4fe9b38db459..8ebbe1656008 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2608,6 +2608,7 @@ nv167_chipset = {
 	.disp = tu102_disp_new,
 	.dma = gv100_dma_new,
 	.fifo = tu102_fifo_new,
+	.gr = tu102_gr_new,
 	.nvdec[0] = gm107_nvdec_new,
 	.nvenc[0] = gm107_nvenc_new,
 	.sec2 = tu102_sec2_new,
@@ -2645,6 +2646,7 @@ nv168_chipset = {
 	.disp = tu102_disp_new,
 	.dma = gv100_dma_new,
 	.fifo = tu102_fifo_new,
+	.gr = tu102_gr_new,
 	.nvdec[0] = gm107_nvdec_new,
 	.nvenc[0] = gm107_nvenc_new,
 	.sec2 = tu102_sec2_new,

commit 072663f86d62571fe540d9e1d24eb873a1b1182f
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Jan 15 06:34:22 2020 +1000

    drm/nouveau/acr/tu11x: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index c7d700916eae..4fe9b38db459 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2579,6 +2579,7 @@ nv166_chipset = {
 static const struct nvkm_device_chip
 nv167_chipset = {
 	.name = "TU117",
+	.acr = tu102_acr_new,
 	.bar = tu102_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
@@ -2615,6 +2616,7 @@ nv167_chipset = {
 static const struct nvkm_device_chip
 nv168_chipset = {
 	.name = "TU116",
+	.acr = tu102_acr_new,
 	.bar = tu102_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,

commit afa3b96b058d87c2c44d1c83dadb2ba6998d03ce
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Jan 15 06:34:22 2020 +1000

    drm/nouveau/gr/tu10x: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 2ef37d878951..c7d700916eae 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2491,6 +2491,7 @@ nv162_chipset = {
 	.disp = tu102_disp_new,
 	.dma = gv100_dma_new,
 	.fifo = tu102_fifo_new,
+	.gr = tu102_gr_new,
 	.nvdec[0] = gm107_nvdec_new,
 	.nvenc[0] = gm107_nvenc_new,
 	.sec2 = tu102_sec2_new,
@@ -2528,6 +2529,7 @@ nv164_chipset = {
 	.disp = tu102_disp_new,
 	.dma = gv100_dma_new,
 	.fifo = tu102_fifo_new,
+	.gr = tu102_gr_new,
 	.nvdec[0] = gm107_nvdec_new,
 	.nvdec[1] = gm107_nvdec_new,
 	.nvenc[0] = gm107_nvenc_new,
@@ -2566,6 +2568,7 @@ nv166_chipset = {
 	.disp = tu102_disp_new,
 	.dma = gv100_dma_new,
 	.fifo = tu102_fifo_new,
+	.gr = tu102_gr_new,
 	.nvdec[0] = gm107_nvdec_new,
 	.nvdec[1] = gm107_nvdec_new,
 	.nvdec[2] = gm107_nvdec_new,

commit 3fa8fe1572bc708596318280a22669dfc9eaf805
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Jan 15 06:34:22 2020 +1000

    drm/nouveau/acr/tu10x: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index c81507b11a5e..2ef37d878951 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2462,6 +2462,7 @@ nv140_chipset = {
 static const struct nvkm_device_chip
 nv162_chipset = {
 	.name = "TU102",
+	.acr = tu102_acr_new,
 	.bar = tu102_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
@@ -2498,6 +2499,7 @@ nv162_chipset = {
 static const struct nvkm_device_chip
 nv164_chipset = {
 	.name = "TU104",
+	.acr = tu102_acr_new,
 	.bar = tu102_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
@@ -2535,6 +2537,7 @@ nv164_chipset = {
 static const struct nvkm_device_chip
 nv166_chipset = {
 	.name = "TU106",
+	.acr = tu102_acr_new,
 	.bar = tu102_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,

commit 9d350c5e5156792ba7c87b3b1e897656dc2a88e5
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Jan 15 06:34:22 2020 +1000

    drm/nouveau/secboot: remove
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index b452ef2cd27d..c81507b11a5e 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2691,7 +2691,6 @@ nvkm_device_subdev(struct nvkm_device *device, int index)
 	_(MXM     , device->mxm     ,  device->mxm);
 	_(PCI     , device->pci     , &device->pci->subdev);
 	_(PMU     , device->pmu     , &device->pmu->subdev);
-	_(SECBOOT , device->secboot , &device->secboot->subdev);
 	_(THERM   , device->therm   , &device->therm->subdev);
 	_(TIMER   , device->timer   , &device->timer->subdev);
 	_(TOP     , device->top     , &device->top->subdev);
@@ -3198,7 +3197,6 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		_(NVKM_SUBDEV_MXM     ,      mxm);
 		_(NVKM_SUBDEV_PCI     ,      pci);
 		_(NVKM_SUBDEV_PMU     ,      pmu);
-		_(NVKM_SUBDEV_SECBOOT ,  secboot);
 		_(NVKM_SUBDEV_THERM   ,    therm);
 		_(NVKM_SUBDEV_TIMER   ,    timer);
 		_(NVKM_SUBDEV_TOP     ,      top);

commit 22dcda45a3d1dfe6eeb4ab0a3b9aaa2333cb649d
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Jan 15 06:34:22 2020 +1000

    drm/nouveau/acr: implement new subdev to replace "secure boot"
    
    ACR is responsible for managing the firmware for LS (Low Secure) falcons,
    this was previously handled in the driver by SECBOOT.
    
    This rewrite started from some test code that attempted to replicate the
    procedure RM uses in order to debug early Turing ACR firmwares that were
    provided by NVIDIA for development.
    
    Compared with SECBOOT, the code is structured into more individual steps,
    with the aim of making the process easier to follow/debug, whilst making
    it possible to support newer firmware versions that may have a different
    binary format or API interface.
    
    The HS (High Secure) binary(s) are now booted earlier in device init, to
    match the behaviour of RM, whereas SECBOOT would delay this until we try
    to boot the first LS falcon.
    
    There's also additional debugging features available, with the intention
    of making it easier to solve issues during FW/HW bring-up in the future.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index f98065b12c24..b452ef2cd27d 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2048,7 +2048,6 @@ nv120_chipset = {
 	.pci = gk104_pci_new,
 	.pmu = gm107_pmu_new,
 	.therm = gm200_therm_new,
-	.secboot = gm200_secboot_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
 	.volt = gk104_volt_new,
@@ -2087,7 +2086,6 @@ nv124_chipset = {
 	.pci = gk104_pci_new,
 	.pmu = gm107_pmu_new,
 	.therm = gm200_therm_new,
-	.secboot = gm200_secboot_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
 	.volt = gk104_volt_new,
@@ -2126,7 +2124,6 @@ nv126_chipset = {
 	.pci = gk104_pci_new,
 	.pmu = gm107_pmu_new,
 	.therm = gm200_therm_new,
-	.secboot = gm200_secboot_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
 	.volt = gk104_volt_new,
@@ -2157,7 +2154,6 @@ nv12b_chipset = {
 	.mc = gk20a_mc_new,
 	.mmu = gm20b_mmu_new,
 	.pmu = gm20b_pmu_new,
-	.secboot = gm20b_secboot_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
 	.ce[2] = gm200_ce_new,
@@ -2187,7 +2183,6 @@ nv130_chipset = {
 	.mc = gp100_mc_new,
 	.mmu = gp100_mmu_new,
 	.therm = gp100_therm_new,
-	.secboot = gm200_secboot_new,
 	.pci = gp100_pci_new,
 	.pmu = gp100_pmu_new,
 	.timer = gk20a_timer_new,
@@ -2228,7 +2223,6 @@ nv132_chipset = {
 	.mc = gp100_mc_new,
 	.mmu = gp100_mmu_new,
 	.therm = gp100_therm_new,
-	.secboot = gp102_secboot_new,
 	.pci = gp100_pci_new,
 	.pmu = gp102_pmu_new,
 	.timer = gk20a_timer_new,
@@ -2267,7 +2261,6 @@ nv134_chipset = {
 	.mc = gp100_mc_new,
 	.mmu = gp100_mmu_new,
 	.therm = gp100_therm_new,
-	.secboot = gp102_secboot_new,
 	.pci = gp100_pci_new,
 	.pmu = gp102_pmu_new,
 	.timer = gk20a_timer_new,
@@ -2306,7 +2299,6 @@ nv136_chipset = {
 	.mc = gp100_mc_new,
 	.mmu = gp100_mmu_new,
 	.therm = gp100_therm_new,
-	.secboot = gp102_secboot_new,
 	.pci = gp100_pci_new,
 	.pmu = gp102_pmu_new,
 	.timer = gk20a_timer_new,
@@ -2344,7 +2336,6 @@ nv137_chipset = {
 	.mc = gp100_mc_new,
 	.mmu = gp100_mmu_new,
 	.therm = gp100_therm_new,
-	.secboot = gp102_secboot_new,
 	.pci = gp100_pci_new,
 	.pmu = gp102_pmu_new,
 	.timer = gk20a_timer_new,
@@ -2383,7 +2374,6 @@ nv138_chipset = {
 	.mc = gp100_mc_new,
 	.mmu = gp100_mmu_new,
 	.therm = gp100_therm_new,
-	.secboot = gp108_secboot_new,
 	.pci = gp100_pci_new,
 	.pmu = gp102_pmu_new,
 	.timer = gk20a_timer_new,
@@ -2415,7 +2405,6 @@ nv13b_chipset = {
 	.ltc = gp10b_ltc_new,
 	.mc = gp10b_mc_new,
 	.mmu = gp10b_mmu_new,
-	.secboot = gp10b_secboot_new,
 	.pmu = gp10b_pmu_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
@@ -2447,7 +2436,6 @@ nv140_chipset = {
 	.mmu = gv100_mmu_new,
 	.pci = gp100_pci_new,
 	.pmu = gp102_pmu_new,
-	.secboot = gp108_secboot_new,
 	.therm = gp100_therm_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,

commit 10e43bfd2f8dd8dfff4d40615b529327745bb0b2
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Jan 15 06:34:21 2020 +1000

    drm/nouveau/nvenc: add a stub implementation for the GPUs where it should be supported
    
    Mostly so we don't lose info hidden in falcon.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 53019ab7d04c..f98065b12c24 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1988,6 +1988,7 @@ nv117_chipset = {
 	.fifo = gm107_fifo_new,
 	.gr = gm107_gr_new,
 	.nvdec[0] = gm107_nvdec_new,
+	.nvenc[0] = gm107_nvenc_new,
 	.sw = gf100_sw_new,
 };
 
@@ -2059,6 +2060,8 @@ nv120_chipset = {
 	.fifo = gm200_fifo_new,
 	.gr = gm200_gr_new,
 	.nvdec[0] = gm107_nvdec_new,
+	.nvenc[0] = gm107_nvenc_new,
+	.nvenc[1] = gm107_nvenc_new,
 	.sw = gf100_sw_new,
 };
 
@@ -2096,6 +2099,8 @@ nv124_chipset = {
 	.fifo = gm200_fifo_new,
 	.gr = gm200_gr_new,
 	.nvdec[0] = gm107_nvdec_new,
+	.nvenc[0] = gm107_nvenc_new,
+	.nvenc[1] = gm107_nvenc_new,
 	.sw = gf100_sw_new,
 };
 
@@ -2133,6 +2138,7 @@ nv126_chipset = {
 	.fifo = gm200_fifo_new,
 	.gr = gm200_gr_new,
 	.nvdec[0] = gm107_nvdec_new,
+	.nvenc[0] = gm107_nvenc_new,
 	.sw = gf100_sw_new,
 };
 
@@ -2197,6 +2203,9 @@ nv130_chipset = {
 	.fifo = gp100_fifo_new,
 	.gr = gp100_gr_new,
 	.nvdec[0] = gm107_nvdec_new,
+	.nvenc[0] = gm107_nvenc_new,
+	.nvenc[1] = gm107_nvenc_new,
+	.nvenc[2] = gm107_nvenc_new,
 	.sw = gf100_sw_new,
 };
 
@@ -2233,6 +2242,8 @@ nv132_chipset = {
 	.fifo = gp100_fifo_new,
 	.gr = gp102_gr_new,
 	.nvdec[0] = gm107_nvdec_new,
+	.nvenc[0] = gm107_nvenc_new,
+	.nvenc[1] = gm107_nvenc_new,
 	.sec2 = gp102_sec2_new,
 	.sw = gf100_sw_new,
 };
@@ -2270,6 +2281,8 @@ nv134_chipset = {
 	.fifo = gp100_fifo_new,
 	.gr = gp104_gr_new,
 	.nvdec[0] = gm107_nvdec_new,
+	.nvenc[0] = gm107_nvenc_new,
+	.nvenc[1] = gm107_nvenc_new,
 	.sec2 = gp102_sec2_new,
 	.sw = gf100_sw_new,
 };
@@ -2307,6 +2320,7 @@ nv136_chipset = {
 	.fifo = gp100_fifo_new,
 	.gr = gp104_gr_new,
 	.nvdec[0] = gm107_nvdec_new,
+	.nvenc[0] = gm107_nvenc_new,
 	.sec2 = gp102_sec2_new,
 	.sw = gf100_sw_new,
 };
@@ -2344,6 +2358,8 @@ nv137_chipset = {
 	.fifo = gp100_fifo_new,
 	.gr = gp107_gr_new,
 	.nvdec[0] = gm107_nvdec_new,
+	.nvenc[0] = gm107_nvenc_new,
+	.nvenc[1] = gm107_nvenc_new,
 	.sec2 = gp102_sec2_new,
 	.sw = gf100_sw_new,
 };
@@ -2449,6 +2465,9 @@ nv140_chipset = {
 	.fifo = gv100_fifo_new,
 	.gr = gv100_gr_new,
 	.nvdec[0] = gm107_nvdec_new,
+	.nvenc[0] = gm107_nvenc_new,
+	.nvenc[1] = gm107_nvenc_new,
+	.nvenc[2] = gm107_nvenc_new,
 	.sec2 = gp108_sec2_new,
 };
 
@@ -2484,6 +2503,7 @@ nv162_chipset = {
 	.dma = gv100_dma_new,
 	.fifo = tu102_fifo_new,
 	.nvdec[0] = gm107_nvdec_new,
+	.nvenc[0] = gm107_nvenc_new,
 	.sec2 = tu102_sec2_new,
 };
 
@@ -2520,6 +2540,7 @@ nv164_chipset = {
 	.fifo = tu102_fifo_new,
 	.nvdec[0] = gm107_nvdec_new,
 	.nvdec[1] = gm107_nvdec_new,
+	.nvenc[0] = gm107_nvenc_new,
 	.sec2 = tu102_sec2_new,
 };
 
@@ -2557,6 +2578,7 @@ nv166_chipset = {
 	.nvdec[0] = gm107_nvdec_new,
 	.nvdec[1] = gm107_nvdec_new,
 	.nvdec[2] = gm107_nvdec_new,
+	.nvenc[0] = gm107_nvenc_new,
 	.sec2 = tu102_sec2_new,
 };
 
@@ -2592,6 +2614,7 @@ nv167_chipset = {
 	.dma = gv100_dma_new,
 	.fifo = tu102_fifo_new,
 	.nvdec[0] = gm107_nvdec_new,
+	.nvenc[0] = gm107_nvenc_new,
 	.sec2 = tu102_sec2_new,
 };
 
@@ -2627,6 +2650,7 @@ nv168_chipset = {
 	.dma = gv100_dma_new,
 	.fifo = tu102_fifo_new,
 	.nvdec[0] = gm107_nvdec_new,
+	.nvenc[0] = gm107_nvenc_new,
 	.sec2 = tu102_sec2_new,
 };
 
@@ -2724,9 +2748,9 @@ nvkm_device_engine(struct nvkm_device *device, int index)
 	_(MSPDEC , device->mspdec  ,  device->mspdec);
 	_(MSPPP  , device->msppp   ,  device->msppp);
 	_(MSVLD  , device->msvld   ,  device->msvld);
-	_(NVENC0 , device->nvenc[0],  device->nvenc[0]);
-	_(NVENC1 , device->nvenc[1],  device->nvenc[1]);
-	_(NVENC2 , device->nvenc[2],  device->nvenc[2]);
+	_(NVENC0 , device->nvenc[0], &device->nvenc[0]->engine);
+	_(NVENC1 , device->nvenc[1], &device->nvenc[1]->engine);
+	_(NVENC2 , device->nvenc[2], &device->nvenc[2]->engine);
 	_(NVDEC0 , device->nvdec[0], &device->nvdec[0]->engine);
 	_(NVDEC1 , device->nvdec[1], &device->nvdec[1]->engine);
 	_(NVDEC2 , device->nvdec[2], &device->nvdec[2]->engine);

commit a5482b9ff194226ea1b549234285c80a44c69aa6
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Jan 15 06:34:21 2020 +1000

    drm/nouveau/nvdec/gm107-: add missing engine instances
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 9dbbdbb9c019..53019ab7d04c 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1987,6 +1987,7 @@ nv117_chipset = {
 	.dma = gf119_dma_new,
 	.fifo = gm107_fifo_new,
 	.gr = gm107_gr_new,
+	.nvdec[0] = gm107_nvdec_new,
 	.sw = gf100_sw_new,
 };
 
@@ -2057,6 +2058,7 @@ nv120_chipset = {
 	.dma = gf119_dma_new,
 	.fifo = gm200_fifo_new,
 	.gr = gm200_gr_new,
+	.nvdec[0] = gm107_nvdec_new,
 	.sw = gf100_sw_new,
 };
 
@@ -2093,6 +2095,7 @@ nv124_chipset = {
 	.dma = gf119_dma_new,
 	.fifo = gm200_fifo_new,
 	.gr = gm200_gr_new,
+	.nvdec[0] = gm107_nvdec_new,
 	.sw = gf100_sw_new,
 };
 
@@ -2129,6 +2132,7 @@ nv126_chipset = {
 	.dma = gf119_dma_new,
 	.fifo = gm200_fifo_new,
 	.gr = gm200_gr_new,
+	.nvdec[0] = gm107_nvdec_new,
 	.sw = gf100_sw_new,
 };
 
@@ -2192,6 +2196,7 @@ nv130_chipset = {
 	.disp = gp100_disp_new,
 	.fifo = gp100_fifo_new,
 	.gr = gp100_gr_new,
+	.nvdec[0] = gm107_nvdec_new,
 	.sw = gf100_sw_new,
 };
 
@@ -2514,6 +2519,7 @@ nv164_chipset = {
 	.dma = gv100_dma_new,
 	.fifo = tu102_fifo_new,
 	.nvdec[0] = gm107_nvdec_new,
+	.nvdec[1] = gm107_nvdec_new,
 	.sec2 = tu102_sec2_new,
 };
 
@@ -2549,6 +2555,8 @@ nv166_chipset = {
 	.dma = gv100_dma_new,
 	.fifo = tu102_fifo_new,
 	.nvdec[0] = gm107_nvdec_new,
+	.nvdec[1] = gm107_nvdec_new,
+	.nvdec[2] = gm107_nvdec_new,
 	.sec2 = tu102_sec2_new,
 };
 

commit 68f02444946be707ee3beefabf5e4d5e6374f13a
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Jan 15 06:34:21 2020 +1000

    drm/nouveau/nvdec/gm107: rename from gp102 implementation
    
    NVDEC is available from GM107, and we currently only have a stub
    implementation anyway, let's make it explicit.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index d63478beeb5d..9dbbdbb9c019 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2227,7 +2227,7 @@ nv132_chipset = {
 	.dma = gf119_dma_new,
 	.fifo = gp100_fifo_new,
 	.gr = gp102_gr_new,
-	.nvdec[0] = gp102_nvdec_new,
+	.nvdec[0] = gm107_nvdec_new,
 	.sec2 = gp102_sec2_new,
 	.sw = gf100_sw_new,
 };
@@ -2264,7 +2264,7 @@ nv134_chipset = {
 	.dma = gf119_dma_new,
 	.fifo = gp100_fifo_new,
 	.gr = gp104_gr_new,
-	.nvdec[0] = gp102_nvdec_new,
+	.nvdec[0] = gm107_nvdec_new,
 	.sec2 = gp102_sec2_new,
 	.sw = gf100_sw_new,
 };
@@ -2301,7 +2301,7 @@ nv136_chipset = {
 	.dma = gf119_dma_new,
 	.fifo = gp100_fifo_new,
 	.gr = gp104_gr_new,
-	.nvdec[0] = gp102_nvdec_new,
+	.nvdec[0] = gm107_nvdec_new,
 	.sec2 = gp102_sec2_new,
 	.sw = gf100_sw_new,
 };
@@ -2338,7 +2338,7 @@ nv137_chipset = {
 	.dma = gf119_dma_new,
 	.fifo = gp100_fifo_new,
 	.gr = gp107_gr_new,
-	.nvdec[0] = gp102_nvdec_new,
+	.nvdec[0] = gm107_nvdec_new,
 	.sec2 = gp102_sec2_new,
 	.sw = gf100_sw_new,
 };
@@ -2375,7 +2375,7 @@ nv138_chipset = {
 	.dma = gf119_dma_new,
 	.fifo = gp100_fifo_new,
 	.gr = gp108_gr_new,
-	.nvdec[0] = gp102_nvdec_new,
+	.nvdec[0] = gm107_nvdec_new,
 	.sec2 = gp108_sec2_new,
 	.sw = gf100_sw_new,
 };
@@ -2443,7 +2443,7 @@ nv140_chipset = {
 	.dma = gv100_dma_new,
 	.fifo = gv100_fifo_new,
 	.gr = gv100_gr_new,
-	.nvdec[0] = gp102_nvdec_new,
+	.nvdec[0] = gm107_nvdec_new,
 	.sec2 = gp108_sec2_new,
 };
 
@@ -2478,7 +2478,7 @@ nv162_chipset = {
 	.disp = tu102_disp_new,
 	.dma = gv100_dma_new,
 	.fifo = tu102_fifo_new,
-	.nvdec[0] = gp102_nvdec_new,
+	.nvdec[0] = gm107_nvdec_new,
 	.sec2 = tu102_sec2_new,
 };
 
@@ -2513,7 +2513,7 @@ nv164_chipset = {
 	.disp = tu102_disp_new,
 	.dma = gv100_dma_new,
 	.fifo = tu102_fifo_new,
-	.nvdec[0] = gp102_nvdec_new,
+	.nvdec[0] = gm107_nvdec_new,
 	.sec2 = tu102_sec2_new,
 };
 
@@ -2548,7 +2548,7 @@ nv166_chipset = {
 	.disp = tu102_disp_new,
 	.dma = gv100_dma_new,
 	.fifo = tu102_fifo_new,
-	.nvdec[0] = gp102_nvdec_new,
+	.nvdec[0] = gm107_nvdec_new,
 	.sec2 = tu102_sec2_new,
 };
 
@@ -2583,7 +2583,7 @@ nv167_chipset = {
 	.disp = tu102_disp_new,
 	.dma = gv100_dma_new,
 	.fifo = tu102_fifo_new,
-	.nvdec[0] = gp102_nvdec_new,
+	.nvdec[0] = gm107_nvdec_new,
 	.sec2 = tu102_sec2_new,
 };
 
@@ -2618,7 +2618,7 @@ nv168_chipset = {
 	.disp = tu102_disp_new,
 	.dma = gv100_dma_new,
 	.fifo = tu102_fifo_new,
-	.nvdec[0] = gp102_nvdec_new,
+	.nvdec[0] = gm107_nvdec_new,
 	.sec2 = tu102_sec2_new,
 };
 

commit e14e5e6c33746247d442ddd4d79e3b83878a39b4
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Jan 15 06:34:21 2020 +1000

    drm/nouveau/sec2/gp108: split from gp102 implementation
    
    ACR LS FW loading is moving out of SECBOOT and into their specific subdevs,
    and the available GP108/GV100 FWs differ from the other GP10x boards.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 8817ecaf4e7e..d63478beeb5d 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2376,7 +2376,7 @@ nv138_chipset = {
 	.fifo = gp100_fifo_new,
 	.gr = gp108_gr_new,
 	.nvdec[0] = gp102_nvdec_new,
-	.sec2 = gp102_sec2_new,
+	.sec2 = gp108_sec2_new,
 	.sw = gf100_sw_new,
 };
 
@@ -2444,7 +2444,7 @@ nv140_chipset = {
 	.fifo = gv100_fifo_new,
 	.gr = gv100_gr_new,
 	.nvdec[0] = gp102_nvdec_new,
-	.sec2 = gp102_sec2_new,
+	.sec2 = gp108_sec2_new,
 };
 
 static const struct nvkm_device_chip

commit a096ff19811e21e5c9215e72637bdd2c05d13471
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Jan 15 06:34:21 2020 +1000

    drm/nouveau/gr/gp108: split from gp107
    
    ACR LS FW loading is moving out of SECBOOT and into their specific subdevs,
    and the available GP107/GP108 FWs have interface differences.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index b24e64f5e7bc..8817ecaf4e7e 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2374,7 +2374,7 @@ nv138_chipset = {
 	.disp = gp102_disp_new,
 	.dma = gf119_dma_new,
 	.fifo = gp100_fifo_new,
-	.gr = gp107_gr_new,
+	.gr = gp108_gr_new,
 	.nvdec[0] = gp102_nvdec_new,
 	.sec2 = gp102_sec2_new,
 	.sw = gf100_sw_new,

commit e905736c6d7328ce2d34640741f4b7e75c64a737
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Jan 15 06:34:21 2020 +1000

    drm/nouveau/pmu/gp10b: split from gm20b implementation
    
    ACR LS FW loading is moving out of SECBOOT and into their specific subdevs,
    and the available GM20B/GP10B FWs have interface differences.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 859bf0c4a0da..b24e64f5e7bc 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2395,7 +2395,7 @@ nv13b_chipset = {
 	.mc = gp10b_mc_new,
 	.mmu = gp10b_mmu_new,
 	.secboot = gp10b_secboot_new,
-	.pmu = gm20b_pmu_new,
+	.pmu = gp10b_pmu_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
 	.ce[0] = gp100_ce_new,

commit 67e7c6cf8f521463ca8c6f37098dcaf9e391b080
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Jan 15 06:34:21 2020 +1000

    drm/nouveau/acr: add stub implementation for all GPUs currently supported by SECBOOT
    
    PMU, SEC2 and GR will be modified to register their falcons with ACR before
    the main commit switching everything over.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 401323dc4a85..859bf0c4a0da 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2027,6 +2027,7 @@ nv118_chipset = {
 static const struct nvkm_device_chip
 nv120_chipset = {
 	.name = "GM200",
+	.acr = gm200_acr_new,
 	.bar = gm107_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
@@ -2062,6 +2063,7 @@ nv120_chipset = {
 static const struct nvkm_device_chip
 nv124_chipset = {
 	.name = "GM204",
+	.acr = gm200_acr_new,
 	.bar = gm107_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
@@ -2097,6 +2099,7 @@ nv124_chipset = {
 static const struct nvkm_device_chip
 nv126_chipset = {
 	.name = "GM206",
+	.acr = gm200_acr_new,
 	.bar = gm107_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
@@ -2132,6 +2135,7 @@ nv126_chipset = {
 static const struct nvkm_device_chip
 nv12b_chipset = {
 	.name = "GM20B",
+	.acr = gm20b_acr_new,
 	.bar = gm20b_bar_new,
 	.bus = gf100_bus_new,
 	.clk = gm20b_clk_new,
@@ -2157,6 +2161,7 @@ nv12b_chipset = {
 static const struct nvkm_device_chip
 nv130_chipset = {
 	.name = "GP100",
+	.acr = gm200_acr_new,
 	.bar = gm107_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
@@ -2193,6 +2198,7 @@ nv130_chipset = {
 static const struct nvkm_device_chip
 nv132_chipset = {
 	.name = "GP102",
+	.acr = gp102_acr_new,
 	.bar = gm107_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
@@ -2229,6 +2235,7 @@ nv132_chipset = {
 static const struct nvkm_device_chip
 nv134_chipset = {
 	.name = "GP104",
+	.acr = gp102_acr_new,
 	.bar = gm107_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
@@ -2265,6 +2272,7 @@ nv134_chipset = {
 static const struct nvkm_device_chip
 nv136_chipset = {
 	.name = "GP106",
+	.acr = gp102_acr_new,
 	.bar = gm107_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
@@ -2301,6 +2309,7 @@ nv136_chipset = {
 static const struct nvkm_device_chip
 nv137_chipset = {
 	.name = "GP107",
+	.acr = gp102_acr_new,
 	.bar = gm107_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
@@ -2337,6 +2346,7 @@ nv137_chipset = {
 static const struct nvkm_device_chip
 nv138_chipset = {
 	.name = "GP108",
+	.acr = gp108_acr_new,
 	.bar = gm107_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
@@ -2373,6 +2383,7 @@ nv138_chipset = {
 static const struct nvkm_device_chip
 nv13b_chipset = {
 	.name = "GP10B",
+	.acr = gp10b_acr_new,
 	.bar = gm20b_bar_new,
 	.bus = gf100_bus_new,
 	.fault = gp10b_fault_new,
@@ -2397,6 +2408,7 @@ nv13b_chipset = {
 static const struct nvkm_device_chip
 nv140_chipset = {
 	.name = "GV100",
+	.acr = gp108_acr_new,
 	.bar = gm107_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,

commit 31bef57f6ce37a7382d89ab117b9e33bf92a0e8b
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Jan 15 06:34:21 2020 +1000

    drm/nouveau/core: define ACR subdev
    
    This will replace the current SECBOOT subdev for handling firmware on
    secure falcons.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index eba450e689b2..401323dc4a85 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2638,6 +2638,7 @@ nvkm_device_subdev(struct nvkm_device *device, int index)
 
 	switch (index) {
 #define _(n,p,m) case NVKM_SUBDEV_##n: if (p) return (m); break
+	_(ACR     , device->acr     , &device->acr->subdev);
 	_(BAR     , device->bar     , &device->bar->subdev);
 	_(VBIOS   , device->bios    , &device->bios->subdev);
 	_(BUS     , device->bus     , &device->bus->subdev);
@@ -3144,6 +3145,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 	}                                                                      \
 	break
 		switch (i) {
+		_(NVKM_SUBDEV_ACR     ,      acr);
 		_(NVKM_SUBDEV_BAR     ,      bar);
 		_(NVKM_SUBDEV_VBIOS   ,     bios);
 		_(NVKM_SUBDEV_BUS     ,      bus);

commit d7ca5ddf585e20e879e3ebe3e5be0a0477b700b8
Author: Thierry Reding <treding@nvidia.com>
Date:   Mon Dec 9 13:00:05 2019 +0100

    drm/nouveau/ce/gp10b: Use correct copy engine
    
    gp10b uses the new engine enumeration mechanism introduced in the Pascal
    architecture. As a result, the copy engine, which used to be at index 2
    for prior Tegra GPU instantiations, has now moved to index 0. Fix up the
    index and also use the gp100 variant of the copy engine class because on
    gp10b the PASCAL_DMA_COPY_B class is not supported.
    
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 231ec0073af3..eba450e689b2 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2387,7 +2387,7 @@ nv13b_chipset = {
 	.pmu = gm20b_pmu_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
-	.ce[2] = gp102_ce_new,
+	.ce[0] = gp100_ce_new,
 	.dma = gf119_dma_new,
 	.fifo = gp10b_fifo_new,
 	.gr = gp10b_gr_new,

commit 0d0d498265e7cb3329d2a7185b1d7cfb3be95d65
Author: Thierry Reding <treding@nvidia.com>
Date:   Mon Dec 9 13:00:04 2019 +0100

    drm/nouveau/ltc/gp10b: Add custom L2 cache implementation
    
    There are extra registers that need to be programmed to make the level 2
    cache work on GP10B, such as the stream ID register that is used when an
    SMMU is used to translate memory addresses.
    
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index b061df138142..231ec0073af3 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2380,7 +2380,7 @@ nv13b_chipset = {
 	.fuse = gm107_fuse_new,
 	.ibus = gp10b_ibus_new,
 	.imem = gk20a_instmem_new,
-	.ltc = gp102_ltc_new,
+	.ltc = gp10b_ltc_new,
 	.mc = gp10b_mc_new,
 	.mmu = gp10b_mmu_new,
 	.secboot = gp10b_secboot_new,

commit 0ac7facb7071836154687a228eaead3fc82297c1
Author: Thierry Reding <treding@nvidia.com>
Date:   Mon Dec 9 12:59:59 2019 +0100

    drm/nouveau/fault: Add support for GP10B
    
    There is no BAR2 on GP10B and there is no need to map through BAR2
    because all memory is shared between the GPU and the CPU. Add a custom
    implementation of the fault sub-device that uses nvkm_memory_addr()
    instead of nvkm_memory_bar2() to return the address of a pinned fault
    buffer.
    
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index c3c7159f3411..b061df138142 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2375,7 +2375,7 @@ nv13b_chipset = {
 	.name = "GP10B",
 	.bar = gm20b_bar_new,
 	.bus = gf100_bus_new,
-	.fault = gp100_fault_new,
+	.fault = gp10b_fault_new,
 	.fb = gp10b_fb_new,
 	.fuse = gm107_fuse_new,
 	.ibus = gp10b_ibus_new,

commit 75dec321cd2dceb439686b771c67e677c47618c5
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Mon Jun 17 12:52:48 2019 +1000

    drm/nouveau/core: recognise TU116 chipset
    
    Modesetting only, still waiting on ACR/GR firmware from NVIDIA for Turing
    graphics/compute bring-up.
    
    Each subsystem was compared with traces, along with various tests to check
    that things generally work as they should, and appears compatible enough
    with the current TU117 code to enable support.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index c08be2860d03..c3c7159f3411 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2575,6 +2575,41 @@ nv167_chipset = {
 	.sec2 = tu102_sec2_new,
 };
 
+static const struct nvkm_device_chip
+nv168_chipset = {
+	.name = "TU116",
+	.bar = tu102_bar_new,
+	.bios = nvkm_bios_new,
+	.bus = gf100_bus_new,
+	.devinit = tu102_devinit_new,
+	.fault = tu102_fault_new,
+	.fb = gv100_fb_new,
+	.fuse = gm107_fuse_new,
+	.gpio = gk104_gpio_new,
+	.gsp = gv100_gsp_new,
+	.i2c = gm200_i2c_new,
+	.ibus = gm200_ibus_new,
+	.imem = nv50_instmem_new,
+	.ltc = gp102_ltc_new,
+	.mc = tu102_mc_new,
+	.mmu = tu102_mmu_new,
+	.pci = gp100_pci_new,
+	.pmu = gp102_pmu_new,
+	.therm = gp100_therm_new,
+	.timer = gk20a_timer_new,
+	.top = gk104_top_new,
+	.ce[0] = tu102_ce_new,
+	.ce[1] = tu102_ce_new,
+	.ce[2] = tu102_ce_new,
+	.ce[3] = tu102_ce_new,
+	.ce[4] = tu102_ce_new,
+	.disp = tu102_disp_new,
+	.dma = gv100_dma_new,
+	.fifo = tu102_fifo_new,
+	.nvdec[0] = gp102_nvdec_new,
+	.sec2 = tu102_sec2_new,
+};
+
 static int
 nvkm_device_event_ctor(struct nvkm_object *object, void *data, u32 size,
 		       struct nvkm_notify *notify)
@@ -3052,6 +3087,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		case 0x164: device->chip = &nv164_chipset; break;
 		case 0x166: device->chip = &nv166_chipset; break;
 		case 0x167: device->chip = &nv167_chipset; break;
+		case 0x168: device->chip = &nv168_chipset; break;
 		default:
 			nvdev_error(device, "unknown chipset (%08x)\n", boot0);
 			goto done;

commit bb2b4074f8d99214718f45c379ceb74564aad3bc
Author: Timo Wiren <timo.wiren@gmail.com>
Date:   Wed May 22 20:01:06 2019 +0300

    drm/nouveau/mcp89/mmu: Use mcp77_mmu_new instead of g84_mmu_new on MCP89.
    
    Fix a crash or broken depth testing in all OpenGL applications that use the
    depth buffer on MCP89 (GeForce 320M) seen on a MacBook Pro Late 2010.
    
    The bug is tracked in https://bugs.freedesktop.org/show_bug.cgi?id=108500
    
    Signed-off-by: Timo Wiren <timo.wiren@gmail.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 10d91e8bbb94..c08be2860d03 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1316,7 +1316,7 @@ nvaf_chipset = {
 	.i2c = g94_i2c_new,
 	.imem = nv50_instmem_new,
 	.mc = gt215_mc_new,
-	.mmu = g84_mmu_new,
+	.mmu = mcp77_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = g94_pci_new,
 	.pmu = gt215_pmu_new,

commit e15b682aad77f158e4af51d258ed7398036fdf8d
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu May 9 15:01:26 2019 +1000

    drm/nouveau/core: initial support for boards with TU117 chipset
    
    Modesetting only, still waiting on ACR/GR firmware from NVIDIA for Turing
    graphics/compute bring-up.
    
    Each subsystem was compared with traces, along with various tests to check
    that things generally work as they should, and appears compatible enough
    with the current TU106 code to enable support.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 159a9f83c05e..10d91e8bbb94 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2540,6 +2540,41 @@ nv166_chipset = {
 	.sec2 = tu102_sec2_new,
 };
 
+static const struct nvkm_device_chip
+nv167_chipset = {
+	.name = "TU117",
+	.bar = tu102_bar_new,
+	.bios = nvkm_bios_new,
+	.bus = gf100_bus_new,
+	.devinit = tu102_devinit_new,
+	.fault = tu102_fault_new,
+	.fb = gv100_fb_new,
+	.fuse = gm107_fuse_new,
+	.gpio = gk104_gpio_new,
+	.gsp = gv100_gsp_new,
+	.i2c = gm200_i2c_new,
+	.ibus = gm200_ibus_new,
+	.imem = nv50_instmem_new,
+	.ltc = gp102_ltc_new,
+	.mc = tu102_mc_new,
+	.mmu = tu102_mmu_new,
+	.pci = gp100_pci_new,
+	.pmu = gp102_pmu_new,
+	.therm = gp100_therm_new,
+	.timer = gk20a_timer_new,
+	.top = gk104_top_new,
+	.ce[0] = tu102_ce_new,
+	.ce[1] = tu102_ce_new,
+	.ce[2] = tu102_ce_new,
+	.ce[3] = tu102_ce_new,
+	.ce[4] = tu102_ce_new,
+	.disp = tu102_disp_new,
+	.dma = gv100_dma_new,
+	.fifo = tu102_fifo_new,
+	.nvdec[0] = gp102_nvdec_new,
+	.sec2 = tu102_sec2_new,
+};
+
 static int
 nvkm_device_event_ctor(struct nvkm_object *object, void *data, u32 size,
 		       struct nvkm_notify *notify)
@@ -3016,6 +3051,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		case 0x162: device->chip = &nv162_chipset; break;
 		case 0x164: device->chip = &nv164_chipset; break;
 		case 0x166: device->chip = &nv166_chipset; break;
+		case 0x167: device->chip = &nv167_chipset; break;
 		default:
 			nvdev_error(device, "unknown chipset (%08x)\n", boot0);
 			goto done;

commit a2ac09a03d2a0306eb584192b2a5d6c2aeb265ad
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu May 9 16:48:50 2019 +1000

    drm/nouveau/core: allow detected chipset to be overridden
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 7971096b6767..159a9f83c05e 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2824,8 +2824,8 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 	u64 mmio_base, mmio_size;
 	u32 boot0, strap;
 	void __iomem *map;
-	int ret = -EEXIST;
-	int i;
+	int ret = -EEXIST, i;
+	unsigned chipset;
 
 	mutex_lock(&nv_devices_mutex);
 	if (nvkm_device_find_locked(handle))
@@ -2870,6 +2870,26 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		strap = ioread32_native(map + 0x101000);
 		iounmap(map);
 
+		/* chipset can be overridden for devel/testing purposes */
+		chipset = nvkm_longopt(device->cfgopt, "NvChipset", 0);
+		if (chipset) {
+			u32 override_boot0;
+
+			if (chipset >= 0x10) {
+				override_boot0  = ((chipset & 0x1ff) << 20);
+				override_boot0 |= 0x000000a1;
+			} else {
+				if (chipset != 0x04)
+					override_boot0 = 0x20104000;
+				else
+					override_boot0 = 0x20004000;
+			}
+
+			nvdev_warn(device, "CHIPSET OVERRIDE: %08x -> %08x\n",
+				   boot0, override_boot0);
+			boot0 = override_boot0;
+		}
+
 		/* determine chipset and derive architecture from it */
 		if ((boot0 & 0x1f000000) > 0) {
 			device->chipset = (boot0 & 0x1ff00000) >> 20;

commit 8d2c1e337604fbffc3fc01475b97584a0cb85082
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Feb 12 22:28:13 2019 +1000

    drm/nouveau/sec2/tu102-: instantiate SEC2 falcon
    
    Required for ACR.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 8e52f0ec21a0..7971096b6767 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2467,6 +2467,7 @@ nv162_chipset = {
 	.dma = gv100_dma_new,
 	.fifo = tu102_fifo_new,
 	.nvdec[0] = gp102_nvdec_new,
+	.sec2 = tu102_sec2_new,
 };
 
 static const struct nvkm_device_chip
@@ -2501,6 +2502,7 @@ nv164_chipset = {
 	.dma = gv100_dma_new,
 	.fifo = tu102_fifo_new,
 	.nvdec[0] = gp102_nvdec_new,
+	.sec2 = tu102_sec2_new,
 };
 
 static const struct nvkm_device_chip
@@ -2535,6 +2537,7 @@ nv166_chipset = {
 	.dma = gv100_dma_new,
 	.fifo = tu102_fifo_new,
 	.nvdec[0] = gp102_nvdec_new,
+	.sec2 = tu102_sec2_new,
 };
 
 static int

commit 1a346934909b2ec90a19ce453c68eb2186580e0e
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Feb 12 22:28:13 2019 +1000

    drm/nouveau/nvdec/tu102-: instantiate NVDEC0 falcon
    
    Required to run VPR scrubber binary as part of secboot.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index b583586e9f56..8e52f0ec21a0 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2466,6 +2466,7 @@ nv162_chipset = {
 	.disp = tu102_disp_new,
 	.dma = gv100_dma_new,
 	.fifo = tu102_fifo_new,
+	.nvdec[0] = gp102_nvdec_new,
 };
 
 static const struct nvkm_device_chip
@@ -2499,6 +2500,7 @@ nv164_chipset = {
 	.disp = tu102_disp_new,
 	.dma = gv100_dma_new,
 	.fifo = tu102_fifo_new,
+	.nvdec[0] = gp102_nvdec_new,
 };
 
 static const struct nvkm_device_chip
@@ -2532,6 +2534,7 @@ nv166_chipset = {
 	.disp = tu102_disp_new,
 	.dma = gv100_dma_new,
 	.fifo = tu102_fifo_new,
+	.nvdec[0] = gp102_nvdec_new,
 };
 
 static int

commit 2944b19b5cb5109c67944086de49ef0b47e64d83
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Feb 12 22:28:13 2019 +1000

    drm/nouveau/gsp/gv100-: instantiate GSP falcon
    
    We need this for Turing ACR, but it's present from Volta onwards.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 5e8cb1dc54dd..b583586e9f56 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2405,6 +2405,7 @@ nv140_chipset = {
 	.fb = gv100_fb_new,
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
+	.gsp = gv100_gsp_new,
 	.i2c = gm200_i2c_new,
 	.ibus = gm200_ibus_new,
 	.imem = nv50_instmem_new,
@@ -2445,6 +2446,7 @@ nv162_chipset = {
 	.fb = gv100_fb_new,
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
+	.gsp = gv100_gsp_new,
 	.i2c = gm200_i2c_new,
 	.ibus = gm200_ibus_new,
 	.imem = nv50_instmem_new,
@@ -2477,6 +2479,7 @@ nv164_chipset = {
 	.fb = gv100_fb_new,
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
+	.gsp = gv100_gsp_new,
 	.i2c = gm200_i2c_new,
 	.ibus = gm200_ibus_new,
 	.imem = nv50_instmem_new,
@@ -2509,6 +2512,7 @@ nv166_chipset = {
 	.fb = gv100_fb_new,
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
+	.gsp = gv100_gsp_new,
 	.i2c = gm200_i2c_new,
 	.ibus = gm200_ibus_new,
 	.imem = nv50_instmem_new,

commit 78cdadb8405e8364d990e7b7183b3d404f4de9bf
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Feb 12 22:28:13 2019 +1000

    drm/nouveau/core: define GSP subdev
    
    Exact meaning of the acronym is unknown, but we need this for Turing ACR.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index e6b962f664d8..5e8cb1dc54dd 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2567,6 +2567,7 @@ nvkm_device_subdev(struct nvkm_device *device, int index)
 	_(FB      , device->fb      , &device->fb->subdev);
 	_(FUSE    , device->fuse    , &device->fuse->subdev);
 	_(GPIO    , device->gpio    , &device->gpio->subdev);
+	_(GSP     , device->gsp     , &device->gsp->subdev);
 	_(I2C     , device->i2c     , &device->i2c->subdev);
 	_(IBUS    , device->ibus    ,  device->ibus);
 	_(ICCSENSE, device->iccsense, &device->iccsense->subdev);
@@ -3050,6 +3051,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		_(NVKM_SUBDEV_FB      ,       fb);
 		_(NVKM_SUBDEV_FUSE    ,     fuse);
 		_(NVKM_SUBDEV_GPIO    ,     gpio);
+		_(NVKM_SUBDEV_GSP     ,      gsp);
 		_(NVKM_SUBDEV_I2C     ,      i2c);
 		_(NVKM_SUBDEV_IBUS    ,     ibus);
 		_(NVKM_SUBDEV_ICCSENSE, iccsense);

commit b6c82854761f6fa0c1b1c28699bbac5c9840ec73
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Jan 17 12:13:00 2019 +1000

    drm/nouveau/ce/tu102: rename implementation from tu104
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 11a6013a999e..e6b962f664d8 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2456,11 +2456,11 @@ nv162_chipset = {
 	.therm = gp100_therm_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
-	.ce[0] = tu104_ce_new,
-	.ce[1] = tu104_ce_new,
-	.ce[2] = tu104_ce_new,
-	.ce[3] = tu104_ce_new,
-	.ce[4] = tu104_ce_new,
+	.ce[0] = tu102_ce_new,
+	.ce[1] = tu102_ce_new,
+	.ce[2] = tu102_ce_new,
+	.ce[3] = tu102_ce_new,
+	.ce[4] = tu102_ce_new,
 	.disp = tu102_disp_new,
 	.dma = gv100_dma_new,
 	.fifo = tu102_fifo_new,
@@ -2488,11 +2488,11 @@ nv164_chipset = {
 	.therm = gp100_therm_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
-	.ce[0] = tu104_ce_new,
-	.ce[1] = tu104_ce_new,
-	.ce[2] = tu104_ce_new,
-	.ce[3] = tu104_ce_new,
-	.ce[4] = tu104_ce_new,
+	.ce[0] = tu102_ce_new,
+	.ce[1] = tu102_ce_new,
+	.ce[2] = tu102_ce_new,
+	.ce[3] = tu102_ce_new,
+	.ce[4] = tu102_ce_new,
 	.disp = tu102_disp_new,
 	.dma = gv100_dma_new,
 	.fifo = tu102_fifo_new,
@@ -2520,11 +2520,11 @@ nv166_chipset = {
 	.therm = gp100_therm_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
-	.ce[0] = tu104_ce_new,
-	.ce[1] = tu104_ce_new,
-	.ce[2] = tu104_ce_new,
-	.ce[3] = tu104_ce_new,
-	.ce[4] = tu104_ce_new,
+	.ce[0] = tu102_ce_new,
+	.ce[1] = tu102_ce_new,
+	.ce[2] = tu102_ce_new,
+	.ce[3] = tu102_ce_new,
+	.ce[4] = tu102_ce_new,
 	.disp = tu102_disp_new,
 	.dma = gv100_dma_new,
 	.fifo = tu102_fifo_new,

commit f10271ffdaba959594b40a1eb6bb321d657d7ee5
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Jan 17 12:11:47 2019 +1000

    drm/nouveau/fifo/tu102: rename implementation from tu104
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 856f5a2c3a4b..11a6013a999e 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2463,7 +2463,7 @@ nv162_chipset = {
 	.ce[4] = tu104_ce_new,
 	.disp = tu102_disp_new,
 	.dma = gv100_dma_new,
-	.fifo = tu104_fifo_new,
+	.fifo = tu102_fifo_new,
 };
 
 static const struct nvkm_device_chip
@@ -2495,7 +2495,7 @@ nv164_chipset = {
 	.ce[4] = tu104_ce_new,
 	.disp = tu102_disp_new,
 	.dma = gv100_dma_new,
-	.fifo = tu104_fifo_new,
+	.fifo = tu102_fifo_new,
 };
 
 static const struct nvkm_device_chip
@@ -2527,7 +2527,7 @@ nv166_chipset = {
 	.ce[4] = tu104_ce_new,
 	.disp = tu102_disp_new,
 	.dma = gv100_dma_new,
-	.fifo = tu104_fifo_new,
+	.fifo = tu102_fifo_new,
 };
 
 static int

commit 8603774233507550d557272146ba1834071e3e49
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Jan 17 12:10:06 2019 +1000

    drm/nouveau/disp/tu102: rename implementation from tu104
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 2f3d8da4f090..856f5a2c3a4b 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2461,7 +2461,7 @@ nv162_chipset = {
 	.ce[2] = tu104_ce_new,
 	.ce[3] = tu104_ce_new,
 	.ce[4] = tu104_ce_new,
-	.disp = tu104_disp_new,
+	.disp = tu102_disp_new,
 	.dma = gv100_dma_new,
 	.fifo = tu104_fifo_new,
 };
@@ -2493,7 +2493,7 @@ nv164_chipset = {
 	.ce[2] = tu104_ce_new,
 	.ce[3] = tu104_ce_new,
 	.ce[4] = tu104_ce_new,
-	.disp = tu104_disp_new,
+	.disp = tu102_disp_new,
 	.dma = gv100_dma_new,
 	.fifo = tu104_fifo_new,
 };
@@ -2525,7 +2525,7 @@ nv166_chipset = {
 	.ce[2] = tu104_ce_new,
 	.ce[3] = tu104_ce_new,
 	.ce[4] = tu104_ce_new,
-	.disp = tu104_disp_new,
+	.disp = tu102_disp_new,
 	.dma = gv100_dma_new,
 	.fifo = tu104_fifo_new,
 };

commit 954f97983cb43afbbf994ac9fbc6a0983d2ed5bd
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Jan 17 12:07:23 2019 +1000

    drm/nouveau/fault/tu102: rename implementation from tu104
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index f87b298b192f..2f3d8da4f090 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2441,7 +2441,7 @@ nv162_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.devinit = tu102_devinit_new,
-	.fault = tu104_fault_new,
+	.fault = tu102_fault_new,
 	.fb = gv100_fb_new,
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
@@ -2473,7 +2473,7 @@ nv164_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.devinit = tu102_devinit_new,
-	.fault = tu104_fault_new,
+	.fault = tu102_fault_new,
 	.fb = gv100_fb_new,
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
@@ -2505,7 +2505,7 @@ nv166_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.devinit = tu102_devinit_new,
-	.fault = tu104_fault_new,
+	.fault = tu102_fault_new,
 	.fb = gv100_fb_new,
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,

commit ef7664d9dff9f2684c93c9adf2493081d8c9bc0a
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Jan 17 12:06:01 2019 +1000

    drm/nouveau/bar/tu102: rename implementation from tu104
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 5079bdff9187..f87b298b192f 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2437,7 +2437,7 @@ nv140_chipset = {
 static const struct nvkm_device_chip
 nv162_chipset = {
 	.name = "TU102",
-	.bar = tu104_bar_new,
+	.bar = tu102_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.devinit = tu102_devinit_new,
@@ -2469,7 +2469,7 @@ nv162_chipset = {
 static const struct nvkm_device_chip
 nv164_chipset = {
 	.name = "TU104",
-	.bar = tu104_bar_new,
+	.bar = tu102_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.devinit = tu102_devinit_new,
@@ -2501,7 +2501,7 @@ nv164_chipset = {
 static const struct nvkm_device_chip
 nv166_chipset = {
 	.name = "TU106",
-	.bar = tu104_bar_new,
+	.bar = tu102_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.devinit = tu102_devinit_new,

commit c011b25421f321b3692c3683fe2970aa6343f694
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Jan 17 12:04:02 2019 +1000

    drm/nouveau/mmu/tu102: rename implementation from tu104
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index bc4ddb7bb66b..5079bdff9187 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2450,7 +2450,7 @@ nv162_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gp102_ltc_new,
 	.mc = tu102_mc_new,
-	.mmu = tu104_mmu_new,
+	.mmu = tu102_mmu_new,
 	.pci = gp100_pci_new,
 	.pmu = gp102_pmu_new,
 	.therm = gp100_therm_new,
@@ -2482,7 +2482,7 @@ nv164_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gp102_ltc_new,
 	.mc = tu102_mc_new,
-	.mmu = tu104_mmu_new,
+	.mmu = tu102_mmu_new,
 	.pci = gp100_pci_new,
 	.pmu = gp102_pmu_new,
 	.therm = gp100_therm_new,
@@ -2514,7 +2514,7 @@ nv166_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gp102_ltc_new,
 	.mc = tu102_mc_new,
-	.mmu = tu104_mmu_new,
+	.mmu = tu102_mmu_new,
 	.pci = gp100_pci_new,
 	.pmu = gp102_pmu_new,
 	.therm = gp100_therm_new,

commit fd95bfbdb9952dbf13b30e964934876bc9e33551
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Jan 17 11:46:39 2019 +1000

    drm/nouveau/mc/tu102: rename implementation from tu104
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 325c4c0ba274..bc4ddb7bb66b 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2449,7 +2449,7 @@ nv162_chipset = {
 	.ibus = gm200_ibus_new,
 	.imem = nv50_instmem_new,
 	.ltc = gp102_ltc_new,
-	.mc = tu104_mc_new,
+	.mc = tu102_mc_new,
 	.mmu = tu104_mmu_new,
 	.pci = gp100_pci_new,
 	.pmu = gp102_pmu_new,
@@ -2481,7 +2481,7 @@ nv164_chipset = {
 	.ibus = gm200_ibus_new,
 	.imem = nv50_instmem_new,
 	.ltc = gp102_ltc_new,
-	.mc = tu104_mc_new,
+	.mc = tu102_mc_new,
 	.mmu = tu104_mmu_new,
 	.pci = gp100_pci_new,
 	.pmu = gp102_pmu_new,
@@ -2513,7 +2513,7 @@ nv166_chipset = {
 	.ibus = gm200_ibus_new,
 	.imem = nv50_instmem_new,
 	.ltc = gp102_ltc_new,
-	.mc = tu104_mc_new,
+	.mc = tu102_mc_new,
 	.mmu = tu104_mmu_new,
 	.pci = gp100_pci_new,
 	.pmu = gp102_pmu_new,

commit b51f9dfac7195bd405efbc1acc66dca5196f424e
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Jan 17 11:41:53 2019 +1000

    drm/nouveau/devinit/tu102: rename implementation from tu104
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index d75fa7678483..325c4c0ba274 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2440,7 +2440,7 @@ nv162_chipset = {
 	.bar = tu104_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
-	.devinit = tu104_devinit_new,
+	.devinit = tu102_devinit_new,
 	.fault = tu104_fault_new,
 	.fb = gv100_fb_new,
 	.fuse = gm107_fuse_new,
@@ -2472,7 +2472,7 @@ nv164_chipset = {
 	.bar = tu104_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
-	.devinit = tu104_devinit_new,
+	.devinit = tu102_devinit_new,
 	.fault = tu104_fault_new,
 	.fb = gv100_fb_new,
 	.fuse = gm107_fuse_new,
@@ -2504,7 +2504,7 @@ nv166_chipset = {
 	.bar = tu104_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
-	.devinit = tu104_devinit_new,
+	.devinit = tu102_devinit_new,
 	.fault = tu104_fault_new,
 	.fb = gv100_fb_new,
 	.fuse = gm107_fuse_new,

commit fc782242749fa4235592854fafe1a1297583c1fb
Author: Ilia Mirkin <imirkin@alum.mit.edu>
Date:   Sun Jan 13 17:50:10 2019 -0500

    drm/nouveau/volt/gf117: fix speedo readout register
    
    GF117 appears to use the same register as GK104 (but still with the
    general Fermi readout mechanism).
    
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=108980
    Signed-off-by: Ilia Mirkin <imirkin@alum.mit.edu>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index d9edb5785813..d75fa7678483 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1613,7 +1613,7 @@ nvd7_chipset = {
 	.pci = gf106_pci_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
-	.volt = gf100_volt_new,
+	.volt = gf117_volt_new,
 	.ce[0] = gf100_ce_new,
 	.disp = gf119_disp_new,
 	.dma = gf119_dma_new,

commit 7ebec5f43134bbf3dd5f20228ac4c1b55ee73284
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Jan 17 11:39:55 2019 +1000

    drm/nouveau/core: recognise TU102
    
    Would usually do this split-out, verifying each component indivitually, but
    this has been squashed together to be more palatable for merging in 5.0-rc.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index bfbc9341e0c2..d9edb5785813 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2434,6 +2434,38 @@ nv140_chipset = {
 	.sec2 = gp102_sec2_new,
 };
 
+static const struct nvkm_device_chip
+nv162_chipset = {
+	.name = "TU102",
+	.bar = tu104_bar_new,
+	.bios = nvkm_bios_new,
+	.bus = gf100_bus_new,
+	.devinit = tu104_devinit_new,
+	.fault = tu104_fault_new,
+	.fb = gv100_fb_new,
+	.fuse = gm107_fuse_new,
+	.gpio = gk104_gpio_new,
+	.i2c = gm200_i2c_new,
+	.ibus = gm200_ibus_new,
+	.imem = nv50_instmem_new,
+	.ltc = gp102_ltc_new,
+	.mc = tu104_mc_new,
+	.mmu = tu104_mmu_new,
+	.pci = gp100_pci_new,
+	.pmu = gp102_pmu_new,
+	.therm = gp100_therm_new,
+	.timer = gk20a_timer_new,
+	.top = gk104_top_new,
+	.ce[0] = tu104_ce_new,
+	.ce[1] = tu104_ce_new,
+	.ce[2] = tu104_ce_new,
+	.ce[3] = tu104_ce_new,
+	.ce[4] = tu104_ce_new,
+	.disp = tu104_disp_new,
+	.dma = gv100_dma_new,
+	.fifo = tu104_fifo_new,
+};
+
 static const struct nvkm_device_chip
 nv164_chipset = {
 	.name = "TU104",
@@ -2950,6 +2982,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		case 0x138: device->chip = &nv138_chipset; break;
 		case 0x13b: device->chip = &nv13b_chipset; break;
 		case 0x140: device->chip = &nv140_chipset; break;
+		case 0x162: device->chip = &nv162_chipset; break;
 		case 0x164: device->chip = &nv164_chipset; break;
 		case 0x166: device->chip = &nv166_chipset; break;
 		default:

commit 8ff01abcccbb563fbf50b84a476bd9b22c42c0a3
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/ce/tu106: initial support
    
    Appears to be compatible with TU104.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 0d74ee30e381..bfbc9341e0c2 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2488,6 +2488,11 @@ nv166_chipset = {
 	.therm = gp100_therm_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
+	.ce[0] = tu104_ce_new,
+	.ce[1] = tu104_ce_new,
+	.ce[2] = tu104_ce_new,
+	.ce[3] = tu104_ce_new,
+	.ce[4] = tu104_ce_new,
 	.disp = tu104_disp_new,
 	.dma = gv100_dma_new,
 	.fifo = tu104_fifo_new,

commit 1b2a5aff3505b49873777247ccf4372eea5959f3
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/fifo/tu106: initial support
    
    Appears to be compatible with TU104.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 71384375dbc0..0d74ee30e381 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2490,6 +2490,7 @@ nv166_chipset = {
 	.top = gk104_top_new,
 	.disp = tu104_disp_new,
 	.dma = gv100_dma_new,
+	.fifo = tu104_fifo_new,
 };
 
 static int

commit 7f7bc32e23e72a96c2fed518166d16abea24504e
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/disp/tu106: initial support
    
    Appears to be compatible with TU104.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index ca389617edad..71384375dbc0 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2488,6 +2488,7 @@ nv166_chipset = {
 	.therm = gp100_therm_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
+	.disp = tu104_disp_new,
 	.dma = gv100_dma_new,
 };
 

commit 1a38496cdd444e870b2bbbbc8f8c7f6b21291656
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/dma/tu106: initial support
    
    Appears to be compatible with GV100.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index e165b35d8983..ca389617edad 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2488,6 +2488,7 @@ nv166_chipset = {
 	.therm = gp100_therm_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
+	.dma = gv100_dma_new,
 };
 
 static int

commit bb1e3ff70128ee18f2a8902e695ef08c4fe96d59
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/therm/tu106: initial support
    
    Appears to be compatible with GP100.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 0ec9064522b6..e165b35d8983 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2485,6 +2485,7 @@ nv166_chipset = {
 	.mmu = tu104_mmu_new,
 	.pci = gp100_pci_new,
 	.pmu = gp102_pmu_new,
+	.therm = gp100_therm_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
 };

commit 25a46a4a95d8298d0451ac90a1471263522d9571
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/pmu/tu106: initial support
    
    Appears to be compatible with GP102.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 91c01eb9a3bf..0ec9064522b6 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2484,6 +2484,7 @@ nv166_chipset = {
 	.mc = tu104_mc_new,
 	.mmu = tu104_mmu_new,
 	.pci = gp100_pci_new,
+	.pmu = gp102_pmu_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
 };

commit f5459f34f5ed18aacea1780dd174632dab4131ea
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/fault/tu106: initial support
    
    Appears to be compatible with TU104.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 46cde822b628..91c01eb9a3bf 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2473,6 +2473,7 @@ nv166_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.devinit = tu104_devinit_new,
+	.fault = tu104_fault_new,
 	.fb = gv100_fb_new,
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,

commit 340e96a7c3aa6e47287ca048847f5fc871d03014
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/bar/tu106: initial support
    
    Appears to be compatible with TU104.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 0b33abf52e2f..46cde822b628 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2469,6 +2469,7 @@ nv164_chipset = {
 static const struct nvkm_device_chip
 nv166_chipset = {
 	.name = "TU106",
+	.bar = tu104_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.devinit = tu104_devinit_new,

commit 70ec09080d85802e2f1514fe8401007890e3f7f4
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/mmu/tu106: initial support
    
    Appears to be compatible with TU104.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 2c7248bd5971..0b33abf52e2f 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2480,6 +2480,7 @@ nv166_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gp102_ltc_new,
 	.mc = tu104_mc_new,
+	.mmu = tu104_mmu_new,
 	.pci = gp100_pci_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,

commit 13f91e8e5ae50d84875431e03102acf137edff35
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/ltc/tu106: initial support
    
    Appears to be compatible with GP102.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index e630bad53b09..2c7248bd5971 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2478,6 +2478,7 @@ nv166_chipset = {
 	.i2c = gm200_i2c_new,
 	.ibus = gm200_ibus_new,
 	.imem = nv50_instmem_new,
+	.ltc = gp102_ltc_new,
 	.mc = tu104_mc_new,
 	.pci = gp100_pci_new,
 	.timer = gk20a_timer_new,

commit cfcfb6d0a34fdd552f6f1dea5252ead3575a34a0
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/fb/tu106: initial support
    
    Appears to be compatible with GV100.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 6af46e80b8dd..e630bad53b09 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2472,6 +2472,7 @@ nv166_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.devinit = tu104_devinit_new,
+	.fb = gv100_fb_new,
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
 	.i2c = gm200_i2c_new,

commit 75794c41242c54b229978e2cc4e0af023d07bceb
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/imem/tu106: initial support
    
    Appears to be compatible with NV50.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index abb2f5a95eee..6af46e80b8dd 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2476,6 +2476,7 @@ nv166_chipset = {
 	.gpio = gk104_gpio_new,
 	.i2c = gm200_i2c_new,
 	.ibus = gm200_ibus_new,
+	.imem = nv50_instmem_new,
 	.mc = tu104_mc_new,
 	.pci = gp100_pci_new,
 	.timer = gk20a_timer_new,

commit 2fedee302da0a0f767f2a18deb6a7b7071b5f82e
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/tmr/tu106: initial support
    
    Appears to be compatible with GK20A.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index e9d0ea9bdb36..abb2f5a95eee 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2478,6 +2478,7 @@ nv166_chipset = {
 	.ibus = gm200_ibus_new,
 	.mc = tu104_mc_new,
 	.pci = gp100_pci_new,
+	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
 };
 

commit 25e6a89076df4760710ea26812e091dbd349ad0b
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/bus/tu106: initial support
    
    Appears to be compatible with GF100.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index ca7f3b7bb279..e9d0ea9bdb36 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2470,6 +2470,7 @@ static const struct nvkm_device_chip
 nv166_chipset = {
 	.name = "TU106",
 	.bios = nvkm_bios_new,
+	.bus = gf100_bus_new,
 	.devinit = tu104_devinit_new,
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,

commit 476740843bf84bde9c96f414b6cd62a3644ad57f
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/mc/tu106: initial support
    
    Appears to be compatible with TU104.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 155a2f682b4c..ca7f3b7bb279 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2475,6 +2475,7 @@ nv166_chipset = {
 	.gpio = gk104_gpio_new,
 	.i2c = gm200_i2c_new,
 	.ibus = gm200_ibus_new,
+	.mc = tu104_mc_new,
 	.pci = gp100_pci_new,
 	.top = gk104_top_new,
 };

commit 6a9207ecf5df0d4987fab5d30ea0dc48b904346f
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/fuse/tu106: initial support
    
    Appears to be compatible with GM107.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index e3bdec6b0e53..155a2f682b4c 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2471,6 +2471,7 @@ nv166_chipset = {
 	.name = "TU106",
 	.bios = nvkm_bios_new,
 	.devinit = tu104_devinit_new,
+	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
 	.i2c = gm200_i2c_new,
 	.ibus = gm200_ibus_new,

commit 52c887539d6ddc226da0fa53736e491477aa7250
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/i2c/tu106: initial support
    
    Appears to be compatible with GM200.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 30e4793bc52c..e3bdec6b0e53 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2472,6 +2472,7 @@ nv166_chipset = {
 	.bios = nvkm_bios_new,
 	.devinit = tu104_devinit_new,
 	.gpio = gk104_gpio_new,
+	.i2c = gm200_i2c_new,
 	.ibus = gm200_ibus_new,
 	.pci = gp100_pci_new,
 	.top = gk104_top_new,

commit 1b0a47548274eecdd802857060636058134c1efe
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/gpio/tu106: initial support
    
    Appears to be compatible with GK104.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 907fdaa32d62..30e4793bc52c 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2471,6 +2471,7 @@ nv166_chipset = {
 	.name = "TU106",
 	.bios = nvkm_bios_new,
 	.devinit = tu104_devinit_new,
+	.gpio = gk104_gpio_new,
 	.ibus = gm200_ibus_new,
 	.pci = gp100_pci_new,
 	.top = gk104_top_new,

commit 8d12c4846d4ba7cfe17e0b4c5181f37d0bb550e4
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/ibus/tu106: initial support
    
    Appears to be compatible with GM200.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index e3e60f015aa1..907fdaa32d62 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2471,6 +2471,7 @@ nv166_chipset = {
 	.name = "TU106",
 	.bios = nvkm_bios_new,
 	.devinit = tu104_devinit_new,
+	.ibus = gm200_ibus_new,
 	.pci = gp100_pci_new,
 	.top = gk104_top_new,
 };

commit 73010b8e2b9a0b82e43a3c01a8c7a94f839eb480
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/top/tu106: initial support
    
    Appears to be compatible with GK104.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index fd90540df36d..e3e60f015aa1 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2472,6 +2472,7 @@ nv166_chipset = {
 	.bios = nvkm_bios_new,
 	.devinit = tu104_devinit_new,
 	.pci = gp100_pci_new,
+	.top = gk104_top_new,
 };
 
 static int

commit 9d7693fe07d67f45dcf619d41a6cc9efb5e5c773
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/devinit/tu106: initial support
    
    Appears to be compatible with TU104.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index c49d513aeac0..fd90540df36d 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2470,6 +2470,7 @@ static const struct nvkm_device_chip
 nv166_chipset = {
 	.name = "TU106",
 	.bios = nvkm_bios_new,
+	.devinit = tu104_devinit_new,
 	.pci = gp100_pci_new,
 };
 

commit b0216803e361446b2b849fd3e802cbbb7c0d5c8c
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/bios/tu106: initial support
    
    No real surprised here so far.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 3e3859793497..c49d513aeac0 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2469,6 +2469,7 @@ nv164_chipset = {
 static const struct nvkm_device_chip
 nv166_chipset = {
 	.name = "TU106",
+	.bios = nvkm_bios_new,
 	.pci = gp100_pci_new,
 };
 

commit a39cb42a754168f6f88800edce426d3de0621945
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/pci/tu106: initial support
    
    Appears to be compatible with GP100.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 9585619aab3b..3e3859793497 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2469,6 +2469,7 @@ nv164_chipset = {
 static const struct nvkm_device_chip
 nv166_chipset = {
 	.name = "TU106",
+	.pci = gp100_pci_new,
 };
 
 static int

commit 2cc0d7c0f761b1cfad7a904919397d245df2f129
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/core: recognise TU106
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index c5977cdcbe41..9585619aab3b 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2466,6 +2466,11 @@ nv164_chipset = {
 	.fifo = tu104_fifo_new,
 };
 
+static const struct nvkm_device_chip
+nv166_chipset = {
+	.name = "TU106",
+};
+
 static int
 nvkm_device_event_ctor(struct nvkm_object *object, void *data, u32 size,
 		       struct nvkm_notify *notify)
@@ -2919,6 +2924,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		case 0x13b: device->chip = &nv13b_chipset; break;
 		case 0x140: device->chip = &nv140_chipset; break;
 		case 0x164: device->chip = &nv164_chipset; break;
+		case 0x166: device->chip = &nv166_chipset; break;
 		default:
 			nvdev_error(device, "unknown chipset (%08x)\n", boot0);
 			goto done;

commit 2d583ade740939f679c7f99e07c40f17dc9de1ab
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/core: increase maximum number of nvdec instances to 3
    
    RTX2070 appears to have 3 copies of the engine.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index fbabdfb24ba9..c5977cdcbe41 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2563,6 +2563,7 @@ nvkm_device_engine(struct nvkm_device *device, int index)
 	_(NVENC2 , device->nvenc[2],  device->nvenc[2]);
 	_(NVDEC0 , device->nvdec[0], &device->nvdec[0]->engine);
 	_(NVDEC1 , device->nvdec[1], &device->nvdec[1]->engine);
+	_(NVDEC2 , device->nvdec[2], &device->nvdec[2]->engine);
 	_(PM     , device->pm      , &device->pm->engine);
 	_(SEC    , device->sec     ,  device->sec);
 	_(SEC2   , device->sec2    , &device->sec2->engine);
@@ -3025,6 +3026,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		_(NVKM_ENGINE_NVENC2  , nvenc[2]);
 		_(NVKM_ENGINE_NVDEC0  , nvdec[0]);
 		_(NVKM_ENGINE_NVDEC1  , nvdec[1]);
+		_(NVKM_ENGINE_NVDEC2  , nvdec[2]);
 		_(NVKM_ENGINE_PM      ,       pm);
 		_(NVKM_ENGINE_SEC     ,      sec);
 		_(NVKM_ENGINE_SEC2    ,     sec2);

commit c36322d23d5d84cbe03c93beaa5dd6c705d48122
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/ce/tu104: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index b0ed02649b2a..fbabdfb24ba9 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2456,6 +2456,11 @@ nv164_chipset = {
 	.therm = gp100_therm_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
+	.ce[0] = tu104_ce_new,
+	.ce[1] = tu104_ce_new,
+	.ce[2] = tu104_ce_new,
+	.ce[3] = tu104_ce_new,
+	.ce[4] = tu104_ce_new,
 	.disp = tu104_disp_new,
 	.dma = gv100_dma_new,
 	.fifo = tu104_fifo_new,

commit 641d0b3056e058fa64a02e41535050d896fa5a75
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/fifo/tu104: initial support
    
    Various different bits and pieces vs GV100.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index bdc8cff20e67..b0ed02649b2a 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2458,6 +2458,7 @@ nv164_chipset = {
 	.top = gk104_top_new,
 	.disp = tu104_disp_new,
 	.dma = gv100_dma_new,
+	.fifo = tu104_fifo_new,
 };
 
 static int

commit 114b6556db76b0377a1c8a92fec6d760c91f715e
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/disp/tu104: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 94b8cc36cb16..bdc8cff20e67 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2456,6 +2456,7 @@ nv164_chipset = {
 	.therm = gp100_therm_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
+	.disp = tu104_disp_new,
 	.dma = gv100_dma_new,
 };
 

commit aff70760be71a9d2fa38814d23cbb851c0c08d4c
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/dma/tu104: initial support
    
    Appears to be compatible with GV100.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 35939d63a00a..94b8cc36cb16 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2456,6 +2456,7 @@ nv164_chipset = {
 	.therm = gp100_therm_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
+	.dma = gv100_dma_new,
 };
 
 static int

commit 5a991efdfa81c48fbff3df957568fd07569c9f53
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/therm/tu104: initial support
    
    Appears to be compatible with GP100.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 2f51521f7fe9..35939d63a00a 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2453,6 +2453,7 @@ nv164_chipset = {
 	.mmu = tu104_mmu_new,
 	.pci = gp100_pci_new,
 	.pmu = gp102_pmu_new,
+	.therm = gp100_therm_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
 };

commit e7e0e946bbf26cb974a904508213ec60111b5a30
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/pmu/tu104: initial support
    
    Appears to be compatible with GP102.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index eea40d1071ab..2f51521f7fe9 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2452,6 +2452,7 @@ nv164_chipset = {
 	.mc = tu104_mc_new,
 	.mmu = tu104_mmu_new,
 	.pci = gp100_pci_new,
+	.pmu = gp102_pmu_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
 };

commit 17fb2807c678ae30f02129c0c5ab3c616e6579af
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/fault/tu104: initial support
    
    New registers.
    
    Currently uncertain how exactly to mask fault buffer interrupts.  This will
    likely be corrected at around the same time as the new MC interrupt stuff
    has been properly figured out and implemented.
    
    For the moment, it shouldn't matter too much.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index eb14584fb386..eea40d1071ab 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2441,6 +2441,7 @@ nv164_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.devinit = tu104_devinit_new,
+	.fault = tu104_fault_new,
 	.fb = gv100_fb_new,
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,

commit 838efaa5743802f78a64fc64d3237b79517cee9f
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/bar/tu104: initial support
    
    New registers.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 19da7259b231..eb14584fb386 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2437,6 +2437,7 @@ nv140_chipset = {
 static const struct nvkm_device_chip
 nv164_chipset = {
 	.name = "TU104",
+	.bar = tu104_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.devinit = tu104_devinit_new,

commit 7986f813c62b295c618a1612e468b84d37c7e2fc
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/mmu/tu104: initial support
    
    New flush method.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 190013792727..19da7259b231 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2448,6 +2448,7 @@ nv164_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gp102_ltc_new,
 	.mc = tu104_mc_new,
+	.mmu = tu104_mmu_new,
 	.pci = gp100_pci_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,

commit 01e0930617d072e306db2fdfaee75c708d9db5fd
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/ltc/tu104: initial support
    
    Appears to be compatible with GP102.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 8e64338f5bb8..190013792727 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2446,6 +2446,7 @@ nv164_chipset = {
 	.i2c = gm200_i2c_new,
 	.ibus = gm200_ibus_new,
 	.imem = nv50_instmem_new,
+	.ltc = gp102_ltc_new,
 	.mc = tu104_mc_new,
 	.pci = gp100_pci_new,
 	.timer = gk20a_timer_new,

commit 5386148b31b2729f29d80f9635cff746d46d475d
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/fb/tu104: initial support
    
    Appears to be compatible with GV100.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index ee359baacacb..8e64338f5bb8 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2440,6 +2440,7 @@ nv164_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.devinit = tu104_devinit_new,
+	.fb = gv100_fb_new,
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
 	.i2c = gm200_i2c_new,

commit c44349b054c8f13f9759fec1ce8aea1d74173ba3
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/imem/tu104: initial support
    
    Appears to be compatible with NV50.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index b3c15cb0aaac..ee359baacacb 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2444,6 +2444,7 @@ nv164_chipset = {
 	.gpio = gk104_gpio_new,
 	.i2c = gm200_i2c_new,
 	.ibus = gm200_ibus_new,
+	.imem = nv50_instmem_new,
 	.mc = tu104_mc_new,
 	.pci = gp100_pci_new,
 	.timer = gk20a_timer_new,

commit ead5bf1e3cd82fd9baf63eb631518a1df0a0b4a3
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/tmr/tu104: initial support
    
    Appears to be compatible with GK20A.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 7aff8bf3d7ee..b3c15cb0aaac 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2446,6 +2446,7 @@ nv164_chipset = {
 	.ibus = gm200_ibus_new,
 	.mc = tu104_mc_new,
 	.pci = gp100_pci_new,
+	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
 };
 

commit 75ad1b00208ce34bf3a17936e2e75bf0aef46b9b
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/bus/tu104: initial support
    
    Appears to be compatible with GF100.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 127bbf4ebf18..7aff8bf3d7ee 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2438,6 +2438,7 @@ static const struct nvkm_device_chip
 nv164_chipset = {
 	.name = "TU104",
 	.bios = nvkm_bios_new,
+	.bus = gf100_bus_new,
 	.devinit = tu104_devinit_new,
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,

commit f2e55b9ea903ccd31f8d38f460a063f41e646232
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/mc/tu104: initial support
    
    Things are a bit different here on Turing, and will require further changes
    yet once I've investigated them more thoroughly.
    
    For now though, the existing GP100 code is compatible enough with one small
    hack to forward on fault buffer interrupts.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 02271cb3d0ac..127bbf4ebf18 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2443,6 +2443,7 @@ nv164_chipset = {
 	.gpio = gk104_gpio_new,
 	.i2c = gm200_i2c_new,
 	.ibus = gm200_ibus_new,
+	.mc = tu104_mc_new,
 	.pci = gp100_pci_new,
 	.top = gk104_top_new,
 };

commit 575d583ab6a497499010489035e683787f2b385b
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/fuse/tu104: initial support
    
    Appears to be compatible with GM107.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index f7fe5b582d76..02271cb3d0ac 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2439,6 +2439,7 @@ nv164_chipset = {
 	.name = "TU104",
 	.bios = nvkm_bios_new,
 	.devinit = tu104_devinit_new,
+	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
 	.i2c = gm200_i2c_new,
 	.ibus = gm200_ibus_new,

commit 298fd472ea4dbb8cdff104de65166e9528dd88cb
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/i2c/tu104: initial support
    
    Appears to be compatible with GM200.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 5ade7c451594..f7fe5b582d76 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2440,6 +2440,7 @@ nv164_chipset = {
 	.bios = nvkm_bios_new,
 	.devinit = tu104_devinit_new,
 	.gpio = gk104_gpio_new,
+	.i2c = gm200_i2c_new,
 	.ibus = gm200_ibus_new,
 	.pci = gp100_pci_new,
 	.top = gk104_top_new,

commit 3273483c32ab0836b7fe187bde629754a06d2d71
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/gpio/tu104: initial support
    
    Appears to be compatible with GK104.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 4070d6b706cb..5ade7c451594 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2439,6 +2439,7 @@ nv164_chipset = {
 	.name = "TU104",
 	.bios = nvkm_bios_new,
 	.devinit = tu104_devinit_new,
+	.gpio = gk104_gpio_new,
 	.ibus = gm200_ibus_new,
 	.pci = gp100_pci_new,
 	.top = gk104_top_new,

commit ba9070d3ecaa4d55232c5c8d43752eacf3ea0dd2
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/ibus/tu104: initial support
    
    Appears to be compatible with GM200.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 81929cb16c01..4070d6b706cb 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2439,6 +2439,7 @@ nv164_chipset = {
 	.name = "TU104",
 	.bios = nvkm_bios_new,
 	.devinit = tu104_devinit_new,
+	.ibus = gm200_ibus_new,
 	.pci = gp100_pci_new,
 	.top = gk104_top_new,
 };

commit 67e5abb78d0e5a5c019b7c62fb0c5461a724c3e0
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/top/tu104: initial support
    
    Appears to be compatible with GK104.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index ef98398014b7..81929cb16c01 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2440,6 +2440,7 @@ nv164_chipset = {
 	.bios = nvkm_bios_new,
 	.devinit = tu104_devinit_new,
 	.pci = gp100_pci_new,
+	.top = gk104_top_new,
 };
 
 static int

commit 43d61cda30653e4c13e92f604cf8a29cb4440146
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/devinit/tu104: initial support
    
    The GPU executes DEVINIT itself now, which makes our lives a bit easier.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 16ae0d22b9e7..ef98398014b7 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2438,6 +2438,7 @@ static const struct nvkm_device_chip
 nv164_chipset = {
 	.name = "TU104",
 	.bios = nvkm_bios_new,
+	.devinit = tu104_devinit_new,
 	.pci = gp100_pci_new,
 };
 

commit acbe55a5d4c3e36585700044365a957e14c81951
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/bios/tu104: initial support
    
    No real surprises here so far.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 83e31676f933..16ae0d22b9e7 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2437,6 +2437,7 @@ nv140_chipset = {
 static const struct nvkm_device_chip
 nv164_chipset = {
 	.name = "TU104",
+	.bios = nvkm_bios_new,
 	.pci = gp100_pci_new,
 };
 

commit 2d7ca8cb19953b4424ab97b92510e1bf434bacfd
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/pci/tu104: initial support
    
    Appears to be compatible with GP100.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 1ffd9e4a447b..83e31676f933 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2437,6 +2437,7 @@ nv140_chipset = {
 static const struct nvkm_device_chip
 nv164_chipset = {
 	.name = "TU104",
+	.pci = gp100_pci_new,
 };
 
 static int

commit 344d9c8f35b99bbb893d0e2bce5f41b72f9b5f26
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/core: recognise TU104
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 90f4281362fc..1ffd9e4a447b 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2434,6 +2434,11 @@ nv140_chipset = {
 	.sec2 = gp102_sec2_new,
 };
 
+static const struct nvkm_device_chip
+nv164_chipset = {
+	.name = "TU104",
+};
+
 static int
 nvkm_device_event_ctor(struct nvkm_object *object, void *data, u32 size,
 		       struct nvkm_notify *notify)
@@ -2792,6 +2797,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 			case 0x120: device->card_type = GM100; break;
 			case 0x130: device->card_type = GP100; break;
 			case 0x140: device->card_type = GV100; break;
+			case 0x160: device->card_type = TU100; break;
 			default:
 				break;
 			}
@@ -2884,6 +2890,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		case 0x138: device->chip = &nv138_chipset; break;
 		case 0x13b: device->chip = &nv13b_chipset; break;
 		case 0x140: device->chip = &nv140_chipset; break;
+		case 0x164: device->chip = &nv164_chipset; break;
 		default:
 			nvdev_error(device, "unknown chipset (%08x)\n", boot0);
 			goto done;

commit 936a1678f3f8b3c918185f0c5ba3a03ccedfb8d5
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 11 14:50:02 2018 +1000

    drm/nouveau/core: support multiple nvdec instances
    
    Turing GPUs can have more than one.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index e294013426ce..90f4281362fc 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2221,7 +2221,7 @@ nv132_chipset = {
 	.dma = gf119_dma_new,
 	.fifo = gp100_fifo_new,
 	.gr = gp102_gr_new,
-	.nvdec = gp102_nvdec_new,
+	.nvdec[0] = gp102_nvdec_new,
 	.sec2 = gp102_sec2_new,
 	.sw = gf100_sw_new,
 };
@@ -2257,7 +2257,7 @@ nv134_chipset = {
 	.dma = gf119_dma_new,
 	.fifo = gp100_fifo_new,
 	.gr = gp104_gr_new,
-	.nvdec = gp102_nvdec_new,
+	.nvdec[0] = gp102_nvdec_new,
 	.sec2 = gp102_sec2_new,
 	.sw = gf100_sw_new,
 };
@@ -2293,7 +2293,7 @@ nv136_chipset = {
 	.dma = gf119_dma_new,
 	.fifo = gp100_fifo_new,
 	.gr = gp104_gr_new,
-	.nvdec = gp102_nvdec_new,
+	.nvdec[0] = gp102_nvdec_new,
 	.sec2 = gp102_sec2_new,
 	.sw = gf100_sw_new,
 };
@@ -2329,7 +2329,7 @@ nv137_chipset = {
 	.dma = gf119_dma_new,
 	.fifo = gp100_fifo_new,
 	.gr = gp107_gr_new,
-	.nvdec = gp102_nvdec_new,
+	.nvdec[0] = gp102_nvdec_new,
 	.sec2 = gp102_sec2_new,
 	.sw = gf100_sw_new,
 };
@@ -2365,7 +2365,7 @@ nv138_chipset = {
 	.dma = gf119_dma_new,
 	.fifo = gp100_fifo_new,
 	.gr = gp107_gr_new,
-	.nvdec = gp102_nvdec_new,
+	.nvdec[0] = gp102_nvdec_new,
 	.sec2 = gp102_sec2_new,
 	.sw = gf100_sw_new,
 };
@@ -2430,7 +2430,7 @@ nv140_chipset = {
 	.dma = gv100_dma_new,
 	.fifo = gv100_fifo_new,
 	.gr = gv100_gr_new,
-	.nvdec = gp102_nvdec_new,
+	.nvdec[0] = gp102_nvdec_new,
 	.sec2 = gp102_sec2_new,
 };
 
@@ -2529,7 +2529,8 @@ nvkm_device_engine(struct nvkm_device *device, int index)
 	_(NVENC0 , device->nvenc[0],  device->nvenc[0]);
 	_(NVENC1 , device->nvenc[1],  device->nvenc[1]);
 	_(NVENC2 , device->nvenc[2],  device->nvenc[2]);
-	_(NVDEC  , device->nvdec   , &device->nvdec->engine);
+	_(NVDEC0 , device->nvdec[0], &device->nvdec[0]->engine);
+	_(NVDEC1 , device->nvdec[1], &device->nvdec[1]->engine);
 	_(PM     , device->pm      , &device->pm->engine);
 	_(SEC    , device->sec     ,  device->sec);
 	_(SEC2   , device->sec2    , &device->sec2->engine);
@@ -2988,7 +2989,8 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		_(NVKM_ENGINE_NVENC0  , nvenc[0]);
 		_(NVKM_ENGINE_NVENC1  , nvenc[1]);
 		_(NVKM_ENGINE_NVENC2  , nvenc[2]);
-		_(NVKM_ENGINE_NVDEC   ,    nvdec);
+		_(NVKM_ENGINE_NVDEC0  , nvdec[0]);
+		_(NVKM_ENGINE_NVDEC1  , nvdec[1]);
 		_(NVKM_ENGINE_PM      ,       pm);
 		_(NVKM_ENGINE_SEC     ,      sec);
 		_(NVKM_ENGINE_SEC2    ,     sec2);

commit d521097f58bdfdc9966b8d10754074c8524133dd
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue May 8 20:39:48 2018 +1000

    drm/nouveau/gr/gv100: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 5fa30613da1e..e294013426ce 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2413,6 +2413,7 @@ nv140_chipset = {
 	.mmu = gv100_mmu_new,
 	.pci = gp100_pci_new,
 	.pmu = gp102_pmu_new,
+	.secboot = gp108_secboot_new,
 	.therm = gp100_therm_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
@@ -2428,6 +2429,9 @@ nv140_chipset = {
 	.ce[8] = gv100_ce_new,
 	.dma = gv100_dma_new,
 	.fifo = gv100_fifo_new,
+	.gr = gv100_gr_new,
+	.nvdec = gp102_nvdec_new,
+	.sec2 = gp102_sec2_new,
 };
 
 static int

commit 6e1f34e33c17f633ebbd383cab429c820ec0c7b0
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue May 8 20:39:48 2018 +1000

    drm/nouveau/ce/gv100: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 95a56d4ba339..5fa30613da1e 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2417,6 +2417,15 @@ nv140_chipset = {
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
 	.disp = gv100_disp_new,
+	.ce[0] = gv100_ce_new,
+	.ce[1] = gv100_ce_new,
+	.ce[2] = gv100_ce_new,
+	.ce[3] = gv100_ce_new,
+	.ce[4] = gv100_ce_new,
+	.ce[5] = gv100_ce_new,
+	.ce[6] = gv100_ce_new,
+	.ce[7] = gv100_ce_new,
+	.ce[8] = gv100_ce_new,
 	.dma = gv100_dma_new,
 	.fifo = gv100_fifo_new,
 };

commit 37e1c45a58b5c1f699d583483f612462418dd2ee
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue May 8 20:39:48 2018 +1000

    drm/nouveau/fifo/gv100: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 43f6b7afdb52..95a56d4ba339 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2418,6 +2418,7 @@ nv140_chipset = {
 	.top = gk104_top_new,
 	.disp = gv100_disp_new,
 	.dma = gv100_dma_new,
+	.fifo = gv100_fifo_new,
 };
 
 static int

commit 290ffeafcc1a953aa287c8a7bf7f6d9af25b7e77
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue May 8 20:39:47 2018 +1000

    drm/nouveau/disp/gv100: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index f2c3fe1cba2c..43f6b7afdb52 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2416,6 +2416,7 @@ nv140_chipset = {
 	.therm = gp100_therm_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
+	.disp = gv100_disp_new,
 	.dma = gv100_dma_new,
 };
 

commit 6fb566b913728fe2dadc8271a568583b8854af93
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue May 8 20:39:47 2018 +1000

    drm/nouveau/dma/gv100: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 965c4332380f..f2c3fe1cba2c 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2416,6 +2416,7 @@ nv140_chipset = {
 	.therm = gp100_therm_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
+	.dma = gv100_dma_new,
 };
 
 static int

commit 24a7513c1026fb1b2d42df1c31ea2da56c1604e2
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue May 8 20:39:47 2018 +1000

    drm/nouveau/therm/gv100: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 12e24ebc85b2..965c4332380f 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2413,6 +2413,7 @@ nv140_chipset = {
 	.mmu = gv100_mmu_new,
 	.pci = gp100_pci_new,
 	.pmu = gp102_pmu_new,
+	.therm = gp100_therm_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
 };

commit ada0c562814ca466386d9bf1e61fd5ee46f2a72c
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue May 8 20:39:47 2018 +1000

    drm/nouveau/pmu/gv100: initial support
    
    Appears to be compatible with GP102.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 7f0385dbed06..12e24ebc85b2 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2412,6 +2412,7 @@ nv140_chipset = {
 	.mc = gp100_mc_new,
 	.mmu = gv100_mmu_new,
 	.pci = gp100_pci_new,
+	.pmu = gp102_pmu_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
 };

commit 8b811951c604e417b4511e3d17a75bb8c84b8f08
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue May 8 20:39:47 2018 +1000

    drm/nouveau/fault/gv100: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 6aaa3d9cb88c..7f0385dbed06 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2401,6 +2401,7 @@ nv140_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.devinit = gv100_devinit_new,
+	.fault = gv100_fault_new,
 	.fb = gv100_fb_new,
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,

commit 013b7b37739ca883b2dd5ef979e0e250ac3dafc1
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue May 8 20:39:47 2018 +1000

    drm/nouveau/bar/gv100: initial support
    
    Appears to be compatible with GM107.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 46dff27a234b..6aaa3d9cb88c 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2397,6 +2397,7 @@ nv13b_chipset = {
 static const struct nvkm_device_chip
 nv140_chipset = {
 	.name = "GV100",
+	.bar = gm107_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.devinit = gv100_devinit_new,

commit edf50395c7c5e8563843eb586aae57c7ac1214ed
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue May 8 20:39:47 2018 +1000

    drm/nouveau/mmu/gv100: initial support
    
    VEID support hacked in here, as it's the most convenient place for now.
    
    Will be refined once it's better understood.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 8da7b44697c4..46dff27a234b 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2408,6 +2408,7 @@ nv140_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gp102_ltc_new,
 	.mc = gp100_mc_new,
+	.mmu = gv100_mmu_new,
 	.pci = gp100_pci_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,

commit 1bce57250ad226e410f9a1a55c0722f075b01652
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue May 8 20:39:47 2018 +1000

    drm/nouveau/ltc/gv100: initial support
    
    Appears to be compatible with GP102.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 170a7c5224db..8da7b44697c4 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2406,6 +2406,7 @@ nv140_chipset = {
 	.i2c = gm200_i2c_new,
 	.ibus = gm200_ibus_new,
 	.imem = nv50_instmem_new,
+	.ltc = gp102_ltc_new,
 	.mc = gp100_mc_new,
 	.pci = gp100_pci_new,
 	.timer = gk20a_timer_new,

commit 3582942c2820a4dfcd64585140bc6e1ad72c1130
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue May 8 20:39:47 2018 +1000

    drm/nouveau/fb/gv100: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 8528e8366842..170a7c5224db 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2400,6 +2400,7 @@ nv140_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.devinit = gv100_devinit_new,
+	.fb = gv100_fb_new,
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
 	.i2c = gm200_i2c_new,

commit a4a0cfb6420152de2725e1e407fd86301aceccd1
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue May 8 20:39:47 2018 +1000

    drm/nouveau/imem/gv100: initial support
    
    Can't imagine this will be any different.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 87d50bd4866a..8528e8366842 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2404,6 +2404,7 @@ nv140_chipset = {
 	.gpio = gk104_gpio_new,
 	.i2c = gm200_i2c_new,
 	.ibus = gm200_ibus_new,
+	.imem = nv50_instmem_new,
 	.mc = gp100_mc_new,
 	.pci = gp100_pci_new,
 	.timer = gk20a_timer_new,

commit 936240c9bbb2f10fe11b8fbd4aca79f8f5b1b1da
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue May 8 20:39:47 2018 +1000

    drm/nouveau/tmr/gv100: initial support
    
    Appears to be compatible with GK20A.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 9b2b3b8aa5d9..87d50bd4866a 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2406,6 +2406,7 @@ nv140_chipset = {
 	.ibus = gm200_ibus_new,
 	.mc = gp100_mc_new,
 	.pci = gp100_pci_new,
+	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
 };
 

commit 9506bd24072af64dae998ac5b62c16b3492fc8e8
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue May 8 20:39:47 2018 +1000

    drm/nouveau/bus/gv100: initial support
    
    Appears to be compatible with GF100.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index d3306753d4f8..9b2b3b8aa5d9 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2398,6 +2398,7 @@ static const struct nvkm_device_chip
 nv140_chipset = {
 	.name = "GV100",
 	.bios = nvkm_bios_new,
+	.bus = gf100_bus_new,
 	.devinit = gv100_devinit_new,
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,

commit 41af75bd3569eeb105635455cc7a99a930dc35ff
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue May 8 20:39:47 2018 +1000

    drm/nouveau/mc/gv100: initial support
    
    Appears to be compatible with GP100.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index a9a087a5b94b..d3306753d4f8 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2403,6 +2403,7 @@ nv140_chipset = {
 	.gpio = gk104_gpio_new,
 	.i2c = gm200_i2c_new,
 	.ibus = gm200_ibus_new,
+	.mc = gp100_mc_new,
 	.pci = gp100_pci_new,
 	.top = gk104_top_new,
 };

commit 292550499af0117c7137071d8a0aee93fab81f44
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue May 8 20:39:47 2018 +1000

    drm/nouveau/fuse/gv100: initial support
    
    Appears to be compatible with GM107.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 92290de0e6bf..a9a087a5b94b 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2399,6 +2399,7 @@ nv140_chipset = {
 	.name = "GV100",
 	.bios = nvkm_bios_new,
 	.devinit = gv100_devinit_new,
+	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
 	.i2c = gm200_i2c_new,
 	.ibus = gm200_ibus_new,

commit d2e3b57d81992442221f00938d137568ee895953
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue May 8 20:39:47 2018 +1000

    drm/nouveau/i2c/gv100: initial support
    
    Appears to be compatible with GM200.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 5fbc0867cd2c..92290de0e6bf 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2400,6 +2400,7 @@ nv140_chipset = {
 	.bios = nvkm_bios_new,
 	.devinit = gv100_devinit_new,
 	.gpio = gk104_gpio_new,
+	.i2c = gm200_i2c_new,
 	.ibus = gm200_ibus_new,
 	.pci = gp100_pci_new,
 	.top = gk104_top_new,

commit 8afbcca54976abd47d3cd77ffd99aa8103944483
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue May 8 20:39:47 2018 +1000

    drm/nouveau/gpio/gv100: initial support
    
    Appears to be compatible with GK104.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index def4acdb860e..5fbc0867cd2c 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2399,6 +2399,7 @@ nv140_chipset = {
 	.name = "GV100",
 	.bios = nvkm_bios_new,
 	.devinit = gv100_devinit_new,
+	.gpio = gk104_gpio_new,
 	.ibus = gm200_ibus_new,
 	.pci = gp100_pci_new,
 	.top = gk104_top_new,

commit 46fe1a813adf9abcf71d0a6641ef2de4ce443485
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue May 8 20:39:47 2018 +1000

    drm/nouveau/ibus/gv100: initial support
    
    Appears to be compatible with GM200.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 777ba68f4a0f..def4acdb860e 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2399,6 +2399,7 @@ nv140_chipset = {
 	.name = "GV100",
 	.bios = nvkm_bios_new,
 	.devinit = gv100_devinit_new,
+	.ibus = gm200_ibus_new,
 	.pci = gp100_pci_new,
 	.top = gk104_top_new,
 };

commit a1c771a5cb86e2a45bb4516b40f6127112aaa464
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue May 8 20:39:47 2018 +1000

    drm/nouveau/top/gv100: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 4a2d413f12b9..777ba68f4a0f 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2400,6 +2400,7 @@ nv140_chipset = {
 	.bios = nvkm_bios_new,
 	.devinit = gv100_devinit_new,
 	.pci = gp100_pci_new,
+	.top = gk104_top_new,
 };
 
 static int

commit 8769dc989c53e5ed38460b7585d55f381f51e9d8
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue May 8 20:39:47 2018 +1000

    drm/nouveau/devinit/gv100: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 939452276a2d..4a2d413f12b9 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2398,6 +2398,7 @@ static const struct nvkm_device_chip
 nv140_chipset = {
 	.name = "GV100",
 	.bios = nvkm_bios_new,
+	.devinit = gv100_devinit_new,
 	.pci = gp100_pci_new,
 };
 

commit 75e482efd38a40497e06c217e6ae9f92940b218e
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue May 8 20:39:47 2018 +1000

    drm/nouveau/bios/gv100: initial support
    
    No real surprises here so far.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 3674db6a1a0f..939452276a2d 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2397,6 +2397,7 @@ nv13b_chipset = {
 static const struct nvkm_device_chip
 nv140_chipset = {
 	.name = "GV100",
+	.bios = nvkm_bios_new,
 	.pci = gp100_pci_new,
 };
 

commit 893855d8215f5ec6b0e1fac399960405c8237c53
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue May 8 20:39:47 2018 +1000

    drm/nouveau/pci/gv100: initial support
    
    Appears to be compatible with GP100.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index e0e4d286f7e6..3674db6a1a0f 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2397,6 +2397,7 @@ nv13b_chipset = {
 static const struct nvkm_device_chip
 nv140_chipset = {
 	.name = "GV100",
+	.pci = gp100_pci_new,
 };
 
 static int

commit c1f856bb99499f82420d74886884d193e9d63db7
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue May 8 20:39:47 2018 +1000

    drm/nouveau/core: recognise gv100
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index b9b6bef3b805..e0e4d286f7e6 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2394,6 +2394,11 @@ nv13b_chipset = {
 	.sw = gf100_sw_new,
 };
 
+static const struct nvkm_device_chip
+nv140_chipset = {
+	.name = "GV100",
+};
+
 static int
 nvkm_device_event_ctor(struct nvkm_object *object, void *data, u32 size,
 		       struct nvkm_notify *notify)
@@ -2750,6 +2755,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 			case 0x110:
 			case 0x120: device->card_type = GM100; break;
 			case 0x130: device->card_type = GP100; break;
+			case 0x140: device->card_type = GV100; break;
 			default:
 				break;
 			}
@@ -2841,6 +2847,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		case 0x137: device->chip = &nv137_chipset; break;
 		case 0x138: device->chip = &nv138_chipset; break;
 		case 0x13b: device->chip = &nv13b_chipset; break;
+		case 0x140: device->chip = &nv140_chipset; break;
 		default:
 			nvdev_error(device, "unknown chipset (%08x)\n", boot0);
 			goto done;

commit 890c85f3ee106e2f13cb510d3ee73f0214e1c620
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue May 8 20:39:47 2018 +1000

    drm/nouveau/core: increase maximum number of copy engines to 9
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 5c79c795acaa..b9b6bef3b805 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2471,6 +2471,9 @@ nvkm_device_engine(struct nvkm_device *device, int index)
 	_(CE3    , device->ce[3]   ,  device->ce[3]);
 	_(CE4    , device->ce[4]   ,  device->ce[4]);
 	_(CE5    , device->ce[5]   ,  device->ce[5]);
+	_(CE6    , device->ce[6]   ,  device->ce[6]);
+	_(CE7    , device->ce[7]   ,  device->ce[7]);
+	_(CE8    , device->ce[8]   ,  device->ce[8]);
 	_(CIPHER , device->cipher  ,  device->cipher);
 	_(DISP   , device->disp    , &device->disp->engine);
 	_(DMAOBJ , device->dma     , &device->dma->engine);
@@ -2925,6 +2928,9 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		_(NVKM_ENGINE_CE3     ,    ce[3]);
 		_(NVKM_ENGINE_CE4     ,    ce[4]);
 		_(NVKM_ENGINE_CE5     ,    ce[5]);
+		_(NVKM_ENGINE_CE6     ,    ce[6]);
+		_(NVKM_ENGINE_CE7     ,    ce[7]);
+		_(NVKM_ENGINE_CE8     ,    ce[8]);
 		_(NVKM_ENGINE_CIPHER  ,   cipher);
 		_(NVKM_ENGINE_DISP    ,     disp);
 		_(NVKM_ENGINE_DMAOBJ  ,      dma);

commit 4b2c71edf0d7832ef4d2fe5b17402d1130b415dc
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue May 8 20:39:47 2018 +1000

    drm/nouveau/gr/gp102-: setup stencil zbc
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 16e8090082ab..5c79c795acaa 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2204,7 +2204,7 @@ nv132_chipset = {
 	.i2c = gm200_i2c_new,
 	.ibus = gm200_ibus_new,
 	.imem = nv50_instmem_new,
-	.ltc = gp100_ltc_new,
+	.ltc = gp102_ltc_new,
 	.mc = gp100_mc_new,
 	.mmu = gp100_mmu_new,
 	.therm = gp100_therm_new,
@@ -2240,7 +2240,7 @@ nv134_chipset = {
 	.i2c = gm200_i2c_new,
 	.ibus = gm200_ibus_new,
 	.imem = nv50_instmem_new,
-	.ltc = gp100_ltc_new,
+	.ltc = gp102_ltc_new,
 	.mc = gp100_mc_new,
 	.mmu = gp100_mmu_new,
 	.therm = gp100_therm_new,
@@ -2276,7 +2276,7 @@ nv136_chipset = {
 	.i2c = gm200_i2c_new,
 	.ibus = gm200_ibus_new,
 	.imem = nv50_instmem_new,
-	.ltc = gp100_ltc_new,
+	.ltc = gp102_ltc_new,
 	.mc = gp100_mc_new,
 	.mmu = gp100_mmu_new,
 	.therm = gp100_therm_new,
@@ -2312,7 +2312,7 @@ nv137_chipset = {
 	.i2c = gm200_i2c_new,
 	.ibus = gm200_ibus_new,
 	.imem = nv50_instmem_new,
-	.ltc = gp100_ltc_new,
+	.ltc = gp102_ltc_new,
 	.mc = gp100_mc_new,
 	.mmu = gp100_mmu_new,
 	.therm = gp100_therm_new,
@@ -2348,7 +2348,7 @@ nv138_chipset = {
 	.i2c = gm200_i2c_new,
 	.ibus = gm200_ibus_new,
 	.imem = nv50_instmem_new,
-	.ltc = gp100_ltc_new,
+	.ltc = gp102_ltc_new,
 	.mc = gp100_mc_new,
 	.mmu = gp100_mmu_new,
 	.therm = gp100_therm_new,
@@ -2380,7 +2380,7 @@ nv13b_chipset = {
 	.fuse = gm107_fuse_new,
 	.ibus = gp10b_ibus_new,
 	.imem = gk20a_instmem_new,
-	.ltc = gp100_ltc_new,
+	.ltc = gp102_ltc_new,
 	.mc = gp10b_mc_new,
 	.mmu = gp10b_mmu_new,
 	.secboot = gp10b_secboot_new,

commit a5537f980e4aba64ce1a0b14ee8fb27d0fd10362
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue May 8 20:39:47 2018 +1000

    drm/nouveau/gr/gf100-: update r408840 where required
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 379e701962a7..16e8090082ab 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2256,7 +2256,7 @@ nv134_chipset = {
 	.disp = gp102_disp_new,
 	.dma = gf119_dma_new,
 	.fifo = gp100_fifo_new,
-	.gr = gp102_gr_new,
+	.gr = gp104_gr_new,
 	.nvdec = gp102_nvdec_new,
 	.sec2 = gp102_sec2_new,
 	.sw = gf100_sw_new,
@@ -2292,7 +2292,7 @@ nv136_chipset = {
 	.disp = gp102_disp_new,
 	.dma = gf119_dma_new,
 	.fifo = gp100_fifo_new,
-	.gr = gp102_gr_new,
+	.gr = gp104_gr_new,
 	.nvdec = gp102_nvdec_new,
 	.sec2 = gp102_sec2_new,
 	.sw = gf100_sw_new,

commit d0e9351e420695907e28e921d3786265253787c1
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue May 8 20:39:46 2018 +1000

    drm/nouveau/fault/gp100: implement replayable fault buffer initialisation
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 70f3cc0844c9..379e701962a7 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2161,6 +2161,7 @@ nv130_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.devinit = gm200_devinit_new,
+	.fault = gp100_fault_new,
 	.fb = gp100_fb_new,
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
@@ -2196,6 +2197,7 @@ nv132_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.devinit = gm200_devinit_new,
+	.fault = gp100_fault_new,
 	.fb = gp102_fb_new,
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
@@ -2231,6 +2233,7 @@ nv134_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.devinit = gm200_devinit_new,
+	.fault = gp100_fault_new,
 	.fb = gp102_fb_new,
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
@@ -2266,6 +2269,7 @@ nv136_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.devinit = gm200_devinit_new,
+	.fault = gp100_fault_new,
 	.fb = gp102_fb_new,
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
@@ -2301,6 +2305,7 @@ nv137_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.devinit = gm200_devinit_new,
+	.fault = gp100_fault_new,
 	.fb = gp102_fb_new,
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
@@ -2336,6 +2341,7 @@ nv138_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.devinit = gm200_devinit_new,
+	.fault = gp100_fault_new,
 	.fb = gp102_fb_new,
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
@@ -2369,6 +2375,7 @@ nv13b_chipset = {
 	.name = "GP10B",
 	.bar = gm20b_bar_new,
 	.bus = gf100_bus_new,
+	.fault = gp100_fault_new,
 	.fb = gp10b_fb_new,
 	.fuse = gm107_fuse_new,
 	.ibus = gp10b_ibus_new,

commit 1ce466894b532dc26b02a334fc609378b9231ea8
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue May 8 20:39:46 2018 +1000

    drm/nouveau/core: define FAULT subdev
    
    This will be responsible for the handling of MMU fault buffers on GPUs
    that support them.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 05cd674326a6..70f3cc0844c9 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2420,6 +2420,7 @@ nvkm_device_subdev(struct nvkm_device *device, int index)
 	_(BUS     , device->bus     , &device->bus->subdev);
 	_(CLK     , device->clk     , &device->clk->subdev);
 	_(DEVINIT , device->devinit , &device->devinit->subdev);
+	_(FAULT   , device->fault   , &device->fault->subdev);
 	_(FB      , device->fb      , &device->fb->subdev);
 	_(FUSE    , device->fuse    , &device->fuse->subdev);
 	_(GPIO    , device->gpio    , &device->gpio->subdev);
@@ -2891,6 +2892,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		_(NVKM_SUBDEV_BUS     ,      bus);
 		_(NVKM_SUBDEV_CLK     ,      clk);
 		_(NVKM_SUBDEV_DEVINIT ,  devinit);
+		_(NVKM_SUBDEV_FAULT   ,    fault);
 		_(NVKM_SUBDEV_FB      ,       fb);
 		_(NVKM_SUBDEV_FUSE    ,     fuse);
 		_(NVKM_SUBDEV_GPIO    ,     gpio);

commit fe26adf431a58d620819618e52a10bf9b5cfde52
Merge: 9e95dae76b53 94fc27ac487a
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Feb 8 11:42:05 2018 -0800

    Merge tag 'drm-for-v4.16-part2-fixes' of git://people.freedesktop.org/~airlied/linux
    
    Pull more drm updates from Dave Airlie:
     "Ben missed sending his nouveau tree, but he really didn't have much
      stuff in it:
    
       - GP108 acceleration support is enabled by "secure boot" support
    
       - some clockgating work on Kepler, and bunch of fixes
    
       - the bulk of the diff is regenerated firmware files, the change to
         them really isn't that large.
    
      Otherwise this contains regular Intel and AMDGPU fixes"
    
    * tag 'drm-for-v4.16-part2-fixes' of git://people.freedesktop.org/~airlied/linux: (59 commits)
      drm/i915/bios: add DP max link rate to VBT child device struct
      drm/i915/cnp: Properly handle VBT ddc pin out of bounds.
      drm/i915/cnp: Ignore VBT request for know invalid DDC pin.
      drm/i915/cmdparser: Do not check past the cmd length.
      drm/i915/cmdparser: Check reg_table_count before derefencing.
      drm/i915/bxt, glk: Increase PCODE timeouts during CDCLK freq changing
      drm/i915/gvt: Use KVM r/w to access guest opregion
      drm/i915/gvt: Fix aperture read/write emulation when enable x-no-mmap=on
      drm/i915/gvt: only reset execlist state of one engine during VM engine reset
      drm/i915/gvt: refine intel_vgpu_submission_ops as per engine ops
      drm/amdgpu: re-enable CGCG on CZ and disable on ST
      drm/nouveau/clk: fix gcc-7 -Wint-in-bool-context warning
      drm/nouveau/mmu: Fix trailing semicolon
      drm/nouveau: Introduce NvPmEnableGating option
      drm/nouveau: Add support for SLCG for Kepler2
      drm/nouveau: Add support for BLCG on Kepler2
      drm/nouveau: Add support for BLCG on Kepler1
      drm/nouveau: Add support for basic clockgating on Kepler1
      drm/nouveau/kms/nv50: fix handling of gamma since atomic conversion
      drm/nouveau/kms/nv50: use INTERPOLATE_257_UNITY_RANGE LUT on newer chipsets
      ...

commit 7d094d29584ff5a571be45dcdab5659d97f01020
Author: Lyude Paul <lyude@redhat.com>
Date:   Thu Feb 1 13:13:57 2018 -0500

    drm/nouveau: Add support for BLCG on Kepler2
    
    Same as the previous patch, but for Kepler2 now
    
    Signed-off-by: Lyude Paul <lyude@redhat.com>
    Reviewed-by: Martin Peres <martin.peres@free.fr>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index eab529dceb73..073534ab6911 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1812,7 +1812,7 @@ nvf0_chipset = {
 	.bus = gf100_bus_new,
 	.clk = gk104_clk_new,
 	.devinit = gf100_devinit_new,
-	.fb = gk104_fb_new,
+	.fb = gk110_fb_new,
 	.fuse = gf100_fuse_new,
 	.gpio = gk104_gpio_new,
 	.i2c = gk104_i2c_new,
@@ -1850,7 +1850,7 @@ nvf1_chipset = {
 	.bus = gf100_bus_new,
 	.clk = gk104_clk_new,
 	.devinit = gf100_devinit_new,
-	.fb = gk104_fb_new,
+	.fb = gk110_fb_new,
 	.fuse = gf100_fuse_new,
 	.gpio = gk104_gpio_new,
 	.i2c = gk104_i2c_new,
@@ -1888,7 +1888,7 @@ nv106_chipset = {
 	.bus = gf100_bus_new,
 	.clk = gk104_clk_new,
 	.devinit = gf100_devinit_new,
-	.fb = gk104_fb_new,
+	.fb = gk110_fb_new,
 	.fuse = gf100_fuse_new,
 	.gpio = gk104_gpio_new,
 	.i2c = gk104_i2c_new,
@@ -1926,7 +1926,7 @@ nv108_chipset = {
 	.bus = gf100_bus_new,
 	.clk = gk104_clk_new,
 	.devinit = gf100_devinit_new,
-	.fb = gk104_fb_new,
+	.fb = gk110_fb_new,
 	.fuse = gf100_fuse_new,
 	.gpio = gk104_gpio_new,
 	.i2c = gk104_i2c_new,

commit b138eca661ccee2b43f8ef3cfd952a5c71c1dc90
Author: Lyude Paul <lyude@redhat.com>
Date:   Thu Feb 1 13:13:55 2018 -0500

    drm/nouveau: Add support for basic clockgating on Kepler1
    
    This adds support for enabling automatic clockgating on nvidia GPUs for
    Kepler1. While this is not technically a clockgating level, it does
    enable clockgating using the clockgating values initially set by the
    vbios (which should be safe to use).
    
    This introduces two therm helpers for controlling basic clockgating:
            nvkm_therm_clkgate_enable() - enables clockgating through
            CG_CTRL, done after initializing the GPU fully
            nvkm_therm_clkgate_fini() - prepares clockgating for suspend or
            driver unload
    
    A lot of this code was originally going to be based off of fermi;
    however it turns out that while Fermi's the first line of GPUs that
    introduced this kind of power saving, Fermi requires more fine tuned
    control of the CG_CTRL registers from the driver while reclocking that
    we don't entirely understand yet.
    
    For the simple parts we will be sharing with Fermi for certain however,
    we at least add those into a new subdev/therm/gf100.h header.
    
    Signed-off-by: Lyude Paul <lyude@redhat.com>
    Reviewed-by: Martin Peres <martin.peres@free.fr>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index a4a5ffce03d0..eab529dceb73 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -28,6 +28,7 @@
 #include <core/option.h>
 
 #include <subdev/bios.h>
+#include <subdev/therm.h>
 
 static DEFINE_MUTEX(nv_devices_mutex);
 static LIST_HEAD(nv_devices);
@@ -1682,7 +1683,7 @@ nve4_chipset = {
 	.mxm = nv50_mxm_new,
 	.pci = gk104_pci_new,
 	.pmu = gk104_pmu_new,
-	.therm = gf119_therm_new,
+	.therm = gk104_therm_new,
 	.timer = nv41_timer_new,
 	.top = gk104_top_new,
 	.volt = gk104_volt_new,
@@ -1721,7 +1722,7 @@ nve6_chipset = {
 	.mxm = nv50_mxm_new,
 	.pci = gk104_pci_new,
 	.pmu = gk104_pmu_new,
-	.therm = gf119_therm_new,
+	.therm = gk104_therm_new,
 	.timer = nv41_timer_new,
 	.top = gk104_top_new,
 	.volt = gk104_volt_new,
@@ -1760,7 +1761,7 @@ nve7_chipset = {
 	.mxm = nv50_mxm_new,
 	.pci = gk104_pci_new,
 	.pmu = gk104_pmu_new,
-	.therm = gf119_therm_new,
+	.therm = gk104_therm_new,
 	.timer = nv41_timer_new,
 	.top = gk104_top_new,
 	.volt = gk104_volt_new,
@@ -1824,7 +1825,7 @@ nvf0_chipset = {
 	.mxm = nv50_mxm_new,
 	.pci = gk104_pci_new,
 	.pmu = gk110_pmu_new,
-	.therm = gf119_therm_new,
+	.therm = gk104_therm_new,
 	.timer = nv41_timer_new,
 	.top = gk104_top_new,
 	.volt = gk104_volt_new,
@@ -1862,7 +1863,7 @@ nvf1_chipset = {
 	.mxm = nv50_mxm_new,
 	.pci = gk104_pci_new,
 	.pmu = gk110_pmu_new,
-	.therm = gf119_therm_new,
+	.therm = gk104_therm_new,
 	.timer = nv41_timer_new,
 	.top = gk104_top_new,
 	.volt = gk104_volt_new,
@@ -1900,7 +1901,7 @@ nv106_chipset = {
 	.mxm = nv50_mxm_new,
 	.pci = gk104_pci_new,
 	.pmu = gk208_pmu_new,
-	.therm = gf119_therm_new,
+	.therm = gk104_therm_new,
 	.timer = nv41_timer_new,
 	.top = gk104_top_new,
 	.volt = gk104_volt_new,
@@ -1938,7 +1939,7 @@ nv108_chipset = {
 	.mxm = nv50_mxm_new,
 	.pci = gk104_pci_new,
 	.pmu = gk208_pmu_new,
-	.therm = gf119_therm_new,
+	.therm = gk104_therm_new,
 	.timer = nv41_timer_new,
 	.top = gk104_top_new,
 	.volt = gk104_volt_new,
@@ -2513,6 +2514,7 @@ nvkm_device_fini(struct nvkm_device *device, bool suspend)
 		}
 	}
 
+	nvkm_therm_clkgate_fini(device->therm, suspend);
 
 	if (device->func->fini)
 		device->func->fini(device, suspend);
@@ -2602,6 +2604,7 @@ nvkm_device_init(struct nvkm_device *device)
 	}
 
 	nvkm_acpi_init(device);
+	nvkm_therm_clkgate_enable(device->therm);
 
 	time = ktime_to_us(ktime_get()) - time;
 	nvdev_trace(device, "init completed in %lldus\n", time);

commit 2c5ac5ba4f855b8cb3f20c52c1a1e0773e671164
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 12 16:09:03 2017 +1000

    drm/nouveau/secboot/gp108: implement on top of acr_r370
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Reviewed-by: Gourav Samaiya <gsamaiya@nvidia.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 00eeaaffeae5..a4a5ffce03d0 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2345,6 +2345,7 @@ nv138_chipset = {
 	.mc = gp100_mc_new,
 	.mmu = gp100_mmu_new,
 	.therm = gp100_therm_new,
+	.secboot = gp108_secboot_new,
 	.pci = gp100_pci_new,
 	.pmu = gp102_pmu_new,
 	.timer = gk20a_timer_new,
@@ -2356,6 +2357,10 @@ nv138_chipset = {
 	.disp = gp102_disp_new,
 	.dma = gf119_dma_new,
 	.fifo = gp100_fifo_new,
+	.gr = gp107_gr_new,
+	.nvdec = gp102_nvdec_new,
+	.sec2 = gp102_sec2_new,
+	.sw = gf100_sw_new,
 };
 
 static const struct nvkm_device_chip

commit 2ffa64eba94fc8cc23d431cbec7365f3f07ff0ae
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Fri Jan 19 10:34:56 2018 +1000

    drm/nouveau/mmu/mcp77: fix regressions in stolen memory handling
    
    - Fixes addition of stolen memory base address to PTEs.
    - Removes support for compression.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Tested-by: Pierre Moreau <pierre.morrow@free.fr>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 00eeaaffeae5..08e77cd55e6e 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1251,7 +1251,7 @@ nvaa_chipset = {
 	.i2c = g94_i2c_new,
 	.imem = nv50_instmem_new,
 	.mc = g98_mc_new,
-	.mmu = g84_mmu_new,
+	.mmu = mcp77_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = g94_pci_new,
 	.therm = g84_therm_new,
@@ -1283,7 +1283,7 @@ nvac_chipset = {
 	.i2c = g94_i2c_new,
 	.imem = nv50_instmem_new,
 	.mc = g98_mc_new,
-	.mmu = g84_mmu_new,
+	.mmu = mcp77_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = g94_pci_new,
 	.therm = g84_therm_new,

commit 6cb0f2a39d3b7ccdd7269af4ddadb38e78aee744
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Dec 7 15:04:32 2017 +1000

    drm/nouveau/mmu/gp10b: use correct implementation
    
    Reported-by: Mikko Perttunen <cyndis@kapsi.fi>
    Fixes: 6359c98224 ("drm/nouveau/mmu/gp10b: fork from gf100")
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Tested-by: Thierry Reding <treding@nvidia.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index e14643615698..00eeaaffeae5 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2369,7 +2369,7 @@ nv13b_chipset = {
 	.imem = gk20a_instmem_new,
 	.ltc = gp100_ltc_new,
 	.mc = gp10b_mc_new,
-	.mmu = gf100_mmu_new,
+	.mmu = gp10b_mmu_new,
 	.secboot = gp10b_secboot_new,
 	.pmu = gm20b_pmu_new,
 	.timer = gk20a_timer_new,

commit b86a45877ead1d0235674cae58dac7d07f00fa88
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Nov 1 03:56:19 2017 +1000

    drm/nouveau/mmu/gp100: fork from gf100
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index d99093435c25..e14643615698 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2168,7 +2168,7 @@ nv130_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gp100_ltc_new,
 	.mc = gp100_mc_new,
-	.mmu = gf100_mmu_new,
+	.mmu = gp100_mmu_new,
 	.therm = gp100_therm_new,
 	.secboot = gm200_secboot_new,
 	.pci = gp100_pci_new,
@@ -2203,7 +2203,7 @@ nv132_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gp100_ltc_new,
 	.mc = gp100_mc_new,
-	.mmu = gf100_mmu_new,
+	.mmu = gp100_mmu_new,
 	.therm = gp100_therm_new,
 	.secboot = gp102_secboot_new,
 	.pci = gp100_pci_new,
@@ -2238,7 +2238,7 @@ nv134_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gp100_ltc_new,
 	.mc = gp100_mc_new,
-	.mmu = gf100_mmu_new,
+	.mmu = gp100_mmu_new,
 	.therm = gp100_therm_new,
 	.secboot = gp102_secboot_new,
 	.pci = gp100_pci_new,
@@ -2273,7 +2273,7 @@ nv136_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gp100_ltc_new,
 	.mc = gp100_mc_new,
-	.mmu = gf100_mmu_new,
+	.mmu = gp100_mmu_new,
 	.therm = gp100_therm_new,
 	.secboot = gp102_secboot_new,
 	.pci = gp100_pci_new,
@@ -2308,7 +2308,7 @@ nv137_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gp100_ltc_new,
 	.mc = gp100_mc_new,
-	.mmu = gf100_mmu_new,
+	.mmu = gp100_mmu_new,
 	.therm = gp100_therm_new,
 	.secboot = gp102_secboot_new,
 	.pci = gp100_pci_new,
@@ -2343,7 +2343,7 @@ nv138_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gp100_ltc_new,
 	.mc = gp100_mc_new,
-	.mmu = gf100_mmu_new,
+	.mmu = gp100_mmu_new,
 	.therm = gp100_therm_new,
 	.pci = gp100_pci_new,
 	.pmu = gp102_pmu_new,

commit cedc4d57df26170a2f1536cec276c5cc809a2462
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Nov 1 03:56:19 2017 +1000

    drm/nouveau/mmu/gm20b: fork from gf100
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index c4cd89a7be70..d99093435c25 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2140,7 +2140,7 @@ nv12b_chipset = {
 	.imem = gk20a_instmem_new,
 	.ltc = gm200_ltc_new,
 	.mc = gk20a_mc_new,
-	.mmu = gf100_mmu_new,
+	.mmu = gm20b_mmu_new,
 	.pmu = gm20b_pmu_new,
 	.secboot = gm20b_secboot_new,
 	.timer = gk20a_timer_new,

commit e1e33c791a233cb4cc84175109e42bdd6467889c
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Nov 1 03:56:19 2017 +1000

    drm/nouveau/mmu/gm200: fork from gf100
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index b87f6cf12a69..c4cd89a7be70 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2039,7 +2039,7 @@ nv120_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gm200_ltc_new,
 	.mc = gk20a_mc_new,
-	.mmu = gf100_mmu_new,
+	.mmu = gm200_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = gk104_pci_new,
 	.pmu = gm107_pmu_new,
@@ -2074,7 +2074,7 @@ nv124_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gm200_ltc_new,
 	.mc = gk20a_mc_new,
-	.mmu = gf100_mmu_new,
+	.mmu = gm200_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = gk104_pci_new,
 	.pmu = gm107_pmu_new,
@@ -2109,7 +2109,7 @@ nv126_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gm200_ltc_new,
 	.mc = gk20a_mc_new,
-	.mmu = gf100_mmu_new,
+	.mmu = gm200_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = gk104_pci_new,
 	.pmu = gm107_pmu_new,

commit d1f6c8d2e9df49eb7387b04b880d643348e97625
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Nov 1 03:56:19 2017 +1000

    drm/nouveau/mmu/gk20a: fork from gf100
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 81a2bc4e57cb..b87f6cf12a69 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1790,7 +1790,7 @@ nvea_chipset = {
 	.imem = gk20a_instmem_new,
 	.ltc = gk104_ltc_new,
 	.mc = gk20a_mc_new,
-	.mmu = gf100_mmu_new,
+	.mmu = gk20a_mmu_new,
 	.pmu = gk20a_pmu_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,

commit db018585a51a08fd80ade568ada7b985abcbaf6e
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Nov 1 03:56:19 2017 +1000

    drm/nouveau/mmu/gk104: fork from gf100
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index f90b9a9d22db..81a2bc4e57cb 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1678,7 +1678,7 @@ nve4_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
 	.mc = gk104_mc_new,
-	.mmu = gf100_mmu_new,
+	.mmu = gk104_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = gk104_pci_new,
 	.pmu = gk104_pmu_new,
@@ -1717,7 +1717,7 @@ nve6_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
 	.mc = gk104_mc_new,
-	.mmu = gf100_mmu_new,
+	.mmu = gk104_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = gk104_pci_new,
 	.pmu = gk104_pmu_new,
@@ -1756,7 +1756,7 @@ nve7_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
 	.mc = gk104_mc_new,
-	.mmu = gf100_mmu_new,
+	.mmu = gk104_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = gk104_pci_new,
 	.pmu = gk104_pmu_new,
@@ -1820,7 +1820,7 @@ nvf0_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
 	.mc = gk104_mc_new,
-	.mmu = gf100_mmu_new,
+	.mmu = gk104_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = gk104_pci_new,
 	.pmu = gk110_pmu_new,
@@ -1858,7 +1858,7 @@ nvf1_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
 	.mc = gk104_mc_new,
-	.mmu = gf100_mmu_new,
+	.mmu = gk104_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = gk104_pci_new,
 	.pmu = gk110_pmu_new,
@@ -1896,7 +1896,7 @@ nv106_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
 	.mc = gk20a_mc_new,
-	.mmu = gf100_mmu_new,
+	.mmu = gk104_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = gk104_pci_new,
 	.pmu = gk208_pmu_new,
@@ -1934,7 +1934,7 @@ nv108_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
 	.mc = gk20a_mc_new,
-	.mmu = gf100_mmu_new,
+	.mmu = gk104_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = gk104_pci_new,
 	.pmu = gk208_pmu_new,
@@ -1972,7 +1972,7 @@ nv117_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gm107_ltc_new,
 	.mc = gk20a_mc_new,
-	.mmu = gf100_mmu_new,
+	.mmu = gk104_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = gk104_pci_new,
 	.pmu = gm107_pmu_new,
@@ -2006,7 +2006,7 @@ nv118_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gm107_ltc_new,
 	.mc = gk20a_mc_new,
-	.mmu = gf100_mmu_new,
+	.mmu = gk104_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = gk104_pci_new,
 	.pmu = gm107_pmu_new,

commit 0f43715fac003613a028d28a2c76fbab4c9f9177
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Nov 1 03:56:19 2017 +1000

    drm/nouveau/mmu/g84: fork from nv50
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 77fe1c145498..f90b9a9d22db 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -927,7 +927,7 @@ nv84_chipset = {
 	.i2c = nv50_i2c_new,
 	.imem = nv50_instmem_new,
 	.mc = g84_mc_new,
-	.mmu = nv50_mmu_new,
+	.mmu = g84_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = g84_pci_new,
 	.therm = g84_therm_new,
@@ -959,7 +959,7 @@ nv86_chipset = {
 	.i2c = nv50_i2c_new,
 	.imem = nv50_instmem_new,
 	.mc = g84_mc_new,
-	.mmu = nv50_mmu_new,
+	.mmu = g84_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = g84_pci_new,
 	.therm = g84_therm_new,
@@ -991,7 +991,7 @@ nv92_chipset = {
 	.i2c = nv50_i2c_new,
 	.imem = nv50_instmem_new,
 	.mc = g84_mc_new,
-	.mmu = nv50_mmu_new,
+	.mmu = g84_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = g92_pci_new,
 	.therm = g84_therm_new,
@@ -1023,7 +1023,7 @@ nv94_chipset = {
 	.i2c = g94_i2c_new,
 	.imem = nv50_instmem_new,
 	.mc = g84_mc_new,
-	.mmu = nv50_mmu_new,
+	.mmu = g84_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = g94_pci_new,
 	.therm = g84_therm_new,
@@ -1055,7 +1055,7 @@ nv96_chipset = {
 	.i2c = g94_i2c_new,
 	.imem = nv50_instmem_new,
 	.mc = g84_mc_new,
-	.mmu = nv50_mmu_new,
+	.mmu = g84_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = g94_pci_new,
 	.therm = g84_therm_new,
@@ -1087,7 +1087,7 @@ nv98_chipset = {
 	.i2c = g94_i2c_new,
 	.imem = nv50_instmem_new,
 	.mc = g98_mc_new,
-	.mmu = nv50_mmu_new,
+	.mmu = g84_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = g94_pci_new,
 	.therm = g84_therm_new,
@@ -1119,7 +1119,7 @@ nva0_chipset = {
 	.i2c = nv50_i2c_new,
 	.imem = nv50_instmem_new,
 	.mc = g84_mc_new,
-	.mmu = nv50_mmu_new,
+	.mmu = g84_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = g94_pci_new,
 	.therm = g84_therm_new,
@@ -1151,7 +1151,7 @@ nva3_chipset = {
 	.i2c = g94_i2c_new,
 	.imem = nv50_instmem_new,
 	.mc = gt215_mc_new,
-	.mmu = nv50_mmu_new,
+	.mmu = g84_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = g94_pci_new,
 	.pmu = gt215_pmu_new,
@@ -1185,7 +1185,7 @@ nva5_chipset = {
 	.i2c = g94_i2c_new,
 	.imem = nv50_instmem_new,
 	.mc = gt215_mc_new,
-	.mmu = nv50_mmu_new,
+	.mmu = g84_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = g94_pci_new,
 	.pmu = gt215_pmu_new,
@@ -1218,7 +1218,7 @@ nva8_chipset = {
 	.i2c = g94_i2c_new,
 	.imem = nv50_instmem_new,
 	.mc = gt215_mc_new,
-	.mmu = nv50_mmu_new,
+	.mmu = g84_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = g94_pci_new,
 	.pmu = gt215_pmu_new,
@@ -1251,7 +1251,7 @@ nvaa_chipset = {
 	.i2c = g94_i2c_new,
 	.imem = nv50_instmem_new,
 	.mc = g98_mc_new,
-	.mmu = nv50_mmu_new,
+	.mmu = g84_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = g94_pci_new,
 	.therm = g84_therm_new,
@@ -1283,7 +1283,7 @@ nvac_chipset = {
 	.i2c = g94_i2c_new,
 	.imem = nv50_instmem_new,
 	.mc = g98_mc_new,
-	.mmu = nv50_mmu_new,
+	.mmu = g84_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = g94_pci_new,
 	.therm = g84_therm_new,
@@ -1315,7 +1315,7 @@ nvaf_chipset = {
 	.i2c = g94_i2c_new,
 	.imem = nv50_instmem_new,
 	.mc = gt215_mc_new,
-	.mmu = nv50_mmu_new,
+	.mmu = g84_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = g94_pci_new,
 	.pmu = gt215_pmu_new,

commit 70433b904a8b6865558ae33cadd8bb85c0d98e12
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Nov 1 03:56:19 2017 +1000

    drm/nouveau/bar/gm107-: wait for instance block binding to complete
    
    Discovered by accident while working to use BAR2 access to instmem objects
    on more paths.
    
    We've apparently been relying on luck up until now!
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 28fd4fa98635..77fe1c145498 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1958,7 +1958,7 @@ nv108_chipset = {
 static const struct nvkm_device_chip
 nv117_chipset = {
 	.name = "GM107",
-	.bar = gf100_bar_new,
+	.bar = gm107_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.clk = gk104_clk_new,
@@ -1992,7 +1992,7 @@ nv117_chipset = {
 static const struct nvkm_device_chip
 nv118_chipset = {
 	.name = "GM108",
-	.bar = gf100_bar_new,
+	.bar = gm107_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.clk = gk104_clk_new,
@@ -2026,7 +2026,7 @@ nv118_chipset = {
 static const struct nvkm_device_chip
 nv120_chipset = {
 	.name = "GM200",
-	.bar = gf100_bar_new,
+	.bar = gm107_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.devinit = gm200_devinit_new,
@@ -2061,7 +2061,7 @@ nv120_chipset = {
 static const struct nvkm_device_chip
 nv124_chipset = {
 	.name = "GM204",
-	.bar = gf100_bar_new,
+	.bar = gm107_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.devinit = gm200_devinit_new,
@@ -2096,7 +2096,7 @@ nv124_chipset = {
 static const struct nvkm_device_chip
 nv126_chipset = {
 	.name = "GM206",
-	.bar = gf100_bar_new,
+	.bar = gm107_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.devinit = gm200_devinit_new,
@@ -2131,7 +2131,7 @@ nv126_chipset = {
 static const struct nvkm_device_chip
 nv12b_chipset = {
 	.name = "GM20B",
-	.bar = gk20a_bar_new,
+	.bar = gm20b_bar_new,
 	.bus = gf100_bus_new,
 	.clk = gm20b_clk_new,
 	.fb = gm20b_fb_new,
@@ -2156,7 +2156,7 @@ nv12b_chipset = {
 static const struct nvkm_device_chip
 nv130_chipset = {
 	.name = "GP100",
-	.bar = gf100_bar_new,
+	.bar = gm107_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.devinit = gm200_devinit_new,
@@ -2191,7 +2191,7 @@ nv130_chipset = {
 static const struct nvkm_device_chip
 nv132_chipset = {
 	.name = "GP102",
-	.bar = gf100_bar_new,
+	.bar = gm107_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.devinit = gm200_devinit_new,
@@ -2226,7 +2226,7 @@ nv132_chipset = {
 static const struct nvkm_device_chip
 nv134_chipset = {
 	.name = "GP104",
-	.bar = gf100_bar_new,
+	.bar = gm107_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.devinit = gm200_devinit_new,
@@ -2261,7 +2261,7 @@ nv134_chipset = {
 static const struct nvkm_device_chip
 nv136_chipset = {
 	.name = "GP106",
-	.bar = gf100_bar_new,
+	.bar = gm107_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.devinit = gm200_devinit_new,
@@ -2296,7 +2296,7 @@ nv136_chipset = {
 static const struct nvkm_device_chip
 nv137_chipset = {
 	.name = "GP107",
-	.bar = gf100_bar_new,
+	.bar = gm107_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.devinit = gm200_devinit_new,
@@ -2331,7 +2331,7 @@ nv137_chipset = {
 static const struct nvkm_device_chip
 nv138_chipset = {
 	.name = "GP108",
-	.bar = gf100_bar_new,
+	.bar = gm107_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.devinit = gm200_devinit_new,
@@ -2361,7 +2361,7 @@ nv138_chipset = {
 static const struct nvkm_device_chip
 nv13b_chipset = {
 	.name = "GP10B",
-	.bar = gk20a_bar_new,
+	.bar = gm20b_bar_new,
 	.bus = gf100_bus_new,
 	.fb = gp10b_fb_new,
 	.fuse = gm107_fuse_new,

commit d32656373857839c82e3941a9e26cf228ca319b3
Author: Rhys Kidd <rhyskidd@gmail.com>
Date:   Wed Nov 1 03:56:19 2017 +1000

    drm/nouveau/therm/gp100: initial implementation of new gp1xx temperature sensor
    
    v2:
     - add nv138 and drop nv13b chipsets (Ilia Mirkin)
     - refactor out status variable and instead mask tsensor (Ilia Mirkin)
     - switch SHADOWed state message away from nvkm_error() (Ilia Mirkin)
     - rename internal temperature variable (Karol Herbst)
    
    v3:
     - use nvkm_trace() for SHADOWed state message (Ben Skeggs)
    
    Signed-off-by: Rhys Kidd <rhyskidd@gmail.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index e096a5d9c292..28fd4fa98635 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2169,6 +2169,7 @@ nv130_chipset = {
 	.ltc = gp100_ltc_new,
 	.mc = gp100_mc_new,
 	.mmu = gf100_mmu_new,
+	.therm = gp100_therm_new,
 	.secboot = gm200_secboot_new,
 	.pci = gp100_pci_new,
 	.pmu = gp100_pmu_new,
@@ -2203,6 +2204,7 @@ nv132_chipset = {
 	.ltc = gp100_ltc_new,
 	.mc = gp100_mc_new,
 	.mmu = gf100_mmu_new,
+	.therm = gp100_therm_new,
 	.secboot = gp102_secboot_new,
 	.pci = gp100_pci_new,
 	.pmu = gp102_pmu_new,
@@ -2237,6 +2239,7 @@ nv134_chipset = {
 	.ltc = gp100_ltc_new,
 	.mc = gp100_mc_new,
 	.mmu = gf100_mmu_new,
+	.therm = gp100_therm_new,
 	.secboot = gp102_secboot_new,
 	.pci = gp100_pci_new,
 	.pmu = gp102_pmu_new,
@@ -2271,6 +2274,7 @@ nv136_chipset = {
 	.ltc = gp100_ltc_new,
 	.mc = gp100_mc_new,
 	.mmu = gf100_mmu_new,
+	.therm = gp100_therm_new,
 	.secboot = gp102_secboot_new,
 	.pci = gp100_pci_new,
 	.pmu = gp102_pmu_new,
@@ -2305,6 +2309,7 @@ nv137_chipset = {
 	.ltc = gp100_ltc_new,
 	.mc = gp100_mc_new,
 	.mmu = gf100_mmu_new,
+	.therm = gp100_therm_new,
 	.secboot = gp102_secboot_new,
 	.pci = gp100_pci_new,
 	.pmu = gp102_pmu_new,
@@ -2339,6 +2344,7 @@ nv138_chipset = {
 	.ltc = gp100_ltc_new,
 	.mc = gp100_mc_new,
 	.mmu = gf100_mmu_new,
+	.therm = gp100_therm_new,
 	.pci = gp100_pci_new,
 	.pmu = gp102_pmu_new,
 	.timer = gk20a_timer_new,

commit 2659b4ce284be569b06ea2c13e5d30517f8095ed
Author: Ilia Mirkin <imirkin@alum.mit.edu>
Date:   Mon Jul 3 14:46:21 2017 -0400

    initial support (display-only) for GP108
    
    Forked from GP107 implementation. Secboot/gr left out as we don't have
    signed blobs from NVIDIA in linux-firmware.
    
    (Ben): Was unable to mmiotrace the binary driver for unknown reasons,
           so not able to 100% confirm that no other changes from GP107
           are needed.  Quick testing shows it seems to work well enough
           for display.  Due to NVIDIA dragging their heels on getting
           signed firmware to us, this is the best we can do for now.
    
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=101601
    Signed-off-by: Ilia Mirkin <imirkin@alum.mit.edu>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 39fdafed7b4e..e096a5d9c292 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2323,6 +2323,35 @@ nv137_chipset = {
 	.sw = gf100_sw_new,
 };
 
+static const struct nvkm_device_chip
+nv138_chipset = {
+	.name = "GP108",
+	.bar = gf100_bar_new,
+	.bios = nvkm_bios_new,
+	.bus = gf100_bus_new,
+	.devinit = gm200_devinit_new,
+	.fb = gp102_fb_new,
+	.fuse = gm107_fuse_new,
+	.gpio = gk104_gpio_new,
+	.i2c = gm200_i2c_new,
+	.ibus = gm200_ibus_new,
+	.imem = nv50_instmem_new,
+	.ltc = gp100_ltc_new,
+	.mc = gp100_mc_new,
+	.mmu = gf100_mmu_new,
+	.pci = gp100_pci_new,
+	.pmu = gp102_pmu_new,
+	.timer = gk20a_timer_new,
+	.top = gk104_top_new,
+	.ce[0] = gp102_ce_new,
+	.ce[1] = gp102_ce_new,
+	.ce[2] = gp102_ce_new,
+	.ce[3] = gp102_ce_new,
+	.disp = gp102_disp_new,
+	.dma = gf119_dma_new,
+	.fifo = gp100_fifo_new,
+};
+
 static const struct nvkm_device_chip
 nv13b_chipset = {
 	.name = "GP10B",
@@ -2785,6 +2814,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		case 0x134: device->chip = &nv134_chipset; break;
 		case 0x136: device->chip = &nv136_chipset; break;
 		case 0x137: device->chip = &nv137_chipset; break;
+		case 0x138: device->chip = &nv138_chipset; break;
 		case 0x13b: device->chip = &nv13b_chipset; break;
 		default:
 			nvdev_error(device, "unknown chipset (%08x)\n", boot0);

commit 9d60b9c9d0b6bacee794db9cd18671296b7db072
Author: Karol Herbst <karolherbst@gmail.com>
Date:   Mon Jul 3 20:02:51 2017 +0200

    drm/nouveau/therm/gm200: Added
    
    This allows temperature readouts on maxwell2 GPUs.
    
    Signed-off-by: Karol Herbst <karolherbst@gmail.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 7bdc7a5ae723..39fdafed7b4e 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2043,6 +2043,7 @@ nv120_chipset = {
 	.mxm = nv50_mxm_new,
 	.pci = gk104_pci_new,
 	.pmu = gm107_pmu_new,
+	.therm = gm200_therm_new,
 	.secboot = gm200_secboot_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
@@ -2077,6 +2078,7 @@ nv124_chipset = {
 	.mxm = nv50_mxm_new,
 	.pci = gk104_pci_new,
 	.pmu = gm107_pmu_new,
+	.therm = gm200_therm_new,
 	.secboot = gm200_secboot_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
@@ -2111,6 +2113,7 @@ nv126_chipset = {
 	.mxm = nv50_mxm_new,
 	.pci = gk104_pci_new,
 	.pmu = gm107_pmu_new,
+	.therm = gm200_therm_new,
 	.secboot = gm200_secboot_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,

commit b3c9c0226c69a8d8e8a4505432f8bbf7188ad348
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Fri May 19 23:59:35 2017 +1000

    drm/nouveau/disp: fork off some new hw-specific implementations
    
    Upcoming commits make supervisor handling share code between the NV50
    and GF119 implementations.  Because of this, and a few other cleanups,
    we need to allow some additional customisation.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index b690bc12a5b7..7bdc7a5ae723 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1257,7 +1257,7 @@ nvaa_chipset = {
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-	.disp = g94_disp_new,
+	.disp = mcp77_disp_new,
 	.dma = nv50_dma_new,
 	.fifo = g84_fifo_new,
 	.gr = gt200_gr_new,
@@ -1289,7 +1289,7 @@ nvac_chipset = {
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-	.disp = g94_disp_new,
+	.disp = mcp77_disp_new,
 	.dma = nv50_dma_new,
 	.fifo = g84_fifo_new,
 	.gr = mcp79_gr_new,
@@ -1323,7 +1323,7 @@ nvaf_chipset = {
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
 	.ce[0] = gt215_ce_new,
-	.disp = gt215_disp_new,
+	.disp = mcp89_disp_new,
 	.dma = nv50_dma_new,
 	.fifo = g84_fifo_new,
 	.gr = mcp89_gr_new,

commit b2c4ef70790cee37f243af2b303727394edae1d5
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Mar 30 16:12:30 2017 +1000

    drm/nouveau/gr/gp107: initial support
    
    Forked from GP106 implementation.
    
    Differences:
    - 1 PPC/GPC
    - Slightly different grctx magics
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 28122cad1a03..b690bc12a5b7 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2201,8 +2201,6 @@ nv132_chipset = {
 	.mc = gp100_mc_new,
 	.mmu = gf100_mmu_new,
 	.secboot = gp102_secboot_new,
-	.sec2 = gp102_sec2_new,
-	.nvdec = gp102_nvdec_new,
 	.pci = gp100_pci_new,
 	.pmu = gp102_pmu_new,
 	.timer = gk20a_timer_new,
@@ -2215,6 +2213,8 @@ nv132_chipset = {
 	.dma = gf119_dma_new,
 	.fifo = gp100_fifo_new,
 	.gr = gp102_gr_new,
+	.nvdec = gp102_nvdec_new,
+	.sec2 = gp102_sec2_new,
 	.sw = gf100_sw_new,
 };
 
@@ -2235,8 +2235,6 @@ nv134_chipset = {
 	.mc = gp100_mc_new,
 	.mmu = gf100_mmu_new,
 	.secboot = gp102_secboot_new,
-	.sec2 = gp102_sec2_new,
-	.nvdec = gp102_nvdec_new,
 	.pci = gp100_pci_new,
 	.pmu = gp102_pmu_new,
 	.timer = gk20a_timer_new,
@@ -2249,6 +2247,8 @@ nv134_chipset = {
 	.dma = gf119_dma_new,
 	.fifo = gp100_fifo_new,
 	.gr = gp102_gr_new,
+	.nvdec = gp102_nvdec_new,
+	.sec2 = gp102_sec2_new,
 	.sw = gf100_sw_new,
 };
 
@@ -2269,8 +2269,6 @@ nv136_chipset = {
 	.mc = gp100_mc_new,
 	.mmu = gf100_mmu_new,
 	.secboot = gp102_secboot_new,
-	.sec2 = gp102_sec2_new,
-	.nvdec = gp102_nvdec_new,
 	.pci = gp100_pci_new,
 	.pmu = gp102_pmu_new,
 	.timer = gk20a_timer_new,
@@ -2283,6 +2281,8 @@ nv136_chipset = {
 	.dma = gf119_dma_new,
 	.fifo = gp100_fifo_new,
 	.gr = gp102_gr_new,
+	.nvdec = gp102_nvdec_new,
+	.sec2 = gp102_sec2_new,
 	.sw = gf100_sw_new,
 };
 
@@ -2302,6 +2302,7 @@ nv137_chipset = {
 	.ltc = gp100_ltc_new,
 	.mc = gp100_mc_new,
 	.mmu = gf100_mmu_new,
+	.secboot = gp102_secboot_new,
 	.pci = gp100_pci_new,
 	.pmu = gp102_pmu_new,
 	.timer = gk20a_timer_new,
@@ -2313,6 +2314,10 @@ nv137_chipset = {
 	.disp = gp102_disp_new,
 	.dma = gf119_dma_new,
 	.fifo = gp100_fifo_new,
+	.gr = gp107_gr_new,
+	.nvdec = gp102_nvdec_new,
+	.sec2 = gp102_sec2_new,
+	.sw = gf100_sw_new,
 };
 
 static const struct nvkm_device_chip

commit fa1dbc49725bbd4231fa48f7c42a1ad2dd183786
Author: Alexandre Courbot <acourbot@nvidia.com>
Date:   Wed Mar 29 18:31:23 2017 +0900

    drm/nouveau/core: recognise GP10B chipset
    
    Signed-off-by: Alexandre Courbot <acourbot@nvidia.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 781b59386e9c..28122cad1a03 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2315,6 +2315,29 @@ nv137_chipset = {
 	.fifo = gp100_fifo_new,
 };
 
+static const struct nvkm_device_chip
+nv13b_chipset = {
+	.name = "GP10B",
+	.bar = gk20a_bar_new,
+	.bus = gf100_bus_new,
+	.fb = gp10b_fb_new,
+	.fuse = gm107_fuse_new,
+	.ibus = gp10b_ibus_new,
+	.imem = gk20a_instmem_new,
+	.ltc = gp100_ltc_new,
+	.mc = gp10b_mc_new,
+	.mmu = gf100_mmu_new,
+	.secboot = gp10b_secboot_new,
+	.pmu = gm20b_pmu_new,
+	.timer = gk20a_timer_new,
+	.top = gk104_top_new,
+	.ce[2] = gp102_ce_new,
+	.dma = gf119_dma_new,
+	.fifo = gp10b_fifo_new,
+	.gr = gp10b_gr_new,
+	.sw = gf100_sw_new,
+};
+
 static int
 nvkm_device_event_ctor(struct nvkm_object *object, void *data, u32 size,
 		       struct nvkm_notify *notify)
@@ -2754,6 +2777,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		case 0x134: device->chip = &nv134_chipset; break;
 		case 0x136: device->chip = &nv136_chipset; break;
 		case 0x137: device->chip = &nv137_chipset; break;
+		case 0x13b: device->chip = &nv13b_chipset; break;
 		default:
 			nvdev_error(device, "unknown chipset (%08x)\n", boot0);
 			goto done;

commit 2ebd42bc28525da52162425ecd7472846b78584d
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Apr 6 10:35:26 2017 +1000

    drm/nouveau: initial support (display-only) for GP107
    
    Forked from GP106 implementation.
    
    Split out from commit enabling secboot/gr support so that it can be
    added to earlier kernels.
    
    Cc: stable@vger.kernel.org      [4.10+]
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index ffd7d09ed3ac..781b59386e9c 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2286,6 +2286,35 @@ nv136_chipset = {
 	.sw = gf100_sw_new,
 };
 
+static const struct nvkm_device_chip
+nv137_chipset = {
+	.name = "GP107",
+	.bar = gf100_bar_new,
+	.bios = nvkm_bios_new,
+	.bus = gf100_bus_new,
+	.devinit = gm200_devinit_new,
+	.fb = gp102_fb_new,
+	.fuse = gm107_fuse_new,
+	.gpio = gk104_gpio_new,
+	.i2c = gm200_i2c_new,
+	.ibus = gm200_ibus_new,
+	.imem = nv50_instmem_new,
+	.ltc = gp100_ltc_new,
+	.mc = gp100_mc_new,
+	.mmu = gf100_mmu_new,
+	.pci = gp100_pci_new,
+	.pmu = gp102_pmu_new,
+	.timer = gk20a_timer_new,
+	.top = gk104_top_new,
+	.ce[0] = gp102_ce_new,
+	.ce[1] = gp102_ce_new,
+	.ce[2] = gp102_ce_new,
+	.ce[3] = gp102_ce_new,
+	.disp = gp102_disp_new,
+	.dma = gf119_dma_new,
+	.fifo = gp100_fifo_new,
+};
+
 static int
 nvkm_device_event_ctor(struct nvkm_object *object, void *data, u32 size,
 		       struct nvkm_notify *notify)
@@ -2724,6 +2753,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		case 0x132: device->chip = &nv132_chipset; break;
 		case 0x134: device->chip = &nv134_chipset; break;
 		case 0x136: device->chip = &nv136_chipset; break;
+		case 0x137: device->chip = &nv137_chipset; break;
 		default:
 			nvdev_error(device, "unknown chipset (%08x)\n", boot0);
 			goto done;

commit ac799acaa4d8db4f7dcd968b15c9596c80a4677f
Author: Ilia Mirkin <imirkin@alum.mit.edu>
Date:   Sat Mar 18 16:23:10 2017 -0400

    drm/nouveau/mmu/nv4a: use nv04 mmu rather than the nv44 one
    
    The NV4A (aka NV44A) is an oddity in the family. It only comes in AGP
    and PCI varieties, rather than a core PCIE chip with a bridge for
    AGP/PCI as necessary. As a result, it appears that the MMU is also
    non-functional. For AGP cards, the vast majority of the NV4A lineup,
    this worked out since we force AGP cards to use the nv04 mmu. However
    for PCI variants, this did not work.
    
    Switching to the NV04 MMU makes it work like a charm. Thanks to mwk for
    the suggestion. This should be a no-op for NV4A AGP boards, as they were
    using it already.
    
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=70388
    Signed-off-by: Ilia Mirkin <imirkin@alum.mit.edu>
    Cc: stable@vger.kernel.org
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 1076949b802a..ffd7d09ed3ac 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -714,7 +714,7 @@ nv4a_chipset = {
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
 	.mc = nv44_mc_new,
-	.mmu = nv44_mmu_new,
+	.mmu = nv04_mmu_new,
 	.pci = nv40_pci_new,
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,

commit 904e703c8065f57665e21cdd170ea2b6b809da79
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Fri Mar 3 08:36:48 2017 +1000

    drm/nouveau/fb/gf108: split implementation from gf100
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index f0a77c5fd16a..1076949b802a 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1379,7 +1379,7 @@ nvc1_chipset = {
 	.bus = gf100_bus_new,
 	.clk = gf100_clk_new,
 	.devinit = gf100_devinit_new,
-	.fb = gf100_fb_new,
+	.fb = gf108_fb_new,
 	.fuse = gf100_fuse_new,
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,

commit 36510adde3d9c073a538e441c38515b7741d1732
Author: Alexandre Courbot <acourbot@nvidia.com>
Date:   Thu Feb 16 15:50:27 2017 +0900

    drm/nouveau/gp10x: enable secboot and GR
    
    All the bricks are in place for secure boot to be enabled. This in turn
    makes GR usable so enable them all.
    
    Signed-off-by: Alexandre Courbot <acourbot@nvidia.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index cf76d6c657ba..f0a77c5fd16a 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2200,6 +2200,9 @@ nv132_chipset = {
 	.ltc = gp100_ltc_new,
 	.mc = gp100_mc_new,
 	.mmu = gf100_mmu_new,
+	.secboot = gp102_secboot_new,
+	.sec2 = gp102_sec2_new,
+	.nvdec = gp102_nvdec_new,
 	.pci = gp100_pci_new,
 	.pmu = gp102_pmu_new,
 	.timer = gk20a_timer_new,
@@ -2211,6 +2214,8 @@ nv132_chipset = {
 	.disp = gp102_disp_new,
 	.dma = gf119_dma_new,
 	.fifo = gp100_fifo_new,
+	.gr = gp102_gr_new,
+	.sw = gf100_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -2229,6 +2234,9 @@ nv134_chipset = {
 	.ltc = gp100_ltc_new,
 	.mc = gp100_mc_new,
 	.mmu = gf100_mmu_new,
+	.secboot = gp102_secboot_new,
+	.sec2 = gp102_sec2_new,
+	.nvdec = gp102_nvdec_new,
 	.pci = gp100_pci_new,
 	.pmu = gp102_pmu_new,
 	.timer = gk20a_timer_new,
@@ -2240,6 +2248,8 @@ nv134_chipset = {
 	.disp = gp102_disp_new,
 	.dma = gf119_dma_new,
 	.fifo = gp100_fifo_new,
+	.gr = gp102_gr_new,
+	.sw = gf100_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -2258,6 +2268,9 @@ nv136_chipset = {
 	.ltc = gp100_ltc_new,
 	.mc = gp100_mc_new,
 	.mmu = gf100_mmu_new,
+	.secboot = gp102_secboot_new,
+	.sec2 = gp102_sec2_new,
+	.nvdec = gp102_nvdec_new,
 	.pci = gp100_pci_new,
 	.pmu = gp102_pmu_new,
 	.timer = gk20a_timer_new,
@@ -2269,6 +2282,8 @@ nv136_chipset = {
 	.disp = gp102_disp_new,
 	.dma = gf119_dma_new,
 	.fifo = gp100_fifo_new,
+	.gr = gp102_gr_new,
+	.sw = gf100_sw_new,
 };
 
 static int

commit b62880f7966781eb0b3b1e50f63d6aac362476d3
Author: Alexandre Courbot <acourbot@nvidia.com>
Date:   Thu Feb 23 18:41:41 2017 +0900

    drm/nouveau/core: add SEC2 engine
    
    SEC2 is the name given by NVIDIA to the SEC engine post-Fermi (reasons
    unknown). Even though it shares the same address range as SEC, its usage
    is quite different and this justifies a new engine. Add this engine and
    make TOP use it all post-TOP devices should use this implementation and
    not the older SEC.
    
    Also quickly add the short gp102 implementation which will be used for
    falcon booting purposes.
    
    Signed-off-by: Alexandre Courbot <acourbot@nvidia.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 883e6e474d1b..cf76d6c657ba 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2365,6 +2365,7 @@ nvkm_device_engine(struct nvkm_device *device, int index)
 	_(NVDEC  , device->nvdec   , &device->nvdec->engine);
 	_(PM     , device->pm      , &device->pm->engine);
 	_(SEC    , device->sec     ,  device->sec);
+	_(SEC2   , device->sec2    , &device->sec2->engine);
 	_(SW     , device->sw      , &device->sw->engine);
 	_(VIC    , device->vic     ,  device->vic);
 	_(VP     , device->vp      ,  device->vp);
@@ -2812,6 +2813,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		_(NVKM_ENGINE_NVDEC   ,    nvdec);
 		_(NVKM_ENGINE_PM      ,       pm);
 		_(NVKM_ENGINE_SEC     ,      sec);
+		_(NVKM_ENGINE_SEC2    ,     sec2);
 		_(NVKM_ENGINE_SW      ,       sw);
 		_(NVKM_ENGINE_VIC     ,      vic);
 		_(NVKM_ENGINE_VP      ,       vp);

commit 16307b5d720af3fec8d2153a68e23066e20c481f
Author: Alexandre Courbot <acourbot@nvidia.com>
Date:   Thu Jan 26 15:16:32 2017 +0900

    drm/nouveau/nvdec: add gp102 support
    
    gp10x' secure boot requires a blob to be run on NVDEC. Expose the falcon
    through a dummy device.
    
    Signed-off-by: Alexandre Courbot <acourbot@nvidia.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 273562dd6bbd..883e6e474d1b 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2362,7 +2362,7 @@ nvkm_device_engine(struct nvkm_device *device, int index)
 	_(NVENC0 , device->nvenc[0],  device->nvenc[0]);
 	_(NVENC1 , device->nvenc[1],  device->nvenc[1]);
 	_(NVENC2 , device->nvenc[2],  device->nvenc[2]);
-	_(NVDEC  , device->nvdec   ,  device->nvdec);
+	_(NVDEC  , device->nvdec   , &device->nvdec->engine);
 	_(PM     , device->pm      , &device->pm->engine);
 	_(SEC    , device->sec     ,  device->sec);
 	_(SW     , device->sw      , &device->sw->engine);

commit 5112abc6a43372b2c1934717ed9bf132a427c46c
Author: Karol Herbst <karolherbst@gmail.com>
Date:   Sat Feb 11 12:58:17 2017 +0100

    drm/nouveau/pci/g92: Fix rearm
    
    704a6c008b7942bb7f30bb43d2a6bcad7f543662 broke pci msi rearm for g92 GPUs.
    
    g92 needs the nv46_pci_msi_rearm, where g94+ gpus used nv40_pci_msi_rearm.
    
    Reported-by: Andrew Randrianasulu <randrianasulu@gmail.com>
    Signed-off-by: Karol Herbst <karolherbst@gmail.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Cc: stable@vger.kernel.org

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index f40273cd94e3..273562dd6bbd 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1025,7 +1025,7 @@ nv94_chipset = {
 	.mc = g84_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = g92_pci_new,
+	.pci = g94_pci_new,
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -1057,7 +1057,7 @@ nv96_chipset = {
 	.mc = g84_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = g92_pci_new,
+	.pci = g94_pci_new,
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -1089,7 +1089,7 @@ nv98_chipset = {
 	.mc = g98_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = g92_pci_new,
+	.pci = g94_pci_new,
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -1121,7 +1121,7 @@ nva0_chipset = {
 	.mc = g84_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = g92_pci_new,
+	.pci = g94_pci_new,
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -1153,7 +1153,7 @@ nva3_chipset = {
 	.mc = gt215_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = g92_pci_new,
+	.pci = g94_pci_new,
 	.pmu = gt215_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
@@ -1187,7 +1187,7 @@ nva5_chipset = {
 	.mc = gt215_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = g92_pci_new,
+	.pci = g94_pci_new,
 	.pmu = gt215_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
@@ -1220,7 +1220,7 @@ nva8_chipset = {
 	.mc = gt215_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = g92_pci_new,
+	.pci = g94_pci_new,
 	.pmu = gt215_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
@@ -1253,7 +1253,7 @@ nvaa_chipset = {
 	.mc = g98_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = g92_pci_new,
+	.pci = g94_pci_new,
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -1285,7 +1285,7 @@ nvac_chipset = {
 	.mc = g98_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = g92_pci_new,
+	.pci = g94_pci_new,
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -1317,7 +1317,7 @@ nvaf_chipset = {
 	.mc = gt215_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = g92_pci_new,
+	.pci = g94_pci_new,
 	.pmu = gt215_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,

commit 443828fd9e6097464aa3fd32199bbba3a3bf7e88
Author: Karol Herbst <karolherbst@gmail.com>
Date:   Sun Nov 20 00:43:15 2016 +0100

    drm/nouveau/pci/g92: Enable changing pcie link speeds
    
    Tested on a G92, seems to work. Confirmed by 8 mmiotraces.
    
    Signed-off-by: Karol Herbst <karolherbst@gmail.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index eb4b01634dbd..f40273cd94e3 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -993,7 +993,7 @@ nv92_chipset = {
 	.mc = g84_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = g84_pci_new,
+	.pci = g92_pci_new,
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,

commit 725af748266727c4aebdfa7e02c2e289435a4d3b
Author: Karol Herbst <karolherbst@gmail.com>
Date:   Sun Nov 20 00:43:14 2016 +0100

    drm/nouveau/pci: Rename g94 to g92
    
    Signed-off-by: Karol Herbst <karolherbst@gmail.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 7079612276c3..eb4b01634dbd 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1025,7 +1025,7 @@ nv94_chipset = {
 	.mc = g84_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = g94_pci_new,
+	.pci = g92_pci_new,
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -1057,7 +1057,7 @@ nv96_chipset = {
 	.mc = g84_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = g94_pci_new,
+	.pci = g92_pci_new,
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -1089,7 +1089,7 @@ nv98_chipset = {
 	.mc = g98_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = g94_pci_new,
+	.pci = g92_pci_new,
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -1121,7 +1121,7 @@ nva0_chipset = {
 	.mc = g84_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = g94_pci_new,
+	.pci = g92_pci_new,
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -1153,7 +1153,7 @@ nva3_chipset = {
 	.mc = gt215_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = g94_pci_new,
+	.pci = g92_pci_new,
 	.pmu = gt215_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
@@ -1187,7 +1187,7 @@ nva5_chipset = {
 	.mc = gt215_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = g94_pci_new,
+	.pci = g92_pci_new,
 	.pmu = gt215_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
@@ -1220,7 +1220,7 @@ nva8_chipset = {
 	.mc = gt215_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = g94_pci_new,
+	.pci = g92_pci_new,
 	.pmu = gt215_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
@@ -1253,7 +1253,7 @@ nvaa_chipset = {
 	.mc = g98_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = g94_pci_new,
+	.pci = g92_pci_new,
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -1285,7 +1285,7 @@ nvac_chipset = {
 	.mc = g98_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = g94_pci_new,
+	.pci = g92_pci_new,
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -1317,7 +1317,7 @@ nvaf_chipset = {
 	.mc = gt215_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = g94_pci_new,
+	.pci = g92_pci_new,
 	.pmu = gt215_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,

commit b1c39d801ad0f87bb4429f92392bea18c62a23cf
Author: Alexandre Courbot <acourbot@nvidia.com>
Date:   Tue Dec 13 17:11:25 2016 +0900

    drm/nouveau/gm20b: add dummy PMU device
    
    Add a dummy PMU device so the PMU falcon is instanciated and can be used
    by secure boot.
    
    We could reuse gk20a's implementation here, but it would fight with
    secboot over PMU falcon's ownership and secboot will reset the PMU,
    preventing it from operating afterwards. Proper handout between secboot
    and pmu is coming along with the actual gm20b PMU implementation, so
    use this as a temporary solution.
    
    Signed-off-by: Alexandre Courbot <acourbot@nvidia.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index cceda959b47c..7079612276c3 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2138,6 +2138,7 @@ nv12b_chipset = {
 	.ltc = gm200_ltc_new,
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
+	.pmu = gm20b_pmu_new,
 	.secboot = gm20b_secboot_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,

commit 1fe487d7d2858265e23f10fa6b4565112f9a17fe
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Fri Dec 9 10:24:14 2016 +1000

    drm/nouveau/core: recognise GP106 chipset
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 2cbcffe78c3e..cceda959b47c 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2241,6 +2241,35 @@ nv134_chipset = {
 	.fifo = gp100_fifo_new,
 };
 
+static const struct nvkm_device_chip
+nv136_chipset = {
+	.name = "GP106",
+	.bar = gf100_bar_new,
+	.bios = nvkm_bios_new,
+	.bus = gf100_bus_new,
+	.devinit = gm200_devinit_new,
+	.fb = gp102_fb_new,
+	.fuse = gm107_fuse_new,
+	.gpio = gk104_gpio_new,
+	.i2c = gm200_i2c_new,
+	.ibus = gm200_ibus_new,
+	.imem = nv50_instmem_new,
+	.ltc = gp100_ltc_new,
+	.mc = gp100_mc_new,
+	.mmu = gf100_mmu_new,
+	.pci = gp100_pci_new,
+	.pmu = gp102_pmu_new,
+	.timer = gk20a_timer_new,
+	.top = gk104_top_new,
+	.ce[0] = gp102_ce_new,
+	.ce[1] = gp102_ce_new,
+	.ce[2] = gp102_ce_new,
+	.ce[3] = gp102_ce_new,
+	.disp = gp102_disp_new,
+	.dma = gf119_dma_new,
+	.fifo = gp100_fifo_new,
+};
+
 static int
 nvkm_device_event_ctor(struct nvkm_object *object, void *data, u32 size,
 		       struct nvkm_notify *notify)
@@ -2677,6 +2706,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		case 0x130: device->chip = &nv130_chipset; break;
 		case 0x132: device->chip = &nv132_chipset; break;
 		case 0x134: device->chip = &nv134_chipset; break;
+		case 0x136: device->chip = &nv136_chipset; break;
 		default:
 			nvdev_error(device, "unknown chipset (%08x)\n", boot0);
 			goto done;

commit ed828666a797bf78c12e83e847516588e1b1cb11
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Nov 16 15:03:07 2016 +1000

    drm/nouveau/disp/gp102: rename from gp104
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 62b13b52e75a..2cbcffe78c3e 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2207,7 +2207,7 @@ nv132_chipset = {
 	.ce[1] = gp102_ce_new,
 	.ce[2] = gp102_ce_new,
 	.ce[3] = gp102_ce_new,
-	.disp = gp104_disp_new,
+	.disp = gp102_disp_new,
 	.dma = gf119_dma_new,
 	.fifo = gp100_fifo_new,
 };
@@ -2236,7 +2236,7 @@ nv134_chipset = {
 	.ce[1] = gp102_ce_new,
 	.ce[2] = gp102_ce_new,
 	.ce[3] = gp102_ce_new,
-	.disp = gp104_disp_new,
+	.disp = gp102_disp_new,
 	.dma = gf119_dma_new,
 	.fifo = gp100_fifo_new,
 };

commit a4fa851c64c7d41a0ba1be2991b8e3631f79f041
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Nov 16 15:01:37 2016 +1000

    drm/nouveau/ce/gp102: rename from gp104
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 7d6a012a6b69..62b13b52e75a 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2203,10 +2203,10 @@ nv132_chipset = {
 	.pmu = gp102_pmu_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
-	.ce[0] = gp104_ce_new,
-	.ce[1] = gp104_ce_new,
-	.ce[2] = gp104_ce_new,
-	.ce[3] = gp104_ce_new,
+	.ce[0] = gp102_ce_new,
+	.ce[1] = gp102_ce_new,
+	.ce[2] = gp102_ce_new,
+	.ce[3] = gp102_ce_new,
 	.disp = gp104_disp_new,
 	.dma = gf119_dma_new,
 	.fifo = gp100_fifo_new,
@@ -2232,10 +2232,10 @@ nv134_chipset = {
 	.pmu = gp102_pmu_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
-	.ce[0] = gp104_ce_new,
-	.ce[1] = gp104_ce_new,
-	.ce[2] = gp104_ce_new,
-	.ce[3] = gp104_ce_new,
+	.ce[0] = gp102_ce_new,
+	.ce[1] = gp102_ce_new,
+	.ce[2] = gp102_ce_new,
+	.ce[3] = gp102_ce_new,
 	.disp = gp104_disp_new,
 	.dma = gf119_dma_new,
 	.fifo = gp100_fifo_new,

commit eeea423c48cd5ff1ec40b7dcb84b287fb39cb86e
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Nov 16 14:59:49 2016 +1000

    drm/nouveau/fb/gp102: rename from gp104
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 920e798098da..7d6a012a6b69 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2190,7 +2190,7 @@ nv132_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.devinit = gm200_devinit_new,
-	.fb = gp104_fb_new,
+	.fb = gp102_fb_new,
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
 	.i2c = gm200_i2c_new,
@@ -2219,7 +2219,7 @@ nv134_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.devinit = gm200_devinit_new,
-	.fb = gp104_fb_new,
+	.fb = gp102_fb_new,
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
 	.i2c = gm200_i2c_new,

commit d91ccec63116cb90a95d48ae85a68e892e15c433
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Nov 9 10:41:43 2016 +1000

    drm/nouveau/pmu/gp102: initial implementation
    
    GP102/GP104 require a harder reset of PMU prior to DEVINIT, or the IFR
    image will hang.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index f751a79f2b25..920e798098da 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2200,6 +2200,7 @@ nv132_chipset = {
 	.mc = gp100_mc_new,
 	.mmu = gf100_mmu_new,
 	.pci = gp100_pci_new,
+	.pmu = gp102_pmu_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
 	.ce[0] = gp104_ce_new,
@@ -2228,6 +2229,7 @@ nv134_chipset = {
 	.mc = gp100_mc_new,
 	.mmu = gf100_mmu_new,
 	.pci = gp100_pci_new,
+	.pmu = gp102_pmu_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
 	.ce[0] = gp104_ce_new,

commit 41c7be6913e94d7363329d0f36058b672cdf1bd3
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Nov 9 10:37:56 2016 +1000

    drm/nouveau/pmu/gp100: initial implementation
    
    Just enough to hookup preinit reset(), which DEVINIT will depend on later.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index e3a936aa0f81..f751a79f2b25 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2167,6 +2167,7 @@ nv130_chipset = {
 	.mmu = gf100_mmu_new,
 	.secboot = gm200_secboot_new,
 	.pci = gp100_pci_new,
+	.pmu = gp100_pmu_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
 	.ce[0] = gp100_ce_new,

commit 17ff521d6920c7c31994b4800329e3eb5d1dcd2a
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Mon Nov 7 17:38:43 2016 +1000

    drm/nouveau/core: initial support for GP102
    
    From visual inspection of traces, what we currently implement appears to
    be identical to GP104.  Seems to work well enough too.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index bd22526edb0b..e3a936aa0f81 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2182,6 +2182,34 @@ nv130_chipset = {
 	.sw = gf100_sw_new,
 };
 
+static const struct nvkm_device_chip
+nv132_chipset = {
+	.name = "GP102",
+	.bar = gf100_bar_new,
+	.bios = nvkm_bios_new,
+	.bus = gf100_bus_new,
+	.devinit = gm200_devinit_new,
+	.fb = gp104_fb_new,
+	.fuse = gm107_fuse_new,
+	.gpio = gk104_gpio_new,
+	.i2c = gm200_i2c_new,
+	.ibus = gm200_ibus_new,
+	.imem = nv50_instmem_new,
+	.ltc = gp100_ltc_new,
+	.mc = gp100_mc_new,
+	.mmu = gf100_mmu_new,
+	.pci = gp100_pci_new,
+	.timer = gk20a_timer_new,
+	.top = gk104_top_new,
+	.ce[0] = gp104_ce_new,
+	.ce[1] = gp104_ce_new,
+	.ce[2] = gp104_ce_new,
+	.ce[3] = gp104_ce_new,
+	.disp = gp104_disp_new,
+	.dma = gf119_dma_new,
+	.fifo = gp100_fifo_new,
+};
+
 static const struct nvkm_device_chip
 nv134_chipset = {
 	.name = "GP104",
@@ -2644,6 +2672,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		case 0x126: device->chip = &nv126_chipset; break;
 		case 0x12b: device->chip = &nv12b_chipset; break;
 		case 0x130: device->chip = &nv130_chipset; break;
+		case 0x132: device->chip = &nv132_chipset; break;
 		case 0x134: device->chip = &nv134_chipset; break;
 		default:
 			nvdev_error(device, "unknown chipset (%08x)\n", boot0);

commit 770b06e8cbdaae268286d627883c01f9ff7682f4
Author: Alexandre Courbot <acourbot@nvidia.com>
Date:   Thu Oct 27 16:55:54 2016 +0900

    drm/nouveau/fb: add gm20b device
    
    gm20b's FB has the same capabilities as gm200, minus the ability to
    allocate RAM. Create a device that reflects this instead of re-using the
    gk20a device which may be incorrect.
    
    Signed-off-by: Alexandre Courbot <acourbot@nvidia.com>
    Reviewed-By: Karol Herbst <karolherbst@gmail.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 22f5b93dcc41..bd22526edb0b 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2131,7 +2131,7 @@ nv12b_chipset = {
 	.bar = gk20a_bar_new,
 	.bus = gf100_bus_new,
 	.clk = gm20b_clk_new,
-	.fb = gk20a_fb_new,
+	.fb = gm20b_fb_new,
 	.fuse = gm107_fuse_new,
 	.ibus = gk20a_ibus_new,
 	.imem = gk20a_instmem_new,

commit 5b3800a6b763874e4a23702fb9628d3bd3315ce9
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Nov 3 16:37:33 2016 +1000

    drm/nouveau/i2c/gk110b,gm10x: use the correct implementation
    
    DPAUX registers moved on Kepler, these chipsets were still using the
    Fermi implementation for some reason.
    
    This fixes detection of hotplug/sink IRQs on DP connectors.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Cc: stable@vger.kernel.org

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 53d171729353..22f5b93dcc41 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1852,7 +1852,7 @@ nvf1_chipset = {
 	.fb = gk104_fb_new,
 	.fuse = gf100_fuse_new,
 	.gpio = gk104_gpio_new,
-	.i2c = gf119_i2c_new,
+	.i2c = gk104_i2c_new,
 	.ibus = gk104_ibus_new,
 	.iccsense = gf100_iccsense_new,
 	.imem = nv50_instmem_new,
@@ -1966,7 +1966,7 @@ nv117_chipset = {
 	.fb = gm107_fb_new,
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
-	.i2c = gf119_i2c_new,
+	.i2c = gk104_i2c_new,
 	.ibus = gk104_ibus_new,
 	.iccsense = gf100_iccsense_new,
 	.imem = nv50_instmem_new,
@@ -2000,7 +2000,7 @@ nv118_chipset = {
 	.fb = gm107_fb_new,
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
-	.i2c = gf119_i2c_new,
+	.i2c = gk104_i2c_new,
 	.ibus = gk104_ibus_new,
 	.iccsense = gf100_iccsense_new,
 	.imem = nv50_instmem_new,

commit a3c950f2ac2c56f2c40bfacd779a72e4f3dc7cd2
Author: Karol Herbst <karolherbst@gmail.com>
Date:   Sun Jul 17 20:02:33 2016 +0200

    drm/nouveau/volt: Add implementation for gf100
    
    Since gf100 we need a speedo value for calculating the voltage. The readout
    will be added in a later patch.
    
    Signed-off-by: Karol Herbst <karolherbst@gmail.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 7218a067a6c5..53d171729353 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1357,7 +1357,7 @@ nvc0_chipset = {
 	.pmu = gf100_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
-	.volt = nv40_volt_new,
+	.volt = gf100_volt_new,
 	.ce[0] = gf100_ce_new,
 	.ce[1] = gf100_ce_new,
 	.disp = gt215_disp_new,
@@ -1394,7 +1394,7 @@ nvc1_chipset = {
 	.pmu = gf100_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
-	.volt = nv40_volt_new,
+	.volt = gf100_volt_new,
 	.ce[0] = gf100_ce_new,
 	.disp = gt215_disp_new,
 	.dma = gf100_dma_new,
@@ -1430,7 +1430,7 @@ nvc3_chipset = {
 	.pmu = gf100_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
-	.volt = nv40_volt_new,
+	.volt = gf100_volt_new,
 	.ce[0] = gf100_ce_new,
 	.disp = gt215_disp_new,
 	.dma = gf100_dma_new,
@@ -1466,7 +1466,7 @@ nvc4_chipset = {
 	.pmu = gf100_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
-	.volt = nv40_volt_new,
+	.volt = gf100_volt_new,
 	.ce[0] = gf100_ce_new,
 	.ce[1] = gf100_ce_new,
 	.disp = gt215_disp_new,
@@ -1503,7 +1503,7 @@ nvc8_chipset = {
 	.pmu = gf100_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
-	.volt = nv40_volt_new,
+	.volt = gf100_volt_new,
 	.ce[0] = gf100_ce_new,
 	.ce[1] = gf100_ce_new,
 	.disp = gt215_disp_new,
@@ -1540,7 +1540,7 @@ nvce_chipset = {
 	.pmu = gf100_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
-	.volt = nv40_volt_new,
+	.volt = gf100_volt_new,
 	.ce[0] = gf100_ce_new,
 	.ce[1] = gf100_ce_new,
 	.disp = gt215_disp_new,
@@ -1577,7 +1577,7 @@ nvcf_chipset = {
 	.pmu = gf100_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
-	.volt = nv40_volt_new,
+	.volt = gf100_volt_new,
 	.ce[0] = gf100_ce_new,
 	.disp = gt215_disp_new,
 	.dma = gf100_dma_new,
@@ -1612,6 +1612,7 @@ nvd7_chipset = {
 	.pci = gf106_pci_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
+	.volt = gf100_volt_new,
 	.ce[0] = gf100_ce_new,
 	.disp = gf119_disp_new,
 	.dma = gf119_dma_new,
@@ -1647,7 +1648,7 @@ nvd9_chipset = {
 	.pmu = gf119_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
-	.volt = nv40_volt_new,
+	.volt = gf100_volt_new,
 	.ce[0] = gf100_ce_new,
 	.disp = gf119_disp_new,
 	.dma = gf119_dma_new,

commit 146cfe2476ce378580e81143182e60d6ecc380ca
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/ce/gp104: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index e3841a4b6946..7218a067a6c5 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2200,6 +2200,10 @@ nv134_chipset = {
 	.pci = gp100_pci_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
+	.ce[0] = gp104_ce_new,
+	.ce[1] = gp104_ce_new,
+	.ce[2] = gp104_ce_new,
+	.ce[3] = gp104_ce_new,
 	.disp = gp104_disp_new,
 	.dma = gf119_dma_new,
 	.fifo = gp100_fifo_new,

commit ba3b712e8d52cf631cae36537e29ce5ae7c50016
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/fifo/gp104: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 70d2a93991a3..e3841a4b6946 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2202,6 +2202,7 @@ nv134_chipset = {
 	.top = gk104_top_new,
 	.disp = gp104_disp_new,
 	.dma = gf119_dma_new,
+	.fifo = gp100_fifo_new,
 };
 
 static int

commit fd47877f77c44f03723dc1d74433a50efdb28ba2
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/disp/gp104: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 75c66457a11c..70d2a93991a3 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2200,6 +2200,7 @@ nv134_chipset = {
 	.pci = gp100_pci_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
+	.disp = gp104_disp_new,
 	.dma = gf119_dma_new,
 };
 

commit 15cec92f4e188679cf9813947938f066bc2eee2d
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/dma/gp104: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 1ceff46b5c6e..75c66457a11c 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2200,6 +2200,7 @@ nv134_chipset = {
 	.pci = gp100_pci_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
+	.dma = gf119_dma_new,
 };
 
 static int

commit a8c15dda41b0b78b167473f1751c5be564f8068b
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/ltc/gp104: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 05030145fae4..1ceff46b5c6e 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2194,6 +2194,7 @@ nv134_chipset = {
 	.i2c = gm200_i2c_new,
 	.ibus = gm200_ibus_new,
 	.imem = nv50_instmem_new,
+	.ltc = gp100_ltc_new,
 	.mc = gp100_mc_new,
 	.mmu = gf100_mmu_new,
 	.pci = gp100_pci_new,

commit 8c80bc6c3ccf308adb243f9c6526c29d0580af98
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/ibus/gp104: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 53731dd298aa..05030145fae4 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2192,6 +2192,7 @@ nv134_chipset = {
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
 	.i2c = gm200_i2c_new,
+	.ibus = gm200_ibus_new,
 	.imem = nv50_instmem_new,
 	.mc = gp100_mc_new,
 	.mmu = gf100_mmu_new,

commit 13a66d2f9d86fc002322767acc4a955f8bc40a71
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/i2c/gp104: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index ddf334fea8bf..53731dd298aa 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2191,6 +2191,7 @@ nv134_chipset = {
 	.fb = gp104_fb_new,
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
+	.i2c = gm200_i2c_new,
 	.imem = nv50_instmem_new,
 	.mc = gp100_mc_new,
 	.mmu = gf100_mmu_new,

commit 14ae020d37bf743277a2fcca6c5e79ef5660463e
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/gpio/gp104: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 8c93feb54b70..ddf334fea8bf 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2190,6 +2190,7 @@ nv134_chipset = {
 	.devinit = gm200_devinit_new,
 	.fb = gp104_fb_new,
 	.fuse = gm107_fuse_new,
+	.gpio = gk104_gpio_new,
 	.imem = nv50_instmem_new,
 	.mc = gp100_mc_new,
 	.mmu = gf100_mmu_new,

commit 7d007dd745c2ce98ce1d4ac8870f64ab1b597950
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/fuse/gp104: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index de8377746e68..8c93feb54b70 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2189,6 +2189,7 @@ nv134_chipset = {
 	.bus = gf100_bus_new,
 	.devinit = gm200_devinit_new,
 	.fb = gp104_fb_new,
+	.fuse = gm107_fuse_new,
 	.imem = nv50_instmem_new,
 	.mc = gp100_mc_new,
 	.mmu = gf100_mmu_new,

commit 42d7a65e69b78bed216c499afa3b3e3e509fecc8
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/bus/gp104: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 134e1a7f1e38..de8377746e68 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2186,6 +2186,7 @@ nv134_chipset = {
 	.name = "GP104",
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
+	.bus = gf100_bus_new,
 	.devinit = gm200_devinit_new,
 	.fb = gp104_fb_new,
 	.imem = nv50_instmem_new,

commit 10d4c1c27f9abcf1954e8b7cb1cd621bbb906ec2
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/bar/gp104: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 7c339dc7ad82..134e1a7f1e38 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2184,6 +2184,7 @@ nv130_chipset = {
 static const struct nvkm_device_chip
 nv134_chipset = {
 	.name = "GP104",
+	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
 	.devinit = gm200_devinit_new,
 	.fb = gp104_fb_new,

commit 6b7c941b8cb51bcad7780e66d71993dfee256fa6
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/mmu/gp104: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 0b8f5d0ff547..7c339dc7ad82 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2189,6 +2189,7 @@ nv134_chipset = {
 	.fb = gp104_fb_new,
 	.imem = nv50_instmem_new,
 	.mc = gp100_mc_new,
+	.mmu = gf100_mmu_new,
 	.pci = gp100_pci_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,

commit 6258cd43cf261a2d066af86d730a48301c8d09a2
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/fb/gp104: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 0ae41e6f58f2..0b8f5d0ff547 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2186,6 +2186,7 @@ nv134_chipset = {
 	.name = "GP104",
 	.bios = nvkm_bios_new,
 	.devinit = gm200_devinit_new,
+	.fb = gp104_fb_new,
 	.imem = nv50_instmem_new,
 	.mc = gp100_mc_new,
 	.pci = gp100_pci_new,

commit 4fdbdfa8ae8fd2c978de51affdc851584e872f94
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/imem/gp104: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 71a477cac8a0..0ae41e6f58f2 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2186,6 +2186,7 @@ nv134_chipset = {
 	.name = "GP104",
 	.bios = nvkm_bios_new,
 	.devinit = gm200_devinit_new,
+	.imem = nv50_instmem_new,
 	.mc = gp100_mc_new,
 	.pci = gp100_pci_new,
 	.timer = gk20a_timer_new,

commit 047506cab8d87ffb7cef798cf1f03008546304a2
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/devinit/gp104: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 0775b4a0b2c8..71a477cac8a0 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2185,6 +2185,7 @@ static const struct nvkm_device_chip
 nv134_chipset = {
 	.name = "GP104",
 	.bios = nvkm_bios_new,
+	.devinit = gm200_devinit_new,
 	.mc = gp100_mc_new,
 	.pci = gp100_pci_new,
 	.timer = gk20a_timer_new,

commit 38849205accf598548200f34f710f6d2120dd108
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/bios/gp104: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index e9abe57271f0..0775b4a0b2c8 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2184,6 +2184,7 @@ nv130_chipset = {
 static const struct nvkm_device_chip
 nv134_chipset = {
 	.name = "GP104",
+	.bios = nvkm_bios_new,
 	.mc = gp100_mc_new,
 	.pci = gp100_pci_new,
 	.timer = gk20a_timer_new,

commit 5f62ee6dad305f3a5b1fbf7ad280bde30e835275
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/tmr/gp104: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index d9173cb42eee..e9abe57271f0 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2186,6 +2186,7 @@ nv134_chipset = {
 	.name = "GP104",
 	.mc = gp100_mc_new,
 	.pci = gp100_pci_new,
+	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
 };
 

commit b3446c5ab5489ef357ccab2118bd5db56a296045
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/pci/gp104: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 1e59b7f6e897..d9173cb42eee 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2185,6 +2185,7 @@ static const struct nvkm_device_chip
 nv134_chipset = {
 	.name = "GP104",
 	.mc = gp100_mc_new,
+	.pci = gp100_pci_new,
 	.top = gk104_top_new,
 };
 

commit 9179b8ec7799718c2bd91d9bfd29462a3b032aa6
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/mc/gp104: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 711b20af45ab..1e59b7f6e897 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2184,6 +2184,7 @@ nv130_chipset = {
 static const struct nvkm_device_chip
 nv134_chipset = {
 	.name = "GP104",
+	.mc = gp100_mc_new,
 	.top = gk104_top_new,
 };
 

commit 445b9c2130715317c4ba05ea7d7d7a0da5c55610
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/top/gp104: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index d1a2ff01505c..711b20af45ab 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2184,6 +2184,7 @@ nv130_chipset = {
 static const struct nvkm_device_chip
 nv134_chipset = {
 	.name = "GP104",
+	.top = gk104_top_new,
 };
 
 static int

commit cfb083f692b884c7cc5376ffe04ce7cd9d8331bc
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/core: recognise GP104 chipset
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 3c4f4bcea81b..d1a2ff01505c 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2181,6 +2181,11 @@ nv130_chipset = {
 	.sw = gf100_sw_new,
 };
 
+static const struct nvkm_device_chip
+nv134_chipset = {
+	.name = "GP104",
+};
+
 static int
 nvkm_device_event_ctor(struct nvkm_object *object, void *data, u32 size,
 		       struct nvkm_notify *notify)
@@ -2615,6 +2620,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		case 0x126: device->chip = &nv126_chipset; break;
 		case 0x12b: device->chip = &nv12b_chipset; break;
 		case 0x130: device->chip = &nv130_chipset; break;
+		case 0x134: device->chip = &nv134_chipset; break;
 		default:
 			nvdev_error(device, "unknown chipset (%08x)\n", boot0);
 			goto done;

commit ac24b4df4374b8ddc8af8e945f944e23db0d6867
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/sw/gp100: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index f4e9ed1ee8e6..3c4f4bcea81b 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2178,6 +2178,7 @@ nv130_chipset = {
 	.disp = gp100_disp_new,
 	.fifo = gp100_fifo_new,
 	.gr = gp100_gr_new,
+	.sw = gf100_sw_new,
 };
 
 static int

commit 52fa0866ca78d170742aa9e7587ffd2a6a623973
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/gr/gp100: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 94f4b2fa3d9a..f4e9ed1ee8e6 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2177,6 +2177,7 @@ nv130_chipset = {
 	.dma = gf119_dma_new,
 	.disp = gp100_disp_new,
 	.fifo = gp100_fifo_new,
+	.gr = gp100_gr_new,
 };
 
 static int

commit 8e7e1586c58a5e3893aeae445ef843bb26fb7653
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/ce/gp100: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index a782ab4b30b5..94f4b2fa3d9a 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2168,6 +2168,12 @@ nv130_chipset = {
 	.pci = gp100_pci_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
+	.ce[0] = gp100_ce_new,
+	.ce[1] = gp100_ce_new,
+	.ce[2] = gp100_ce_new,
+	.ce[3] = gp100_ce_new,
+	.ce[4] = gp100_ce_new,
+	.ce[5] = gp100_ce_new,
 	.dma = gf119_dma_new,
 	.disp = gp100_disp_new,
 	.fifo = gp100_fifo_new,

commit e8ff9794923561f51ab73b5f2356aaacad75d432
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/fifo/gp100: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 2b3f13dd0f1e..a782ab4b30b5 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2170,6 +2170,7 @@ nv130_chipset = {
 	.top = gk104_top_new,
 	.dma = gf119_dma_new,
 	.disp = gp100_disp_new,
+	.fifo = gp100_fifo_new,
 };
 
 static int

commit f9d5cbb3882ec24c527888aaa65d218e842f016b
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/disp/gp100: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 9093449f9bcd..2b3f13dd0f1e 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2169,6 +2169,7 @@ nv130_chipset = {
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
 	.dma = gf119_dma_new,
+	.disp = gp100_disp_new,
 };
 
 static int

commit cd0f407c588ea9afd3dea445095e589e1f5e8461
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/dma/gp100: initial implementation
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 53c5b715bde1..9093449f9bcd 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2168,6 +2168,7 @@ nv130_chipset = {
 	.pci = gp100_pci_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
+	.dma = gf119_dma_new,
 };
 
 static int

commit a4a4cf1bff760e0e5a758410b1ac6e5385e1a199
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/secboot/gm200: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index bd231ccc52ce..53c5b715bde1 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2164,6 +2164,7 @@ nv130_chipset = {
 	.ltc = gp100_ltc_new,
 	.mc = gp100_mc_new,
 	.mmu = gf100_mmu_new,
+	.secboot = gm200_secboot_new,
 	.pci = gp100_pci_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,

commit a96def399bd7df265bdebb5c675230a178db2192
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/ltc/gp100: initial support
    
    Due to the GPU preventing us from touching NV_PLTCG_LTCS_LTSS_CBC_BASE,
    we cannot provide CBC/ZBC support without signed PMU firmware to handle
    the task for us...
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 1030c42ba02f..bd231ccc52ce 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2161,6 +2161,7 @@ nv130_chipset = {
 	.i2c = gm200_i2c_new,
 	.ibus = gm200_ibus_new,
 	.imem = nv50_instmem_new,
+	.ltc = gp100_ltc_new,
 	.mc = gp100_mc_new,
 	.mmu = gf100_mmu_new,
 	.pci = gp100_pci_new,

commit 2a295e95fa8a7c23f29feb7236e31455589fc0e5
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/ibus/gp100: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index ad4194cc3be4..1030c42ba02f 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2159,6 +2159,7 @@ nv130_chipset = {
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
 	.i2c = gm200_i2c_new,
+	.ibus = gm200_ibus_new,
 	.imem = nv50_instmem_new,
 	.mc = gp100_mc_new,
 	.mmu = gf100_mmu_new,

commit 51554014bea3dd8d40555886ee5c40f47d4fb187
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/i2c/gm204: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index a8f5a35cfca4..ad4194cc3be4 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2158,6 +2158,7 @@ nv130_chipset = {
 	.fb = gp100_fb_new,
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
+	.i2c = gm200_i2c_new,
 	.imem = nv50_instmem_new,
 	.mc = gp100_mc_new,
 	.mmu = gf100_mmu_new,

commit a4a58832c228c4368a1b513a45b5075acefcdccf
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/gpio/gp100: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 6b7c8d093d2c..a8f5a35cfca4 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2157,6 +2157,7 @@ nv130_chipset = {
 	.devinit = gm200_devinit_new,
 	.fb = gp100_fb_new,
 	.fuse = gm107_fuse_new,
+	.gpio = gk104_gpio_new,
 	.imem = nv50_instmem_new,
 	.mc = gp100_mc_new,
 	.mmu = gf100_mmu_new,

commit 24b8ca86b772cc78c69ab1508b2ec59d6e3fbe73
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/fuse/gp100: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 3b52a8a41085..6b7c8d093d2c 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2156,6 +2156,7 @@ nv130_chipset = {
 	.bus = gf100_bus_new,
 	.devinit = gm200_devinit_new,
 	.fb = gp100_fb_new,
+	.fuse = gm107_fuse_new,
 	.imem = nv50_instmem_new,
 	.mc = gp100_mc_new,
 	.mmu = gf100_mmu_new,

commit 0e98bd34576bc2d4bd71af8016f94b8aff076644
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/bus/gp100: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 2c9a4913022c..3b52a8a41085 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2153,6 +2153,7 @@ nv130_chipset = {
 	.name = "GP100",
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
+	.bus = gf100_bus_new,
 	.devinit = gm200_devinit_new,
 	.fb = gp100_fb_new,
 	.imem = nv50_instmem_new,

commit 77d813d1493aee029c563545f13855760aa83cb9
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/bar/gp100: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 9660dfc8edc0..2c9a4913022c 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2151,6 +2151,7 @@ nv12b_chipset = {
 static const struct nvkm_device_chip
 nv130_chipset = {
 	.name = "GP100",
+	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
 	.devinit = gm200_devinit_new,
 	.fb = gp100_fb_new,

commit 4cb53a5ed1d0e662e9aab73fbf2097ead5cad563
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/mmu/gp100: initial support
    
    GP100 still supports the previous generations' page table layout, which
    we will temporarily make use of here.
    
    Proper support for the new MMU layout requires some rework to the common
    MMU code, which is in progress.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index b09818507946..9660dfc8edc0 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2156,6 +2156,7 @@ nv130_chipset = {
 	.fb = gp100_fb_new,
 	.imem = nv50_instmem_new,
 	.mc = gp100_mc_new,
+	.mmu = gf100_mmu_new,
 	.pci = gp100_pci_new,
 	.timer = gk20a_timer_new,
 	.top = gk104_top_new,

commit 7ff51f8200f40911902ede518298e90528b57260
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/fb/gp100: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index b1465c13e48b..b09818507946 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2153,6 +2153,7 @@ nv130_chipset = {
 	.name = "GP100",
 	.bios = nvkm_bios_new,
 	.devinit = gm200_devinit_new,
+	.fb = gp100_fb_new,
 	.imem = nv50_instmem_new,
 	.mc = gp100_mc_new,
 	.pci = gp100_pci_new,

commit 0cbe26f0a5ab22ad3ccf11458689ab8da1de0ab8
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/imem/gp100: initial implementation
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 3406e64c3227..b1465c13e48b 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2153,6 +2153,7 @@ nv130_chipset = {
 	.name = "GP100",
 	.bios = nvkm_bios_new,
 	.devinit = gm200_devinit_new,
+	.imem = nv50_instmem_new,
 	.mc = gp100_mc_new,
 	.pci = gp100_pci_new,
 	.timer = gk20a_timer_new,

commit c7b511ba70ce92f96c2e9e0ab8d98db44c84d3e2
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/devinit/gp100: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 987438f6ecbd..3406e64c3227 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2152,6 +2152,7 @@ static const struct nvkm_device_chip
 nv130_chipset = {
 	.name = "GP100",
 	.bios = nvkm_bios_new,
+	.devinit = gm200_devinit_new,
 	.mc = gp100_mc_new,
 	.pci = gp100_pci_new,
 	.timer = gk20a_timer_new,

commit 7481d0553aa24e557a4a8f58e4b462e43bf71eeb
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/bios/gp100: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 35a0cd18c876..987438f6ecbd 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2151,6 +2151,7 @@ nv12b_chipset = {
 static const struct nvkm_device_chip
 nv130_chipset = {
 	.name = "GP100",
+	.bios = nvkm_bios_new,
 	.mc = gp100_mc_new,
 	.pci = gp100_pci_new,
 	.timer = gk20a_timer_new,

commit 4eeb039b3b51c53fe053f49bd2baccecac808f7d
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/tmr/gp100: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 99294862dd69..35a0cd18c876 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2153,6 +2153,7 @@ nv130_chipset = {
 	.name = "GP100",
 	.mc = gp100_mc_new,
 	.pci = gp100_pci_new,
+	.timer = gk20a_timer_new,
 	.top = gk104_top_new,
 };
 

commit 45aa4d0774a2537e9e5c35bfc876c57c93d3003c
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/pci/gp100: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index cfb98466eb78..99294862dd69 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2152,6 +2152,7 @@ static const struct nvkm_device_chip
 nv130_chipset = {
 	.name = "GP100",
 	.mc = gp100_mc_new,
+	.pci = gp100_pci_new,
 	.top = gk104_top_new,
 };
 

commit be61c54cbeecff2982d6b074727f49a5c9f03d3d
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/mc/gp100: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index f4fed7e50e17..cfb98466eb78 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2151,6 +2151,7 @@ nv12b_chipset = {
 static const struct nvkm_device_chip
 nv130_chipset = {
 	.name = "GP100",
+	.mc = gp100_mc_new,
 	.top = gk104_top_new,
 };
 

commit 51012a39ecdb6bfc09ece812f626e9c922b71630
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/top/gp100: initial support
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 817228a7e9b2..f4fed7e50e17 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2151,6 +2151,7 @@ nv12b_chipset = {
 static const struct nvkm_device_chip
 nv130_chipset = {
 	.name = "GP100",
+	.top = gk104_top_new,
 };
 
 static int

commit 7f53abdb95d14704d0282ee7b5de65476c29efb0
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/core: recognise GP100 chipset
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index dcc623dc7b95..817228a7e9b2 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2148,6 +2148,11 @@ nv12b_chipset = {
 	.sw = gf100_sw_new,
 };
 
+static const struct nvkm_device_chip
+nv130_chipset = {
+	.name = "GP100",
+};
+
 static int
 nvkm_device_event_ctor(struct nvkm_object *object, void *data, u32 size,
 		       struct nvkm_notify *notify)
@@ -2496,6 +2501,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 			case 0x100: device->card_type = NV_E0; break;
 			case 0x110:
 			case 0x120: device->card_type = GM100; break;
+			case 0x130: device->card_type = GP100; break;
 			default:
 				break;
 			}
@@ -2580,6 +2586,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		case 0x124: device->chip = &nv124_chipset; break;
 		case 0x126: device->chip = &nv126_chipset; break;
 		case 0x12b: device->chip = &nv12b_chipset; break;
+		case 0x130: device->chip = &nv130_chipset; break;
 		default:
 			nvdev_error(device, "unknown chipset (%08x)\n", boot0);
 			goto done;

commit cb7b5ea9beecee2cfe5d0b52dc981fbade83e5de
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/core: increase maximum nvenc instances to 3
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index e1bc7d1d9c5a..dcc623dc7b95 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2238,6 +2238,7 @@ nvkm_device_engine(struct nvkm_device *device, int index)
 	_(MSVLD  , device->msvld   ,  device->msvld);
 	_(NVENC0 , device->nvenc[0],  device->nvenc[0]);
 	_(NVENC1 , device->nvenc[1],  device->nvenc[1]);
+	_(NVENC2 , device->nvenc[2],  device->nvenc[2]);
 	_(NVDEC  , device->nvdec   ,  device->nvdec);
 	_(PM     , device->pm      , &device->pm->engine);
 	_(SEC    , device->sec     ,  device->sec);
@@ -2679,6 +2680,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		_(NVKM_ENGINE_MSVLD   ,    msvld);
 		_(NVKM_ENGINE_NVENC0  , nvenc[0]);
 		_(NVKM_ENGINE_NVENC1  , nvenc[1]);
+		_(NVKM_ENGINE_NVENC2  , nvenc[2]);
 		_(NVKM_ENGINE_NVDEC   ,    nvdec);
 		_(NVKM_ENGINE_PM      ,       pm);
 		_(NVKM_ENGINE_SEC     ,      sec);

commit 34bf50cd20656f7c00a6d0192118ac5510e31708
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Jul 9 10:41:01 2016 +1000

    drm/nouveau/core: increase maximum ce instances to 6
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 4572debcb0c9..e1bc7d1d9c5a 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2221,6 +2221,9 @@ nvkm_device_engine(struct nvkm_device *device, int index)
 	_(CE0    , device->ce[0]   ,  device->ce[0]);
 	_(CE1    , device->ce[1]   ,  device->ce[1]);
 	_(CE2    , device->ce[2]   ,  device->ce[2]);
+	_(CE3    , device->ce[3]   ,  device->ce[3]);
+	_(CE4    , device->ce[4]   ,  device->ce[4]);
+	_(CE5    , device->ce[5]   ,  device->ce[5]);
 	_(CIPHER , device->cipher  ,  device->cipher);
 	_(DISP   , device->disp    , &device->disp->engine);
 	_(DMAOBJ , device->dma     , &device->dma->engine);
@@ -2659,6 +2662,9 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		_(NVKM_ENGINE_CE0     ,    ce[0]);
 		_(NVKM_ENGINE_CE1     ,    ce[1]);
 		_(NVKM_ENGINE_CE2     ,    ce[2]);
+		_(NVKM_ENGINE_CE3     ,    ce[3]);
+		_(NVKM_ENGINE_CE4     ,    ce[4]);
+		_(NVKM_ENGINE_CE5     ,    ce[5]);
 		_(NVKM_ENGINE_CIPHER  ,   cipher);
 		_(NVKM_ENGINE_DISP    ,     disp);
 		_(NVKM_ENGINE_DMAOBJ  ,      dma);

commit f9e2029443afc550365864abf760419371cc3bc1
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Apr 21 10:35:38 2016 +1000

    drm/nouveau/core: recognise GM108 chipsets
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index a364efe60a18..4572debcb0c9 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1988,6 +1988,40 @@ nv117_chipset = {
 	.sw = gf100_sw_new,
 };
 
+static const struct nvkm_device_chip
+nv118_chipset = {
+	.name = "GM108",
+	.bar = gf100_bar_new,
+	.bios = nvkm_bios_new,
+	.bus = gf100_bus_new,
+	.clk = gk104_clk_new,
+	.devinit = gm107_devinit_new,
+	.fb = gm107_fb_new,
+	.fuse = gm107_fuse_new,
+	.gpio = gk104_gpio_new,
+	.i2c = gf119_i2c_new,
+	.ibus = gk104_ibus_new,
+	.iccsense = gf100_iccsense_new,
+	.imem = nv50_instmem_new,
+	.ltc = gm107_ltc_new,
+	.mc = gk20a_mc_new,
+	.mmu = gf100_mmu_new,
+	.mxm = nv50_mxm_new,
+	.pci = gk104_pci_new,
+	.pmu = gm107_pmu_new,
+	.therm = gm107_therm_new,
+	.timer = gk20a_timer_new,
+	.top = gk104_top_new,
+	.volt = gk104_volt_new,
+	.ce[0] = gm107_ce_new,
+	.ce[2] = gm107_ce_new,
+	.disp = gm107_disp_new,
+	.dma = gf119_dma_new,
+	.fifo = gm107_fifo_new,
+	.gr = gm107_gr_new,
+	.sw = gf100_sw_new,
+};
+
 static const struct nvkm_device_chip
 nv120_chipset = {
 	.name = "GM200",
@@ -2537,6 +2571,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		case 0x106: device->chip = &nv106_chipset; break;
 		case 0x108: device->chip = &nv108_chipset; break;
 		case 0x117: device->chip = &nv117_chipset; break;
+		case 0x118: device->chip = &nv118_chipset; break;
 		case 0x120: device->chip = &nv120_chipset; break;
 		case 0x124: device->chip = &nv124_chipset; break;
 		case 0x126: device->chip = &nv126_chipset; break;

commit e976278ad231dbc44c00729df72cf9fe9a164412
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Apr 14 11:14:33 2016 +1000

    drm/nouveau/fb/gm200: setup mmu debug buffer registers at init()
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index be7633f36d6b..a364efe60a18 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1995,7 +1995,7 @@ nv120_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.devinit = gm200_devinit_new,
-	.fb = gm107_fb_new,
+	.fb = gm200_fb_new,
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
 	.i2c = gm200_i2c_new,
@@ -2029,7 +2029,7 @@ nv124_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.devinit = gm200_devinit_new,
-	.fb = gm107_fb_new,
+	.fb = gm200_fb_new,
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
 	.i2c = gm200_i2c_new,
@@ -2063,7 +2063,7 @@ nv126_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.devinit = gm200_devinit_new,
-	.fb = gm107_fb_new,
+	.fb = gm200_fb_new,
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
 	.i2c = gm200_i2c_new,

commit 667e99ab23c21b2f38f64dded0c0061ec712c40e
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Fri Apr 8 17:24:40 2016 +1000

    drm/nouveau/mc/nv11: define reset masks + intr cleanup
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 5c96bd9808dd..be7633f36d6b 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -146,7 +146,7 @@ nv11_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
-	.mc = nv04_mc_new,
+	.mc = nv11_mc_new,
 	.mmu = nv04_mmu_new,
 	.pci = nv04_pci_new,
 	.timer = nv04_timer_new,

commit 79360b7d5f6be90b934c20345ab3bac1d98e3c08
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Fri Apr 8 17:24:40 2016 +1000

    drm/nouveau/mc/nv17: define reset masks + intr cleanup
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 3fd32076838b..5c96bd9808dd 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -190,7 +190,7 @@ nv17_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
-	.mc = nv04_mc_new,
+	.mc = nv17_mc_new,
 	.mmu = nv04_mmu_new,
 	.pci = nv04_pci_new,
 	.timer = nv04_timer_new,
@@ -212,7 +212,7 @@ nv18_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
-	.mc = nv04_mc_new,
+	.mc = nv17_mc_new,
 	.mmu = nv04_mmu_new,
 	.pci = nv04_pci_new,
 	.timer = nv04_timer_new,
@@ -256,7 +256,7 @@ nv1f_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
-	.mc = nv04_mc_new,
+	.mc = nv17_mc_new,
 	.mmu = nv04_mmu_new,
 	.pci = nv04_pci_new,
 	.timer = nv04_timer_new,
@@ -278,7 +278,7 @@ nv20_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
-	.mc = nv04_mc_new,
+	.mc = nv17_mc_new,
 	.mmu = nv04_mmu_new,
 	.pci = nv04_pci_new,
 	.timer = nv04_timer_new,
@@ -300,7 +300,7 @@ nv25_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
-	.mc = nv04_mc_new,
+	.mc = nv17_mc_new,
 	.mmu = nv04_mmu_new,
 	.pci = nv04_pci_new,
 	.timer = nv04_timer_new,
@@ -322,7 +322,7 @@ nv28_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
-	.mc = nv04_mc_new,
+	.mc = nv17_mc_new,
 	.mmu = nv04_mmu_new,
 	.pci = nv04_pci_new,
 	.timer = nv04_timer_new,
@@ -344,7 +344,7 @@ nv2a_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
-	.mc = nv04_mc_new,
+	.mc = nv17_mc_new,
 	.mmu = nv04_mmu_new,
 	.pci = nv04_pci_new,
 	.timer = nv04_timer_new,
@@ -366,7 +366,7 @@ nv30_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
-	.mc = nv04_mc_new,
+	.mc = nv17_mc_new,
 	.mmu = nv04_mmu_new,
 	.pci = nv04_pci_new,
 	.timer = nv04_timer_new,
@@ -388,7 +388,7 @@ nv31_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
-	.mc = nv04_mc_new,
+	.mc = nv17_mc_new,
 	.mmu = nv04_mmu_new,
 	.pci = nv04_pci_new,
 	.timer = nv04_timer_new,
@@ -411,7 +411,7 @@ nv34_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
-	.mc = nv04_mc_new,
+	.mc = nv17_mc_new,
 	.mmu = nv04_mmu_new,
 	.pci = nv04_pci_new,
 	.timer = nv04_timer_new,
@@ -434,7 +434,7 @@ nv35_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
-	.mc = nv04_mc_new,
+	.mc = nv17_mc_new,
 	.mmu = nv04_mmu_new,
 	.pci = nv04_pci_new,
 	.timer = nv04_timer_new,
@@ -456,7 +456,7 @@ nv36_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
-	.mc = nv04_mc_new,
+	.mc = nv17_mc_new,
 	.mmu = nv04_mmu_new,
 	.pci = nv04_pci_new,
 	.timer = nv04_timer_new,
@@ -479,7 +479,7 @@ nv40_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
-	.mc = nv04_mc_new,
+	.mc = nv17_mc_new,
 	.mmu = nv04_mmu_new,
 	.pci = nv40_pci_new,
 	.therm = nv40_therm_new,
@@ -505,7 +505,7 @@ nv41_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
-	.mc = nv04_mc_new,
+	.mc = nv17_mc_new,
 	.mmu = nv41_mmu_new,
 	.pci = nv40_pci_new,
 	.therm = nv40_therm_new,
@@ -531,7 +531,7 @@ nv42_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
-	.mc = nv04_mc_new,
+	.mc = nv17_mc_new,
 	.mmu = nv41_mmu_new,
 	.pci = nv40_pci_new,
 	.therm = nv40_therm_new,
@@ -557,7 +557,7 @@ nv43_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
-	.mc = nv04_mc_new,
+	.mc = nv17_mc_new,
 	.mmu = nv41_mmu_new,
 	.pci = nv40_pci_new,
 	.therm = nv40_therm_new,
@@ -609,7 +609,7 @@ nv45_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
-	.mc = nv04_mc_new,
+	.mc = nv17_mc_new,
 	.mmu = nv04_mmu_new,
 	.pci = nv40_pci_new,
 	.therm = nv40_therm_new,
@@ -661,7 +661,7 @@ nv47_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
-	.mc = nv04_mc_new,
+	.mc = nv17_mc_new,
 	.mmu = nv41_mmu_new,
 	.pci = nv40_pci_new,
 	.therm = nv40_therm_new,
@@ -687,7 +687,7 @@ nv49_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
-	.mc = nv04_mc_new,
+	.mc = nv17_mc_new,
 	.mmu = nv41_mmu_new,
 	.pci = nv40_pci_new,
 	.therm = nv40_therm_new,
@@ -739,7 +739,7 @@ nv4b_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
-	.mc = nv04_mc_new,
+	.mc = nv17_mc_new,
 	.mmu = nv41_mmu_new,
 	.pci = nv40_pci_new,
 	.therm = nv40_therm_new,

commit 7354902001eef2299826ced3c4e2a7235b6b1f30
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Fri Apr 8 17:24:40 2016 +1000

    drm/nouveau/mc/g84: define reset masks + intr cleanup
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 0696dcb4dffd..3fd32076838b 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -926,7 +926,7 @@ nv84_chipset = {
 	.gpio = nv50_gpio_new,
 	.i2c = nv50_i2c_new,
 	.imem = nv50_instmem_new,
-	.mc = nv50_mc_new,
+	.mc = g84_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = g84_pci_new,
@@ -958,7 +958,7 @@ nv86_chipset = {
 	.gpio = nv50_gpio_new,
 	.i2c = nv50_i2c_new,
 	.imem = nv50_instmem_new,
-	.mc = nv50_mc_new,
+	.mc = g84_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = g84_pci_new,
@@ -990,7 +990,7 @@ nv92_chipset = {
 	.gpio = nv50_gpio_new,
 	.i2c = nv50_i2c_new,
 	.imem = nv50_instmem_new,
-	.mc = nv50_mc_new,
+	.mc = g84_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = g84_pci_new,
@@ -1022,7 +1022,7 @@ nv94_chipset = {
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
 	.imem = nv50_instmem_new,
-	.mc = nv50_mc_new,
+	.mc = g84_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = g94_pci_new,
@@ -1054,7 +1054,7 @@ nv96_chipset = {
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
 	.imem = nv50_instmem_new,
-	.mc = nv50_mc_new,
+	.mc = g84_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = g94_pci_new,
@@ -1118,7 +1118,7 @@ nva0_chipset = {
 	.gpio = g94_gpio_new,
 	.i2c = nv50_i2c_new,
 	.imem = nv50_instmem_new,
-	.mc = g98_mc_new,
+	.mc = g84_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = g94_pci_new,

commit 88c0de2cdb25b8b9e1c286a9f4a3a8de898151ce
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Fri Apr 8 17:24:40 2016 +1000

    drm/nouveau/mc/gt215: define reset masks + intr cleanup
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 2c735182cced..0696dcb4dffd 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1150,7 +1150,7 @@ nva3_chipset = {
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
 	.imem = nv50_instmem_new,
-	.mc = g98_mc_new,
+	.mc = gt215_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = g94_pci_new,
@@ -1184,7 +1184,7 @@ nva5_chipset = {
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
 	.imem = nv50_instmem_new,
-	.mc = g98_mc_new,
+	.mc = gt215_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = g94_pci_new,
@@ -1217,7 +1217,7 @@ nva8_chipset = {
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
 	.imem = nv50_instmem_new,
-	.mc = g98_mc_new,
+	.mc = gt215_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = g94_pci_new,
@@ -1314,7 +1314,7 @@ nvaf_chipset = {
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
 	.imem = nv50_instmem_new,
-	.mc = g98_mc_new,
+	.mc = gt215_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = g94_pci_new,

commit 33537d6fdc2e7ed87d569a2a9ab0a571385d4318
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Fri Apr 8 17:24:40 2016 +1000

    drm/nouveau/mc/gk104: define reset masks + intr cleanup
    
    Engine fields have been removed, as they're specified by PTOP.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 65d4ab9a8cb8..2c735182cced 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1676,7 +1676,7 @@ nve4_chipset = {
 	.iccsense = gf100_iccsense_new,
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
-	.mc = gf100_mc_new,
+	.mc = gk104_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = gk104_pci_new,
@@ -1715,7 +1715,7 @@ nve6_chipset = {
 	.iccsense = gf100_iccsense_new,
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
-	.mc = gf100_mc_new,
+	.mc = gk104_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = gk104_pci_new,
@@ -1754,7 +1754,7 @@ nve7_chipset = {
 	.iccsense = gf100_iccsense_new,
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
-	.mc = gf100_mc_new,
+	.mc = gk104_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = gk104_pci_new,
@@ -1818,7 +1818,7 @@ nvf0_chipset = {
 	.iccsense = gf100_iccsense_new,
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
-	.mc = gf100_mc_new,
+	.mc = gk104_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = gk104_pci_new,
@@ -1856,7 +1856,7 @@ nvf1_chipset = {
 	.iccsense = gf100_iccsense_new,
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
-	.mc = gf100_mc_new,
+	.mc = gk104_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = gk104_pci_new,

commit fb3e9c61caef12e537d6d8cd79b6c8d3de238d79
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Fri Apr 8 17:24:40 2016 +1000

    drm/nouveau/top/gk104: initial implementation
    
    Ported from the code currently in engine/fifo/gk104.c.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index e3cb8e526b90..65d4ab9a8cb8 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1683,6 +1683,7 @@ nve4_chipset = {
 	.pmu = gk104_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
+	.top = gk104_top_new,
 	.volt = gk104_volt_new,
 	.ce[0] = gk104_ce_new,
 	.ce[1] = gk104_ce_new,
@@ -1721,6 +1722,7 @@ nve6_chipset = {
 	.pmu = gk104_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
+	.top = gk104_top_new,
 	.volt = gk104_volt_new,
 	.ce[0] = gk104_ce_new,
 	.ce[1] = gk104_ce_new,
@@ -1759,6 +1761,7 @@ nve7_chipset = {
 	.pmu = gk104_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
+	.top = gk104_top_new,
 	.volt = gk104_volt_new,
 	.ce[0] = gk104_ce_new,
 	.ce[1] = gk104_ce_new,
@@ -1789,6 +1792,7 @@ nvea_chipset = {
 	.mmu = gf100_mmu_new,
 	.pmu = gk20a_pmu_new,
 	.timer = gk20a_timer_new,
+	.top = gk104_top_new,
 	.volt = gk20a_volt_new,
 	.ce[2] = gk104_ce_new,
 	.dma = gf119_dma_new,
@@ -1821,6 +1825,7 @@ nvf0_chipset = {
 	.pmu = gk110_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
+	.top = gk104_top_new,
 	.volt = gk104_volt_new,
 	.ce[0] = gk104_ce_new,
 	.ce[1] = gk104_ce_new,
@@ -1858,6 +1863,7 @@ nvf1_chipset = {
 	.pmu = gk110_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
+	.top = gk104_top_new,
 	.volt = gk104_volt_new,
 	.ce[0] = gk104_ce_new,
 	.ce[1] = gk104_ce_new,
@@ -1895,6 +1901,7 @@ nv106_chipset = {
 	.pmu = gk208_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
+	.top = gk104_top_new,
 	.volt = gk104_volt_new,
 	.ce[0] = gk104_ce_new,
 	.ce[1] = gk104_ce_new,
@@ -1932,6 +1939,7 @@ nv108_chipset = {
 	.pmu = gk208_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
+	.top = gk104_top_new,
 	.volt = gk104_volt_new,
 	.ce[0] = gk104_ce_new,
 	.ce[1] = gk104_ce_new,
@@ -1969,6 +1977,7 @@ nv117_chipset = {
 	.pmu = gm107_pmu_new,
 	.therm = gm107_therm_new,
 	.timer = gk20a_timer_new,
+	.top = gk104_top_new,
 	.volt = gk104_volt_new,
 	.ce[0] = gm107_ce_new,
 	.ce[2] = gm107_ce_new,
@@ -2001,6 +2010,7 @@ nv120_chipset = {
 	.pmu = gm107_pmu_new,
 	.secboot = gm200_secboot_new,
 	.timer = gk20a_timer_new,
+	.top = gk104_top_new,
 	.volt = gk104_volt_new,
 	.ce[0] = gm200_ce_new,
 	.ce[1] = gm200_ce_new,
@@ -2034,6 +2044,7 @@ nv124_chipset = {
 	.pmu = gm107_pmu_new,
 	.secboot = gm200_secboot_new,
 	.timer = gk20a_timer_new,
+	.top = gk104_top_new,
 	.volt = gk104_volt_new,
 	.ce[0] = gm200_ce_new,
 	.ce[1] = gm200_ce_new,
@@ -2067,6 +2078,7 @@ nv126_chipset = {
 	.pmu = gm107_pmu_new,
 	.secboot = gm200_secboot_new,
 	.timer = gk20a_timer_new,
+	.top = gk104_top_new,
 	.volt = gk104_volt_new,
 	.ce[0] = gm200_ce_new,
 	.ce[1] = gm200_ce_new,
@@ -2093,6 +2105,7 @@ nv12b_chipset = {
 	.mmu = gf100_mmu_new,
 	.secboot = gm20b_secboot_new,
 	.timer = gk20a_timer_new,
+	.top = gk104_top_new,
 	.ce[2] = gm200_ce_new,
 	.volt = gm20b_volt_new,
 	.dma = gf119_dma_new,

commit eaebfcc34e52ca2c1a0d852674b72eecf31a2737
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Fri Apr 8 17:24:40 2016 +1000

    drm/nouveau/core: add top plumbing
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 9f32c8739254..e3cb8e526b90 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2150,6 +2150,7 @@ nvkm_device_subdev(struct nvkm_device *device, int index)
 	_(SECBOOT , device->secboot , &device->secboot->subdev);
 	_(THERM   , device->therm   , &device->therm->subdev);
 	_(TIMER   , device->timer   , &device->timer->subdev);
+	_(TOP     , device->top     , &device->top->subdev);
 	_(VOLT    , device->volt    , &device->volt->subdev);
 #undef _
 	default:
@@ -2604,6 +2605,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		_(NVKM_SUBDEV_SECBOOT ,  secboot);
 		_(NVKM_SUBDEV_THERM   ,    therm);
 		_(NVKM_SUBDEV_TIMER   ,    timer);
+		_(NVKM_SUBDEV_TOP     ,      top);
 		_(NVKM_SUBDEV_VOLT    ,     volt);
 		_(NVKM_ENGINE_BSP     ,      bsp);
 		_(NVKM_ENGINE_CE0     ,    ce[0]);

commit 52829d4fabaf71748f16126d421dbefbfcf1319a
Author: Alexandre Courbot <acourbot@nvidia.com>
Date:   Fri Feb 12 14:38:18 2016 +0900

    drm/nouveau/clk/gm20b: add basic driver
    
    Add a basic clock driver that reuses the GK20A logic.
    
    Signed-off-by: Alexandre Courbot <acourbot@nvidia.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index bfe2f4f17f87..9f32c8739254 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2083,6 +2083,7 @@ nv12b_chipset = {
 	.name = "GM20B",
 	.bar = gk20a_bar_new,
 	.bus = gf100_bus_new,
+	.clk = gm20b_clk_new,
 	.fb = gk20a_fb_new,
 	.fuse = gm107_fuse_new,
 	.ibus = gk20a_ibus_new,

commit 71757abf2ee2af8bb5448a66ff68e50f308e3c28
Author: Alexandre Courbot <acourbot@nvidia.com>
Date:   Tue Oct 27 12:35:14 2015 +0900

    drm/nouveau/volt: add GM20B driver
    
    Add basic GM20B volt driver that reuses the GK20A logic.
    
    Signed-off-by: Alexandre Courbot <acourbot@nvidia.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 0a7b0779949f..bfe2f4f17f87 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2093,6 +2093,7 @@ nv12b_chipset = {
 	.secboot = gm20b_secboot_new,
 	.timer = gk20a_timer_new,
 	.ce[2] = gm200_ce_new,
+	.volt = gm20b_volt_new,
 	.dma = gf119_dma_new,
 	.fifo = gm20b_fifo_new,
 	.gr = gm20b_gr_new,

commit 253a03f03f518a7bf6c4ef73fec94aa5957da736
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Fri Mar 11 13:09:28 2016 +1000

    drm/nouveau/ce/gm107: expose MaxwellDmaCopyA
    
    The HW accepts KeplerDmaCopyA and MaxwellDmaCopyA classes.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 93436c6c489a..0a7b0779949f 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1970,8 +1970,8 @@ nv117_chipset = {
 	.therm = gm107_therm_new,
 	.timer = gk20a_timer_new,
 	.volt = gk104_volt_new,
-	.ce[0] = gk104_ce_new,
-	.ce[2] = gk104_ce_new,
+	.ce[0] = gm107_ce_new,
+	.ce[2] = gm107_ce_new,
 	.disp = gm107_disp_new,
 	.dma = gf119_dma_new,
 	.fifo = gm107_fifo_new,

commit 7c4f87c9e5014541025e05e05a10f7a5e6bcb9a2
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Fri Mar 11 13:09:28 2016 +1000

    drm/nouveau/fifo/gm107: KeplerChannelGpfifoB, and 2048 channels
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 5cae5eb8efb2..93436c6c489a 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1974,7 +1974,7 @@ nv117_chipset = {
 	.ce[2] = gk104_ce_new,
 	.disp = gm107_disp_new,
 	.dma = gf119_dma_new,
-	.fifo = gk208_fifo_new,
+	.fifo = gm107_fifo_new,
 	.gr = gm107_gr_new,
 	.sw = gf100_sw_new,
 };

commit 63f8c9b7f6b7d85e0fa942d0319f72df6aa188c3
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Fri Mar 11 13:09:28 2016 +1000

    drm/nouveau/fifo/gk110: expose KeplerChannelGpfifoB
    
    This class supports a WFI method (0x0078) that's not present on the
    KeplerChannelGpfifoA class.
    
    The binary driver exposes both classes on these GPUs for some reason,
    though there doesn't appear to be any difference in the setup that's
    done for each (ie. even if you allocate GpfifoA, the WFI method will
    still work).
    
    We shall just expose GpfifoB, as I don't see a good reason to report
    the presence of both.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index a44cdc4828e8..5cae5eb8efb2 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1827,7 +1827,7 @@ nvf0_chipset = {
 	.ce[2] = gk104_ce_new,
 	.disp = gk110_disp_new,
 	.dma = gf119_dma_new,
-	.fifo = gk104_fifo_new,
+	.fifo = gk110_fifo_new,
 	.gr = gk110_gr_new,
 	.mspdec = gk104_mspdec_new,
 	.msppp = gf100_msppp_new,
@@ -1864,7 +1864,7 @@ nvf1_chipset = {
 	.ce[2] = gk104_ce_new,
 	.disp = gk110_disp_new,
 	.dma = gf119_dma_new,
-	.fifo = gk104_fifo_new,
+	.fifo = gk110_fifo_new,
 	.gr = gk110b_gr_new,
 	.mspdec = gk104_mspdec_new,
 	.msppp = gf100_msppp_new,

commit 3545b4253287a09be51355694473c8aed1b64b84
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Fri Mar 11 13:09:28 2016 +1000

    drm/nouveau/core: add nvdec plumbing
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index e72a7bc9faf0..a44cdc4828e8 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2185,6 +2185,7 @@ nvkm_device_engine(struct nvkm_device *device, int index)
 	_(MSVLD  , device->msvld   ,  device->msvld);
 	_(NVENC0 , device->nvenc[0],  device->nvenc[0]);
 	_(NVENC1 , device->nvenc[1],  device->nvenc[1]);
+	_(NVDEC  , device->nvdec   ,  device->nvdec);
 	_(PM     , device->pm      , &device->pm->engine);
 	_(SEC    , device->sec     ,  device->sec);
 	_(SW     , device->sw      , &device->sw->engine);
@@ -2620,6 +2621,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		_(NVKM_ENGINE_MSVLD   ,    msvld);
 		_(NVKM_ENGINE_NVENC0  , nvenc[0]);
 		_(NVKM_ENGINE_NVENC1  , nvenc[1]);
+		_(NVKM_ENGINE_NVDEC   ,    nvdec);
 		_(NVKM_ENGINE_PM      ,       pm);
 		_(NVKM_ENGINE_SEC     ,      sec);
 		_(NVKM_ENGINE_SW      ,       sw);

commit 294af04b161bd63be182b3f2c07c4130fe4d6740
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Fri Mar 11 13:09:28 2016 +1000

    drm/nouveau/core: add nvenc plumbing
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index dcb4cf4a9639..e72a7bc9faf0 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2167,27 +2167,29 @@ nvkm_device_engine(struct nvkm_device *device, int index)
 
 	switch (index) {
 #define _(n,p,m) case NVKM_ENGINE_##n: if (p) return (m); break
-	_(BSP    , device->bsp    ,  device->bsp);
-	_(CE0    , device->ce[0]  ,  device->ce[0]);
-	_(CE1    , device->ce[1]  ,  device->ce[1]);
-	_(CE2    , device->ce[2]  ,  device->ce[2]);
-	_(CIPHER , device->cipher ,  device->cipher);
-	_(DISP   , device->disp   , &device->disp->engine);
-	_(DMAOBJ , device->dma    , &device->dma->engine);
-	_(FIFO   , device->fifo   , &device->fifo->engine);
-	_(GR     , device->gr     , &device->gr->engine);
-	_(IFB    , device->ifb    ,  device->ifb);
-	_(ME     , device->me     ,  device->me);
-	_(MPEG   , device->mpeg   ,  device->mpeg);
-	_(MSENC  , device->msenc  ,  device->msenc);
-	_(MSPDEC , device->mspdec ,  device->mspdec);
-	_(MSPPP  , device->msppp  ,  device->msppp);
-	_(MSVLD  , device->msvld  ,  device->msvld);
-	_(PM     , device->pm     , &device->pm->engine);
-	_(SEC    , device->sec    ,  device->sec);
-	_(SW     , device->sw     , &device->sw->engine);
-	_(VIC    , device->vic    ,  device->vic);
-	_(VP     , device->vp     ,  device->vp);
+	_(BSP    , device->bsp     ,  device->bsp);
+	_(CE0    , device->ce[0]   ,  device->ce[0]);
+	_(CE1    , device->ce[1]   ,  device->ce[1]);
+	_(CE2    , device->ce[2]   ,  device->ce[2]);
+	_(CIPHER , device->cipher  ,  device->cipher);
+	_(DISP   , device->disp    , &device->disp->engine);
+	_(DMAOBJ , device->dma     , &device->dma->engine);
+	_(FIFO   , device->fifo    , &device->fifo->engine);
+	_(GR     , device->gr      , &device->gr->engine);
+	_(IFB    , device->ifb     ,  device->ifb);
+	_(ME     , device->me      ,  device->me);
+	_(MPEG   , device->mpeg    ,  device->mpeg);
+	_(MSENC  , device->msenc   ,  device->msenc);
+	_(MSPDEC , device->mspdec  ,  device->mspdec);
+	_(MSPPP  , device->msppp   ,  device->msppp);
+	_(MSVLD  , device->msvld   ,  device->msvld);
+	_(NVENC0 , device->nvenc[0],  device->nvenc[0]);
+	_(NVENC1 , device->nvenc[1],  device->nvenc[1]);
+	_(PM     , device->pm      , &device->pm->engine);
+	_(SEC    , device->sec     ,  device->sec);
+	_(SW     , device->sw      , &device->sw->engine);
+	_(VIC    , device->vic     ,  device->vic);
+	_(VP     , device->vp      ,  device->vp);
 #undef _
 	default:
 		WARN_ON(1);
@@ -2616,6 +2618,8 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		_(NVKM_ENGINE_MSPDEC  ,   mspdec);
 		_(NVKM_ENGINE_MSPPP   ,    msppp);
 		_(NVKM_ENGINE_MSVLD   ,    msvld);
+		_(NVKM_ENGINE_NVENC0  , nvenc[0]);
+		_(NVKM_ENGINE_NVENC1  , nvenc[1]);
 		_(NVKM_ENGINE_PM      ,       pm);
 		_(NVKM_ENGINE_SEC     ,      sec);
 		_(NVKM_ENGINE_SW      ,       sw);

commit 7d31cb7ca47e7268478033d62ce3ad37bf509655
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Feb 25 10:40:51 2016 +1000

    drm/nouveau/gr/gm206: remove implementation, it's now identical to gm200
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 86b8a242e621..dcb4cf4a9639 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2074,7 +2074,7 @@ nv126_chipset = {
 	.disp = gm200_disp_new,
 	.dma = gf119_dma_new,
 	.fifo = gm200_fifo_new,
-	.gr = gm206_gr_new,
+	.gr = gm200_gr_new,
 	.sw = gf100_sw_new,
 };
 

commit b71c0892631af3dd2aea708529d282a65c683be5
Author: Karol Herbst <nouveau@karolherbst.de>
Date:   Thu Feb 18 16:53:44 2016 +0100

    drm/nouveau/iccsense: implement for ina209, ina219 and ina3221
    
    based on Martins initial work
    
    v3: fix ina2x9 calculations
    v4: don't kmalloc(0), fix the lsb/pga stuff
    v5: add a field to tell if the power reading may be invalid
        add nkvm_iccsense_read_all function
        check for the device on the i2c bus
    
    Signed-off-by: Karol Herbst <nouveau@karolherbst.de>
    Reviewed-by: Martin Peres <martin.peres@free.fr>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 5afa1072ee40..86b8a242e621 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1347,6 +1347,7 @@ nvc0_chipset = {
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
 	.ibus = gf100_ibus_new,
+	.iccsense = gf100_iccsense_new,
 	.imem = nv50_instmem_new,
 	.ltc = gf100_ltc_new,
 	.mc = gf100_mc_new,
@@ -1383,6 +1384,7 @@ nvc1_chipset = {
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
 	.ibus = gf100_ibus_new,
+	.iccsense = gf100_iccsense_new,
 	.imem = nv50_instmem_new,
 	.ltc = gf100_ltc_new,
 	.mc = gf100_mc_new,
@@ -1418,6 +1420,7 @@ nvc3_chipset = {
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
 	.ibus = gf100_ibus_new,
+	.iccsense = gf100_iccsense_new,
 	.imem = nv50_instmem_new,
 	.ltc = gf100_ltc_new,
 	.mc = gf100_mc_new,
@@ -1453,6 +1456,7 @@ nvc4_chipset = {
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
 	.ibus = gf100_ibus_new,
+	.iccsense = gf100_iccsense_new,
 	.imem = nv50_instmem_new,
 	.ltc = gf100_ltc_new,
 	.mc = gf100_mc_new,
@@ -1489,6 +1493,7 @@ nvc8_chipset = {
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
 	.ibus = gf100_ibus_new,
+	.iccsense = gf100_iccsense_new,
 	.imem = nv50_instmem_new,
 	.ltc = gf100_ltc_new,
 	.mc = gf100_mc_new,
@@ -1525,6 +1530,7 @@ nvce_chipset = {
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
 	.ibus = gf100_ibus_new,
+	.iccsense = gf100_iccsense_new,
 	.imem = nv50_instmem_new,
 	.ltc = gf100_ltc_new,
 	.mc = gf100_mc_new,
@@ -1561,6 +1567,7 @@ nvcf_chipset = {
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
 	.ibus = gf100_ibus_new,
+	.iccsense = gf100_iccsense_new,
 	.imem = nv50_instmem_new,
 	.ltc = gf100_ltc_new,
 	.mc = gf100_mc_new,
@@ -1596,6 +1603,7 @@ nvd7_chipset = {
 	.gpio = gf119_gpio_new,
 	.i2c = gf117_i2c_new,
 	.ibus = gf117_ibus_new,
+	.iccsense = gf100_iccsense_new,
 	.imem = nv50_instmem_new,
 	.ltc = gf100_ltc_new,
 	.mc = gf100_mc_new,
@@ -1629,6 +1637,7 @@ nvd9_chipset = {
 	.gpio = gf119_gpio_new,
 	.i2c = gf119_i2c_new,
 	.ibus = gf117_ibus_new,
+	.iccsense = gf100_iccsense_new,
 	.imem = nv50_instmem_new,
 	.ltc = gf100_ltc_new,
 	.mc = gf100_mc_new,
@@ -1664,6 +1673,7 @@ nve4_chipset = {
 	.gpio = gk104_gpio_new,
 	.i2c = gk104_i2c_new,
 	.ibus = gk104_ibus_new,
+	.iccsense = gf100_iccsense_new,
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
 	.mc = gf100_mc_new,
@@ -1701,6 +1711,7 @@ nve6_chipset = {
 	.gpio = gk104_gpio_new,
 	.i2c = gk104_i2c_new,
 	.ibus = gk104_ibus_new,
+	.iccsense = gf100_iccsense_new,
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
 	.mc = gf100_mc_new,
@@ -1738,6 +1749,7 @@ nve7_chipset = {
 	.gpio = gk104_gpio_new,
 	.i2c = gk104_i2c_new,
 	.ibus = gk104_ibus_new,
+	.iccsense = gf100_iccsense_new,
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
 	.mc = gf100_mc_new,
@@ -1799,6 +1811,7 @@ nvf0_chipset = {
 	.gpio = gk104_gpio_new,
 	.i2c = gk104_i2c_new,
 	.ibus = gk104_ibus_new,
+	.iccsense = gf100_iccsense_new,
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
 	.mc = gf100_mc_new,
@@ -1835,6 +1848,7 @@ nvf1_chipset = {
 	.gpio = gk104_gpio_new,
 	.i2c = gf119_i2c_new,
 	.ibus = gk104_ibus_new,
+	.iccsense = gf100_iccsense_new,
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
 	.mc = gf100_mc_new,
@@ -1871,6 +1885,7 @@ nv106_chipset = {
 	.gpio = gk104_gpio_new,
 	.i2c = gk104_i2c_new,
 	.ibus = gk104_ibus_new,
+	.iccsense = gf100_iccsense_new,
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
 	.mc = gk20a_mc_new,
@@ -1907,6 +1922,7 @@ nv108_chipset = {
 	.gpio = gk104_gpio_new,
 	.i2c = gk104_i2c_new,
 	.ibus = gk104_ibus_new,
+	.iccsense = gf100_iccsense_new,
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
 	.mc = gk20a_mc_new,
@@ -1943,6 +1959,7 @@ nv117_chipset = {
 	.gpio = gk104_gpio_new,
 	.i2c = gf119_i2c_new,
 	.ibus = gk104_ibus_new,
+	.iccsense = gf100_iccsense_new,
 	.imem = nv50_instmem_new,
 	.ltc = gm107_ltc_new,
 	.mc = gk20a_mc_new,
@@ -1974,6 +1991,7 @@ nv120_chipset = {
 	.gpio = gk104_gpio_new,
 	.i2c = gm200_i2c_new,
 	.ibus = gm200_ibus_new,
+	.iccsense = gf100_iccsense_new,
 	.imem = nv50_instmem_new,
 	.ltc = gm200_ltc_new,
 	.mc = gk20a_mc_new,
@@ -2006,6 +2024,7 @@ nv124_chipset = {
 	.gpio = gk104_gpio_new,
 	.i2c = gm200_i2c_new,
 	.ibus = gm200_ibus_new,
+	.iccsense = gf100_iccsense_new,
 	.imem = nv50_instmem_new,
 	.ltc = gm200_ltc_new,
 	.mc = gk20a_mc_new,
@@ -2038,6 +2057,7 @@ nv126_chipset = {
 	.gpio = gk104_gpio_new,
 	.i2c = gm200_i2c_new,
 	.ibus = gm200_ibus_new,
+	.iccsense = gf100_iccsense_new,
 	.imem = nv50_instmem_new,
 	.ltc = gm200_ltc_new,
 	.mc = gk20a_mc_new,

commit dc06e366fe656a8a260478dee4dd0b1bc38431a4
Author: Martin Peres <martin.peres@free.fr>
Date:   Thu Feb 18 14:10:49 2016 +0100

    drm/nouveau/subdev/iccsense: add new subdev for power sensors
    
    Signed-off-by: Karol Herbst <nouveau@karolherbst.de>
    Reviewed-by: Martin Peres <martin.peres@free.fr>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index b882a321cab5..5afa1072ee40 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2107,27 +2107,28 @@ nvkm_device_subdev(struct nvkm_device *device, int index)
 
 	switch (index) {
 #define _(n,p,m) case NVKM_SUBDEV_##n: if (p) return (m); break
-	_(BAR    , device->bar    , &device->bar->subdev);
-	_(VBIOS  , device->bios   , &device->bios->subdev);
-	_(BUS    , device->bus    , &device->bus->subdev);
-	_(CLK    , device->clk    , &device->clk->subdev);
-	_(DEVINIT, device->devinit, &device->devinit->subdev);
-	_(FB     , device->fb     , &device->fb->subdev);
-	_(FUSE   , device->fuse   , &device->fuse->subdev);
-	_(GPIO   , device->gpio   , &device->gpio->subdev);
-	_(I2C    , device->i2c    , &device->i2c->subdev);
-	_(IBUS   , device->ibus   ,  device->ibus);
-	_(INSTMEM, device->imem   , &device->imem->subdev);
-	_(LTC    , device->ltc    , &device->ltc->subdev);
-	_(MC     , device->mc     , &device->mc->subdev);
-	_(MMU    , device->mmu    , &device->mmu->subdev);
-	_(MXM    , device->mxm    ,  device->mxm);
-	_(PCI    , device->pci    , &device->pci->subdev);
-	_(PMU    , device->pmu    , &device->pmu->subdev);
-	_(SECBOOT, device->secboot, &device->secboot->subdev);
-	_(THERM  , device->therm  , &device->therm->subdev);
-	_(TIMER  , device->timer  , &device->timer->subdev);
-	_(VOLT   , device->volt   , &device->volt->subdev);
+	_(BAR     , device->bar     , &device->bar->subdev);
+	_(VBIOS   , device->bios    , &device->bios->subdev);
+	_(BUS     , device->bus     , &device->bus->subdev);
+	_(CLK     , device->clk     , &device->clk->subdev);
+	_(DEVINIT , device->devinit , &device->devinit->subdev);
+	_(FB      , device->fb      , &device->fb->subdev);
+	_(FUSE    , device->fuse    , &device->fuse->subdev);
+	_(GPIO    , device->gpio    , &device->gpio->subdev);
+	_(I2C     , device->i2c     , &device->i2c->subdev);
+	_(IBUS    , device->ibus    ,  device->ibus);
+	_(ICCSENSE, device->iccsense, &device->iccsense->subdev);
+	_(INSTMEM , device->imem    , &device->imem->subdev);
+	_(LTC     , device->ltc     , &device->ltc->subdev);
+	_(MC      , device->mc      , &device->mc->subdev);
+	_(MMU     , device->mmu     , &device->mmu->subdev);
+	_(MXM     , device->mxm     ,  device->mxm);
+	_(PCI     , device->pci     , &device->pci->subdev);
+	_(PMU     , device->pmu     , &device->pmu->subdev);
+	_(SECBOOT , device->secboot , &device->secboot->subdev);
+	_(THERM   , device->therm   , &device->therm->subdev);
+	_(TIMER   , device->timer   , &device->timer->subdev);
+	_(VOLT    , device->volt    , &device->volt->subdev);
 #undef _
 	default:
 		engine = nvkm_device_engine(device, index);
@@ -2557,48 +2558,49 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 	}                                                                      \
 	break
 		switch (i) {
-		_(NVKM_SUBDEV_BAR    ,     bar);
-		_(NVKM_SUBDEV_VBIOS  ,    bios);
-		_(NVKM_SUBDEV_BUS    ,     bus);
-		_(NVKM_SUBDEV_CLK    ,     clk);
-		_(NVKM_SUBDEV_DEVINIT, devinit);
-		_(NVKM_SUBDEV_FB     ,      fb);
-		_(NVKM_SUBDEV_FUSE   ,    fuse);
-		_(NVKM_SUBDEV_GPIO   ,    gpio);
-		_(NVKM_SUBDEV_I2C    ,     i2c);
-		_(NVKM_SUBDEV_IBUS   ,    ibus);
-		_(NVKM_SUBDEV_INSTMEM,    imem);
-		_(NVKM_SUBDEV_LTC    ,     ltc);
-		_(NVKM_SUBDEV_MC     ,      mc);
-		_(NVKM_SUBDEV_MMU    ,     mmu);
-		_(NVKM_SUBDEV_MXM    ,     mxm);
-		_(NVKM_SUBDEV_PCI    ,     pci);
-		_(NVKM_SUBDEV_PMU    ,     pmu);
-		_(NVKM_SUBDEV_SECBOOT, secboot);
-		_(NVKM_SUBDEV_THERM  ,   therm);
-		_(NVKM_SUBDEV_TIMER  ,   timer);
-		_(NVKM_SUBDEV_VOLT   ,    volt);
-		_(NVKM_ENGINE_BSP    ,     bsp);
-		_(NVKM_ENGINE_CE0    ,   ce[0]);
-		_(NVKM_ENGINE_CE1    ,   ce[1]);
-		_(NVKM_ENGINE_CE2    ,   ce[2]);
-		_(NVKM_ENGINE_CIPHER ,  cipher);
-		_(NVKM_ENGINE_DISP   ,    disp);
-		_(NVKM_ENGINE_DMAOBJ ,     dma);
-		_(NVKM_ENGINE_FIFO   ,    fifo);
-		_(NVKM_ENGINE_GR     ,      gr);
-		_(NVKM_ENGINE_IFB    ,     ifb);
-		_(NVKM_ENGINE_ME     ,      me);
-		_(NVKM_ENGINE_MPEG   ,    mpeg);
-		_(NVKM_ENGINE_MSENC  ,   msenc);
-		_(NVKM_ENGINE_MSPDEC ,  mspdec);
-		_(NVKM_ENGINE_MSPPP  ,   msppp);
-		_(NVKM_ENGINE_MSVLD  ,   msvld);
-		_(NVKM_ENGINE_PM     ,      pm);
-		_(NVKM_ENGINE_SEC    ,     sec);
-		_(NVKM_ENGINE_SW     ,      sw);
-		_(NVKM_ENGINE_VIC    ,     vic);
-		_(NVKM_ENGINE_VP     ,      vp);
+		_(NVKM_SUBDEV_BAR     ,      bar);
+		_(NVKM_SUBDEV_VBIOS   ,     bios);
+		_(NVKM_SUBDEV_BUS     ,      bus);
+		_(NVKM_SUBDEV_CLK     ,      clk);
+		_(NVKM_SUBDEV_DEVINIT ,  devinit);
+		_(NVKM_SUBDEV_FB      ,       fb);
+		_(NVKM_SUBDEV_FUSE    ,     fuse);
+		_(NVKM_SUBDEV_GPIO    ,     gpio);
+		_(NVKM_SUBDEV_I2C     ,      i2c);
+		_(NVKM_SUBDEV_IBUS    ,     ibus);
+		_(NVKM_SUBDEV_ICCSENSE, iccsense);
+		_(NVKM_SUBDEV_INSTMEM ,     imem);
+		_(NVKM_SUBDEV_LTC     ,      ltc);
+		_(NVKM_SUBDEV_MC      ,       mc);
+		_(NVKM_SUBDEV_MMU     ,      mmu);
+		_(NVKM_SUBDEV_MXM     ,      mxm);
+		_(NVKM_SUBDEV_PCI     ,      pci);
+		_(NVKM_SUBDEV_PMU     ,      pmu);
+		_(NVKM_SUBDEV_SECBOOT ,  secboot);
+		_(NVKM_SUBDEV_THERM   ,    therm);
+		_(NVKM_SUBDEV_TIMER   ,    timer);
+		_(NVKM_SUBDEV_VOLT    ,     volt);
+		_(NVKM_ENGINE_BSP     ,      bsp);
+		_(NVKM_ENGINE_CE0     ,    ce[0]);
+		_(NVKM_ENGINE_CE1     ,    ce[1]);
+		_(NVKM_ENGINE_CE2     ,    ce[2]);
+		_(NVKM_ENGINE_CIPHER  ,   cipher);
+		_(NVKM_ENGINE_DISP    ,     disp);
+		_(NVKM_ENGINE_DMAOBJ  ,      dma);
+		_(NVKM_ENGINE_FIFO    ,     fifo);
+		_(NVKM_ENGINE_GR      ,       gr);
+		_(NVKM_ENGINE_IFB     ,      ifb);
+		_(NVKM_ENGINE_ME      ,       me);
+		_(NVKM_ENGINE_MPEG    ,     mpeg);
+		_(NVKM_ENGINE_MSENC   ,    msenc);
+		_(NVKM_ENGINE_MSPDEC  ,   mspdec);
+		_(NVKM_ENGINE_MSPPP   ,    msppp);
+		_(NVKM_ENGINE_MSVLD   ,    msvld);
+		_(NVKM_ENGINE_PM      ,       pm);
+		_(NVKM_ENGINE_SEC     ,      sec);
+		_(NVKM_ENGINE_SW      ,       sw);
+		_(NVKM_ENGINE_VIC     ,      vic);
+		_(NVKM_ENGINE_VP      ,       vp);
 		default:
 			WARN_ON(1);
 			continue;

commit 923f1bd27bf1ed49b3d1a4cccf2c8238618b49cf
Author: Alexandre Courbot <acourbot@nvidia.com>
Date:   Wed Feb 24 14:42:24 2016 +0900

    drm/nouveau/secboot/gm20b: add secure boot support
    
    Add secure boot support for the GM20B chip found in Tegra X1. Secure
    boot on Tegra works slightly differently from desktop, notably in the
    way the WPR region is set up.
    
    In addition, the firmware bootloaders use a slightly different header
    format.
    
    Signed-off-by: Alexandre Courbot <acourbot@nvidia.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index f928f9371d92..b882a321cab5 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2070,6 +2070,7 @@ nv12b_chipset = {
 	.ltc = gm200_ltc_new,
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
+	.secboot = gm20b_secboot_new,
 	.timer = gk20a_timer_new,
 	.ce[2] = gm200_ce_new,
 	.dma = gf119_dma_new,

commit 9cc45521498b208b44575c96aa0b19e8eaac26ca
Author: Alexandre Courbot <acourbot@nvidia.com>
Date:   Wed Feb 24 14:42:23 2016 +0900

    drm/nouveau/secboot/gm200: add secure-boot support
    
    Add secure-boot for the dGPU set of GM20X chips, using the PMU as the
    high-secure falcon.
    
    This work is based on Deepak Goyal's initial port of Secure Boot to
    Nouveau.
    
    v2. use proper memory target function
    
    Signed-off-by: Alexandre Courbot <acourbot@nvidia.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 52a56115e1e6..f928f9371d92 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1981,6 +1981,7 @@ nv120_chipset = {
 	.mxm = nv50_mxm_new,
 	.pci = gk104_pci_new,
 	.pmu = gm107_pmu_new,
+	.secboot = gm200_secboot_new,
 	.timer = gk20a_timer_new,
 	.volt = gk104_volt_new,
 	.ce[0] = gm200_ce_new,
@@ -2012,6 +2013,7 @@ nv124_chipset = {
 	.mxm = nv50_mxm_new,
 	.pci = gk104_pci_new,
 	.pmu = gm107_pmu_new,
+	.secboot = gm200_secboot_new,
 	.timer = gk20a_timer_new,
 	.volt = gk104_volt_new,
 	.ce[0] = gm200_ce_new,
@@ -2043,6 +2045,7 @@ nv126_chipset = {
 	.mxm = nv50_mxm_new,
 	.pci = gk104_pci_new,
 	.pmu = gm107_pmu_new,
+	.secboot = gm200_secboot_new,
 	.timer = gk20a_timer_new,
 	.volt = gk104_volt_new,
 	.ce[0] = gm200_ce_new,

commit 7d12388a1f4243c2f13e0f84b251b1a4a92f79a3
Author: Alexandre Courbot <acourbot@nvidia.com>
Date:   Wed Feb 24 14:42:20 2016 +0900

    drm/nouveau/core: add support for secure boot
    
    On GM200 and later GPUs, firmware for some essential falcons (notably
    GR ones) must be authenticated by a NVIDIA-produced signature and
    loaded by a high-secure falcon in order to be able to access privileged
    registers, in a process known as Secure Boot.
    
    Secure Boot requires building a binary blob containing the firmwares
    and signatures of the falcons to be loaded. This blob is then given to
    a high-secure falcon running a signed loader firmware that copies the
    blob into a write-protected region, checks that the signatures are
    valid, and finally loads the verified firmware into the managed falcons
    and switches them to privileged mode.
    
    This patch adds infrastructure code to support this process on chips
    that require it.
    
    v2:
    - The IRQ mask of the PMU falcon was left - replace it with the proper
      irq_mask variable.
    - The falcon reset procedure expecting a falcon in an initialized state,
      which was accidentally provided by the PMU subdev. Make sure that
      secboot can manage the falcon on its own.
    
    Signed-off-by: Alexandre Courbot <acourbot@nvidia.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index da371b805562..52a56115e1e6 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2120,6 +2120,7 @@ nvkm_device_subdev(struct nvkm_device *device, int index)
 	_(MXM    , device->mxm    ,  device->mxm);
 	_(PCI    , device->pci    , &device->pci->subdev);
 	_(PMU    , device->pmu    , &device->pmu->subdev);
+	_(SECBOOT, device->secboot, &device->secboot->subdev);
 	_(THERM  , device->therm  , &device->therm->subdev);
 	_(TIMER  , device->timer  , &device->timer->subdev);
 	_(VOLT   , device->volt   , &device->volt->subdev);
@@ -2569,6 +2570,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		_(NVKM_SUBDEV_MXM    ,     mxm);
 		_(NVKM_SUBDEV_PCI    ,     pci);
 		_(NVKM_SUBDEV_PMU    ,     pmu);
+		_(NVKM_SUBDEV_SECBOOT, secboot);
 		_(NVKM_SUBDEV_THERM  ,   therm);
 		_(NVKM_SUBDEV_TIMER  ,   timer);
 		_(NVKM_SUBDEV_VOLT   ,    volt);

commit 96fc422c271d72dd465ae4620daabb2fb05971eb
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Feb 24 14:05:54 2016 +1000

    drm/nouveau/gm200: enable graphics device
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 65b7ac1b03eb..da371b805562 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1989,6 +1989,7 @@ nv120_chipset = {
 	.disp = gm200_disp_new,
 	.dma = gf119_dma_new,
 	.fifo = gm200_fifo_new,
+	.gr = gm200_gr_new,
 	.sw = gf100_sw_new,
 };
 

commit 9ec280529adaad3d8eb0c8c5aeb6237efc0b2c82
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Feb 24 14:03:40 2016 +1000

    drm/nouveau/gr/gm200: s/gm204/gm200/
    
    Most of the per-chipset differences will go away when we fully switch
    to using the register lists provided by the firmware files, which will
    leave all the remaining code "belonging" to GM200.
    
    This is a preemptive rename from GM204 to GM200.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 3f4b8687deec..65b7ac1b03eb 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2019,7 +2019,7 @@ nv124_chipset = {
 	.disp = gm200_disp_new,
 	.dma = gf119_dma_new,
 	.fifo = gm200_fifo_new,
-	.gr = gm204_gr_new,
+	.gr = gm200_gr_new,
 	.sw = gf100_sw_new,
 };
 

commit db1eb528462fdcba8a4f9f9c878884c27bc5f5f6
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Feb 11 08:35:32 2016 +1000

    drm/nouveau: s/gm204/gm200/ in a number of places
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 47748e009d59..3f4b8687deec 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1968,14 +1968,14 @@ nv120_chipset = {
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
-	.devinit = gm204_devinit_new,
+	.devinit = gm200_devinit_new,
 	.fb = gm107_fb_new,
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
-	.i2c = gm204_i2c_new,
-	.ibus = gm204_ibus_new,
+	.i2c = gm200_i2c_new,
+	.ibus = gm200_ibus_new,
 	.imem = nv50_instmem_new,
-	.ltc = gm204_ltc_new,
+	.ltc = gm200_ltc_new,
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
@@ -1983,12 +1983,12 @@ nv120_chipset = {
 	.pmu = gm107_pmu_new,
 	.timer = gk20a_timer_new,
 	.volt = gk104_volt_new,
-	.ce[0] = gm204_ce_new,
-	.ce[1] = gm204_ce_new,
-	.ce[2] = gm204_ce_new,
-	.disp = gm204_disp_new,
+	.ce[0] = gm200_ce_new,
+	.ce[1] = gm200_ce_new,
+	.ce[2] = gm200_ce_new,
+	.disp = gm200_disp_new,
 	.dma = gf119_dma_new,
-	.fifo = gm204_fifo_new,
+	.fifo = gm200_fifo_new,
 	.sw = gf100_sw_new,
 };
 
@@ -1998,14 +1998,14 @@ nv124_chipset = {
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
-	.devinit = gm204_devinit_new,
+	.devinit = gm200_devinit_new,
 	.fb = gm107_fb_new,
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
-	.i2c = gm204_i2c_new,
-	.ibus = gm204_ibus_new,
+	.i2c = gm200_i2c_new,
+	.ibus = gm200_ibus_new,
 	.imem = nv50_instmem_new,
-	.ltc = gm204_ltc_new,
+	.ltc = gm200_ltc_new,
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
@@ -2013,12 +2013,12 @@ nv124_chipset = {
 	.pmu = gm107_pmu_new,
 	.timer = gk20a_timer_new,
 	.volt = gk104_volt_new,
-	.ce[0] = gm204_ce_new,
-	.ce[1] = gm204_ce_new,
-	.ce[2] = gm204_ce_new,
-	.disp = gm204_disp_new,
+	.ce[0] = gm200_ce_new,
+	.ce[1] = gm200_ce_new,
+	.ce[2] = gm200_ce_new,
+	.disp = gm200_disp_new,
 	.dma = gf119_dma_new,
-	.fifo = gm204_fifo_new,
+	.fifo = gm200_fifo_new,
 	.gr = gm204_gr_new,
 	.sw = gf100_sw_new,
 };
@@ -2029,14 +2029,14 @@ nv126_chipset = {
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
-	.devinit = gm204_devinit_new,
+	.devinit = gm200_devinit_new,
 	.fb = gm107_fb_new,
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
-	.i2c = gm204_i2c_new,
-	.ibus = gm204_ibus_new,
+	.i2c = gm200_i2c_new,
+	.ibus = gm200_ibus_new,
 	.imem = nv50_instmem_new,
-	.ltc = gm204_ltc_new,
+	.ltc = gm200_ltc_new,
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
@@ -2044,12 +2044,12 @@ nv126_chipset = {
 	.pmu = gm107_pmu_new,
 	.timer = gk20a_timer_new,
 	.volt = gk104_volt_new,
-	.ce[0] = gm204_ce_new,
-	.ce[1] = gm204_ce_new,
-	.ce[2] = gm204_ce_new,
-	.disp = gm204_disp_new,
+	.ce[0] = gm200_ce_new,
+	.ce[1] = gm200_ce_new,
+	.ce[2] = gm200_ce_new,
+	.disp = gm200_disp_new,
 	.dma = gf119_dma_new,
-	.fifo = gm204_fifo_new,
+	.fifo = gm200_fifo_new,
 	.gr = gm206_gr_new,
 	.sw = gf100_sw_new,
 };
@@ -2063,11 +2063,11 @@ nv12b_chipset = {
 	.fuse = gm107_fuse_new,
 	.ibus = gk20a_ibus_new,
 	.imem = gk20a_instmem_new,
-	.ltc = gm204_ltc_new,
+	.ltc = gm200_ltc_new,
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
 	.timer = gk20a_timer_new,
-	.ce[2] = gm204_ce_new,
+	.ce[2] = gm200_ce_new,
 	.dma = gf119_dma_new,
 	.fifo = gm20b_fifo_new,
 	.gr = gm20b_gr_new,

commit 2ed95a4c65a3d2be9aaac23ee89fe8d90ec720a5
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Feb 11 08:25:35 2016 +1000

    drm/nouveau: recognise GM200 chipset
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 8ef0ae854038..47748e009d59 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1962,6 +1962,36 @@ nv117_chipset = {
 	.sw = gf100_sw_new,
 };
 
+static const struct nvkm_device_chip
+nv120_chipset = {
+	.name = "GM200",
+	.bar = gf100_bar_new,
+	.bios = nvkm_bios_new,
+	.bus = gf100_bus_new,
+	.devinit = gm204_devinit_new,
+	.fb = gm107_fb_new,
+	.fuse = gm107_fuse_new,
+	.gpio = gk104_gpio_new,
+	.i2c = gm204_i2c_new,
+	.ibus = gm204_ibus_new,
+	.imem = nv50_instmem_new,
+	.ltc = gm204_ltc_new,
+	.mc = gk20a_mc_new,
+	.mmu = gf100_mmu_new,
+	.mxm = nv50_mxm_new,
+	.pci = gk104_pci_new,
+	.pmu = gm107_pmu_new,
+	.timer = gk20a_timer_new,
+	.volt = gk104_volt_new,
+	.ce[0] = gm204_ce_new,
+	.ce[1] = gm204_ce_new,
+	.ce[2] = gm204_ce_new,
+	.disp = gm204_disp_new,
+	.dma = gf119_dma_new,
+	.fifo = gm204_fifo_new,
+	.sw = gf100_sw_new,
+};
+
 static const struct nvkm_device_chip
 nv124_chipset = {
 	.name = "GM204",
@@ -2461,6 +2491,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		case 0x106: device->chip = &nv106_chipset; break;
 		case 0x108: device->chip = &nv108_chipset; break;
 		case 0x117: device->chip = &nv117_chipset; break;
+		case 0x120: device->chip = &nv120_chipset; break;
 		case 0x124: device->chip = &nv124_chipset; break;
 		case 0x126: device->chip = &nv126_chipset; break;
 		case 0x12b: device->chip = &nv12b_chipset; break;

commit 0529a46a7ae038761d2860b15c8d025cec448e88
Author: Alexandre Courbot <acourbot@nvidia.com>
Date:   Mon Jan 25 18:44:23 2016 +0900

    drm/nouveau/device: call nvkm_device_fini if nvkm_device_init fails
    
    nvkm_device_fini is never called if a failure occurs in
    nvkm_device_init, even when unloading the module. This can lead to a
    resources leak (one example is the Tegra interrupt which would never be
    freed in that case). Fix this by calling nvkm_device_fini in
    nvkm_device_init's failure path.
    
    Signed-off-by: Alexandre Courbot <acourbot@nvidia.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index b1ba1c782a2b..8ef0ae854038 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2261,6 +2261,8 @@ nvkm_device_init(struct nvkm_device *device)
 	} while (--i >= 0);
 
 fail:
+	nvkm_device_fini(device, false);
+
 	nvdev_error(device, "init failed with %d\n", ret);
 	return ret;
 }

commit 28c80605757883016c11a13465bd0573848f2139
Author: Karol Herbst <nouveau@karolherbst.de>
Date:   Sun Aug 30 20:06:16 2015 +0200

    drm/nouveau/pci: add gk104 variant
    
    v2: change email used in header
    v4: change Copyright information
    v5: revert Copyright changes
    
    Signed-off-by: Karol Herbst <nouveau@karolherbst.de>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 734504129230..b1ba1c782a2b 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1669,7 +1669,7 @@ nve4_chipset = {
 	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = g94_pci_new,
+	.pci = gk104_pci_new,
 	.pmu = gk104_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
@@ -1706,7 +1706,7 @@ nve6_chipset = {
 	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = g94_pci_new,
+	.pci = gk104_pci_new,
 	.pmu = gk104_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
@@ -1743,7 +1743,7 @@ nve7_chipset = {
 	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = g94_pci_new,
+	.pci = gk104_pci_new,
 	.pmu = gk104_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
@@ -1804,7 +1804,7 @@ nvf0_chipset = {
 	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = g94_pci_new,
+	.pci = gk104_pci_new,
 	.pmu = gk110_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
@@ -1840,7 +1840,7 @@ nvf1_chipset = {
 	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = g94_pci_new,
+	.pci = gk104_pci_new,
 	.pmu = gk110_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
@@ -1876,7 +1876,7 @@ nv106_chipset = {
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = g94_pci_new,
+	.pci = gk104_pci_new,
 	.pmu = gk208_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
@@ -1912,7 +1912,7 @@ nv108_chipset = {
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = g94_pci_new,
+	.pci = gk104_pci_new,
 	.pmu = gk208_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
@@ -1948,7 +1948,7 @@ nv117_chipset = {
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = g94_pci_new,
+	.pci = gk104_pci_new,
 	.pmu = gm107_pmu_new,
 	.therm = gm107_therm_new,
 	.timer = gk20a_timer_new,
@@ -1979,7 +1979,7 @@ nv124_chipset = {
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = g94_pci_new,
+	.pci = gk104_pci_new,
 	.pmu = gm107_pmu_new,
 	.timer = gk20a_timer_new,
 	.volt = gk104_volt_new,
@@ -2010,7 +2010,7 @@ nv126_chipset = {
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = g94_pci_new,
+	.pci = gk104_pci_new,
 	.pmu = gm107_pmu_new,
 	.timer = gk20a_timer_new,
 	.volt = gk104_volt_new,

commit bec4961e2af539b167b470909861bfb6d9c3c363
Author: Karol Herbst <nouveau@karolherbst.de>
Date:   Sun Sep 27 02:41:34 2015 +0200

    drm/nouveau/pci: add gf106 variant
    
    v2: change email used in header
    v4: change Copyright information
    v5: revert Copyright changes
    
    Signed-off-by: Karol Herbst <nouveau@karolherbst.de>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index f5d9a1e1028e..734504129230 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1388,7 +1388,7 @@ nvc1_chipset = {
 	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = g94_pci_new,
+	.pci = gf106_pci_new,
 	.pmu = gf100_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
@@ -1423,7 +1423,7 @@ nvc3_chipset = {
 	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = g94_pci_new,
+	.pci = gf106_pci_new,
 	.pmu = gf100_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
@@ -1566,7 +1566,7 @@ nvcf_chipset = {
 	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = g94_pci_new,
+	.pci = gf106_pci_new,
 	.pmu = gf100_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
@@ -1601,7 +1601,7 @@ nvd7_chipset = {
 	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = g94_pci_new,
+	.pci = gf106_pci_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
 	.ce[0] = gf100_ce_new,
@@ -1634,7 +1634,7 @@ nvd9_chipset = {
 	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = g94_pci_new,
+	.pci = gf106_pci_new,
 	.pmu = gf119_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,

commit 7d2813c437a094d8df4997ddc55d32f24f832757
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Dec 19 16:48:34 2015 +1000

    drm/nouveau/ltc/gm204: split implementation from gm107
    
    Differences from GM10x:
    - GM20x LTC count detection differs from GM10x
    - GM20x init doesn't require large page size setting
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 588793e481d4..f5d9a1e1028e 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1975,7 +1975,7 @@ nv124_chipset = {
 	.i2c = gm204_i2c_new,
 	.ibus = gm204_ibus_new,
 	.imem = nv50_instmem_new,
-	.ltc = gm107_ltc_new,
+	.ltc = gm204_ltc_new,
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
@@ -2006,7 +2006,7 @@ nv126_chipset = {
 	.i2c = gm204_i2c_new,
 	.ibus = gm204_ibus_new,
 	.imem = nv50_instmem_new,
-	.ltc = gm107_ltc_new,
+	.ltc = gm204_ltc_new,
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
@@ -2033,7 +2033,7 @@ nv12b_chipset = {
 	.fuse = gm107_fuse_new,
 	.ibus = gk20a_ibus_new,
 	.imem = gk20a_instmem_new,
-	.ltc = gm107_ltc_new,
+	.ltc = gm204_ltc_new,
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
 	.timer = gk20a_timer_new,

commit e3d26d0860920080f9fa1fc10a9bd01d98a96261
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Dec 19 16:24:10 2015 +1000

    drm/nouveau/ibus/gm204: split implementation from gk104
    
    GM20x doesn't require the priv ring timeout bumps that GK/GM10x have.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 7476ac271573..588793e481d4 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1973,7 +1973,7 @@ nv124_chipset = {
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
 	.i2c = gm204_i2c_new,
-	.ibus = gk104_ibus_new,
+	.ibus = gm204_ibus_new,
 	.imem = nv50_instmem_new,
 	.ltc = gm107_ltc_new,
 	.mc = gk20a_mc_new,
@@ -2004,7 +2004,7 @@ nv126_chipset = {
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
 	.i2c = gm204_i2c_new,
-	.ibus = gk104_ibus_new,
+	.ibus = gm204_ibus_new,
 	.imem = nv50_instmem_new,
 	.ltc = gm107_ltc_new,
 	.mc = gk20a_mc_new,

commit 1299b6377b099bc4348d955930ebe1f0ee5ccc46
Author: Alexandre Courbot <acourbot@nvidia.com>
Date:   Mon Oct 26 14:55:37 2015 +0900

    drm/nouveau/core: fix return in error path of device probe
    
    We want to unlock nv_devices_mutex in this error path as well.
    
    Signed-off-by: Alexandre Courbot <acourbot@nvidia.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index bbc9824af6e0..7476ac271573 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2494,7 +2494,8 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		device->pri = ioremap(mmio_base, mmio_size);
 		if (!device->pri) {
 			nvdev_error(device, "unable to map PRI\n");
-			return -ENOMEM;
+			ret = -ENOMEM;
+			goto done;
 		}
 	}
 

commit 3c9aca318150ba1152e957a37473ff67d8ebba30
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Oct 1 15:00:23 2015 +1000

    drm/nouveau/pmu/gk107: enable PGOB codepaths
    
    Reported to be needed as per fdo#70354 comment #61.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 2cff79cf683d..bbc9824af6e0 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1744,7 +1744,7 @@ nve7_chipset = {
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = g94_pci_new,
-	.pmu = gf119_pmu_new,
+	.pmu = gk104_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
 	.volt = gk104_volt_new,

commit c4266a9c7b0ee66b3d1ca22745d8eb9472e21b4b
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Oct 1 11:36:58 2015 +1000

    drm/nouveau/pci/nv46: attempt to fix msi, and re-enable by default
    
    Was not able to obtain a trace of NVRM due to kernel version annoyances,
    however, experimentally confirmed that the WAR we use on NV50/G8x boards
    works here too.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 727e18e0acd0..2cff79cf683d 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -637,7 +637,7 @@ nv46_chipset = {
 	.imem = nv40_instmem_new,
 	.mc = nv44_mc_new,
 	.mmu = nv44_mmu_new,
-	.pci = nv4c_pci_new,
+	.pci = nv46_pci_new,
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -822,7 +822,7 @@ nv50_chipset = {
 	.mc = nv50_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = nv50_pci_new,
+	.pci = nv46_pci_new,
 	.therm = nv50_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,

commit b31505c472f2451c6143bf4727e79ea177a35ca5
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Oct 1 09:34:45 2015 +1000

    drm/nouveau/pci/g94: split implementation from nv40
    
    An upcoming patch will implement functionality that we don't use on any
    NV40 chipset.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 13774c18d263..727e18e0acd0 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1025,7 +1025,7 @@ nv94_chipset = {
 	.mc = nv50_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = nv40_pci_new,
+	.pci = g94_pci_new,
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -1057,7 +1057,7 @@ nv96_chipset = {
 	.mc = nv50_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = nv40_pci_new,
+	.pci = g94_pci_new,
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -1089,7 +1089,7 @@ nv98_chipset = {
 	.mc = g98_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = nv40_pci_new,
+	.pci = g94_pci_new,
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -1121,7 +1121,7 @@ nva0_chipset = {
 	.mc = g98_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = nv40_pci_new,
+	.pci = g94_pci_new,
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -1153,7 +1153,7 @@ nva3_chipset = {
 	.mc = g98_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = nv40_pci_new,
+	.pci = g94_pci_new,
 	.pmu = gt215_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
@@ -1187,7 +1187,7 @@ nva5_chipset = {
 	.mc = g98_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = nv40_pci_new,
+	.pci = g94_pci_new,
 	.pmu = gt215_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
@@ -1220,7 +1220,7 @@ nva8_chipset = {
 	.mc = g98_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = nv40_pci_new,
+	.pci = g94_pci_new,
 	.pmu = gt215_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
@@ -1253,7 +1253,7 @@ nvaa_chipset = {
 	.mc = g98_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = nv40_pci_new,
+	.pci = g94_pci_new,
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -1285,7 +1285,7 @@ nvac_chipset = {
 	.mc = g98_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = nv40_pci_new,
+	.pci = g94_pci_new,
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -1317,7 +1317,7 @@ nvaf_chipset = {
 	.mc = g98_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = nv40_pci_new,
+	.pci = g94_pci_new,
 	.pmu = gt215_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
@@ -1388,7 +1388,7 @@ nvc1_chipset = {
 	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = nv40_pci_new,
+	.pci = g94_pci_new,
 	.pmu = gf100_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
@@ -1423,7 +1423,7 @@ nvc3_chipset = {
 	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = nv40_pci_new,
+	.pci = g94_pci_new,
 	.pmu = gf100_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
@@ -1566,7 +1566,7 @@ nvcf_chipset = {
 	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = nv40_pci_new,
+	.pci = g94_pci_new,
 	.pmu = gf100_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
@@ -1601,7 +1601,7 @@ nvd7_chipset = {
 	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = nv40_pci_new,
+	.pci = g94_pci_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
 	.ce[0] = gf100_ce_new,
@@ -1634,7 +1634,7 @@ nvd9_chipset = {
 	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = nv40_pci_new,
+	.pci = g94_pci_new,
 	.pmu = gf119_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
@@ -1669,7 +1669,7 @@ nve4_chipset = {
 	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = nv40_pci_new,
+	.pci = g94_pci_new,
 	.pmu = gk104_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
@@ -1706,7 +1706,7 @@ nve6_chipset = {
 	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = nv40_pci_new,
+	.pci = g94_pci_new,
 	.pmu = gk104_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
@@ -1743,7 +1743,7 @@ nve7_chipset = {
 	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = nv40_pci_new,
+	.pci = g94_pci_new,
 	.pmu = gf119_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
@@ -1804,7 +1804,7 @@ nvf0_chipset = {
 	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = nv40_pci_new,
+	.pci = g94_pci_new,
 	.pmu = gk110_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
@@ -1840,7 +1840,7 @@ nvf1_chipset = {
 	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = nv40_pci_new,
+	.pci = g94_pci_new,
 	.pmu = gk110_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
@@ -1876,7 +1876,7 @@ nv106_chipset = {
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = nv40_pci_new,
+	.pci = g94_pci_new,
 	.pmu = gk208_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
@@ -1912,7 +1912,7 @@ nv108_chipset = {
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = nv40_pci_new,
+	.pci = g94_pci_new,
 	.pmu = gk208_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
@@ -1948,7 +1948,7 @@ nv117_chipset = {
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = nv40_pci_new,
+	.pci = g94_pci_new,
 	.pmu = gm107_pmu_new,
 	.therm = gm107_therm_new,
 	.timer = gk20a_timer_new,
@@ -1979,7 +1979,7 @@ nv124_chipset = {
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = nv40_pci_new,
+	.pci = g94_pci_new,
 	.pmu = gm107_pmu_new,
 	.timer = gk20a_timer_new,
 	.volt = gk104_volt_new,
@@ -2010,7 +2010,7 @@ nv126_chipset = {
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = nv40_pci_new,
+	.pci = g94_pci_new,
 	.pmu = gm107_pmu_new,
 	.timer = gk20a_timer_new,
 	.volt = gk104_volt_new,

commit 3e55b53bc7039f1a6b051aa1a5ba15eec6dce2e7
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Oct 1 09:29:58 2015 +1000

    drm/nouveau/pci/g84: split implementation from nv50
    
    An upcoming patch will implement functionality that we don't use on the
    original NV50.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index acc2fe9fb526..13774c18d263 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -929,7 +929,7 @@ nv84_chipset = {
 	.mc = nv50_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = nv50_pci_new,
+	.pci = g84_pci_new,
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -961,7 +961,7 @@ nv86_chipset = {
 	.mc = nv50_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = nv50_pci_new,
+	.pci = g84_pci_new,
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -993,7 +993,7 @@ nv92_chipset = {
 	.mc = nv50_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-	.pci = nv50_pci_new,
+	.pci = g84_pci_new,
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,

commit b6afa2650cb3ed4ec8ba0c2ccb29c1dc99e039d5
Author: Samuel Pitoiset <samuel.pitoiset@gmail.com>
Date:   Thu Sep 24 20:26:15 2015 +0200

    drm/nouveau/ibus/gf100: increase wait timeout to avoid read faults
    
    Increase clock timeout of some unknown engines in order to avoid failure
    at high gpcclk rate.
    
    This fixes IBUS read faults on my GF119 when reclocking is manually
    enabled. Note that memory reclocking is completely broken and NvMemExec
    has to be disabled to allow core clock reclocking only.
    
    Signed-off-by: Samuel Pitoiset <samuel.pitoiset@gmail.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 8e9b5e8ca7d8..acc2fe9fb526 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1595,7 +1595,7 @@ nvd7_chipset = {
 	.fuse = gf100_fuse_new,
 	.gpio = gf119_gpio_new,
 	.i2c = gf117_i2c_new,
-	.ibus = gf100_ibus_new,
+	.ibus = gf117_ibus_new,
 	.imem = nv50_instmem_new,
 	.ltc = gf100_ltc_new,
 	.mc = gf100_mc_new,
@@ -1628,7 +1628,7 @@ nvd9_chipset = {
 	.fuse = gf100_fuse_new,
 	.gpio = gf119_gpio_new,
 	.i2c = gf119_i2c_new,
-	.ibus = gf100_ibus_new,
+	.ibus = gf117_ibus_new,
 	.imem = nv50_instmem_new,
 	.ltc = gf100_ltc_new,
 	.mc = gf100_mc_new,

commit 24580d1c310d5987f72adbb49bf3e976a5e5313b
Author: Martin Peres <martin.peres@free.fr>
Date:   Wed Sep 16 22:45:33 2015 +0300

    drm/nouveau/gm204/6: add voltage control using the new gk104 volt class
    
    I got confirmation that we can read and change the voltage with the same code.
    The divider is also computed correctly on the gm204 we got our hands on.
    
    Thanks to Yoshimo on IRC for executing the tests on his gm204!
    
    Signed-off-by: Martin Peres <martin.peres@free.fr>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index b324fd193402..8e9b5e8ca7d8 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1982,6 +1982,7 @@ nv124_chipset = {
 	.pci = nv40_pci_new,
 	.pmu = gm107_pmu_new,
 	.timer = gk20a_timer_new,
+	.volt = gk104_volt_new,
 	.ce[0] = gm204_ce_new,
 	.ce[1] = gm204_ce_new,
 	.ce[2] = gm204_ce_new,
@@ -2012,6 +2013,7 @@ nv126_chipset = {
 	.pci = nv40_pci_new,
 	.pmu = gm107_pmu_new,
 	.timer = gk20a_timer_new,
+	.volt = gk104_volt_new,
 	.ce[0] = gm204_ce_new,
 	.ce[1] = gm204_ce_new,
 	.ce[2] = gm204_ce_new,

commit dc47700f7d965ca0c6abeccc8cf467de8a1ce768
Author: Martin Peres <martin.peres@free.fr>
Date:   Wed Sep 9 02:13:30 2015 +0200

    drm/nouveau/gm107: add voltage control using the new gk104 volt class
    
    Let's ignore the other desktop Maxwells until I get my hands on one and confirm
    that we still can change the voltage.
    
    Signed-off-by: Martin Peres <martin.peres@free.fr>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 7c35f1ff8a64..b324fd193402 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1952,6 +1952,7 @@ nv117_chipset = {
 	.pmu = gm107_pmu_new,
 	.therm = gm107_therm_new,
 	.timer = gk20a_timer_new,
+	.volt = gk104_volt_new,
 	.ce[0] = gk104_ce_new,
 	.ce[2] = gk104_ce_new,
 	.disp = gm107_disp_new,

commit 1531dbbb56820d4e0fee4f9baa9fc84485bb6623
Author: Martin Peres <martin.peres@free.fr>
Date:   Wed Sep 9 00:34:33 2015 +0200

    drm/nouveau/volt/gk104: add support for pwm and gpio modes
    
    Most Keplers actually use the GPIO-based voltage management instead of the new
    PWM-based one. Use the GPIO mode as a fallback as it already gracefully handles
    the case where no GPIOs exist.
    
    All the Maxwells seem to use the PWM method though.
    
    v2:
     - Do not forget to commit the PWM configuration change!
    
    Signed-off-by: Martin Peres <martin.peres@free.fr>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 94a906b8cb88..7c35f1ff8a64 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1673,7 +1673,7 @@ nve4_chipset = {
 	.pmu = gk104_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
-	.volt = nv40_volt_new,
+	.volt = gk104_volt_new,
 	.ce[0] = gk104_ce_new,
 	.ce[1] = gk104_ce_new,
 	.ce[2] = gk104_ce_new,
@@ -1710,7 +1710,7 @@ nve6_chipset = {
 	.pmu = gk104_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
-	.volt = nv40_volt_new,
+	.volt = gk104_volt_new,
 	.ce[0] = gk104_ce_new,
 	.ce[1] = gk104_ce_new,
 	.ce[2] = gk104_ce_new,
@@ -1747,7 +1747,7 @@ nve7_chipset = {
 	.pmu = gf119_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
-	.volt = nv40_volt_new,
+	.volt = gk104_volt_new,
 	.ce[0] = gk104_ce_new,
 	.ce[1] = gk104_ce_new,
 	.ce[2] = gk104_ce_new,
@@ -1808,7 +1808,7 @@ nvf0_chipset = {
 	.pmu = gk110_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
-	.volt = nv40_volt_new,
+	.volt = gk104_volt_new,
 	.ce[0] = gk104_ce_new,
 	.ce[1] = gk104_ce_new,
 	.ce[2] = gk104_ce_new,
@@ -1844,7 +1844,7 @@ nvf1_chipset = {
 	.pmu = gk110_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
-	.volt = nv40_volt_new,
+	.volt = gk104_volt_new,
 	.ce[0] = gk104_ce_new,
 	.ce[1] = gk104_ce_new,
 	.ce[2] = gk104_ce_new,
@@ -1880,7 +1880,7 @@ nv106_chipset = {
 	.pmu = gk208_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
-	.volt = nv40_volt_new,
+	.volt = gk104_volt_new,
 	.ce[0] = gk104_ce_new,
 	.ce[1] = gk104_ce_new,
 	.ce[2] = gk104_ce_new,
@@ -1916,7 +1916,7 @@ nv108_chipset = {
 	.pmu = gk208_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
-	.volt = nv40_volt_new,
+	.volt = gk104_volt_new,
 	.ce[0] = gk104_ce_new,
 	.ce[1] = gk104_ce_new,
 	.ce[2] = gk104_ce_new,

commit 26c9e8effebb9166eb1cfba2d164676e98c505c7
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:23 2015 +1000

    drm/nouveau/device: remove pci/platform_device from common struct
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index b8d46144e68a..94a906b8cb88 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2294,7 +2294,7 @@ nvkm_device_del(struct nvkm_device **pdevice)
 int
 nvkm_device_ctor(const struct nvkm_device_func *func,
 		 const struct nvkm_device_quirk *quirk,
-		 void *dev, enum nv_bus_type type, u64 handle,
+		 struct device *dev, enum nvkm_device_type type, u64 handle,
 		 const char *name, const char *cfg, const char *dbg,
 		 bool detect, bool mmio, u64 subdev_mask,
 		 struct nvkm_device *device)
@@ -2312,16 +2312,8 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 
 	device->func = func;
 	device->quirk = quirk;
-	switch (type) {
-	case NVKM_BUS_PCI:
-		device->pdev = dev;
-		device->dev = &device->pdev->dev;
-		break;
-	case NVKM_BUS_PLATFORM:
-		device->platformdev = dev;
-		device->dev = &device->platformdev->dev;
-		break;
-	}
+	device->dev = dev;
+	device->type = type;
 	device->handle = handle;
 	device->cfgopt = cfg;
 	device->dbgopt = dbg;

commit 7e8820fed712c6de1933dcc91edbf08dcec74925
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:23 2015 +1000

    drm/nouveau/device: cleaner abstraction for device resource functions
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 5fab8384d1f4..b8d46144e68a 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2262,36 +2262,6 @@ nvkm_device_init(struct nvkm_device *device)
 	return ret;
 }
 
-resource_size_t
-nv_device_resource_start(struct nvkm_device *device, unsigned int bar)
-{
-	if (nv_device_is_pci(device)) {
-		return pci_resource_start(device->pdev, bar);
-	} else {
-		struct resource *res;
-		res = platform_get_resource(device->platformdev,
-					    IORESOURCE_MEM, bar);
-		if (!res)
-			return 0;
-		return res->start;
-	}
-}
-
-resource_size_t
-nv_device_resource_len(struct nvkm_device *device, unsigned int bar)
-{
-	if (nv_device_is_pci(device)) {
-		return pci_resource_len(device->pdev, bar);
-	} else {
-		struct resource *res;
-		res = platform_get_resource(device->platformdev,
-					    IORESOURCE_MEM, bar);
-		if (!res)
-			return 0;
-		return resource_size(res);
-	}
-}
-
 void
 nvkm_device_del(struct nvkm_device **pdevice)
 {
@@ -2363,8 +2333,8 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 	if (ret)
 		goto done;
 
-	mmio_base = nv_device_resource_start(device, 0);
-	mmio_size = nv_device_resource_len(device, 0);
+	mmio_base = device->func->resource_addr(device, 0);
+	mmio_size = device->func->resource_size(device, 0);
 
 	/* identify the chipset, and determine classes of subdev/engines */
 	if (detect) {

commit 2b700825e7a7702fb862edba1262c98040dc1bf6
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:22 2015 +1000

    drm/nouveau/mc: move device irq handling to platform-specific code
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 743a3e9796dd..5fab8384d1f4 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -479,7 +479,7 @@ nv40_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
-	.mc = nv40_mc_new,
+	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
 	.pci = nv40_pci_new,
 	.therm = nv40_therm_new,
@@ -505,7 +505,7 @@ nv41_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
-	.mc = nv40_mc_new,
+	.mc = nv04_mc_new,
 	.mmu = nv41_mmu_new,
 	.pci = nv40_pci_new,
 	.therm = nv40_therm_new,
@@ -531,7 +531,7 @@ nv42_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
-	.mc = nv40_mc_new,
+	.mc = nv04_mc_new,
 	.mmu = nv41_mmu_new,
 	.pci = nv40_pci_new,
 	.therm = nv40_therm_new,
@@ -557,7 +557,7 @@ nv43_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
-	.mc = nv40_mc_new,
+	.mc = nv04_mc_new,
 	.mmu = nv41_mmu_new,
 	.pci = nv40_pci_new,
 	.therm = nv40_therm_new,
@@ -609,7 +609,7 @@ nv45_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
-	.mc = nv40_mc_new,
+	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
 	.pci = nv40_pci_new,
 	.therm = nv40_therm_new,
@@ -661,7 +661,7 @@ nv47_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
-	.mc = nv40_mc_new,
+	.mc = nv04_mc_new,
 	.mmu = nv41_mmu_new,
 	.pci = nv40_pci_new,
 	.therm = nv40_therm_new,
@@ -687,7 +687,7 @@ nv49_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
-	.mc = nv40_mc_new,
+	.mc = nv04_mc_new,
 	.mmu = nv41_mmu_new,
 	.pci = nv40_pci_new,
 	.therm = nv40_therm_new,
@@ -739,7 +739,7 @@ nv4b_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
-	.mc = nv40_mc_new,
+	.mc = nv04_mc_new,
 	.mmu = nv41_mmu_new,
 	.pci = nv40_pci_new,
 	.therm = nv40_therm_new,
@@ -765,7 +765,7 @@ nv4c_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
-	.mc = nv4c_mc_new,
+	.mc = nv44_mc_new,
 	.mmu = nv44_mmu_new,
 	.pci = nv4c_pci_new,
 	.therm = nv40_therm_new,
@@ -791,7 +791,7 @@ nv4e_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv4e_i2c_new,
 	.imem = nv40_instmem_new,
-	.mc = nv4c_mc_new,
+	.mc = nv44_mc_new,
 	.mmu = nv44_mmu_new,
 	.pci = nv4c_pci_new,
 	.therm = nv40_therm_new,
@@ -846,7 +846,7 @@ nv63_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
-	.mc = nv4c_mc_new,
+	.mc = nv44_mc_new,
 	.mmu = nv44_mmu_new,
 	.pci = nv4c_pci_new,
 	.therm = nv40_therm_new,
@@ -872,7 +872,7 @@ nv67_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
-	.mc = nv4c_mc_new,
+	.mc = nv44_mc_new,
 	.mmu = nv44_mmu_new,
 	.pci = nv4c_pci_new,
 	.therm = nv40_therm_new,
@@ -898,7 +898,7 @@ nv68_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
-	.mc = nv4c_mc_new,
+	.mc = nv44_mc_new,
 	.mmu = nv44_mmu_new,
 	.pci = nv4c_pci_new,
 	.therm = nv40_therm_new,
@@ -1022,7 +1022,7 @@ nv94_chipset = {
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
 	.imem = nv50_instmem_new,
-	.mc = g94_mc_new,
+	.mc = nv50_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = nv40_pci_new,
@@ -1054,7 +1054,7 @@ nv96_chipset = {
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
 	.imem = nv50_instmem_new,
-	.mc = g94_mc_new,
+	.mc = nv50_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = nv40_pci_new,
@@ -1385,7 +1385,7 @@ nvc1_chipset = {
 	.ibus = gf100_ibus_new,
 	.imem = nv50_instmem_new,
 	.ltc = gf100_ltc_new,
-	.mc = gf106_mc_new,
+	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = nv40_pci_new,
@@ -1420,7 +1420,7 @@ nvc3_chipset = {
 	.ibus = gf100_ibus_new,
 	.imem = nv50_instmem_new,
 	.ltc = gf100_ltc_new,
-	.mc = gf106_mc_new,
+	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = nv40_pci_new,
@@ -1563,7 +1563,7 @@ nvcf_chipset = {
 	.ibus = gf100_ibus_new,
 	.imem = nv50_instmem_new,
 	.ltc = gf100_ltc_new,
-	.mc = gf106_mc_new,
+	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = nv40_pci_new,
@@ -1598,7 +1598,7 @@ nvd7_chipset = {
 	.ibus = gf100_ibus_new,
 	.imem = nv50_instmem_new,
 	.ltc = gf100_ltc_new,
-	.mc = gf106_mc_new,
+	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = nv40_pci_new,
@@ -1631,7 +1631,7 @@ nvd9_chipset = {
 	.ibus = gf100_ibus_new,
 	.imem = nv50_instmem_new,
 	.ltc = gf100_ltc_new,
-	.mc = gf106_mc_new,
+	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = nv40_pci_new,
@@ -1666,7 +1666,7 @@ nve4_chipset = {
 	.ibus = gk104_ibus_new,
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
-	.mc = gf106_mc_new,
+	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = nv40_pci_new,
@@ -1703,7 +1703,7 @@ nve6_chipset = {
 	.ibus = gk104_ibus_new,
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
-	.mc = gf106_mc_new,
+	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = nv40_pci_new,
@@ -1740,7 +1740,7 @@ nve7_chipset = {
 	.ibus = gk104_ibus_new,
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
-	.mc = gf106_mc_new,
+	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = nv40_pci_new,
@@ -1801,7 +1801,7 @@ nvf0_chipset = {
 	.ibus = gk104_ibus_new,
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
-	.mc = gf106_mc_new,
+	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = nv40_pci_new,
@@ -1837,7 +1837,7 @@ nvf1_chipset = {
 	.ibus = gk104_ibus_new,
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
-	.mc = gf106_mc_new,
+	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pci = nv40_pci_new,
@@ -2231,11 +2231,17 @@ nvkm_device_init(struct nvkm_device *device)
 	nvdev_trace(device, "init running...\n");
 	time = ktime_to_us(ktime_get());
 
+	if (device->func->init) {
+		ret = device->func->init(device);
+		if (ret)
+			goto fail;
+	}
+
 	for (i = 0; i < NVKM_SUBDEV_NR; i++) {
 		if ((subdev = nvkm_device_subdev(device, i))) {
 			ret = nvkm_subdev_init(subdev);
 			if (ret)
-				goto fail;
+				goto fail_subdev;
 		}
 	}
 
@@ -2245,12 +2251,13 @@ nvkm_device_init(struct nvkm_device *device)
 	nvdev_trace(device, "init completed in %lldus\n", time);
 	return 0;
 
-fail:
+fail_subdev:
 	do {
 		if ((subdev = nvkm_device_subdev(device, i)))
 			nvkm_subdev_fini(subdev, false);
 	} while (--i >= 0);
 
+fail:
 	nvdev_error(device, "init failed with %d\n", ret);
 	return ret;
 }
@@ -2285,17 +2292,6 @@ nv_device_resource_len(struct nvkm_device *device, unsigned int bar)
 	}
 }
 
-int
-nv_device_get_irq(struct nvkm_device *device, bool stall)
-{
-	if (nv_device_is_pci(device)) {
-		return device->pdev->irq;
-	} else {
-		return platform_get_irq_byname(device->platformdev,
-					       stall ? "stall" : "nonstall");
-	}
-}
-
 void
 nvkm_device_del(struct nvkm_device **pdevice)
 {

commit 0a34fb3149c3001f9c1b2bd0f98f94d63e74cb85
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:22 2015 +1000

    drm/nouveau/pci: new subdev
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index b67cb3771948..743a3e9796dd 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -85,6 +85,7 @@ nv4_chipset = {
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
+	.pci = nv04_pci_new,
 	.timer = nv04_timer_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
@@ -105,6 +106,7 @@ nv5_chipset = {
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
+	.pci = nv04_pci_new,
 	.timer = nv04_timer_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
@@ -126,6 +128,7 @@ nv10_chipset = {
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
+	.pci = nv04_pci_new,
 	.timer = nv04_timer_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
@@ -145,6 +148,7 @@ nv11_chipset = {
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
+	.pci = nv04_pci_new,
 	.timer = nv04_timer_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
@@ -166,6 +170,7 @@ nv15_chipset = {
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
+	.pci = nv04_pci_new,
 	.timer = nv04_timer_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
@@ -187,6 +192,7 @@ nv17_chipset = {
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
+	.pci = nv04_pci_new,
 	.timer = nv04_timer_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
@@ -208,6 +214,7 @@ nv18_chipset = {
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
+	.pci = nv04_pci_new,
 	.timer = nv04_timer_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
@@ -229,6 +236,7 @@ nv1a_chipset = {
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
+	.pci = nv04_pci_new,
 	.timer = nv04_timer_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
@@ -250,6 +258,7 @@ nv1f_chipset = {
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
+	.pci = nv04_pci_new,
 	.timer = nv04_timer_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
@@ -271,6 +280,7 @@ nv20_chipset = {
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
+	.pci = nv04_pci_new,
 	.timer = nv04_timer_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
@@ -292,6 +302,7 @@ nv25_chipset = {
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
+	.pci = nv04_pci_new,
 	.timer = nv04_timer_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
@@ -313,6 +324,7 @@ nv28_chipset = {
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
+	.pci = nv04_pci_new,
 	.timer = nv04_timer_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
@@ -334,6 +346,7 @@ nv2a_chipset = {
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
+	.pci = nv04_pci_new,
 	.timer = nv04_timer_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
@@ -355,6 +368,7 @@ nv30_chipset = {
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
+	.pci = nv04_pci_new,
 	.timer = nv04_timer_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
@@ -376,6 +390,7 @@ nv31_chipset = {
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
+	.pci = nv04_pci_new,
 	.timer = nv04_timer_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
@@ -398,6 +413,7 @@ nv34_chipset = {
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
+	.pci = nv04_pci_new,
 	.timer = nv04_timer_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
@@ -420,6 +436,7 @@ nv35_chipset = {
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
+	.pci = nv04_pci_new,
 	.timer = nv04_timer_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
@@ -441,6 +458,7 @@ nv36_chipset = {
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
+	.pci = nv04_pci_new,
 	.timer = nv04_timer_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
@@ -463,6 +481,7 @@ nv40_chipset = {
 	.imem = nv40_instmem_new,
 	.mc = nv40_mc_new,
 	.mmu = nv04_mmu_new,
+	.pci = nv40_pci_new,
 	.therm = nv40_therm_new,
 	.timer = nv40_timer_new,
 	.volt = nv40_volt_new,
@@ -488,6 +507,7 @@ nv41_chipset = {
 	.imem = nv40_instmem_new,
 	.mc = nv40_mc_new,
 	.mmu = nv41_mmu_new,
+	.pci = nv40_pci_new,
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -513,6 +533,7 @@ nv42_chipset = {
 	.imem = nv40_instmem_new,
 	.mc = nv40_mc_new,
 	.mmu = nv41_mmu_new,
+	.pci = nv40_pci_new,
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -538,6 +559,7 @@ nv43_chipset = {
 	.imem = nv40_instmem_new,
 	.mc = nv40_mc_new,
 	.mmu = nv41_mmu_new,
+	.pci = nv40_pci_new,
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -563,6 +585,7 @@ nv44_chipset = {
 	.imem = nv40_instmem_new,
 	.mc = nv44_mc_new,
 	.mmu = nv44_mmu_new,
+	.pci = nv40_pci_new,
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -588,6 +611,7 @@ nv45_chipset = {
 	.imem = nv40_instmem_new,
 	.mc = nv40_mc_new,
 	.mmu = nv04_mmu_new,
+	.pci = nv40_pci_new,
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -613,6 +637,7 @@ nv46_chipset = {
 	.imem = nv40_instmem_new,
 	.mc = nv44_mc_new,
 	.mmu = nv44_mmu_new,
+	.pci = nv4c_pci_new,
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -638,6 +663,7 @@ nv47_chipset = {
 	.imem = nv40_instmem_new,
 	.mc = nv40_mc_new,
 	.mmu = nv41_mmu_new,
+	.pci = nv40_pci_new,
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -663,6 +689,7 @@ nv49_chipset = {
 	.imem = nv40_instmem_new,
 	.mc = nv40_mc_new,
 	.mmu = nv41_mmu_new,
+	.pci = nv40_pci_new,
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -688,6 +715,7 @@ nv4a_chipset = {
 	.imem = nv40_instmem_new,
 	.mc = nv44_mc_new,
 	.mmu = nv44_mmu_new,
+	.pci = nv40_pci_new,
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -713,6 +741,7 @@ nv4b_chipset = {
 	.imem = nv40_instmem_new,
 	.mc = nv40_mc_new,
 	.mmu = nv41_mmu_new,
+	.pci = nv40_pci_new,
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -738,6 +767,7 @@ nv4c_chipset = {
 	.imem = nv40_instmem_new,
 	.mc = nv4c_mc_new,
 	.mmu = nv44_mmu_new,
+	.pci = nv4c_pci_new,
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -763,6 +793,7 @@ nv4e_chipset = {
 	.imem = nv40_instmem_new,
 	.mc = nv4c_mc_new,
 	.mmu = nv44_mmu_new,
+	.pci = nv4c_pci_new,
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -791,6 +822,7 @@ nv50_chipset = {
 	.mc = nv50_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
+	.pci = nv50_pci_new,
 	.therm = nv50_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -816,6 +848,7 @@ nv63_chipset = {
 	.imem = nv40_instmem_new,
 	.mc = nv4c_mc_new,
 	.mmu = nv44_mmu_new,
+	.pci = nv4c_pci_new,
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -841,6 +874,7 @@ nv67_chipset = {
 	.imem = nv40_instmem_new,
 	.mc = nv4c_mc_new,
 	.mmu = nv44_mmu_new,
+	.pci = nv4c_pci_new,
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -866,6 +900,7 @@ nv68_chipset = {
 	.imem = nv40_instmem_new,
 	.mc = nv4c_mc_new,
 	.mmu = nv44_mmu_new,
+	.pci = nv4c_pci_new,
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -894,6 +929,7 @@ nv84_chipset = {
 	.mc = nv50_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
+	.pci = nv50_pci_new,
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -925,6 +961,7 @@ nv86_chipset = {
 	.mc = nv50_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
+	.pci = nv50_pci_new,
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -956,6 +993,7 @@ nv92_chipset = {
 	.mc = nv50_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
+	.pci = nv50_pci_new,
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -987,6 +1025,7 @@ nv94_chipset = {
 	.mc = g94_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
+	.pci = nv40_pci_new,
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -1005,63 +1044,65 @@ nv94_chipset = {
 static const struct nvkm_device_chip
 nv96_chipset = {
 	.name = "G96",
+	.bar = g84_bar_new,
 	.bios = nvkm_bios_new,
-	.gpio = g94_gpio_new,
-	.i2c = g94_i2c_new,
-	.fuse = nv50_fuse_new,
+	.bus = g94_bus_new,
 	.clk = g84_clk_new,
-	.therm = g84_therm_new,
-	.mxm = nv50_mxm_new,
 	.devinit = g84_devinit_new,
-	.mc = g94_mc_new,
-	.bus = g94_bus_new,
-	.timer = nv41_timer_new,
 	.fb = g84_fb_new,
+	.fuse = nv50_fuse_new,
+	.gpio = g94_gpio_new,
+	.i2c = g94_i2c_new,
 	.imem = nv50_instmem_new,
+	.mc = g94_mc_new,
 	.mmu = nv50_mmu_new,
-	.bar = g84_bar_new,
+	.mxm = nv50_mxm_new,
+	.pci = nv40_pci_new,
+	.therm = g84_therm_new,
+	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
+	.bsp = g84_bsp_new,
+	.cipher = g84_cipher_new,
+	.disp = g94_disp_new,
 	.dma = nv50_dma_new,
 	.fifo = g84_fifo_new,
 	.gr = g84_gr_new,
-	.gr = nv50_gr_new,
 	.mpeg = g84_mpeg_new,
-	.vp = g84_vp_new,
-	.cipher = g84_cipher_new,
-	.bsp = g84_bsp_new,
-	.disp = g94_disp_new,
 	.pm = g84_pm_new,
+	.sw = nv50_sw_new,
+	.vp = g84_vp_new,
 };
 
 static const struct nvkm_device_chip
 nv98_chipset = {
 	.name = "G98",
+	.bar = g84_bar_new,
 	.bios = nvkm_bios_new,
-	.gpio = g94_gpio_new,
-	.i2c = g94_i2c_new,
-	.fuse = nv50_fuse_new,
+	.bus = g94_bus_new,
 	.clk = g84_clk_new,
-	.therm = g84_therm_new,
-	.mxm = nv50_mxm_new,
 	.devinit = g98_devinit_new,
-	.mc = g98_mc_new,
-	.bus = g94_bus_new,
-	.timer = nv41_timer_new,
 	.fb = g84_fb_new,
+	.fuse = nv50_fuse_new,
+	.gpio = g94_gpio_new,
+	.i2c = g94_i2c_new,
 	.imem = nv50_instmem_new,
+	.mc = g98_mc_new,
 	.mmu = nv50_mmu_new,
-	.bar = g84_bar_new,
+	.mxm = nv50_mxm_new,
+	.pci = nv40_pci_new,
+	.therm = g84_therm_new,
+	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
+	.disp = g94_disp_new,
 	.dma = nv50_dma_new,
 	.fifo = g84_fifo_new,
 	.gr = g84_gr_new,
-	.sw = nv50_sw_new,
 	.mspdec = g98_mspdec_new,
-	.sec = g98_sec_new,
-	.msvld = g98_msvld_new,
 	.msppp = g98_msppp_new,
-	.disp = g94_disp_new,
+	.msvld = g98_msvld_new,
 	.pm = g84_pm_new,
+	.sec = g98_sec_new,
+	.sw = nv50_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -1080,6 +1121,7 @@ nva0_chipset = {
 	.mc = g98_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
+	.pci = nv40_pci_new,
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -1111,6 +1153,7 @@ nva3_chipset = {
 	.mc = g98_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
+	.pci = nv40_pci_new,
 	.pmu = gt215_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
@@ -1144,6 +1187,7 @@ nva5_chipset = {
 	.mc = g98_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
+	.pci = nv40_pci_new,
 	.pmu = gt215_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
@@ -1176,6 +1220,7 @@ nva8_chipset = {
 	.mc = g98_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
+	.pci = nv40_pci_new,
 	.pmu = gt215_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
@@ -1208,6 +1253,7 @@ nvaa_chipset = {
 	.mc = g98_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
+	.pci = nv40_pci_new,
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -1239,6 +1285,7 @@ nvac_chipset = {
 	.mc = g98_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
+	.pci = nv40_pci_new,
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
@@ -1270,6 +1317,7 @@ nvaf_chipset = {
 	.mc = g98_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
+	.pci = nv40_pci_new,
 	.pmu = gt215_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
@@ -1304,6 +1352,7 @@ nvc0_chipset = {
 	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
+	.pci = gf100_pci_new,
 	.pmu = gf100_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
@@ -1339,6 +1388,7 @@ nvc1_chipset = {
 	.mc = gf106_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
+	.pci = nv40_pci_new,
 	.pmu = gf100_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
@@ -1373,6 +1423,7 @@ nvc3_chipset = {
 	.mc = gf106_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
+	.pci = nv40_pci_new,
 	.pmu = gf100_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
@@ -1407,6 +1458,7 @@ nvc4_chipset = {
 	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
+	.pci = gf100_pci_new,
 	.pmu = gf100_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
@@ -1442,6 +1494,7 @@ nvc8_chipset = {
 	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
+	.pci = gf100_pci_new,
 	.pmu = gf100_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
@@ -1477,6 +1530,7 @@ nvce_chipset = {
 	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
+	.pci = gf100_pci_new,
 	.pmu = gf100_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
@@ -1512,6 +1566,7 @@ nvcf_chipset = {
 	.mc = gf106_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
+	.pci = nv40_pci_new,
 	.pmu = gf100_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
@@ -1546,6 +1601,7 @@ nvd7_chipset = {
 	.mc = gf106_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
+	.pci = nv40_pci_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
 	.ce[0] = gf100_ce_new,
@@ -1578,6 +1634,7 @@ nvd9_chipset = {
 	.mc = gf106_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
+	.pci = nv40_pci_new,
 	.pmu = gf119_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
@@ -1612,6 +1669,7 @@ nve4_chipset = {
 	.mc = gf106_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
+	.pci = nv40_pci_new,
 	.pmu = gk104_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
@@ -1648,6 +1706,7 @@ nve6_chipset = {
 	.mc = gf106_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
+	.pci = nv40_pci_new,
 	.pmu = gk104_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
@@ -1684,6 +1743,7 @@ nve7_chipset = {
 	.mc = gf106_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
+	.pci = nv40_pci_new,
 	.pmu = gf119_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
@@ -1744,6 +1804,7 @@ nvf0_chipset = {
 	.mc = gf106_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
+	.pci = nv40_pci_new,
 	.pmu = gk110_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
@@ -1779,6 +1840,7 @@ nvf1_chipset = {
 	.mc = gf106_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
+	.pci = nv40_pci_new,
 	.pmu = gk110_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
@@ -1814,6 +1876,7 @@ nv106_chipset = {
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
+	.pci = nv40_pci_new,
 	.pmu = gk208_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
@@ -1849,6 +1912,7 @@ nv108_chipset = {
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
+	.pci = nv40_pci_new,
 	.pmu = gk208_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
@@ -1884,6 +1948,7 @@ nv117_chipset = {
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
+	.pci = nv40_pci_new,
 	.pmu = gm107_pmu_new,
 	.therm = gm107_therm_new,
 	.timer = gk20a_timer_new,
@@ -1913,6 +1978,7 @@ nv124_chipset = {
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
+	.pci = nv40_pci_new,
 	.pmu = gm107_pmu_new,
 	.timer = gk20a_timer_new,
 	.ce[0] = gm204_ce_new,
@@ -1942,6 +2008,7 @@ nv126_chipset = {
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
+	.pci = nv40_pci_new,
 	.pmu = gm107_pmu_new,
 	.timer = gk20a_timer_new,
 	.ce[0] = gm204_ce_new,
@@ -1966,7 +2033,6 @@ nv12b_chipset = {
 	.ltc = gm107_ltc_new,
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
-	.mmu = gf100_mmu_new,
 	.timer = gk20a_timer_new,
 	.ce[2] = gm204_ce_new,
 	.dma = gf119_dma_new,
@@ -2018,6 +2084,7 @@ nvkm_device_subdev(struct nvkm_device *device, int index)
 	_(MC     , device->mc     , &device->mc->subdev);
 	_(MMU    , device->mmu    , &device->mmu->subdev);
 	_(MXM    , device->mxm    ,  device->mxm);
+	_(PCI    , device->pci    , &device->pci->subdev);
 	_(PMU    , device->pmu    , &device->pmu->subdev);
 	_(THERM  , device->therm  , &device->therm->subdev);
 	_(TIMER  , device->timer  , &device->timer->subdev);
@@ -2504,6 +2571,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		_(NVKM_SUBDEV_MC     ,      mc);
 		_(NVKM_SUBDEV_MMU    ,     mmu);
 		_(NVKM_SUBDEV_MXM    ,     mxm);
+		_(NVKM_SUBDEV_PCI    ,     pci);
 		_(NVKM_SUBDEV_PMU    ,     pmu);
 		_(NVKM_SUBDEV_THERM  ,   therm);
 		_(NVKM_SUBDEV_TIMER  ,   timer);

commit 68f3f702b6a430a8d1e909455a60d26c0f2da530
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:22 2015 +1000

    drm/nouveau/core: remove the remainder of the previous style
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 48cc06372c9c..b67cb3771948 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1975,36 +1975,6 @@ nv12b_chipset = {
 	.sw = gf100_sw_new,
 };
 
-#include <core/client.h>
-
-struct nvkm_device *
-nv_device(void *obj)
-{
-	struct nvkm_object *device = nv_object(obj);
-
-	if (device->engine == NULL) {
-		while (device && device->parent) {
-			if (!nv_iclass(device, NV_SUBDEV_CLASS) &&
-			    device->parent == &nvkm_client(device)->object) {
-				struct {
-					struct nvkm_object base;
-					struct nvkm_device *device;
-				} *udevice = (void *)device;
-				return udevice->device;
-			}
-			device = device->parent;
-		}
-	} else {
-		device = &nv_object(obj)->engine->subdev.object;
-		if (device && device->parent)
-			device = device->parent;
-	}
-#if CONFIG_NOUVEAU_DEBUG >= NV_DBG_PARANOIA
-	BUG_ON(!device);
-#endif
-	return (void *)device;
-}
-
 static int
 nvkm_device_event_ctor(struct nvkm_object *object, void *data, u32 size,
 		       struct nvkm_notify *notify)
@@ -2032,7 +2002,7 @@ nvkm_device_subdev(struct nvkm_device *device, int index)
 		return NULL;
 
 	switch (index) {
-#define _(n,p,m) case NVDEV_SUBDEV_##n: if (p) return (m); break
+#define _(n,p,m) case NVKM_SUBDEV_##n: if (p) return (m); break
 	_(BAR    , device->bar    , &device->bar->subdev);
 	_(VBIOS  , device->bios   , &device->bios->subdev);
 	_(BUS    , device->bus    , &device->bus->subdev);
@@ -2069,7 +2039,7 @@ nvkm_device_engine(struct nvkm_device *device, int index)
 		return NULL;
 
 	switch (index) {
-#define _(n,p,m) case NVDEV_ENGINE_##n: if (p) return (m); break
+#define _(n,p,m) case NVKM_ENGINE_##n: if (p) return (m); break
 	_(BSP    , device->bsp    ,  device->bsp);
 	_(CE0    , device->ce[0]  ,  device->ce[0]);
 	_(CE1    , device->ce[1]  ,  device->ce[1]);
@@ -2112,7 +2082,7 @@ nvkm_device_fini(struct nvkm_device *device, bool suspend)
 
 	nvkm_acpi_fini(device);
 
-	for (i = NVDEV_SUBDEV_NR - 1; i >= 0; i--) {
+	for (i = NVKM_SUBDEV_NR - 1; i >= 0; i--) {
 		if ((subdev = nvkm_device_subdev(device, i))) {
 			ret = nvkm_subdev_fini(subdev, suspend);
 			if (ret && suspend)
@@ -2135,7 +2105,7 @@ nvkm_device_fini(struct nvkm_device *device, bool suspend)
 			if (rret)
 				nvkm_fatal(subdev, "failed restart, %d\n", ret);
 		}
-	} while (++i < NVDEV_SUBDEV_NR);
+	} while (++i < NVKM_SUBDEV_NR);
 
 	nvdev_trace(device, "%s failed with %d\n", action, ret);
 	return ret;
@@ -2157,7 +2127,7 @@ nvkm_device_preinit(struct nvkm_device *device)
 			goto fail;
 	}
 
-	for (i = 0; i < NVDEV_SUBDEV_NR; i++) {
+	for (i = 0; i < NVKM_SUBDEV_NR; i++) {
 		if ((subdev = nvkm_device_subdev(device, i))) {
 			ret = nvkm_subdev_preinit(subdev);
 			if (ret)
@@ -2182,7 +2152,7 @@ int
 nvkm_device_init(struct nvkm_device *device)
 {
 	struct nvkm_subdev *subdev;
-	int ret, i = 0, c;
+	int ret, i;
 	s64 time;
 
 	ret = nvkm_device_preinit(device);
@@ -2194,80 +2164,11 @@ nvkm_device_init(struct nvkm_device *device)
 	nvdev_trace(device, "init running...\n");
 	time = ktime_to_us(ktime_get());
 
-	for (i = 0, c = 0; i < NVDEV_SUBDEV_NR; i++) {
-#define _(s,m) case s: if (device->oclass[s] && !device->m) {          \
-		ret = nvkm_object_old(nv_object(device), NULL,                \
-				       device->oclass[s], NULL,  (s),          \
-				       (struct nvkm_object **)&device->m);     \
-		if (ret == -ENODEV) {                                          \
-			device->oclass[s] = NULL;                              \
-			continue;                                              \
-		}                                                              \
-		if (ret)                                                       \
-			goto fail;                                             \
-} break
-		switch (i) {
-		_(NVDEV_SUBDEV_BAR    ,     bar);
-		_(NVDEV_SUBDEV_VBIOS  ,    bios);
-		_(NVDEV_SUBDEV_BUS    ,     bus);
-		_(NVDEV_SUBDEV_CLK    ,     clk);
-		_(NVDEV_SUBDEV_DEVINIT, devinit);
-		_(NVDEV_SUBDEV_FB     ,      fb);
-		_(NVDEV_SUBDEV_FUSE   ,    fuse);
-		_(NVDEV_SUBDEV_GPIO   ,    gpio);
-		_(NVDEV_SUBDEV_I2C    ,     i2c);
-		_(NVDEV_SUBDEV_IBUS   ,    ibus);
-		_(NVDEV_SUBDEV_INSTMEM,    imem);
-		_(NVDEV_SUBDEV_LTC    ,     ltc);
-		_(NVDEV_SUBDEV_MC     ,      mc);
-		_(NVDEV_SUBDEV_MMU    ,     mmu);
-		_(NVDEV_SUBDEV_MXM    ,     mxm);
-		_(NVDEV_SUBDEV_PMU    ,     pmu);
-		_(NVDEV_SUBDEV_THERM  ,   therm);
-		_(NVDEV_SUBDEV_TIMER  ,   timer);
-		_(NVDEV_SUBDEV_VOLT   ,    volt);
-		_(NVDEV_ENGINE_BSP    ,     bsp);
-		_(NVDEV_ENGINE_CE0    ,   ce[0]);
-		_(NVDEV_ENGINE_CE1    ,   ce[1]);
-		_(NVDEV_ENGINE_CE2    ,   ce[2]);
-		_(NVDEV_ENGINE_CIPHER ,  cipher);
-		_(NVDEV_ENGINE_DISP   ,    disp);
-		_(NVDEV_ENGINE_DMAOBJ ,     dma);
-		_(NVDEV_ENGINE_FIFO   ,    fifo);
-		_(NVDEV_ENGINE_GR     ,      gr);
-		_(NVDEV_ENGINE_IFB    ,     ifb);
-		_(NVDEV_ENGINE_ME     ,      me);
-		_(NVDEV_ENGINE_MPEG   ,    mpeg);
-		_(NVDEV_ENGINE_MSENC  ,   msenc);
-		_(NVDEV_ENGINE_MSPDEC ,  mspdec);
-		_(NVDEV_ENGINE_MSPPP  ,   msppp);
-		_(NVDEV_ENGINE_MSVLD  ,   msvld);
-		_(NVDEV_ENGINE_PM     ,      pm);
-		_(NVDEV_ENGINE_SEC    ,     sec);
-		_(NVDEV_ENGINE_SW     ,      sw);
-		_(NVDEV_ENGINE_VIC    ,     vic);
-		_(NVDEV_ENGINE_VP     ,      vp);
-		default:
-			WARN_ON(1);
-			continue;
-		}
-#undef _
-
-		/* note: can't init *any* subdevs until devinit has been run
-		 * due to not knowing exactly what the vbios init tables will
-		 * mess with.  devinit also can't be run until all of its
-		 * dependencies have been created.
-		 *
-		 * this code delays init of any subdev until all of devinit's
-		 * dependencies have been created, and then initialises each
-		 * subdev in turn as they're created.
-		 */
-		while (i >= NVDEV_SUBDEV_DEVINIT_LAST && c <= i) {
-			if ((subdev = nvkm_device_subdev(device, c++))) {
-				ret = nvkm_subdev_init(subdev);
-				if (ret)
-					goto fail;
-			}
+	for (i = 0; i < NVKM_SUBDEV_NR; i++) {
+		if ((subdev = nvkm_device_subdev(device, i))) {
+			ret = nvkm_subdev_init(subdev);
+			if (ret)
+				goto fail;
 		}
 	}
 
@@ -2336,7 +2237,7 @@ nvkm_device_del(struct nvkm_device **pdevice)
 	if (device) {
 		mutex_lock(&nv_devices_mutex);
 		device->disable_mask = 0;
-		for (i = NVDEV_SUBDEV_NR - 1; i >= 0; i--) {
+		for (i = NVKM_SUBDEV_NR - 1; i >= 0; i--) {
 			struct nvkm_subdev *subdev =
 				nvkm_device_subdev(device, i);
 			nvkm_subdev_del(&subdev);
@@ -2357,10 +2258,6 @@ nvkm_device_del(struct nvkm_device **pdevice)
 	}
 }
 
-static const struct nvkm_engine_func
-nvkm_device_func = {
-};
-
 int
 nvkm_device_ctor(const struct nvkm_device_func *func,
 		 const struct nvkm_device_quirk *quirk,
@@ -2397,12 +2294,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 	device->dbgopt = dbg;
 	device->name = name;
 	list_add_tail(&device->head, &nv_devices);
-
-	ret = nvkm_engine_ctor(&nvkm_device_func, device, 0, 0,
-			       true, &device->engine);
-	device->engine.subdev.object.parent = NULL;
-	if (ret)
-		goto done;
+	device->debug = nvkm_dbgopt(device->dbgopt, "device");
 
 	ret = nvkm_event_init(&nvkm_device_event_func, 1, 1, &device->event);
 	if (ret)
@@ -2472,23 +2364,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 			device->card_type = NV_04;
 		}
 
-		switch (device->card_type) {
-		case NV_04: ret = nv04_identify(device); break;
-		case NV_10:
-		case NV_11: ret = nv10_identify(device); break;
-		case NV_20: ret = nv20_identify(device); break;
-		case NV_30: ret = nv30_identify(device); break;
-		case NV_40: ret = nv40_identify(device); break;
-		case NV_50: ret = nv50_identify(device); break;
-		case NV_C0: ret = gf100_identify(device); break;
-		case NV_E0: ret = gk104_identify(device); break;
-		case GM100: ret = gm100_identify(device); break;
-		default:
-			ret = -EINVAL;
-			break;
-		}
-
-		switch (!ret * device->chipset) {
+		switch (device->chipset) {
 		case 0x004: device->chip = &nv4_chipset; break;
 		case 0x005: device->chip = &nv5_chipset; break;
 		case 0x010: device->chip = &nv10_chipset; break;
@@ -2594,16 +2470,9 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		}
 	}
 
-	/* disable subdevs that aren't required (used by tools) */
-	for (i = 0; i < NVDEV_SUBDEV_NR; i++) {
-		if (!(subdev_mask & (1ULL << i)))
-			device->oclass[i] = NULL;
-	}
-
-	atomic_set(&device->engine.subdev.object.usecount, 2);
 	mutex_init(&device->mutex);
 
-	for (i = 0; i < NVDEV_SUBDEV_NR; i++) {
+	for (i = 0; i < NVKM_SUBDEV_NR; i++) {
 #define _(s,m) case s:                                                         \
 	if (device->chip->m && (subdev_mask & (1ULL << (s)))) {                \
 		ret = device->chip->m(device, (s), &device->m);                \
@@ -2620,46 +2489,46 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 	}                                                                      \
 	break
 		switch (i) {
-		_(NVDEV_SUBDEV_BAR    ,     bar);
-		_(NVDEV_SUBDEV_VBIOS  ,    bios);
-		_(NVDEV_SUBDEV_BUS    ,     bus);
-		_(NVDEV_SUBDEV_CLK    ,     clk);
-		_(NVDEV_SUBDEV_DEVINIT, devinit);
-		_(NVDEV_SUBDEV_FB     ,      fb);
-		_(NVDEV_SUBDEV_FUSE   ,    fuse);
-		_(NVDEV_SUBDEV_GPIO   ,    gpio);
-		_(NVDEV_SUBDEV_I2C    ,     i2c);
-		_(NVDEV_SUBDEV_IBUS   ,    ibus);
-		_(NVDEV_SUBDEV_INSTMEM,    imem);
-		_(NVDEV_SUBDEV_LTC    ,     ltc);
-		_(NVDEV_SUBDEV_MC     ,      mc);
-		_(NVDEV_SUBDEV_MMU    ,     mmu);
-		_(NVDEV_SUBDEV_MXM    ,     mxm);
-		_(NVDEV_SUBDEV_PMU    ,     pmu);
-		_(NVDEV_SUBDEV_THERM  ,   therm);
-		_(NVDEV_SUBDEV_TIMER  ,   timer);
-		_(NVDEV_SUBDEV_VOLT   ,    volt);
-		_(NVDEV_ENGINE_BSP    ,     bsp);
-		_(NVDEV_ENGINE_CE0    ,   ce[0]);
-		_(NVDEV_ENGINE_CE1    ,   ce[1]);
-		_(NVDEV_ENGINE_CE2    ,   ce[2]);
-		_(NVDEV_ENGINE_CIPHER ,  cipher);
-		_(NVDEV_ENGINE_DISP   ,    disp);
-		_(NVDEV_ENGINE_DMAOBJ ,     dma);
-		_(NVDEV_ENGINE_FIFO   ,    fifo);
-		_(NVDEV_ENGINE_GR     ,      gr);
-		_(NVDEV_ENGINE_IFB    ,     ifb);
-		_(NVDEV_ENGINE_ME     ,      me);
-		_(NVDEV_ENGINE_MPEG   ,    mpeg);
-		_(NVDEV_ENGINE_MSENC  ,   msenc);
-		_(NVDEV_ENGINE_MSPDEC ,  mspdec);
-		_(NVDEV_ENGINE_MSPPP  ,   msppp);
-		_(NVDEV_ENGINE_MSVLD  ,   msvld);
-		_(NVDEV_ENGINE_PM     ,      pm);
-		_(NVDEV_ENGINE_SEC    ,     sec);
-		_(NVDEV_ENGINE_SW     ,      sw);
-		_(NVDEV_ENGINE_VIC    ,     vic);
-		_(NVDEV_ENGINE_VP     ,      vp);
+		_(NVKM_SUBDEV_BAR    ,     bar);
+		_(NVKM_SUBDEV_VBIOS  ,    bios);
+		_(NVKM_SUBDEV_BUS    ,     bus);
+		_(NVKM_SUBDEV_CLK    ,     clk);
+		_(NVKM_SUBDEV_DEVINIT, devinit);
+		_(NVKM_SUBDEV_FB     ,      fb);
+		_(NVKM_SUBDEV_FUSE   ,    fuse);
+		_(NVKM_SUBDEV_GPIO   ,    gpio);
+		_(NVKM_SUBDEV_I2C    ,     i2c);
+		_(NVKM_SUBDEV_IBUS   ,    ibus);
+		_(NVKM_SUBDEV_INSTMEM,    imem);
+		_(NVKM_SUBDEV_LTC    ,     ltc);
+		_(NVKM_SUBDEV_MC     ,      mc);
+		_(NVKM_SUBDEV_MMU    ,     mmu);
+		_(NVKM_SUBDEV_MXM    ,     mxm);
+		_(NVKM_SUBDEV_PMU    ,     pmu);
+		_(NVKM_SUBDEV_THERM  ,   therm);
+		_(NVKM_SUBDEV_TIMER  ,   timer);
+		_(NVKM_SUBDEV_VOLT   ,    volt);
+		_(NVKM_ENGINE_BSP    ,     bsp);
+		_(NVKM_ENGINE_CE0    ,   ce[0]);
+		_(NVKM_ENGINE_CE1    ,   ce[1]);
+		_(NVKM_ENGINE_CE2    ,   ce[2]);
+		_(NVKM_ENGINE_CIPHER ,  cipher);
+		_(NVKM_ENGINE_DISP   ,    disp);
+		_(NVKM_ENGINE_DMAOBJ ,     dma);
+		_(NVKM_ENGINE_FIFO   ,    fifo);
+		_(NVKM_ENGINE_GR     ,      gr);
+		_(NVKM_ENGINE_IFB    ,     ifb);
+		_(NVKM_ENGINE_ME     ,      me);
+		_(NVKM_ENGINE_MPEG   ,    mpeg);
+		_(NVKM_ENGINE_MSENC  ,   msenc);
+		_(NVKM_ENGINE_MSPDEC ,  mspdec);
+		_(NVKM_ENGINE_MSPPP  ,   msppp);
+		_(NVKM_ENGINE_MSVLD  ,   msvld);
+		_(NVKM_ENGINE_PM     ,      pm);
+		_(NVKM_ENGINE_SEC    ,     sec);
+		_(NVKM_ENGINE_SW     ,      sw);
+		_(NVKM_ENGINE_VIC    ,     vic);
+		_(NVKM_ENGINE_VP     ,      vp);
 		default:
 			WARN_ON(1);
 			continue;

commit 7624fc011e56902a83e409b14d6c1efa75aa4a58
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:22 2015 +1000

    drm/nouveau/mpeg: convert to new-style nvkm_engine
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 302122c059b5..48cc06372c9c 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -381,7 +381,7 @@ nv31_chipset = {
 	.dma = nv04_dma_new,
 	.fifo = nv17_fifo_new,
 	.gr = nv30_gr_new,
-//	.mpeg = nv31_mpeg_new,
+	.mpeg = nv31_mpeg_new,
 	.sw = nv10_sw_new,
 };
 
@@ -403,7 +403,7 @@ nv34_chipset = {
 	.dma = nv04_dma_new,
 	.fifo = nv17_fifo_new,
 	.gr = nv34_gr_new,
-//	.mpeg = nv31_mpeg_new,
+	.mpeg = nv31_mpeg_new,
 	.sw = nv10_sw_new,
 };
 
@@ -446,7 +446,7 @@ nv36_chipset = {
 	.dma = nv04_dma_new,
 	.fifo = nv17_fifo_new,
 	.gr = nv35_gr_new,
-//	.mpeg = nv31_mpeg_new,
+	.mpeg = nv31_mpeg_new,
 	.sw = nv10_sw_new,
 };
 
@@ -470,7 +470,7 @@ nv40_chipset = {
 	.dma = nv04_dma_new,
 	.fifo = nv40_fifo_new,
 	.gr = nv40_gr_new,
-//	.mpeg = nv40_mpeg_new,
+	.mpeg = nv40_mpeg_new,
 	.pm = nv40_pm_new,
 	.sw = nv10_sw_new,
 };
@@ -495,7 +495,7 @@ nv41_chipset = {
 	.dma = nv04_dma_new,
 	.fifo = nv40_fifo_new,
 	.gr = nv40_gr_new,
-//	.mpeg = nv40_mpeg_new,
+	.mpeg = nv40_mpeg_new,
 	.pm = nv40_pm_new,
 	.sw = nv10_sw_new,
 };
@@ -520,7 +520,7 @@ nv42_chipset = {
 	.dma = nv04_dma_new,
 	.fifo = nv40_fifo_new,
 	.gr = nv40_gr_new,
-//	.mpeg = nv40_mpeg_new,
+	.mpeg = nv40_mpeg_new,
 	.pm = nv40_pm_new,
 	.sw = nv10_sw_new,
 };
@@ -545,7 +545,7 @@ nv43_chipset = {
 	.dma = nv04_dma_new,
 	.fifo = nv40_fifo_new,
 	.gr = nv40_gr_new,
-//	.mpeg = nv40_mpeg_new,
+	.mpeg = nv40_mpeg_new,
 	.pm = nv40_pm_new,
 	.sw = nv10_sw_new,
 };
@@ -570,7 +570,7 @@ nv44_chipset = {
 	.dma = nv04_dma_new,
 	.fifo = nv40_fifo_new,
 	.gr = nv44_gr_new,
-//	.mpeg = nv44_mpeg_new,
+	.mpeg = nv44_mpeg_new,
 	.pm = nv40_pm_new,
 	.sw = nv10_sw_new,
 };
@@ -595,7 +595,7 @@ nv45_chipset = {
 	.dma = nv04_dma_new,
 	.fifo = nv40_fifo_new,
 	.gr = nv40_gr_new,
-//	.mpeg = nv44_mpeg_new,
+	.mpeg = nv44_mpeg_new,
 	.pm = nv40_pm_new,
 	.sw = nv10_sw_new,
 };
@@ -620,7 +620,7 @@ nv46_chipset = {
 	.dma = nv04_dma_new,
 	.fifo = nv40_fifo_new,
 	.gr = nv44_gr_new,
-//	.mpeg = nv44_mpeg_new,
+	.mpeg = nv44_mpeg_new,
 	.pm = nv40_pm_new,
 	.sw = nv10_sw_new,
 };
@@ -645,7 +645,7 @@ nv47_chipset = {
 	.dma = nv04_dma_new,
 	.fifo = nv40_fifo_new,
 	.gr = nv40_gr_new,
-//	.mpeg = nv44_mpeg_new,
+	.mpeg = nv44_mpeg_new,
 	.pm = nv40_pm_new,
 	.sw = nv10_sw_new,
 };
@@ -670,7 +670,7 @@ nv49_chipset = {
 	.dma = nv04_dma_new,
 	.fifo = nv40_fifo_new,
 	.gr = nv40_gr_new,
-//	.mpeg = nv44_mpeg_new,
+	.mpeg = nv44_mpeg_new,
 	.pm = nv40_pm_new,
 	.sw = nv10_sw_new,
 };
@@ -695,7 +695,7 @@ nv4a_chipset = {
 	.dma = nv04_dma_new,
 	.fifo = nv40_fifo_new,
 	.gr = nv44_gr_new,
-//	.mpeg = nv44_mpeg_new,
+	.mpeg = nv44_mpeg_new,
 	.pm = nv40_pm_new,
 	.sw = nv10_sw_new,
 };
@@ -720,7 +720,7 @@ nv4b_chipset = {
 	.dma = nv04_dma_new,
 	.fifo = nv40_fifo_new,
 	.gr = nv40_gr_new,
-//	.mpeg = nv44_mpeg_new,
+	.mpeg = nv44_mpeg_new,
 	.pm = nv40_pm_new,
 	.sw = nv10_sw_new,
 };
@@ -745,7 +745,7 @@ nv4c_chipset = {
 	.dma = nv04_dma_new,
 	.fifo = nv40_fifo_new,
 	.gr = nv44_gr_new,
-//	.mpeg = nv44_mpeg_new,
+	.mpeg = nv44_mpeg_new,
 	.pm = nv40_pm_new,
 	.sw = nv10_sw_new,
 };
@@ -770,7 +770,7 @@ nv4e_chipset = {
 	.dma = nv04_dma_new,
 	.fifo = nv40_fifo_new,
 	.gr = nv44_gr_new,
-//	.mpeg = nv44_mpeg_new,
+	.mpeg = nv44_mpeg_new,
 	.pm = nv40_pm_new,
 	.sw = nv10_sw_new,
 };
@@ -798,7 +798,7 @@ nv50_chipset = {
 	.dma = nv50_dma_new,
 	.fifo = nv50_fifo_new,
 	.gr = nv50_gr_new,
-//	.mpeg = nv50_mpeg_new,
+	.mpeg = nv50_mpeg_new,
 	.pm = nv50_pm_new,
 	.sw = nv50_sw_new,
 };
@@ -823,7 +823,7 @@ nv63_chipset = {
 	.dma = nv04_dma_new,
 	.fifo = nv40_fifo_new,
 	.gr = nv44_gr_new,
-//	.mpeg = nv44_mpeg_new,
+	.mpeg = nv44_mpeg_new,
 	.pm = nv40_pm_new,
 	.sw = nv10_sw_new,
 };
@@ -848,7 +848,7 @@ nv67_chipset = {
 	.dma = nv04_dma_new,
 	.fifo = nv40_fifo_new,
 	.gr = nv44_gr_new,
-//	.mpeg = nv44_mpeg_new,
+	.mpeg = nv44_mpeg_new,
 	.pm = nv40_pm_new,
 	.sw = nv10_sw_new,
 };
@@ -873,7 +873,7 @@ nv68_chipset = {
 	.dma = nv04_dma_new,
 	.fifo = nv40_fifo_new,
 	.gr = nv44_gr_new,
-//	.mpeg = nv44_mpeg_new,
+	.mpeg = nv44_mpeg_new,
 	.pm = nv40_pm_new,
 	.sw = nv10_sw_new,
 };
@@ -903,7 +903,7 @@ nv84_chipset = {
 	.dma = nv50_dma_new,
 	.fifo = g84_fifo_new,
 	.gr = g84_gr_new,
-//	.mpeg = g84_mpeg_new,
+	.mpeg = g84_mpeg_new,
 	.pm = g84_pm_new,
 	.sw = nv50_sw_new,
 	.vp = g84_vp_new,
@@ -934,7 +934,7 @@ nv86_chipset = {
 	.dma = nv50_dma_new,
 	.fifo = g84_fifo_new,
 	.gr = g84_gr_new,
-//	.mpeg = g84_mpeg_new,
+	.mpeg = g84_mpeg_new,
 	.pm = g84_pm_new,
 	.sw = nv50_sw_new,
 	.vp = g84_vp_new,
@@ -965,7 +965,7 @@ nv92_chipset = {
 	.dma = nv50_dma_new,
 	.fifo = g84_fifo_new,
 	.gr = g84_gr_new,
-//	.mpeg = g84_mpeg_new,
+	.mpeg = g84_mpeg_new,
 	.pm = g84_pm_new,
 	.sw = nv50_sw_new,
 	.vp = g84_vp_new,
@@ -996,7 +996,7 @@ nv94_chipset = {
 	.dma = nv50_dma_new,
 	.fifo = g84_fifo_new,
 	.gr = g84_gr_new,
-//	.mpeg = g84_mpeg_new,
+	.mpeg = g84_mpeg_new,
 	.pm = g84_pm_new,
 	.sw = nv50_sw_new,
 	.vp = g84_vp_new,
@@ -1025,7 +1025,7 @@ nv96_chipset = {
 	.fifo = g84_fifo_new,
 	.gr = g84_gr_new,
 	.gr = nv50_gr_new,
-//	.mpeg = g84_mpeg_new,
+	.mpeg = g84_mpeg_new,
 	.vp = g84_vp_new,
 	.cipher = g84_cipher_new,
 	.bsp = g84_bsp_new,
@@ -1089,7 +1089,7 @@ nva0_chipset = {
 	.dma = nv50_dma_new,
 	.fifo = g84_fifo_new,
 	.gr = gt200_gr_new,
-//	.mpeg = g84_mpeg_new,
+	.mpeg = g84_mpeg_new,
 	.pm = gt200_pm_new,
 	.sw = nv50_sw_new,
 	.vp = g84_vp_new,
@@ -1120,7 +1120,7 @@ nva3_chipset = {
 	.dma = nv50_dma_new,
 	.fifo = g84_fifo_new,
 	.gr = gt215_gr_new,
-//	.mpeg = g84_mpeg_new,
+	.mpeg = g84_mpeg_new,
 	.mspdec = gt215_mspdec_new,
 	.msppp = gt215_msppp_new,
 	.msvld = gt215_msvld_new,

commit 6f41c7c56929b3a2ad943d5b6dd4d66d716e74d7
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:22 2015 +1000

    drm/nouveau/sw: convert to new-style nvkm_engine
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index c954ae4189a9..302122c059b5 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -90,7 +90,7 @@ nv4_chipset = {
 	.dma = nv04_dma_new,
 	.fifo = nv04_fifo_new,
 	.gr = nv04_gr_new,
-//	.sw = nv04_sw_new,
+	.sw = nv04_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -110,7 +110,7 @@ nv5_chipset = {
 	.dma = nv04_dma_new,
 	.fifo = nv04_fifo_new,
 	.gr = nv04_gr_new,
-//	.sw = nv04_sw_new,
+	.sw = nv04_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -150,7 +150,7 @@ nv11_chipset = {
 	.dma = nv04_dma_new,
 	.fifo = nv10_fifo_new,
 	.gr = nv15_gr_new,
-//	.sw = nv10_sw_new,
+	.sw = nv10_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -171,7 +171,7 @@ nv15_chipset = {
 	.dma = nv04_dma_new,
 	.fifo = nv10_fifo_new,
 	.gr = nv15_gr_new,
-//	.sw = nv10_sw_new,
+	.sw = nv10_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -192,7 +192,7 @@ nv17_chipset = {
 	.dma = nv04_dma_new,
 	.fifo = nv17_fifo_new,
 	.gr = nv17_gr_new,
-//	.sw = nv10_sw_new,
+	.sw = nv10_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -213,7 +213,7 @@ nv18_chipset = {
 	.dma = nv04_dma_new,
 	.fifo = nv17_fifo_new,
 	.gr = nv17_gr_new,
-//	.sw = nv10_sw_new,
+	.sw = nv10_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -234,7 +234,7 @@ nv1a_chipset = {
 	.dma = nv04_dma_new,
 	.fifo = nv10_fifo_new,
 	.gr = nv15_gr_new,
-//	.sw = nv10_sw_new,
+	.sw = nv10_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -255,7 +255,7 @@ nv1f_chipset = {
 	.dma = nv04_dma_new,
 	.fifo = nv17_fifo_new,
 	.gr = nv17_gr_new,
-//	.sw = nv10_sw_new,
+	.sw = nv10_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -276,7 +276,7 @@ nv20_chipset = {
 	.dma = nv04_dma_new,
 	.fifo = nv17_fifo_new,
 	.gr = nv20_gr_new,
-//	.sw = nv10_sw_new,
+	.sw = nv10_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -297,7 +297,7 @@ nv25_chipset = {
 	.dma = nv04_dma_new,
 	.fifo = nv17_fifo_new,
 	.gr = nv25_gr_new,
-//	.sw = nv10_sw_new,
+	.sw = nv10_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -318,7 +318,7 @@ nv28_chipset = {
 	.dma = nv04_dma_new,
 	.fifo = nv17_fifo_new,
 	.gr = nv25_gr_new,
-//	.sw = nv10_sw_new,
+	.sw = nv10_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -339,7 +339,7 @@ nv2a_chipset = {
 	.dma = nv04_dma_new,
 	.fifo = nv17_fifo_new,
 	.gr = nv2a_gr_new,
-//	.sw = nv10_sw_new,
+	.sw = nv10_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -360,7 +360,7 @@ nv30_chipset = {
 	.dma = nv04_dma_new,
 	.fifo = nv17_fifo_new,
 	.gr = nv30_gr_new,
-//	.sw = nv10_sw_new,
+	.sw = nv10_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -382,7 +382,7 @@ nv31_chipset = {
 	.fifo = nv17_fifo_new,
 	.gr = nv30_gr_new,
 //	.mpeg = nv31_mpeg_new,
-//	.sw = nv10_sw_new,
+	.sw = nv10_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -404,7 +404,7 @@ nv34_chipset = {
 	.fifo = nv17_fifo_new,
 	.gr = nv34_gr_new,
 //	.mpeg = nv31_mpeg_new,
-//	.sw = nv10_sw_new,
+	.sw = nv10_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -425,7 +425,7 @@ nv35_chipset = {
 	.dma = nv04_dma_new,
 	.fifo = nv17_fifo_new,
 	.gr = nv35_gr_new,
-//	.sw = nv10_sw_new,
+	.sw = nv10_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -447,7 +447,7 @@ nv36_chipset = {
 	.fifo = nv17_fifo_new,
 	.gr = nv35_gr_new,
 //	.mpeg = nv31_mpeg_new,
-//	.sw = nv10_sw_new,
+	.sw = nv10_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -472,7 +472,7 @@ nv40_chipset = {
 	.gr = nv40_gr_new,
 //	.mpeg = nv40_mpeg_new,
 	.pm = nv40_pm_new,
-//	.sw = nv10_sw_new,
+	.sw = nv10_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -497,7 +497,7 @@ nv41_chipset = {
 	.gr = nv40_gr_new,
 //	.mpeg = nv40_mpeg_new,
 	.pm = nv40_pm_new,
-//	.sw = nv10_sw_new,
+	.sw = nv10_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -522,7 +522,7 @@ nv42_chipset = {
 	.gr = nv40_gr_new,
 //	.mpeg = nv40_mpeg_new,
 	.pm = nv40_pm_new,
-//	.sw = nv10_sw_new,
+	.sw = nv10_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -547,7 +547,7 @@ nv43_chipset = {
 	.gr = nv40_gr_new,
 //	.mpeg = nv40_mpeg_new,
 	.pm = nv40_pm_new,
-//	.sw = nv10_sw_new,
+	.sw = nv10_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -572,7 +572,7 @@ nv44_chipset = {
 	.gr = nv44_gr_new,
 //	.mpeg = nv44_mpeg_new,
 	.pm = nv40_pm_new,
-//	.sw = nv10_sw_new,
+	.sw = nv10_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -597,7 +597,7 @@ nv45_chipset = {
 	.gr = nv40_gr_new,
 //	.mpeg = nv44_mpeg_new,
 	.pm = nv40_pm_new,
-//	.sw = nv10_sw_new,
+	.sw = nv10_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -622,7 +622,7 @@ nv46_chipset = {
 	.gr = nv44_gr_new,
 //	.mpeg = nv44_mpeg_new,
 	.pm = nv40_pm_new,
-//	.sw = nv10_sw_new,
+	.sw = nv10_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -647,7 +647,7 @@ nv47_chipset = {
 	.gr = nv40_gr_new,
 //	.mpeg = nv44_mpeg_new,
 	.pm = nv40_pm_new,
-//	.sw = nv10_sw_new,
+	.sw = nv10_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -672,7 +672,7 @@ nv49_chipset = {
 	.gr = nv40_gr_new,
 //	.mpeg = nv44_mpeg_new,
 	.pm = nv40_pm_new,
-//	.sw = nv10_sw_new,
+	.sw = nv10_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -697,7 +697,7 @@ nv4a_chipset = {
 	.gr = nv44_gr_new,
 //	.mpeg = nv44_mpeg_new,
 	.pm = nv40_pm_new,
-//	.sw = nv10_sw_new,
+	.sw = nv10_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -722,7 +722,7 @@ nv4b_chipset = {
 	.gr = nv40_gr_new,
 //	.mpeg = nv44_mpeg_new,
 	.pm = nv40_pm_new,
-//	.sw = nv10_sw_new,
+	.sw = nv10_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -747,7 +747,7 @@ nv4c_chipset = {
 	.gr = nv44_gr_new,
 //	.mpeg = nv44_mpeg_new,
 	.pm = nv40_pm_new,
-//	.sw = nv10_sw_new,
+	.sw = nv10_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -772,7 +772,7 @@ nv4e_chipset = {
 	.gr = nv44_gr_new,
 //	.mpeg = nv44_mpeg_new,
 	.pm = nv40_pm_new,
-//	.sw = nv10_sw_new,
+	.sw = nv10_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -800,7 +800,7 @@ nv50_chipset = {
 	.gr = nv50_gr_new,
 //	.mpeg = nv50_mpeg_new,
 	.pm = nv50_pm_new,
-//	.sw = nv50_sw_new,
+	.sw = nv50_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -825,7 +825,7 @@ nv63_chipset = {
 	.gr = nv44_gr_new,
 //	.mpeg = nv44_mpeg_new,
 	.pm = nv40_pm_new,
-//	.sw = nv10_sw_new,
+	.sw = nv10_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -850,7 +850,7 @@ nv67_chipset = {
 	.gr = nv44_gr_new,
 //	.mpeg = nv44_mpeg_new,
 	.pm = nv40_pm_new,
-//	.sw = nv10_sw_new,
+	.sw = nv10_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -875,7 +875,7 @@ nv68_chipset = {
 	.gr = nv44_gr_new,
 //	.mpeg = nv44_mpeg_new,
 	.pm = nv40_pm_new,
-//	.sw = nv10_sw_new,
+	.sw = nv10_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -905,7 +905,7 @@ nv84_chipset = {
 	.gr = g84_gr_new,
 //	.mpeg = g84_mpeg_new,
 	.pm = g84_pm_new,
-//	.sw = nv50_sw_new,
+	.sw = nv50_sw_new,
 	.vp = g84_vp_new,
 };
 
@@ -936,7 +936,7 @@ nv86_chipset = {
 	.gr = g84_gr_new,
 //	.mpeg = g84_mpeg_new,
 	.pm = g84_pm_new,
-//	.sw = nv50_sw_new,
+	.sw = nv50_sw_new,
 	.vp = g84_vp_new,
 };
 
@@ -967,7 +967,7 @@ nv92_chipset = {
 	.gr = g84_gr_new,
 //	.mpeg = g84_mpeg_new,
 	.pm = g84_pm_new,
-//	.sw = nv50_sw_new,
+	.sw = nv50_sw_new,
 	.vp = g84_vp_new,
 };
 
@@ -998,7 +998,7 @@ nv94_chipset = {
 	.gr = g84_gr_new,
 //	.mpeg = g84_mpeg_new,
 	.pm = g84_pm_new,
-//	.sw = nv50_sw_new,
+	.sw = nv50_sw_new,
 	.vp = g84_vp_new,
 };
 
@@ -1023,8 +1023,8 @@ nv96_chipset = {
 	.volt = nv40_volt_new,
 	.dma = nv50_dma_new,
 	.fifo = g84_fifo_new,
-//	.sw = nv50_sw_new,
 	.gr = g84_gr_new,
+	.gr = nv50_gr_new,
 //	.mpeg = g84_mpeg_new,
 	.vp = g84_vp_new,
 	.cipher = g84_cipher_new,
@@ -1054,8 +1054,8 @@ nv98_chipset = {
 	.volt = nv40_volt_new,
 	.dma = nv50_dma_new,
 	.fifo = g84_fifo_new,
-//	.sw = nv50_sw_new,
 	.gr = g84_gr_new,
+	.sw = nv50_sw_new,
 	.mspdec = g98_mspdec_new,
 	.sec = g98_sec_new,
 	.msvld = g98_msvld_new,
@@ -1091,7 +1091,7 @@ nva0_chipset = {
 	.gr = gt200_gr_new,
 //	.mpeg = g84_mpeg_new,
 	.pm = gt200_pm_new,
-//	.sw = nv50_sw_new,
+	.sw = nv50_sw_new,
 	.vp = g84_vp_new,
 };
 
@@ -1125,7 +1125,7 @@ nva3_chipset = {
 	.msppp = gt215_msppp_new,
 	.msvld = gt215_msvld_new,
 	.pm = gt215_pm_new,
-//	.sw = nv50_sw_new,
+	.sw = nv50_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -1157,7 +1157,7 @@ nva5_chipset = {
 	.msppp = gt215_msppp_new,
 	.msvld = gt215_msvld_new,
 	.pm = gt215_pm_new,
-//	.sw = nv50_sw_new,
+	.sw = nv50_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -1189,7 +1189,7 @@ nva8_chipset = {
 	.msppp = gt215_msppp_new,
 	.msvld = gt215_msvld_new,
 	.pm = gt215_pm_new,
-//	.sw = nv50_sw_new,
+	.sw = nv50_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -1220,7 +1220,7 @@ nvaa_chipset = {
 	.msvld = g98_msvld_new,
 	.pm = g84_pm_new,
 	.sec = g98_sec_new,
-//	.sw = nv50_sw_new,
+	.sw = nv50_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -1251,7 +1251,7 @@ nvac_chipset = {
 	.msvld = g98_msvld_new,
 	.pm = g84_pm_new,
 	.sec = g98_sec_new,
-//	.sw = nv50_sw_new,
+	.sw = nv50_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -1283,7 +1283,7 @@ nvaf_chipset = {
 	.msppp = gt215_msppp_new,
 	.msvld = mcp89_msvld_new,
 	.pm = gt215_pm_new,
-//	.sw = nv50_sw_new,
+	.sw = nv50_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -1318,7 +1318,7 @@ nvc0_chipset = {
 	.msppp = gf100_msppp_new,
 	.msvld = gf100_msvld_new,
 	.pm = gf100_pm_new,
-//	.sw = gf100_sw_new,
+	.sw = gf100_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -1352,7 +1352,7 @@ nvc1_chipset = {
 	.msppp = gf100_msppp_new,
 	.msvld = gf100_msvld_new,
 	.pm = gf108_pm_new,
-//	.sw = gf100_sw_new,
+	.sw = gf100_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -1386,7 +1386,7 @@ nvc3_chipset = {
 	.msppp = gf100_msppp_new,
 	.msvld = gf100_msvld_new,
 	.pm = gf100_pm_new,
-//	.sw = gf100_sw_new,
+	.sw = gf100_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -1421,7 +1421,7 @@ nvc4_chipset = {
 	.msppp = gf100_msppp_new,
 	.msvld = gf100_msvld_new,
 	.pm = gf100_pm_new,
-//	.sw = gf100_sw_new,
+	.sw = gf100_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -1456,7 +1456,7 @@ nvc8_chipset = {
 	.msppp = gf100_msppp_new,
 	.msvld = gf100_msvld_new,
 	.pm = gf100_pm_new,
-//	.sw = gf100_sw_new,
+	.sw = gf100_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -1491,7 +1491,7 @@ nvce_chipset = {
 	.msppp = gf100_msppp_new,
 	.msvld = gf100_msvld_new,
 	.pm = gf100_pm_new,
-//	.sw = gf100_sw_new,
+	.sw = gf100_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -1525,7 +1525,7 @@ nvcf_chipset = {
 	.msppp = gf100_msppp_new,
 	.msvld = gf100_msvld_new,
 	.pm = gf100_pm_new,
-//	.sw = gf100_sw_new,
+	.sw = gf100_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -1557,7 +1557,7 @@ nvd7_chipset = {
 	.msppp = gf100_msppp_new,
 	.msvld = gf100_msvld_new,
 	.pm = gf117_pm_new,
-//	.sw = gf100_sw_new,
+	.sw = gf100_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -1591,7 +1591,7 @@ nvd9_chipset = {
 	.msppp = gf100_msppp_new,
 	.msvld = gf100_msvld_new,
 	.pm = gf117_pm_new,
-//	.sw = gf100_sw_new,
+	.sw = gf100_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -1627,7 +1627,7 @@ nve4_chipset = {
 	.msppp = gf100_msppp_new,
 	.msvld = gk104_msvld_new,
 	.pm = gk104_pm_new,
-//	.sw = gf100_sw_new,
+	.sw = gf100_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -1663,7 +1663,7 @@ nve6_chipset = {
 	.msppp = gf100_msppp_new,
 	.msvld = gk104_msvld_new,
 	.pm = gk104_pm_new,
-//	.sw = gf100_sw_new,
+	.sw = gf100_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -1699,7 +1699,7 @@ nve7_chipset = {
 	.msppp = gf100_msppp_new,
 	.msvld = gk104_msvld_new,
 	.pm = gk104_pm_new,
-//	.sw = gf100_sw_new,
+	.sw = gf100_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -1723,7 +1723,7 @@ nvea_chipset = {
 	.fifo = gk20a_fifo_new,
 	.gr = gk20a_gr_new,
 	.pm = gk104_pm_new,
-//	.sw = gf100_sw_new,
+	.sw = gf100_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -1758,7 +1758,7 @@ nvf0_chipset = {
 	.mspdec = gk104_mspdec_new,
 	.msppp = gf100_msppp_new,
 	.msvld = gk104_msvld_new,
-//	.sw = gf100_sw_new,
+	.sw = gf100_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -1793,7 +1793,7 @@ nvf1_chipset = {
 	.mspdec = gk104_mspdec_new,
 	.msppp = gf100_msppp_new,
 	.msvld = gk104_msvld_new,
-//	.sw = gf100_sw_new,
+	.sw = gf100_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -1828,7 +1828,7 @@ nv106_chipset = {
 	.mspdec = gk104_mspdec_new,
 	.msppp = gf100_msppp_new,
 	.msvld = gk104_msvld_new,
-//	.sw = gf100_sw_new,
+	.sw = gf100_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -1863,7 +1863,7 @@ nv108_chipset = {
 	.mspdec = gk104_mspdec_new,
 	.msppp = gf100_msppp_new,
 	.msvld = gk104_msvld_new,
-//	.sw = gf100_sw_new,
+	.sw = gf100_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -1893,7 +1893,7 @@ nv117_chipset = {
 	.dma = gf119_dma_new,
 	.fifo = gk208_fifo_new,
 	.gr = gm107_gr_new,
-//	.sw = gf100_sw_new,
+	.sw = gf100_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -1922,7 +1922,7 @@ nv124_chipset = {
 	.dma = gf119_dma_new,
 	.fifo = gm204_fifo_new,
 	.gr = gm204_gr_new,
-//	.sw = gf100_sw_new,
+	.sw = gf100_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -1951,7 +1951,7 @@ nv126_chipset = {
 	.dma = gf119_dma_new,
 	.fifo = gm204_fifo_new,
 	.gr = gm206_gr_new,
-//	.sw = gf100_sw_new,
+	.sw = gf100_sw_new,
 };
 
 static const struct nvkm_device_chip
@@ -1972,7 +1972,7 @@ nv12b_chipset = {
 	.dma = gf119_dma_new,
 	.fifo = gm20b_fifo_new,
 	.gr = gm20b_gr_new,
-//	.sw = gf100_sw_new,
+	.sw = gf100_sw_new,
 };
 
 #include <core/client.h>

commit 97070f23c60869830039b216ff88230f54ef7107
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:22 2015 +1000

    drm/nouveau/pm: convert to new-style nvkm_engine
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 3cf15d46f9d2..c954ae4189a9 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -471,7 +471,7 @@ nv40_chipset = {
 	.fifo = nv40_fifo_new,
 	.gr = nv40_gr_new,
 //	.mpeg = nv40_mpeg_new,
-//	.pm = nv40_pm_new,
+	.pm = nv40_pm_new,
 //	.sw = nv10_sw_new,
 };
 
@@ -496,7 +496,7 @@ nv41_chipset = {
 	.fifo = nv40_fifo_new,
 	.gr = nv40_gr_new,
 //	.mpeg = nv40_mpeg_new,
-//	.pm = nv40_pm_new,
+	.pm = nv40_pm_new,
 //	.sw = nv10_sw_new,
 };
 
@@ -521,7 +521,7 @@ nv42_chipset = {
 	.fifo = nv40_fifo_new,
 	.gr = nv40_gr_new,
 //	.mpeg = nv40_mpeg_new,
-//	.pm = nv40_pm_new,
+	.pm = nv40_pm_new,
 //	.sw = nv10_sw_new,
 };
 
@@ -546,7 +546,7 @@ nv43_chipset = {
 	.fifo = nv40_fifo_new,
 	.gr = nv40_gr_new,
 //	.mpeg = nv40_mpeg_new,
-//	.pm = nv40_pm_new,
+	.pm = nv40_pm_new,
 //	.sw = nv10_sw_new,
 };
 
@@ -571,7 +571,7 @@ nv44_chipset = {
 	.fifo = nv40_fifo_new,
 	.gr = nv44_gr_new,
 //	.mpeg = nv44_mpeg_new,
-//	.pm = nv40_pm_new,
+	.pm = nv40_pm_new,
 //	.sw = nv10_sw_new,
 };
 
@@ -596,7 +596,7 @@ nv45_chipset = {
 	.fifo = nv40_fifo_new,
 	.gr = nv40_gr_new,
 //	.mpeg = nv44_mpeg_new,
-//	.pm = nv40_pm_new,
+	.pm = nv40_pm_new,
 //	.sw = nv10_sw_new,
 };
 
@@ -621,7 +621,7 @@ nv46_chipset = {
 	.fifo = nv40_fifo_new,
 	.gr = nv44_gr_new,
 //	.mpeg = nv44_mpeg_new,
-//	.pm = nv40_pm_new,
+	.pm = nv40_pm_new,
 //	.sw = nv10_sw_new,
 };
 
@@ -646,7 +646,7 @@ nv47_chipset = {
 	.fifo = nv40_fifo_new,
 	.gr = nv40_gr_new,
 //	.mpeg = nv44_mpeg_new,
-//	.pm = nv40_pm_new,
+	.pm = nv40_pm_new,
 //	.sw = nv10_sw_new,
 };
 
@@ -671,7 +671,7 @@ nv49_chipset = {
 	.fifo = nv40_fifo_new,
 	.gr = nv40_gr_new,
 //	.mpeg = nv44_mpeg_new,
-//	.pm = nv40_pm_new,
+	.pm = nv40_pm_new,
 //	.sw = nv10_sw_new,
 };
 
@@ -696,7 +696,7 @@ nv4a_chipset = {
 	.fifo = nv40_fifo_new,
 	.gr = nv44_gr_new,
 //	.mpeg = nv44_mpeg_new,
-//	.pm = nv40_pm_new,
+	.pm = nv40_pm_new,
 //	.sw = nv10_sw_new,
 };
 
@@ -721,7 +721,7 @@ nv4b_chipset = {
 	.fifo = nv40_fifo_new,
 	.gr = nv40_gr_new,
 //	.mpeg = nv44_mpeg_new,
-//	.pm = nv40_pm_new,
+	.pm = nv40_pm_new,
 //	.sw = nv10_sw_new,
 };
 
@@ -746,7 +746,7 @@ nv4c_chipset = {
 	.fifo = nv40_fifo_new,
 	.gr = nv44_gr_new,
 //	.mpeg = nv44_mpeg_new,
-//	.pm = nv40_pm_new,
+	.pm = nv40_pm_new,
 //	.sw = nv10_sw_new,
 };
 
@@ -771,7 +771,7 @@ nv4e_chipset = {
 	.fifo = nv40_fifo_new,
 	.gr = nv44_gr_new,
 //	.mpeg = nv44_mpeg_new,
-//	.pm = nv40_pm_new,
+	.pm = nv40_pm_new,
 //	.sw = nv10_sw_new,
 };
 
@@ -799,7 +799,7 @@ nv50_chipset = {
 	.fifo = nv50_fifo_new,
 	.gr = nv50_gr_new,
 //	.mpeg = nv50_mpeg_new,
-//	.pm = nv50_pm_new,
+	.pm = nv50_pm_new,
 //	.sw = nv50_sw_new,
 };
 
@@ -824,7 +824,7 @@ nv63_chipset = {
 	.fifo = nv40_fifo_new,
 	.gr = nv44_gr_new,
 //	.mpeg = nv44_mpeg_new,
-//	.pm = nv40_pm_new,
+	.pm = nv40_pm_new,
 //	.sw = nv10_sw_new,
 };
 
@@ -849,7 +849,7 @@ nv67_chipset = {
 	.fifo = nv40_fifo_new,
 	.gr = nv44_gr_new,
 //	.mpeg = nv44_mpeg_new,
-//	.pm = nv40_pm_new,
+	.pm = nv40_pm_new,
 //	.sw = nv10_sw_new,
 };
 
@@ -874,7 +874,7 @@ nv68_chipset = {
 	.fifo = nv40_fifo_new,
 	.gr = nv44_gr_new,
 //	.mpeg = nv44_mpeg_new,
-//	.pm = nv40_pm_new,
+	.pm = nv40_pm_new,
 //	.sw = nv10_sw_new,
 };
 
@@ -904,7 +904,7 @@ nv84_chipset = {
 	.fifo = g84_fifo_new,
 	.gr = g84_gr_new,
 //	.mpeg = g84_mpeg_new,
-//	.pm = g84_pm_new,
+	.pm = g84_pm_new,
 //	.sw = nv50_sw_new,
 	.vp = g84_vp_new,
 };
@@ -935,7 +935,7 @@ nv86_chipset = {
 	.fifo = g84_fifo_new,
 	.gr = g84_gr_new,
 //	.mpeg = g84_mpeg_new,
-//	.pm = g84_pm_new,
+	.pm = g84_pm_new,
 //	.sw = nv50_sw_new,
 	.vp = g84_vp_new,
 };
@@ -966,7 +966,7 @@ nv92_chipset = {
 	.fifo = g84_fifo_new,
 	.gr = g84_gr_new,
 //	.mpeg = g84_mpeg_new,
-//	.pm = g84_pm_new,
+	.pm = g84_pm_new,
 //	.sw = nv50_sw_new,
 	.vp = g84_vp_new,
 };
@@ -997,7 +997,7 @@ nv94_chipset = {
 	.fifo = g84_fifo_new,
 	.gr = g84_gr_new,
 //	.mpeg = g84_mpeg_new,
-//	.pm = g84_pm_new,
+	.pm = g84_pm_new,
 //	.sw = nv50_sw_new,
 	.vp = g84_vp_new,
 };
@@ -1030,7 +1030,7 @@ nv96_chipset = {
 	.cipher = g84_cipher_new,
 	.bsp = g84_bsp_new,
 	.disp = g94_disp_new,
-//	.pm = g84_pm_new,
+	.pm = g84_pm_new,
 };
 
 static const struct nvkm_device_chip
@@ -1061,7 +1061,7 @@ nv98_chipset = {
 	.msvld = g98_msvld_new,
 	.msppp = g98_msppp_new,
 	.disp = g94_disp_new,
-//	.pm = g84_pm_new,
+	.pm = g84_pm_new,
 };
 
 static const struct nvkm_device_chip
@@ -1090,7 +1090,7 @@ nva0_chipset = {
 	.fifo = g84_fifo_new,
 	.gr = gt200_gr_new,
 //	.mpeg = g84_mpeg_new,
-//	.pm = gt200_pm_new,
+	.pm = gt200_pm_new,
 //	.sw = nv50_sw_new,
 	.vp = g84_vp_new,
 };
@@ -1124,7 +1124,7 @@ nva3_chipset = {
 	.mspdec = gt215_mspdec_new,
 	.msppp = gt215_msppp_new,
 	.msvld = gt215_msvld_new,
-//	.pm = gt215_pm_new,
+	.pm = gt215_pm_new,
 //	.sw = nv50_sw_new,
 };
 
@@ -1156,7 +1156,7 @@ nva5_chipset = {
 	.mspdec = gt215_mspdec_new,
 	.msppp = gt215_msppp_new,
 	.msvld = gt215_msvld_new,
-//	.pm = gt215_pm_new,
+	.pm = gt215_pm_new,
 //	.sw = nv50_sw_new,
 };
 
@@ -1188,7 +1188,7 @@ nva8_chipset = {
 	.mspdec = gt215_mspdec_new,
 	.msppp = gt215_msppp_new,
 	.msvld = gt215_msvld_new,
-//	.pm = gt215_pm_new,
+	.pm = gt215_pm_new,
 //	.sw = nv50_sw_new,
 };
 
@@ -1218,7 +1218,7 @@ nvaa_chipset = {
 	.mspdec = g98_mspdec_new,
 	.msppp = g98_msppp_new,
 	.msvld = g98_msvld_new,
-//	.pm = g84_pm_new,
+	.pm = g84_pm_new,
 	.sec = g98_sec_new,
 //	.sw = nv50_sw_new,
 };
@@ -1249,7 +1249,7 @@ nvac_chipset = {
 	.mspdec = g98_mspdec_new,
 	.msppp = g98_msppp_new,
 	.msvld = g98_msvld_new,
-//	.pm = g84_pm_new,
+	.pm = g84_pm_new,
 	.sec = g98_sec_new,
 //	.sw = nv50_sw_new,
 };
@@ -1282,7 +1282,7 @@ nvaf_chipset = {
 	.mspdec = gt215_mspdec_new,
 	.msppp = gt215_msppp_new,
 	.msvld = mcp89_msvld_new,
-//	.pm = gt215_pm_new,
+	.pm = gt215_pm_new,
 //	.sw = nv50_sw_new,
 };
 
@@ -1317,7 +1317,7 @@ nvc0_chipset = {
 	.mspdec = gf100_mspdec_new,
 	.msppp = gf100_msppp_new,
 	.msvld = gf100_msvld_new,
-//	.pm = gf100_pm_new,
+	.pm = gf100_pm_new,
 //	.sw = gf100_sw_new,
 };
 
@@ -1351,7 +1351,7 @@ nvc1_chipset = {
 	.mspdec = gf100_mspdec_new,
 	.msppp = gf100_msppp_new,
 	.msvld = gf100_msvld_new,
-//	.pm = gf108_pm_new,
+	.pm = gf108_pm_new,
 //	.sw = gf100_sw_new,
 };
 
@@ -1385,7 +1385,7 @@ nvc3_chipset = {
 	.mspdec = gf100_mspdec_new,
 	.msppp = gf100_msppp_new,
 	.msvld = gf100_msvld_new,
-//	.pm = gf100_pm_new,
+	.pm = gf100_pm_new,
 //	.sw = gf100_sw_new,
 };
 
@@ -1420,7 +1420,7 @@ nvc4_chipset = {
 	.mspdec = gf100_mspdec_new,
 	.msppp = gf100_msppp_new,
 	.msvld = gf100_msvld_new,
-//	.pm = gf100_pm_new,
+	.pm = gf100_pm_new,
 //	.sw = gf100_sw_new,
 };
 
@@ -1455,7 +1455,7 @@ nvc8_chipset = {
 	.mspdec = gf100_mspdec_new,
 	.msppp = gf100_msppp_new,
 	.msvld = gf100_msvld_new,
-//	.pm = gf100_pm_new,
+	.pm = gf100_pm_new,
 //	.sw = gf100_sw_new,
 };
 
@@ -1490,7 +1490,7 @@ nvce_chipset = {
 	.mspdec = gf100_mspdec_new,
 	.msppp = gf100_msppp_new,
 	.msvld = gf100_msvld_new,
-//	.pm = gf100_pm_new,
+	.pm = gf100_pm_new,
 //	.sw = gf100_sw_new,
 };
 
@@ -1524,7 +1524,7 @@ nvcf_chipset = {
 	.mspdec = gf100_mspdec_new,
 	.msppp = gf100_msppp_new,
 	.msvld = gf100_msvld_new,
-//	.pm = gf100_pm_new,
+	.pm = gf100_pm_new,
 //	.sw = gf100_sw_new,
 };
 
@@ -1556,7 +1556,7 @@ nvd7_chipset = {
 	.mspdec = gf100_mspdec_new,
 	.msppp = gf100_msppp_new,
 	.msvld = gf100_msvld_new,
-//	.pm = gf117_pm_new,
+	.pm = gf117_pm_new,
 //	.sw = gf100_sw_new,
 };
 
@@ -1590,7 +1590,7 @@ nvd9_chipset = {
 	.mspdec = gf100_mspdec_new,
 	.msppp = gf100_msppp_new,
 	.msvld = gf100_msvld_new,
-//	.pm = gf117_pm_new,
+	.pm = gf117_pm_new,
 //	.sw = gf100_sw_new,
 };
 
@@ -1626,7 +1626,7 @@ nve4_chipset = {
 	.mspdec = gk104_mspdec_new,
 	.msppp = gf100_msppp_new,
 	.msvld = gk104_msvld_new,
-//	.pm = gk104_pm_new,
+	.pm = gk104_pm_new,
 //	.sw = gf100_sw_new,
 };
 
@@ -1662,7 +1662,7 @@ nve6_chipset = {
 	.mspdec = gk104_mspdec_new,
 	.msppp = gf100_msppp_new,
 	.msvld = gk104_msvld_new,
-//	.pm = gk104_pm_new,
+	.pm = gk104_pm_new,
 //	.sw = gf100_sw_new,
 };
 
@@ -1698,7 +1698,7 @@ nve7_chipset = {
 	.mspdec = gk104_mspdec_new,
 	.msppp = gf100_msppp_new,
 	.msvld = gk104_msvld_new,
-//	.pm = gk104_pm_new,
+	.pm = gk104_pm_new,
 //	.sw = gf100_sw_new,
 };
 
@@ -1722,7 +1722,7 @@ nvea_chipset = {
 	.dma = gf119_dma_new,
 	.fifo = gk20a_fifo_new,
 	.gr = gk20a_gr_new,
-//	.pm = gk104_pm_new,
+	.pm = gk104_pm_new,
 //	.sw = gf100_sw_new,
 };
 
@@ -1758,7 +1758,6 @@ nvf0_chipset = {
 	.mspdec = gk104_mspdec_new,
 	.msppp = gf100_msppp_new,
 	.msvld = gk104_msvld_new,
-//	.pm = gk110_pm_new,
 //	.sw = gf100_sw_new,
 };
 
@@ -1794,7 +1793,6 @@ nvf1_chipset = {
 	.mspdec = gk104_mspdec_new,
 	.msppp = gf100_msppp_new,
 	.msvld = gk104_msvld_new,
-//	.pm = gk110_pm_new,
 //	.sw = gf100_sw_new,
 };
 

commit c85ee6ca79590cd51356bf24fb8936bc352138cf
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:22 2015 +1000

    drm/nouveau/gr: convert to new-style nvkm_engine
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 62395ab742c5..3cf15d46f9d2 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -89,7 +89,7 @@ nv4_chipset = {
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 	.fifo = nv04_fifo_new,
-//	.gr = nv04_gr_new,
+	.gr = nv04_gr_new,
 //	.sw = nv04_sw_new,
 };
 
@@ -109,7 +109,7 @@ nv5_chipset = {
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 	.fifo = nv04_fifo_new,
-//	.gr = nv04_gr_new,
+	.gr = nv04_gr_new,
 //	.sw = nv04_sw_new,
 };
 
@@ -129,7 +129,7 @@ nv10_chipset = {
 	.timer = nv04_timer_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
-//	.gr = nv10_gr_new,
+	.gr = nv10_gr_new,
 };
 
 static const struct nvkm_device_chip
@@ -149,7 +149,7 @@ nv11_chipset = {
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 	.fifo = nv10_fifo_new,
-//	.gr = nv10_gr_new,
+	.gr = nv15_gr_new,
 //	.sw = nv10_sw_new,
 };
 
@@ -170,7 +170,7 @@ nv15_chipset = {
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 	.fifo = nv10_fifo_new,
-//	.gr = nv10_gr_new,
+	.gr = nv15_gr_new,
 //	.sw = nv10_sw_new,
 };
 
@@ -191,7 +191,7 @@ nv17_chipset = {
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 	.fifo = nv17_fifo_new,
-//	.gr = nv10_gr_new,
+	.gr = nv17_gr_new,
 //	.sw = nv10_sw_new,
 };
 
@@ -212,7 +212,7 @@ nv18_chipset = {
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 	.fifo = nv17_fifo_new,
-//	.gr = nv10_gr_new,
+	.gr = nv17_gr_new,
 //	.sw = nv10_sw_new,
 };
 
@@ -233,7 +233,7 @@ nv1a_chipset = {
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 	.fifo = nv10_fifo_new,
-//	.gr = nv10_gr_new,
+	.gr = nv15_gr_new,
 //	.sw = nv10_sw_new,
 };
 
@@ -254,7 +254,7 @@ nv1f_chipset = {
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 	.fifo = nv17_fifo_new,
-//	.gr = nv10_gr_new,
+	.gr = nv17_gr_new,
 //	.sw = nv10_sw_new,
 };
 
@@ -275,7 +275,7 @@ nv20_chipset = {
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 	.fifo = nv17_fifo_new,
-//	.gr = nv20_gr_new,
+	.gr = nv20_gr_new,
 //	.sw = nv10_sw_new,
 };
 
@@ -296,7 +296,7 @@ nv25_chipset = {
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 	.fifo = nv17_fifo_new,
-//	.gr = nv25_gr_new,
+	.gr = nv25_gr_new,
 //	.sw = nv10_sw_new,
 };
 
@@ -317,7 +317,7 @@ nv28_chipset = {
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 	.fifo = nv17_fifo_new,
-//	.gr = nv25_gr_new,
+	.gr = nv25_gr_new,
 //	.sw = nv10_sw_new,
 };
 
@@ -338,7 +338,7 @@ nv2a_chipset = {
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 	.fifo = nv17_fifo_new,
-//	.gr = nv2a_gr_new,
+	.gr = nv2a_gr_new,
 //	.sw = nv10_sw_new,
 };
 
@@ -359,7 +359,7 @@ nv30_chipset = {
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 	.fifo = nv17_fifo_new,
-//	.gr = nv30_gr_new,
+	.gr = nv30_gr_new,
 //	.sw = nv10_sw_new,
 };
 
@@ -380,7 +380,7 @@ nv31_chipset = {
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 	.fifo = nv17_fifo_new,
-//	.gr = nv30_gr_new,
+	.gr = nv30_gr_new,
 //	.mpeg = nv31_mpeg_new,
 //	.sw = nv10_sw_new,
 };
@@ -402,7 +402,7 @@ nv34_chipset = {
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 	.fifo = nv17_fifo_new,
-//	.gr = nv34_gr_new,
+	.gr = nv34_gr_new,
 //	.mpeg = nv31_mpeg_new,
 //	.sw = nv10_sw_new,
 };
@@ -424,7 +424,7 @@ nv35_chipset = {
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 	.fifo = nv17_fifo_new,
-//	.gr = nv35_gr_new,
+	.gr = nv35_gr_new,
 //	.sw = nv10_sw_new,
 };
 
@@ -445,7 +445,7 @@ nv36_chipset = {
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 	.fifo = nv17_fifo_new,
-//	.gr = nv35_gr_new,
+	.gr = nv35_gr_new,
 //	.mpeg = nv31_mpeg_new,
 //	.sw = nv10_sw_new,
 };
@@ -469,7 +469,7 @@ nv40_chipset = {
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 	.fifo = nv40_fifo_new,
-//	.gr = nv40_gr_new,
+	.gr = nv40_gr_new,
 //	.mpeg = nv40_mpeg_new,
 //	.pm = nv40_pm_new,
 //	.sw = nv10_sw_new,
@@ -494,7 +494,7 @@ nv41_chipset = {
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 	.fifo = nv40_fifo_new,
-//	.gr = nv40_gr_new,
+	.gr = nv40_gr_new,
 //	.mpeg = nv40_mpeg_new,
 //	.pm = nv40_pm_new,
 //	.sw = nv10_sw_new,
@@ -519,7 +519,7 @@ nv42_chipset = {
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 	.fifo = nv40_fifo_new,
-//	.gr = nv40_gr_new,
+	.gr = nv40_gr_new,
 //	.mpeg = nv40_mpeg_new,
 //	.pm = nv40_pm_new,
 //	.sw = nv10_sw_new,
@@ -544,7 +544,7 @@ nv43_chipset = {
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 	.fifo = nv40_fifo_new,
-//	.gr = nv40_gr_new,
+	.gr = nv40_gr_new,
 //	.mpeg = nv40_mpeg_new,
 //	.pm = nv40_pm_new,
 //	.sw = nv10_sw_new,
@@ -569,7 +569,7 @@ nv44_chipset = {
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 	.fifo = nv40_fifo_new,
-//	.gr = nv40_gr_new,
+	.gr = nv44_gr_new,
 //	.mpeg = nv44_mpeg_new,
 //	.pm = nv40_pm_new,
 //	.sw = nv10_sw_new,
@@ -594,7 +594,7 @@ nv45_chipset = {
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 	.fifo = nv40_fifo_new,
-//	.gr = nv40_gr_new,
+	.gr = nv40_gr_new,
 //	.mpeg = nv44_mpeg_new,
 //	.pm = nv40_pm_new,
 //	.sw = nv10_sw_new,
@@ -619,7 +619,7 @@ nv46_chipset = {
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 	.fifo = nv40_fifo_new,
-//	.gr = nv40_gr_new,
+	.gr = nv44_gr_new,
 //	.mpeg = nv44_mpeg_new,
 //	.pm = nv40_pm_new,
 //	.sw = nv10_sw_new,
@@ -644,7 +644,7 @@ nv47_chipset = {
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 	.fifo = nv40_fifo_new,
-//	.gr = nv40_gr_new,
+	.gr = nv40_gr_new,
 //	.mpeg = nv44_mpeg_new,
 //	.pm = nv40_pm_new,
 //	.sw = nv10_sw_new,
@@ -669,7 +669,7 @@ nv49_chipset = {
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 	.fifo = nv40_fifo_new,
-//	.gr = nv40_gr_new,
+	.gr = nv40_gr_new,
 //	.mpeg = nv44_mpeg_new,
 //	.pm = nv40_pm_new,
 //	.sw = nv10_sw_new,
@@ -694,7 +694,7 @@ nv4a_chipset = {
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 	.fifo = nv40_fifo_new,
-//	.gr = nv40_gr_new,
+	.gr = nv44_gr_new,
 //	.mpeg = nv44_mpeg_new,
 //	.pm = nv40_pm_new,
 //	.sw = nv10_sw_new,
@@ -719,7 +719,7 @@ nv4b_chipset = {
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 	.fifo = nv40_fifo_new,
-//	.gr = nv40_gr_new,
+	.gr = nv40_gr_new,
 //	.mpeg = nv44_mpeg_new,
 //	.pm = nv40_pm_new,
 //	.sw = nv10_sw_new,
@@ -744,7 +744,7 @@ nv4c_chipset = {
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 	.fifo = nv40_fifo_new,
-//	.gr = nv40_gr_new,
+	.gr = nv44_gr_new,
 //	.mpeg = nv44_mpeg_new,
 //	.pm = nv40_pm_new,
 //	.sw = nv10_sw_new,
@@ -769,7 +769,7 @@ nv4e_chipset = {
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 	.fifo = nv40_fifo_new,
-//	.gr = nv40_gr_new,
+	.gr = nv44_gr_new,
 //	.mpeg = nv44_mpeg_new,
 //	.pm = nv40_pm_new,
 //	.sw = nv10_sw_new,
@@ -797,7 +797,7 @@ nv50_chipset = {
 	.disp = nv50_disp_new,
 	.dma = nv50_dma_new,
 	.fifo = nv50_fifo_new,
-//	.gr = nv50_gr_new,
+	.gr = nv50_gr_new,
 //	.mpeg = nv50_mpeg_new,
 //	.pm = nv50_pm_new,
 //	.sw = nv50_sw_new,
@@ -822,7 +822,7 @@ nv63_chipset = {
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 	.fifo = nv40_fifo_new,
-//	.gr = nv40_gr_new,
+	.gr = nv44_gr_new,
 //	.mpeg = nv44_mpeg_new,
 //	.pm = nv40_pm_new,
 //	.sw = nv10_sw_new,
@@ -847,7 +847,7 @@ nv67_chipset = {
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 	.fifo = nv40_fifo_new,
-//	.gr = nv40_gr_new,
+	.gr = nv44_gr_new,
 //	.mpeg = nv44_mpeg_new,
 //	.pm = nv40_pm_new,
 //	.sw = nv10_sw_new,
@@ -872,7 +872,7 @@ nv68_chipset = {
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 	.fifo = nv40_fifo_new,
-//	.gr = nv40_gr_new,
+	.gr = nv44_gr_new,
 //	.mpeg = nv44_mpeg_new,
 //	.pm = nv40_pm_new,
 //	.sw = nv10_sw_new,
@@ -902,7 +902,7 @@ nv84_chipset = {
 	.disp = g84_disp_new,
 	.dma = nv50_dma_new,
 	.fifo = g84_fifo_new,
-//	.gr = nv50_gr_new,
+	.gr = g84_gr_new,
 //	.mpeg = g84_mpeg_new,
 //	.pm = g84_pm_new,
 //	.sw = nv50_sw_new,
@@ -933,7 +933,7 @@ nv86_chipset = {
 	.disp = g84_disp_new,
 	.dma = nv50_dma_new,
 	.fifo = g84_fifo_new,
-//	.gr = nv50_gr_new,
+	.gr = g84_gr_new,
 //	.mpeg = g84_mpeg_new,
 //	.pm = g84_pm_new,
 //	.sw = nv50_sw_new,
@@ -964,7 +964,7 @@ nv92_chipset = {
 	.disp = g84_disp_new,
 	.dma = nv50_dma_new,
 	.fifo = g84_fifo_new,
-//	.gr = nv50_gr_new,
+	.gr = g84_gr_new,
 //	.mpeg = g84_mpeg_new,
 //	.pm = g84_pm_new,
 //	.sw = nv50_sw_new,
@@ -995,7 +995,7 @@ nv94_chipset = {
 	.disp = g94_disp_new,
 	.dma = nv50_dma_new,
 	.fifo = g84_fifo_new,
-//	.gr = nv50_gr_new,
+	.gr = g84_gr_new,
 //	.mpeg = g84_mpeg_new,
 //	.pm = g84_pm_new,
 //	.sw = nv50_sw_new,
@@ -1024,7 +1024,7 @@ nv96_chipset = {
 	.dma = nv50_dma_new,
 	.fifo = g84_fifo_new,
 //	.sw = nv50_sw_new,
-//	.gr = nv50_gr_new,
+	.gr = g84_gr_new,
 //	.mpeg = g84_mpeg_new,
 	.vp = g84_vp_new,
 	.cipher = g84_cipher_new,
@@ -1055,7 +1055,7 @@ nv98_chipset = {
 	.dma = nv50_dma_new,
 	.fifo = g84_fifo_new,
 //	.sw = nv50_sw_new,
-//	.gr = nv50_gr_new,
+	.gr = g84_gr_new,
 	.mspdec = g98_mspdec_new,
 	.sec = g98_sec_new,
 	.msvld = g98_msvld_new,
@@ -1088,7 +1088,7 @@ nva0_chipset = {
 	.disp = gt200_disp_new,
 	.dma = nv50_dma_new,
 	.fifo = g84_fifo_new,
-//	.gr = nv50_gr_new,
+	.gr = gt200_gr_new,
 //	.mpeg = g84_mpeg_new,
 //	.pm = gt200_pm_new,
 //	.sw = nv50_sw_new,
@@ -1119,7 +1119,7 @@ nva3_chipset = {
 	.disp = gt215_disp_new,
 	.dma = nv50_dma_new,
 	.fifo = g84_fifo_new,
-//	.gr = nv50_gr_new,
+	.gr = gt215_gr_new,
 //	.mpeg = g84_mpeg_new,
 	.mspdec = gt215_mspdec_new,
 	.msppp = gt215_msppp_new,
@@ -1152,7 +1152,7 @@ nva5_chipset = {
 	.disp = gt215_disp_new,
 	.dma = nv50_dma_new,
 	.fifo = g84_fifo_new,
-//	.gr = nv50_gr_new,
+	.gr = gt215_gr_new,
 	.mspdec = gt215_mspdec_new,
 	.msppp = gt215_msppp_new,
 	.msvld = gt215_msvld_new,
@@ -1184,7 +1184,7 @@ nva8_chipset = {
 	.disp = gt215_disp_new,
 	.dma = nv50_dma_new,
 	.fifo = g84_fifo_new,
-//	.gr = nv50_gr_new,
+	.gr = gt215_gr_new,
 	.mspdec = gt215_mspdec_new,
 	.msppp = gt215_msppp_new,
 	.msvld = gt215_msvld_new,
@@ -1214,7 +1214,7 @@ nvaa_chipset = {
 	.disp = g94_disp_new,
 	.dma = nv50_dma_new,
 	.fifo = g84_fifo_new,
-//	.gr = nv50_gr_new,
+	.gr = gt200_gr_new,
 	.mspdec = g98_mspdec_new,
 	.msppp = g98_msppp_new,
 	.msvld = g98_msvld_new,
@@ -1245,7 +1245,7 @@ nvac_chipset = {
 	.disp = g94_disp_new,
 	.dma = nv50_dma_new,
 	.fifo = g84_fifo_new,
-//	.gr = nv50_gr_new,
+	.gr = mcp79_gr_new,
 	.mspdec = g98_mspdec_new,
 	.msppp = g98_msppp_new,
 	.msvld = g98_msvld_new,
@@ -1278,7 +1278,7 @@ nvaf_chipset = {
 	.disp = gt215_disp_new,
 	.dma = nv50_dma_new,
 	.fifo = g84_fifo_new,
-//	.gr = nv50_gr_new,
+	.gr = mcp89_gr_new,
 	.mspdec = gt215_mspdec_new,
 	.msppp = gt215_msppp_new,
 	.msvld = mcp89_msvld_new,
@@ -1313,7 +1313,7 @@ nvc0_chipset = {
 	.disp = gt215_disp_new,
 	.dma = gf100_dma_new,
 	.fifo = gf100_fifo_new,
-//	.gr = gf100_gr_new,
+	.gr = gf100_gr_new,
 	.mspdec = gf100_mspdec_new,
 	.msppp = gf100_msppp_new,
 	.msvld = gf100_msvld_new,
@@ -1347,7 +1347,7 @@ nvc1_chipset = {
 	.disp = gt215_disp_new,
 	.dma = gf100_dma_new,
 	.fifo = gf100_fifo_new,
-//	.gr = gf108_gr_new,
+	.gr = gf108_gr_new,
 	.mspdec = gf100_mspdec_new,
 	.msppp = gf100_msppp_new,
 	.msvld = gf100_msvld_new,
@@ -1381,7 +1381,7 @@ nvc3_chipset = {
 	.disp = gt215_disp_new,
 	.dma = gf100_dma_new,
 	.fifo = gf100_fifo_new,
-//	.gr = gf104_gr_new,
+	.gr = gf104_gr_new,
 	.mspdec = gf100_mspdec_new,
 	.msppp = gf100_msppp_new,
 	.msvld = gf100_msvld_new,
@@ -1416,7 +1416,7 @@ nvc4_chipset = {
 	.disp = gt215_disp_new,
 	.dma = gf100_dma_new,
 	.fifo = gf100_fifo_new,
-//	.gr = gf104_gr_new,
+	.gr = gf104_gr_new,
 	.mspdec = gf100_mspdec_new,
 	.msppp = gf100_msppp_new,
 	.msvld = gf100_msvld_new,
@@ -1451,7 +1451,7 @@ nvc8_chipset = {
 	.disp = gt215_disp_new,
 	.dma = gf100_dma_new,
 	.fifo = gf100_fifo_new,
-//	.gr = gf110_gr_new,
+	.gr = gf110_gr_new,
 	.mspdec = gf100_mspdec_new,
 	.msppp = gf100_msppp_new,
 	.msvld = gf100_msvld_new,
@@ -1486,7 +1486,7 @@ nvce_chipset = {
 	.disp = gt215_disp_new,
 	.dma = gf100_dma_new,
 	.fifo = gf100_fifo_new,
-//	.gr = gf104_gr_new,
+	.gr = gf104_gr_new,
 	.mspdec = gf100_mspdec_new,
 	.msppp = gf100_msppp_new,
 	.msvld = gf100_msvld_new,
@@ -1520,7 +1520,7 @@ nvcf_chipset = {
 	.disp = gt215_disp_new,
 	.dma = gf100_dma_new,
 	.fifo = gf100_fifo_new,
-//	.gr = gf104_gr_new,
+	.gr = gf104_gr_new,
 	.mspdec = gf100_mspdec_new,
 	.msppp = gf100_msppp_new,
 	.msvld = gf100_msvld_new,
@@ -1552,7 +1552,7 @@ nvd7_chipset = {
 	.disp = gf119_disp_new,
 	.dma = gf119_dma_new,
 	.fifo = gf100_fifo_new,
-//	.gr = gf117_gr_new,
+	.gr = gf117_gr_new,
 	.mspdec = gf100_mspdec_new,
 	.msppp = gf100_msppp_new,
 	.msvld = gf100_msvld_new,
@@ -1586,7 +1586,7 @@ nvd9_chipset = {
 	.disp = gf119_disp_new,
 	.dma = gf119_dma_new,
 	.fifo = gf100_fifo_new,
-//	.gr = gf119_gr_new,
+	.gr = gf119_gr_new,
 	.mspdec = gf100_mspdec_new,
 	.msppp = gf100_msppp_new,
 	.msvld = gf100_msvld_new,
@@ -1622,7 +1622,7 @@ nve4_chipset = {
 	.disp = gk104_disp_new,
 	.dma = gf119_dma_new,
 	.fifo = gk104_fifo_new,
-//	.gr = gk104_gr_new,
+	.gr = gk104_gr_new,
 	.mspdec = gk104_mspdec_new,
 	.msppp = gf100_msppp_new,
 	.msvld = gk104_msvld_new,
@@ -1658,7 +1658,7 @@ nve6_chipset = {
 	.disp = gk104_disp_new,
 	.dma = gf119_dma_new,
 	.fifo = gk104_fifo_new,
-//	.gr = gk104_gr_new,
+	.gr = gk104_gr_new,
 	.mspdec = gk104_mspdec_new,
 	.msppp = gf100_msppp_new,
 	.msvld = gk104_msvld_new,
@@ -1694,7 +1694,7 @@ nve7_chipset = {
 	.disp = gk104_disp_new,
 	.dma = gf119_dma_new,
 	.fifo = gk104_fifo_new,
-//	.gr = gk104_gr_new,
+	.gr = gk104_gr_new,
 	.mspdec = gk104_mspdec_new,
 	.msppp = gf100_msppp_new,
 	.msvld = gk104_msvld_new,
@@ -1721,7 +1721,7 @@ nvea_chipset = {
 	.ce[2] = gk104_ce_new,
 	.dma = gf119_dma_new,
 	.fifo = gk20a_fifo_new,
-//	.gr = gk20a_gr_new,
+	.gr = gk20a_gr_new,
 //	.pm = gk104_pm_new,
 //	.sw = gf100_sw_new,
 };
@@ -1754,7 +1754,7 @@ nvf0_chipset = {
 	.disp = gk110_disp_new,
 	.dma = gf119_dma_new,
 	.fifo = gk104_fifo_new,
-//	.gr = gk110_gr_new,
+	.gr = gk110_gr_new,
 	.mspdec = gk104_mspdec_new,
 	.msppp = gf100_msppp_new,
 	.msvld = gk104_msvld_new,
@@ -1790,7 +1790,7 @@ nvf1_chipset = {
 	.disp = gk110_disp_new,
 	.dma = gf119_dma_new,
 	.fifo = gk104_fifo_new,
-//	.gr = gk110b_gr_new,
+	.gr = gk110b_gr_new,
 	.mspdec = gk104_mspdec_new,
 	.msppp = gf100_msppp_new,
 	.msvld = gk104_msvld_new,
@@ -1826,7 +1826,7 @@ nv106_chipset = {
 	.disp = gk110_disp_new,
 	.dma = gf119_dma_new,
 	.fifo = gk208_fifo_new,
-//	.gr = gk208_gr_new,
+	.gr = gk208_gr_new,
 	.mspdec = gk104_mspdec_new,
 	.msppp = gf100_msppp_new,
 	.msvld = gk104_msvld_new,
@@ -1861,7 +1861,7 @@ nv108_chipset = {
 	.disp = gk110_disp_new,
 	.dma = gf119_dma_new,
 	.fifo = gk208_fifo_new,
-//	.gr = gk208_gr_new,
+	.gr = gk208_gr_new,
 	.mspdec = gk104_mspdec_new,
 	.msppp = gf100_msppp_new,
 	.msvld = gk104_msvld_new,
@@ -1894,7 +1894,7 @@ nv117_chipset = {
 	.disp = gm107_disp_new,
 	.dma = gf119_dma_new,
 	.fifo = gk208_fifo_new,
-//	.gr = gm107_gr_new,
+	.gr = gm107_gr_new,
 //	.sw = gf100_sw_new,
 };
 
@@ -1923,7 +1923,7 @@ nv124_chipset = {
 	.disp = gm204_disp_new,
 	.dma = gf119_dma_new,
 	.fifo = gm204_fifo_new,
-//	.gr = gm204_gr_new,
+	.gr = gm204_gr_new,
 //	.sw = gf100_sw_new,
 };
 
@@ -1952,7 +1952,7 @@ nv126_chipset = {
 	.disp = gm204_disp_new,
 	.dma = gf119_dma_new,
 	.fifo = gm204_fifo_new,
-//	.gr = gm206_gr_new,
+	.gr = gm206_gr_new,
 //	.sw = gf100_sw_new,
 };
 
@@ -1973,7 +1973,7 @@ nv12b_chipset = {
 	.ce[2] = gm204_ce_new,
 	.dma = gf119_dma_new,
 	.fifo = gm20b_fifo_new,
-//	.gr = gm20b_gr_new,
+	.gr = gm20b_gr_new,
 //	.sw = gf100_sw_new,
 };
 

commit 13de7f462902d1a452d501cdb2d06ef02cabbfff
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:22 2015 +1000

    drm/nouveau/fifo: convert to new-style nvkm_engine
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index ea3e8902f458..62395ab742c5 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -88,7 +88,7 @@ nv4_chipset = {
 	.timer = nv04_timer_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
-//	.fifo = nv04_fifo_new,
+	.fifo = nv04_fifo_new,
 //	.gr = nv04_gr_new,
 //	.sw = nv04_sw_new,
 };
@@ -108,7 +108,7 @@ nv5_chipset = {
 	.timer = nv04_timer_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
-//	.fifo = nv04_fifo_new,
+	.fifo = nv04_fifo_new,
 //	.gr = nv04_gr_new,
 //	.sw = nv04_sw_new,
 };
@@ -148,7 +148,7 @@ nv11_chipset = {
 	.timer = nv04_timer_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
-//	.fifo = nv10_fifo_new,
+	.fifo = nv10_fifo_new,
 //	.gr = nv10_gr_new,
 //	.sw = nv10_sw_new,
 };
@@ -169,7 +169,7 @@ nv15_chipset = {
 	.timer = nv04_timer_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
-//	.fifo = nv10_fifo_new,
+	.fifo = nv10_fifo_new,
 //	.gr = nv10_gr_new,
 //	.sw = nv10_sw_new,
 };
@@ -190,7 +190,7 @@ nv17_chipset = {
 	.timer = nv04_timer_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
-//	.fifo = nv17_fifo_new,
+	.fifo = nv17_fifo_new,
 //	.gr = nv10_gr_new,
 //	.sw = nv10_sw_new,
 };
@@ -211,7 +211,7 @@ nv18_chipset = {
 	.timer = nv04_timer_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
-//	.fifo = nv17_fifo_new,
+	.fifo = nv17_fifo_new,
 //	.gr = nv10_gr_new,
 //	.sw = nv10_sw_new,
 };
@@ -232,7 +232,7 @@ nv1a_chipset = {
 	.timer = nv04_timer_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
-//	.fifo = nv10_fifo_new,
+	.fifo = nv10_fifo_new,
 //	.gr = nv10_gr_new,
 //	.sw = nv10_sw_new,
 };
@@ -253,7 +253,7 @@ nv1f_chipset = {
 	.timer = nv04_timer_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
-//	.fifo = nv17_fifo_new,
+	.fifo = nv17_fifo_new,
 //	.gr = nv10_gr_new,
 //	.sw = nv10_sw_new,
 };
@@ -274,7 +274,7 @@ nv20_chipset = {
 	.timer = nv04_timer_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
-//	.fifo = nv17_fifo_new,
+	.fifo = nv17_fifo_new,
 //	.gr = nv20_gr_new,
 //	.sw = nv10_sw_new,
 };
@@ -295,7 +295,7 @@ nv25_chipset = {
 	.timer = nv04_timer_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
-//	.fifo = nv17_fifo_new,
+	.fifo = nv17_fifo_new,
 //	.gr = nv25_gr_new,
 //	.sw = nv10_sw_new,
 };
@@ -316,7 +316,7 @@ nv28_chipset = {
 	.timer = nv04_timer_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
-//	.fifo = nv17_fifo_new,
+	.fifo = nv17_fifo_new,
 //	.gr = nv25_gr_new,
 //	.sw = nv10_sw_new,
 };
@@ -337,7 +337,7 @@ nv2a_chipset = {
 	.timer = nv04_timer_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
-//	.fifo = nv17_fifo_new,
+	.fifo = nv17_fifo_new,
 //	.gr = nv2a_gr_new,
 //	.sw = nv10_sw_new,
 };
@@ -358,7 +358,7 @@ nv30_chipset = {
 	.timer = nv04_timer_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
-//	.fifo = nv17_fifo_new,
+	.fifo = nv17_fifo_new,
 //	.gr = nv30_gr_new,
 //	.sw = nv10_sw_new,
 };
@@ -379,7 +379,7 @@ nv31_chipset = {
 	.timer = nv04_timer_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
-//	.fifo = nv17_fifo_new,
+	.fifo = nv17_fifo_new,
 //	.gr = nv30_gr_new,
 //	.mpeg = nv31_mpeg_new,
 //	.sw = nv10_sw_new,
@@ -401,7 +401,7 @@ nv34_chipset = {
 	.timer = nv04_timer_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
-//	.fifo = nv17_fifo_new,
+	.fifo = nv17_fifo_new,
 //	.gr = nv34_gr_new,
 //	.mpeg = nv31_mpeg_new,
 //	.sw = nv10_sw_new,
@@ -423,7 +423,7 @@ nv35_chipset = {
 	.timer = nv04_timer_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
-//	.fifo = nv17_fifo_new,
+	.fifo = nv17_fifo_new,
 //	.gr = nv35_gr_new,
 //	.sw = nv10_sw_new,
 };
@@ -444,7 +444,7 @@ nv36_chipset = {
 	.timer = nv04_timer_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
-//	.fifo = nv17_fifo_new,
+	.fifo = nv17_fifo_new,
 //	.gr = nv35_gr_new,
 //	.mpeg = nv31_mpeg_new,
 //	.sw = nv10_sw_new,
@@ -468,7 +468,7 @@ nv40_chipset = {
 	.volt = nv40_volt_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
-//	.fifo = nv40_fifo_new,
+	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
 //	.mpeg = nv40_mpeg_new,
 //	.pm = nv40_pm_new,
@@ -493,7 +493,7 @@ nv41_chipset = {
 	.volt = nv40_volt_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
-//	.fifo = nv40_fifo_new,
+	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
 //	.mpeg = nv40_mpeg_new,
 //	.pm = nv40_pm_new,
@@ -518,7 +518,7 @@ nv42_chipset = {
 	.volt = nv40_volt_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
-//	.fifo = nv40_fifo_new,
+	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
 //	.mpeg = nv40_mpeg_new,
 //	.pm = nv40_pm_new,
@@ -543,7 +543,7 @@ nv43_chipset = {
 	.volt = nv40_volt_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
-//	.fifo = nv40_fifo_new,
+	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
 //	.mpeg = nv40_mpeg_new,
 //	.pm = nv40_pm_new,
@@ -568,7 +568,7 @@ nv44_chipset = {
 	.volt = nv40_volt_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
-//	.fifo = nv40_fifo_new,
+	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
 //	.mpeg = nv44_mpeg_new,
 //	.pm = nv40_pm_new,
@@ -593,7 +593,7 @@ nv45_chipset = {
 	.volt = nv40_volt_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
-//	.fifo = nv40_fifo_new,
+	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
 //	.mpeg = nv44_mpeg_new,
 //	.pm = nv40_pm_new,
@@ -618,7 +618,7 @@ nv46_chipset = {
 	.volt = nv40_volt_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
-//	.fifo = nv40_fifo_new,
+	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
 //	.mpeg = nv44_mpeg_new,
 //	.pm = nv40_pm_new,
@@ -643,7 +643,7 @@ nv47_chipset = {
 	.volt = nv40_volt_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
-//	.fifo = nv40_fifo_new,
+	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
 //	.mpeg = nv44_mpeg_new,
 //	.pm = nv40_pm_new,
@@ -668,7 +668,7 @@ nv49_chipset = {
 	.volt = nv40_volt_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
-//	.fifo = nv40_fifo_new,
+	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
 //	.mpeg = nv44_mpeg_new,
 //	.pm = nv40_pm_new,
@@ -693,7 +693,7 @@ nv4a_chipset = {
 	.volt = nv40_volt_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
-//	.fifo = nv40_fifo_new,
+	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
 //	.mpeg = nv44_mpeg_new,
 //	.pm = nv40_pm_new,
@@ -718,7 +718,7 @@ nv4b_chipset = {
 	.volt = nv40_volt_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
-//	.fifo = nv40_fifo_new,
+	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
 //	.mpeg = nv44_mpeg_new,
 //	.pm = nv40_pm_new,
@@ -743,7 +743,7 @@ nv4c_chipset = {
 	.volt = nv40_volt_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
-//	.fifo = nv40_fifo_new,
+	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
 //	.mpeg = nv44_mpeg_new,
 //	.pm = nv40_pm_new,
@@ -768,7 +768,7 @@ nv4e_chipset = {
 	.volt = nv40_volt_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
-//	.fifo = nv40_fifo_new,
+	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
 //	.mpeg = nv44_mpeg_new,
 //	.pm = nv40_pm_new,
@@ -796,7 +796,7 @@ nv50_chipset = {
 	.volt = nv40_volt_new,
 	.disp = nv50_disp_new,
 	.dma = nv50_dma_new,
-//	.fifo = nv50_fifo_new,
+	.fifo = nv50_fifo_new,
 //	.gr = nv50_gr_new,
 //	.mpeg = nv50_mpeg_new,
 //	.pm = nv50_pm_new,
@@ -821,7 +821,7 @@ nv63_chipset = {
 	.volt = nv40_volt_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
-//	.fifo = nv40_fifo_new,
+	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
 //	.mpeg = nv44_mpeg_new,
 //	.pm = nv40_pm_new,
@@ -846,7 +846,7 @@ nv67_chipset = {
 	.volt = nv40_volt_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
-//	.fifo = nv40_fifo_new,
+	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
 //	.mpeg = nv44_mpeg_new,
 //	.pm = nv40_pm_new,
@@ -871,7 +871,7 @@ nv68_chipset = {
 	.volt = nv40_volt_new,
 	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
-//	.fifo = nv40_fifo_new,
+	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
 //	.mpeg = nv44_mpeg_new,
 //	.pm = nv40_pm_new,
@@ -901,7 +901,7 @@ nv84_chipset = {
 	.cipher = g84_cipher_new,
 	.disp = g84_disp_new,
 	.dma = nv50_dma_new,
-//	.fifo = g84_fifo_new,
+	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
 //	.mpeg = g84_mpeg_new,
 //	.pm = g84_pm_new,
@@ -932,7 +932,7 @@ nv86_chipset = {
 	.cipher = g84_cipher_new,
 	.disp = g84_disp_new,
 	.dma = nv50_dma_new,
-//	.fifo = g84_fifo_new,
+	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
 //	.mpeg = g84_mpeg_new,
 //	.pm = g84_pm_new,
@@ -963,7 +963,7 @@ nv92_chipset = {
 	.cipher = g84_cipher_new,
 	.disp = g84_disp_new,
 	.dma = nv50_dma_new,
-//	.fifo = g84_fifo_new,
+	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
 //	.mpeg = g84_mpeg_new,
 //	.pm = g84_pm_new,
@@ -994,7 +994,7 @@ nv94_chipset = {
 	.cipher = g84_cipher_new,
 	.disp = g94_disp_new,
 	.dma = nv50_dma_new,
-//	.fifo = g84_fifo_new,
+	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
 //	.mpeg = g84_mpeg_new,
 //	.pm = g84_pm_new,
@@ -1022,7 +1022,7 @@ nv96_chipset = {
 	.bar = g84_bar_new,
 	.volt = nv40_volt_new,
 	.dma = nv50_dma_new,
-//	.fifo = g84_fifo_new,
+	.fifo = g84_fifo_new,
 //	.sw = nv50_sw_new,
 //	.gr = nv50_gr_new,
 //	.mpeg = g84_mpeg_new,
@@ -1053,7 +1053,7 @@ nv98_chipset = {
 	.bar = g84_bar_new,
 	.volt = nv40_volt_new,
 	.dma = nv50_dma_new,
-//	.fifo = g84_fifo_new,
+	.fifo = g84_fifo_new,
 //	.sw = nv50_sw_new,
 //	.gr = nv50_gr_new,
 	.mspdec = g98_mspdec_new,
@@ -1087,7 +1087,7 @@ nva0_chipset = {
 	.cipher = g84_cipher_new,
 	.disp = gt200_disp_new,
 	.dma = nv50_dma_new,
-//	.fifo = g84_fifo_new,
+	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
 //	.mpeg = g84_mpeg_new,
 //	.pm = gt200_pm_new,
@@ -1118,7 +1118,7 @@ nva3_chipset = {
 	.ce[0] = gt215_ce_new,
 	.disp = gt215_disp_new,
 	.dma = nv50_dma_new,
-//	.fifo = g84_fifo_new,
+	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
 //	.mpeg = g84_mpeg_new,
 	.mspdec = gt215_mspdec_new,
@@ -1151,7 +1151,7 @@ nva5_chipset = {
 	.ce[0] = gt215_ce_new,
 	.disp = gt215_disp_new,
 	.dma = nv50_dma_new,
-//	.fifo = g84_fifo_new,
+	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
 	.mspdec = gt215_mspdec_new,
 	.msppp = gt215_msppp_new,
@@ -1183,7 +1183,7 @@ nva8_chipset = {
 	.ce[0] = gt215_ce_new,
 	.disp = gt215_disp_new,
 	.dma = nv50_dma_new,
-//	.fifo = g84_fifo_new,
+	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
 	.mspdec = gt215_mspdec_new,
 	.msppp = gt215_msppp_new,
@@ -1213,7 +1213,7 @@ nvaa_chipset = {
 	.volt = nv40_volt_new,
 	.disp = g94_disp_new,
 	.dma = nv50_dma_new,
-//	.fifo = g84_fifo_new,
+	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
 	.mspdec = g98_mspdec_new,
 	.msppp = g98_msppp_new,
@@ -1244,7 +1244,7 @@ nvac_chipset = {
 	.volt = nv40_volt_new,
 	.disp = g94_disp_new,
 	.dma = nv50_dma_new,
-//	.fifo = g84_fifo_new,
+	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
 	.mspdec = g98_mspdec_new,
 	.msppp = g98_msppp_new,
@@ -1277,7 +1277,7 @@ nvaf_chipset = {
 	.ce[0] = gt215_ce_new,
 	.disp = gt215_disp_new,
 	.dma = nv50_dma_new,
-//	.fifo = g84_fifo_new,
+	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
 	.mspdec = gt215_mspdec_new,
 	.msppp = gt215_msppp_new,
@@ -1312,7 +1312,7 @@ nvc0_chipset = {
 	.ce[1] = gf100_ce_new,
 	.disp = gt215_disp_new,
 	.dma = gf100_dma_new,
-//	.fifo = gf100_fifo_new,
+	.fifo = gf100_fifo_new,
 //	.gr = gf100_gr_new,
 	.mspdec = gf100_mspdec_new,
 	.msppp = gf100_msppp_new,
@@ -1346,7 +1346,7 @@ nvc1_chipset = {
 	.ce[0] = gf100_ce_new,
 	.disp = gt215_disp_new,
 	.dma = gf100_dma_new,
-//	.fifo = gf100_fifo_new,
+	.fifo = gf100_fifo_new,
 //	.gr = gf108_gr_new,
 	.mspdec = gf100_mspdec_new,
 	.msppp = gf100_msppp_new,
@@ -1380,7 +1380,7 @@ nvc3_chipset = {
 	.ce[0] = gf100_ce_new,
 	.disp = gt215_disp_new,
 	.dma = gf100_dma_new,
-//	.fifo = gf100_fifo_new,
+	.fifo = gf100_fifo_new,
 //	.gr = gf104_gr_new,
 	.mspdec = gf100_mspdec_new,
 	.msppp = gf100_msppp_new,
@@ -1415,7 +1415,7 @@ nvc4_chipset = {
 	.ce[1] = gf100_ce_new,
 	.disp = gt215_disp_new,
 	.dma = gf100_dma_new,
-//	.fifo = gf100_fifo_new,
+	.fifo = gf100_fifo_new,
 //	.gr = gf104_gr_new,
 	.mspdec = gf100_mspdec_new,
 	.msppp = gf100_msppp_new,
@@ -1450,7 +1450,7 @@ nvc8_chipset = {
 	.ce[1] = gf100_ce_new,
 	.disp = gt215_disp_new,
 	.dma = gf100_dma_new,
-//	.fifo = gf100_fifo_new,
+	.fifo = gf100_fifo_new,
 //	.gr = gf110_gr_new,
 	.mspdec = gf100_mspdec_new,
 	.msppp = gf100_msppp_new,
@@ -1485,7 +1485,7 @@ nvce_chipset = {
 	.ce[1] = gf100_ce_new,
 	.disp = gt215_disp_new,
 	.dma = gf100_dma_new,
-//	.fifo = gf100_fifo_new,
+	.fifo = gf100_fifo_new,
 //	.gr = gf104_gr_new,
 	.mspdec = gf100_mspdec_new,
 	.msppp = gf100_msppp_new,
@@ -1519,7 +1519,7 @@ nvcf_chipset = {
 	.ce[0] = gf100_ce_new,
 	.disp = gt215_disp_new,
 	.dma = gf100_dma_new,
-//	.fifo = gf100_fifo_new,
+	.fifo = gf100_fifo_new,
 //	.gr = gf104_gr_new,
 	.mspdec = gf100_mspdec_new,
 	.msppp = gf100_msppp_new,
@@ -1551,7 +1551,7 @@ nvd7_chipset = {
 	.ce[0] = gf100_ce_new,
 	.disp = gf119_disp_new,
 	.dma = gf119_dma_new,
-//	.fifo = gf100_fifo_new,
+	.fifo = gf100_fifo_new,
 //	.gr = gf117_gr_new,
 	.mspdec = gf100_mspdec_new,
 	.msppp = gf100_msppp_new,
@@ -1585,7 +1585,7 @@ nvd9_chipset = {
 	.ce[0] = gf100_ce_new,
 	.disp = gf119_disp_new,
 	.dma = gf119_dma_new,
-//	.fifo = gf100_fifo_new,
+	.fifo = gf100_fifo_new,
 //	.gr = gf119_gr_new,
 	.mspdec = gf100_mspdec_new,
 	.msppp = gf100_msppp_new,
@@ -1621,7 +1621,7 @@ nve4_chipset = {
 	.ce[2] = gk104_ce_new,
 	.disp = gk104_disp_new,
 	.dma = gf119_dma_new,
-//	.fifo = gk104_fifo_new,
+	.fifo = gk104_fifo_new,
 //	.gr = gk104_gr_new,
 	.mspdec = gk104_mspdec_new,
 	.msppp = gf100_msppp_new,
@@ -1657,7 +1657,7 @@ nve6_chipset = {
 	.ce[2] = gk104_ce_new,
 	.disp = gk104_disp_new,
 	.dma = gf119_dma_new,
-//	.fifo = gk104_fifo_new,
+	.fifo = gk104_fifo_new,
 //	.gr = gk104_gr_new,
 	.mspdec = gk104_mspdec_new,
 	.msppp = gf100_msppp_new,
@@ -1693,7 +1693,7 @@ nve7_chipset = {
 	.ce[2] = gk104_ce_new,
 	.disp = gk104_disp_new,
 	.dma = gf119_dma_new,
-//	.fifo = gk104_fifo_new,
+	.fifo = gk104_fifo_new,
 //	.gr = gk104_gr_new,
 	.mspdec = gk104_mspdec_new,
 	.msppp = gf100_msppp_new,
@@ -1720,7 +1720,7 @@ nvea_chipset = {
 	.volt = gk20a_volt_new,
 	.ce[2] = gk104_ce_new,
 	.dma = gf119_dma_new,
-//	.fifo = gk20a_fifo_new,
+	.fifo = gk20a_fifo_new,
 //	.gr = gk20a_gr_new,
 //	.pm = gk104_pm_new,
 //	.sw = gf100_sw_new,
@@ -1753,7 +1753,7 @@ nvf0_chipset = {
 	.ce[2] = gk104_ce_new,
 	.disp = gk110_disp_new,
 	.dma = gf119_dma_new,
-//	.fifo = gk104_fifo_new,
+	.fifo = gk104_fifo_new,
 //	.gr = gk110_gr_new,
 	.mspdec = gk104_mspdec_new,
 	.msppp = gf100_msppp_new,
@@ -1789,7 +1789,7 @@ nvf1_chipset = {
 	.ce[2] = gk104_ce_new,
 	.disp = gk110_disp_new,
 	.dma = gf119_dma_new,
-//	.fifo = gk104_fifo_new,
+	.fifo = gk104_fifo_new,
 //	.gr = gk110b_gr_new,
 	.mspdec = gk104_mspdec_new,
 	.msppp = gf100_msppp_new,
@@ -1825,7 +1825,7 @@ nv106_chipset = {
 	.ce[2] = gk104_ce_new,
 	.disp = gk110_disp_new,
 	.dma = gf119_dma_new,
-//	.fifo = gk208_fifo_new,
+	.fifo = gk208_fifo_new,
 //	.gr = gk208_gr_new,
 	.mspdec = gk104_mspdec_new,
 	.msppp = gf100_msppp_new,
@@ -1860,7 +1860,7 @@ nv108_chipset = {
 	.ce[2] = gk104_ce_new,
 	.disp = gk110_disp_new,
 	.dma = gf119_dma_new,
-//	.fifo = gk208_fifo_new,
+	.fifo = gk208_fifo_new,
 //	.gr = gk208_gr_new,
 	.mspdec = gk104_mspdec_new,
 	.msppp = gf100_msppp_new,
@@ -1893,7 +1893,7 @@ nv117_chipset = {
 	.ce[2] = gk104_ce_new,
 	.disp = gm107_disp_new,
 	.dma = gf119_dma_new,
-//	.fifo = gk208_fifo_new,
+	.fifo = gk208_fifo_new,
 //	.gr = gm107_gr_new,
 //	.sw = gf100_sw_new,
 };
@@ -1922,7 +1922,7 @@ nv124_chipset = {
 	.ce[2] = gm204_ce_new,
 	.disp = gm204_disp_new,
 	.dma = gf119_dma_new,
-//	.fifo = gm204_fifo_new,
+	.fifo = gm204_fifo_new,
 //	.gr = gm204_gr_new,
 //	.sw = gf100_sw_new,
 };
@@ -1951,7 +1951,7 @@ nv126_chipset = {
 	.ce[2] = gm204_ce_new,
 	.disp = gm204_disp_new,
 	.dma = gf119_dma_new,
-//	.fifo = gm204_fifo_new,
+	.fifo = gm204_fifo_new,
 //	.gr = gm206_gr_new,
 //	.sw = gf100_sw_new,
 };
@@ -1972,7 +1972,7 @@ nv12b_chipset = {
 	.timer = gk20a_timer_new,
 	.ce[2] = gm204_ce_new,
 	.dma = gf119_dma_new,
-//	.fifo = gm20b_fifo_new,
+	.fifo = gm20b_fifo_new,
 //	.gr = gm20b_gr_new,
 //	.sw = gf100_sw_new,
 };

commit 70aa8670e5229766f12c4b818a68aa61913df0b6
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:22 2015 +1000

    drm/nouveau/disp: convert to new-style nvkm_engine
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index fa4a1f00499c..ea3e8902f458 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -86,7 +86,7 @@ nv4_chipset = {
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
 	.timer = nv04_timer_new,
-//	.disp = nv04_disp_new,
+	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 //	.fifo = nv04_fifo_new,
 //	.gr = nv04_gr_new,
@@ -106,7 +106,7 @@ nv5_chipset = {
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
 	.timer = nv04_timer_new,
-//	.disp = nv04_disp_new,
+	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 //	.fifo = nv04_fifo_new,
 //	.gr = nv04_gr_new,
@@ -127,7 +127,7 @@ nv10_chipset = {
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
 	.timer = nv04_timer_new,
-//	.disp = nv04_disp_new,
+	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 //	.gr = nv10_gr_new,
 };
@@ -146,7 +146,7 @@ nv11_chipset = {
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
 	.timer = nv04_timer_new,
-//	.disp = nv04_disp_new,
+	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 //	.fifo = nv10_fifo_new,
 //	.gr = nv10_gr_new,
@@ -167,7 +167,7 @@ nv15_chipset = {
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
 	.timer = nv04_timer_new,
-//	.disp = nv04_disp_new,
+	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 //	.fifo = nv10_fifo_new,
 //	.gr = nv10_gr_new,
@@ -188,7 +188,7 @@ nv17_chipset = {
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
 	.timer = nv04_timer_new,
-//	.disp = nv04_disp_new,
+	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 //	.fifo = nv17_fifo_new,
 //	.gr = nv10_gr_new,
@@ -209,7 +209,7 @@ nv18_chipset = {
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
 	.timer = nv04_timer_new,
-//	.disp = nv04_disp_new,
+	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 //	.fifo = nv17_fifo_new,
 //	.gr = nv10_gr_new,
@@ -230,7 +230,7 @@ nv1a_chipset = {
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
 	.timer = nv04_timer_new,
-//	.disp = nv04_disp_new,
+	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 //	.fifo = nv10_fifo_new,
 //	.gr = nv10_gr_new,
@@ -251,7 +251,7 @@ nv1f_chipset = {
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
 	.timer = nv04_timer_new,
-//	.disp = nv04_disp_new,
+	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 //	.fifo = nv17_fifo_new,
 //	.gr = nv10_gr_new,
@@ -272,7 +272,7 @@ nv20_chipset = {
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
 	.timer = nv04_timer_new,
-//	.disp = nv04_disp_new,
+	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 //	.fifo = nv17_fifo_new,
 //	.gr = nv20_gr_new,
@@ -293,7 +293,7 @@ nv25_chipset = {
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
 	.timer = nv04_timer_new,
-//	.disp = nv04_disp_new,
+	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 //	.fifo = nv17_fifo_new,
 //	.gr = nv25_gr_new,
@@ -314,7 +314,7 @@ nv28_chipset = {
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
 	.timer = nv04_timer_new,
-//	.disp = nv04_disp_new,
+	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 //	.fifo = nv17_fifo_new,
 //	.gr = nv25_gr_new,
@@ -335,7 +335,7 @@ nv2a_chipset = {
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
 	.timer = nv04_timer_new,
-//	.disp = nv04_disp_new,
+	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 //	.fifo = nv17_fifo_new,
 //	.gr = nv2a_gr_new,
@@ -356,7 +356,7 @@ nv30_chipset = {
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
 	.timer = nv04_timer_new,
-//	.disp = nv04_disp_new,
+	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 //	.fifo = nv17_fifo_new,
 //	.gr = nv30_gr_new,
@@ -377,7 +377,7 @@ nv31_chipset = {
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
 	.timer = nv04_timer_new,
-//	.disp = nv04_disp_new,
+	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 //	.fifo = nv17_fifo_new,
 //	.gr = nv30_gr_new,
@@ -399,7 +399,7 @@ nv34_chipset = {
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
 	.timer = nv04_timer_new,
-//	.disp = nv04_disp_new,
+	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 //	.fifo = nv17_fifo_new,
 //	.gr = nv34_gr_new,
@@ -421,7 +421,7 @@ nv35_chipset = {
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
 	.timer = nv04_timer_new,
-//	.disp = nv04_disp_new,
+	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 //	.fifo = nv17_fifo_new,
 //	.gr = nv35_gr_new,
@@ -442,7 +442,7 @@ nv36_chipset = {
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
 	.timer = nv04_timer_new,
-//	.disp = nv04_disp_new,
+	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 //	.fifo = nv17_fifo_new,
 //	.gr = nv35_gr_new,
@@ -466,7 +466,7 @@ nv40_chipset = {
 	.therm = nv40_therm_new,
 	.timer = nv40_timer_new,
 	.volt = nv40_volt_new,
-//	.disp = nv04_disp_new,
+	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
@@ -491,7 +491,7 @@ nv41_chipset = {
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.disp = nv04_disp_new,
+	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
@@ -516,7 +516,7 @@ nv42_chipset = {
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.disp = nv04_disp_new,
+	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
@@ -541,7 +541,7 @@ nv43_chipset = {
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.disp = nv04_disp_new,
+	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
@@ -566,7 +566,7 @@ nv44_chipset = {
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.disp = nv04_disp_new,
+	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
@@ -591,7 +591,7 @@ nv45_chipset = {
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.disp = nv04_disp_new,
+	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
@@ -616,7 +616,7 @@ nv46_chipset = {
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.disp = nv04_disp_new,
+	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
@@ -641,7 +641,7 @@ nv47_chipset = {
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.disp = nv04_disp_new,
+	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
@@ -666,7 +666,7 @@ nv49_chipset = {
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.disp = nv04_disp_new,
+	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
@@ -691,7 +691,7 @@ nv4a_chipset = {
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.disp = nv04_disp_new,
+	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
@@ -716,7 +716,7 @@ nv4b_chipset = {
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.disp = nv04_disp_new,
+	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
@@ -741,7 +741,7 @@ nv4c_chipset = {
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.disp = nv04_disp_new,
+	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
@@ -766,7 +766,7 @@ nv4e_chipset = {
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.disp = nv04_disp_new,
+	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
@@ -794,7 +794,7 @@ nv50_chipset = {
 	.therm = nv50_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.disp = nv50_disp_new,
+	.disp = nv50_disp_new,
 	.dma = nv50_dma_new,
 //	.fifo = nv50_fifo_new,
 //	.gr = nv50_gr_new,
@@ -819,7 +819,7 @@ nv63_chipset = {
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.disp = nv04_disp_new,
+	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
@@ -844,7 +844,7 @@ nv67_chipset = {
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.disp = nv04_disp_new,
+	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
@@ -869,7 +869,7 @@ nv68_chipset = {
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.disp = nv04_disp_new,
+	.disp = nv04_disp_new,
 	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
@@ -899,7 +899,7 @@ nv84_chipset = {
 	.volt = nv40_volt_new,
 	.bsp = g84_bsp_new,
 	.cipher = g84_cipher_new,
-//	.disp = g84_disp_new,
+	.disp = g84_disp_new,
 	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
@@ -930,7 +930,7 @@ nv86_chipset = {
 	.volt = nv40_volt_new,
 	.bsp = g84_bsp_new,
 	.cipher = g84_cipher_new,
-//	.disp = g84_disp_new,
+	.disp = g84_disp_new,
 	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
@@ -961,7 +961,7 @@ nv92_chipset = {
 	.volt = nv40_volt_new,
 	.bsp = g84_bsp_new,
 	.cipher = g84_cipher_new,
-//	.disp = g84_disp_new,
+	.disp = g84_disp_new,
 	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
@@ -992,7 +992,7 @@ nv94_chipset = {
 	.volt = nv40_volt_new,
 	.bsp = g84_bsp_new,
 	.cipher = g84_cipher_new,
-//	.disp = g94_disp_new,
+	.disp = g94_disp_new,
 	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
@@ -1029,7 +1029,7 @@ nv96_chipset = {
 	.vp = g84_vp_new,
 	.cipher = g84_cipher_new,
 	.bsp = g84_bsp_new,
-//	.disp = g94_disp_new,
+	.disp = g94_disp_new,
 //	.pm = g84_pm_new,
 };
 
@@ -1060,7 +1060,7 @@ nv98_chipset = {
 	.sec = g98_sec_new,
 	.msvld = g98_msvld_new,
 	.msppp = g98_msppp_new,
-//	.disp = g94_disp_new,
+	.disp = g94_disp_new,
 //	.pm = g84_pm_new,
 };
 
@@ -1085,7 +1085,7 @@ nva0_chipset = {
 	.volt = nv40_volt_new,
 	.bsp = g84_bsp_new,
 	.cipher = g84_cipher_new,
-//	.disp = gt200_disp_new,
+	.disp = gt200_disp_new,
 	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
@@ -1116,7 +1116,7 @@ nva3_chipset = {
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
 	.ce[0] = gt215_ce_new,
-//	.disp = gt215_disp_new,
+	.disp = gt215_disp_new,
 	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
@@ -1149,7 +1149,7 @@ nva5_chipset = {
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
 	.ce[0] = gt215_ce_new,
-//	.disp = gt215_disp_new,
+	.disp = gt215_disp_new,
 	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
@@ -1181,7 +1181,7 @@ nva8_chipset = {
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
 	.ce[0] = gt215_ce_new,
-//	.disp = gt215_disp_new,
+	.disp = gt215_disp_new,
 	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
@@ -1211,7 +1211,7 @@ nvaa_chipset = {
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.disp = g94_disp_new,
+	.disp = g94_disp_new,
 	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
@@ -1242,7 +1242,7 @@ nvac_chipset = {
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.disp = g94_disp_new,
+	.disp = g94_disp_new,
 	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
@@ -1275,7 +1275,7 @@ nvaf_chipset = {
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
 	.ce[0] = gt215_ce_new,
-//	.disp = gt215_disp_new,
+	.disp = gt215_disp_new,
 	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
@@ -1310,7 +1310,7 @@ nvc0_chipset = {
 	.volt = nv40_volt_new,
 	.ce[0] = gf100_ce_new,
 	.ce[1] = gf100_ce_new,
-//	.disp = gt215_disp_new,
+	.disp = gt215_disp_new,
 	.dma = gf100_dma_new,
 //	.fifo = gf100_fifo_new,
 //	.gr = gf100_gr_new,
@@ -1344,7 +1344,7 @@ nvc1_chipset = {
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
 	.ce[0] = gf100_ce_new,
-//	.disp = gt215_disp_new,
+	.disp = gt215_disp_new,
 	.dma = gf100_dma_new,
 //	.fifo = gf100_fifo_new,
 //	.gr = gf108_gr_new,
@@ -1378,7 +1378,7 @@ nvc3_chipset = {
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
 	.ce[0] = gf100_ce_new,
-//	.disp = gt215_disp_new,
+	.disp = gt215_disp_new,
 	.dma = gf100_dma_new,
 //	.fifo = gf100_fifo_new,
 //	.gr = gf104_gr_new,
@@ -1413,7 +1413,7 @@ nvc4_chipset = {
 	.volt = nv40_volt_new,
 	.ce[0] = gf100_ce_new,
 	.ce[1] = gf100_ce_new,
-//	.disp = gt215_disp_new,
+	.disp = gt215_disp_new,
 	.dma = gf100_dma_new,
 //	.fifo = gf100_fifo_new,
 //	.gr = gf104_gr_new,
@@ -1448,7 +1448,7 @@ nvc8_chipset = {
 	.volt = nv40_volt_new,
 	.ce[0] = gf100_ce_new,
 	.ce[1] = gf100_ce_new,
-//	.disp = gt215_disp_new,
+	.disp = gt215_disp_new,
 	.dma = gf100_dma_new,
 //	.fifo = gf100_fifo_new,
 //	.gr = gf110_gr_new,
@@ -1483,7 +1483,7 @@ nvce_chipset = {
 	.volt = nv40_volt_new,
 	.ce[0] = gf100_ce_new,
 	.ce[1] = gf100_ce_new,
-//	.disp = gt215_disp_new,
+	.disp = gt215_disp_new,
 	.dma = gf100_dma_new,
 //	.fifo = gf100_fifo_new,
 //	.gr = gf104_gr_new,
@@ -1517,7 +1517,7 @@ nvcf_chipset = {
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
 	.ce[0] = gf100_ce_new,
-//	.disp = gt215_disp_new,
+	.disp = gt215_disp_new,
 	.dma = gf100_dma_new,
 //	.fifo = gf100_fifo_new,
 //	.gr = gf104_gr_new,
@@ -1549,7 +1549,7 @@ nvd7_chipset = {
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
 	.ce[0] = gf100_ce_new,
-//	.disp = gf119_disp_new,
+	.disp = gf119_disp_new,
 	.dma = gf119_dma_new,
 //	.fifo = gf100_fifo_new,
 //	.gr = gf117_gr_new,
@@ -1583,7 +1583,7 @@ nvd9_chipset = {
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
 	.ce[0] = gf100_ce_new,
-//	.disp = gf119_disp_new,
+	.disp = gf119_disp_new,
 	.dma = gf119_dma_new,
 //	.fifo = gf100_fifo_new,
 //	.gr = gf119_gr_new,
@@ -1619,7 +1619,7 @@ nve4_chipset = {
 	.ce[0] = gk104_ce_new,
 	.ce[1] = gk104_ce_new,
 	.ce[2] = gk104_ce_new,
-//	.disp = gk104_disp_new,
+	.disp = gk104_disp_new,
 	.dma = gf119_dma_new,
 //	.fifo = gk104_fifo_new,
 //	.gr = gk104_gr_new,
@@ -1655,7 +1655,7 @@ nve6_chipset = {
 	.ce[0] = gk104_ce_new,
 	.ce[1] = gk104_ce_new,
 	.ce[2] = gk104_ce_new,
-//	.disp = gk104_disp_new,
+	.disp = gk104_disp_new,
 	.dma = gf119_dma_new,
 //	.fifo = gk104_fifo_new,
 //	.gr = gk104_gr_new,
@@ -1691,7 +1691,7 @@ nve7_chipset = {
 	.ce[0] = gk104_ce_new,
 	.ce[1] = gk104_ce_new,
 	.ce[2] = gk104_ce_new,
-//	.disp = gk104_disp_new,
+	.disp = gk104_disp_new,
 	.dma = gf119_dma_new,
 //	.fifo = gk104_fifo_new,
 //	.gr = gk104_gr_new,
@@ -1751,7 +1751,7 @@ nvf0_chipset = {
 	.ce[0] = gk104_ce_new,
 	.ce[1] = gk104_ce_new,
 	.ce[2] = gk104_ce_new,
-//	.disp = gk110_disp_new,
+	.disp = gk110_disp_new,
 	.dma = gf119_dma_new,
 //	.fifo = gk104_fifo_new,
 //	.gr = gk110_gr_new,
@@ -1787,7 +1787,7 @@ nvf1_chipset = {
 	.ce[0] = gk104_ce_new,
 	.ce[1] = gk104_ce_new,
 	.ce[2] = gk104_ce_new,
-//	.disp = gk110_disp_new,
+	.disp = gk110_disp_new,
 	.dma = gf119_dma_new,
 //	.fifo = gk104_fifo_new,
 //	.gr = gk110b_gr_new,
@@ -1823,7 +1823,7 @@ nv106_chipset = {
 	.ce[0] = gk104_ce_new,
 	.ce[1] = gk104_ce_new,
 	.ce[2] = gk104_ce_new,
-//	.disp = gk110_disp_new,
+	.disp = gk110_disp_new,
 	.dma = gf119_dma_new,
 //	.fifo = gk208_fifo_new,
 //	.gr = gk208_gr_new,
@@ -1858,7 +1858,7 @@ nv108_chipset = {
 	.ce[0] = gk104_ce_new,
 	.ce[1] = gk104_ce_new,
 	.ce[2] = gk104_ce_new,
-//	.disp = gk110_disp_new,
+	.disp = gk110_disp_new,
 	.dma = gf119_dma_new,
 //	.fifo = gk208_fifo_new,
 //	.gr = gk208_gr_new,
@@ -1891,7 +1891,7 @@ nv117_chipset = {
 	.timer = gk20a_timer_new,
 	.ce[0] = gk104_ce_new,
 	.ce[2] = gk104_ce_new,
-//	.disp = gm107_disp_new,
+	.disp = gm107_disp_new,
 	.dma = gf119_dma_new,
 //	.fifo = gk208_fifo_new,
 //	.gr = gm107_gr_new,
@@ -1920,7 +1920,7 @@ nv124_chipset = {
 	.ce[0] = gm204_ce_new,
 	.ce[1] = gm204_ce_new,
 	.ce[2] = gm204_ce_new,
-//	.disp = gm204_disp_new,
+	.disp = gm204_disp_new,
 	.dma = gf119_dma_new,
 //	.fifo = gm204_fifo_new,
 //	.gr = gm204_gr_new,
@@ -1949,7 +1949,7 @@ nv126_chipset = {
 	.ce[0] = gm204_ce_new,
 	.ce[1] = gm204_ce_new,
 	.ce[2] = gm204_ce_new,
-//	.disp = gm204_disp_new,
+	.disp = gm204_disp_new,
 	.dma = gf119_dma_new,
 //	.fifo = gm204_fifo_new,
 //	.gr = gm206_gr_new,

commit bd70563f015a5204c62a52a87a35c32377940187
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:21 2015 +1000

    drm/nouveau/dma: convert to new-style nvkm_engine
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index e9ed83563028..fa4a1f00499c 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -87,7 +87,7 @@ nv4_chipset = {
 	.mmu = nv04_mmu_new,
 	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
-//	.dma = nv04_dma_new,
+	.dma = nv04_dma_new,
 //	.fifo = nv04_fifo_new,
 //	.gr = nv04_gr_new,
 //	.sw = nv04_sw_new,
@@ -107,7 +107,7 @@ nv5_chipset = {
 	.mmu = nv04_mmu_new,
 	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
-//	.dma = nv04_dma_new,
+	.dma = nv04_dma_new,
 //	.fifo = nv04_fifo_new,
 //	.gr = nv04_gr_new,
 //	.sw = nv04_sw_new,
@@ -128,7 +128,7 @@ nv10_chipset = {
 	.mmu = nv04_mmu_new,
 	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
-//	.dma = nv04_dma_new,
+	.dma = nv04_dma_new,
 //	.gr = nv10_gr_new,
 };
 
@@ -147,7 +147,7 @@ nv11_chipset = {
 	.mmu = nv04_mmu_new,
 	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
-//	.dma = nv04_dma_new,
+	.dma = nv04_dma_new,
 //	.fifo = nv10_fifo_new,
 //	.gr = nv10_gr_new,
 //	.sw = nv10_sw_new,
@@ -168,7 +168,7 @@ nv15_chipset = {
 	.mmu = nv04_mmu_new,
 	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
-//	.dma = nv04_dma_new,
+	.dma = nv04_dma_new,
 //	.fifo = nv10_fifo_new,
 //	.gr = nv10_gr_new,
 //	.sw = nv10_sw_new,
@@ -189,7 +189,7 @@ nv17_chipset = {
 	.mmu = nv04_mmu_new,
 	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
-//	.dma = nv04_dma_new,
+	.dma = nv04_dma_new,
 //	.fifo = nv17_fifo_new,
 //	.gr = nv10_gr_new,
 //	.sw = nv10_sw_new,
@@ -210,7 +210,7 @@ nv18_chipset = {
 	.mmu = nv04_mmu_new,
 	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
-//	.dma = nv04_dma_new,
+	.dma = nv04_dma_new,
 //	.fifo = nv17_fifo_new,
 //	.gr = nv10_gr_new,
 //	.sw = nv10_sw_new,
@@ -231,7 +231,7 @@ nv1a_chipset = {
 	.mmu = nv04_mmu_new,
 	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
-//	.dma = nv04_dma_new,
+	.dma = nv04_dma_new,
 //	.fifo = nv10_fifo_new,
 //	.gr = nv10_gr_new,
 //	.sw = nv10_sw_new,
@@ -252,7 +252,7 @@ nv1f_chipset = {
 	.mmu = nv04_mmu_new,
 	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
-//	.dma = nv04_dma_new,
+	.dma = nv04_dma_new,
 //	.fifo = nv17_fifo_new,
 //	.gr = nv10_gr_new,
 //	.sw = nv10_sw_new,
@@ -273,7 +273,7 @@ nv20_chipset = {
 	.mmu = nv04_mmu_new,
 	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
-//	.dma = nv04_dma_new,
+	.dma = nv04_dma_new,
 //	.fifo = nv17_fifo_new,
 //	.gr = nv20_gr_new,
 //	.sw = nv10_sw_new,
@@ -294,7 +294,7 @@ nv25_chipset = {
 	.mmu = nv04_mmu_new,
 	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
-//	.dma = nv04_dma_new,
+	.dma = nv04_dma_new,
 //	.fifo = nv17_fifo_new,
 //	.gr = nv25_gr_new,
 //	.sw = nv10_sw_new,
@@ -315,7 +315,7 @@ nv28_chipset = {
 	.mmu = nv04_mmu_new,
 	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
-//	.dma = nv04_dma_new,
+	.dma = nv04_dma_new,
 //	.fifo = nv17_fifo_new,
 //	.gr = nv25_gr_new,
 //	.sw = nv10_sw_new,
@@ -336,7 +336,7 @@ nv2a_chipset = {
 	.mmu = nv04_mmu_new,
 	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
-//	.dma = nv04_dma_new,
+	.dma = nv04_dma_new,
 //	.fifo = nv17_fifo_new,
 //	.gr = nv2a_gr_new,
 //	.sw = nv10_sw_new,
@@ -357,7 +357,7 @@ nv30_chipset = {
 	.mmu = nv04_mmu_new,
 	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
-//	.dma = nv04_dma_new,
+	.dma = nv04_dma_new,
 //	.fifo = nv17_fifo_new,
 //	.gr = nv30_gr_new,
 //	.sw = nv10_sw_new,
@@ -378,7 +378,7 @@ nv31_chipset = {
 	.mmu = nv04_mmu_new,
 	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
-//	.dma = nv04_dma_new,
+	.dma = nv04_dma_new,
 //	.fifo = nv17_fifo_new,
 //	.gr = nv30_gr_new,
 //	.mpeg = nv31_mpeg_new,
@@ -400,7 +400,7 @@ nv34_chipset = {
 	.mmu = nv04_mmu_new,
 	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
-//	.dma = nv04_dma_new,
+	.dma = nv04_dma_new,
 //	.fifo = nv17_fifo_new,
 //	.gr = nv34_gr_new,
 //	.mpeg = nv31_mpeg_new,
@@ -422,7 +422,7 @@ nv35_chipset = {
 	.mmu = nv04_mmu_new,
 	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
-//	.dma = nv04_dma_new,
+	.dma = nv04_dma_new,
 //	.fifo = nv17_fifo_new,
 //	.gr = nv35_gr_new,
 //	.sw = nv10_sw_new,
@@ -443,7 +443,7 @@ nv36_chipset = {
 	.mmu = nv04_mmu_new,
 	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
-//	.dma = nv04_dma_new,
+	.dma = nv04_dma_new,
 //	.fifo = nv17_fifo_new,
 //	.gr = nv35_gr_new,
 //	.mpeg = nv31_mpeg_new,
@@ -467,7 +467,7 @@ nv40_chipset = {
 	.timer = nv40_timer_new,
 	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
-//	.dma = nv04_dma_new,
+	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
 //	.mpeg = nv40_mpeg_new,
@@ -492,7 +492,7 @@ nv41_chipset = {
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
-//	.dma = nv04_dma_new,
+	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
 //	.mpeg = nv40_mpeg_new,
@@ -517,7 +517,7 @@ nv42_chipset = {
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
-//	.dma = nv04_dma_new,
+	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
 //	.mpeg = nv40_mpeg_new,
@@ -542,7 +542,7 @@ nv43_chipset = {
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
-//	.dma = nv04_dma_new,
+	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
 //	.mpeg = nv40_mpeg_new,
@@ -567,7 +567,7 @@ nv44_chipset = {
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
-//	.dma = nv04_dma_new,
+	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
 //	.mpeg = nv44_mpeg_new,
@@ -592,7 +592,7 @@ nv45_chipset = {
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
-//	.dma = nv04_dma_new,
+	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
 //	.mpeg = nv44_mpeg_new,
@@ -617,7 +617,7 @@ nv46_chipset = {
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
-//	.dma = nv04_dma_new,
+	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
 //	.mpeg = nv44_mpeg_new,
@@ -642,7 +642,7 @@ nv47_chipset = {
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
-//	.dma = nv04_dma_new,
+	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
 //	.mpeg = nv44_mpeg_new,
@@ -667,7 +667,7 @@ nv49_chipset = {
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
-//	.dma = nv04_dma_new,
+	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
 //	.mpeg = nv44_mpeg_new,
@@ -692,7 +692,7 @@ nv4a_chipset = {
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
-//	.dma = nv04_dma_new,
+	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
 //	.mpeg = nv44_mpeg_new,
@@ -717,7 +717,7 @@ nv4b_chipset = {
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
-//	.dma = nv04_dma_new,
+	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
 //	.mpeg = nv44_mpeg_new,
@@ -742,7 +742,7 @@ nv4c_chipset = {
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
-//	.dma = nv04_dma_new,
+	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
 //	.mpeg = nv44_mpeg_new,
@@ -767,7 +767,7 @@ nv4e_chipset = {
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
-//	.dma = nv04_dma_new,
+	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
 //	.mpeg = nv44_mpeg_new,
@@ -795,7 +795,7 @@ nv50_chipset = {
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
 //	.disp = nv50_disp_new,
-//	.dma = nv50_dma_new,
+	.dma = nv50_dma_new,
 //	.fifo = nv50_fifo_new,
 //	.gr = nv50_gr_new,
 //	.mpeg = nv50_mpeg_new,
@@ -820,7 +820,7 @@ nv63_chipset = {
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
-//	.dma = nv04_dma_new,
+	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
 //	.mpeg = nv44_mpeg_new,
@@ -845,7 +845,7 @@ nv67_chipset = {
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
-//	.dma = nv04_dma_new,
+	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
 //	.mpeg = nv44_mpeg_new,
@@ -870,7 +870,7 @@ nv68_chipset = {
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
-//	.dma = nv04_dma_new,
+	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
 //	.gr = nv40_gr_new,
 //	.mpeg = nv44_mpeg_new,
@@ -900,7 +900,7 @@ nv84_chipset = {
 	.bsp = g84_bsp_new,
 	.cipher = g84_cipher_new,
 //	.disp = g84_disp_new,
-//	.dma = nv50_dma_new,
+	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
 //	.mpeg = g84_mpeg_new,
@@ -931,7 +931,7 @@ nv86_chipset = {
 	.bsp = g84_bsp_new,
 	.cipher = g84_cipher_new,
 //	.disp = g84_disp_new,
-//	.dma = nv50_dma_new,
+	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
 //	.mpeg = g84_mpeg_new,
@@ -962,7 +962,7 @@ nv92_chipset = {
 	.bsp = g84_bsp_new,
 	.cipher = g84_cipher_new,
 //	.disp = g84_disp_new,
-//	.dma = nv50_dma_new,
+	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
 //	.mpeg = g84_mpeg_new,
@@ -993,7 +993,7 @@ nv94_chipset = {
 	.bsp = g84_bsp_new,
 	.cipher = g84_cipher_new,
 //	.disp = g94_disp_new,
-//	.dma = nv50_dma_new,
+	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
 //	.mpeg = g84_mpeg_new,
@@ -1021,7 +1021,7 @@ nv96_chipset = {
 	.mmu = nv50_mmu_new,
 	.bar = g84_bar_new,
 	.volt = nv40_volt_new,
-//	.dma = nv50_dma_new,
+	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
 //	.sw = nv50_sw_new,
 //	.gr = nv50_gr_new,
@@ -1052,7 +1052,7 @@ nv98_chipset = {
 	.mmu = nv50_mmu_new,
 	.bar = g84_bar_new,
 	.volt = nv40_volt_new,
-//	.dma = nv50_dma_new,
+	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
 //	.sw = nv50_sw_new,
 //	.gr = nv50_gr_new,
@@ -1086,7 +1086,7 @@ nva0_chipset = {
 	.bsp = g84_bsp_new,
 	.cipher = g84_cipher_new,
 //	.disp = gt200_disp_new,
-//	.dma = nv50_dma_new,
+	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
 //	.mpeg = g84_mpeg_new,
@@ -1117,7 +1117,7 @@ nva3_chipset = {
 	.volt = nv40_volt_new,
 	.ce[0] = gt215_ce_new,
 //	.disp = gt215_disp_new,
-//	.dma = nv50_dma_new,
+	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
 //	.mpeg = g84_mpeg_new,
@@ -1150,7 +1150,7 @@ nva5_chipset = {
 	.volt = nv40_volt_new,
 	.ce[0] = gt215_ce_new,
 //	.disp = gt215_disp_new,
-//	.dma = nv50_dma_new,
+	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
 	.mspdec = gt215_mspdec_new,
@@ -1182,7 +1182,7 @@ nva8_chipset = {
 	.volt = nv40_volt_new,
 	.ce[0] = gt215_ce_new,
 //	.disp = gt215_disp_new,
-//	.dma = nv50_dma_new,
+	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
 	.mspdec = gt215_mspdec_new,
@@ -1212,7 +1212,7 @@ nvaa_chipset = {
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
 //	.disp = g94_disp_new,
-//	.dma = nv50_dma_new,
+	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
 	.mspdec = g98_mspdec_new,
@@ -1243,7 +1243,7 @@ nvac_chipset = {
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
 //	.disp = g94_disp_new,
-//	.dma = nv50_dma_new,
+	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
 	.mspdec = g98_mspdec_new,
@@ -1276,7 +1276,7 @@ nvaf_chipset = {
 	.volt = nv40_volt_new,
 	.ce[0] = gt215_ce_new,
 //	.disp = gt215_disp_new,
-//	.dma = nv50_dma_new,
+	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
 	.mspdec = gt215_mspdec_new,
@@ -1311,7 +1311,7 @@ nvc0_chipset = {
 	.ce[0] = gf100_ce_new,
 	.ce[1] = gf100_ce_new,
 //	.disp = gt215_disp_new,
-//	.dma = gf100_dma_new,
+	.dma = gf100_dma_new,
 //	.fifo = gf100_fifo_new,
 //	.gr = gf100_gr_new,
 	.mspdec = gf100_mspdec_new,
@@ -1345,7 +1345,7 @@ nvc1_chipset = {
 	.volt = nv40_volt_new,
 	.ce[0] = gf100_ce_new,
 //	.disp = gt215_disp_new,
-//	.dma = gf100_dma_new,
+	.dma = gf100_dma_new,
 //	.fifo = gf100_fifo_new,
 //	.gr = gf108_gr_new,
 	.mspdec = gf100_mspdec_new,
@@ -1379,7 +1379,7 @@ nvc3_chipset = {
 	.volt = nv40_volt_new,
 	.ce[0] = gf100_ce_new,
 //	.disp = gt215_disp_new,
-//	.dma = gf100_dma_new,
+	.dma = gf100_dma_new,
 //	.fifo = gf100_fifo_new,
 //	.gr = gf104_gr_new,
 	.mspdec = gf100_mspdec_new,
@@ -1414,7 +1414,7 @@ nvc4_chipset = {
 	.ce[0] = gf100_ce_new,
 	.ce[1] = gf100_ce_new,
 //	.disp = gt215_disp_new,
-//	.dma = gf100_dma_new,
+	.dma = gf100_dma_new,
 //	.fifo = gf100_fifo_new,
 //	.gr = gf104_gr_new,
 	.mspdec = gf100_mspdec_new,
@@ -1449,7 +1449,7 @@ nvc8_chipset = {
 	.ce[0] = gf100_ce_new,
 	.ce[1] = gf100_ce_new,
 //	.disp = gt215_disp_new,
-//	.dma = gf100_dma_new,
+	.dma = gf100_dma_new,
 //	.fifo = gf100_fifo_new,
 //	.gr = gf110_gr_new,
 	.mspdec = gf100_mspdec_new,
@@ -1484,7 +1484,7 @@ nvce_chipset = {
 	.ce[0] = gf100_ce_new,
 	.ce[1] = gf100_ce_new,
 //	.disp = gt215_disp_new,
-//	.dma = gf100_dma_new,
+	.dma = gf100_dma_new,
 //	.fifo = gf100_fifo_new,
 //	.gr = gf104_gr_new,
 	.mspdec = gf100_mspdec_new,
@@ -1518,7 +1518,7 @@ nvcf_chipset = {
 	.volt = nv40_volt_new,
 	.ce[0] = gf100_ce_new,
 //	.disp = gt215_disp_new,
-//	.dma = gf100_dma_new,
+	.dma = gf100_dma_new,
 //	.fifo = gf100_fifo_new,
 //	.gr = gf104_gr_new,
 	.mspdec = gf100_mspdec_new,
@@ -1550,7 +1550,7 @@ nvd7_chipset = {
 	.timer = nv41_timer_new,
 	.ce[0] = gf100_ce_new,
 //	.disp = gf119_disp_new,
-//	.dma = gf119_dma_new,
+	.dma = gf119_dma_new,
 //	.fifo = gf100_fifo_new,
 //	.gr = gf117_gr_new,
 	.mspdec = gf100_mspdec_new,
@@ -1584,7 +1584,7 @@ nvd9_chipset = {
 	.volt = nv40_volt_new,
 	.ce[0] = gf100_ce_new,
 //	.disp = gf119_disp_new,
-//	.dma = gf119_dma_new,
+	.dma = gf119_dma_new,
 //	.fifo = gf100_fifo_new,
 //	.gr = gf119_gr_new,
 	.mspdec = gf100_mspdec_new,
@@ -1620,7 +1620,7 @@ nve4_chipset = {
 	.ce[1] = gk104_ce_new,
 	.ce[2] = gk104_ce_new,
 //	.disp = gk104_disp_new,
-//	.dma = gf119_dma_new,
+	.dma = gf119_dma_new,
 //	.fifo = gk104_fifo_new,
 //	.gr = gk104_gr_new,
 	.mspdec = gk104_mspdec_new,
@@ -1656,7 +1656,7 @@ nve6_chipset = {
 	.ce[1] = gk104_ce_new,
 	.ce[2] = gk104_ce_new,
 //	.disp = gk104_disp_new,
-//	.dma = gf119_dma_new,
+	.dma = gf119_dma_new,
 //	.fifo = gk104_fifo_new,
 //	.gr = gk104_gr_new,
 	.mspdec = gk104_mspdec_new,
@@ -1692,7 +1692,7 @@ nve7_chipset = {
 	.ce[1] = gk104_ce_new,
 	.ce[2] = gk104_ce_new,
 //	.disp = gk104_disp_new,
-//	.dma = gf119_dma_new,
+	.dma = gf119_dma_new,
 //	.fifo = gk104_fifo_new,
 //	.gr = gk104_gr_new,
 	.mspdec = gk104_mspdec_new,
@@ -1719,7 +1719,7 @@ nvea_chipset = {
 	.timer = gk20a_timer_new,
 	.volt = gk20a_volt_new,
 	.ce[2] = gk104_ce_new,
-//	.dma = gf119_dma_new,
+	.dma = gf119_dma_new,
 //	.fifo = gk20a_fifo_new,
 //	.gr = gk20a_gr_new,
 //	.pm = gk104_pm_new,
@@ -1752,7 +1752,7 @@ nvf0_chipset = {
 	.ce[1] = gk104_ce_new,
 	.ce[2] = gk104_ce_new,
 //	.disp = gk110_disp_new,
-//	.dma = gf119_dma_new,
+	.dma = gf119_dma_new,
 //	.fifo = gk104_fifo_new,
 //	.gr = gk110_gr_new,
 	.mspdec = gk104_mspdec_new,
@@ -1788,7 +1788,7 @@ nvf1_chipset = {
 	.ce[1] = gk104_ce_new,
 	.ce[2] = gk104_ce_new,
 //	.disp = gk110_disp_new,
-//	.dma = gf119_dma_new,
+	.dma = gf119_dma_new,
 //	.fifo = gk104_fifo_new,
 //	.gr = gk110b_gr_new,
 	.mspdec = gk104_mspdec_new,
@@ -1824,7 +1824,7 @@ nv106_chipset = {
 	.ce[1] = gk104_ce_new,
 	.ce[2] = gk104_ce_new,
 //	.disp = gk110_disp_new,
-//	.dma = gf119_dma_new,
+	.dma = gf119_dma_new,
 //	.fifo = gk208_fifo_new,
 //	.gr = gk208_gr_new,
 	.mspdec = gk104_mspdec_new,
@@ -1859,7 +1859,7 @@ nv108_chipset = {
 	.ce[1] = gk104_ce_new,
 	.ce[2] = gk104_ce_new,
 //	.disp = gk110_disp_new,
-//	.dma = gf119_dma_new,
+	.dma = gf119_dma_new,
 //	.fifo = gk208_fifo_new,
 //	.gr = gk208_gr_new,
 	.mspdec = gk104_mspdec_new,
@@ -1892,7 +1892,7 @@ nv117_chipset = {
 	.ce[0] = gk104_ce_new,
 	.ce[2] = gk104_ce_new,
 //	.disp = gm107_disp_new,
-//	.dma = gf119_dma_new,
+	.dma = gf119_dma_new,
 //	.fifo = gk208_fifo_new,
 //	.gr = gm107_gr_new,
 //	.sw = gf100_sw_new,
@@ -1921,7 +1921,7 @@ nv124_chipset = {
 	.ce[1] = gm204_ce_new,
 	.ce[2] = gm204_ce_new,
 //	.disp = gm204_disp_new,
-//	.dma = gf119_dma_new,
+	.dma = gf119_dma_new,
 //	.fifo = gm204_fifo_new,
 //	.gr = gm204_gr_new,
 //	.sw = gf100_sw_new,
@@ -1950,7 +1950,7 @@ nv126_chipset = {
 	.ce[1] = gm204_ce_new,
 	.ce[2] = gm204_ce_new,
 //	.disp = gm204_disp_new,
-//	.dma = gf119_dma_new,
+	.dma = gf119_dma_new,
 //	.fifo = gm204_fifo_new,
 //	.gr = gm206_gr_new,
 //	.sw = gf100_sw_new,
@@ -1971,7 +1971,7 @@ nv12b_chipset = {
 	.mmu = gf100_mmu_new,
 	.timer = gk20a_timer_new,
 	.ce[2] = gm204_ce_new,
-//	.dma = gf119_dma_new,
+	.dma = gf119_dma_new,
 //	.fifo = gm20b_fifo_new,
 //	.gr = gm20b_gr_new,
 //	.sw = gf100_sw_new,

commit 14d74acafb15fd3fac16eef89de7643cddd01775
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:21 2015 +1000

    drm/nouveau/cipher: convert to new-style nvkm_engine
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 926e07fe0912..e9ed83563028 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -898,7 +898,7 @@ nv84_chipset = {
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
 	.bsp = g84_bsp_new,
-//	.cipher = g84_cipher_new,
+	.cipher = g84_cipher_new,
 //	.disp = g84_disp_new,
 //	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
@@ -929,7 +929,7 @@ nv86_chipset = {
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
 	.bsp = g84_bsp_new,
-//	.cipher = g84_cipher_new,
+	.cipher = g84_cipher_new,
 //	.disp = g84_disp_new,
 //	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
@@ -960,7 +960,7 @@ nv92_chipset = {
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
 	.bsp = g84_bsp_new,
-//	.cipher = g84_cipher_new,
+	.cipher = g84_cipher_new,
 //	.disp = g84_disp_new,
 //	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
@@ -991,7 +991,7 @@ nv94_chipset = {
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
 	.bsp = g84_bsp_new,
-//	.cipher = g84_cipher_new,
+	.cipher = g84_cipher_new,
 //	.disp = g94_disp_new,
 //	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
@@ -1027,7 +1027,7 @@ nv96_chipset = {
 //	.gr = nv50_gr_new,
 //	.mpeg = g84_mpeg_new,
 	.vp = g84_vp_new,
-//	.cipher = g84_cipher_new,
+	.cipher = g84_cipher_new,
 	.bsp = g84_bsp_new,
 //	.disp = g94_disp_new,
 //	.pm = g84_pm_new,
@@ -1084,7 +1084,7 @@ nva0_chipset = {
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
 	.bsp = g84_bsp_new,
-//	.cipher = g84_cipher_new,
+	.cipher = g84_cipher_new,
 //	.disp = gt200_disp_new,
 //	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,

commit e5b31ca63249f03e56529dcd4260b23196ce2c28
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:21 2015 +1000

    drm/nouveau/ce: convert to new-style nvkm_engine
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index f5afe9353b45..926e07fe0912 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1616,9 +1616,9 @@ nve4_chipset = {
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.ce[0] = gk104_ce_new,
-//	.ce[1] = gk104_ce_new,
-//	.ce[2] = gk104_ce2_new,
+	.ce[0] = gk104_ce_new,
+	.ce[1] = gk104_ce_new,
+	.ce[2] = gk104_ce_new,
 //	.disp = gk104_disp_new,
 //	.dma = gf119_dma_new,
 //	.fifo = gk104_fifo_new,
@@ -1652,9 +1652,9 @@ nve6_chipset = {
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.ce[0] = gk104_ce_new,
-//	.ce[1] = gk104_ce_new,
-//	.ce[2] = gk104_ce2_new,
+	.ce[0] = gk104_ce_new,
+	.ce[1] = gk104_ce_new,
+	.ce[2] = gk104_ce_new,
 //	.disp = gk104_disp_new,
 //	.dma = gf119_dma_new,
 //	.fifo = gk104_fifo_new,
@@ -1688,9 +1688,9 @@ nve7_chipset = {
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.ce[0] = gk104_ce_new,
-//	.ce[1] = gk104_ce_new,
-//	.ce[2] = gk104_ce2_new,
+	.ce[0] = gk104_ce_new,
+	.ce[1] = gk104_ce_new,
+	.ce[2] = gk104_ce_new,
 //	.disp = gk104_disp_new,
 //	.dma = gf119_dma_new,
 //	.fifo = gk104_fifo_new,
@@ -1718,7 +1718,7 @@ nvea_chipset = {
 	.pmu = gk20a_pmu_new,
 	.timer = gk20a_timer_new,
 	.volt = gk20a_volt_new,
-//	.ce[2] = gk104_ce2_new,
+	.ce[2] = gk104_ce_new,
 //	.dma = gf119_dma_new,
 //	.fifo = gk20a_fifo_new,
 //	.gr = gk20a_gr_new,
@@ -1748,9 +1748,9 @@ nvf0_chipset = {
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.ce[0] = gk104_ce_new,
-//	.ce[1] = gk104_ce_new,
-//	.ce[2] = gk104_ce2_new,
+	.ce[0] = gk104_ce_new,
+	.ce[1] = gk104_ce_new,
+	.ce[2] = gk104_ce_new,
 //	.disp = gk110_disp_new,
 //	.dma = gf119_dma_new,
 //	.fifo = gk104_fifo_new,
@@ -1784,9 +1784,9 @@ nvf1_chipset = {
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.ce[0] = gk104_ce_new,
-//	.ce[1] = gk104_ce_new,
-//	.ce[2] = gk104_ce2_new,
+	.ce[0] = gk104_ce_new,
+	.ce[1] = gk104_ce_new,
+	.ce[2] = gk104_ce_new,
 //	.disp = gk110_disp_new,
 //	.dma = gf119_dma_new,
 //	.fifo = gk104_fifo_new,
@@ -1820,9 +1820,9 @@ nv106_chipset = {
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.ce[0] = gk104_ce_new,
-//	.ce[1] = gk104_ce_new,
-//	.ce[2] = gk104_ce2_new,
+	.ce[0] = gk104_ce_new,
+	.ce[1] = gk104_ce_new,
+	.ce[2] = gk104_ce_new,
 //	.disp = gk110_disp_new,
 //	.dma = gf119_dma_new,
 //	.fifo = gk208_fifo_new,
@@ -1855,9 +1855,9 @@ nv108_chipset = {
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.ce[0] = gk104_ce_new,
-//	.ce[1] = gk104_ce_new,
-//	.ce[2] = gk104_ce2_new,
+	.ce[0] = gk104_ce_new,
+	.ce[1] = gk104_ce_new,
+	.ce[2] = gk104_ce_new,
 //	.disp = gk110_disp_new,
 //	.dma = gf119_dma_new,
 //	.fifo = gk208_fifo_new,
@@ -1889,8 +1889,8 @@ nv117_chipset = {
 	.pmu = gm107_pmu_new,
 	.therm = gm107_therm_new,
 	.timer = gk20a_timer_new,
-//	.ce[0] = gk104_ce_new,
-//	.ce[2] = gk104_ce2_new,
+	.ce[0] = gk104_ce_new,
+	.ce[2] = gk104_ce_new,
 //	.disp = gm107_disp_new,
 //	.dma = gf119_dma_new,
 //	.fifo = gk208_fifo_new,
@@ -1917,9 +1917,9 @@ nv124_chipset = {
 	.mxm = nv50_mxm_new,
 	.pmu = gm107_pmu_new,
 	.timer = gk20a_timer_new,
-//	.ce[0] = gm204_ce_new,
-//	.ce[1] = gm204_ce_new,
-//	.ce[2] = gm204_ce2_new,
+	.ce[0] = gm204_ce_new,
+	.ce[1] = gm204_ce_new,
+	.ce[2] = gm204_ce_new,
 //	.disp = gm204_disp_new,
 //	.dma = gf119_dma_new,
 //	.fifo = gm204_fifo_new,
@@ -1946,9 +1946,9 @@ nv126_chipset = {
 	.mxm = nv50_mxm_new,
 	.pmu = gm107_pmu_new,
 	.timer = gk20a_timer_new,
-//	.ce[0] = gm204_ce_new,
-//	.ce[1] = gm204_ce_new,
-//	.ce[2] = gm204_ce2_new,
+	.ce[0] = gm204_ce_new,
+	.ce[1] = gm204_ce_new,
+	.ce[2] = gm204_ce_new,
 //	.disp = gm204_disp_new,
 //	.dma = gf119_dma_new,
 //	.fifo = gm204_fifo_new,
@@ -1970,7 +1970,7 @@ nv12b_chipset = {
 	.mmu = gf100_mmu_new,
 	.mmu = gf100_mmu_new,
 	.timer = gk20a_timer_new,
-//	.ce[2] = gm204_ce2_new,
+	.ce[2] = gm204_ce_new,
 //	.dma = gf119_dma_new,
 //	.fifo = gm20b_fifo_new,
 //	.gr = gm20b_gr_new,

commit 98b20c9ab88ff4dbe5f3e239efa5a6b7818c1da7
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:21 2015 +1000

    drm/nouveau/xtensa: convert to new-style nvkm_engine
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 0556316e27c8..f5afe9353b45 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -897,7 +897,7 @@ nv84_chipset = {
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.bsp = g84_bsp_new,
+	.bsp = g84_bsp_new,
 //	.cipher = g84_cipher_new,
 //	.disp = g84_disp_new,
 //	.dma = nv50_dma_new,
@@ -906,7 +906,7 @@ nv84_chipset = {
 //	.mpeg = g84_mpeg_new,
 //	.pm = g84_pm_new,
 //	.sw = nv50_sw_new,
-//	.vp = g84_vp_new,
+	.vp = g84_vp_new,
 };
 
 static const struct nvkm_device_chip
@@ -928,7 +928,7 @@ nv86_chipset = {
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.bsp = g84_bsp_new,
+	.bsp = g84_bsp_new,
 //	.cipher = g84_cipher_new,
 //	.disp = g84_disp_new,
 //	.dma = nv50_dma_new,
@@ -937,7 +937,7 @@ nv86_chipset = {
 //	.mpeg = g84_mpeg_new,
 //	.pm = g84_pm_new,
 //	.sw = nv50_sw_new,
-//	.vp = g84_vp_new,
+	.vp = g84_vp_new,
 };
 
 static const struct nvkm_device_chip
@@ -959,7 +959,7 @@ nv92_chipset = {
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.bsp = g84_bsp_new,
+	.bsp = g84_bsp_new,
 //	.cipher = g84_cipher_new,
 //	.disp = g84_disp_new,
 //	.dma = nv50_dma_new,
@@ -968,7 +968,7 @@ nv92_chipset = {
 //	.mpeg = g84_mpeg_new,
 //	.pm = g84_pm_new,
 //	.sw = nv50_sw_new,
-//	.vp = g84_vp_new,
+	.vp = g84_vp_new,
 };
 
 static const struct nvkm_device_chip
@@ -990,7 +990,7 @@ nv94_chipset = {
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.bsp = g84_bsp_new,
+	.bsp = g84_bsp_new,
 //	.cipher = g84_cipher_new,
 //	.disp = g94_disp_new,
 //	.dma = nv50_dma_new,
@@ -999,7 +999,7 @@ nv94_chipset = {
 //	.mpeg = g84_mpeg_new,
 //	.pm = g84_pm_new,
 //	.sw = nv50_sw_new,
-//	.vp = g84_vp_new,
+	.vp = g84_vp_new,
 };
 
 static const struct nvkm_device_chip
@@ -1026,9 +1026,9 @@ nv96_chipset = {
 //	.sw = nv50_sw_new,
 //	.gr = nv50_gr_new,
 //	.mpeg = g84_mpeg_new,
-//	.vp = g84_vp_new,
+	.vp = g84_vp_new,
 //	.cipher = g84_cipher_new,
-//	.bsp = g84_bsp_new,
+	.bsp = g84_bsp_new,
 //	.disp = g94_disp_new,
 //	.pm = g84_pm_new,
 };
@@ -1083,7 +1083,7 @@ nva0_chipset = {
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.bsp = g84_bsp_new,
+	.bsp = g84_bsp_new,
 //	.cipher = g84_cipher_new,
 //	.disp = gt200_disp_new,
 //	.dma = nv50_dma_new,
@@ -1092,7 +1092,7 @@ nva0_chipset = {
 //	.mpeg = g84_mpeg_new,
 //	.pm = gt200_pm_new,
 //	.sw = nv50_sw_new,
-//	.vp = g84_vp_new,
+	.vp = g84_vp_new,
 };
 
 static const struct nvkm_device_chip

commit 53e60da43aee440d3f75000cdd269bd1324a8ad4
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:21 2015 +1000

    drm/nouveau/falcon: convert to new-style nvkm_engine
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 7f858efb2c44..0556316e27c8 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1056,10 +1056,10 @@ nv98_chipset = {
 //	.fifo = g84_fifo_new,
 //	.sw = nv50_sw_new,
 //	.gr = nv50_gr_new,
-//	.mspdec = g98_mspdec_new,
-//	.sec = g98_sec_new,
-//	.msvld = g98_msvld_new,
-//	.msppp = g98_msppp_new,
+	.mspdec = g98_mspdec_new,
+	.sec = g98_sec_new,
+	.msvld = g98_msvld_new,
+	.msppp = g98_msppp_new,
 //	.disp = g94_disp_new,
 //	.pm = g84_pm_new,
 };
@@ -1115,15 +1115,15 @@ nva3_chipset = {
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.ce[0] = gt215_ce_new,
+	.ce[0] = gt215_ce_new,
 //	.disp = gt215_disp_new,
 //	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
 //	.mpeg = g84_mpeg_new,
-//	.mspdec = g98_mspdec_new,
-//	.msppp = g98_msppp_new,
-//	.msvld = g98_msvld_new,
+	.mspdec = gt215_mspdec_new,
+	.msppp = gt215_msppp_new,
+	.msvld = gt215_msvld_new,
 //	.pm = gt215_pm_new,
 //	.sw = nv50_sw_new,
 };
@@ -1148,14 +1148,14 @@ nva5_chipset = {
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.ce[0] = gt215_ce_new,
+	.ce[0] = gt215_ce_new,
 //	.disp = gt215_disp_new,
 //	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
-//	.mspdec = g98_mspdec_new,
-//	.msppp = g98_msppp_new,
-//	.msvld = g98_msvld_new,
+	.mspdec = gt215_mspdec_new,
+	.msppp = gt215_msppp_new,
+	.msvld = gt215_msvld_new,
 //	.pm = gt215_pm_new,
 //	.sw = nv50_sw_new,
 };
@@ -1180,14 +1180,14 @@ nva8_chipset = {
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.ce[0] = gt215_ce_new,
+	.ce[0] = gt215_ce_new,
 //	.disp = gt215_disp_new,
 //	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
-//	.mspdec = g98_mspdec_new,
-//	.msppp = g98_msppp_new,
-//	.msvld = g98_msvld_new,
+	.mspdec = gt215_mspdec_new,
+	.msppp = gt215_msppp_new,
+	.msvld = gt215_msvld_new,
 //	.pm = gt215_pm_new,
 //	.sw = nv50_sw_new,
 };
@@ -1215,11 +1215,11 @@ nvaa_chipset = {
 //	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
-//	.mspdec = g98_mspdec_new,
-//	.msppp = g98_msppp_new,
-//	.msvld = g98_msvld_new,
+	.mspdec = g98_mspdec_new,
+	.msppp = g98_msppp_new,
+	.msvld = g98_msvld_new,
 //	.pm = g84_pm_new,
-//	.sec = g98_sec_new,
+	.sec = g98_sec_new,
 //	.sw = nv50_sw_new,
 };
 
@@ -1246,11 +1246,11 @@ nvac_chipset = {
 //	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
-//	.mspdec = g98_mspdec_new,
-//	.msppp = g98_msppp_new,
-//	.msvld = g98_msvld_new,
+	.mspdec = g98_mspdec_new,
+	.msppp = g98_msppp_new,
+	.msvld = g98_msvld_new,
 //	.pm = g84_pm_new,
-//	.sec = g98_sec_new,
+	.sec = g98_sec_new,
 //	.sw = nv50_sw_new,
 };
 
@@ -1274,14 +1274,14 @@ nvaf_chipset = {
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.ce[0] = gt215_ce_new,
+	.ce[0] = gt215_ce_new,
 //	.disp = gt215_disp_new,
 //	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
 //	.gr = nv50_gr_new,
-//	.mspdec = g98_mspdec_new,
-//	.msppp = g98_msppp_new,
-//	.msvld = g98_msvld_new,
+	.mspdec = gt215_mspdec_new,
+	.msppp = gt215_msppp_new,
+	.msvld = mcp89_msvld_new,
 //	.pm = gt215_pm_new,
 //	.sw = nv50_sw_new,
 };
@@ -1308,15 +1308,15 @@ nvc0_chipset = {
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.ce[0] = gf100_ce0_new,
-//	.ce[1] = gf100_ce1_new,
+	.ce[0] = gf100_ce_new,
+	.ce[1] = gf100_ce_new,
 //	.disp = gt215_disp_new,
 //	.dma = gf100_dma_new,
 //	.fifo = gf100_fifo_new,
 //	.gr = gf100_gr_new,
-//	.mspdec = gf100_mspdec_new,
-//	.msppp = gf100_msppp_new,
-//	.msvld = gf100_msvld_new,
+	.mspdec = gf100_mspdec_new,
+	.msppp = gf100_msppp_new,
+	.msvld = gf100_msvld_new,
 //	.pm = gf100_pm_new,
 //	.sw = gf100_sw_new,
 };
@@ -1343,14 +1343,14 @@ nvc1_chipset = {
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.ce[0] = gf100_ce0_new,
+	.ce[0] = gf100_ce_new,
 //	.disp = gt215_disp_new,
 //	.dma = gf100_dma_new,
 //	.fifo = gf100_fifo_new,
 //	.gr = gf108_gr_new,
-//	.mspdec = gf100_mspdec_new,
-//	.msppp = gf100_msppp_new,
-//	.msvld = gf100_msvld_new,
+	.mspdec = gf100_mspdec_new,
+	.msppp = gf100_msppp_new,
+	.msvld = gf100_msvld_new,
 //	.pm = gf108_pm_new,
 //	.sw = gf100_sw_new,
 };
@@ -1377,14 +1377,14 @@ nvc3_chipset = {
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.ce[0] = gf100_ce0_new,
+	.ce[0] = gf100_ce_new,
 //	.disp = gt215_disp_new,
 //	.dma = gf100_dma_new,
 //	.fifo = gf100_fifo_new,
 //	.gr = gf104_gr_new,
-//	.mspdec = gf100_mspdec_new,
-//	.msppp = gf100_msppp_new,
-//	.msvld = gf100_msvld_new,
+	.mspdec = gf100_mspdec_new,
+	.msppp = gf100_msppp_new,
+	.msvld = gf100_msvld_new,
 //	.pm = gf100_pm_new,
 //	.sw = gf100_sw_new,
 };
@@ -1411,15 +1411,15 @@ nvc4_chipset = {
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.ce[0] = gf100_ce0_new,
-//	.ce[1] = gf100_ce1_new,
+	.ce[0] = gf100_ce_new,
+	.ce[1] = gf100_ce_new,
 //	.disp = gt215_disp_new,
 //	.dma = gf100_dma_new,
 //	.fifo = gf100_fifo_new,
 //	.gr = gf104_gr_new,
-//	.mspdec = gf100_mspdec_new,
-//	.msppp = gf100_msppp_new,
-//	.msvld = gf100_msvld_new,
+	.mspdec = gf100_mspdec_new,
+	.msppp = gf100_msppp_new,
+	.msvld = gf100_msvld_new,
 //	.pm = gf100_pm_new,
 //	.sw = gf100_sw_new,
 };
@@ -1446,15 +1446,15 @@ nvc8_chipset = {
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.ce[0] = gf100_ce0_new,
-//	.ce[1] = gf100_ce1_new,
+	.ce[0] = gf100_ce_new,
+	.ce[1] = gf100_ce_new,
 //	.disp = gt215_disp_new,
 //	.dma = gf100_dma_new,
 //	.fifo = gf100_fifo_new,
 //	.gr = gf110_gr_new,
-//	.mspdec = gf100_mspdec_new,
-//	.msppp = gf100_msppp_new,
-//	.msvld = gf100_msvld_new,
+	.mspdec = gf100_mspdec_new,
+	.msppp = gf100_msppp_new,
+	.msvld = gf100_msvld_new,
 //	.pm = gf100_pm_new,
 //	.sw = gf100_sw_new,
 };
@@ -1481,15 +1481,15 @@ nvce_chipset = {
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.ce[0] = gf100_ce0_new,
-//	.ce[1] = gf100_ce1_new,
+	.ce[0] = gf100_ce_new,
+	.ce[1] = gf100_ce_new,
 //	.disp = gt215_disp_new,
 //	.dma = gf100_dma_new,
 //	.fifo = gf100_fifo_new,
 //	.gr = gf104_gr_new,
-//	.mspdec = gf100_mspdec_new,
-//	.msppp = gf100_msppp_new,
-//	.msvld = gf100_msvld_new,
+	.mspdec = gf100_mspdec_new,
+	.msppp = gf100_msppp_new,
+	.msvld = gf100_msvld_new,
 //	.pm = gf100_pm_new,
 //	.sw = gf100_sw_new,
 };
@@ -1516,14 +1516,14 @@ nvcf_chipset = {
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.ce[0] = gf100_ce0_new,
+	.ce[0] = gf100_ce_new,
 //	.disp = gt215_disp_new,
 //	.dma = gf100_dma_new,
 //	.fifo = gf100_fifo_new,
 //	.gr = gf104_gr_new,
-//	.mspdec = gf100_mspdec_new,
-//	.msppp = gf100_msppp_new,
-//	.msvld = gf100_msvld_new,
+	.mspdec = gf100_mspdec_new,
+	.msppp = gf100_msppp_new,
+	.msvld = gf100_msvld_new,
 //	.pm = gf100_pm_new,
 //	.sw = gf100_sw_new,
 };
@@ -1548,14 +1548,14 @@ nvd7_chipset = {
 	.mxm = nv50_mxm_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
-//	.ce[0] = gf100_ce0_new,
+	.ce[0] = gf100_ce_new,
 //	.disp = gf119_disp_new,
 //	.dma = gf119_dma_new,
 //	.fifo = gf100_fifo_new,
 //	.gr = gf117_gr_new,
-//	.mspdec = gf100_mspdec_new,
-//	.msppp = gf100_msppp_new,
-//	.msvld = gf100_msvld_new,
+	.mspdec = gf100_mspdec_new,
+	.msppp = gf100_msppp_new,
+	.msvld = gf100_msvld_new,
 //	.pm = gf117_pm_new,
 //	.sw = gf100_sw_new,
 };
@@ -1582,14 +1582,14 @@ nvd9_chipset = {
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.ce[0] = gf100_ce0_new,
+	.ce[0] = gf100_ce_new,
 //	.disp = gf119_disp_new,
 //	.dma = gf119_dma_new,
 //	.fifo = gf100_fifo_new,
 //	.gr = gf119_gr_new,
-//	.mspdec = gf100_mspdec_new,
-//	.msppp = gf100_msppp_new,
-//	.msvld = gf100_msvld_new,
+	.mspdec = gf100_mspdec_new,
+	.msppp = gf100_msppp_new,
+	.msvld = gf100_msvld_new,
 //	.pm = gf117_pm_new,
 //	.sw = gf100_sw_new,
 };
@@ -1616,16 +1616,16 @@ nve4_chipset = {
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.ce[0] = gk104_ce0_new,
-//	.ce[1] = gk104_ce1_new,
+//	.ce[0] = gk104_ce_new,
+//	.ce[1] = gk104_ce_new,
 //	.ce[2] = gk104_ce2_new,
 //	.disp = gk104_disp_new,
 //	.dma = gf119_dma_new,
 //	.fifo = gk104_fifo_new,
 //	.gr = gk104_gr_new,
-//	.mspdec = gk104_mspdec_new,
-//	.msppp = gf100_msppp_new,
-//	.msvld = gk104_msvld_new,
+	.mspdec = gk104_mspdec_new,
+	.msppp = gf100_msppp_new,
+	.msvld = gk104_msvld_new,
 //	.pm = gk104_pm_new,
 //	.sw = gf100_sw_new,
 };
@@ -1652,16 +1652,16 @@ nve6_chipset = {
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.ce[0] = gk104_ce0_new,
-//	.ce[1] = gk104_ce1_new,
+//	.ce[0] = gk104_ce_new,
+//	.ce[1] = gk104_ce_new,
 //	.ce[2] = gk104_ce2_new,
 //	.disp = gk104_disp_new,
 //	.dma = gf119_dma_new,
 //	.fifo = gk104_fifo_new,
 //	.gr = gk104_gr_new,
-//	.mspdec = gk104_mspdec_new,
-//	.msppp = gf100_msppp_new,
-//	.msvld = gk104_msvld_new,
+	.mspdec = gk104_mspdec_new,
+	.msppp = gf100_msppp_new,
+	.msvld = gk104_msvld_new,
 //	.pm = gk104_pm_new,
 //	.sw = gf100_sw_new,
 };
@@ -1688,16 +1688,16 @@ nve7_chipset = {
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.ce[0] = gk104_ce0_new,
-//	.ce[1] = gk104_ce1_new,
+//	.ce[0] = gk104_ce_new,
+//	.ce[1] = gk104_ce_new,
 //	.ce[2] = gk104_ce2_new,
 //	.disp = gk104_disp_new,
 //	.dma = gf119_dma_new,
 //	.fifo = gk104_fifo_new,
 //	.gr = gk104_gr_new,
-//	.mspdec = gk104_mspdec_new,
-//	.msppp = gf100_msppp_new,
-//	.msvld = gk104_msvld_new,
+	.mspdec = gk104_mspdec_new,
+	.msppp = gf100_msppp_new,
+	.msvld = gk104_msvld_new,
 //	.pm = gk104_pm_new,
 //	.sw = gf100_sw_new,
 };
@@ -1748,16 +1748,16 @@ nvf0_chipset = {
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.ce[0] = gk104_ce0_new,
-//	.ce[1] = gk104_ce1_new,
+//	.ce[0] = gk104_ce_new,
+//	.ce[1] = gk104_ce_new,
 //	.ce[2] = gk104_ce2_new,
 //	.disp = gk110_disp_new,
 //	.dma = gf119_dma_new,
 //	.fifo = gk104_fifo_new,
 //	.gr = gk110_gr_new,
-//	.mspdec = gk104_mspdec_new,
-//	.msppp = gf100_msppp_new,
-//	.msvld = gk104_msvld_new,
+	.mspdec = gk104_mspdec_new,
+	.msppp = gf100_msppp_new,
+	.msvld = gk104_msvld_new,
 //	.pm = gk110_pm_new,
 //	.sw = gf100_sw_new,
 };
@@ -1784,16 +1784,16 @@ nvf1_chipset = {
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.ce[0] = gk104_ce0_new,
-//	.ce[1] = gk104_ce1_new,
+//	.ce[0] = gk104_ce_new,
+//	.ce[1] = gk104_ce_new,
 //	.ce[2] = gk104_ce2_new,
 //	.disp = gk110_disp_new,
 //	.dma = gf119_dma_new,
 //	.fifo = gk104_fifo_new,
 //	.gr = gk110b_gr_new,
-//	.mspdec = gk104_mspdec_new,
-//	.msppp = gf100_msppp_new,
-//	.msvld = gk104_msvld_new,
+	.mspdec = gk104_mspdec_new,
+	.msppp = gf100_msppp_new,
+	.msvld = gk104_msvld_new,
 //	.pm = gk110_pm_new,
 //	.sw = gf100_sw_new,
 };
@@ -1820,16 +1820,16 @@ nv106_chipset = {
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.ce[0] = gk104_ce0_new,
-//	.ce[1] = gk104_ce1_new,
+//	.ce[0] = gk104_ce_new,
+//	.ce[1] = gk104_ce_new,
 //	.ce[2] = gk104_ce2_new,
 //	.disp = gk110_disp_new,
 //	.dma = gf119_dma_new,
 //	.fifo = gk208_fifo_new,
 //	.gr = gk208_gr_new,
-//	.mspdec = gk104_mspdec_new,
-//	.msppp = gf100_msppp_new,
-//	.msvld = gk104_msvld_new,
+	.mspdec = gk104_mspdec_new,
+	.msppp = gf100_msppp_new,
+	.msvld = gk104_msvld_new,
 //	.sw = gf100_sw_new,
 };
 
@@ -1855,16 +1855,16 @@ nv108_chipset = {
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
 	.volt = nv40_volt_new,
-//	.ce[0] = gk104_ce0_new,
-//	.ce[1] = gk104_ce1_new,
+//	.ce[0] = gk104_ce_new,
+//	.ce[1] = gk104_ce_new,
 //	.ce[2] = gk104_ce2_new,
 //	.disp = gk110_disp_new,
 //	.dma = gf119_dma_new,
 //	.fifo = gk208_fifo_new,
 //	.gr = gk208_gr_new,
-//	.mspdec = gk104_mspdec_new,
-//	.msppp = gf100_msppp_new,
-//	.msvld = gk104_msvld_new,
+	.mspdec = gk104_mspdec_new,
+	.msppp = gf100_msppp_new,
+	.msvld = gk104_msvld_new,
 //	.sw = gf100_sw_new,
 };
 
@@ -1889,7 +1889,7 @@ nv117_chipset = {
 	.pmu = gm107_pmu_new,
 	.therm = gm107_therm_new,
 	.timer = gk20a_timer_new,
-//	.ce[0] = gk104_ce0_new,
+//	.ce[0] = gk104_ce_new,
 //	.ce[2] = gk104_ce2_new,
 //	.disp = gm107_disp_new,
 //	.dma = gf119_dma_new,
@@ -1917,8 +1917,8 @@ nv124_chipset = {
 	.mxm = nv50_mxm_new,
 	.pmu = gm107_pmu_new,
 	.timer = gk20a_timer_new,
-//	.ce[0] = gm204_ce0_new,
-//	.ce[1] = gm204_ce1_new,
+//	.ce[0] = gm204_ce_new,
+//	.ce[1] = gm204_ce_new,
 //	.ce[2] = gm204_ce2_new,
 //	.disp = gm204_disp_new,
 //	.dma = gf119_dma_new,
@@ -1946,8 +1946,8 @@ nv126_chipset = {
 	.mxm = nv50_mxm_new,
 	.pmu = gm107_pmu_new,
 	.timer = gk20a_timer_new,
-//	.ce[0] = gm204_ce0_new,
-//	.ce[1] = gm204_ce1_new,
+//	.ce[0] = gm204_ce_new,
+//	.ce[1] = gm204_ce_new,
 //	.ce[2] = gm204_ce2_new,
 //	.disp = gm204_disp_new,
 //	.dma = gf119_dma_new,

commit 437b2296ced574eada632b11346e22f6b0103e17
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:21 2015 +1000

    drm/nouveau/volt: convert to new-style nvkm_subdev
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 04895322d371..7f858efb2c44 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -465,7 +465,7 @@ nv40_chipset = {
 	.mmu = nv04_mmu_new,
 	.therm = nv40_therm_new,
 	.timer = nv40_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
@@ -490,7 +490,7 @@ nv41_chipset = {
 	.mmu = nv41_mmu_new,
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
@@ -515,7 +515,7 @@ nv42_chipset = {
 	.mmu = nv41_mmu_new,
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
@@ -540,7 +540,7 @@ nv43_chipset = {
 	.mmu = nv41_mmu_new,
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
@@ -565,7 +565,7 @@ nv44_chipset = {
 	.mmu = nv44_mmu_new,
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
@@ -590,7 +590,7 @@ nv45_chipset = {
 	.mmu = nv04_mmu_new,
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
@@ -615,7 +615,7 @@ nv46_chipset = {
 	.mmu = nv44_mmu_new,
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
@@ -640,7 +640,7 @@ nv47_chipset = {
 	.mmu = nv41_mmu_new,
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
@@ -665,7 +665,7 @@ nv49_chipset = {
 	.mmu = nv41_mmu_new,
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
@@ -690,7 +690,7 @@ nv4a_chipset = {
 	.mmu = nv44_mmu_new,
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
@@ -715,7 +715,7 @@ nv4b_chipset = {
 	.mmu = nv41_mmu_new,
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
@@ -740,7 +740,7 @@ nv4c_chipset = {
 	.mmu = nv44_mmu_new,
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
@@ -765,7 +765,7 @@ nv4e_chipset = {
 	.mmu = nv44_mmu_new,
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
@@ -793,7 +793,7 @@ nv50_chipset = {
 	.mxm = nv50_mxm_new,
 	.therm = nv50_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.disp = nv50_disp_new,
 //	.dma = nv50_dma_new,
 //	.fifo = nv50_fifo_new,
@@ -818,7 +818,7 @@ nv63_chipset = {
 	.mmu = nv44_mmu_new,
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
@@ -843,7 +843,7 @@ nv67_chipset = {
 	.mmu = nv44_mmu_new,
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
@@ -868,7 +868,7 @@ nv68_chipset = {
 	.mmu = nv44_mmu_new,
 	.therm = nv40_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
 //	.fifo = nv40_fifo_new,
@@ -896,7 +896,7 @@ nv84_chipset = {
 	.mxm = nv50_mxm_new,
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.bsp = g84_bsp_new,
 //	.cipher = g84_cipher_new,
 //	.disp = g84_disp_new,
@@ -927,7 +927,7 @@ nv86_chipset = {
 	.mxm = nv50_mxm_new,
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.bsp = g84_bsp_new,
 //	.cipher = g84_cipher_new,
 //	.disp = g84_disp_new,
@@ -958,7 +958,7 @@ nv92_chipset = {
 	.mxm = nv50_mxm_new,
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.bsp = g84_bsp_new,
 //	.cipher = g84_cipher_new,
 //	.disp = g84_disp_new,
@@ -989,7 +989,7 @@ nv94_chipset = {
 	.mxm = nv50_mxm_new,
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.bsp = g84_bsp_new,
 //	.cipher = g84_cipher_new,
 //	.disp = g94_disp_new,
@@ -1020,7 +1020,7 @@ nv96_chipset = {
 	.imem = nv50_instmem_new,
 	.mmu = nv50_mmu_new,
 	.bar = g84_bar_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
 //	.sw = nv50_sw_new,
@@ -1051,7 +1051,7 @@ nv98_chipset = {
 	.imem = nv50_instmem_new,
 	.mmu = nv50_mmu_new,
 	.bar = g84_bar_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
 //	.sw = nv50_sw_new,
@@ -1082,7 +1082,7 @@ nva0_chipset = {
 	.mxm = nv50_mxm_new,
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.bsp = g84_bsp_new,
 //	.cipher = g84_cipher_new,
 //	.disp = gt200_disp_new,
@@ -1114,7 +1114,7 @@ nva3_chipset = {
 	.pmu = gt215_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.ce[0] = gt215_ce_new,
 //	.disp = gt215_disp_new,
 //	.dma = nv50_dma_new,
@@ -1147,7 +1147,7 @@ nva5_chipset = {
 	.pmu = gt215_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.ce[0] = gt215_ce_new,
 //	.disp = gt215_disp_new,
 //	.dma = nv50_dma_new,
@@ -1179,7 +1179,7 @@ nva8_chipset = {
 	.pmu = gt215_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.ce[0] = gt215_ce_new,
 //	.disp = gt215_disp_new,
 //	.dma = nv50_dma_new,
@@ -1210,7 +1210,7 @@ nvaa_chipset = {
 	.mxm = nv50_mxm_new,
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.disp = g94_disp_new,
 //	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
@@ -1241,7 +1241,7 @@ nvac_chipset = {
 	.mxm = nv50_mxm_new,
 	.therm = g84_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.disp = g94_disp_new,
 //	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
@@ -1273,7 +1273,7 @@ nvaf_chipset = {
 	.pmu = gt215_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.ce[0] = gt215_ce_new,
 //	.disp = gt215_disp_new,
 //	.dma = nv50_dma_new,
@@ -1307,7 +1307,7 @@ nvc0_chipset = {
 	.pmu = gf100_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.ce[0] = gf100_ce0_new,
 //	.ce[1] = gf100_ce1_new,
 //	.disp = gt215_disp_new,
@@ -1342,7 +1342,7 @@ nvc1_chipset = {
 	.pmu = gf100_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.ce[0] = gf100_ce0_new,
 //	.disp = gt215_disp_new,
 //	.dma = gf100_dma_new,
@@ -1376,7 +1376,7 @@ nvc3_chipset = {
 	.pmu = gf100_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.ce[0] = gf100_ce0_new,
 //	.disp = gt215_disp_new,
 //	.dma = gf100_dma_new,
@@ -1410,7 +1410,7 @@ nvc4_chipset = {
 	.pmu = gf100_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.ce[0] = gf100_ce0_new,
 //	.ce[1] = gf100_ce1_new,
 //	.disp = gt215_disp_new,
@@ -1445,7 +1445,7 @@ nvc8_chipset = {
 	.pmu = gf100_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.ce[0] = gf100_ce0_new,
 //	.ce[1] = gf100_ce1_new,
 //	.disp = gt215_disp_new,
@@ -1480,7 +1480,7 @@ nvce_chipset = {
 	.pmu = gf100_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.ce[0] = gf100_ce0_new,
 //	.ce[1] = gf100_ce1_new,
 //	.disp = gt215_disp_new,
@@ -1515,7 +1515,7 @@ nvcf_chipset = {
 	.pmu = gf100_pmu_new,
 	.therm = gt215_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.ce[0] = gf100_ce0_new,
 //	.disp = gt215_disp_new,
 //	.dma = gf100_dma_new,
@@ -1581,7 +1581,7 @@ nvd9_chipset = {
 	.pmu = gf119_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.ce[0] = gf100_ce0_new,
 //	.disp = gf119_disp_new,
 //	.dma = gf119_dma_new,
@@ -1615,7 +1615,7 @@ nve4_chipset = {
 	.pmu = gk104_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.ce[0] = gk104_ce0_new,
 //	.ce[1] = gk104_ce1_new,
 //	.ce[2] = gk104_ce2_new,
@@ -1651,7 +1651,7 @@ nve6_chipset = {
 	.pmu = gk104_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.ce[0] = gk104_ce0_new,
 //	.ce[1] = gk104_ce1_new,
 //	.ce[2] = gk104_ce2_new,
@@ -1687,7 +1687,7 @@ nve7_chipset = {
 	.pmu = gf119_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.ce[0] = gk104_ce0_new,
 //	.ce[1] = gk104_ce1_new,
 //	.ce[2] = gk104_ce2_new,
@@ -1717,7 +1717,7 @@ nvea_chipset = {
 	.mmu = gf100_mmu_new,
 	.pmu = gk20a_pmu_new,
 	.timer = gk20a_timer_new,
-//	.volt = gk20a_volt_new,
+	.volt = gk20a_volt_new,
 //	.ce[2] = gk104_ce2_new,
 //	.dma = gf119_dma_new,
 //	.fifo = gk20a_fifo_new,
@@ -1747,7 +1747,7 @@ nvf0_chipset = {
 	.pmu = gk110_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.ce[0] = gk104_ce0_new,
 //	.ce[1] = gk104_ce1_new,
 //	.ce[2] = gk104_ce2_new,
@@ -1783,7 +1783,7 @@ nvf1_chipset = {
 	.pmu = gk110_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.ce[0] = gk104_ce0_new,
 //	.ce[1] = gk104_ce1_new,
 //	.ce[2] = gk104_ce2_new,
@@ -1819,7 +1819,7 @@ nv106_chipset = {
 	.pmu = gk208_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.ce[0] = gk104_ce0_new,
 //	.ce[1] = gk104_ce1_new,
 //	.ce[2] = gk104_ce2_new,
@@ -1854,7 +1854,7 @@ nv108_chipset = {
 	.pmu = gk208_pmu_new,
 	.therm = gf119_therm_new,
 	.timer = nv41_timer_new,
-//	.volt = nv40_volt_new,
+	.volt = nv40_volt_new,
 //	.ce[0] = gk104_ce0_new,
 //	.ce[1] = gk104_ce1_new,
 //	.ce[2] = gk104_ce2_new,

commit 31649ecf47a44e02e73bffc5680c8f56d6cf587a
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:21 2015 +1000

    drm/nouveau/tmr: convert to new-style nvkm_subdev
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 3734d1fb7756..04895322d371 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -85,7 +85,7 @@ nv4_chipset = {
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
-//	.timer = nv04_timer_new,
+	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
 //	.fifo = nv04_fifo_new,
@@ -105,7 +105,7 @@ nv5_chipset = {
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
-//	.timer = nv04_timer_new,
+	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
 //	.fifo = nv04_fifo_new,
@@ -126,7 +126,7 @@ nv10_chipset = {
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
-//	.timer = nv04_timer_new,
+	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
 //	.gr = nv10_gr_new,
@@ -145,7 +145,7 @@ nv11_chipset = {
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
-//	.timer = nv04_timer_new,
+	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
 //	.fifo = nv10_fifo_new,
@@ -166,7 +166,7 @@ nv15_chipset = {
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
-//	.timer = nv04_timer_new,
+	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
 //	.fifo = nv10_fifo_new,
@@ -187,7 +187,7 @@ nv17_chipset = {
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
-//	.timer = nv04_timer_new,
+	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
 //	.fifo = nv17_fifo_new,
@@ -208,7 +208,7 @@ nv18_chipset = {
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
-//	.timer = nv04_timer_new,
+	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
 //	.fifo = nv17_fifo_new,
@@ -229,7 +229,7 @@ nv1a_chipset = {
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
-//	.timer = nv04_timer_new,
+	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
 //	.fifo = nv10_fifo_new,
@@ -250,7 +250,7 @@ nv1f_chipset = {
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
-//	.timer = nv04_timer_new,
+	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
 //	.fifo = nv17_fifo_new,
@@ -271,7 +271,7 @@ nv20_chipset = {
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
-//	.timer = nv04_timer_new,
+	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
 //	.fifo = nv17_fifo_new,
@@ -292,7 +292,7 @@ nv25_chipset = {
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
-//	.timer = nv04_timer_new,
+	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
 //	.fifo = nv17_fifo_new,
@@ -313,7 +313,7 @@ nv28_chipset = {
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
-//	.timer = nv04_timer_new,
+	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
 //	.fifo = nv17_fifo_new,
@@ -334,7 +334,7 @@ nv2a_chipset = {
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
-//	.timer = nv04_timer_new,
+	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
 //	.fifo = nv17_fifo_new,
@@ -355,7 +355,7 @@ nv30_chipset = {
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
-//	.timer = nv04_timer_new,
+	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
 //	.fifo = nv17_fifo_new,
@@ -376,7 +376,7 @@ nv31_chipset = {
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
-//	.timer = nv04_timer_new,
+	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
 //	.fifo = nv17_fifo_new,
@@ -398,7 +398,7 @@ nv34_chipset = {
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
-//	.timer = nv04_timer_new,
+	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
 //	.fifo = nv17_fifo_new,
@@ -420,7 +420,7 @@ nv35_chipset = {
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
-//	.timer = nv04_timer_new,
+	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
 //	.fifo = nv17_fifo_new,
@@ -441,7 +441,7 @@ nv36_chipset = {
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
 	.mmu = nv04_mmu_new,
-//	.timer = nv04_timer_new,
+	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
 //	.fifo = nv17_fifo_new,
@@ -464,7 +464,7 @@ nv40_chipset = {
 	.mc = nv40_mc_new,
 	.mmu = nv04_mmu_new,
 	.therm = nv40_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv40_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
@@ -489,7 +489,7 @@ nv41_chipset = {
 	.mc = nv40_mc_new,
 	.mmu = nv41_mmu_new,
 	.therm = nv40_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
@@ -514,7 +514,7 @@ nv42_chipset = {
 	.mc = nv40_mc_new,
 	.mmu = nv41_mmu_new,
 	.therm = nv40_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
@@ -539,7 +539,7 @@ nv43_chipset = {
 	.mc = nv40_mc_new,
 	.mmu = nv41_mmu_new,
 	.therm = nv40_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
@@ -564,7 +564,7 @@ nv44_chipset = {
 	.mc = nv44_mc_new,
 	.mmu = nv44_mmu_new,
 	.therm = nv40_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
@@ -589,7 +589,7 @@ nv45_chipset = {
 	.mc = nv40_mc_new,
 	.mmu = nv04_mmu_new,
 	.therm = nv40_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
@@ -614,7 +614,7 @@ nv46_chipset = {
 	.mc = nv44_mc_new,
 	.mmu = nv44_mmu_new,
 	.therm = nv40_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
@@ -639,7 +639,7 @@ nv47_chipset = {
 	.mc = nv40_mc_new,
 	.mmu = nv41_mmu_new,
 	.therm = nv40_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
@@ -664,7 +664,7 @@ nv49_chipset = {
 	.mc = nv40_mc_new,
 	.mmu = nv41_mmu_new,
 	.therm = nv40_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
@@ -689,7 +689,7 @@ nv4a_chipset = {
 	.mc = nv44_mc_new,
 	.mmu = nv44_mmu_new,
 	.therm = nv40_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
@@ -714,7 +714,7 @@ nv4b_chipset = {
 	.mc = nv40_mc_new,
 	.mmu = nv41_mmu_new,
 	.therm = nv40_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
@@ -739,7 +739,7 @@ nv4c_chipset = {
 	.mc = nv4c_mc_new,
 	.mmu = nv44_mmu_new,
 	.therm = nv40_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
@@ -764,7 +764,7 @@ nv4e_chipset = {
 	.mc = nv4c_mc_new,
 	.mmu = nv44_mmu_new,
 	.therm = nv40_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
@@ -792,7 +792,7 @@ nv50_chipset = {
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
 	.therm = nv50_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = nv50_disp_new,
 //	.dma = nv50_dma_new,
@@ -817,7 +817,7 @@ nv63_chipset = {
 	.mc = nv4c_mc_new,
 	.mmu = nv44_mmu_new,
 	.therm = nv40_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
@@ -842,7 +842,7 @@ nv67_chipset = {
 	.mc = nv4c_mc_new,
 	.mmu = nv44_mmu_new,
 	.therm = nv40_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
@@ -867,7 +867,7 @@ nv68_chipset = {
 	.mc = nv4c_mc_new,
 	.mmu = nv44_mmu_new,
 	.therm = nv40_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
@@ -895,7 +895,7 @@ nv84_chipset = {
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
 	.therm = g84_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.bsp = g84_bsp_new,
 //	.cipher = g84_cipher_new,
@@ -926,7 +926,7 @@ nv86_chipset = {
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
 	.therm = g84_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.bsp = g84_bsp_new,
 //	.cipher = g84_cipher_new,
@@ -957,7 +957,7 @@ nv92_chipset = {
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
 	.therm = g84_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.bsp = g84_bsp_new,
 //	.cipher = g84_cipher_new,
@@ -988,7 +988,7 @@ nv94_chipset = {
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
 	.therm = g84_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.bsp = g84_bsp_new,
 //	.cipher = g84_cipher_new,
@@ -1015,7 +1015,7 @@ nv96_chipset = {
 	.devinit = g84_devinit_new,
 	.mc = g94_mc_new,
 	.bus = g94_bus_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 	.fb = g84_fb_new,
 	.imem = nv50_instmem_new,
 	.mmu = nv50_mmu_new,
@@ -1046,7 +1046,7 @@ nv98_chipset = {
 	.devinit = g98_devinit_new,
 	.mc = g98_mc_new,
 	.bus = g94_bus_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 	.fb = g84_fb_new,
 	.imem = nv50_instmem_new,
 	.mmu = nv50_mmu_new,
@@ -1081,7 +1081,7 @@ nva0_chipset = {
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
 	.therm = g84_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.bsp = g84_bsp_new,
 //	.cipher = g84_cipher_new,
@@ -1113,7 +1113,7 @@ nva3_chipset = {
 	.mxm = nv50_mxm_new,
 	.pmu = gt215_pmu_new,
 	.therm = gt215_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gt215_ce_new,
 //	.disp = gt215_disp_new,
@@ -1146,7 +1146,7 @@ nva5_chipset = {
 	.mxm = nv50_mxm_new,
 	.pmu = gt215_pmu_new,
 	.therm = gt215_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gt215_ce_new,
 //	.disp = gt215_disp_new,
@@ -1178,7 +1178,7 @@ nva8_chipset = {
 	.mxm = nv50_mxm_new,
 	.pmu = gt215_pmu_new,
 	.therm = gt215_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gt215_ce_new,
 //	.disp = gt215_disp_new,
@@ -1209,7 +1209,7 @@ nvaa_chipset = {
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
 	.therm = g84_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = g94_disp_new,
 //	.dma = nv50_dma_new,
@@ -1240,7 +1240,7 @@ nvac_chipset = {
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
 	.therm = g84_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = g94_disp_new,
 //	.dma = nv50_dma_new,
@@ -1272,7 +1272,7 @@ nvaf_chipset = {
 	.mxm = nv50_mxm_new,
 	.pmu = gt215_pmu_new,
 	.therm = gt215_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gt215_ce_new,
 //	.disp = gt215_disp_new,
@@ -1306,7 +1306,7 @@ nvc0_chipset = {
 	.mxm = nv50_mxm_new,
 	.pmu = gf100_pmu_new,
 	.therm = gt215_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gf100_ce0_new,
 //	.ce[1] = gf100_ce1_new,
@@ -1341,7 +1341,7 @@ nvc1_chipset = {
 	.mxm = nv50_mxm_new,
 	.pmu = gf100_pmu_new,
 	.therm = gt215_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gf100_ce0_new,
 //	.disp = gt215_disp_new,
@@ -1375,7 +1375,7 @@ nvc3_chipset = {
 	.mxm = nv50_mxm_new,
 	.pmu = gf100_pmu_new,
 	.therm = gt215_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gf100_ce0_new,
 //	.disp = gt215_disp_new,
@@ -1409,7 +1409,7 @@ nvc4_chipset = {
 	.mxm = nv50_mxm_new,
 	.pmu = gf100_pmu_new,
 	.therm = gt215_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gf100_ce0_new,
 //	.ce[1] = gf100_ce1_new,
@@ -1444,7 +1444,7 @@ nvc8_chipset = {
 	.mxm = nv50_mxm_new,
 	.pmu = gf100_pmu_new,
 	.therm = gt215_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gf100_ce0_new,
 //	.ce[1] = gf100_ce1_new,
@@ -1479,7 +1479,7 @@ nvce_chipset = {
 	.mxm = nv50_mxm_new,
 	.pmu = gf100_pmu_new,
 	.therm = gt215_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gf100_ce0_new,
 //	.ce[1] = gf100_ce1_new,
@@ -1514,7 +1514,7 @@ nvcf_chipset = {
 	.mxm = nv50_mxm_new,
 	.pmu = gf100_pmu_new,
 	.therm = gt215_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gf100_ce0_new,
 //	.disp = gt215_disp_new,
@@ -1547,7 +1547,7 @@ nvd7_chipset = {
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
 	.therm = gf119_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.ce[0] = gf100_ce0_new,
 //	.disp = gf119_disp_new,
 //	.dma = gf119_dma_new,
@@ -1580,7 +1580,7 @@ nvd9_chipset = {
 	.mxm = nv50_mxm_new,
 	.pmu = gf119_pmu_new,
 	.therm = gf119_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gf100_ce0_new,
 //	.disp = gf119_disp_new,
@@ -1614,7 +1614,7 @@ nve4_chipset = {
 	.mxm = nv50_mxm_new,
 	.pmu = gk104_pmu_new,
 	.therm = gf119_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gk104_ce0_new,
 //	.ce[1] = gk104_ce1_new,
@@ -1650,7 +1650,7 @@ nve6_chipset = {
 	.mxm = nv50_mxm_new,
 	.pmu = gk104_pmu_new,
 	.therm = gf119_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gk104_ce0_new,
 //	.ce[1] = gk104_ce1_new,
@@ -1686,7 +1686,7 @@ nve7_chipset = {
 	.mxm = nv50_mxm_new,
 	.pmu = gf119_pmu_new,
 	.therm = gf119_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gk104_ce0_new,
 //	.ce[1] = gk104_ce1_new,
@@ -1716,7 +1716,7 @@ nvea_chipset = {
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
 	.pmu = gk20a_pmu_new,
-//	.timer = gk20a_timer_new,
+	.timer = gk20a_timer_new,
 //	.volt = gk20a_volt_new,
 //	.ce[2] = gk104_ce2_new,
 //	.dma = gf119_dma_new,
@@ -1746,7 +1746,7 @@ nvf0_chipset = {
 	.mxm = nv50_mxm_new,
 	.pmu = gk110_pmu_new,
 	.therm = gf119_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gk104_ce0_new,
 //	.ce[1] = gk104_ce1_new,
@@ -1782,7 +1782,7 @@ nvf1_chipset = {
 	.mxm = nv50_mxm_new,
 	.pmu = gk110_pmu_new,
 	.therm = gf119_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gk104_ce0_new,
 //	.ce[1] = gk104_ce1_new,
@@ -1818,7 +1818,7 @@ nv106_chipset = {
 	.mxm = nv50_mxm_new,
 	.pmu = gk208_pmu_new,
 	.therm = gf119_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gk104_ce0_new,
 //	.ce[1] = gk104_ce1_new,
@@ -1853,7 +1853,7 @@ nv108_chipset = {
 	.mxm = nv50_mxm_new,
 	.pmu = gk208_pmu_new,
 	.therm = gf119_therm_new,
-//	.timer = nv04_timer_new,
+	.timer = nv41_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gk104_ce0_new,
 //	.ce[1] = gk104_ce1_new,
@@ -1888,7 +1888,7 @@ nv117_chipset = {
 	.mxm = nv50_mxm_new,
 	.pmu = gm107_pmu_new,
 	.therm = gm107_therm_new,
-//	.timer = gk20a_timer_new,
+	.timer = gk20a_timer_new,
 //	.ce[0] = gk104_ce0_new,
 //	.ce[2] = gk104_ce2_new,
 //	.disp = gm107_disp_new,
@@ -1916,7 +1916,7 @@ nv124_chipset = {
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pmu = gm107_pmu_new,
-//	.timer = gk20a_timer_new,
+	.timer = gk20a_timer_new,
 //	.ce[0] = gm204_ce0_new,
 //	.ce[1] = gm204_ce1_new,
 //	.ce[2] = gm204_ce2_new,
@@ -1945,7 +1945,7 @@ nv126_chipset = {
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pmu = gm107_pmu_new,
-//	.timer = gk20a_timer_new,
+	.timer = gk20a_timer_new,
 //	.ce[0] = gm204_ce0_new,
 //	.ce[1] = gm204_ce1_new,
 //	.ce[2] = gm204_ce2_new,
@@ -1969,7 +1969,7 @@ nv12b_chipset = {
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
 	.mmu = gf100_mmu_new,
-//	.timer = gk20a_timer_new,
+	.timer = gk20a_timer_new,
 //	.ce[2] = gm204_ce2_new,
 //	.dma = gf119_dma_new,
 //	.fifo = gm20b_fifo_new,

commit 57113c0170b9efeacb3e3e9d4c2178c30d9cd991
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:21 2015 +1000

    drm/nouveau/therm: convert to new-style nvkm_subdev
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 8f201022377f..3734d1fb7756 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -463,7 +463,7 @@ nv40_chipset = {
 	.imem = nv40_instmem_new,
 	.mc = nv40_mc_new,
 	.mmu = nv04_mmu_new,
-//	.therm = nv40_therm_new,
+	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
@@ -488,7 +488,7 @@ nv41_chipset = {
 	.imem = nv40_instmem_new,
 	.mc = nv40_mc_new,
 	.mmu = nv41_mmu_new,
-//	.therm = nv40_therm_new,
+	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
@@ -513,7 +513,7 @@ nv42_chipset = {
 	.imem = nv40_instmem_new,
 	.mc = nv40_mc_new,
 	.mmu = nv41_mmu_new,
-//	.therm = nv40_therm_new,
+	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
@@ -538,7 +538,7 @@ nv43_chipset = {
 	.imem = nv40_instmem_new,
 	.mc = nv40_mc_new,
 	.mmu = nv41_mmu_new,
-//	.therm = nv40_therm_new,
+	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
@@ -563,7 +563,7 @@ nv44_chipset = {
 	.imem = nv40_instmem_new,
 	.mc = nv44_mc_new,
 	.mmu = nv44_mmu_new,
-//	.therm = nv40_therm_new,
+	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
@@ -588,7 +588,7 @@ nv45_chipset = {
 	.imem = nv40_instmem_new,
 	.mc = nv40_mc_new,
 	.mmu = nv04_mmu_new,
-//	.therm = nv40_therm_new,
+	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
@@ -613,7 +613,7 @@ nv46_chipset = {
 	.imem = nv40_instmem_new,
 	.mc = nv44_mc_new,
 	.mmu = nv44_mmu_new,
-//	.therm = nv40_therm_new,
+	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
@@ -638,7 +638,7 @@ nv47_chipset = {
 	.imem = nv40_instmem_new,
 	.mc = nv40_mc_new,
 	.mmu = nv41_mmu_new,
-//	.therm = nv40_therm_new,
+	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
@@ -663,7 +663,7 @@ nv49_chipset = {
 	.imem = nv40_instmem_new,
 	.mc = nv40_mc_new,
 	.mmu = nv41_mmu_new,
-//	.therm = nv40_therm_new,
+	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
@@ -688,7 +688,7 @@ nv4a_chipset = {
 	.imem = nv40_instmem_new,
 	.mc = nv44_mc_new,
 	.mmu = nv44_mmu_new,
-//	.therm = nv40_therm_new,
+	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
@@ -713,7 +713,7 @@ nv4b_chipset = {
 	.imem = nv40_instmem_new,
 	.mc = nv40_mc_new,
 	.mmu = nv41_mmu_new,
-//	.therm = nv40_therm_new,
+	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
@@ -738,7 +738,7 @@ nv4c_chipset = {
 	.imem = nv40_instmem_new,
 	.mc = nv4c_mc_new,
 	.mmu = nv44_mmu_new,
-//	.therm = nv40_therm_new,
+	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
@@ -763,7 +763,7 @@ nv4e_chipset = {
 	.imem = nv40_instmem_new,
 	.mc = nv4c_mc_new,
 	.mmu = nv44_mmu_new,
-//	.therm = nv40_therm_new,
+	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
@@ -791,7 +791,7 @@ nv50_chipset = {
 	.mc = nv50_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-//	.therm = nv50_therm_new,
+	.therm = nv50_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = nv50_disp_new,
@@ -816,7 +816,7 @@ nv63_chipset = {
 	.imem = nv40_instmem_new,
 	.mc = nv4c_mc_new,
 	.mmu = nv44_mmu_new,
-//	.therm = nv40_therm_new,
+	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
@@ -841,7 +841,7 @@ nv67_chipset = {
 	.imem = nv40_instmem_new,
 	.mc = nv4c_mc_new,
 	.mmu = nv44_mmu_new,
-//	.therm = nv40_therm_new,
+	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
@@ -866,7 +866,7 @@ nv68_chipset = {
 	.imem = nv40_instmem_new,
 	.mc = nv4c_mc_new,
 	.mmu = nv44_mmu_new,
-//	.therm = nv40_therm_new,
+	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = nv04_disp_new,
@@ -894,7 +894,7 @@ nv84_chipset = {
 	.mc = nv50_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-//	.therm = g84_therm_new,
+	.therm = g84_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.bsp = g84_bsp_new,
@@ -925,7 +925,7 @@ nv86_chipset = {
 	.mc = nv50_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-//	.therm = g84_therm_new,
+	.therm = g84_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.bsp = g84_bsp_new,
@@ -956,7 +956,7 @@ nv92_chipset = {
 	.mc = nv50_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-//	.therm = g84_therm_new,
+	.therm = g84_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.bsp = g84_bsp_new,
@@ -987,7 +987,7 @@ nv94_chipset = {
 	.mc = g94_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-//	.therm = g84_therm_new,
+	.therm = g84_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.bsp = g84_bsp_new,
@@ -1010,7 +1010,7 @@ nv96_chipset = {
 	.i2c = g94_i2c_new,
 	.fuse = nv50_fuse_new,
 	.clk = g84_clk_new,
-//	.therm = g84_therm_new,
+	.therm = g84_therm_new,
 	.mxm = nv50_mxm_new,
 	.devinit = g84_devinit_new,
 	.mc = g94_mc_new,
@@ -1041,7 +1041,7 @@ nv98_chipset = {
 	.i2c = g94_i2c_new,
 	.fuse = nv50_fuse_new,
 	.clk = g84_clk_new,
-//	.therm = g84_therm_new,
+	.therm = g84_therm_new,
 	.mxm = nv50_mxm_new,
 	.devinit = g98_devinit_new,
 	.mc = g98_mc_new,
@@ -1080,7 +1080,7 @@ nva0_chipset = {
 	.mc = g98_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-//	.therm = g84_therm_new,
+	.therm = g84_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.bsp = g84_bsp_new,
@@ -1112,7 +1112,7 @@ nva3_chipset = {
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pmu = gt215_pmu_new,
-//	.therm = gt215_therm_new,
+	.therm = gt215_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gt215_ce_new,
@@ -1145,7 +1145,7 @@ nva5_chipset = {
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pmu = gt215_pmu_new,
-//	.therm = gt215_therm_new,
+	.therm = gt215_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gt215_ce_new,
@@ -1177,7 +1177,7 @@ nva8_chipset = {
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pmu = gt215_pmu_new,
-//	.therm = gt215_therm_new,
+	.therm = gt215_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gt215_ce_new,
@@ -1208,7 +1208,7 @@ nvaa_chipset = {
 	.mc = g98_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-//	.therm = g84_therm_new,
+	.therm = g84_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = g94_disp_new,
@@ -1239,7 +1239,7 @@ nvac_chipset = {
 	.mc = g98_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-//	.therm = g84_therm_new,
+	.therm = g84_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.disp = g94_disp_new,
@@ -1271,7 +1271,7 @@ nvaf_chipset = {
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pmu = gt215_pmu_new,
-//	.therm = gt215_therm_new,
+	.therm = gt215_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gt215_ce_new,
@@ -1305,7 +1305,7 @@ nvc0_chipset = {
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pmu = gf100_pmu_new,
-//	.therm = gt215_therm_new,
+	.therm = gt215_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gf100_ce0_new,
@@ -1340,7 +1340,7 @@ nvc1_chipset = {
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pmu = gf100_pmu_new,
-//	.therm = gt215_therm_new,
+	.therm = gt215_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gf100_ce0_new,
@@ -1374,7 +1374,7 @@ nvc3_chipset = {
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pmu = gf100_pmu_new,
-//	.therm = gt215_therm_new,
+	.therm = gt215_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gf100_ce0_new,
@@ -1408,7 +1408,7 @@ nvc4_chipset = {
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pmu = gf100_pmu_new,
-//	.therm = gt215_therm_new,
+	.therm = gt215_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gf100_ce0_new,
@@ -1443,7 +1443,7 @@ nvc8_chipset = {
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pmu = gf100_pmu_new,
-//	.therm = gt215_therm_new,
+	.therm = gt215_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gf100_ce0_new,
@@ -1478,7 +1478,7 @@ nvce_chipset = {
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pmu = gf100_pmu_new,
-//	.therm = gt215_therm_new,
+	.therm = gt215_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gf100_ce0_new,
@@ -1513,7 +1513,7 @@ nvcf_chipset = {
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pmu = gf100_pmu_new,
-//	.therm = gt215_therm_new,
+	.therm = gt215_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gf100_ce0_new,
@@ -1546,7 +1546,7 @@ nvd7_chipset = {
 	.mc = gf106_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-//	.therm = gf110_therm_new,
+	.therm = gf119_therm_new,
 //	.timer = nv04_timer_new,
 //	.ce[0] = gf100_ce0_new,
 //	.disp = gf119_disp_new,
@@ -1579,7 +1579,7 @@ nvd9_chipset = {
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pmu = gf119_pmu_new,
-//	.therm = gf110_therm_new,
+	.therm = gf119_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gf100_ce0_new,
@@ -1613,7 +1613,7 @@ nve4_chipset = {
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pmu = gk104_pmu_new,
-//	.therm = gf110_therm_new,
+	.therm = gf119_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gk104_ce0_new,
@@ -1649,7 +1649,7 @@ nve6_chipset = {
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pmu = gk104_pmu_new,
-//	.therm = gf110_therm_new,
+	.therm = gf119_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gk104_ce0_new,
@@ -1685,7 +1685,7 @@ nve7_chipset = {
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pmu = gf119_pmu_new,
-//	.therm = gf110_therm_new,
+	.therm = gf119_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gk104_ce0_new,
@@ -1745,7 +1745,7 @@ nvf0_chipset = {
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pmu = gk110_pmu_new,
-//	.therm = gf110_therm_new,
+	.therm = gf119_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gk104_ce0_new,
@@ -1781,7 +1781,7 @@ nvf1_chipset = {
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pmu = gk110_pmu_new,
-//	.therm = gf110_therm_new,
+	.therm = gf119_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gk104_ce0_new,
@@ -1817,7 +1817,7 @@ nv106_chipset = {
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pmu = gk208_pmu_new,
-//	.therm = gf110_therm_new,
+	.therm = gf119_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gk104_ce0_new,
@@ -1852,7 +1852,7 @@ nv108_chipset = {
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pmu = gk208_pmu_new,
-//	.therm = gf110_therm_new,
+	.therm = gf119_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
 //	.ce[0] = gk104_ce0_new,
@@ -1887,7 +1887,7 @@ nv117_chipset = {
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
 	.pmu = gm107_pmu_new,
-//	.therm = gm107_therm_new,
+	.therm = gm107_therm_new,
 //	.timer = gk20a_timer_new,
 //	.ce[0] = gk104_ce0_new,
 //	.ce[2] = gk104_ce2_new,

commit e2ca4e7d6e56cb73a068708f0b0c9bd62ab9e02c
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:21 2015 +1000

    drm/nouveau/pmu: convert to new-style nvkm_subdev
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 350daa3c630c..8f201022377f 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1111,7 +1111,7 @@ nva3_chipset = {
 	.mc = g98_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-//	.pmu = gt215_pmu_new,
+	.pmu = gt215_pmu_new,
 //	.therm = gt215_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -1144,7 +1144,7 @@ nva5_chipset = {
 	.mc = g98_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-//	.pmu = gt215_pmu_new,
+	.pmu = gt215_pmu_new,
 //	.therm = gt215_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -1176,7 +1176,7 @@ nva8_chipset = {
 	.mc = g98_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-//	.pmu = gt215_pmu_new,
+	.pmu = gt215_pmu_new,
 //	.therm = gt215_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -1270,7 +1270,7 @@ nvaf_chipset = {
 	.mc = g98_mc_new,
 	.mmu = nv50_mmu_new,
 	.mxm = nv50_mxm_new,
-//	.pmu = gt215_pmu_new,
+	.pmu = gt215_pmu_new,
 //	.therm = gt215_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -1304,7 +1304,7 @@ nvc0_chipset = {
 	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-//	.pmu = gf100_pmu_new,
+	.pmu = gf100_pmu_new,
 //	.therm = gt215_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -1339,7 +1339,7 @@ nvc1_chipset = {
 	.mc = gf106_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-//	.pmu = gf100_pmu_new,
+	.pmu = gf100_pmu_new,
 //	.therm = gt215_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -1373,7 +1373,7 @@ nvc3_chipset = {
 	.mc = gf106_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-//	.pmu = gf100_pmu_new,
+	.pmu = gf100_pmu_new,
 //	.therm = gt215_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -1407,7 +1407,7 @@ nvc4_chipset = {
 	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-//	.pmu = gf100_pmu_new,
+	.pmu = gf100_pmu_new,
 //	.therm = gt215_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -1442,7 +1442,7 @@ nvc8_chipset = {
 	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-//	.pmu = gf100_pmu_new,
+	.pmu = gf100_pmu_new,
 //	.therm = gt215_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -1477,7 +1477,7 @@ nvce_chipset = {
 	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-//	.pmu = gf100_pmu_new,
+	.pmu = gf100_pmu_new,
 //	.therm = gt215_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -1512,7 +1512,7 @@ nvcf_chipset = {
 	.mc = gf106_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-//	.pmu = gf100_pmu_new,
+	.pmu = gf100_pmu_new,
 //	.therm = gt215_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -1578,7 +1578,7 @@ nvd9_chipset = {
 	.mc = gf106_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-//	.pmu = gf110_pmu_new,
+	.pmu = gf119_pmu_new,
 //	.therm = gf110_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -1612,7 +1612,7 @@ nve4_chipset = {
 	.mc = gf106_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-//	.pmu = gk104_pmu_new,
+	.pmu = gk104_pmu_new,
 //	.therm = gf110_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -1648,7 +1648,7 @@ nve6_chipset = {
 	.mc = gf106_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-//	.pmu = gk104_pmu_new,
+	.pmu = gk104_pmu_new,
 //	.therm = gf110_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -1684,7 +1684,7 @@ nve7_chipset = {
 	.mc = gf106_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-//	.pmu = gf110_pmu_new,
+	.pmu = gf119_pmu_new,
 //	.therm = gf110_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -1715,7 +1715,7 @@ nvea_chipset = {
 	.ltc = gk104_ltc_new,
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
-//	.pmu = gk20a_pmu_new,
+	.pmu = gk20a_pmu_new,
 //	.timer = gk20a_timer_new,
 //	.volt = gk20a_volt_new,
 //	.ce[2] = gk104_ce2_new,
@@ -1744,7 +1744,7 @@ nvf0_chipset = {
 	.mc = gf106_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-//	.pmu = gk110_pmu_new,
+	.pmu = gk110_pmu_new,
 //	.therm = gf110_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -1780,7 +1780,7 @@ nvf1_chipset = {
 	.mc = gf106_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-//	.pmu = gk110_pmu_new,
+	.pmu = gk110_pmu_new,
 //	.therm = gf110_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -1816,7 +1816,7 @@ nv106_chipset = {
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-//	.pmu = gk208_pmu_new,
+	.pmu = gk208_pmu_new,
 //	.therm = gf110_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -1851,7 +1851,7 @@ nv108_chipset = {
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-//	.pmu = gk208_pmu_new,
+	.pmu = gk208_pmu_new,
 //	.therm = gf110_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -1886,7 +1886,7 @@ nv117_chipset = {
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-//	.pmu = gk208_pmu_new,
+	.pmu = gm107_pmu_new,
 //	.therm = gm107_therm_new,
 //	.timer = gk20a_timer_new,
 //	.ce[0] = gk104_ce0_new,
@@ -1915,7 +1915,7 @@ nv124_chipset = {
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-//	.pmu = gk208_pmu_new,
+	.pmu = gm107_pmu_new,
 //	.timer = gk20a_timer_new,
 //	.ce[0] = gm204_ce0_new,
 //	.ce[1] = gm204_ce1_new,
@@ -1944,7 +1944,7 @@ nv126_chipset = {
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
 	.mxm = nv50_mxm_new,
-//	.pmu = gk208_pmu_new,
+	.pmu = gm107_pmu_new,
 //	.timer = gk20a_timer_new,
 //	.ce[0] = gm204_ce0_new,
 //	.ce[1] = gm204_ce1_new,

commit a4f7bd360893ab4f6bbc1ae4ef617c68bf987f3d
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:21 2015 +1000

    drm/nouveau/mxm: convert to new-style nvkm_subdev
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 7da5dc44baf4..350daa3c630c 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -790,7 +790,7 @@ nv50_chipset = {
 	.imem = nv50_instmem_new,
 	.mc = nv50_mc_new,
 	.mmu = nv50_mmu_new,
-//	.mxm = nv50_mxm_new,
+	.mxm = nv50_mxm_new,
 //	.therm = nv50_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -893,7 +893,7 @@ nv84_chipset = {
 	.imem = nv50_instmem_new,
 	.mc = nv50_mc_new,
 	.mmu = nv50_mmu_new,
-//	.mxm = nv50_mxm_new,
+	.mxm = nv50_mxm_new,
 //	.therm = g84_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -924,7 +924,7 @@ nv86_chipset = {
 	.imem = nv50_instmem_new,
 	.mc = nv50_mc_new,
 	.mmu = nv50_mmu_new,
-//	.mxm = nv50_mxm_new,
+	.mxm = nv50_mxm_new,
 //	.therm = g84_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -955,7 +955,7 @@ nv92_chipset = {
 	.imem = nv50_instmem_new,
 	.mc = nv50_mc_new,
 	.mmu = nv50_mmu_new,
-//	.mxm = nv50_mxm_new,
+	.mxm = nv50_mxm_new,
 //	.therm = g84_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -986,7 +986,7 @@ nv94_chipset = {
 	.imem = nv50_instmem_new,
 	.mc = g94_mc_new,
 	.mmu = nv50_mmu_new,
-//	.mxm = nv50_mxm_new,
+	.mxm = nv50_mxm_new,
 //	.therm = g84_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -1011,7 +1011,7 @@ nv96_chipset = {
 	.fuse = nv50_fuse_new,
 	.clk = g84_clk_new,
 //	.therm = g84_therm_new,
-//	.mxm = nv50_mxm_new,
+	.mxm = nv50_mxm_new,
 	.devinit = g84_devinit_new,
 	.mc = g94_mc_new,
 	.bus = g94_bus_new,
@@ -1042,7 +1042,7 @@ nv98_chipset = {
 	.fuse = nv50_fuse_new,
 	.clk = g84_clk_new,
 //	.therm = g84_therm_new,
-//	.mxm = nv50_mxm_new,
+	.mxm = nv50_mxm_new,
 	.devinit = g98_devinit_new,
 	.mc = g98_mc_new,
 	.bus = g94_bus_new,
@@ -1079,7 +1079,7 @@ nva0_chipset = {
 	.imem = nv50_instmem_new,
 	.mc = g98_mc_new,
 	.mmu = nv50_mmu_new,
-//	.mxm = nv50_mxm_new,
+	.mxm = nv50_mxm_new,
 //	.therm = g84_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -1110,7 +1110,7 @@ nva3_chipset = {
 	.imem = nv50_instmem_new,
 	.mc = g98_mc_new,
 	.mmu = nv50_mmu_new,
-//	.mxm = nv50_mxm_new,
+	.mxm = nv50_mxm_new,
 //	.pmu = gt215_pmu_new,
 //	.therm = gt215_therm_new,
 //	.timer = nv04_timer_new,
@@ -1143,7 +1143,7 @@ nva5_chipset = {
 	.imem = nv50_instmem_new,
 	.mc = g98_mc_new,
 	.mmu = nv50_mmu_new,
-//	.mxm = nv50_mxm_new,
+	.mxm = nv50_mxm_new,
 //	.pmu = gt215_pmu_new,
 //	.therm = gt215_therm_new,
 //	.timer = nv04_timer_new,
@@ -1175,7 +1175,7 @@ nva8_chipset = {
 	.imem = nv50_instmem_new,
 	.mc = g98_mc_new,
 	.mmu = nv50_mmu_new,
-//	.mxm = nv50_mxm_new,
+	.mxm = nv50_mxm_new,
 //	.pmu = gt215_pmu_new,
 //	.therm = gt215_therm_new,
 //	.timer = nv04_timer_new,
@@ -1207,7 +1207,7 @@ nvaa_chipset = {
 	.imem = nv50_instmem_new,
 	.mc = g98_mc_new,
 	.mmu = nv50_mmu_new,
-//	.mxm = nv50_mxm_new,
+	.mxm = nv50_mxm_new,
 //	.therm = g84_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -1238,7 +1238,7 @@ nvac_chipset = {
 	.imem = nv50_instmem_new,
 	.mc = g98_mc_new,
 	.mmu = nv50_mmu_new,
-//	.mxm = nv50_mxm_new,
+	.mxm = nv50_mxm_new,
 //	.therm = g84_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -1269,7 +1269,7 @@ nvaf_chipset = {
 	.imem = nv50_instmem_new,
 	.mc = g98_mc_new,
 	.mmu = nv50_mmu_new,
-//	.mxm = nv50_mxm_new,
+	.mxm = nv50_mxm_new,
 //	.pmu = gt215_pmu_new,
 //	.therm = gt215_therm_new,
 //	.timer = nv04_timer_new,
@@ -1303,7 +1303,7 @@ nvc0_chipset = {
 	.ltc = gf100_ltc_new,
 	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
-//	.mxm = nv50_mxm_new,
+	.mxm = nv50_mxm_new,
 //	.pmu = gf100_pmu_new,
 //	.therm = gt215_therm_new,
 //	.timer = nv04_timer_new,
@@ -1338,7 +1338,7 @@ nvc1_chipset = {
 	.ltc = gf100_ltc_new,
 	.mc = gf106_mc_new,
 	.mmu = gf100_mmu_new,
-//	.mxm = nv50_mxm_new,
+	.mxm = nv50_mxm_new,
 //	.pmu = gf100_pmu_new,
 //	.therm = gt215_therm_new,
 //	.timer = nv04_timer_new,
@@ -1372,7 +1372,7 @@ nvc3_chipset = {
 	.ltc = gf100_ltc_new,
 	.mc = gf106_mc_new,
 	.mmu = gf100_mmu_new,
-//	.mxm = nv50_mxm_new,
+	.mxm = nv50_mxm_new,
 //	.pmu = gf100_pmu_new,
 //	.therm = gt215_therm_new,
 //	.timer = nv04_timer_new,
@@ -1406,7 +1406,7 @@ nvc4_chipset = {
 	.ltc = gf100_ltc_new,
 	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
-//	.mxm = nv50_mxm_new,
+	.mxm = nv50_mxm_new,
 //	.pmu = gf100_pmu_new,
 //	.therm = gt215_therm_new,
 //	.timer = nv04_timer_new,
@@ -1441,7 +1441,7 @@ nvc8_chipset = {
 	.ltc = gf100_ltc_new,
 	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
-//	.mxm = nv50_mxm_new,
+	.mxm = nv50_mxm_new,
 //	.pmu = gf100_pmu_new,
 //	.therm = gt215_therm_new,
 //	.timer = nv04_timer_new,
@@ -1476,7 +1476,7 @@ nvce_chipset = {
 	.ltc = gf100_ltc_new,
 	.mc = gf100_mc_new,
 	.mmu = gf100_mmu_new,
-//	.mxm = nv50_mxm_new,
+	.mxm = nv50_mxm_new,
 //	.pmu = gf100_pmu_new,
 //	.therm = gt215_therm_new,
 //	.timer = nv04_timer_new,
@@ -1511,7 +1511,7 @@ nvcf_chipset = {
 	.ltc = gf100_ltc_new,
 	.mc = gf106_mc_new,
 	.mmu = gf100_mmu_new,
-//	.mxm = nv50_mxm_new,
+	.mxm = nv50_mxm_new,
 //	.pmu = gf100_pmu_new,
 //	.therm = gt215_therm_new,
 //	.timer = nv04_timer_new,
@@ -1545,7 +1545,7 @@ nvd7_chipset = {
 	.ltc = gf100_ltc_new,
 	.mc = gf106_mc_new,
 	.mmu = gf100_mmu_new,
-//	.mxm = nv50_mxm_new,
+	.mxm = nv50_mxm_new,
 //	.therm = gf110_therm_new,
 //	.timer = nv04_timer_new,
 //	.ce[0] = gf100_ce0_new,
@@ -1577,7 +1577,7 @@ nvd9_chipset = {
 	.ltc = gf100_ltc_new,
 	.mc = gf106_mc_new,
 	.mmu = gf100_mmu_new,
-//	.mxm = nv50_mxm_new,
+	.mxm = nv50_mxm_new,
 //	.pmu = gf110_pmu_new,
 //	.therm = gf110_therm_new,
 //	.timer = nv04_timer_new,
@@ -1611,7 +1611,7 @@ nve4_chipset = {
 	.ltc = gk104_ltc_new,
 	.mc = gf106_mc_new,
 	.mmu = gf100_mmu_new,
-//	.mxm = nv50_mxm_new,
+	.mxm = nv50_mxm_new,
 //	.pmu = gk104_pmu_new,
 //	.therm = gf110_therm_new,
 //	.timer = nv04_timer_new,
@@ -1647,7 +1647,7 @@ nve6_chipset = {
 	.ltc = gk104_ltc_new,
 	.mc = gf106_mc_new,
 	.mmu = gf100_mmu_new,
-//	.mxm = nv50_mxm_new,
+	.mxm = nv50_mxm_new,
 //	.pmu = gk104_pmu_new,
 //	.therm = gf110_therm_new,
 //	.timer = nv04_timer_new,
@@ -1683,7 +1683,7 @@ nve7_chipset = {
 	.ltc = gk104_ltc_new,
 	.mc = gf106_mc_new,
 	.mmu = gf100_mmu_new,
-//	.mxm = nv50_mxm_new,
+	.mxm = nv50_mxm_new,
 //	.pmu = gf110_pmu_new,
 //	.therm = gf110_therm_new,
 //	.timer = nv04_timer_new,
@@ -1743,7 +1743,7 @@ nvf0_chipset = {
 	.ltc = gk104_ltc_new,
 	.mc = gf106_mc_new,
 	.mmu = gf100_mmu_new,
-//	.mxm = nv50_mxm_new,
+	.mxm = nv50_mxm_new,
 //	.pmu = gk110_pmu_new,
 //	.therm = gf110_therm_new,
 //	.timer = nv04_timer_new,
@@ -1779,7 +1779,7 @@ nvf1_chipset = {
 	.ltc = gk104_ltc_new,
 	.mc = gf106_mc_new,
 	.mmu = gf100_mmu_new,
-//	.mxm = nv50_mxm_new,
+	.mxm = nv50_mxm_new,
 //	.pmu = gk110_pmu_new,
 //	.therm = gf110_therm_new,
 //	.timer = nv04_timer_new,
@@ -1815,7 +1815,7 @@ nv106_chipset = {
 	.ltc = gk104_ltc_new,
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
-//	.mxm = nv50_mxm_new,
+	.mxm = nv50_mxm_new,
 //	.pmu = gk208_pmu_new,
 //	.therm = gf110_therm_new,
 //	.timer = nv04_timer_new,
@@ -1850,7 +1850,7 @@ nv108_chipset = {
 	.ltc = gk104_ltc_new,
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
-//	.mxm = nv50_mxm_new,
+	.mxm = nv50_mxm_new,
 //	.pmu = gk208_pmu_new,
 //	.therm = gf110_therm_new,
 //	.timer = nv04_timer_new,
@@ -1885,7 +1885,7 @@ nv117_chipset = {
 	.ltc = gm107_ltc_new,
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
-//	.mxm = nv50_mxm_new,
+	.mxm = nv50_mxm_new,
 //	.pmu = gk208_pmu_new,
 //	.therm = gm107_therm_new,
 //	.timer = gk20a_timer_new,
@@ -1914,7 +1914,7 @@ nv124_chipset = {
 	.ltc = gm107_ltc_new,
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
-//	.mxm = nv50_mxm_new,
+	.mxm = nv50_mxm_new,
 //	.pmu = gk208_pmu_new,
 //	.timer = gk20a_timer_new,
 //	.ce[0] = gm204_ce0_new,
@@ -1943,7 +1943,7 @@ nv126_chipset = {
 	.ltc = gm107_ltc_new,
 	.mc = gk20a_mc_new,
 	.mmu = gf100_mmu_new,
-//	.mxm = nv50_mxm_new,
+	.mxm = nv50_mxm_new,
 //	.pmu = gk208_pmu_new,
 //	.timer = gk20a_timer_new,
 //	.ce[0] = gm204_ce0_new,

commit c9582455ab74246ec9f5986db3821b33058de585
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:21 2015 +1000

    drm/nouveau/mmu: convert to new-style nvkm_subdev
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 96ac8804ce33..7da5dc44baf4 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -84,7 +84,7 @@ nv4_chipset = {
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
-//	.mmu = nv04_mmu_new,
+	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
@@ -104,7 +104,7 @@ nv5_chipset = {
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
-//	.mmu = nv04_mmu_new,
+	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
@@ -125,7 +125,7 @@ nv10_chipset = {
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
-//	.mmu = nv04_mmu_new,
+	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
@@ -144,7 +144,7 @@ nv11_chipset = {
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
-//	.mmu = nv04_mmu_new,
+	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
@@ -165,7 +165,7 @@ nv15_chipset = {
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
-//	.mmu = nv04_mmu_new,
+	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
@@ -186,7 +186,7 @@ nv17_chipset = {
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
-//	.mmu = nv04_mmu_new,
+	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
@@ -207,7 +207,7 @@ nv18_chipset = {
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
-//	.mmu = nv04_mmu_new,
+	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
@@ -228,7 +228,7 @@ nv1a_chipset = {
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
-//	.mmu = nv04_mmu_new,
+	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
@@ -249,7 +249,7 @@ nv1f_chipset = {
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
-//	.mmu = nv04_mmu_new,
+	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
@@ -270,7 +270,7 @@ nv20_chipset = {
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
-//	.mmu = nv04_mmu_new,
+	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
@@ -291,7 +291,7 @@ nv25_chipset = {
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
-//	.mmu = nv04_mmu_new,
+	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
@@ -312,7 +312,7 @@ nv28_chipset = {
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
-//	.mmu = nv04_mmu_new,
+	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
@@ -333,7 +333,7 @@ nv2a_chipset = {
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
-//	.mmu = nv04_mmu_new,
+	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
@@ -354,7 +354,7 @@ nv30_chipset = {
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
-//	.mmu = nv04_mmu_new,
+	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
@@ -375,7 +375,7 @@ nv31_chipset = {
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
-//	.mmu = nv04_mmu_new,
+	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
@@ -397,7 +397,7 @@ nv34_chipset = {
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
-//	.mmu = nv04_mmu_new,
+	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
@@ -419,7 +419,7 @@ nv35_chipset = {
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
-//	.mmu = nv04_mmu_new,
+	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
@@ -440,7 +440,7 @@ nv36_chipset = {
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
 	.mc = nv04_mc_new,
-//	.mmu = nv04_mmu_new,
+	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
 //	.dma = nv04_dma_new,
@@ -462,7 +462,7 @@ nv40_chipset = {
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
 	.mc = nv40_mc_new,
-//	.mmu = nv04_mmu_new,
+	.mmu = nv04_mmu_new,
 //	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -487,7 +487,7 @@ nv41_chipset = {
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
 	.mc = nv40_mc_new,
-//	.mmu = nv41_mmu_new,
+	.mmu = nv41_mmu_new,
 //	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -512,7 +512,7 @@ nv42_chipset = {
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
 	.mc = nv40_mc_new,
-//	.mmu = nv41_mmu_new,
+	.mmu = nv41_mmu_new,
 //	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -537,7 +537,7 @@ nv43_chipset = {
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
 	.mc = nv40_mc_new,
-//	.mmu = nv41_mmu_new,
+	.mmu = nv41_mmu_new,
 //	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -562,7 +562,7 @@ nv44_chipset = {
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
 	.mc = nv44_mc_new,
-//	.mmu = nv44_mmu_new,
+	.mmu = nv44_mmu_new,
 //	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -587,7 +587,7 @@ nv45_chipset = {
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
 	.mc = nv40_mc_new,
-//	.mmu = nv04_mmu_new,
+	.mmu = nv04_mmu_new,
 //	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -612,7 +612,7 @@ nv46_chipset = {
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
 	.mc = nv44_mc_new,
-//	.mmu = nv44_mmu_new,
+	.mmu = nv44_mmu_new,
 //	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -637,7 +637,7 @@ nv47_chipset = {
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
 	.mc = nv40_mc_new,
-//	.mmu = nv41_mmu_new,
+	.mmu = nv41_mmu_new,
 //	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -662,7 +662,7 @@ nv49_chipset = {
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
 	.mc = nv40_mc_new,
-//	.mmu = nv41_mmu_new,
+	.mmu = nv41_mmu_new,
 //	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -687,7 +687,7 @@ nv4a_chipset = {
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
 	.mc = nv44_mc_new,
-//	.mmu = nv44_mmu_new,
+	.mmu = nv44_mmu_new,
 //	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -712,7 +712,7 @@ nv4b_chipset = {
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
 	.mc = nv40_mc_new,
-//	.mmu = nv41_mmu_new,
+	.mmu = nv41_mmu_new,
 //	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -737,7 +737,7 @@ nv4c_chipset = {
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
 	.mc = nv4c_mc_new,
-//	.mmu = nv44_mmu_new,
+	.mmu = nv44_mmu_new,
 //	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -762,7 +762,7 @@ nv4e_chipset = {
 	.i2c = nv4e_i2c_new,
 	.imem = nv40_instmem_new,
 	.mc = nv4c_mc_new,
-//	.mmu = nv44_mmu_new,
+	.mmu = nv44_mmu_new,
 //	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -789,7 +789,7 @@ nv50_chipset = {
 	.i2c = nv50_i2c_new,
 	.imem = nv50_instmem_new,
 	.mc = nv50_mc_new,
-//	.mmu = nv50_mmu_new,
+	.mmu = nv50_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.therm = nv50_therm_new,
 //	.timer = nv04_timer_new,
@@ -815,7 +815,7 @@ nv63_chipset = {
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
 	.mc = nv4c_mc_new,
-//	.mmu = nv44_mmu_new,
+	.mmu = nv44_mmu_new,
 //	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -840,7 +840,7 @@ nv67_chipset = {
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
 	.mc = nv4c_mc_new,
-//	.mmu = nv44_mmu_new,
+	.mmu = nv44_mmu_new,
 //	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -865,7 +865,7 @@ nv68_chipset = {
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
 	.mc = nv4c_mc_new,
-//	.mmu = nv44_mmu_new,
+	.mmu = nv44_mmu_new,
 //	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
 //	.volt = nv40_volt_new,
@@ -892,7 +892,7 @@ nv84_chipset = {
 	.i2c = nv50_i2c_new,
 	.imem = nv50_instmem_new,
 	.mc = nv50_mc_new,
-//	.mmu = nv50_mmu_new,
+	.mmu = nv50_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.therm = g84_therm_new,
 //	.timer = nv04_timer_new,
@@ -923,7 +923,7 @@ nv86_chipset = {
 	.i2c = nv50_i2c_new,
 	.imem = nv50_instmem_new,
 	.mc = nv50_mc_new,
-//	.mmu = nv50_mmu_new,
+	.mmu = nv50_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.therm = g84_therm_new,
 //	.timer = nv04_timer_new,
@@ -954,7 +954,7 @@ nv92_chipset = {
 	.i2c = nv50_i2c_new,
 	.imem = nv50_instmem_new,
 	.mc = nv50_mc_new,
-//	.mmu = nv50_mmu_new,
+	.mmu = nv50_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.therm = g84_therm_new,
 //	.timer = nv04_timer_new,
@@ -985,7 +985,7 @@ nv94_chipset = {
 	.i2c = g94_i2c_new,
 	.imem = nv50_instmem_new,
 	.mc = g94_mc_new,
-//	.mmu = nv50_mmu_new,
+	.mmu = nv50_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.therm = g84_therm_new,
 //	.timer = nv04_timer_new,
@@ -1018,7 +1018,7 @@ nv96_chipset = {
 //	.timer = nv04_timer_new,
 	.fb = g84_fb_new,
 	.imem = nv50_instmem_new,
-//	.mmu = nv50_mmu_new,
+	.mmu = nv50_mmu_new,
 	.bar = g84_bar_new,
 //	.volt = nv40_volt_new,
 //	.dma = nv50_dma_new,
@@ -1049,7 +1049,7 @@ nv98_chipset = {
 //	.timer = nv04_timer_new,
 	.fb = g84_fb_new,
 	.imem = nv50_instmem_new,
-//	.mmu = nv50_mmu_new,
+	.mmu = nv50_mmu_new,
 	.bar = g84_bar_new,
 //	.volt = nv40_volt_new,
 //	.dma = nv50_dma_new,
@@ -1078,7 +1078,7 @@ nva0_chipset = {
 	.i2c = nv50_i2c_new,
 	.imem = nv50_instmem_new,
 	.mc = g98_mc_new,
-//	.mmu = nv50_mmu_new,
+	.mmu = nv50_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.therm = g84_therm_new,
 //	.timer = nv04_timer_new,
@@ -1109,7 +1109,7 @@ nva3_chipset = {
 	.i2c = g94_i2c_new,
 	.imem = nv50_instmem_new,
 	.mc = g98_mc_new,
-//	.mmu = nv50_mmu_new,
+	.mmu = nv50_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gt215_pmu_new,
 //	.therm = gt215_therm_new,
@@ -1142,7 +1142,7 @@ nva5_chipset = {
 	.i2c = g94_i2c_new,
 	.imem = nv50_instmem_new,
 	.mc = g98_mc_new,
-//	.mmu = nv50_mmu_new,
+	.mmu = nv50_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gt215_pmu_new,
 //	.therm = gt215_therm_new,
@@ -1174,7 +1174,7 @@ nva8_chipset = {
 	.i2c = g94_i2c_new,
 	.imem = nv50_instmem_new,
 	.mc = g98_mc_new,
-//	.mmu = nv50_mmu_new,
+	.mmu = nv50_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gt215_pmu_new,
 //	.therm = gt215_therm_new,
@@ -1206,7 +1206,7 @@ nvaa_chipset = {
 	.i2c = g94_i2c_new,
 	.imem = nv50_instmem_new,
 	.mc = g98_mc_new,
-//	.mmu = nv50_mmu_new,
+	.mmu = nv50_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.therm = g84_therm_new,
 //	.timer = nv04_timer_new,
@@ -1237,7 +1237,7 @@ nvac_chipset = {
 	.i2c = g94_i2c_new,
 	.imem = nv50_instmem_new,
 	.mc = g98_mc_new,
-//	.mmu = nv50_mmu_new,
+	.mmu = nv50_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.therm = g84_therm_new,
 //	.timer = nv04_timer_new,
@@ -1268,7 +1268,7 @@ nvaf_chipset = {
 	.i2c = g94_i2c_new,
 	.imem = nv50_instmem_new,
 	.mc = g98_mc_new,
-//	.mmu = nv50_mmu_new,
+	.mmu = nv50_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gt215_pmu_new,
 //	.therm = gt215_therm_new,
@@ -1302,7 +1302,7 @@ nvc0_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gf100_ltc_new,
 	.mc = gf100_mc_new,
-//	.mmu = gf100_mmu_new,
+	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gf100_pmu_new,
 //	.therm = gt215_therm_new,
@@ -1337,7 +1337,7 @@ nvc1_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gf100_ltc_new,
 	.mc = gf106_mc_new,
-//	.mmu = gf100_mmu_new,
+	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gf100_pmu_new,
 //	.therm = gt215_therm_new,
@@ -1371,7 +1371,7 @@ nvc3_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gf100_ltc_new,
 	.mc = gf106_mc_new,
-//	.mmu = gf100_mmu_new,
+	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gf100_pmu_new,
 //	.therm = gt215_therm_new,
@@ -1405,7 +1405,7 @@ nvc4_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gf100_ltc_new,
 	.mc = gf100_mc_new,
-//	.mmu = gf100_mmu_new,
+	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gf100_pmu_new,
 //	.therm = gt215_therm_new,
@@ -1440,7 +1440,7 @@ nvc8_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gf100_ltc_new,
 	.mc = gf100_mc_new,
-//	.mmu = gf100_mmu_new,
+	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gf100_pmu_new,
 //	.therm = gt215_therm_new,
@@ -1475,7 +1475,7 @@ nvce_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gf100_ltc_new,
 	.mc = gf100_mc_new,
-//	.mmu = gf100_mmu_new,
+	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gf100_pmu_new,
 //	.therm = gt215_therm_new,
@@ -1510,7 +1510,7 @@ nvcf_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gf100_ltc_new,
 	.mc = gf106_mc_new,
-//	.mmu = gf100_mmu_new,
+	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gf100_pmu_new,
 //	.therm = gt215_therm_new,
@@ -1544,7 +1544,7 @@ nvd7_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gf100_ltc_new,
 	.mc = gf106_mc_new,
-//	.mmu = gf100_mmu_new,
+	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.therm = gf110_therm_new,
 //	.timer = nv04_timer_new,
@@ -1576,7 +1576,7 @@ nvd9_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gf100_ltc_new,
 	.mc = gf106_mc_new,
-//	.mmu = gf100_mmu_new,
+	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gf110_pmu_new,
 //	.therm = gf110_therm_new,
@@ -1610,7 +1610,7 @@ nve4_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
 	.mc = gf106_mc_new,
-//	.mmu = gf100_mmu_new,
+	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gk104_pmu_new,
 //	.therm = gf110_therm_new,
@@ -1646,7 +1646,7 @@ nve6_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
 	.mc = gf106_mc_new,
-//	.mmu = gf100_mmu_new,
+	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gk104_pmu_new,
 //	.therm = gf110_therm_new,
@@ -1682,7 +1682,7 @@ nve7_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
 	.mc = gf106_mc_new,
-//	.mmu = gf100_mmu_new,
+	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gf110_pmu_new,
 //	.therm = gf110_therm_new,
@@ -1714,7 +1714,7 @@ nvea_chipset = {
 	.imem = gk20a_instmem_new,
 	.ltc = gk104_ltc_new,
 	.mc = gk20a_mc_new,
-//	.mmu = gf100_mmu_new,
+	.mmu = gf100_mmu_new,
 //	.pmu = gk20a_pmu_new,
 //	.timer = gk20a_timer_new,
 //	.volt = gk20a_volt_new,
@@ -1742,7 +1742,7 @@ nvf0_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
 	.mc = gf106_mc_new,
-//	.mmu = gf100_mmu_new,
+	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gk110_pmu_new,
 //	.therm = gf110_therm_new,
@@ -1778,7 +1778,7 @@ nvf1_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
 	.mc = gf106_mc_new,
-//	.mmu = gf100_mmu_new,
+	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gk110_pmu_new,
 //	.therm = gf110_therm_new,
@@ -1814,7 +1814,7 @@ nv106_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
 	.mc = gk20a_mc_new,
-//	.mmu = gf100_mmu_new,
+	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gk208_pmu_new,
 //	.therm = gf110_therm_new,
@@ -1849,7 +1849,7 @@ nv108_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
 	.mc = gk20a_mc_new,
-//	.mmu = gf100_mmu_new,
+	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gk208_pmu_new,
 //	.therm = gf110_therm_new,
@@ -1884,7 +1884,7 @@ nv117_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gm107_ltc_new,
 	.mc = gk20a_mc_new,
-//	.mmu = gf100_mmu_new,
+	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gk208_pmu_new,
 //	.therm = gm107_therm_new,
@@ -1913,7 +1913,7 @@ nv124_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gm107_ltc_new,
 	.mc = gk20a_mc_new,
-//	.mmu = gf100_mmu_new,
+	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gk208_pmu_new,
 //	.timer = gk20a_timer_new,
@@ -1942,7 +1942,7 @@ nv126_chipset = {
 	.imem = nv50_instmem_new,
 	.ltc = gm107_ltc_new,
 	.mc = gk20a_mc_new,
-//	.mmu = gf100_mmu_new,
+	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gk208_pmu_new,
 //	.timer = gk20a_timer_new,
@@ -1967,8 +1967,8 @@ nv12b_chipset = {
 	.imem = gk20a_instmem_new,
 	.ltc = gm107_ltc_new,
 	.mc = gk20a_mc_new,
-//	.mmu = gf100_mmu_new,
-//	.mmu = gf100_mmu_new,
+	.mmu = gf100_mmu_new,
+	.mmu = gf100_mmu_new,
 //	.timer = gk20a_timer_new,
 //	.ce[2] = gm204_ce2_new,
 //	.dma = gf119_dma_new,

commit 54dcadd5b65e12f851ff80af4afef606040ad8b9
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:21 2015 +1000

    drm/nouveau/mc: convert to new-style nvkm_subdev
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index d1ee594dff56..96ac8804ce33 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -83,7 +83,7 @@ nv4_chipset = {
 	.fb = nv04_fb_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
-//	.mc = nv04_mc_new,
+	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
@@ -103,7 +103,7 @@ nv5_chipset = {
 	.fb = nv04_fb_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
-//	.mc = nv04_mc_new,
+	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
@@ -124,7 +124,7 @@ nv10_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
-//	.mc = nv04_mc_new,
+	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
@@ -143,7 +143,7 @@ nv11_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
-//	.mc = nv04_mc_new,
+	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
@@ -164,7 +164,7 @@ nv15_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
-//	.mc = nv04_mc_new,
+	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
@@ -185,7 +185,7 @@ nv17_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
-//	.mc = nv04_mc_new,
+	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
@@ -206,7 +206,7 @@ nv18_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
-//	.mc = nv04_mc_new,
+	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
@@ -227,7 +227,7 @@ nv1a_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
-//	.mc = nv04_mc_new,
+	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
@@ -248,7 +248,7 @@ nv1f_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
-//	.mc = nv04_mc_new,
+	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
@@ -269,7 +269,7 @@ nv20_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
-//	.mc = nv04_mc_new,
+	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
@@ -290,7 +290,7 @@ nv25_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
-//	.mc = nv04_mc_new,
+	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
@@ -311,7 +311,7 @@ nv28_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
-//	.mc = nv04_mc_new,
+	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
@@ -332,7 +332,7 @@ nv2a_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
-//	.mc = nv04_mc_new,
+	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
@@ -353,7 +353,7 @@ nv30_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
-//	.mc = nv04_mc_new,
+	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
@@ -374,7 +374,7 @@ nv31_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
-//	.mc = nv04_mc_new,
+	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
@@ -396,7 +396,7 @@ nv34_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
-//	.mc = nv04_mc_new,
+	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
@@ -418,7 +418,7 @@ nv35_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
-//	.mc = nv04_mc_new,
+	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
@@ -439,7 +439,7 @@ nv36_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv04_instmem_new,
-//	.mc = nv04_mc_new,
+	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
 //	.disp = nv04_disp_new,
@@ -461,7 +461,7 @@ nv40_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
-//	.mc = nv40_mc_new,
+	.mc = nv40_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
@@ -486,7 +486,7 @@ nv41_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
-//	.mc = nv40_mc_new,
+	.mc = nv40_mc_new,
 //	.mmu = nv41_mmu_new,
 //	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
@@ -511,7 +511,7 @@ nv42_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
-//	.mc = nv40_mc_new,
+	.mc = nv40_mc_new,
 //	.mmu = nv41_mmu_new,
 //	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
@@ -536,7 +536,7 @@ nv43_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
-//	.mc = nv40_mc_new,
+	.mc = nv40_mc_new,
 //	.mmu = nv41_mmu_new,
 //	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
@@ -561,7 +561,7 @@ nv44_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
-//	.mc = nv44_mc_new,
+	.mc = nv44_mc_new,
 //	.mmu = nv44_mmu_new,
 //	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
@@ -586,7 +586,7 @@ nv45_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
-//	.mc = nv40_mc_new,
+	.mc = nv40_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
@@ -611,7 +611,7 @@ nv46_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
-//	.mc = nv44_mc_new,
+	.mc = nv44_mc_new,
 //	.mmu = nv44_mmu_new,
 //	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
@@ -636,7 +636,7 @@ nv47_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
-//	.mc = nv40_mc_new,
+	.mc = nv40_mc_new,
 //	.mmu = nv41_mmu_new,
 //	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
@@ -661,7 +661,7 @@ nv49_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
-//	.mc = nv40_mc_new,
+	.mc = nv40_mc_new,
 //	.mmu = nv41_mmu_new,
 //	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
@@ -686,7 +686,7 @@ nv4a_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
-//	.mc = nv44_mc_new,
+	.mc = nv44_mc_new,
 //	.mmu = nv44_mmu_new,
 //	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
@@ -711,7 +711,7 @@ nv4b_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
-//	.mc = nv40_mc_new,
+	.mc = nv40_mc_new,
 //	.mmu = nv41_mmu_new,
 //	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
@@ -736,7 +736,7 @@ nv4c_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
-//	.mc = nv4c_mc_new,
+	.mc = nv4c_mc_new,
 //	.mmu = nv44_mmu_new,
 //	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
@@ -761,7 +761,7 @@ nv4e_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv4e_i2c_new,
 	.imem = nv40_instmem_new,
-//	.mc = nv4c_mc_new,
+	.mc = nv4c_mc_new,
 //	.mmu = nv44_mmu_new,
 //	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
@@ -788,7 +788,7 @@ nv50_chipset = {
 	.gpio = nv50_gpio_new,
 	.i2c = nv50_i2c_new,
 	.imem = nv50_instmem_new,
-//	.mc = nv50_mc_new,
+	.mc = nv50_mc_new,
 //	.mmu = nv50_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.therm = nv50_therm_new,
@@ -814,7 +814,7 @@ nv63_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
-//	.mc = nv4c_mc_new,
+	.mc = nv4c_mc_new,
 //	.mmu = nv44_mmu_new,
 //	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
@@ -839,7 +839,7 @@ nv67_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
-//	.mc = nv4c_mc_new,
+	.mc = nv4c_mc_new,
 //	.mmu = nv44_mmu_new,
 //	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
@@ -864,7 +864,7 @@ nv68_chipset = {
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
 	.imem = nv40_instmem_new,
-//	.mc = nv4c_mc_new,
+	.mc = nv4c_mc_new,
 //	.mmu = nv44_mmu_new,
 //	.therm = nv40_therm_new,
 //	.timer = nv04_timer_new,
@@ -891,7 +891,7 @@ nv84_chipset = {
 	.gpio = nv50_gpio_new,
 	.i2c = nv50_i2c_new,
 	.imem = nv50_instmem_new,
-//	.mc = nv50_mc_new,
+	.mc = nv50_mc_new,
 //	.mmu = nv50_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.therm = g84_therm_new,
@@ -922,7 +922,7 @@ nv86_chipset = {
 	.gpio = nv50_gpio_new,
 	.i2c = nv50_i2c_new,
 	.imem = nv50_instmem_new,
-//	.mc = nv50_mc_new,
+	.mc = nv50_mc_new,
 //	.mmu = nv50_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.therm = g84_therm_new,
@@ -953,7 +953,7 @@ nv92_chipset = {
 	.gpio = nv50_gpio_new,
 	.i2c = nv50_i2c_new,
 	.imem = nv50_instmem_new,
-//	.mc = nv50_mc_new,
+	.mc = nv50_mc_new,
 //	.mmu = nv50_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.therm = g84_therm_new,
@@ -984,7 +984,7 @@ nv94_chipset = {
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
 	.imem = nv50_instmem_new,
-//	.mc = g94_mc_new,
+	.mc = g94_mc_new,
 //	.mmu = nv50_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.therm = g84_therm_new,
@@ -1013,7 +1013,7 @@ nv96_chipset = {
 //	.therm = g84_therm_new,
 //	.mxm = nv50_mxm_new,
 	.devinit = g84_devinit_new,
-//	.mc = g94_mc_new,
+	.mc = g94_mc_new,
 	.bus = g94_bus_new,
 //	.timer = nv04_timer_new,
 	.fb = g84_fb_new,
@@ -1044,7 +1044,7 @@ nv98_chipset = {
 //	.therm = g84_therm_new,
 //	.mxm = nv50_mxm_new,
 	.devinit = g98_devinit_new,
-//	.mc = g98_mc_new,
+	.mc = g98_mc_new,
 	.bus = g94_bus_new,
 //	.timer = nv04_timer_new,
 	.fb = g84_fb_new,
@@ -1077,7 +1077,7 @@ nva0_chipset = {
 	.gpio = g94_gpio_new,
 	.i2c = nv50_i2c_new,
 	.imem = nv50_instmem_new,
-//	.mc = g98_mc_new,
+	.mc = g98_mc_new,
 //	.mmu = nv50_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.therm = g84_therm_new,
@@ -1108,7 +1108,7 @@ nva3_chipset = {
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
 	.imem = nv50_instmem_new,
-//	.mc = g98_mc_new,
+	.mc = g98_mc_new,
 //	.mmu = nv50_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gt215_pmu_new,
@@ -1141,7 +1141,7 @@ nva5_chipset = {
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
 	.imem = nv50_instmem_new,
-//	.mc = g98_mc_new,
+	.mc = g98_mc_new,
 //	.mmu = nv50_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gt215_pmu_new,
@@ -1173,7 +1173,7 @@ nva8_chipset = {
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
 	.imem = nv50_instmem_new,
-//	.mc = g98_mc_new,
+	.mc = g98_mc_new,
 //	.mmu = nv50_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gt215_pmu_new,
@@ -1205,7 +1205,7 @@ nvaa_chipset = {
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
 	.imem = nv50_instmem_new,
-//	.mc = g98_mc_new,
+	.mc = g98_mc_new,
 //	.mmu = nv50_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.therm = g84_therm_new,
@@ -1236,7 +1236,7 @@ nvac_chipset = {
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
 	.imem = nv50_instmem_new,
-//	.mc = g98_mc_new,
+	.mc = g98_mc_new,
 //	.mmu = nv50_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.therm = g84_therm_new,
@@ -1267,7 +1267,7 @@ nvaf_chipset = {
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
 	.imem = nv50_instmem_new,
-//	.mc = g98_mc_new,
+	.mc = g98_mc_new,
 //	.mmu = nv50_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gt215_pmu_new,
@@ -1301,7 +1301,7 @@ nvc0_chipset = {
 	.ibus = gf100_ibus_new,
 	.imem = nv50_instmem_new,
 	.ltc = gf100_ltc_new,
-//	.mc = gf100_mc_new,
+	.mc = gf100_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gf100_pmu_new,
@@ -1336,7 +1336,7 @@ nvc1_chipset = {
 	.ibus = gf100_ibus_new,
 	.imem = nv50_instmem_new,
 	.ltc = gf100_ltc_new,
-//	.mc = gf106_mc_new,
+	.mc = gf106_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gf100_pmu_new,
@@ -1370,7 +1370,7 @@ nvc3_chipset = {
 	.ibus = gf100_ibus_new,
 	.imem = nv50_instmem_new,
 	.ltc = gf100_ltc_new,
-//	.mc = gf106_mc_new,
+	.mc = gf106_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gf100_pmu_new,
@@ -1404,7 +1404,7 @@ nvc4_chipset = {
 	.ibus = gf100_ibus_new,
 	.imem = nv50_instmem_new,
 	.ltc = gf100_ltc_new,
-//	.mc = gf100_mc_new,
+	.mc = gf100_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gf100_pmu_new,
@@ -1439,7 +1439,7 @@ nvc8_chipset = {
 	.ibus = gf100_ibus_new,
 	.imem = nv50_instmem_new,
 	.ltc = gf100_ltc_new,
-//	.mc = gf100_mc_new,
+	.mc = gf100_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gf100_pmu_new,
@@ -1474,7 +1474,7 @@ nvce_chipset = {
 	.ibus = gf100_ibus_new,
 	.imem = nv50_instmem_new,
 	.ltc = gf100_ltc_new,
-//	.mc = gf100_mc_new,
+	.mc = gf100_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gf100_pmu_new,
@@ -1509,7 +1509,7 @@ nvcf_chipset = {
 	.ibus = gf100_ibus_new,
 	.imem = nv50_instmem_new,
 	.ltc = gf100_ltc_new,
-//	.mc = gf106_mc_new,
+	.mc = gf106_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gf100_pmu_new,
@@ -1543,7 +1543,7 @@ nvd7_chipset = {
 	.ibus = gf100_ibus_new,
 	.imem = nv50_instmem_new,
 	.ltc = gf100_ltc_new,
-//	.mc = gf106_mc_new,
+	.mc = gf106_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.therm = gf110_therm_new,
@@ -1575,7 +1575,7 @@ nvd9_chipset = {
 	.ibus = gf100_ibus_new,
 	.imem = nv50_instmem_new,
 	.ltc = gf100_ltc_new,
-//	.mc = gf106_mc_new,
+	.mc = gf106_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gf110_pmu_new,
@@ -1609,7 +1609,7 @@ nve4_chipset = {
 	.ibus = gk104_ibus_new,
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
-//	.mc = gf106_mc_new,
+	.mc = gf106_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gk104_pmu_new,
@@ -1645,7 +1645,7 @@ nve6_chipset = {
 	.ibus = gk104_ibus_new,
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
-//	.mc = gf106_mc_new,
+	.mc = gf106_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gk104_pmu_new,
@@ -1681,7 +1681,7 @@ nve7_chipset = {
 	.ibus = gk104_ibus_new,
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
-//	.mc = gf106_mc_new,
+	.mc = gf106_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gf110_pmu_new,
@@ -1713,7 +1713,7 @@ nvea_chipset = {
 	.ibus = gk20a_ibus_new,
 	.imem = gk20a_instmem_new,
 	.ltc = gk104_ltc_new,
-//	.mc = gk20a_mc_new,
+	.mc = gk20a_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.pmu = gk20a_pmu_new,
 //	.timer = gk20a_timer_new,
@@ -1741,7 +1741,7 @@ nvf0_chipset = {
 	.ibus = gk104_ibus_new,
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
-//	.mc = gf106_mc_new,
+	.mc = gf106_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gk110_pmu_new,
@@ -1777,7 +1777,7 @@ nvf1_chipset = {
 	.ibus = gk104_ibus_new,
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
-//	.mc = gf106_mc_new,
+	.mc = gf106_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gk110_pmu_new,
@@ -1813,7 +1813,7 @@ nv106_chipset = {
 	.ibus = gk104_ibus_new,
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
-//	.mc = gk20a_mc_new,
+	.mc = gk20a_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gk208_pmu_new,
@@ -1848,7 +1848,7 @@ nv108_chipset = {
 	.ibus = gk104_ibus_new,
 	.imem = nv50_instmem_new,
 	.ltc = gk104_ltc_new,
-//	.mc = gk20a_mc_new,
+	.mc = gk20a_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gk208_pmu_new,
@@ -1883,7 +1883,7 @@ nv117_chipset = {
 	.ibus = gk104_ibus_new,
 	.imem = nv50_instmem_new,
 	.ltc = gm107_ltc_new,
-//	.mc = gk20a_mc_new,
+	.mc = gk20a_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gk208_pmu_new,
@@ -1912,7 +1912,7 @@ nv124_chipset = {
 	.ibus = gk104_ibus_new,
 	.imem = nv50_instmem_new,
 	.ltc = gm107_ltc_new,
-//	.mc = gk20a_mc_new,
+	.mc = gk20a_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gk208_pmu_new,
@@ -1941,7 +1941,7 @@ nv126_chipset = {
 	.ibus = gk104_ibus_new,
 	.imem = nv50_instmem_new,
 	.ltc = gm107_ltc_new,
-//	.mc = gk20a_mc_new,
+	.mc = gk20a_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
 //	.pmu = gk208_pmu_new,
@@ -1966,7 +1966,7 @@ nv12b_chipset = {
 	.ibus = gk20a_ibus_new,
 	.imem = gk20a_instmem_new,
 	.ltc = gm107_ltc_new,
-//	.mc = gk20a_mc_new,
+	.mc = gk20a_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mmu = gf100_mmu_new,
 //	.timer = gk20a_timer_new,

commit 70bc7182cbf1bb07e414bbb553890ddf1b540264
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:21 2015 +1000

    drm/nouveau/ltc: convert to new-style nvkm_subdev
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 3b83f17b3a23..d1ee594dff56 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1300,7 +1300,7 @@ nvc0_chipset = {
 	.i2c = g94_i2c_new,
 	.ibus = gf100_ibus_new,
 	.imem = nv50_instmem_new,
-//	.ltc = gf100_ltc_new,
+	.ltc = gf100_ltc_new,
 //	.mc = gf100_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
@@ -1335,7 +1335,7 @@ nvc1_chipset = {
 	.i2c = g94_i2c_new,
 	.ibus = gf100_ibus_new,
 	.imem = nv50_instmem_new,
-//	.ltc = gf100_ltc_new,
+	.ltc = gf100_ltc_new,
 //	.mc = gf106_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
@@ -1369,7 +1369,7 @@ nvc3_chipset = {
 	.i2c = g94_i2c_new,
 	.ibus = gf100_ibus_new,
 	.imem = nv50_instmem_new,
-//	.ltc = gf100_ltc_new,
+	.ltc = gf100_ltc_new,
 //	.mc = gf106_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
@@ -1403,7 +1403,7 @@ nvc4_chipset = {
 	.i2c = g94_i2c_new,
 	.ibus = gf100_ibus_new,
 	.imem = nv50_instmem_new,
-//	.ltc = gf100_ltc_new,
+	.ltc = gf100_ltc_new,
 //	.mc = gf100_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
@@ -1438,7 +1438,7 @@ nvc8_chipset = {
 	.i2c = g94_i2c_new,
 	.ibus = gf100_ibus_new,
 	.imem = nv50_instmem_new,
-//	.ltc = gf100_ltc_new,
+	.ltc = gf100_ltc_new,
 //	.mc = gf100_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
@@ -1473,7 +1473,7 @@ nvce_chipset = {
 	.i2c = g94_i2c_new,
 	.ibus = gf100_ibus_new,
 	.imem = nv50_instmem_new,
-//	.ltc = gf100_ltc_new,
+	.ltc = gf100_ltc_new,
 //	.mc = gf100_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
@@ -1508,7 +1508,7 @@ nvcf_chipset = {
 	.i2c = g94_i2c_new,
 	.ibus = gf100_ibus_new,
 	.imem = nv50_instmem_new,
-//	.ltc = gf100_ltc_new,
+	.ltc = gf100_ltc_new,
 //	.mc = gf106_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
@@ -1542,7 +1542,7 @@ nvd7_chipset = {
 	.i2c = gf117_i2c_new,
 	.ibus = gf100_ibus_new,
 	.imem = nv50_instmem_new,
-//	.ltc = gf100_ltc_new,
+	.ltc = gf100_ltc_new,
 //	.mc = gf106_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
@@ -1574,7 +1574,7 @@ nvd9_chipset = {
 	.i2c = gf119_i2c_new,
 	.ibus = gf100_ibus_new,
 	.imem = nv50_instmem_new,
-//	.ltc = gf100_ltc_new,
+	.ltc = gf100_ltc_new,
 //	.mc = gf106_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
@@ -1608,7 +1608,7 @@ nve4_chipset = {
 	.i2c = gk104_i2c_new,
 	.ibus = gk104_ibus_new,
 	.imem = nv50_instmem_new,
-//	.ltc = gk104_ltc_new,
+	.ltc = gk104_ltc_new,
 //	.mc = gf106_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
@@ -1644,7 +1644,7 @@ nve6_chipset = {
 	.i2c = gk104_i2c_new,
 	.ibus = gk104_ibus_new,
 	.imem = nv50_instmem_new,
-//	.ltc = gk104_ltc_new,
+	.ltc = gk104_ltc_new,
 //	.mc = gf106_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
@@ -1680,7 +1680,7 @@ nve7_chipset = {
 	.i2c = gk104_i2c_new,
 	.ibus = gk104_ibus_new,
 	.imem = nv50_instmem_new,
-//	.ltc = gk104_ltc_new,
+	.ltc = gk104_ltc_new,
 //	.mc = gf106_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
@@ -1712,7 +1712,7 @@ nvea_chipset = {
 	.fuse = gf100_fuse_new,
 	.ibus = gk20a_ibus_new,
 	.imem = gk20a_instmem_new,
-//	.ltc = gk104_ltc_new,
+	.ltc = gk104_ltc_new,
 //	.mc = gk20a_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.pmu = gk20a_pmu_new,
@@ -1740,7 +1740,7 @@ nvf0_chipset = {
 	.i2c = gk104_i2c_new,
 	.ibus = gk104_ibus_new,
 	.imem = nv50_instmem_new,
-//	.ltc = gk104_ltc_new,
+	.ltc = gk104_ltc_new,
 //	.mc = gf106_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
@@ -1776,7 +1776,7 @@ nvf1_chipset = {
 	.i2c = gf119_i2c_new,
 	.ibus = gk104_ibus_new,
 	.imem = nv50_instmem_new,
-//	.ltc = gk104_ltc_new,
+	.ltc = gk104_ltc_new,
 //	.mc = gf106_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
@@ -1812,7 +1812,7 @@ nv106_chipset = {
 	.i2c = gk104_i2c_new,
 	.ibus = gk104_ibus_new,
 	.imem = nv50_instmem_new,
-//	.ltc = gk104_ltc_new,
+	.ltc = gk104_ltc_new,
 //	.mc = gk20a_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
@@ -1847,7 +1847,7 @@ nv108_chipset = {
 	.i2c = gk104_i2c_new,
 	.ibus = gk104_ibus_new,
 	.imem = nv50_instmem_new,
-//	.ltc = gk104_ltc_new,
+	.ltc = gk104_ltc_new,
 //	.mc = gk20a_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
@@ -1882,7 +1882,7 @@ nv117_chipset = {
 	.i2c = gf119_i2c_new,
 	.ibus = gk104_ibus_new,
 	.imem = nv50_instmem_new,
-//	.ltc = gm107_ltc_new,
+	.ltc = gm107_ltc_new,
 //	.mc = gk20a_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
@@ -1911,7 +1911,7 @@ nv124_chipset = {
 	.i2c = gm204_i2c_new,
 	.ibus = gk104_ibus_new,
 	.imem = nv50_instmem_new,
-//	.ltc = gm107_ltc_new,
+	.ltc = gm107_ltc_new,
 //	.mc = gk20a_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
@@ -1940,7 +1940,7 @@ nv126_chipset = {
 	.i2c = gm204_i2c_new,
 	.ibus = gk104_ibus_new,
 	.imem = nv50_instmem_new,
-//	.ltc = gm107_ltc_new,
+	.ltc = gm107_ltc_new,
 //	.mc = gk20a_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mxm = nv50_mxm_new,
@@ -1965,7 +1965,7 @@ nv12b_chipset = {
 	.fuse = gm107_fuse_new,
 	.ibus = gk20a_ibus_new,
 	.imem = gk20a_instmem_new,
-//	.ltc = gm107_ltc_new,
+	.ltc = gm107_ltc_new,
 //	.mc = gk20a_mc_new,
 //	.mmu = gf100_mmu_new,
 //	.mmu = gf100_mmu_new,

commit b7a2bc1886d00f5f1358079e1e6f4979006a4ed6
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:20 2015 +1000

    drm/nouveau/imem: convert to new-style nvkm_subdev
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 99a07694a298..3b83f17b3a23 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -82,7 +82,7 @@ nv4_chipset = {
 	.devinit = nv04_devinit_new,
 	.fb = nv04_fb_new,
 	.i2c = nv04_i2c_new,
-//	.imem = nv04_instmem_new,
+	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
@@ -102,7 +102,7 @@ nv5_chipset = {
 	.devinit = nv05_devinit_new,
 	.fb = nv04_fb_new,
 	.i2c = nv04_i2c_new,
-//	.imem = nv04_instmem_new,
+	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
@@ -123,7 +123,7 @@ nv10_chipset = {
 	.fb = nv10_fb_new,
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
-//	.imem = nv04_instmem_new,
+	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
@@ -142,7 +142,7 @@ nv11_chipset = {
 	.fb = nv10_fb_new,
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
-//	.imem = nv04_instmem_new,
+	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
@@ -163,7 +163,7 @@ nv15_chipset = {
 	.fb = nv10_fb_new,
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
-//	.imem = nv04_instmem_new,
+	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
@@ -184,7 +184,7 @@ nv17_chipset = {
 	.fb = nv10_fb_new,
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
-//	.imem = nv04_instmem_new,
+	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
@@ -205,7 +205,7 @@ nv18_chipset = {
 	.fb = nv10_fb_new,
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
-//	.imem = nv04_instmem_new,
+	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
@@ -226,7 +226,7 @@ nv1a_chipset = {
 	.fb = nv1a_fb_new,
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
-//	.imem = nv04_instmem_new,
+	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
@@ -247,7 +247,7 @@ nv1f_chipset = {
 	.fb = nv1a_fb_new,
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
-//	.imem = nv04_instmem_new,
+	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
@@ -268,7 +268,7 @@ nv20_chipset = {
 	.fb = nv20_fb_new,
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
-//	.imem = nv04_instmem_new,
+	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
@@ -289,7 +289,7 @@ nv25_chipset = {
 	.fb = nv25_fb_new,
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
-//	.imem = nv04_instmem_new,
+	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
@@ -310,7 +310,7 @@ nv28_chipset = {
 	.fb = nv25_fb_new,
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
-//	.imem = nv04_instmem_new,
+	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
@@ -331,7 +331,7 @@ nv2a_chipset = {
 	.fb = nv25_fb_new,
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
-//	.imem = nv04_instmem_new,
+	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
@@ -352,7 +352,7 @@ nv30_chipset = {
 	.fb = nv30_fb_new,
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
-//	.imem = nv04_instmem_new,
+	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
@@ -373,7 +373,7 @@ nv31_chipset = {
 	.fb = nv30_fb_new,
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
-//	.imem = nv04_instmem_new,
+	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
@@ -395,7 +395,7 @@ nv34_chipset = {
 	.fb = nv10_fb_new,
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
-//	.imem = nv04_instmem_new,
+	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
@@ -417,7 +417,7 @@ nv35_chipset = {
 	.fb = nv35_fb_new,
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
-//	.imem = nv04_instmem_new,
+	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
@@ -438,7 +438,7 @@ nv36_chipset = {
 	.fb = nv36_fb_new,
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
-//	.imem = nv04_instmem_new,
+	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.timer = nv04_timer_new,
@@ -460,7 +460,7 @@ nv40_chipset = {
 	.fb = nv40_fb_new,
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
-//	.imem = nv40_instmem_new,
+	.imem = nv40_instmem_new,
 //	.mc = nv40_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.therm = nv40_therm_new,
@@ -485,7 +485,7 @@ nv41_chipset = {
 	.fb = nv41_fb_new,
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
-//	.imem = nv40_instmem_new,
+	.imem = nv40_instmem_new,
 //	.mc = nv40_mc_new,
 //	.mmu = nv41_mmu_new,
 //	.therm = nv40_therm_new,
@@ -510,7 +510,7 @@ nv42_chipset = {
 	.fb = nv41_fb_new,
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
-//	.imem = nv40_instmem_new,
+	.imem = nv40_instmem_new,
 //	.mc = nv40_mc_new,
 //	.mmu = nv41_mmu_new,
 //	.therm = nv40_therm_new,
@@ -535,7 +535,7 @@ nv43_chipset = {
 	.fb = nv41_fb_new,
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
-//	.imem = nv40_instmem_new,
+	.imem = nv40_instmem_new,
 //	.mc = nv40_mc_new,
 //	.mmu = nv41_mmu_new,
 //	.therm = nv40_therm_new,
@@ -560,7 +560,7 @@ nv44_chipset = {
 	.fb = nv44_fb_new,
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
-//	.imem = nv40_instmem_new,
+	.imem = nv40_instmem_new,
 //	.mc = nv44_mc_new,
 //	.mmu = nv44_mmu_new,
 //	.therm = nv40_therm_new,
@@ -585,7 +585,7 @@ nv45_chipset = {
 	.fb = nv40_fb_new,
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
-//	.imem = nv40_instmem_new,
+	.imem = nv40_instmem_new,
 //	.mc = nv40_mc_new,
 //	.mmu = nv04_mmu_new,
 //	.therm = nv40_therm_new,
@@ -610,7 +610,7 @@ nv46_chipset = {
 	.fb = nv46_fb_new,
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
-//	.imem = nv40_instmem_new,
+	.imem = nv40_instmem_new,
 //	.mc = nv44_mc_new,
 //	.mmu = nv44_mmu_new,
 //	.therm = nv40_therm_new,
@@ -635,7 +635,7 @@ nv47_chipset = {
 	.fb = nv47_fb_new,
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
-//	.imem = nv40_instmem_new,
+	.imem = nv40_instmem_new,
 //	.mc = nv40_mc_new,
 //	.mmu = nv41_mmu_new,
 //	.therm = nv40_therm_new,
@@ -660,7 +660,7 @@ nv49_chipset = {
 	.fb = nv49_fb_new,
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
-//	.imem = nv40_instmem_new,
+	.imem = nv40_instmem_new,
 //	.mc = nv40_mc_new,
 //	.mmu = nv41_mmu_new,
 //	.therm = nv40_therm_new,
@@ -685,7 +685,7 @@ nv4a_chipset = {
 	.fb = nv44_fb_new,
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
-//	.imem = nv40_instmem_new,
+	.imem = nv40_instmem_new,
 //	.mc = nv44_mc_new,
 //	.mmu = nv44_mmu_new,
 //	.therm = nv40_therm_new,
@@ -710,7 +710,7 @@ nv4b_chipset = {
 	.fb = nv49_fb_new,
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
-//	.imem = nv40_instmem_new,
+	.imem = nv40_instmem_new,
 //	.mc = nv40_mc_new,
 //	.mmu = nv41_mmu_new,
 //	.therm = nv40_therm_new,
@@ -735,7 +735,7 @@ nv4c_chipset = {
 	.fb = nv46_fb_new,
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
-//	.imem = nv40_instmem_new,
+	.imem = nv40_instmem_new,
 //	.mc = nv4c_mc_new,
 //	.mmu = nv44_mmu_new,
 //	.therm = nv40_therm_new,
@@ -760,7 +760,7 @@ nv4e_chipset = {
 	.fb = nv4e_fb_new,
 	.gpio = nv10_gpio_new,
 	.i2c = nv4e_i2c_new,
-//	.imem = nv40_instmem_new,
+	.imem = nv40_instmem_new,
 //	.mc = nv4c_mc_new,
 //	.mmu = nv44_mmu_new,
 //	.therm = nv40_therm_new,
@@ -787,7 +787,7 @@ nv50_chipset = {
 	.fuse = nv50_fuse_new,
 	.gpio = nv50_gpio_new,
 	.i2c = nv50_i2c_new,
-//	.imem = nv50_instmem_new,
+	.imem = nv50_instmem_new,
 //	.mc = nv50_mc_new,
 //	.mmu = nv50_mmu_new,
 //	.mxm = nv50_mxm_new,
@@ -813,7 +813,7 @@ nv63_chipset = {
 	.fb = nv46_fb_new,
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
-//	.imem = nv40_instmem_new,
+	.imem = nv40_instmem_new,
 //	.mc = nv4c_mc_new,
 //	.mmu = nv44_mmu_new,
 //	.therm = nv40_therm_new,
@@ -838,7 +838,7 @@ nv67_chipset = {
 	.fb = nv46_fb_new,
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
-//	.imem = nv40_instmem_new,
+	.imem = nv40_instmem_new,
 //	.mc = nv4c_mc_new,
 //	.mmu = nv44_mmu_new,
 //	.therm = nv40_therm_new,
@@ -863,7 +863,7 @@ nv68_chipset = {
 	.fb = nv46_fb_new,
 	.gpio = nv10_gpio_new,
 	.i2c = nv04_i2c_new,
-//	.imem = nv40_instmem_new,
+	.imem = nv40_instmem_new,
 //	.mc = nv4c_mc_new,
 //	.mmu = nv44_mmu_new,
 //	.therm = nv40_therm_new,
@@ -890,7 +890,7 @@ nv84_chipset = {
 	.fuse = nv50_fuse_new,
 	.gpio = nv50_gpio_new,
 	.i2c = nv50_i2c_new,
-//	.imem = nv50_instmem_new,
+	.imem = nv50_instmem_new,
 //	.mc = nv50_mc_new,
 //	.mmu = nv50_mmu_new,
 //	.mxm = nv50_mxm_new,
@@ -921,7 +921,7 @@ nv86_chipset = {
 	.fuse = nv50_fuse_new,
 	.gpio = nv50_gpio_new,
 	.i2c = nv50_i2c_new,
-//	.imem = nv50_instmem_new,
+	.imem = nv50_instmem_new,
 //	.mc = nv50_mc_new,
 //	.mmu = nv50_mmu_new,
 //	.mxm = nv50_mxm_new,
@@ -952,7 +952,7 @@ nv92_chipset = {
 	.fuse = nv50_fuse_new,
 	.gpio = nv50_gpio_new,
 	.i2c = nv50_i2c_new,
-//	.imem = nv50_instmem_new,
+	.imem = nv50_instmem_new,
 //	.mc = nv50_mc_new,
 //	.mmu = nv50_mmu_new,
 //	.mxm = nv50_mxm_new,
@@ -983,7 +983,7 @@ nv94_chipset = {
 	.fuse = nv50_fuse_new,
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
-//	.imem = nv50_instmem_new,
+	.imem = nv50_instmem_new,
 //	.mc = g94_mc_new,
 //	.mmu = nv50_mmu_new,
 //	.mxm = nv50_mxm_new,
@@ -1017,7 +1017,7 @@ nv96_chipset = {
 	.bus = g94_bus_new,
 //	.timer = nv04_timer_new,
 	.fb = g84_fb_new,
-//	.imem = nv50_instmem_new,
+	.imem = nv50_instmem_new,
 //	.mmu = nv50_mmu_new,
 	.bar = g84_bar_new,
 //	.volt = nv40_volt_new,
@@ -1048,7 +1048,7 @@ nv98_chipset = {
 	.bus = g94_bus_new,
 //	.timer = nv04_timer_new,
 	.fb = g84_fb_new,
-//	.imem = nv50_instmem_new,
+	.imem = nv50_instmem_new,
 //	.mmu = nv50_mmu_new,
 	.bar = g84_bar_new,
 //	.volt = nv40_volt_new,
@@ -1076,7 +1076,7 @@ nva0_chipset = {
 	.fuse = nv50_fuse_new,
 	.gpio = g94_gpio_new,
 	.i2c = nv50_i2c_new,
-//	.imem = nv50_instmem_new,
+	.imem = nv50_instmem_new,
 //	.mc = g98_mc_new,
 //	.mmu = nv50_mmu_new,
 //	.mxm = nv50_mxm_new,
@@ -1107,7 +1107,7 @@ nva3_chipset = {
 	.fuse = nv50_fuse_new,
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
-//	.imem = nv50_instmem_new,
+	.imem = nv50_instmem_new,
 //	.mc = g98_mc_new,
 //	.mmu = nv50_mmu_new,
 //	.mxm = nv50_mxm_new,
@@ -1140,7 +1140,7 @@ nva5_chipset = {
 	.fuse = nv50_fuse_new,
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
-//	.imem = nv50_instmem_new,
+	.imem = nv50_instmem_new,
 //	.mc = g98_mc_new,
 //	.mmu = nv50_mmu_new,
 //	.mxm = nv50_mxm_new,
@@ -1172,7 +1172,7 @@ nva8_chipset = {
 	.fuse = nv50_fuse_new,
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
-//	.imem = nv50_instmem_new,
+	.imem = nv50_instmem_new,
 //	.mc = g98_mc_new,
 //	.mmu = nv50_mmu_new,
 //	.mxm = nv50_mxm_new,
@@ -1204,7 +1204,7 @@ nvaa_chipset = {
 	.fuse = nv50_fuse_new,
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
-//	.imem = nv50_instmem_new,
+	.imem = nv50_instmem_new,
 //	.mc = g98_mc_new,
 //	.mmu = nv50_mmu_new,
 //	.mxm = nv50_mxm_new,
@@ -1235,7 +1235,7 @@ nvac_chipset = {
 	.fuse = nv50_fuse_new,
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
-//	.imem = nv50_instmem_new,
+	.imem = nv50_instmem_new,
 //	.mc = g98_mc_new,
 //	.mmu = nv50_mmu_new,
 //	.mxm = nv50_mxm_new,
@@ -1266,7 +1266,7 @@ nvaf_chipset = {
 	.fuse = nv50_fuse_new,
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
-//	.imem = nv50_instmem_new,
+	.imem = nv50_instmem_new,
 //	.mc = g98_mc_new,
 //	.mmu = nv50_mmu_new,
 //	.mxm = nv50_mxm_new,
@@ -1299,7 +1299,7 @@ nvc0_chipset = {
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
 	.ibus = gf100_ibus_new,
-//	.imem = nv50_instmem_new,
+	.imem = nv50_instmem_new,
 //	.ltc = gf100_ltc_new,
 //	.mc = gf100_mc_new,
 //	.mmu = gf100_mmu_new,
@@ -1334,7 +1334,7 @@ nvc1_chipset = {
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
 	.ibus = gf100_ibus_new,
-//	.imem = nv50_instmem_new,
+	.imem = nv50_instmem_new,
 //	.ltc = gf100_ltc_new,
 //	.mc = gf106_mc_new,
 //	.mmu = gf100_mmu_new,
@@ -1368,7 +1368,7 @@ nvc3_chipset = {
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
 	.ibus = gf100_ibus_new,
-//	.imem = nv50_instmem_new,
+	.imem = nv50_instmem_new,
 //	.ltc = gf100_ltc_new,
 //	.mc = gf106_mc_new,
 //	.mmu = gf100_mmu_new,
@@ -1402,7 +1402,7 @@ nvc4_chipset = {
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
 	.ibus = gf100_ibus_new,
-//	.imem = nv50_instmem_new,
+	.imem = nv50_instmem_new,
 //	.ltc = gf100_ltc_new,
 //	.mc = gf100_mc_new,
 //	.mmu = gf100_mmu_new,
@@ -1437,7 +1437,7 @@ nvc8_chipset = {
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
 	.ibus = gf100_ibus_new,
-//	.imem = nv50_instmem_new,
+	.imem = nv50_instmem_new,
 //	.ltc = gf100_ltc_new,
 //	.mc = gf100_mc_new,
 //	.mmu = gf100_mmu_new,
@@ -1472,7 +1472,7 @@ nvce_chipset = {
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
 	.ibus = gf100_ibus_new,
-//	.imem = nv50_instmem_new,
+	.imem = nv50_instmem_new,
 //	.ltc = gf100_ltc_new,
 //	.mc = gf100_mc_new,
 //	.mmu = gf100_mmu_new,
@@ -1507,7 +1507,7 @@ nvcf_chipset = {
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
 	.ibus = gf100_ibus_new,
-//	.imem = nv50_instmem_new,
+	.imem = nv50_instmem_new,
 //	.ltc = gf100_ltc_new,
 //	.mc = gf106_mc_new,
 //	.mmu = gf100_mmu_new,
@@ -1541,7 +1541,7 @@ nvd7_chipset = {
 	.gpio = gf119_gpio_new,
 	.i2c = gf117_i2c_new,
 	.ibus = gf100_ibus_new,
-//	.imem = nv50_instmem_new,
+	.imem = nv50_instmem_new,
 //	.ltc = gf100_ltc_new,
 //	.mc = gf106_mc_new,
 //	.mmu = gf100_mmu_new,
@@ -1573,7 +1573,7 @@ nvd9_chipset = {
 	.gpio = gf119_gpio_new,
 	.i2c = gf119_i2c_new,
 	.ibus = gf100_ibus_new,
-//	.imem = nv50_instmem_new,
+	.imem = nv50_instmem_new,
 //	.ltc = gf100_ltc_new,
 //	.mc = gf106_mc_new,
 //	.mmu = gf100_mmu_new,
@@ -1607,7 +1607,7 @@ nve4_chipset = {
 	.gpio = gk104_gpio_new,
 	.i2c = gk104_i2c_new,
 	.ibus = gk104_ibus_new,
-//	.imem = nv50_instmem_new,
+	.imem = nv50_instmem_new,
 //	.ltc = gk104_ltc_new,
 //	.mc = gf106_mc_new,
 //	.mmu = gf100_mmu_new,
@@ -1643,7 +1643,7 @@ nve6_chipset = {
 	.gpio = gk104_gpio_new,
 	.i2c = gk104_i2c_new,
 	.ibus = gk104_ibus_new,
-//	.imem = nv50_instmem_new,
+	.imem = nv50_instmem_new,
 //	.ltc = gk104_ltc_new,
 //	.mc = gf106_mc_new,
 //	.mmu = gf100_mmu_new,
@@ -1679,7 +1679,7 @@ nve7_chipset = {
 	.gpio = gk104_gpio_new,
 	.i2c = gk104_i2c_new,
 	.ibus = gk104_ibus_new,
-//	.imem = nv50_instmem_new,
+	.imem = nv50_instmem_new,
 //	.ltc = gk104_ltc_new,
 //	.mc = gf106_mc_new,
 //	.mmu = gf100_mmu_new,
@@ -1711,7 +1711,7 @@ nvea_chipset = {
 	.fb = gk20a_fb_new,
 	.fuse = gf100_fuse_new,
 	.ibus = gk20a_ibus_new,
-//	.imem = gk20a_instmem_new,
+	.imem = gk20a_instmem_new,
 //	.ltc = gk104_ltc_new,
 //	.mc = gk20a_mc_new,
 //	.mmu = gf100_mmu_new,
@@ -1739,7 +1739,7 @@ nvf0_chipset = {
 	.gpio = gk104_gpio_new,
 	.i2c = gk104_i2c_new,
 	.ibus = gk104_ibus_new,
-//	.imem = nv50_instmem_new,
+	.imem = nv50_instmem_new,
 //	.ltc = gk104_ltc_new,
 //	.mc = gf106_mc_new,
 //	.mmu = gf100_mmu_new,
@@ -1775,7 +1775,7 @@ nvf1_chipset = {
 	.gpio = gk104_gpio_new,
 	.i2c = gf119_i2c_new,
 	.ibus = gk104_ibus_new,
-//	.imem = nv50_instmem_new,
+	.imem = nv50_instmem_new,
 //	.ltc = gk104_ltc_new,
 //	.mc = gf106_mc_new,
 //	.mmu = gf100_mmu_new,
@@ -1811,7 +1811,7 @@ nv106_chipset = {
 	.gpio = gk104_gpio_new,
 	.i2c = gk104_i2c_new,
 	.ibus = gk104_ibus_new,
-//	.imem = nv50_instmem_new,
+	.imem = nv50_instmem_new,
 //	.ltc = gk104_ltc_new,
 //	.mc = gk20a_mc_new,
 //	.mmu = gf100_mmu_new,
@@ -1846,7 +1846,7 @@ nv108_chipset = {
 	.gpio = gk104_gpio_new,
 	.i2c = gk104_i2c_new,
 	.ibus = gk104_ibus_new,
-//	.imem = nv50_instmem_new,
+	.imem = nv50_instmem_new,
 //	.ltc = gk104_ltc_new,
 //	.mc = gk20a_mc_new,
 //	.mmu = gf100_mmu_new,
@@ -1881,7 +1881,7 @@ nv117_chipset = {
 	.gpio = gk104_gpio_new,
 	.i2c = gf119_i2c_new,
 	.ibus = gk104_ibus_new,
-//	.imem = nv50_instmem_new,
+	.imem = nv50_instmem_new,
 //	.ltc = gm107_ltc_new,
 //	.mc = gk20a_mc_new,
 //	.mmu = gf100_mmu_new,
@@ -1910,7 +1910,7 @@ nv124_chipset = {
 	.gpio = gk104_gpio_new,
 	.i2c = gm204_i2c_new,
 	.ibus = gk104_ibus_new,
-//	.imem = nv50_instmem_new,
+	.imem = nv50_instmem_new,
 //	.ltc = gm107_ltc_new,
 //	.mc = gk20a_mc_new,
 //	.mmu = gf100_mmu_new,
@@ -1939,7 +1939,7 @@ nv126_chipset = {
 	.gpio = gk104_gpio_new,
 	.i2c = gm204_i2c_new,
 	.ibus = gk104_ibus_new,
-//	.imem = nv50_instmem_new,
+	.imem = nv50_instmem_new,
 //	.ltc = gm107_ltc_new,
 //	.mc = gk20a_mc_new,
 //	.mmu = gf100_mmu_new,
@@ -1964,7 +1964,7 @@ nv12b_chipset = {
 	.fb = gk20a_fb_new,
 	.fuse = gm107_fuse_new,
 	.ibus = gk20a_ibus_new,
-//	.imem = gk20a_instmem_new,
+	.imem = gk20a_instmem_new,
 //	.ltc = gm107_ltc_new,
 //	.mc = gk20a_mc_new,
 //	.mmu = gf100_mmu_new,

commit 8de65bd0901e2ee7a485a158bfe9e4631cc00644
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:20 2015 +1000

    drm/nouveau/devinit: run devinit scripts right after preinit
    
    This ensures we have a valid mask of disabled engines before we start
    trying to execute fini()/init() on the subdevs, potentially touching
    devices that don't exist.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 2d8ef80f32e7..99a07694a298 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -2167,7 +2167,9 @@ nvkm_device_preinit(struct nvkm_device *device)
 		}
 	}
 
-	/*XXX: devinit */
+	ret = nvkm_devinit_post(device->devinit, &device->disable_mask);
+	if (ret)
+		goto fail;
 
 	time = ktime_to_us(ktime_get()) - time;
 	nvdev_trace(device, "preinit completed in %lldus\n", time);

commit 551d341755e2ade4a915d889524a4187f2cd210e
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:20 2015 +1000

    drm/nouveau/ibus: convert to new-style nvkm_subdev
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 4c314961cc36..2d8ef80f32e7 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1298,7 +1298,7 @@ nvc0_chipset = {
 	.fuse = gf100_fuse_new,
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
-//	.ibus = gf100_ibus_new,
+	.ibus = gf100_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gf100_ltc_new,
 //	.mc = gf100_mc_new,
@@ -1333,7 +1333,7 @@ nvc1_chipset = {
 	.fuse = gf100_fuse_new,
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
-//	.ibus = gf100_ibus_new,
+	.ibus = gf100_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gf100_ltc_new,
 //	.mc = gf106_mc_new,
@@ -1367,7 +1367,7 @@ nvc3_chipset = {
 	.fuse = gf100_fuse_new,
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
-//	.ibus = gf100_ibus_new,
+	.ibus = gf100_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gf100_ltc_new,
 //	.mc = gf106_mc_new,
@@ -1401,7 +1401,7 @@ nvc4_chipset = {
 	.fuse = gf100_fuse_new,
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
-//	.ibus = gf100_ibus_new,
+	.ibus = gf100_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gf100_ltc_new,
 //	.mc = gf100_mc_new,
@@ -1436,7 +1436,7 @@ nvc8_chipset = {
 	.fuse = gf100_fuse_new,
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
-//	.ibus = gf100_ibus_new,
+	.ibus = gf100_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gf100_ltc_new,
 //	.mc = gf100_mc_new,
@@ -1471,7 +1471,7 @@ nvce_chipset = {
 	.fuse = gf100_fuse_new,
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
-//	.ibus = gf100_ibus_new,
+	.ibus = gf100_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gf100_ltc_new,
 //	.mc = gf100_mc_new,
@@ -1506,7 +1506,7 @@ nvcf_chipset = {
 	.fuse = gf100_fuse_new,
 	.gpio = g94_gpio_new,
 	.i2c = g94_i2c_new,
-//	.ibus = gf100_ibus_new,
+	.ibus = gf100_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gf100_ltc_new,
 //	.mc = gf106_mc_new,
@@ -1540,7 +1540,7 @@ nvd7_chipset = {
 	.fuse = gf100_fuse_new,
 	.gpio = gf119_gpio_new,
 	.i2c = gf117_i2c_new,
-//	.ibus = gf100_ibus_new,
+	.ibus = gf100_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gf100_ltc_new,
 //	.mc = gf106_mc_new,
@@ -1572,7 +1572,7 @@ nvd9_chipset = {
 	.fuse = gf100_fuse_new,
 	.gpio = gf119_gpio_new,
 	.i2c = gf119_i2c_new,
-//	.ibus = gf100_ibus_new,
+	.ibus = gf100_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gf100_ltc_new,
 //	.mc = gf106_mc_new,
@@ -1606,7 +1606,7 @@ nve4_chipset = {
 	.fuse = gf100_fuse_new,
 	.gpio = gk104_gpio_new,
 	.i2c = gk104_i2c_new,
-//	.ibus = gk104_ibus_new,
+	.ibus = gk104_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gk104_ltc_new,
 //	.mc = gf106_mc_new,
@@ -1642,7 +1642,7 @@ nve6_chipset = {
 	.fuse = gf100_fuse_new,
 	.gpio = gk104_gpio_new,
 	.i2c = gk104_i2c_new,
-//	.ibus = gk104_ibus_new,
+	.ibus = gk104_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gk104_ltc_new,
 //	.mc = gf106_mc_new,
@@ -1678,7 +1678,7 @@ nve7_chipset = {
 	.fuse = gf100_fuse_new,
 	.gpio = gk104_gpio_new,
 	.i2c = gk104_i2c_new,
-//	.ibus = gk104_ibus_new,
+	.ibus = gk104_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gk104_ltc_new,
 //	.mc = gf106_mc_new,
@@ -1710,7 +1710,7 @@ nvea_chipset = {
 	.clk = gk20a_clk_new,
 	.fb = gk20a_fb_new,
 	.fuse = gf100_fuse_new,
-//	.ibus = gk20a_ibus_new,
+	.ibus = gk20a_ibus_new,
 //	.imem = gk20a_instmem_new,
 //	.ltc = gk104_ltc_new,
 //	.mc = gk20a_mc_new,
@@ -1738,7 +1738,7 @@ nvf0_chipset = {
 	.fuse = gf100_fuse_new,
 	.gpio = gk104_gpio_new,
 	.i2c = gk104_i2c_new,
-//	.ibus = gk104_ibus_new,
+	.ibus = gk104_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gk104_ltc_new,
 //	.mc = gf106_mc_new,
@@ -1774,7 +1774,7 @@ nvf1_chipset = {
 	.fuse = gf100_fuse_new,
 	.gpio = gk104_gpio_new,
 	.i2c = gf119_i2c_new,
-//	.ibus = gk104_ibus_new,
+	.ibus = gk104_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gk104_ltc_new,
 //	.mc = gf106_mc_new,
@@ -1810,7 +1810,7 @@ nv106_chipset = {
 	.fuse = gf100_fuse_new,
 	.gpio = gk104_gpio_new,
 	.i2c = gk104_i2c_new,
-//	.ibus = gk104_ibus_new,
+	.ibus = gk104_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gk104_ltc_new,
 //	.mc = gk20a_mc_new,
@@ -1845,7 +1845,7 @@ nv108_chipset = {
 	.fuse = gf100_fuse_new,
 	.gpio = gk104_gpio_new,
 	.i2c = gk104_i2c_new,
-//	.ibus = gk104_ibus_new,
+	.ibus = gk104_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gk104_ltc_new,
 //	.mc = gk20a_mc_new,
@@ -1880,7 +1880,7 @@ nv117_chipset = {
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
 	.i2c = gf119_i2c_new,
-//	.ibus = gk104_ibus_new,
+	.ibus = gk104_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gm107_ltc_new,
 //	.mc = gk20a_mc_new,
@@ -1909,7 +1909,7 @@ nv124_chipset = {
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
 	.i2c = gm204_i2c_new,
-//	.ibus = gk104_ibus_new,
+	.ibus = gk104_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gm107_ltc_new,
 //	.mc = gk20a_mc_new,
@@ -1938,7 +1938,7 @@ nv126_chipset = {
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
 	.i2c = gm204_i2c_new,
-//	.ibus = gk104_ibus_new,
+	.ibus = gk104_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gm107_ltc_new,
 //	.mc = gk20a_mc_new,
@@ -1963,7 +1963,7 @@ nv12b_chipset = {
 	.bus = gf100_bus_new,
 	.fb = gk20a_fb_new,
 	.fuse = gm107_fuse_new,
-//	.ibus = gk20a_ibus_new,
+	.ibus = gk20a_ibus_new,
 //	.imem = gk20a_instmem_new,
 //	.ltc = gm107_ltc_new,
 //	.mc = gk20a_mc_new,

commit 49bd8da5130aa2de1c891c71163a033254eaf932
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:20 2015 +1000

    drm/nouveau/i2c: convert to new-style nvkm_subdev
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 3caaa9caf4d3..4c314961cc36 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -81,7 +81,7 @@ nv4_chipset = {
 	.clk = nv04_clk_new,
 	.devinit = nv04_devinit_new,
 	.fb = nv04_fb_new,
-//	.i2c = nv04_i2c_new,
+	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
@@ -101,7 +101,7 @@ nv5_chipset = {
 	.clk = nv04_clk_new,
 	.devinit = nv05_devinit_new,
 	.fb = nv04_fb_new,
-//	.i2c = nv04_i2c_new,
+	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
@@ -122,7 +122,7 @@ nv10_chipset = {
 	.devinit = nv10_devinit_new,
 	.fb = nv10_fb_new,
 	.gpio = nv10_gpio_new,
-//	.i2c = nv04_i2c_new,
+	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
@@ -141,7 +141,7 @@ nv11_chipset = {
 	.devinit = nv10_devinit_new,
 	.fb = nv10_fb_new,
 	.gpio = nv10_gpio_new,
-//	.i2c = nv04_i2c_new,
+	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
@@ -162,7 +162,7 @@ nv15_chipset = {
 	.devinit = nv10_devinit_new,
 	.fb = nv10_fb_new,
 	.gpio = nv10_gpio_new,
-//	.i2c = nv04_i2c_new,
+	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
@@ -183,7 +183,7 @@ nv17_chipset = {
 	.devinit = nv10_devinit_new,
 	.fb = nv10_fb_new,
 	.gpio = nv10_gpio_new,
-//	.i2c = nv04_i2c_new,
+	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
@@ -204,7 +204,7 @@ nv18_chipset = {
 	.devinit = nv10_devinit_new,
 	.fb = nv10_fb_new,
 	.gpio = nv10_gpio_new,
-//	.i2c = nv04_i2c_new,
+	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
@@ -225,7 +225,7 @@ nv1a_chipset = {
 	.devinit = nv1a_devinit_new,
 	.fb = nv1a_fb_new,
 	.gpio = nv10_gpio_new,
-//	.i2c = nv04_i2c_new,
+	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
@@ -246,7 +246,7 @@ nv1f_chipset = {
 	.devinit = nv1a_devinit_new,
 	.fb = nv1a_fb_new,
 	.gpio = nv10_gpio_new,
-//	.i2c = nv04_i2c_new,
+	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
@@ -267,7 +267,7 @@ nv20_chipset = {
 	.devinit = nv20_devinit_new,
 	.fb = nv20_fb_new,
 	.gpio = nv10_gpio_new,
-//	.i2c = nv04_i2c_new,
+	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
@@ -288,7 +288,7 @@ nv25_chipset = {
 	.devinit = nv20_devinit_new,
 	.fb = nv25_fb_new,
 	.gpio = nv10_gpio_new,
-//	.i2c = nv04_i2c_new,
+	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
@@ -309,7 +309,7 @@ nv28_chipset = {
 	.devinit = nv20_devinit_new,
 	.fb = nv25_fb_new,
 	.gpio = nv10_gpio_new,
-//	.i2c = nv04_i2c_new,
+	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
@@ -330,7 +330,7 @@ nv2a_chipset = {
 	.devinit = nv20_devinit_new,
 	.fb = nv25_fb_new,
 	.gpio = nv10_gpio_new,
-//	.i2c = nv04_i2c_new,
+	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
@@ -351,7 +351,7 @@ nv30_chipset = {
 	.devinit = nv20_devinit_new,
 	.fb = nv30_fb_new,
 	.gpio = nv10_gpio_new,
-//	.i2c = nv04_i2c_new,
+	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
@@ -372,7 +372,7 @@ nv31_chipset = {
 	.devinit = nv20_devinit_new,
 	.fb = nv30_fb_new,
 	.gpio = nv10_gpio_new,
-//	.i2c = nv04_i2c_new,
+	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
@@ -394,7 +394,7 @@ nv34_chipset = {
 	.devinit = nv10_devinit_new,
 	.fb = nv10_fb_new,
 	.gpio = nv10_gpio_new,
-//	.i2c = nv04_i2c_new,
+	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
@@ -416,7 +416,7 @@ nv35_chipset = {
 	.devinit = nv20_devinit_new,
 	.fb = nv35_fb_new,
 	.gpio = nv10_gpio_new,
-//	.i2c = nv04_i2c_new,
+	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
@@ -437,7 +437,7 @@ nv36_chipset = {
 	.devinit = nv20_devinit_new,
 	.fb = nv36_fb_new,
 	.gpio = nv10_gpio_new,
-//	.i2c = nv04_i2c_new,
+	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
 //	.mmu = nv04_mmu_new,
@@ -459,7 +459,7 @@ nv40_chipset = {
 	.devinit = nv1a_devinit_new,
 	.fb = nv40_fb_new,
 	.gpio = nv10_gpio_new,
-//	.i2c = nv04_i2c_new,
+	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
 //	.mc = nv40_mc_new,
 //	.mmu = nv04_mmu_new,
@@ -484,7 +484,7 @@ nv41_chipset = {
 	.devinit = nv1a_devinit_new,
 	.fb = nv41_fb_new,
 	.gpio = nv10_gpio_new,
-//	.i2c = nv04_i2c_new,
+	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
 //	.mc = nv40_mc_new,
 //	.mmu = nv41_mmu_new,
@@ -509,7 +509,7 @@ nv42_chipset = {
 	.devinit = nv1a_devinit_new,
 	.fb = nv41_fb_new,
 	.gpio = nv10_gpio_new,
-//	.i2c = nv04_i2c_new,
+	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
 //	.mc = nv40_mc_new,
 //	.mmu = nv41_mmu_new,
@@ -534,7 +534,7 @@ nv43_chipset = {
 	.devinit = nv1a_devinit_new,
 	.fb = nv41_fb_new,
 	.gpio = nv10_gpio_new,
-//	.i2c = nv04_i2c_new,
+	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
 //	.mc = nv40_mc_new,
 //	.mmu = nv41_mmu_new,
@@ -559,7 +559,7 @@ nv44_chipset = {
 	.devinit = nv1a_devinit_new,
 	.fb = nv44_fb_new,
 	.gpio = nv10_gpio_new,
-//	.i2c = nv04_i2c_new,
+	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
 //	.mc = nv44_mc_new,
 //	.mmu = nv44_mmu_new,
@@ -584,7 +584,7 @@ nv45_chipset = {
 	.devinit = nv1a_devinit_new,
 	.fb = nv40_fb_new,
 	.gpio = nv10_gpio_new,
-//	.i2c = nv04_i2c_new,
+	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
 //	.mc = nv40_mc_new,
 //	.mmu = nv04_mmu_new,
@@ -609,7 +609,7 @@ nv46_chipset = {
 	.devinit = nv1a_devinit_new,
 	.fb = nv46_fb_new,
 	.gpio = nv10_gpio_new,
-//	.i2c = nv04_i2c_new,
+	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
 //	.mc = nv44_mc_new,
 //	.mmu = nv44_mmu_new,
@@ -634,7 +634,7 @@ nv47_chipset = {
 	.devinit = nv1a_devinit_new,
 	.fb = nv47_fb_new,
 	.gpio = nv10_gpio_new,
-//	.i2c = nv04_i2c_new,
+	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
 //	.mc = nv40_mc_new,
 //	.mmu = nv41_mmu_new,
@@ -659,7 +659,7 @@ nv49_chipset = {
 	.devinit = nv1a_devinit_new,
 	.fb = nv49_fb_new,
 	.gpio = nv10_gpio_new,
-//	.i2c = nv04_i2c_new,
+	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
 //	.mc = nv40_mc_new,
 //	.mmu = nv41_mmu_new,
@@ -684,7 +684,7 @@ nv4a_chipset = {
 	.devinit = nv1a_devinit_new,
 	.fb = nv44_fb_new,
 	.gpio = nv10_gpio_new,
-//	.i2c = nv04_i2c_new,
+	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
 //	.mc = nv44_mc_new,
 //	.mmu = nv44_mmu_new,
@@ -709,7 +709,7 @@ nv4b_chipset = {
 	.devinit = nv1a_devinit_new,
 	.fb = nv49_fb_new,
 	.gpio = nv10_gpio_new,
-//	.i2c = nv04_i2c_new,
+	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
 //	.mc = nv40_mc_new,
 //	.mmu = nv41_mmu_new,
@@ -734,7 +734,7 @@ nv4c_chipset = {
 	.devinit = nv1a_devinit_new,
 	.fb = nv46_fb_new,
 	.gpio = nv10_gpio_new,
-//	.i2c = nv04_i2c_new,
+	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
 //	.mc = nv4c_mc_new,
 //	.mmu = nv44_mmu_new,
@@ -759,7 +759,7 @@ nv4e_chipset = {
 	.devinit = nv1a_devinit_new,
 	.fb = nv4e_fb_new,
 	.gpio = nv10_gpio_new,
-//	.i2c = nv4e_i2c_new,
+	.i2c = nv4e_i2c_new,
 //	.imem = nv40_instmem_new,
 //	.mc = nv4c_mc_new,
 //	.mmu = nv44_mmu_new,
@@ -786,7 +786,7 @@ nv50_chipset = {
 	.fb = nv50_fb_new,
 	.fuse = nv50_fuse_new,
 	.gpio = nv50_gpio_new,
-//	.i2c = nv50_i2c_new,
+	.i2c = nv50_i2c_new,
 //	.imem = nv50_instmem_new,
 //	.mc = nv50_mc_new,
 //	.mmu = nv50_mmu_new,
@@ -812,7 +812,7 @@ nv63_chipset = {
 	.devinit = nv1a_devinit_new,
 	.fb = nv46_fb_new,
 	.gpio = nv10_gpio_new,
-//	.i2c = nv04_i2c_new,
+	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
 //	.mc = nv4c_mc_new,
 //	.mmu = nv44_mmu_new,
@@ -837,7 +837,7 @@ nv67_chipset = {
 	.devinit = nv1a_devinit_new,
 	.fb = nv46_fb_new,
 	.gpio = nv10_gpio_new,
-//	.i2c = nv04_i2c_new,
+	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
 //	.mc = nv4c_mc_new,
 //	.mmu = nv44_mmu_new,
@@ -862,7 +862,7 @@ nv68_chipset = {
 	.devinit = nv1a_devinit_new,
 	.fb = nv46_fb_new,
 	.gpio = nv10_gpio_new,
-//	.i2c = nv04_i2c_new,
+	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
 //	.mc = nv4c_mc_new,
 //	.mmu = nv44_mmu_new,
@@ -889,7 +889,7 @@ nv84_chipset = {
 	.fb = g84_fb_new,
 	.fuse = nv50_fuse_new,
 	.gpio = nv50_gpio_new,
-//	.i2c = nv50_i2c_new,
+	.i2c = nv50_i2c_new,
 //	.imem = nv50_instmem_new,
 //	.mc = nv50_mc_new,
 //	.mmu = nv50_mmu_new,
@@ -920,7 +920,7 @@ nv86_chipset = {
 	.fb = g84_fb_new,
 	.fuse = nv50_fuse_new,
 	.gpio = nv50_gpio_new,
-//	.i2c = nv50_i2c_new,
+	.i2c = nv50_i2c_new,
 //	.imem = nv50_instmem_new,
 //	.mc = nv50_mc_new,
 //	.mmu = nv50_mmu_new,
@@ -951,7 +951,7 @@ nv92_chipset = {
 	.fb = g84_fb_new,
 	.fuse = nv50_fuse_new,
 	.gpio = nv50_gpio_new,
-//	.i2c = nv50_i2c_new,
+	.i2c = nv50_i2c_new,
 //	.imem = nv50_instmem_new,
 //	.mc = nv50_mc_new,
 //	.mmu = nv50_mmu_new,
@@ -982,7 +982,7 @@ nv94_chipset = {
 	.fb = g84_fb_new,
 	.fuse = nv50_fuse_new,
 	.gpio = g94_gpio_new,
-//	.i2c = g94_i2c_new,
+	.i2c = g94_i2c_new,
 //	.imem = nv50_instmem_new,
 //	.mc = g94_mc_new,
 //	.mmu = nv50_mmu_new,
@@ -1007,7 +1007,7 @@ nv96_chipset = {
 	.name = "G96",
 	.bios = nvkm_bios_new,
 	.gpio = g94_gpio_new,
-//	.i2c = g94_i2c_new,
+	.i2c = g94_i2c_new,
 	.fuse = nv50_fuse_new,
 	.clk = g84_clk_new,
 //	.therm = g84_therm_new,
@@ -1038,7 +1038,7 @@ nv98_chipset = {
 	.name = "G98",
 	.bios = nvkm_bios_new,
 	.gpio = g94_gpio_new,
-//	.i2c = g94_i2c_new,
+	.i2c = g94_i2c_new,
 	.fuse = nv50_fuse_new,
 	.clk = g84_clk_new,
 //	.therm = g84_therm_new,
@@ -1075,7 +1075,7 @@ nva0_chipset = {
 	.fb = g84_fb_new,
 	.fuse = nv50_fuse_new,
 	.gpio = g94_gpio_new,
-//	.i2c = nv50_i2c_new,
+	.i2c = nv50_i2c_new,
 //	.imem = nv50_instmem_new,
 //	.mc = g98_mc_new,
 //	.mmu = nv50_mmu_new,
@@ -1106,7 +1106,7 @@ nva3_chipset = {
 	.fb = gt215_fb_new,
 	.fuse = nv50_fuse_new,
 	.gpio = g94_gpio_new,
-//	.i2c = g94_i2c_new,
+	.i2c = g94_i2c_new,
 //	.imem = nv50_instmem_new,
 //	.mc = g98_mc_new,
 //	.mmu = nv50_mmu_new,
@@ -1139,7 +1139,7 @@ nva5_chipset = {
 	.fb = gt215_fb_new,
 	.fuse = nv50_fuse_new,
 	.gpio = g94_gpio_new,
-//	.i2c = g94_i2c_new,
+	.i2c = g94_i2c_new,
 //	.imem = nv50_instmem_new,
 //	.mc = g98_mc_new,
 //	.mmu = nv50_mmu_new,
@@ -1171,7 +1171,7 @@ nva8_chipset = {
 	.fb = gt215_fb_new,
 	.fuse = nv50_fuse_new,
 	.gpio = g94_gpio_new,
-//	.i2c = g94_i2c_new,
+	.i2c = g94_i2c_new,
 //	.imem = nv50_instmem_new,
 //	.mc = g98_mc_new,
 //	.mmu = nv50_mmu_new,
@@ -1203,7 +1203,7 @@ nvaa_chipset = {
 	.fb = mcp77_fb_new,
 	.fuse = nv50_fuse_new,
 	.gpio = g94_gpio_new,
-//	.i2c = g94_i2c_new,
+	.i2c = g94_i2c_new,
 //	.imem = nv50_instmem_new,
 //	.mc = g98_mc_new,
 //	.mmu = nv50_mmu_new,
@@ -1234,7 +1234,7 @@ nvac_chipset = {
 	.fb = mcp77_fb_new,
 	.fuse = nv50_fuse_new,
 	.gpio = g94_gpio_new,
-//	.i2c = g94_i2c_new,
+	.i2c = g94_i2c_new,
 //	.imem = nv50_instmem_new,
 //	.mc = g98_mc_new,
 //	.mmu = nv50_mmu_new,
@@ -1265,7 +1265,7 @@ nvaf_chipset = {
 	.fb = mcp89_fb_new,
 	.fuse = nv50_fuse_new,
 	.gpio = g94_gpio_new,
-//	.i2c = g94_i2c_new,
+	.i2c = g94_i2c_new,
 //	.imem = nv50_instmem_new,
 //	.mc = g98_mc_new,
 //	.mmu = nv50_mmu_new,
@@ -1297,7 +1297,7 @@ nvc0_chipset = {
 	.fb = gf100_fb_new,
 	.fuse = gf100_fuse_new,
 	.gpio = g94_gpio_new,
-//	.i2c = g94_i2c_new,
+	.i2c = g94_i2c_new,
 //	.ibus = gf100_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gf100_ltc_new,
@@ -1332,7 +1332,7 @@ nvc1_chipset = {
 	.fb = gf100_fb_new,
 	.fuse = gf100_fuse_new,
 	.gpio = g94_gpio_new,
-//	.i2c = g94_i2c_new,
+	.i2c = g94_i2c_new,
 //	.ibus = gf100_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gf100_ltc_new,
@@ -1366,7 +1366,7 @@ nvc3_chipset = {
 	.fb = gf100_fb_new,
 	.fuse = gf100_fuse_new,
 	.gpio = g94_gpio_new,
-//	.i2c = g94_i2c_new,
+	.i2c = g94_i2c_new,
 //	.ibus = gf100_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gf100_ltc_new,
@@ -1400,7 +1400,7 @@ nvc4_chipset = {
 	.fb = gf100_fb_new,
 	.fuse = gf100_fuse_new,
 	.gpio = g94_gpio_new,
-//	.i2c = g94_i2c_new,
+	.i2c = g94_i2c_new,
 //	.ibus = gf100_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gf100_ltc_new,
@@ -1435,7 +1435,7 @@ nvc8_chipset = {
 	.fb = gf100_fb_new,
 	.fuse = gf100_fuse_new,
 	.gpio = g94_gpio_new,
-//	.i2c = g94_i2c_new,
+	.i2c = g94_i2c_new,
 //	.ibus = gf100_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gf100_ltc_new,
@@ -1470,7 +1470,7 @@ nvce_chipset = {
 	.fb = gf100_fb_new,
 	.fuse = gf100_fuse_new,
 	.gpio = g94_gpio_new,
-//	.i2c = g94_i2c_new,
+	.i2c = g94_i2c_new,
 //	.ibus = gf100_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gf100_ltc_new,
@@ -1505,7 +1505,7 @@ nvcf_chipset = {
 	.fb = gf100_fb_new,
 	.fuse = gf100_fuse_new,
 	.gpio = g94_gpio_new,
-//	.i2c = g94_i2c_new,
+	.i2c = g94_i2c_new,
 //	.ibus = gf100_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gf100_ltc_new,
@@ -1539,7 +1539,7 @@ nvd7_chipset = {
 	.fb = gf100_fb_new,
 	.fuse = gf100_fuse_new,
 	.gpio = gf119_gpio_new,
-//	.i2c = gf117_i2c_new,
+	.i2c = gf117_i2c_new,
 //	.ibus = gf100_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gf100_ltc_new,
@@ -1571,7 +1571,7 @@ nvd9_chipset = {
 	.fb = gf100_fb_new,
 	.fuse = gf100_fuse_new,
 	.gpio = gf119_gpio_new,
-//	.i2c = gf110_i2c_new,
+	.i2c = gf119_i2c_new,
 //	.ibus = gf100_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gf100_ltc_new,
@@ -1605,7 +1605,7 @@ nve4_chipset = {
 	.fb = gk104_fb_new,
 	.fuse = gf100_fuse_new,
 	.gpio = gk104_gpio_new,
-//	.i2c = gk104_i2c_new,
+	.i2c = gk104_i2c_new,
 //	.ibus = gk104_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gk104_ltc_new,
@@ -1641,7 +1641,7 @@ nve6_chipset = {
 	.fb = gk104_fb_new,
 	.fuse = gf100_fuse_new,
 	.gpio = gk104_gpio_new,
-//	.i2c = gk104_i2c_new,
+	.i2c = gk104_i2c_new,
 //	.ibus = gk104_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gk104_ltc_new,
@@ -1677,7 +1677,7 @@ nve7_chipset = {
 	.fb = gk104_fb_new,
 	.fuse = gf100_fuse_new,
 	.gpio = gk104_gpio_new,
-//	.i2c = gk104_i2c_new,
+	.i2c = gk104_i2c_new,
 //	.ibus = gk104_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gk104_ltc_new,
@@ -1737,7 +1737,7 @@ nvf0_chipset = {
 	.fb = gk104_fb_new,
 	.fuse = gf100_fuse_new,
 	.gpio = gk104_gpio_new,
-//	.i2c = gk104_i2c_new,
+	.i2c = gk104_i2c_new,
 //	.ibus = gk104_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gk104_ltc_new,
@@ -1773,7 +1773,7 @@ nvf1_chipset = {
 	.fb = gk104_fb_new,
 	.fuse = gf100_fuse_new,
 	.gpio = gk104_gpio_new,
-//	.i2c = gf110_i2c_new,
+	.i2c = gf119_i2c_new,
 //	.ibus = gk104_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gk104_ltc_new,
@@ -1809,7 +1809,7 @@ nv106_chipset = {
 	.fb = gk104_fb_new,
 	.fuse = gf100_fuse_new,
 	.gpio = gk104_gpio_new,
-//	.i2c = gk104_i2c_new,
+	.i2c = gk104_i2c_new,
 //	.ibus = gk104_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gk104_ltc_new,
@@ -1844,7 +1844,7 @@ nv108_chipset = {
 	.fb = gk104_fb_new,
 	.fuse = gf100_fuse_new,
 	.gpio = gk104_gpio_new,
-//	.i2c = gk104_i2c_new,
+	.i2c = gk104_i2c_new,
 //	.ibus = gk104_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gk104_ltc_new,
@@ -1879,7 +1879,7 @@ nv117_chipset = {
 	.fb = gm107_fb_new,
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
-//	.i2c = gf110_i2c_new,
+	.i2c = gf119_i2c_new,
 //	.ibus = gk104_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gm107_ltc_new,
@@ -1908,7 +1908,7 @@ nv124_chipset = {
 	.fb = gm107_fb_new,
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
-//	.i2c = gm204_i2c_new,
+	.i2c = gm204_i2c_new,
 //	.ibus = gk104_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gm107_ltc_new,
@@ -1937,7 +1937,7 @@ nv126_chipset = {
 	.fb = gm107_fb_new,
 	.fuse = gm107_fuse_new,
 	.gpio = gk104_gpio_new,
-//	.i2c = gm204_i2c_new,
+	.i2c = gm204_i2c_new,
 //	.ibus = gk104_ibus_new,
 //	.imem = nv50_instmem_new,
 //	.ltc = gm107_ltc_new,

commit 2ea7249fe2d4815fc6d0b50021bcbd8bb72b8437
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:20 2015 +1000

    drm/nouveau/gpio: convert to new-style nvkm_subdev
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index c3afd03df5a9..3caaa9caf4d3 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -121,7 +121,7 @@ nv10_chipset = {
 	.clk = nv04_clk_new,
 	.devinit = nv10_devinit_new,
 	.fb = nv10_fb_new,
-//	.gpio = nv10_gpio_new,
+	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
@@ -140,7 +140,7 @@ nv11_chipset = {
 	.clk = nv04_clk_new,
 	.devinit = nv10_devinit_new,
 	.fb = nv10_fb_new,
-//	.gpio = nv10_gpio_new,
+	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
@@ -161,7 +161,7 @@ nv15_chipset = {
 	.clk = nv04_clk_new,
 	.devinit = nv10_devinit_new,
 	.fb = nv10_fb_new,
-//	.gpio = nv10_gpio_new,
+	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
@@ -182,7 +182,7 @@ nv17_chipset = {
 	.clk = nv04_clk_new,
 	.devinit = nv10_devinit_new,
 	.fb = nv10_fb_new,
-//	.gpio = nv10_gpio_new,
+	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
@@ -203,7 +203,7 @@ nv18_chipset = {
 	.clk = nv04_clk_new,
 	.devinit = nv10_devinit_new,
 	.fb = nv10_fb_new,
-//	.gpio = nv10_gpio_new,
+	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
@@ -224,7 +224,7 @@ nv1a_chipset = {
 	.clk = nv04_clk_new,
 	.devinit = nv1a_devinit_new,
 	.fb = nv1a_fb_new,
-//	.gpio = nv10_gpio_new,
+	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
@@ -245,7 +245,7 @@ nv1f_chipset = {
 	.clk = nv04_clk_new,
 	.devinit = nv1a_devinit_new,
 	.fb = nv1a_fb_new,
-//	.gpio = nv10_gpio_new,
+	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
@@ -266,7 +266,7 @@ nv20_chipset = {
 	.clk = nv04_clk_new,
 	.devinit = nv20_devinit_new,
 	.fb = nv20_fb_new,
-//	.gpio = nv10_gpio_new,
+	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
@@ -287,7 +287,7 @@ nv25_chipset = {
 	.clk = nv04_clk_new,
 	.devinit = nv20_devinit_new,
 	.fb = nv25_fb_new,
-//	.gpio = nv10_gpio_new,
+	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
@@ -308,7 +308,7 @@ nv28_chipset = {
 	.clk = nv04_clk_new,
 	.devinit = nv20_devinit_new,
 	.fb = nv25_fb_new,
-//	.gpio = nv10_gpio_new,
+	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
@@ -329,7 +329,7 @@ nv2a_chipset = {
 	.clk = nv04_clk_new,
 	.devinit = nv20_devinit_new,
 	.fb = nv25_fb_new,
-//	.gpio = nv10_gpio_new,
+	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
@@ -350,7 +350,7 @@ nv30_chipset = {
 	.clk = nv04_clk_new,
 	.devinit = nv20_devinit_new,
 	.fb = nv30_fb_new,
-//	.gpio = nv10_gpio_new,
+	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
@@ -371,7 +371,7 @@ nv31_chipset = {
 	.clk = nv04_clk_new,
 	.devinit = nv20_devinit_new,
 	.fb = nv30_fb_new,
-//	.gpio = nv10_gpio_new,
+	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
@@ -393,7 +393,7 @@ nv34_chipset = {
 	.clk = nv04_clk_new,
 	.devinit = nv10_devinit_new,
 	.fb = nv10_fb_new,
-//	.gpio = nv10_gpio_new,
+	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
@@ -415,7 +415,7 @@ nv35_chipset = {
 	.clk = nv04_clk_new,
 	.devinit = nv20_devinit_new,
 	.fb = nv35_fb_new,
-//	.gpio = nv10_gpio_new,
+	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
@@ -436,7 +436,7 @@ nv36_chipset = {
 	.clk = nv04_clk_new,
 	.devinit = nv20_devinit_new,
 	.fb = nv36_fb_new,
-//	.gpio = nv10_gpio_new,
+	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
@@ -458,7 +458,7 @@ nv40_chipset = {
 	.clk = nv40_clk_new,
 	.devinit = nv1a_devinit_new,
 	.fb = nv40_fb_new,
-//	.gpio = nv10_gpio_new,
+	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
 //	.mc = nv40_mc_new,
@@ -483,7 +483,7 @@ nv41_chipset = {
 	.clk = nv40_clk_new,
 	.devinit = nv1a_devinit_new,
 	.fb = nv41_fb_new,
-//	.gpio = nv10_gpio_new,
+	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
 //	.mc = nv40_mc_new,
@@ -508,7 +508,7 @@ nv42_chipset = {
 	.clk = nv40_clk_new,
 	.devinit = nv1a_devinit_new,
 	.fb = nv41_fb_new,
-//	.gpio = nv10_gpio_new,
+	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
 //	.mc = nv40_mc_new,
@@ -533,7 +533,7 @@ nv43_chipset = {
 	.clk = nv40_clk_new,
 	.devinit = nv1a_devinit_new,
 	.fb = nv41_fb_new,
-//	.gpio = nv10_gpio_new,
+	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
 //	.mc = nv40_mc_new,
@@ -558,7 +558,7 @@ nv44_chipset = {
 	.clk = nv40_clk_new,
 	.devinit = nv1a_devinit_new,
 	.fb = nv44_fb_new,
-//	.gpio = nv10_gpio_new,
+	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
 //	.mc = nv44_mc_new,
@@ -583,7 +583,7 @@ nv45_chipset = {
 	.clk = nv40_clk_new,
 	.devinit = nv1a_devinit_new,
 	.fb = nv40_fb_new,
-//	.gpio = nv10_gpio_new,
+	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
 //	.mc = nv40_mc_new,
@@ -608,7 +608,7 @@ nv46_chipset = {
 	.clk = nv40_clk_new,
 	.devinit = nv1a_devinit_new,
 	.fb = nv46_fb_new,
-//	.gpio = nv10_gpio_new,
+	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
 //	.mc = nv44_mc_new,
@@ -633,7 +633,7 @@ nv47_chipset = {
 	.clk = nv40_clk_new,
 	.devinit = nv1a_devinit_new,
 	.fb = nv47_fb_new,
-//	.gpio = nv10_gpio_new,
+	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
 //	.mc = nv40_mc_new,
@@ -658,7 +658,7 @@ nv49_chipset = {
 	.clk = nv40_clk_new,
 	.devinit = nv1a_devinit_new,
 	.fb = nv49_fb_new,
-//	.gpio = nv10_gpio_new,
+	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
 //	.mc = nv40_mc_new,
@@ -683,7 +683,7 @@ nv4a_chipset = {
 	.clk = nv40_clk_new,
 	.devinit = nv1a_devinit_new,
 	.fb = nv44_fb_new,
-//	.gpio = nv10_gpio_new,
+	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
 //	.mc = nv44_mc_new,
@@ -708,7 +708,7 @@ nv4b_chipset = {
 	.clk = nv40_clk_new,
 	.devinit = nv1a_devinit_new,
 	.fb = nv49_fb_new,
-//	.gpio = nv10_gpio_new,
+	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
 //	.mc = nv40_mc_new,
@@ -733,7 +733,7 @@ nv4c_chipset = {
 	.clk = nv40_clk_new,
 	.devinit = nv1a_devinit_new,
 	.fb = nv46_fb_new,
-//	.gpio = nv10_gpio_new,
+	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
 //	.mc = nv4c_mc_new,
@@ -758,7 +758,7 @@ nv4e_chipset = {
 	.clk = nv40_clk_new,
 	.devinit = nv1a_devinit_new,
 	.fb = nv4e_fb_new,
-//	.gpio = nv10_gpio_new,
+	.gpio = nv10_gpio_new,
 //	.i2c = nv4e_i2c_new,
 //	.imem = nv40_instmem_new,
 //	.mc = nv4c_mc_new,
@@ -785,7 +785,7 @@ nv50_chipset = {
 	.devinit = nv50_devinit_new,
 	.fb = nv50_fb_new,
 	.fuse = nv50_fuse_new,
-//	.gpio = nv50_gpio_new,
+	.gpio = nv50_gpio_new,
 //	.i2c = nv50_i2c_new,
 //	.imem = nv50_instmem_new,
 //	.mc = nv50_mc_new,
@@ -811,7 +811,7 @@ nv63_chipset = {
 	.clk = nv40_clk_new,
 	.devinit = nv1a_devinit_new,
 	.fb = nv46_fb_new,
-//	.gpio = nv10_gpio_new,
+	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
 //	.mc = nv4c_mc_new,
@@ -836,7 +836,7 @@ nv67_chipset = {
 	.clk = nv40_clk_new,
 	.devinit = nv1a_devinit_new,
 	.fb = nv46_fb_new,
-//	.gpio = nv10_gpio_new,
+	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
 //	.mc = nv4c_mc_new,
@@ -861,7 +861,7 @@ nv68_chipset = {
 	.clk = nv40_clk_new,
 	.devinit = nv1a_devinit_new,
 	.fb = nv46_fb_new,
-//	.gpio = nv10_gpio_new,
+	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
 //	.mc = nv4c_mc_new,
@@ -888,7 +888,7 @@ nv84_chipset = {
 	.devinit = g84_devinit_new,
 	.fb = g84_fb_new,
 	.fuse = nv50_fuse_new,
-//	.gpio = nv50_gpio_new,
+	.gpio = nv50_gpio_new,
 //	.i2c = nv50_i2c_new,
 //	.imem = nv50_instmem_new,
 //	.mc = nv50_mc_new,
@@ -919,7 +919,7 @@ nv86_chipset = {
 	.devinit = g84_devinit_new,
 	.fb = g84_fb_new,
 	.fuse = nv50_fuse_new,
-//	.gpio = nv50_gpio_new,
+	.gpio = nv50_gpio_new,
 //	.i2c = nv50_i2c_new,
 //	.imem = nv50_instmem_new,
 //	.mc = nv50_mc_new,
@@ -950,7 +950,7 @@ nv92_chipset = {
 	.devinit = g84_devinit_new,
 	.fb = g84_fb_new,
 	.fuse = nv50_fuse_new,
-//	.gpio = nv50_gpio_new,
+	.gpio = nv50_gpio_new,
 //	.i2c = nv50_i2c_new,
 //	.imem = nv50_instmem_new,
 //	.mc = nv50_mc_new,
@@ -981,7 +981,7 @@ nv94_chipset = {
 	.devinit = g84_devinit_new,
 	.fb = g84_fb_new,
 	.fuse = nv50_fuse_new,
-//	.gpio = g94_gpio_new,
+	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
 //	.imem = nv50_instmem_new,
 //	.mc = g94_mc_new,
@@ -1006,7 +1006,7 @@ static const struct nvkm_device_chip
 nv96_chipset = {
 	.name = "G96",
 	.bios = nvkm_bios_new,
-//	.gpio = g94_gpio_new,
+	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
 	.fuse = nv50_fuse_new,
 	.clk = g84_clk_new,
@@ -1037,7 +1037,7 @@ static const struct nvkm_device_chip
 nv98_chipset = {
 	.name = "G98",
 	.bios = nvkm_bios_new,
-//	.gpio = g94_gpio_new,
+	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
 	.fuse = nv50_fuse_new,
 	.clk = g84_clk_new,
@@ -1074,7 +1074,7 @@ nva0_chipset = {
 	.devinit = g84_devinit_new,
 	.fb = g84_fb_new,
 	.fuse = nv50_fuse_new,
-//	.gpio = g94_gpio_new,
+	.gpio = g94_gpio_new,
 //	.i2c = nv50_i2c_new,
 //	.imem = nv50_instmem_new,
 //	.mc = g98_mc_new,
@@ -1105,7 +1105,7 @@ nva3_chipset = {
 	.devinit = gt215_devinit_new,
 	.fb = gt215_fb_new,
 	.fuse = nv50_fuse_new,
-//	.gpio = g94_gpio_new,
+	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
 //	.imem = nv50_instmem_new,
 //	.mc = g98_mc_new,
@@ -1138,7 +1138,7 @@ nva5_chipset = {
 	.devinit = gt215_devinit_new,
 	.fb = gt215_fb_new,
 	.fuse = nv50_fuse_new,
-//	.gpio = g94_gpio_new,
+	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
 //	.imem = nv50_instmem_new,
 //	.mc = g98_mc_new,
@@ -1170,7 +1170,7 @@ nva8_chipset = {
 	.devinit = gt215_devinit_new,
 	.fb = gt215_fb_new,
 	.fuse = nv50_fuse_new,
-//	.gpio = g94_gpio_new,
+	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
 //	.imem = nv50_instmem_new,
 //	.mc = g98_mc_new,
@@ -1202,7 +1202,7 @@ nvaa_chipset = {
 	.devinit = g98_devinit_new,
 	.fb = mcp77_fb_new,
 	.fuse = nv50_fuse_new,
-//	.gpio = g94_gpio_new,
+	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
 //	.imem = nv50_instmem_new,
 //	.mc = g98_mc_new,
@@ -1233,7 +1233,7 @@ nvac_chipset = {
 	.devinit = g98_devinit_new,
 	.fb = mcp77_fb_new,
 	.fuse = nv50_fuse_new,
-//	.gpio = g94_gpio_new,
+	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
 //	.imem = nv50_instmem_new,
 //	.mc = g98_mc_new,
@@ -1264,7 +1264,7 @@ nvaf_chipset = {
 	.devinit = mcp89_devinit_new,
 	.fb = mcp89_fb_new,
 	.fuse = nv50_fuse_new,
-//	.gpio = g94_gpio_new,
+	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
 //	.imem = nv50_instmem_new,
 //	.mc = g98_mc_new,
@@ -1296,7 +1296,7 @@ nvc0_chipset = {
 	.devinit = gf100_devinit_new,
 	.fb = gf100_fb_new,
 	.fuse = gf100_fuse_new,
-//	.gpio = g94_gpio_new,
+	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
 //	.ibus = gf100_ibus_new,
 //	.imem = nv50_instmem_new,
@@ -1331,7 +1331,7 @@ nvc1_chipset = {
 	.devinit = gf100_devinit_new,
 	.fb = gf100_fb_new,
 	.fuse = gf100_fuse_new,
-//	.gpio = g94_gpio_new,
+	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
 //	.ibus = gf100_ibus_new,
 //	.imem = nv50_instmem_new,
@@ -1365,7 +1365,7 @@ nvc3_chipset = {
 	.devinit = gf100_devinit_new,
 	.fb = gf100_fb_new,
 	.fuse = gf100_fuse_new,
-//	.gpio = g94_gpio_new,
+	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
 //	.ibus = gf100_ibus_new,
 //	.imem = nv50_instmem_new,
@@ -1399,7 +1399,7 @@ nvc4_chipset = {
 	.devinit = gf100_devinit_new,
 	.fb = gf100_fb_new,
 	.fuse = gf100_fuse_new,
-//	.gpio = g94_gpio_new,
+	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
 //	.ibus = gf100_ibus_new,
 //	.imem = nv50_instmem_new,
@@ -1434,7 +1434,7 @@ nvc8_chipset = {
 	.devinit = gf100_devinit_new,
 	.fb = gf100_fb_new,
 	.fuse = gf100_fuse_new,
-//	.gpio = g94_gpio_new,
+	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
 //	.ibus = gf100_ibus_new,
 //	.imem = nv50_instmem_new,
@@ -1469,7 +1469,7 @@ nvce_chipset = {
 	.devinit = gf100_devinit_new,
 	.fb = gf100_fb_new,
 	.fuse = gf100_fuse_new,
-//	.gpio = g94_gpio_new,
+	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
 //	.ibus = gf100_ibus_new,
 //	.imem = nv50_instmem_new,
@@ -1504,7 +1504,7 @@ nvcf_chipset = {
 	.devinit = gf100_devinit_new,
 	.fb = gf100_fb_new,
 	.fuse = gf100_fuse_new,
-//	.gpio = g94_gpio_new,
+	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
 //	.ibus = gf100_ibus_new,
 //	.imem = nv50_instmem_new,
@@ -1538,7 +1538,7 @@ nvd7_chipset = {
 	.devinit = gf100_devinit_new,
 	.fb = gf100_fb_new,
 	.fuse = gf100_fuse_new,
-//	.gpio = gf110_gpio_new,
+	.gpio = gf119_gpio_new,
 //	.i2c = gf117_i2c_new,
 //	.ibus = gf100_ibus_new,
 //	.imem = nv50_instmem_new,
@@ -1570,7 +1570,7 @@ nvd9_chipset = {
 	.devinit = gf100_devinit_new,
 	.fb = gf100_fb_new,
 	.fuse = gf100_fuse_new,
-//	.gpio = gf110_gpio_new,
+	.gpio = gf119_gpio_new,
 //	.i2c = gf110_i2c_new,
 //	.ibus = gf100_ibus_new,
 //	.imem = nv50_instmem_new,
@@ -1604,7 +1604,7 @@ nve4_chipset = {
 	.devinit = gf100_devinit_new,
 	.fb = gk104_fb_new,
 	.fuse = gf100_fuse_new,
-//	.gpio = gk104_gpio_new,
+	.gpio = gk104_gpio_new,
 //	.i2c = gk104_i2c_new,
 //	.ibus = gk104_ibus_new,
 //	.imem = nv50_instmem_new,
@@ -1640,7 +1640,7 @@ nve6_chipset = {
 	.devinit = gf100_devinit_new,
 	.fb = gk104_fb_new,
 	.fuse = gf100_fuse_new,
-//	.gpio = gk104_gpio_new,
+	.gpio = gk104_gpio_new,
 //	.i2c = gk104_i2c_new,
 //	.ibus = gk104_ibus_new,
 //	.imem = nv50_instmem_new,
@@ -1676,7 +1676,7 @@ nve7_chipset = {
 	.devinit = gf100_devinit_new,
 	.fb = gk104_fb_new,
 	.fuse = gf100_fuse_new,
-//	.gpio = gk104_gpio_new,
+	.gpio = gk104_gpio_new,
 //	.i2c = gk104_i2c_new,
 //	.ibus = gk104_ibus_new,
 //	.imem = nv50_instmem_new,
@@ -1736,7 +1736,7 @@ nvf0_chipset = {
 	.devinit = gf100_devinit_new,
 	.fb = gk104_fb_new,
 	.fuse = gf100_fuse_new,
-//	.gpio = gk104_gpio_new,
+	.gpio = gk104_gpio_new,
 //	.i2c = gk104_i2c_new,
 //	.ibus = gk104_ibus_new,
 //	.imem = nv50_instmem_new,
@@ -1772,7 +1772,7 @@ nvf1_chipset = {
 	.devinit = gf100_devinit_new,
 	.fb = gk104_fb_new,
 	.fuse = gf100_fuse_new,
-//	.gpio = gk104_gpio_new,
+	.gpio = gk104_gpio_new,
 //	.i2c = gf110_i2c_new,
 //	.ibus = gk104_ibus_new,
 //	.imem = nv50_instmem_new,
@@ -1808,7 +1808,7 @@ nv106_chipset = {
 	.devinit = gf100_devinit_new,
 	.fb = gk104_fb_new,
 	.fuse = gf100_fuse_new,
-//	.gpio = gk104_gpio_new,
+	.gpio = gk104_gpio_new,
 //	.i2c = gk104_i2c_new,
 //	.ibus = gk104_ibus_new,
 //	.imem = nv50_instmem_new,
@@ -1843,7 +1843,7 @@ nv108_chipset = {
 	.devinit = gf100_devinit_new,
 	.fb = gk104_fb_new,
 	.fuse = gf100_fuse_new,
-//	.gpio = gk104_gpio_new,
+	.gpio = gk104_gpio_new,
 //	.i2c = gk104_i2c_new,
 //	.ibus = gk104_ibus_new,
 //	.imem = nv50_instmem_new,
@@ -1878,7 +1878,7 @@ nv117_chipset = {
 	.devinit = gm107_devinit_new,
 	.fb = gm107_fb_new,
 	.fuse = gm107_fuse_new,
-//	.gpio = gk104_gpio_new,
+	.gpio = gk104_gpio_new,
 //	.i2c = gf110_i2c_new,
 //	.ibus = gk104_ibus_new,
 //	.imem = nv50_instmem_new,
@@ -1907,7 +1907,7 @@ nv124_chipset = {
 	.devinit = gm204_devinit_new,
 	.fb = gm107_fb_new,
 	.fuse = gm107_fuse_new,
-//	.gpio = gk104_gpio_new,
+	.gpio = gk104_gpio_new,
 //	.i2c = gm204_i2c_new,
 //	.ibus = gk104_ibus_new,
 //	.imem = nv50_instmem_new,
@@ -1936,7 +1936,7 @@ nv126_chipset = {
 	.devinit = gm204_devinit_new,
 	.fb = gm107_fb_new,
 	.fuse = gm107_fuse_new,
-//	.gpio = gk104_gpio_new,
+	.gpio = gk104_gpio_new,
 //	.i2c = gm204_i2c_new,
 //	.ibus = gk104_ibus_new,
 //	.imem = nv50_instmem_new,

commit c5fcafa528463b207108cd606e0d41741fb7dc50
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:20 2015 +1000

    drm/nouveau/fuse: convert to new-style nvkm_subdev
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index b34c22ff8803..c3afd03df5a9 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -784,7 +784,7 @@ nv50_chipset = {
 	.clk = nv50_clk_new,
 	.devinit = nv50_devinit_new,
 	.fb = nv50_fb_new,
-//	.fuse = nv50_fuse_new,
+	.fuse = nv50_fuse_new,
 //	.gpio = nv50_gpio_new,
 //	.i2c = nv50_i2c_new,
 //	.imem = nv50_instmem_new,
@@ -887,7 +887,7 @@ nv84_chipset = {
 	.clk = g84_clk_new,
 	.devinit = g84_devinit_new,
 	.fb = g84_fb_new,
-//	.fuse = nv50_fuse_new,
+	.fuse = nv50_fuse_new,
 //	.gpio = nv50_gpio_new,
 //	.i2c = nv50_i2c_new,
 //	.imem = nv50_instmem_new,
@@ -918,7 +918,7 @@ nv86_chipset = {
 	.clk = g84_clk_new,
 	.devinit = g84_devinit_new,
 	.fb = g84_fb_new,
-//	.fuse = nv50_fuse_new,
+	.fuse = nv50_fuse_new,
 //	.gpio = nv50_gpio_new,
 //	.i2c = nv50_i2c_new,
 //	.imem = nv50_instmem_new,
@@ -949,7 +949,7 @@ nv92_chipset = {
 	.clk = g84_clk_new,
 	.devinit = g84_devinit_new,
 	.fb = g84_fb_new,
-//	.fuse = nv50_fuse_new,
+	.fuse = nv50_fuse_new,
 //	.gpio = nv50_gpio_new,
 //	.i2c = nv50_i2c_new,
 //	.imem = nv50_instmem_new,
@@ -980,7 +980,7 @@ nv94_chipset = {
 	.clk = g84_clk_new,
 	.devinit = g84_devinit_new,
 	.fb = g84_fb_new,
-//	.fuse = nv50_fuse_new,
+	.fuse = nv50_fuse_new,
 //	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
 //	.imem = nv50_instmem_new,
@@ -1008,7 +1008,7 @@ nv96_chipset = {
 	.bios = nvkm_bios_new,
 //	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
-//	.fuse = nv50_fuse_new,
+	.fuse = nv50_fuse_new,
 	.clk = g84_clk_new,
 //	.therm = g84_therm_new,
 //	.mxm = nv50_mxm_new,
@@ -1039,7 +1039,7 @@ nv98_chipset = {
 	.bios = nvkm_bios_new,
 //	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
-//	.fuse = nv50_fuse_new,
+	.fuse = nv50_fuse_new,
 	.clk = g84_clk_new,
 //	.therm = g84_therm_new,
 //	.mxm = nv50_mxm_new,
@@ -1073,7 +1073,7 @@ nva0_chipset = {
 	.clk = g84_clk_new,
 	.devinit = g84_devinit_new,
 	.fb = g84_fb_new,
-//	.fuse = nv50_fuse_new,
+	.fuse = nv50_fuse_new,
 //	.gpio = g94_gpio_new,
 //	.i2c = nv50_i2c_new,
 //	.imem = nv50_instmem_new,
@@ -1104,7 +1104,7 @@ nva3_chipset = {
 	.clk = gt215_clk_new,
 	.devinit = gt215_devinit_new,
 	.fb = gt215_fb_new,
-//	.fuse = nv50_fuse_new,
+	.fuse = nv50_fuse_new,
 //	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
 //	.imem = nv50_instmem_new,
@@ -1137,7 +1137,7 @@ nva5_chipset = {
 	.clk = gt215_clk_new,
 	.devinit = gt215_devinit_new,
 	.fb = gt215_fb_new,
-//	.fuse = nv50_fuse_new,
+	.fuse = nv50_fuse_new,
 //	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
 //	.imem = nv50_instmem_new,
@@ -1169,7 +1169,7 @@ nva8_chipset = {
 	.clk = gt215_clk_new,
 	.devinit = gt215_devinit_new,
 	.fb = gt215_fb_new,
-//	.fuse = nv50_fuse_new,
+	.fuse = nv50_fuse_new,
 //	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
 //	.imem = nv50_instmem_new,
@@ -1201,7 +1201,7 @@ nvaa_chipset = {
 	.clk = mcp77_clk_new,
 	.devinit = g98_devinit_new,
 	.fb = mcp77_fb_new,
-//	.fuse = nv50_fuse_new,
+	.fuse = nv50_fuse_new,
 //	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
 //	.imem = nv50_instmem_new,
@@ -1232,7 +1232,7 @@ nvac_chipset = {
 	.clk = mcp77_clk_new,
 	.devinit = g98_devinit_new,
 	.fb = mcp77_fb_new,
-//	.fuse = nv50_fuse_new,
+	.fuse = nv50_fuse_new,
 //	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
 //	.imem = nv50_instmem_new,
@@ -1263,7 +1263,7 @@ nvaf_chipset = {
 	.clk = gt215_clk_new,
 	.devinit = mcp89_devinit_new,
 	.fb = mcp89_fb_new,
-//	.fuse = nv50_fuse_new,
+	.fuse = nv50_fuse_new,
 //	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
 //	.imem = nv50_instmem_new,
@@ -1295,7 +1295,7 @@ nvc0_chipset = {
 	.clk = gf100_clk_new,
 	.devinit = gf100_devinit_new,
 	.fb = gf100_fb_new,
-//	.fuse = gf100_fuse_new,
+	.fuse = gf100_fuse_new,
 //	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
 //	.ibus = gf100_ibus_new,
@@ -1330,7 +1330,7 @@ nvc1_chipset = {
 	.clk = gf100_clk_new,
 	.devinit = gf100_devinit_new,
 	.fb = gf100_fb_new,
-//	.fuse = gf100_fuse_new,
+	.fuse = gf100_fuse_new,
 //	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
 //	.ibus = gf100_ibus_new,
@@ -1364,7 +1364,7 @@ nvc3_chipset = {
 	.clk = gf100_clk_new,
 	.devinit = gf100_devinit_new,
 	.fb = gf100_fb_new,
-//	.fuse = gf100_fuse_new,
+	.fuse = gf100_fuse_new,
 //	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
 //	.ibus = gf100_ibus_new,
@@ -1398,7 +1398,7 @@ nvc4_chipset = {
 	.clk = gf100_clk_new,
 	.devinit = gf100_devinit_new,
 	.fb = gf100_fb_new,
-//	.fuse = gf100_fuse_new,
+	.fuse = gf100_fuse_new,
 //	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
 //	.ibus = gf100_ibus_new,
@@ -1433,7 +1433,7 @@ nvc8_chipset = {
 	.clk = gf100_clk_new,
 	.devinit = gf100_devinit_new,
 	.fb = gf100_fb_new,
-//	.fuse = gf100_fuse_new,
+	.fuse = gf100_fuse_new,
 //	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
 //	.ibus = gf100_ibus_new,
@@ -1468,7 +1468,7 @@ nvce_chipset = {
 	.clk = gf100_clk_new,
 	.devinit = gf100_devinit_new,
 	.fb = gf100_fb_new,
-//	.fuse = gf100_fuse_new,
+	.fuse = gf100_fuse_new,
 //	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
 //	.ibus = gf100_ibus_new,
@@ -1503,7 +1503,7 @@ nvcf_chipset = {
 	.clk = gf100_clk_new,
 	.devinit = gf100_devinit_new,
 	.fb = gf100_fb_new,
-//	.fuse = gf100_fuse_new,
+	.fuse = gf100_fuse_new,
 //	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
 //	.ibus = gf100_ibus_new,
@@ -1537,7 +1537,7 @@ nvd7_chipset = {
 	.clk = gf100_clk_new,
 	.devinit = gf100_devinit_new,
 	.fb = gf100_fb_new,
-//	.fuse = gf100_fuse_new,
+	.fuse = gf100_fuse_new,
 //	.gpio = gf110_gpio_new,
 //	.i2c = gf117_i2c_new,
 //	.ibus = gf100_ibus_new,
@@ -1569,7 +1569,7 @@ nvd9_chipset = {
 	.clk = gf100_clk_new,
 	.devinit = gf100_devinit_new,
 	.fb = gf100_fb_new,
-//	.fuse = gf100_fuse_new,
+	.fuse = gf100_fuse_new,
 //	.gpio = gf110_gpio_new,
 //	.i2c = gf110_i2c_new,
 //	.ibus = gf100_ibus_new,
@@ -1603,7 +1603,7 @@ nve4_chipset = {
 	.clk = gk104_clk_new,
 	.devinit = gf100_devinit_new,
 	.fb = gk104_fb_new,
-//	.fuse = gf100_fuse_new,
+	.fuse = gf100_fuse_new,
 //	.gpio = gk104_gpio_new,
 //	.i2c = gk104_i2c_new,
 //	.ibus = gk104_ibus_new,
@@ -1639,7 +1639,7 @@ nve6_chipset = {
 	.clk = gk104_clk_new,
 	.devinit = gf100_devinit_new,
 	.fb = gk104_fb_new,
-//	.fuse = gf100_fuse_new,
+	.fuse = gf100_fuse_new,
 //	.gpio = gk104_gpio_new,
 //	.i2c = gk104_i2c_new,
 //	.ibus = gk104_ibus_new,
@@ -1675,7 +1675,7 @@ nve7_chipset = {
 	.clk = gk104_clk_new,
 	.devinit = gf100_devinit_new,
 	.fb = gk104_fb_new,
-//	.fuse = gf100_fuse_new,
+	.fuse = gf100_fuse_new,
 //	.gpio = gk104_gpio_new,
 //	.i2c = gk104_i2c_new,
 //	.ibus = gk104_ibus_new,
@@ -1709,7 +1709,7 @@ nvea_chipset = {
 	.bus = gf100_bus_new,
 	.clk = gk20a_clk_new,
 	.fb = gk20a_fb_new,
-//	.fuse = gf100_fuse_new,
+	.fuse = gf100_fuse_new,
 //	.ibus = gk20a_ibus_new,
 //	.imem = gk20a_instmem_new,
 //	.ltc = gk104_ltc_new,
@@ -1735,7 +1735,7 @@ nvf0_chipset = {
 	.clk = gk104_clk_new,
 	.devinit = gf100_devinit_new,
 	.fb = gk104_fb_new,
-//	.fuse = gf100_fuse_new,
+	.fuse = gf100_fuse_new,
 //	.gpio = gk104_gpio_new,
 //	.i2c = gk104_i2c_new,
 //	.ibus = gk104_ibus_new,
@@ -1771,7 +1771,7 @@ nvf1_chipset = {
 	.clk = gk104_clk_new,
 	.devinit = gf100_devinit_new,
 	.fb = gk104_fb_new,
-//	.fuse = gf100_fuse_new,
+	.fuse = gf100_fuse_new,
 //	.gpio = gk104_gpio_new,
 //	.i2c = gf110_i2c_new,
 //	.ibus = gk104_ibus_new,
@@ -1807,7 +1807,7 @@ nv106_chipset = {
 	.clk = gk104_clk_new,
 	.devinit = gf100_devinit_new,
 	.fb = gk104_fb_new,
-//	.fuse = gf100_fuse_new,
+	.fuse = gf100_fuse_new,
 //	.gpio = gk104_gpio_new,
 //	.i2c = gk104_i2c_new,
 //	.ibus = gk104_ibus_new,
@@ -1842,7 +1842,7 @@ nv108_chipset = {
 	.clk = gk104_clk_new,
 	.devinit = gf100_devinit_new,
 	.fb = gk104_fb_new,
-//	.fuse = gf100_fuse_new,
+	.fuse = gf100_fuse_new,
 //	.gpio = gk104_gpio_new,
 //	.i2c = gk104_i2c_new,
 //	.ibus = gk104_ibus_new,
@@ -1877,7 +1877,7 @@ nv117_chipset = {
 	.clk = gk104_clk_new,
 	.devinit = gm107_devinit_new,
 	.fb = gm107_fb_new,
-//	.fuse = gm107_fuse_new,
+	.fuse = gm107_fuse_new,
 //	.gpio = gk104_gpio_new,
 //	.i2c = gf110_i2c_new,
 //	.ibus = gk104_ibus_new,
@@ -1906,7 +1906,7 @@ nv124_chipset = {
 	.bus = gf100_bus_new,
 	.devinit = gm204_devinit_new,
 	.fb = gm107_fb_new,
-//	.fuse = gm107_fuse_new,
+	.fuse = gm107_fuse_new,
 //	.gpio = gk104_gpio_new,
 //	.i2c = gm204_i2c_new,
 //	.ibus = gk104_ibus_new,
@@ -1935,7 +1935,7 @@ nv126_chipset = {
 	.bus = gf100_bus_new,
 	.devinit = gm204_devinit_new,
 	.fb = gm107_fb_new,
-//	.fuse = gm107_fuse_new,
+	.fuse = gm107_fuse_new,
 //	.gpio = gk104_gpio_new,
 //	.i2c = gm204_i2c_new,
 //	.ibus = gk104_ibus_new,
@@ -1962,7 +1962,7 @@ nv12b_chipset = {
 	.bar = gk20a_bar_new,
 	.bus = gf100_bus_new,
 	.fb = gk20a_fb_new,
-//	.fuse = gm107_fuse_new,
+	.fuse = gm107_fuse_new,
 //	.ibus = gk20a_ibus_new,
 //	.imem = gk20a_instmem_new,
 //	.ltc = gm107_ltc_new,

commit 03c8952fb36b58e451b8a93a1a2abd59e09ddf7b
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:20 2015 +1000

    drm/nouveau/fb: convert to new-style nvkm_subdev
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 7bd8c39649d4..b34c22ff8803 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -80,7 +80,7 @@ nv4_chipset = {
 	.bus = nv04_bus_new,
 	.clk = nv04_clk_new,
 	.devinit = nv04_devinit_new,
-//	.fb = nv04_fb_new,
+	.fb = nv04_fb_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
@@ -100,7 +100,7 @@ nv5_chipset = {
 	.bus = nv04_bus_new,
 	.clk = nv04_clk_new,
 	.devinit = nv05_devinit_new,
-//	.fb = nv04_fb_new,
+	.fb = nv04_fb_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
 //	.mc = nv04_mc_new,
@@ -120,7 +120,7 @@ nv10_chipset = {
 	.bus = nv04_bus_new,
 	.clk = nv04_clk_new,
 	.devinit = nv10_devinit_new,
-//	.fb = nv10_fb_new,
+	.fb = nv10_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
@@ -139,7 +139,7 @@ nv11_chipset = {
 	.bus = nv04_bus_new,
 	.clk = nv04_clk_new,
 	.devinit = nv10_devinit_new,
-//	.fb = nv10_fb_new,
+	.fb = nv10_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
@@ -160,7 +160,7 @@ nv15_chipset = {
 	.bus = nv04_bus_new,
 	.clk = nv04_clk_new,
 	.devinit = nv10_devinit_new,
-//	.fb = nv10_fb_new,
+	.fb = nv10_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
@@ -181,7 +181,7 @@ nv17_chipset = {
 	.bus = nv04_bus_new,
 	.clk = nv04_clk_new,
 	.devinit = nv10_devinit_new,
-//	.fb = nv10_fb_new,
+	.fb = nv10_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
@@ -202,7 +202,7 @@ nv18_chipset = {
 	.bus = nv04_bus_new,
 	.clk = nv04_clk_new,
 	.devinit = nv10_devinit_new,
-//	.fb = nv10_fb_new,
+	.fb = nv10_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
@@ -223,7 +223,7 @@ nv1a_chipset = {
 	.bus = nv04_bus_new,
 	.clk = nv04_clk_new,
 	.devinit = nv1a_devinit_new,
-//	.fb = nv1a_fb_new,
+	.fb = nv1a_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
@@ -244,7 +244,7 @@ nv1f_chipset = {
 	.bus = nv04_bus_new,
 	.clk = nv04_clk_new,
 	.devinit = nv1a_devinit_new,
-//	.fb = nv1a_fb_new,
+	.fb = nv1a_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
@@ -265,7 +265,7 @@ nv20_chipset = {
 	.bus = nv04_bus_new,
 	.clk = nv04_clk_new,
 	.devinit = nv20_devinit_new,
-//	.fb = nv20_fb_new,
+	.fb = nv20_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
@@ -286,7 +286,7 @@ nv25_chipset = {
 	.bus = nv04_bus_new,
 	.clk = nv04_clk_new,
 	.devinit = nv20_devinit_new,
-//	.fb = nv25_fb_new,
+	.fb = nv25_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
@@ -307,7 +307,7 @@ nv28_chipset = {
 	.bus = nv04_bus_new,
 	.clk = nv04_clk_new,
 	.devinit = nv20_devinit_new,
-//	.fb = nv25_fb_new,
+	.fb = nv25_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
@@ -328,7 +328,7 @@ nv2a_chipset = {
 	.bus = nv04_bus_new,
 	.clk = nv04_clk_new,
 	.devinit = nv20_devinit_new,
-//	.fb = nv25_fb_new,
+	.fb = nv25_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
@@ -349,7 +349,7 @@ nv30_chipset = {
 	.bus = nv04_bus_new,
 	.clk = nv04_clk_new,
 	.devinit = nv20_devinit_new,
-//	.fb = nv30_fb_new,
+	.fb = nv30_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
@@ -370,7 +370,7 @@ nv31_chipset = {
 	.bus = nv31_bus_new,
 	.clk = nv04_clk_new,
 	.devinit = nv20_devinit_new,
-//	.fb = nv30_fb_new,
+	.fb = nv30_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
@@ -392,7 +392,7 @@ nv34_chipset = {
 	.bus = nv31_bus_new,
 	.clk = nv04_clk_new,
 	.devinit = nv10_devinit_new,
-//	.fb = nv10_fb_new,
+	.fb = nv10_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
@@ -414,7 +414,7 @@ nv35_chipset = {
 	.bus = nv04_bus_new,
 	.clk = nv04_clk_new,
 	.devinit = nv20_devinit_new,
-//	.fb = nv35_fb_new,
+	.fb = nv35_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
@@ -435,7 +435,7 @@ nv36_chipset = {
 	.bus = nv31_bus_new,
 	.clk = nv04_clk_new,
 	.devinit = nv20_devinit_new,
-//	.fb = nv36_fb_new,
+	.fb = nv36_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
@@ -457,7 +457,7 @@ nv40_chipset = {
 	.bus = nv31_bus_new,
 	.clk = nv40_clk_new,
 	.devinit = nv1a_devinit_new,
-//	.fb = nv40_fb_new,
+	.fb = nv40_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
@@ -482,7 +482,7 @@ nv41_chipset = {
 	.bus = nv31_bus_new,
 	.clk = nv40_clk_new,
 	.devinit = nv1a_devinit_new,
-//	.fb = nv41_fb_new,
+	.fb = nv41_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
@@ -507,7 +507,7 @@ nv42_chipset = {
 	.bus = nv31_bus_new,
 	.clk = nv40_clk_new,
 	.devinit = nv1a_devinit_new,
-//	.fb = nv41_fb_new,
+	.fb = nv41_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
@@ -532,7 +532,7 @@ nv43_chipset = {
 	.bus = nv31_bus_new,
 	.clk = nv40_clk_new,
 	.devinit = nv1a_devinit_new,
-//	.fb = nv41_fb_new,
+	.fb = nv41_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
@@ -557,7 +557,7 @@ nv44_chipset = {
 	.bus = nv31_bus_new,
 	.clk = nv40_clk_new,
 	.devinit = nv1a_devinit_new,
-//	.fb = nv44_fb_new,
+	.fb = nv44_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
@@ -582,7 +582,7 @@ nv45_chipset = {
 	.bus = nv31_bus_new,
 	.clk = nv40_clk_new,
 	.devinit = nv1a_devinit_new,
-//	.fb = nv40_fb_new,
+	.fb = nv40_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
@@ -607,7 +607,7 @@ nv46_chipset = {
 	.bus = nv31_bus_new,
 	.clk = nv40_clk_new,
 	.devinit = nv1a_devinit_new,
-//	.fb = nv46_fb_new,
+	.fb = nv46_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
@@ -632,7 +632,7 @@ nv47_chipset = {
 	.bus = nv31_bus_new,
 	.clk = nv40_clk_new,
 	.devinit = nv1a_devinit_new,
-//	.fb = nv47_fb_new,
+	.fb = nv47_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
@@ -657,7 +657,7 @@ nv49_chipset = {
 	.bus = nv31_bus_new,
 	.clk = nv40_clk_new,
 	.devinit = nv1a_devinit_new,
-//	.fb = nv49_fb_new,
+	.fb = nv49_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
@@ -682,7 +682,7 @@ nv4a_chipset = {
 	.bus = nv31_bus_new,
 	.clk = nv40_clk_new,
 	.devinit = nv1a_devinit_new,
-//	.fb = nv44_fb_new,
+	.fb = nv44_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
@@ -707,7 +707,7 @@ nv4b_chipset = {
 	.bus = nv31_bus_new,
 	.clk = nv40_clk_new,
 	.devinit = nv1a_devinit_new,
-//	.fb = nv49_fb_new,
+	.fb = nv49_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
@@ -732,7 +732,7 @@ nv4c_chipset = {
 	.bus = nv31_bus_new,
 	.clk = nv40_clk_new,
 	.devinit = nv1a_devinit_new,
-//	.fb = nv46_fb_new,
+	.fb = nv46_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
@@ -757,7 +757,7 @@ nv4e_chipset = {
 	.bus = nv31_bus_new,
 	.clk = nv40_clk_new,
 	.devinit = nv1a_devinit_new,
-//	.fb = nv4e_fb_new,
+	.fb = nv4e_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv4e_i2c_new,
 //	.imem = nv40_instmem_new,
@@ -783,7 +783,7 @@ nv50_chipset = {
 	.bus = nv50_bus_new,
 	.clk = nv50_clk_new,
 	.devinit = nv50_devinit_new,
-//	.fb = nv50_fb_new,
+	.fb = nv50_fb_new,
 //	.fuse = nv50_fuse_new,
 //	.gpio = nv50_gpio_new,
 //	.i2c = nv50_i2c_new,
@@ -810,7 +810,7 @@ nv63_chipset = {
 	.bus = nv31_bus_new,
 	.clk = nv40_clk_new,
 	.devinit = nv1a_devinit_new,
-//	.fb = nv46_fb_new,
+	.fb = nv46_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
@@ -835,7 +835,7 @@ nv67_chipset = {
 	.bus = nv31_bus_new,
 	.clk = nv40_clk_new,
 	.devinit = nv1a_devinit_new,
-//	.fb = nv46_fb_new,
+	.fb = nv46_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
@@ -860,7 +860,7 @@ nv68_chipset = {
 	.bus = nv31_bus_new,
 	.clk = nv40_clk_new,
 	.devinit = nv1a_devinit_new,
-//	.fb = nv46_fb_new,
+	.fb = nv46_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv40_instmem_new,
@@ -886,7 +886,7 @@ nv84_chipset = {
 	.bus = nv50_bus_new,
 	.clk = g84_clk_new,
 	.devinit = g84_devinit_new,
-//	.fb = g84_fb_new,
+	.fb = g84_fb_new,
 //	.fuse = nv50_fuse_new,
 //	.gpio = nv50_gpio_new,
 //	.i2c = nv50_i2c_new,
@@ -917,7 +917,7 @@ nv86_chipset = {
 	.bus = nv50_bus_new,
 	.clk = g84_clk_new,
 	.devinit = g84_devinit_new,
-//	.fb = g84_fb_new,
+	.fb = g84_fb_new,
 //	.fuse = nv50_fuse_new,
 //	.gpio = nv50_gpio_new,
 //	.i2c = nv50_i2c_new,
@@ -948,7 +948,7 @@ nv92_chipset = {
 	.bus = nv50_bus_new,
 	.clk = g84_clk_new,
 	.devinit = g84_devinit_new,
-//	.fb = g84_fb_new,
+	.fb = g84_fb_new,
 //	.fuse = nv50_fuse_new,
 //	.gpio = nv50_gpio_new,
 //	.i2c = nv50_i2c_new,
@@ -979,7 +979,7 @@ nv94_chipset = {
 	.bus = g94_bus_new,
 	.clk = g84_clk_new,
 	.devinit = g84_devinit_new,
-//	.fb = g84_fb_new,
+	.fb = g84_fb_new,
 //	.fuse = nv50_fuse_new,
 //	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
@@ -1016,7 +1016,7 @@ nv96_chipset = {
 //	.mc = g94_mc_new,
 	.bus = g94_bus_new,
 //	.timer = nv04_timer_new,
-//	.fb = g84_fb_new,
+	.fb = g84_fb_new,
 //	.imem = nv50_instmem_new,
 //	.mmu = nv50_mmu_new,
 	.bar = g84_bar_new,
@@ -1047,7 +1047,7 @@ nv98_chipset = {
 //	.mc = g98_mc_new,
 	.bus = g94_bus_new,
 //	.timer = nv04_timer_new,
-//	.fb = g84_fb_new,
+	.fb = g84_fb_new,
 //	.imem = nv50_instmem_new,
 //	.mmu = nv50_mmu_new,
 	.bar = g84_bar_new,
@@ -1072,7 +1072,7 @@ nva0_chipset = {
 	.bus = g94_bus_new,
 	.clk = g84_clk_new,
 	.devinit = g84_devinit_new,
-//	.fb = g84_fb_new,
+	.fb = g84_fb_new,
 //	.fuse = nv50_fuse_new,
 //	.gpio = g94_gpio_new,
 //	.i2c = nv50_i2c_new,
@@ -1103,7 +1103,7 @@ nva3_chipset = {
 	.bus = g94_bus_new,
 	.clk = gt215_clk_new,
 	.devinit = gt215_devinit_new,
-//	.fb = gt215_fb_new,
+	.fb = gt215_fb_new,
 //	.fuse = nv50_fuse_new,
 //	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
@@ -1136,7 +1136,7 @@ nva5_chipset = {
 	.bus = g94_bus_new,
 	.clk = gt215_clk_new,
 	.devinit = gt215_devinit_new,
-//	.fb = gt215_fb_new,
+	.fb = gt215_fb_new,
 //	.fuse = nv50_fuse_new,
 //	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
@@ -1168,7 +1168,7 @@ nva8_chipset = {
 	.bus = g94_bus_new,
 	.clk = gt215_clk_new,
 	.devinit = gt215_devinit_new,
-//	.fb = gt215_fb_new,
+	.fb = gt215_fb_new,
 //	.fuse = nv50_fuse_new,
 //	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
@@ -1200,7 +1200,7 @@ nvaa_chipset = {
 	.bus = g94_bus_new,
 	.clk = mcp77_clk_new,
 	.devinit = g98_devinit_new,
-//	.fb = mcp77_fb_new,
+	.fb = mcp77_fb_new,
 //	.fuse = nv50_fuse_new,
 //	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
@@ -1231,7 +1231,7 @@ nvac_chipset = {
 	.bus = g94_bus_new,
 	.clk = mcp77_clk_new,
 	.devinit = g98_devinit_new,
-//	.fb = mcp77_fb_new,
+	.fb = mcp77_fb_new,
 //	.fuse = nv50_fuse_new,
 //	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
@@ -1262,7 +1262,7 @@ nvaf_chipset = {
 	.bus = g94_bus_new,
 	.clk = gt215_clk_new,
 	.devinit = mcp89_devinit_new,
-//	.fb = mcp89_fb_new,
+	.fb = mcp89_fb_new,
 //	.fuse = nv50_fuse_new,
 //	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
@@ -1294,7 +1294,7 @@ nvc0_chipset = {
 	.bus = gf100_bus_new,
 	.clk = gf100_clk_new,
 	.devinit = gf100_devinit_new,
-//	.fb = gf100_fb_new,
+	.fb = gf100_fb_new,
 //	.fuse = gf100_fuse_new,
 //	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
@@ -1329,7 +1329,7 @@ nvc1_chipset = {
 	.bus = gf100_bus_new,
 	.clk = gf100_clk_new,
 	.devinit = gf100_devinit_new,
-//	.fb = gf100_fb_new,
+	.fb = gf100_fb_new,
 //	.fuse = gf100_fuse_new,
 //	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
@@ -1363,7 +1363,7 @@ nvc3_chipset = {
 	.bus = gf100_bus_new,
 	.clk = gf100_clk_new,
 	.devinit = gf100_devinit_new,
-//	.fb = gf100_fb_new,
+	.fb = gf100_fb_new,
 //	.fuse = gf100_fuse_new,
 //	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
@@ -1397,7 +1397,7 @@ nvc4_chipset = {
 	.bus = gf100_bus_new,
 	.clk = gf100_clk_new,
 	.devinit = gf100_devinit_new,
-//	.fb = gf100_fb_new,
+	.fb = gf100_fb_new,
 //	.fuse = gf100_fuse_new,
 //	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
@@ -1432,7 +1432,7 @@ nvc8_chipset = {
 	.bus = gf100_bus_new,
 	.clk = gf100_clk_new,
 	.devinit = gf100_devinit_new,
-//	.fb = gf100_fb_new,
+	.fb = gf100_fb_new,
 //	.fuse = gf100_fuse_new,
 //	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
@@ -1467,7 +1467,7 @@ nvce_chipset = {
 	.bus = gf100_bus_new,
 	.clk = gf100_clk_new,
 	.devinit = gf100_devinit_new,
-//	.fb = gf100_fb_new,
+	.fb = gf100_fb_new,
 //	.fuse = gf100_fuse_new,
 //	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
@@ -1502,7 +1502,7 @@ nvcf_chipset = {
 	.bus = gf100_bus_new,
 	.clk = gf100_clk_new,
 	.devinit = gf100_devinit_new,
-//	.fb = gf100_fb_new,
+	.fb = gf100_fb_new,
 //	.fuse = gf100_fuse_new,
 //	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
@@ -1536,7 +1536,7 @@ nvd7_chipset = {
 	.bus = gf100_bus_new,
 	.clk = gf100_clk_new,
 	.devinit = gf100_devinit_new,
-//	.fb = gf100_fb_new,
+	.fb = gf100_fb_new,
 //	.fuse = gf100_fuse_new,
 //	.gpio = gf110_gpio_new,
 //	.i2c = gf117_i2c_new,
@@ -1568,7 +1568,7 @@ nvd9_chipset = {
 	.bus = gf100_bus_new,
 	.clk = gf100_clk_new,
 	.devinit = gf100_devinit_new,
-//	.fb = gf100_fb_new,
+	.fb = gf100_fb_new,
 //	.fuse = gf100_fuse_new,
 //	.gpio = gf110_gpio_new,
 //	.i2c = gf110_i2c_new,
@@ -1602,7 +1602,7 @@ nve4_chipset = {
 	.bus = gf100_bus_new,
 	.clk = gk104_clk_new,
 	.devinit = gf100_devinit_new,
-//	.fb = gk104_fb_new,
+	.fb = gk104_fb_new,
 //	.fuse = gf100_fuse_new,
 //	.gpio = gk104_gpio_new,
 //	.i2c = gk104_i2c_new,
@@ -1638,7 +1638,7 @@ nve6_chipset = {
 	.bus = gf100_bus_new,
 	.clk = gk104_clk_new,
 	.devinit = gf100_devinit_new,
-//	.fb = gk104_fb_new,
+	.fb = gk104_fb_new,
 //	.fuse = gf100_fuse_new,
 //	.gpio = gk104_gpio_new,
 //	.i2c = gk104_i2c_new,
@@ -1674,7 +1674,7 @@ nve7_chipset = {
 	.bus = gf100_bus_new,
 	.clk = gk104_clk_new,
 	.devinit = gf100_devinit_new,
-//	.fb = gk104_fb_new,
+	.fb = gk104_fb_new,
 //	.fuse = gf100_fuse_new,
 //	.gpio = gk104_gpio_new,
 //	.i2c = gk104_i2c_new,
@@ -1708,7 +1708,7 @@ nvea_chipset = {
 	.bar = gk20a_bar_new,
 	.bus = gf100_bus_new,
 	.clk = gk20a_clk_new,
-//	.fb = gk20a_fb_new,
+	.fb = gk20a_fb_new,
 //	.fuse = gf100_fuse_new,
 //	.ibus = gk20a_ibus_new,
 //	.imem = gk20a_instmem_new,
@@ -1734,7 +1734,7 @@ nvf0_chipset = {
 	.bus = gf100_bus_new,
 	.clk = gk104_clk_new,
 	.devinit = gf100_devinit_new,
-//	.fb = gk104_fb_new,
+	.fb = gk104_fb_new,
 //	.fuse = gf100_fuse_new,
 //	.gpio = gk104_gpio_new,
 //	.i2c = gk104_i2c_new,
@@ -1770,7 +1770,7 @@ nvf1_chipset = {
 	.bus = gf100_bus_new,
 	.clk = gk104_clk_new,
 	.devinit = gf100_devinit_new,
-//	.fb = gk104_fb_new,
+	.fb = gk104_fb_new,
 //	.fuse = gf100_fuse_new,
 //	.gpio = gk104_gpio_new,
 //	.i2c = gf110_i2c_new,
@@ -1806,7 +1806,7 @@ nv106_chipset = {
 	.bus = gf100_bus_new,
 	.clk = gk104_clk_new,
 	.devinit = gf100_devinit_new,
-//	.fb = gk104_fb_new,
+	.fb = gk104_fb_new,
 //	.fuse = gf100_fuse_new,
 //	.gpio = gk104_gpio_new,
 //	.i2c = gk104_i2c_new,
@@ -1841,7 +1841,7 @@ nv108_chipset = {
 	.bus = gf100_bus_new,
 	.clk = gk104_clk_new,
 	.devinit = gf100_devinit_new,
-//	.fb = gk104_fb_new,
+	.fb = gk104_fb_new,
 //	.fuse = gf100_fuse_new,
 //	.gpio = gk104_gpio_new,
 //	.i2c = gk104_i2c_new,
@@ -1876,7 +1876,7 @@ nv117_chipset = {
 	.bus = gf100_bus_new,
 	.clk = gk104_clk_new,
 	.devinit = gm107_devinit_new,
-//	.fb = gm107_fb_new,
+	.fb = gm107_fb_new,
 //	.fuse = gm107_fuse_new,
 //	.gpio = gk104_gpio_new,
 //	.i2c = gf110_i2c_new,
@@ -1905,7 +1905,7 @@ nv124_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.devinit = gm204_devinit_new,
-//	.fb = gm107_fb_new,
+	.fb = gm107_fb_new,
 //	.fuse = gm107_fuse_new,
 //	.gpio = gk104_gpio_new,
 //	.i2c = gm204_i2c_new,
@@ -1934,7 +1934,7 @@ nv126_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.devinit = gm204_devinit_new,
-//	.fb = gm107_fb_new,
+	.fb = gm107_fb_new,
 //	.fuse = gm107_fuse_new,
 //	.gpio = gk104_gpio_new,
 //	.i2c = gm204_i2c_new,
@@ -1961,7 +1961,7 @@ nv12b_chipset = {
 	.name = "GM20B",
 	.bar = gk20a_bar_new,
 	.bus = gf100_bus_new,
-//	.fb = gk20a_fb_new,
+	.fb = gk20a_fb_new,
 //	.fuse = gm107_fuse_new,
 //	.ibus = gk20a_ibus_new,
 //	.imem = gk20a_instmem_new,

commit 151abd44c27c1562f348a99c176b078a876ebe93
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:20 2015 +1000

    drm/nouveau/devinit: convert to new-style nvkm_subdev
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 96410defb1f8..7bd8c39649d4 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -79,7 +79,7 @@ nv4_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv04_bus_new,
 	.clk = nv04_clk_new,
-//	.devinit = nv04_devinit_new,
+	.devinit = nv04_devinit_new,
 //	.fb = nv04_fb_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
@@ -99,7 +99,7 @@ nv5_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv04_bus_new,
 	.clk = nv04_clk_new,
-//	.devinit = nv05_devinit_new,
+	.devinit = nv05_devinit_new,
 //	.fb = nv04_fb_new,
 //	.i2c = nv04_i2c_new,
 //	.imem = nv04_instmem_new,
@@ -119,7 +119,7 @@ nv10_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv04_bus_new,
 	.clk = nv04_clk_new,
-//	.devinit = nv10_devinit_new,
+	.devinit = nv10_devinit_new,
 //	.fb = nv10_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
@@ -138,7 +138,7 @@ nv11_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv04_bus_new,
 	.clk = nv04_clk_new,
-//	.devinit = nv10_devinit_new,
+	.devinit = nv10_devinit_new,
 //	.fb = nv10_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
@@ -159,7 +159,7 @@ nv15_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv04_bus_new,
 	.clk = nv04_clk_new,
-//	.devinit = nv10_devinit_new,
+	.devinit = nv10_devinit_new,
 //	.fb = nv10_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
@@ -180,7 +180,7 @@ nv17_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv04_bus_new,
 	.clk = nv04_clk_new,
-//	.devinit = nv10_devinit_new,
+	.devinit = nv10_devinit_new,
 //	.fb = nv10_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
@@ -201,7 +201,7 @@ nv18_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv04_bus_new,
 	.clk = nv04_clk_new,
-//	.devinit = nv10_devinit_new,
+	.devinit = nv10_devinit_new,
 //	.fb = nv10_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
@@ -222,7 +222,7 @@ nv1a_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv04_bus_new,
 	.clk = nv04_clk_new,
-//	.devinit = nv1a_devinit_new,
+	.devinit = nv1a_devinit_new,
 //	.fb = nv1a_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
@@ -243,7 +243,7 @@ nv1f_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv04_bus_new,
 	.clk = nv04_clk_new,
-//	.devinit = nv1a_devinit_new,
+	.devinit = nv1a_devinit_new,
 //	.fb = nv1a_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
@@ -264,7 +264,7 @@ nv20_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv04_bus_new,
 	.clk = nv04_clk_new,
-//	.devinit = nv20_devinit_new,
+	.devinit = nv20_devinit_new,
 //	.fb = nv20_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
@@ -285,7 +285,7 @@ nv25_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv04_bus_new,
 	.clk = nv04_clk_new,
-//	.devinit = nv20_devinit_new,
+	.devinit = nv20_devinit_new,
 //	.fb = nv25_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
@@ -306,7 +306,7 @@ nv28_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv04_bus_new,
 	.clk = nv04_clk_new,
-//	.devinit = nv20_devinit_new,
+	.devinit = nv20_devinit_new,
 //	.fb = nv25_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
@@ -327,7 +327,7 @@ nv2a_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv04_bus_new,
 	.clk = nv04_clk_new,
-//	.devinit = nv20_devinit_new,
+	.devinit = nv20_devinit_new,
 //	.fb = nv25_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
@@ -348,7 +348,7 @@ nv30_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv04_bus_new,
 	.clk = nv04_clk_new,
-//	.devinit = nv20_devinit_new,
+	.devinit = nv20_devinit_new,
 //	.fb = nv30_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
@@ -369,7 +369,7 @@ nv31_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
 	.clk = nv04_clk_new,
-//	.devinit = nv20_devinit_new,
+	.devinit = nv20_devinit_new,
 //	.fb = nv30_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
@@ -391,7 +391,7 @@ nv34_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
 	.clk = nv04_clk_new,
-//	.devinit = nv10_devinit_new,
+	.devinit = nv10_devinit_new,
 //	.fb = nv10_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
@@ -413,7 +413,7 @@ nv35_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv04_bus_new,
 	.clk = nv04_clk_new,
-//	.devinit = nv20_devinit_new,
+	.devinit = nv20_devinit_new,
 //	.fb = nv35_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
@@ -434,7 +434,7 @@ nv36_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
 	.clk = nv04_clk_new,
-//	.devinit = nv20_devinit_new,
+	.devinit = nv20_devinit_new,
 //	.fb = nv36_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
@@ -456,7 +456,7 @@ nv40_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
 	.clk = nv40_clk_new,
-//	.devinit = nv1a_devinit_new,
+	.devinit = nv1a_devinit_new,
 //	.fb = nv40_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
@@ -481,7 +481,7 @@ nv41_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
 	.clk = nv40_clk_new,
-//	.devinit = nv1a_devinit_new,
+	.devinit = nv1a_devinit_new,
 //	.fb = nv41_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
@@ -506,7 +506,7 @@ nv42_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
 	.clk = nv40_clk_new,
-//	.devinit = nv1a_devinit_new,
+	.devinit = nv1a_devinit_new,
 //	.fb = nv41_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
@@ -531,7 +531,7 @@ nv43_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
 	.clk = nv40_clk_new,
-//	.devinit = nv1a_devinit_new,
+	.devinit = nv1a_devinit_new,
 //	.fb = nv41_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
@@ -556,7 +556,7 @@ nv44_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
 	.clk = nv40_clk_new,
-//	.devinit = nv1a_devinit_new,
+	.devinit = nv1a_devinit_new,
 //	.fb = nv44_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
@@ -581,7 +581,7 @@ nv45_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
 	.clk = nv40_clk_new,
-//	.devinit = nv1a_devinit_new,
+	.devinit = nv1a_devinit_new,
 //	.fb = nv40_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
@@ -606,7 +606,7 @@ nv46_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
 	.clk = nv40_clk_new,
-//	.devinit = nv1a_devinit_new,
+	.devinit = nv1a_devinit_new,
 //	.fb = nv46_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
@@ -631,7 +631,7 @@ nv47_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
 	.clk = nv40_clk_new,
-//	.devinit = nv1a_devinit_new,
+	.devinit = nv1a_devinit_new,
 //	.fb = nv47_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
@@ -656,7 +656,7 @@ nv49_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
 	.clk = nv40_clk_new,
-//	.devinit = nv1a_devinit_new,
+	.devinit = nv1a_devinit_new,
 //	.fb = nv49_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
@@ -681,7 +681,7 @@ nv4a_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
 	.clk = nv40_clk_new,
-//	.devinit = nv1a_devinit_new,
+	.devinit = nv1a_devinit_new,
 //	.fb = nv44_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
@@ -706,7 +706,7 @@ nv4b_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
 	.clk = nv40_clk_new,
-//	.devinit = nv1a_devinit_new,
+	.devinit = nv1a_devinit_new,
 //	.fb = nv49_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
@@ -731,7 +731,7 @@ nv4c_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
 	.clk = nv40_clk_new,
-//	.devinit = nv1a_devinit_new,
+	.devinit = nv1a_devinit_new,
 //	.fb = nv46_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
@@ -756,7 +756,7 @@ nv4e_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
 	.clk = nv40_clk_new,
-//	.devinit = nv1a_devinit_new,
+	.devinit = nv1a_devinit_new,
 //	.fb = nv4e_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv4e_i2c_new,
@@ -782,7 +782,7 @@ nv50_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv50_bus_new,
 	.clk = nv50_clk_new,
-//	.devinit = nv50_devinit_new,
+	.devinit = nv50_devinit_new,
 //	.fb = nv50_fb_new,
 //	.fuse = nv50_fuse_new,
 //	.gpio = nv50_gpio_new,
@@ -809,7 +809,7 @@ nv63_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
 	.clk = nv40_clk_new,
-//	.devinit = nv1a_devinit_new,
+	.devinit = nv1a_devinit_new,
 //	.fb = nv46_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
@@ -834,7 +834,7 @@ nv67_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
 	.clk = nv40_clk_new,
-//	.devinit = nv1a_devinit_new,
+	.devinit = nv1a_devinit_new,
 //	.fb = nv46_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
@@ -859,7 +859,7 @@ nv68_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
 	.clk = nv40_clk_new,
-//	.devinit = nv1a_devinit_new,
+	.devinit = nv1a_devinit_new,
 //	.fb = nv46_fb_new,
 //	.gpio = nv10_gpio_new,
 //	.i2c = nv04_i2c_new,
@@ -885,7 +885,7 @@ nv84_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv50_bus_new,
 	.clk = g84_clk_new,
-//	.devinit = g84_devinit_new,
+	.devinit = g84_devinit_new,
 //	.fb = g84_fb_new,
 //	.fuse = nv50_fuse_new,
 //	.gpio = nv50_gpio_new,
@@ -916,7 +916,7 @@ nv86_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv50_bus_new,
 	.clk = g84_clk_new,
-//	.devinit = g84_devinit_new,
+	.devinit = g84_devinit_new,
 //	.fb = g84_fb_new,
 //	.fuse = nv50_fuse_new,
 //	.gpio = nv50_gpio_new,
@@ -947,7 +947,7 @@ nv92_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = nv50_bus_new,
 	.clk = g84_clk_new,
-//	.devinit = g84_devinit_new,
+	.devinit = g84_devinit_new,
 //	.fb = g84_fb_new,
 //	.fuse = nv50_fuse_new,
 //	.gpio = nv50_gpio_new,
@@ -978,7 +978,7 @@ nv94_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = g94_bus_new,
 	.clk = g84_clk_new,
-//	.devinit = g84_devinit_new,
+	.devinit = g84_devinit_new,
 //	.fb = g84_fb_new,
 //	.fuse = nv50_fuse_new,
 //	.gpio = g94_gpio_new,
@@ -1012,7 +1012,7 @@ nv96_chipset = {
 	.clk = g84_clk_new,
 //	.therm = g84_therm_new,
 //	.mxm = nv50_mxm_new,
-//	.devinit = g84_devinit_new,
+	.devinit = g84_devinit_new,
 //	.mc = g94_mc_new,
 	.bus = g94_bus_new,
 //	.timer = nv04_timer_new,
@@ -1043,7 +1043,7 @@ nv98_chipset = {
 	.clk = g84_clk_new,
 //	.therm = g84_therm_new,
 //	.mxm = nv50_mxm_new,
-//	.devinit = g98_devinit_new,
+	.devinit = g98_devinit_new,
 //	.mc = g98_mc_new,
 	.bus = g94_bus_new,
 //	.timer = nv04_timer_new,
@@ -1071,7 +1071,7 @@ nva0_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = g94_bus_new,
 	.clk = g84_clk_new,
-//	.devinit = g84_devinit_new,
+	.devinit = g84_devinit_new,
 //	.fb = g84_fb_new,
 //	.fuse = nv50_fuse_new,
 //	.gpio = g94_gpio_new,
@@ -1102,7 +1102,7 @@ nva3_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = g94_bus_new,
 	.clk = gt215_clk_new,
-//	.devinit = gt215_devinit_new,
+	.devinit = gt215_devinit_new,
 //	.fb = gt215_fb_new,
 //	.fuse = nv50_fuse_new,
 //	.gpio = g94_gpio_new,
@@ -1135,7 +1135,7 @@ nva5_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = g94_bus_new,
 	.clk = gt215_clk_new,
-//	.devinit = gt215_devinit_new,
+	.devinit = gt215_devinit_new,
 //	.fb = gt215_fb_new,
 //	.fuse = nv50_fuse_new,
 //	.gpio = g94_gpio_new,
@@ -1167,7 +1167,7 @@ nva8_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = g94_bus_new,
 	.clk = gt215_clk_new,
-//	.devinit = gt215_devinit_new,
+	.devinit = gt215_devinit_new,
 //	.fb = gt215_fb_new,
 //	.fuse = nv50_fuse_new,
 //	.gpio = g94_gpio_new,
@@ -1199,7 +1199,7 @@ nvaa_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = g94_bus_new,
 	.clk = mcp77_clk_new,
-//	.devinit = g98_devinit_new,
+	.devinit = g98_devinit_new,
 //	.fb = mcp77_fb_new,
 //	.fuse = nv50_fuse_new,
 //	.gpio = g94_gpio_new,
@@ -1230,7 +1230,7 @@ nvac_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = g94_bus_new,
 	.clk = mcp77_clk_new,
-//	.devinit = g98_devinit_new,
+	.devinit = g98_devinit_new,
 //	.fb = mcp77_fb_new,
 //	.fuse = nv50_fuse_new,
 //	.gpio = g94_gpio_new,
@@ -1261,7 +1261,7 @@ nvaf_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = g94_bus_new,
 	.clk = gt215_clk_new,
-//	.devinit = mcp89_devinit_new,
+	.devinit = mcp89_devinit_new,
 //	.fb = mcp89_fb_new,
 //	.fuse = nv50_fuse_new,
 //	.gpio = g94_gpio_new,
@@ -1293,7 +1293,7 @@ nvc0_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.clk = gf100_clk_new,
-//	.devinit = gf100_devinit_new,
+	.devinit = gf100_devinit_new,
 //	.fb = gf100_fb_new,
 //	.fuse = gf100_fuse_new,
 //	.gpio = g94_gpio_new,
@@ -1328,7 +1328,7 @@ nvc1_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.clk = gf100_clk_new,
-//	.devinit = gf100_devinit_new,
+	.devinit = gf100_devinit_new,
 //	.fb = gf100_fb_new,
 //	.fuse = gf100_fuse_new,
 //	.gpio = g94_gpio_new,
@@ -1362,7 +1362,7 @@ nvc3_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.clk = gf100_clk_new,
-//	.devinit = gf100_devinit_new,
+	.devinit = gf100_devinit_new,
 //	.fb = gf100_fb_new,
 //	.fuse = gf100_fuse_new,
 //	.gpio = g94_gpio_new,
@@ -1396,7 +1396,7 @@ nvc4_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.clk = gf100_clk_new,
-//	.devinit = gf100_devinit_new,
+	.devinit = gf100_devinit_new,
 //	.fb = gf100_fb_new,
 //	.fuse = gf100_fuse_new,
 //	.gpio = g94_gpio_new,
@@ -1431,7 +1431,7 @@ nvc8_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.clk = gf100_clk_new,
-//	.devinit = gf100_devinit_new,
+	.devinit = gf100_devinit_new,
 //	.fb = gf100_fb_new,
 //	.fuse = gf100_fuse_new,
 //	.gpio = g94_gpio_new,
@@ -1466,7 +1466,7 @@ nvce_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.clk = gf100_clk_new,
-//	.devinit = gf100_devinit_new,
+	.devinit = gf100_devinit_new,
 //	.fb = gf100_fb_new,
 //	.fuse = gf100_fuse_new,
 //	.gpio = g94_gpio_new,
@@ -1501,7 +1501,7 @@ nvcf_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.clk = gf100_clk_new,
-//	.devinit = gf100_devinit_new,
+	.devinit = gf100_devinit_new,
 //	.fb = gf100_fb_new,
 //	.fuse = gf100_fuse_new,
 //	.gpio = g94_gpio_new,
@@ -1535,7 +1535,7 @@ nvd7_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.clk = gf100_clk_new,
-//	.devinit = gf100_devinit_new,
+	.devinit = gf100_devinit_new,
 //	.fb = gf100_fb_new,
 //	.fuse = gf100_fuse_new,
 //	.gpio = gf110_gpio_new,
@@ -1567,7 +1567,7 @@ nvd9_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.clk = gf100_clk_new,
-//	.devinit = gf100_devinit_new,
+	.devinit = gf100_devinit_new,
 //	.fb = gf100_fb_new,
 //	.fuse = gf100_fuse_new,
 //	.gpio = gf110_gpio_new,
@@ -1601,7 +1601,7 @@ nve4_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.clk = gk104_clk_new,
-//	.devinit = gf100_devinit_new,
+	.devinit = gf100_devinit_new,
 //	.fb = gk104_fb_new,
 //	.fuse = gf100_fuse_new,
 //	.gpio = gk104_gpio_new,
@@ -1637,7 +1637,7 @@ nve6_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.clk = gk104_clk_new,
-//	.devinit = gf100_devinit_new,
+	.devinit = gf100_devinit_new,
 //	.fb = gk104_fb_new,
 //	.fuse = gf100_fuse_new,
 //	.gpio = gk104_gpio_new,
@@ -1673,7 +1673,7 @@ nve7_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.clk = gk104_clk_new,
-//	.devinit = gf100_devinit_new,
+	.devinit = gf100_devinit_new,
 //	.fb = gk104_fb_new,
 //	.fuse = gf100_fuse_new,
 //	.gpio = gk104_gpio_new,
@@ -1733,7 +1733,7 @@ nvf0_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.clk = gk104_clk_new,
-//	.devinit = gf100_devinit_new,
+	.devinit = gf100_devinit_new,
 //	.fb = gk104_fb_new,
 //	.fuse = gf100_fuse_new,
 //	.gpio = gk104_gpio_new,
@@ -1769,7 +1769,7 @@ nvf1_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.clk = gk104_clk_new,
-//	.devinit = gf100_devinit_new,
+	.devinit = gf100_devinit_new,
 //	.fb = gk104_fb_new,
 //	.fuse = gf100_fuse_new,
 //	.gpio = gk104_gpio_new,
@@ -1805,7 +1805,7 @@ nv106_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.clk = gk104_clk_new,
-//	.devinit = gf100_devinit_new,
+	.devinit = gf100_devinit_new,
 //	.fb = gk104_fb_new,
 //	.fuse = gf100_fuse_new,
 //	.gpio = gk104_gpio_new,
@@ -1840,7 +1840,7 @@ nv108_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.clk = gk104_clk_new,
-//	.devinit = gf100_devinit_new,
+	.devinit = gf100_devinit_new,
 //	.fb = gk104_fb_new,
 //	.fuse = gf100_fuse_new,
 //	.gpio = gk104_gpio_new,
@@ -1875,7 +1875,7 @@ nv117_chipset = {
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
 	.clk = gk104_clk_new,
-//	.devinit = gm107_devinit_new,
+	.devinit = gm107_devinit_new,
 //	.fb = gm107_fb_new,
 //	.fuse = gm107_fuse_new,
 //	.gpio = gk104_gpio_new,
@@ -1904,7 +1904,7 @@ nv124_chipset = {
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
-//	.devinit = gm204_devinit_new,
+	.devinit = gm204_devinit_new,
 //	.fb = gm107_fb_new,
 //	.fuse = gm107_fuse_new,
 //	.gpio = gk104_gpio_new,
@@ -1933,7 +1933,7 @@ nv126_chipset = {
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
-//	.devinit = gm204_devinit_new,
+	.devinit = gm204_devinit_new,
 //	.fb = gm107_fb_new,
 //	.fuse = gm107_fuse_new,
 //	.gpio = gk104_gpio_new,

commit 6625f55c080f888ccf51b6881f0bad13f5762d15
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:20 2015 +1000

    drm/nouveau/clk: convert to new-style nvkm_subdev
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 21974c1c4990..96410defb1f8 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -78,7 +78,7 @@ nv4_chipset = {
 	.name = "NV04",
 	.bios = nvkm_bios_new,
 	.bus = nv04_bus_new,
-//	.clk = nv04_clk_new,
+	.clk = nv04_clk_new,
 //	.devinit = nv04_devinit_new,
 //	.fb = nv04_fb_new,
 //	.i2c = nv04_i2c_new,
@@ -98,7 +98,7 @@ nv5_chipset = {
 	.name = "NV05",
 	.bios = nvkm_bios_new,
 	.bus = nv04_bus_new,
-//	.clk = nv04_clk_new,
+	.clk = nv04_clk_new,
 //	.devinit = nv05_devinit_new,
 //	.fb = nv04_fb_new,
 //	.i2c = nv04_i2c_new,
@@ -118,7 +118,7 @@ nv10_chipset = {
 	.name = "NV10",
 	.bios = nvkm_bios_new,
 	.bus = nv04_bus_new,
-//	.clk = nv04_clk_new,
+	.clk = nv04_clk_new,
 //	.devinit = nv10_devinit_new,
 //	.fb = nv10_fb_new,
 //	.gpio = nv10_gpio_new,
@@ -137,7 +137,7 @@ nv11_chipset = {
 	.name = "NV11",
 	.bios = nvkm_bios_new,
 	.bus = nv04_bus_new,
-//	.clk = nv04_clk_new,
+	.clk = nv04_clk_new,
 //	.devinit = nv10_devinit_new,
 //	.fb = nv10_fb_new,
 //	.gpio = nv10_gpio_new,
@@ -158,7 +158,7 @@ nv15_chipset = {
 	.name = "NV15",
 	.bios = nvkm_bios_new,
 	.bus = nv04_bus_new,
-//	.clk = nv04_clk_new,
+	.clk = nv04_clk_new,
 //	.devinit = nv10_devinit_new,
 //	.fb = nv10_fb_new,
 //	.gpio = nv10_gpio_new,
@@ -179,7 +179,7 @@ nv17_chipset = {
 	.name = "NV17",
 	.bios = nvkm_bios_new,
 	.bus = nv04_bus_new,
-//	.clk = nv04_clk_new,
+	.clk = nv04_clk_new,
 //	.devinit = nv10_devinit_new,
 //	.fb = nv10_fb_new,
 //	.gpio = nv10_gpio_new,
@@ -200,7 +200,7 @@ nv18_chipset = {
 	.name = "NV18",
 	.bios = nvkm_bios_new,
 	.bus = nv04_bus_new,
-//	.clk = nv04_clk_new,
+	.clk = nv04_clk_new,
 //	.devinit = nv10_devinit_new,
 //	.fb = nv10_fb_new,
 //	.gpio = nv10_gpio_new,
@@ -221,7 +221,7 @@ nv1a_chipset = {
 	.name = "nForce",
 	.bios = nvkm_bios_new,
 	.bus = nv04_bus_new,
-//	.clk = nv04_clk_new,
+	.clk = nv04_clk_new,
 //	.devinit = nv1a_devinit_new,
 //	.fb = nv1a_fb_new,
 //	.gpio = nv10_gpio_new,
@@ -242,7 +242,7 @@ nv1f_chipset = {
 	.name = "nForce2",
 	.bios = nvkm_bios_new,
 	.bus = nv04_bus_new,
-//	.clk = nv04_clk_new,
+	.clk = nv04_clk_new,
 //	.devinit = nv1a_devinit_new,
 //	.fb = nv1a_fb_new,
 //	.gpio = nv10_gpio_new,
@@ -263,7 +263,7 @@ nv20_chipset = {
 	.name = "NV20",
 	.bios = nvkm_bios_new,
 	.bus = nv04_bus_new,
-//	.clk = nv04_clk_new,
+	.clk = nv04_clk_new,
 //	.devinit = nv20_devinit_new,
 //	.fb = nv20_fb_new,
 //	.gpio = nv10_gpio_new,
@@ -284,7 +284,7 @@ nv25_chipset = {
 	.name = "NV25",
 	.bios = nvkm_bios_new,
 	.bus = nv04_bus_new,
-//	.clk = nv04_clk_new,
+	.clk = nv04_clk_new,
 //	.devinit = nv20_devinit_new,
 //	.fb = nv25_fb_new,
 //	.gpio = nv10_gpio_new,
@@ -305,7 +305,7 @@ nv28_chipset = {
 	.name = "NV28",
 	.bios = nvkm_bios_new,
 	.bus = nv04_bus_new,
-//	.clk = nv04_clk_new,
+	.clk = nv04_clk_new,
 //	.devinit = nv20_devinit_new,
 //	.fb = nv25_fb_new,
 //	.gpio = nv10_gpio_new,
@@ -326,7 +326,7 @@ nv2a_chipset = {
 	.name = "NV2A",
 	.bios = nvkm_bios_new,
 	.bus = nv04_bus_new,
-//	.clk = nv04_clk_new,
+	.clk = nv04_clk_new,
 //	.devinit = nv20_devinit_new,
 //	.fb = nv25_fb_new,
 //	.gpio = nv10_gpio_new,
@@ -347,7 +347,7 @@ nv30_chipset = {
 	.name = "NV30",
 	.bios = nvkm_bios_new,
 	.bus = nv04_bus_new,
-//	.clk = nv04_clk_new,
+	.clk = nv04_clk_new,
 //	.devinit = nv20_devinit_new,
 //	.fb = nv30_fb_new,
 //	.gpio = nv10_gpio_new,
@@ -368,7 +368,7 @@ nv31_chipset = {
 	.name = "NV31",
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
-//	.clk = nv04_clk_new,
+	.clk = nv04_clk_new,
 //	.devinit = nv20_devinit_new,
 //	.fb = nv30_fb_new,
 //	.gpio = nv10_gpio_new,
@@ -390,7 +390,7 @@ nv34_chipset = {
 	.name = "NV34",
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
-//	.clk = nv04_clk_new,
+	.clk = nv04_clk_new,
 //	.devinit = nv10_devinit_new,
 //	.fb = nv10_fb_new,
 //	.gpio = nv10_gpio_new,
@@ -412,7 +412,7 @@ nv35_chipset = {
 	.name = "NV35",
 	.bios = nvkm_bios_new,
 	.bus = nv04_bus_new,
-//	.clk = nv04_clk_new,
+	.clk = nv04_clk_new,
 //	.devinit = nv20_devinit_new,
 //	.fb = nv35_fb_new,
 //	.gpio = nv10_gpio_new,
@@ -433,7 +433,7 @@ nv36_chipset = {
 	.name = "NV36",
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
-//	.clk = nv04_clk_new,
+	.clk = nv04_clk_new,
 //	.devinit = nv20_devinit_new,
 //	.fb = nv36_fb_new,
 //	.gpio = nv10_gpio_new,
@@ -455,7 +455,7 @@ nv40_chipset = {
 	.name = "NV40",
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
-//	.clk = nv40_clk_new,
+	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
 //	.fb = nv40_fb_new,
 //	.gpio = nv10_gpio_new,
@@ -480,7 +480,7 @@ nv41_chipset = {
 	.name = "NV41",
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
-//	.clk = nv40_clk_new,
+	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
 //	.fb = nv41_fb_new,
 //	.gpio = nv10_gpio_new,
@@ -505,7 +505,7 @@ nv42_chipset = {
 	.name = "NV42",
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
-//	.clk = nv40_clk_new,
+	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
 //	.fb = nv41_fb_new,
 //	.gpio = nv10_gpio_new,
@@ -530,7 +530,7 @@ nv43_chipset = {
 	.name = "NV43",
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
-//	.clk = nv40_clk_new,
+	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
 //	.fb = nv41_fb_new,
 //	.gpio = nv10_gpio_new,
@@ -555,7 +555,7 @@ nv44_chipset = {
 	.name = "NV44",
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
-//	.clk = nv40_clk_new,
+	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
 //	.fb = nv44_fb_new,
 //	.gpio = nv10_gpio_new,
@@ -580,7 +580,7 @@ nv45_chipset = {
 	.name = "NV45",
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
-//	.clk = nv40_clk_new,
+	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
 //	.fb = nv40_fb_new,
 //	.gpio = nv10_gpio_new,
@@ -605,7 +605,7 @@ nv46_chipset = {
 	.name = "G72",
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
-//	.clk = nv40_clk_new,
+	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
 //	.fb = nv46_fb_new,
 //	.gpio = nv10_gpio_new,
@@ -630,7 +630,7 @@ nv47_chipset = {
 	.name = "G70",
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
-//	.clk = nv40_clk_new,
+	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
 //	.fb = nv47_fb_new,
 //	.gpio = nv10_gpio_new,
@@ -655,7 +655,7 @@ nv49_chipset = {
 	.name = "G71",
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
-//	.clk = nv40_clk_new,
+	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
 //	.fb = nv49_fb_new,
 //	.gpio = nv10_gpio_new,
@@ -680,7 +680,7 @@ nv4a_chipset = {
 	.name = "NV44A",
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
-//	.clk = nv40_clk_new,
+	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
 //	.fb = nv44_fb_new,
 //	.gpio = nv10_gpio_new,
@@ -705,7 +705,7 @@ nv4b_chipset = {
 	.name = "G73",
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
-//	.clk = nv40_clk_new,
+	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
 //	.fb = nv49_fb_new,
 //	.gpio = nv10_gpio_new,
@@ -730,7 +730,7 @@ nv4c_chipset = {
 	.name = "C61",
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
-//	.clk = nv40_clk_new,
+	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
 //	.fb = nv46_fb_new,
 //	.gpio = nv10_gpio_new,
@@ -755,7 +755,7 @@ nv4e_chipset = {
 	.name = "C51",
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
-//	.clk = nv40_clk_new,
+	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
 //	.fb = nv4e_fb_new,
 //	.gpio = nv10_gpio_new,
@@ -781,7 +781,7 @@ nv50_chipset = {
 	.bar = nv50_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = nv50_bus_new,
-//	.clk = nv50_clk_new,
+	.clk = nv50_clk_new,
 //	.devinit = nv50_devinit_new,
 //	.fb = nv50_fb_new,
 //	.fuse = nv50_fuse_new,
@@ -808,7 +808,7 @@ nv63_chipset = {
 	.name = "C73",
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
-//	.clk = nv40_clk_new,
+	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
 //	.fb = nv46_fb_new,
 //	.gpio = nv10_gpio_new,
@@ -833,7 +833,7 @@ nv67_chipset = {
 	.name = "C67",
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
-//	.clk = nv40_clk_new,
+	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
 //	.fb = nv46_fb_new,
 //	.gpio = nv10_gpio_new,
@@ -858,7 +858,7 @@ nv68_chipset = {
 	.name = "C68",
 	.bios = nvkm_bios_new,
 	.bus = nv31_bus_new,
-//	.clk = nv40_clk_new,
+	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
 //	.fb = nv46_fb_new,
 //	.gpio = nv10_gpio_new,
@@ -884,7 +884,7 @@ nv84_chipset = {
 	.bar = g84_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = nv50_bus_new,
-//	.clk = g84_clk_new,
+	.clk = g84_clk_new,
 //	.devinit = g84_devinit_new,
 //	.fb = g84_fb_new,
 //	.fuse = nv50_fuse_new,
@@ -915,7 +915,7 @@ nv86_chipset = {
 	.bar = g84_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = nv50_bus_new,
-//	.clk = g84_clk_new,
+	.clk = g84_clk_new,
 //	.devinit = g84_devinit_new,
 //	.fb = g84_fb_new,
 //	.fuse = nv50_fuse_new,
@@ -946,7 +946,7 @@ nv92_chipset = {
 	.bar = g84_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = nv50_bus_new,
-//	.clk = g84_clk_new,
+	.clk = g84_clk_new,
 //	.devinit = g84_devinit_new,
 //	.fb = g84_fb_new,
 //	.fuse = nv50_fuse_new,
@@ -977,7 +977,7 @@ nv94_chipset = {
 	.bar = g84_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = g94_bus_new,
-//	.clk = g84_clk_new,
+	.clk = g84_clk_new,
 //	.devinit = g84_devinit_new,
 //	.fb = g84_fb_new,
 //	.fuse = nv50_fuse_new,
@@ -1009,7 +1009,7 @@ nv96_chipset = {
 //	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
 //	.fuse = nv50_fuse_new,
-//	.clk = g84_clk_new,
+	.clk = g84_clk_new,
 //	.therm = g84_therm_new,
 //	.mxm = nv50_mxm_new,
 //	.devinit = g84_devinit_new,
@@ -1040,7 +1040,7 @@ nv98_chipset = {
 //	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
 //	.fuse = nv50_fuse_new,
-//	.clk = g84_clk_new,
+	.clk = g84_clk_new,
 //	.therm = g84_therm_new,
 //	.mxm = nv50_mxm_new,
 //	.devinit = g98_devinit_new,
@@ -1070,7 +1070,7 @@ nva0_chipset = {
 	.bar = g84_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = g94_bus_new,
-//	.clk = g84_clk_new,
+	.clk = g84_clk_new,
 //	.devinit = g84_devinit_new,
 //	.fb = g84_fb_new,
 //	.fuse = nv50_fuse_new,
@@ -1101,7 +1101,7 @@ nva3_chipset = {
 	.bar = g84_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = g94_bus_new,
-//	.clk = gt215_clk_new,
+	.clk = gt215_clk_new,
 //	.devinit = gt215_devinit_new,
 //	.fb = gt215_fb_new,
 //	.fuse = nv50_fuse_new,
@@ -1134,7 +1134,7 @@ nva5_chipset = {
 	.bar = g84_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = g94_bus_new,
-//	.clk = gt215_clk_new,
+	.clk = gt215_clk_new,
 //	.devinit = gt215_devinit_new,
 //	.fb = gt215_fb_new,
 //	.fuse = nv50_fuse_new,
@@ -1166,7 +1166,7 @@ nva8_chipset = {
 	.bar = g84_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = g94_bus_new,
-//	.clk = gt215_clk_new,
+	.clk = gt215_clk_new,
 //	.devinit = gt215_devinit_new,
 //	.fb = gt215_fb_new,
 //	.fuse = nv50_fuse_new,
@@ -1198,7 +1198,7 @@ nvaa_chipset = {
 	.bar = g84_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = g94_bus_new,
-//	.clk = mcp77_clk_new,
+	.clk = mcp77_clk_new,
 //	.devinit = g98_devinit_new,
 //	.fb = mcp77_fb_new,
 //	.fuse = nv50_fuse_new,
@@ -1229,7 +1229,7 @@ nvac_chipset = {
 	.bar = g84_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = g94_bus_new,
-//	.clk = mcp77_clk_new,
+	.clk = mcp77_clk_new,
 //	.devinit = g98_devinit_new,
 //	.fb = mcp77_fb_new,
 //	.fuse = nv50_fuse_new,
@@ -1260,7 +1260,7 @@ nvaf_chipset = {
 	.bar = g84_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = g94_bus_new,
-//	.clk = gt215_clk_new,
+	.clk = gt215_clk_new,
 //	.devinit = mcp89_devinit_new,
 //	.fb = mcp89_fb_new,
 //	.fuse = nv50_fuse_new,
@@ -1292,7 +1292,7 @@ nvc0_chipset = {
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
-//	.clk = gf100_clk_new,
+	.clk = gf100_clk_new,
 //	.devinit = gf100_devinit_new,
 //	.fb = gf100_fb_new,
 //	.fuse = gf100_fuse_new,
@@ -1327,7 +1327,7 @@ nvc1_chipset = {
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
-//	.clk = gf100_clk_new,
+	.clk = gf100_clk_new,
 //	.devinit = gf100_devinit_new,
 //	.fb = gf100_fb_new,
 //	.fuse = gf100_fuse_new,
@@ -1361,7 +1361,7 @@ nvc3_chipset = {
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
-//	.clk = gf100_clk_new,
+	.clk = gf100_clk_new,
 //	.devinit = gf100_devinit_new,
 //	.fb = gf100_fb_new,
 //	.fuse = gf100_fuse_new,
@@ -1395,7 +1395,7 @@ nvc4_chipset = {
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
-//	.clk = gf100_clk_new,
+	.clk = gf100_clk_new,
 //	.devinit = gf100_devinit_new,
 //	.fb = gf100_fb_new,
 //	.fuse = gf100_fuse_new,
@@ -1430,7 +1430,7 @@ nvc8_chipset = {
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
-//	.clk = gf100_clk_new,
+	.clk = gf100_clk_new,
 //	.devinit = gf100_devinit_new,
 //	.fb = gf100_fb_new,
 //	.fuse = gf100_fuse_new,
@@ -1465,7 +1465,7 @@ nvce_chipset = {
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
-//	.clk = gf100_clk_new,
+	.clk = gf100_clk_new,
 //	.devinit = gf100_devinit_new,
 //	.fb = gf100_fb_new,
 //	.fuse = gf100_fuse_new,
@@ -1500,7 +1500,7 @@ nvcf_chipset = {
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
-//	.clk = gf100_clk_new,
+	.clk = gf100_clk_new,
 //	.devinit = gf100_devinit_new,
 //	.fb = gf100_fb_new,
 //	.fuse = gf100_fuse_new,
@@ -1534,7 +1534,7 @@ nvd7_chipset = {
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
-//	.clk = gf100_clk_new,
+	.clk = gf100_clk_new,
 //	.devinit = gf100_devinit_new,
 //	.fb = gf100_fb_new,
 //	.fuse = gf100_fuse_new,
@@ -1566,7 +1566,7 @@ nvd9_chipset = {
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
-//	.clk = gf100_clk_new,
+	.clk = gf100_clk_new,
 //	.devinit = gf100_devinit_new,
 //	.fb = gf100_fb_new,
 //	.fuse = gf100_fuse_new,
@@ -1600,7 +1600,7 @@ nve4_chipset = {
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
-//	.clk = gk104_clk_new,
+	.clk = gk104_clk_new,
 //	.devinit = gf100_devinit_new,
 //	.fb = gk104_fb_new,
 //	.fuse = gf100_fuse_new,
@@ -1636,7 +1636,7 @@ nve6_chipset = {
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
-//	.clk = gk104_clk_new,
+	.clk = gk104_clk_new,
 //	.devinit = gf100_devinit_new,
 //	.fb = gk104_fb_new,
 //	.fuse = gf100_fuse_new,
@@ -1672,7 +1672,7 @@ nve7_chipset = {
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
-//	.clk = gk104_clk_new,
+	.clk = gk104_clk_new,
 //	.devinit = gf100_devinit_new,
 //	.fb = gk104_fb_new,
 //	.fuse = gf100_fuse_new,
@@ -1707,7 +1707,7 @@ nvea_chipset = {
 	.name = "GK20A",
 	.bar = gk20a_bar_new,
 	.bus = gf100_bus_new,
-//	.clk = gk20a_clk_new,
+	.clk = gk20a_clk_new,
 //	.fb = gk20a_fb_new,
 //	.fuse = gf100_fuse_new,
 //	.ibus = gk20a_ibus_new,
@@ -1732,7 +1732,7 @@ nvf0_chipset = {
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
-//	.clk = gk104_clk_new,
+	.clk = gk104_clk_new,
 //	.devinit = gf100_devinit_new,
 //	.fb = gk104_fb_new,
 //	.fuse = gf100_fuse_new,
@@ -1768,7 +1768,7 @@ nvf1_chipset = {
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
-//	.clk = gk104_clk_new,
+	.clk = gk104_clk_new,
 //	.devinit = gf100_devinit_new,
 //	.fb = gk104_fb_new,
 //	.fuse = gf100_fuse_new,
@@ -1804,7 +1804,7 @@ nv106_chipset = {
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
-//	.clk = gk104_clk_new,
+	.clk = gk104_clk_new,
 //	.devinit = gf100_devinit_new,
 //	.fb = gk104_fb_new,
 //	.fuse = gf100_fuse_new,
@@ -1839,7 +1839,7 @@ nv108_chipset = {
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
-//	.clk = gk104_clk_new,
+	.clk = gk104_clk_new,
 //	.devinit = gf100_devinit_new,
 //	.fb = gk104_fb_new,
 //	.fuse = gf100_fuse_new,
@@ -1874,7 +1874,7 @@ nv117_chipset = {
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
 	.bus = gf100_bus_new,
-//	.clk = gk104_clk_new,
+	.clk = gk104_clk_new,
 //	.devinit = gm107_devinit_new,
 //	.fb = gm107_fb_new,
 //	.fuse = gm107_fuse_new,

commit bb23f9d7919311ebc696bc540e41c908168f9cb5
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:20 2015 +1000

    drm/nouveau/bus: convert to new-style nvkm_subdev
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 7ef3c1447038..21974c1c4990 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -77,7 +77,7 @@ static const struct nvkm_device_chip
 nv4_chipset = {
 	.name = "NV04",
 	.bios = nvkm_bios_new,
-//	.bus = nv04_bus_new,
+	.bus = nv04_bus_new,
 //	.clk = nv04_clk_new,
 //	.devinit = nv04_devinit_new,
 //	.fb = nv04_fb_new,
@@ -97,7 +97,7 @@ static const struct nvkm_device_chip
 nv5_chipset = {
 	.name = "NV05",
 	.bios = nvkm_bios_new,
-//	.bus = nv04_bus_new,
+	.bus = nv04_bus_new,
 //	.clk = nv04_clk_new,
 //	.devinit = nv05_devinit_new,
 //	.fb = nv04_fb_new,
@@ -117,7 +117,7 @@ static const struct nvkm_device_chip
 nv10_chipset = {
 	.name = "NV10",
 	.bios = nvkm_bios_new,
-//	.bus = nv04_bus_new,
+	.bus = nv04_bus_new,
 //	.clk = nv04_clk_new,
 //	.devinit = nv10_devinit_new,
 //	.fb = nv10_fb_new,
@@ -136,7 +136,7 @@ static const struct nvkm_device_chip
 nv11_chipset = {
 	.name = "NV11",
 	.bios = nvkm_bios_new,
-//	.bus = nv04_bus_new,
+	.bus = nv04_bus_new,
 //	.clk = nv04_clk_new,
 //	.devinit = nv10_devinit_new,
 //	.fb = nv10_fb_new,
@@ -157,7 +157,7 @@ static const struct nvkm_device_chip
 nv15_chipset = {
 	.name = "NV15",
 	.bios = nvkm_bios_new,
-//	.bus = nv04_bus_new,
+	.bus = nv04_bus_new,
 //	.clk = nv04_clk_new,
 //	.devinit = nv10_devinit_new,
 //	.fb = nv10_fb_new,
@@ -178,7 +178,7 @@ static const struct nvkm_device_chip
 nv17_chipset = {
 	.name = "NV17",
 	.bios = nvkm_bios_new,
-//	.bus = nv04_bus_new,
+	.bus = nv04_bus_new,
 //	.clk = nv04_clk_new,
 //	.devinit = nv10_devinit_new,
 //	.fb = nv10_fb_new,
@@ -199,7 +199,7 @@ static const struct nvkm_device_chip
 nv18_chipset = {
 	.name = "NV18",
 	.bios = nvkm_bios_new,
-//	.bus = nv04_bus_new,
+	.bus = nv04_bus_new,
 //	.clk = nv04_clk_new,
 //	.devinit = nv10_devinit_new,
 //	.fb = nv10_fb_new,
@@ -220,7 +220,7 @@ static const struct nvkm_device_chip
 nv1a_chipset = {
 	.name = "nForce",
 	.bios = nvkm_bios_new,
-//	.bus = nv04_bus_new,
+	.bus = nv04_bus_new,
 //	.clk = nv04_clk_new,
 //	.devinit = nv1a_devinit_new,
 //	.fb = nv1a_fb_new,
@@ -241,7 +241,7 @@ static const struct nvkm_device_chip
 nv1f_chipset = {
 	.name = "nForce2",
 	.bios = nvkm_bios_new,
-//	.bus = nv04_bus_new,
+	.bus = nv04_bus_new,
 //	.clk = nv04_clk_new,
 //	.devinit = nv1a_devinit_new,
 //	.fb = nv1a_fb_new,
@@ -262,7 +262,7 @@ static const struct nvkm_device_chip
 nv20_chipset = {
 	.name = "NV20",
 	.bios = nvkm_bios_new,
-//	.bus = nv04_bus_new,
+	.bus = nv04_bus_new,
 //	.clk = nv04_clk_new,
 //	.devinit = nv20_devinit_new,
 //	.fb = nv20_fb_new,
@@ -283,7 +283,7 @@ static const struct nvkm_device_chip
 nv25_chipset = {
 	.name = "NV25",
 	.bios = nvkm_bios_new,
-//	.bus = nv04_bus_new,
+	.bus = nv04_bus_new,
 //	.clk = nv04_clk_new,
 //	.devinit = nv20_devinit_new,
 //	.fb = nv25_fb_new,
@@ -304,7 +304,7 @@ static const struct nvkm_device_chip
 nv28_chipset = {
 	.name = "NV28",
 	.bios = nvkm_bios_new,
-//	.bus = nv04_bus_new,
+	.bus = nv04_bus_new,
 //	.clk = nv04_clk_new,
 //	.devinit = nv20_devinit_new,
 //	.fb = nv25_fb_new,
@@ -325,7 +325,7 @@ static const struct nvkm_device_chip
 nv2a_chipset = {
 	.name = "NV2A",
 	.bios = nvkm_bios_new,
-//	.bus = nv04_bus_new,
+	.bus = nv04_bus_new,
 //	.clk = nv04_clk_new,
 //	.devinit = nv20_devinit_new,
 //	.fb = nv25_fb_new,
@@ -346,7 +346,7 @@ static const struct nvkm_device_chip
 nv30_chipset = {
 	.name = "NV30",
 	.bios = nvkm_bios_new,
-//	.bus = nv04_bus_new,
+	.bus = nv04_bus_new,
 //	.clk = nv04_clk_new,
 //	.devinit = nv20_devinit_new,
 //	.fb = nv30_fb_new,
@@ -367,7 +367,7 @@ static const struct nvkm_device_chip
 nv31_chipset = {
 	.name = "NV31",
 	.bios = nvkm_bios_new,
-//	.bus = nv31_bus_new,
+	.bus = nv31_bus_new,
 //	.clk = nv04_clk_new,
 //	.devinit = nv20_devinit_new,
 //	.fb = nv30_fb_new,
@@ -389,7 +389,7 @@ static const struct nvkm_device_chip
 nv34_chipset = {
 	.name = "NV34",
 	.bios = nvkm_bios_new,
-//	.bus = nv31_bus_new,
+	.bus = nv31_bus_new,
 //	.clk = nv04_clk_new,
 //	.devinit = nv10_devinit_new,
 //	.fb = nv10_fb_new,
@@ -411,7 +411,7 @@ static const struct nvkm_device_chip
 nv35_chipset = {
 	.name = "NV35",
 	.bios = nvkm_bios_new,
-//	.bus = nv04_bus_new,
+	.bus = nv04_bus_new,
 //	.clk = nv04_clk_new,
 //	.devinit = nv20_devinit_new,
 //	.fb = nv35_fb_new,
@@ -432,7 +432,7 @@ static const struct nvkm_device_chip
 nv36_chipset = {
 	.name = "NV36",
 	.bios = nvkm_bios_new,
-//	.bus = nv31_bus_new,
+	.bus = nv31_bus_new,
 //	.clk = nv04_clk_new,
 //	.devinit = nv20_devinit_new,
 //	.fb = nv36_fb_new,
@@ -454,7 +454,7 @@ static const struct nvkm_device_chip
 nv40_chipset = {
 	.name = "NV40",
 	.bios = nvkm_bios_new,
-//	.bus = nv31_bus_new,
+	.bus = nv31_bus_new,
 //	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
 //	.fb = nv40_fb_new,
@@ -479,7 +479,7 @@ static const struct nvkm_device_chip
 nv41_chipset = {
 	.name = "NV41",
 	.bios = nvkm_bios_new,
-//	.bus = nv31_bus_new,
+	.bus = nv31_bus_new,
 //	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
 //	.fb = nv41_fb_new,
@@ -504,7 +504,7 @@ static const struct nvkm_device_chip
 nv42_chipset = {
 	.name = "NV42",
 	.bios = nvkm_bios_new,
-//	.bus = nv31_bus_new,
+	.bus = nv31_bus_new,
 //	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
 //	.fb = nv41_fb_new,
@@ -529,7 +529,7 @@ static const struct nvkm_device_chip
 nv43_chipset = {
 	.name = "NV43",
 	.bios = nvkm_bios_new,
-//	.bus = nv31_bus_new,
+	.bus = nv31_bus_new,
 //	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
 //	.fb = nv41_fb_new,
@@ -554,7 +554,7 @@ static const struct nvkm_device_chip
 nv44_chipset = {
 	.name = "NV44",
 	.bios = nvkm_bios_new,
-//	.bus = nv31_bus_new,
+	.bus = nv31_bus_new,
 //	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
 //	.fb = nv44_fb_new,
@@ -579,7 +579,7 @@ static const struct nvkm_device_chip
 nv45_chipset = {
 	.name = "NV45",
 	.bios = nvkm_bios_new,
-//	.bus = nv31_bus_new,
+	.bus = nv31_bus_new,
 //	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
 //	.fb = nv40_fb_new,
@@ -604,7 +604,7 @@ static const struct nvkm_device_chip
 nv46_chipset = {
 	.name = "G72",
 	.bios = nvkm_bios_new,
-//	.bus = nv31_bus_new,
+	.bus = nv31_bus_new,
 //	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
 //	.fb = nv46_fb_new,
@@ -629,7 +629,7 @@ static const struct nvkm_device_chip
 nv47_chipset = {
 	.name = "G70",
 	.bios = nvkm_bios_new,
-//	.bus = nv31_bus_new,
+	.bus = nv31_bus_new,
 //	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
 //	.fb = nv47_fb_new,
@@ -654,7 +654,7 @@ static const struct nvkm_device_chip
 nv49_chipset = {
 	.name = "G71",
 	.bios = nvkm_bios_new,
-//	.bus = nv31_bus_new,
+	.bus = nv31_bus_new,
 //	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
 //	.fb = nv49_fb_new,
@@ -679,7 +679,7 @@ static const struct nvkm_device_chip
 nv4a_chipset = {
 	.name = "NV44A",
 	.bios = nvkm_bios_new,
-//	.bus = nv31_bus_new,
+	.bus = nv31_bus_new,
 //	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
 //	.fb = nv44_fb_new,
@@ -704,7 +704,7 @@ static const struct nvkm_device_chip
 nv4b_chipset = {
 	.name = "G73",
 	.bios = nvkm_bios_new,
-//	.bus = nv31_bus_new,
+	.bus = nv31_bus_new,
 //	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
 //	.fb = nv49_fb_new,
@@ -729,7 +729,7 @@ static const struct nvkm_device_chip
 nv4c_chipset = {
 	.name = "C61",
 	.bios = nvkm_bios_new,
-//	.bus = nv31_bus_new,
+	.bus = nv31_bus_new,
 //	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
 //	.fb = nv46_fb_new,
@@ -754,7 +754,7 @@ static const struct nvkm_device_chip
 nv4e_chipset = {
 	.name = "C51",
 	.bios = nvkm_bios_new,
-//	.bus = nv31_bus_new,
+	.bus = nv31_bus_new,
 //	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
 //	.fb = nv4e_fb_new,
@@ -780,7 +780,7 @@ nv50_chipset = {
 	.name = "G80",
 	.bar = nv50_bar_new,
 	.bios = nvkm_bios_new,
-//	.bus = nv50_bus_new,
+	.bus = nv50_bus_new,
 //	.clk = nv50_clk_new,
 //	.devinit = nv50_devinit_new,
 //	.fb = nv50_fb_new,
@@ -807,7 +807,7 @@ static const struct nvkm_device_chip
 nv63_chipset = {
 	.name = "C73",
 	.bios = nvkm_bios_new,
-//	.bus = nv31_bus_new,
+	.bus = nv31_bus_new,
 //	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
 //	.fb = nv46_fb_new,
@@ -832,7 +832,7 @@ static const struct nvkm_device_chip
 nv67_chipset = {
 	.name = "C67",
 	.bios = nvkm_bios_new,
-//	.bus = nv31_bus_new,
+	.bus = nv31_bus_new,
 //	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
 //	.fb = nv46_fb_new,
@@ -857,7 +857,7 @@ static const struct nvkm_device_chip
 nv68_chipset = {
 	.name = "C68",
 	.bios = nvkm_bios_new,
-//	.bus = nv31_bus_new,
+	.bus = nv31_bus_new,
 //	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
 //	.fb = nv46_fb_new,
@@ -883,7 +883,7 @@ nv84_chipset = {
 	.name = "G84",
 	.bar = g84_bar_new,
 	.bios = nvkm_bios_new,
-//	.bus = nv50_bus_new,
+	.bus = nv50_bus_new,
 //	.clk = g84_clk_new,
 //	.devinit = g84_devinit_new,
 //	.fb = g84_fb_new,
@@ -914,7 +914,7 @@ nv86_chipset = {
 	.name = "G86",
 	.bar = g84_bar_new,
 	.bios = nvkm_bios_new,
-//	.bus = nv50_bus_new,
+	.bus = nv50_bus_new,
 //	.clk = g84_clk_new,
 //	.devinit = g84_devinit_new,
 //	.fb = g84_fb_new,
@@ -945,7 +945,7 @@ nv92_chipset = {
 	.name = "G92",
 	.bar = g84_bar_new,
 	.bios = nvkm_bios_new,
-//	.bus = nv50_bus_new,
+	.bus = nv50_bus_new,
 //	.clk = g84_clk_new,
 //	.devinit = g84_devinit_new,
 //	.fb = g84_fb_new,
@@ -976,7 +976,7 @@ nv94_chipset = {
 	.name = "G94",
 	.bar = g84_bar_new,
 	.bios = nvkm_bios_new,
-//	.bus = g94_bus_new,
+	.bus = g94_bus_new,
 //	.clk = g84_clk_new,
 //	.devinit = g84_devinit_new,
 //	.fb = g84_fb_new,
@@ -1014,7 +1014,7 @@ nv96_chipset = {
 //	.mxm = nv50_mxm_new,
 //	.devinit = g84_devinit_new,
 //	.mc = g94_mc_new,
-//	.bus = g94_bus_new,
+	.bus = g94_bus_new,
 //	.timer = nv04_timer_new,
 //	.fb = g84_fb_new,
 //	.imem = nv50_instmem_new,
@@ -1045,7 +1045,7 @@ nv98_chipset = {
 //	.mxm = nv50_mxm_new,
 //	.devinit = g98_devinit_new,
 //	.mc = g98_mc_new,
-//	.bus = g94_bus_new,
+	.bus = g94_bus_new,
 //	.timer = nv04_timer_new,
 //	.fb = g84_fb_new,
 //	.imem = nv50_instmem_new,
@@ -1069,7 +1069,7 @@ nva0_chipset = {
 	.name = "GT200",
 	.bar = g84_bar_new,
 	.bios = nvkm_bios_new,
-//	.bus = g94_bus_new,
+	.bus = g94_bus_new,
 //	.clk = g84_clk_new,
 //	.devinit = g84_devinit_new,
 //	.fb = g84_fb_new,
@@ -1100,7 +1100,7 @@ nva3_chipset = {
 	.name = "GT215",
 	.bar = g84_bar_new,
 	.bios = nvkm_bios_new,
-//	.bus = g94_bus_new,
+	.bus = g94_bus_new,
 //	.clk = gt215_clk_new,
 //	.devinit = gt215_devinit_new,
 //	.fb = gt215_fb_new,
@@ -1133,7 +1133,7 @@ nva5_chipset = {
 	.name = "GT216",
 	.bar = g84_bar_new,
 	.bios = nvkm_bios_new,
-//	.bus = g94_bus_new,
+	.bus = g94_bus_new,
 //	.clk = gt215_clk_new,
 //	.devinit = gt215_devinit_new,
 //	.fb = gt215_fb_new,
@@ -1165,7 +1165,7 @@ nva8_chipset = {
 	.name = "GT218",
 	.bar = g84_bar_new,
 	.bios = nvkm_bios_new,
-//	.bus = g94_bus_new,
+	.bus = g94_bus_new,
 //	.clk = gt215_clk_new,
 //	.devinit = gt215_devinit_new,
 //	.fb = gt215_fb_new,
@@ -1197,7 +1197,7 @@ nvaa_chipset = {
 	.name = "MCP77/MCP78",
 	.bar = g84_bar_new,
 	.bios = nvkm_bios_new,
-//	.bus = g94_bus_new,
+	.bus = g94_bus_new,
 //	.clk = mcp77_clk_new,
 //	.devinit = g98_devinit_new,
 //	.fb = mcp77_fb_new,
@@ -1228,7 +1228,7 @@ nvac_chipset = {
 	.name = "MCP79/MCP7A",
 	.bar = g84_bar_new,
 	.bios = nvkm_bios_new,
-//	.bus = g94_bus_new,
+	.bus = g94_bus_new,
 //	.clk = mcp77_clk_new,
 //	.devinit = g98_devinit_new,
 //	.fb = mcp77_fb_new,
@@ -1259,7 +1259,7 @@ nvaf_chipset = {
 	.name = "MCP89",
 	.bar = g84_bar_new,
 	.bios = nvkm_bios_new,
-//	.bus = g94_bus_new,
+	.bus = g94_bus_new,
 //	.clk = gt215_clk_new,
 //	.devinit = mcp89_devinit_new,
 //	.fb = mcp89_fb_new,
@@ -1291,7 +1291,7 @@ nvc0_chipset = {
 	.name = "GF100",
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
-//	.bus = gf100_bus_new,
+	.bus = gf100_bus_new,
 //	.clk = gf100_clk_new,
 //	.devinit = gf100_devinit_new,
 //	.fb = gf100_fb_new,
@@ -1326,7 +1326,7 @@ nvc1_chipset = {
 	.name = "GF108",
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
-//	.bus = gf100_bus_new,
+	.bus = gf100_bus_new,
 //	.clk = gf100_clk_new,
 //	.devinit = gf100_devinit_new,
 //	.fb = gf100_fb_new,
@@ -1360,7 +1360,7 @@ nvc3_chipset = {
 	.name = "GF106",
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
-//	.bus = gf100_bus_new,
+	.bus = gf100_bus_new,
 //	.clk = gf100_clk_new,
 //	.devinit = gf100_devinit_new,
 //	.fb = gf100_fb_new,
@@ -1394,7 +1394,7 @@ nvc4_chipset = {
 	.name = "GF104",
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
-//	.bus = gf100_bus_new,
+	.bus = gf100_bus_new,
 //	.clk = gf100_clk_new,
 //	.devinit = gf100_devinit_new,
 //	.fb = gf100_fb_new,
@@ -1429,7 +1429,7 @@ nvc8_chipset = {
 	.name = "GF110",
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
-//	.bus = gf100_bus_new,
+	.bus = gf100_bus_new,
 //	.clk = gf100_clk_new,
 //	.devinit = gf100_devinit_new,
 //	.fb = gf100_fb_new,
@@ -1464,7 +1464,7 @@ nvce_chipset = {
 	.name = "GF114",
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
-//	.bus = gf100_bus_new,
+	.bus = gf100_bus_new,
 //	.clk = gf100_clk_new,
 //	.devinit = gf100_devinit_new,
 //	.fb = gf100_fb_new,
@@ -1499,7 +1499,7 @@ nvcf_chipset = {
 	.name = "GF116",
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
-//	.bus = gf100_bus_new,
+	.bus = gf100_bus_new,
 //	.clk = gf100_clk_new,
 //	.devinit = gf100_devinit_new,
 //	.fb = gf100_fb_new,
@@ -1533,7 +1533,7 @@ nvd7_chipset = {
 	.name = "GF117",
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
-//	.bus = gf100_bus_new,
+	.bus = gf100_bus_new,
 //	.clk = gf100_clk_new,
 //	.devinit = gf100_devinit_new,
 //	.fb = gf100_fb_new,
@@ -1565,7 +1565,7 @@ nvd9_chipset = {
 	.name = "GF119",
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
-//	.bus = gf100_bus_new,
+	.bus = gf100_bus_new,
 //	.clk = gf100_clk_new,
 //	.devinit = gf100_devinit_new,
 //	.fb = gf100_fb_new,
@@ -1599,7 +1599,7 @@ nve4_chipset = {
 	.name = "GK104",
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
-//	.bus = gf100_bus_new,
+	.bus = gf100_bus_new,
 //	.clk = gk104_clk_new,
 //	.devinit = gf100_devinit_new,
 //	.fb = gk104_fb_new,
@@ -1635,7 +1635,7 @@ nve6_chipset = {
 	.name = "GK106",
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
-//	.bus = gf100_bus_new,
+	.bus = gf100_bus_new,
 //	.clk = gk104_clk_new,
 //	.devinit = gf100_devinit_new,
 //	.fb = gk104_fb_new,
@@ -1671,7 +1671,7 @@ nve7_chipset = {
 	.name = "GK107",
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
-//	.bus = gf100_bus_new,
+	.bus = gf100_bus_new,
 //	.clk = gk104_clk_new,
 //	.devinit = gf100_devinit_new,
 //	.fb = gk104_fb_new,
@@ -1706,7 +1706,7 @@ static const struct nvkm_device_chip
 nvea_chipset = {
 	.name = "GK20A",
 	.bar = gk20a_bar_new,
-//	.bus = gf100_bus_new,
+	.bus = gf100_bus_new,
 //	.clk = gk20a_clk_new,
 //	.fb = gk20a_fb_new,
 //	.fuse = gf100_fuse_new,
@@ -1731,7 +1731,7 @@ nvf0_chipset = {
 	.name = "GK110",
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
-//	.bus = gf100_bus_new,
+	.bus = gf100_bus_new,
 //	.clk = gk104_clk_new,
 //	.devinit = gf100_devinit_new,
 //	.fb = gk104_fb_new,
@@ -1767,7 +1767,7 @@ nvf1_chipset = {
 	.name = "GK110B",
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
-//	.bus = gf100_bus_new,
+	.bus = gf100_bus_new,
 //	.clk = gk104_clk_new,
 //	.devinit = gf100_devinit_new,
 //	.fb = gk104_fb_new,
@@ -1803,7 +1803,7 @@ nv106_chipset = {
 	.name = "GK208B",
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
-//	.bus = gf100_bus_new,
+	.bus = gf100_bus_new,
 //	.clk = gk104_clk_new,
 //	.devinit = gf100_devinit_new,
 //	.fb = gk104_fb_new,
@@ -1838,7 +1838,7 @@ nv108_chipset = {
 	.name = "GK208",
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
-//	.bus = gf100_bus_new,
+	.bus = gf100_bus_new,
 //	.clk = gk104_clk_new,
 //	.devinit = gf100_devinit_new,
 //	.fb = gk104_fb_new,
@@ -1873,7 +1873,7 @@ nv117_chipset = {
 	.name = "GM107",
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
-//	.bus = gf100_bus_new,
+	.bus = gf100_bus_new,
 //	.clk = gk104_clk_new,
 //	.devinit = gm107_devinit_new,
 //	.fb = gm107_fb_new,
@@ -1903,7 +1903,7 @@ nv124_chipset = {
 	.name = "GM204",
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
-//	.bus = gf100_bus_new,
+	.bus = gf100_bus_new,
 //	.devinit = gm204_devinit_new,
 //	.fb = gm107_fb_new,
 //	.fuse = gm107_fuse_new,
@@ -1932,7 +1932,7 @@ nv126_chipset = {
 	.name = "GM206",
 	.bar = gf100_bar_new,
 	.bios = nvkm_bios_new,
-//	.bus = gf100_bus_new,
+	.bus = gf100_bus_new,
 //	.devinit = gm204_devinit_new,
 //	.fb = gm107_fb_new,
 //	.fuse = gm107_fuse_new,
@@ -1960,7 +1960,7 @@ static const struct nvkm_device_chip
 nv12b_chipset = {
 	.name = "GM20B",
 	.bar = gk20a_bar_new,
-//	.bus = gf100_bus_new,
+	.bus = gf100_bus_new,
 //	.fb = gk20a_fb_new,
 //	.fuse = gm107_fuse_new,
 //	.ibus = gk20a_ibus_new,

commit 46484438ab7dbab6ed29cf647d029e0b1ef3d9d8
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:20 2015 +1000

    drm/nouveau/bios: convert to new-style nvkm_subdev
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 24609108cb90..7ef3c1447038 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -70,13 +70,13 @@ nvkm_device_list(u64 *name, int size)
 static const struct nvkm_device_chip
 null_chipset = {
 	.name = "NULL",
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 };
 
 static const struct nvkm_device_chip
 nv4_chipset = {
 	.name = "NV04",
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv04_bus_new,
 //	.clk = nv04_clk_new,
 //	.devinit = nv04_devinit_new,
@@ -96,7 +96,7 @@ nv4_chipset = {
 static const struct nvkm_device_chip
 nv5_chipset = {
 	.name = "NV05",
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv04_bus_new,
 //	.clk = nv04_clk_new,
 //	.devinit = nv05_devinit_new,
@@ -116,7 +116,7 @@ nv5_chipset = {
 static const struct nvkm_device_chip
 nv10_chipset = {
 	.name = "NV10",
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv04_bus_new,
 //	.clk = nv04_clk_new,
 //	.devinit = nv10_devinit_new,
@@ -135,7 +135,7 @@ nv10_chipset = {
 static const struct nvkm_device_chip
 nv11_chipset = {
 	.name = "NV11",
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv04_bus_new,
 //	.clk = nv04_clk_new,
 //	.devinit = nv10_devinit_new,
@@ -156,7 +156,7 @@ nv11_chipset = {
 static const struct nvkm_device_chip
 nv15_chipset = {
 	.name = "NV15",
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv04_bus_new,
 //	.clk = nv04_clk_new,
 //	.devinit = nv10_devinit_new,
@@ -177,7 +177,7 @@ nv15_chipset = {
 static const struct nvkm_device_chip
 nv17_chipset = {
 	.name = "NV17",
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv04_bus_new,
 //	.clk = nv04_clk_new,
 //	.devinit = nv10_devinit_new,
@@ -198,7 +198,7 @@ nv17_chipset = {
 static const struct nvkm_device_chip
 nv18_chipset = {
 	.name = "NV18",
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv04_bus_new,
 //	.clk = nv04_clk_new,
 //	.devinit = nv10_devinit_new,
@@ -219,7 +219,7 @@ nv18_chipset = {
 static const struct nvkm_device_chip
 nv1a_chipset = {
 	.name = "nForce",
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv04_bus_new,
 //	.clk = nv04_clk_new,
 //	.devinit = nv1a_devinit_new,
@@ -240,7 +240,7 @@ nv1a_chipset = {
 static const struct nvkm_device_chip
 nv1f_chipset = {
 	.name = "nForce2",
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv04_bus_new,
 //	.clk = nv04_clk_new,
 //	.devinit = nv1a_devinit_new,
@@ -261,7 +261,7 @@ nv1f_chipset = {
 static const struct nvkm_device_chip
 nv20_chipset = {
 	.name = "NV20",
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv04_bus_new,
 //	.clk = nv04_clk_new,
 //	.devinit = nv20_devinit_new,
@@ -282,7 +282,7 @@ nv20_chipset = {
 static const struct nvkm_device_chip
 nv25_chipset = {
 	.name = "NV25",
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv04_bus_new,
 //	.clk = nv04_clk_new,
 //	.devinit = nv20_devinit_new,
@@ -303,7 +303,7 @@ nv25_chipset = {
 static const struct nvkm_device_chip
 nv28_chipset = {
 	.name = "NV28",
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv04_bus_new,
 //	.clk = nv04_clk_new,
 //	.devinit = nv20_devinit_new,
@@ -324,7 +324,7 @@ nv28_chipset = {
 static const struct nvkm_device_chip
 nv2a_chipset = {
 	.name = "NV2A",
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv04_bus_new,
 //	.clk = nv04_clk_new,
 //	.devinit = nv20_devinit_new,
@@ -345,7 +345,7 @@ nv2a_chipset = {
 static const struct nvkm_device_chip
 nv30_chipset = {
 	.name = "NV30",
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv04_bus_new,
 //	.clk = nv04_clk_new,
 //	.devinit = nv20_devinit_new,
@@ -366,7 +366,7 @@ nv30_chipset = {
 static const struct nvkm_device_chip
 nv31_chipset = {
 	.name = "NV31",
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv31_bus_new,
 //	.clk = nv04_clk_new,
 //	.devinit = nv20_devinit_new,
@@ -388,7 +388,7 @@ nv31_chipset = {
 static const struct nvkm_device_chip
 nv34_chipset = {
 	.name = "NV34",
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv31_bus_new,
 //	.clk = nv04_clk_new,
 //	.devinit = nv10_devinit_new,
@@ -410,7 +410,7 @@ nv34_chipset = {
 static const struct nvkm_device_chip
 nv35_chipset = {
 	.name = "NV35",
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv04_bus_new,
 //	.clk = nv04_clk_new,
 //	.devinit = nv20_devinit_new,
@@ -431,7 +431,7 @@ nv35_chipset = {
 static const struct nvkm_device_chip
 nv36_chipset = {
 	.name = "NV36",
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv31_bus_new,
 //	.clk = nv04_clk_new,
 //	.devinit = nv20_devinit_new,
@@ -453,7 +453,7 @@ nv36_chipset = {
 static const struct nvkm_device_chip
 nv40_chipset = {
 	.name = "NV40",
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv31_bus_new,
 //	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
@@ -478,7 +478,7 @@ nv40_chipset = {
 static const struct nvkm_device_chip
 nv41_chipset = {
 	.name = "NV41",
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv31_bus_new,
 //	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
@@ -503,7 +503,7 @@ nv41_chipset = {
 static const struct nvkm_device_chip
 nv42_chipset = {
 	.name = "NV42",
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv31_bus_new,
 //	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
@@ -528,7 +528,7 @@ nv42_chipset = {
 static const struct nvkm_device_chip
 nv43_chipset = {
 	.name = "NV43",
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv31_bus_new,
 //	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
@@ -553,7 +553,7 @@ nv43_chipset = {
 static const struct nvkm_device_chip
 nv44_chipset = {
 	.name = "NV44",
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv31_bus_new,
 //	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
@@ -578,7 +578,7 @@ nv44_chipset = {
 static const struct nvkm_device_chip
 nv45_chipset = {
 	.name = "NV45",
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv31_bus_new,
 //	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
@@ -603,7 +603,7 @@ nv45_chipset = {
 static const struct nvkm_device_chip
 nv46_chipset = {
 	.name = "G72",
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv31_bus_new,
 //	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
@@ -628,7 +628,7 @@ nv46_chipset = {
 static const struct nvkm_device_chip
 nv47_chipset = {
 	.name = "G70",
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv31_bus_new,
 //	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
@@ -653,7 +653,7 @@ nv47_chipset = {
 static const struct nvkm_device_chip
 nv49_chipset = {
 	.name = "G71",
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv31_bus_new,
 //	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
@@ -678,7 +678,7 @@ nv49_chipset = {
 static const struct nvkm_device_chip
 nv4a_chipset = {
 	.name = "NV44A",
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv31_bus_new,
 //	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
@@ -703,7 +703,7 @@ nv4a_chipset = {
 static const struct nvkm_device_chip
 nv4b_chipset = {
 	.name = "G73",
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv31_bus_new,
 //	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
@@ -728,7 +728,7 @@ nv4b_chipset = {
 static const struct nvkm_device_chip
 nv4c_chipset = {
 	.name = "C61",
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv31_bus_new,
 //	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
@@ -753,7 +753,7 @@ nv4c_chipset = {
 static const struct nvkm_device_chip
 nv4e_chipset = {
 	.name = "C51",
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv31_bus_new,
 //	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
@@ -779,7 +779,7 @@ static const struct nvkm_device_chip
 nv50_chipset = {
 	.name = "G80",
 	.bar = nv50_bar_new,
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv50_bus_new,
 //	.clk = nv50_clk_new,
 //	.devinit = nv50_devinit_new,
@@ -806,7 +806,7 @@ nv50_chipset = {
 static const struct nvkm_device_chip
 nv63_chipset = {
 	.name = "C73",
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv31_bus_new,
 //	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
@@ -831,7 +831,7 @@ nv63_chipset = {
 static const struct nvkm_device_chip
 nv67_chipset = {
 	.name = "C67",
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv31_bus_new,
 //	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
@@ -856,7 +856,7 @@ nv67_chipset = {
 static const struct nvkm_device_chip
 nv68_chipset = {
 	.name = "C68",
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv31_bus_new,
 //	.clk = nv40_clk_new,
 //	.devinit = nv1a_devinit_new,
@@ -882,7 +882,7 @@ static const struct nvkm_device_chip
 nv84_chipset = {
 	.name = "G84",
 	.bar = g84_bar_new,
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv50_bus_new,
 //	.clk = g84_clk_new,
 //	.devinit = g84_devinit_new,
@@ -913,7 +913,7 @@ static const struct nvkm_device_chip
 nv86_chipset = {
 	.name = "G86",
 	.bar = g84_bar_new,
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv50_bus_new,
 //	.clk = g84_clk_new,
 //	.devinit = g84_devinit_new,
@@ -944,7 +944,7 @@ static const struct nvkm_device_chip
 nv92_chipset = {
 	.name = "G92",
 	.bar = g84_bar_new,
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = nv50_bus_new,
 //	.clk = g84_clk_new,
 //	.devinit = g84_devinit_new,
@@ -975,7 +975,7 @@ static const struct nvkm_device_chip
 nv94_chipset = {
 	.name = "G94",
 	.bar = g84_bar_new,
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = g94_bus_new,
 //	.clk = g84_clk_new,
 //	.devinit = g84_devinit_new,
@@ -1005,7 +1005,7 @@ nv94_chipset = {
 static const struct nvkm_device_chip
 nv96_chipset = {
 	.name = "G96",
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
 //	.fuse = nv50_fuse_new,
@@ -1036,7 +1036,7 @@ nv96_chipset = {
 static const struct nvkm_device_chip
 nv98_chipset = {
 	.name = "G98",
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.gpio = g94_gpio_new,
 //	.i2c = g94_i2c_new,
 //	.fuse = nv50_fuse_new,
@@ -1068,7 +1068,7 @@ static const struct nvkm_device_chip
 nva0_chipset = {
 	.name = "GT200",
 	.bar = g84_bar_new,
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = g94_bus_new,
 //	.clk = g84_clk_new,
 //	.devinit = g84_devinit_new,
@@ -1099,7 +1099,7 @@ static const struct nvkm_device_chip
 nva3_chipset = {
 	.name = "GT215",
 	.bar = g84_bar_new,
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = g94_bus_new,
 //	.clk = gt215_clk_new,
 //	.devinit = gt215_devinit_new,
@@ -1132,7 +1132,7 @@ static const struct nvkm_device_chip
 nva5_chipset = {
 	.name = "GT216",
 	.bar = g84_bar_new,
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = g94_bus_new,
 //	.clk = gt215_clk_new,
 //	.devinit = gt215_devinit_new,
@@ -1164,7 +1164,7 @@ static const struct nvkm_device_chip
 nva8_chipset = {
 	.name = "GT218",
 	.bar = g84_bar_new,
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = g94_bus_new,
 //	.clk = gt215_clk_new,
 //	.devinit = gt215_devinit_new,
@@ -1196,7 +1196,7 @@ static const struct nvkm_device_chip
 nvaa_chipset = {
 	.name = "MCP77/MCP78",
 	.bar = g84_bar_new,
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = g94_bus_new,
 //	.clk = mcp77_clk_new,
 //	.devinit = g98_devinit_new,
@@ -1227,7 +1227,7 @@ static const struct nvkm_device_chip
 nvac_chipset = {
 	.name = "MCP79/MCP7A",
 	.bar = g84_bar_new,
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = g94_bus_new,
 //	.clk = mcp77_clk_new,
 //	.devinit = g98_devinit_new,
@@ -1258,7 +1258,7 @@ static const struct nvkm_device_chip
 nvaf_chipset = {
 	.name = "MCP89",
 	.bar = g84_bar_new,
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = g94_bus_new,
 //	.clk = gt215_clk_new,
 //	.devinit = mcp89_devinit_new,
@@ -1290,7 +1290,7 @@ static const struct nvkm_device_chip
 nvc0_chipset = {
 	.name = "GF100",
 	.bar = gf100_bar_new,
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.clk = gf100_clk_new,
 //	.devinit = gf100_devinit_new,
@@ -1325,7 +1325,7 @@ static const struct nvkm_device_chip
 nvc1_chipset = {
 	.name = "GF108",
 	.bar = gf100_bar_new,
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.clk = gf100_clk_new,
 //	.devinit = gf100_devinit_new,
@@ -1359,7 +1359,7 @@ static const struct nvkm_device_chip
 nvc3_chipset = {
 	.name = "GF106",
 	.bar = gf100_bar_new,
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.clk = gf100_clk_new,
 //	.devinit = gf100_devinit_new,
@@ -1393,7 +1393,7 @@ static const struct nvkm_device_chip
 nvc4_chipset = {
 	.name = "GF104",
 	.bar = gf100_bar_new,
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.clk = gf100_clk_new,
 //	.devinit = gf100_devinit_new,
@@ -1428,7 +1428,7 @@ static const struct nvkm_device_chip
 nvc8_chipset = {
 	.name = "GF110",
 	.bar = gf100_bar_new,
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.clk = gf100_clk_new,
 //	.devinit = gf100_devinit_new,
@@ -1463,7 +1463,7 @@ static const struct nvkm_device_chip
 nvce_chipset = {
 	.name = "GF114",
 	.bar = gf100_bar_new,
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.clk = gf100_clk_new,
 //	.devinit = gf100_devinit_new,
@@ -1498,7 +1498,7 @@ static const struct nvkm_device_chip
 nvcf_chipset = {
 	.name = "GF116",
 	.bar = gf100_bar_new,
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.clk = gf100_clk_new,
 //	.devinit = gf100_devinit_new,
@@ -1532,7 +1532,7 @@ static const struct nvkm_device_chip
 nvd7_chipset = {
 	.name = "GF117",
 	.bar = gf100_bar_new,
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.clk = gf100_clk_new,
 //	.devinit = gf100_devinit_new,
@@ -1564,7 +1564,7 @@ static const struct nvkm_device_chip
 nvd9_chipset = {
 	.name = "GF119",
 	.bar = gf100_bar_new,
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.clk = gf100_clk_new,
 //	.devinit = gf100_devinit_new,
@@ -1598,7 +1598,7 @@ static const struct nvkm_device_chip
 nve4_chipset = {
 	.name = "GK104",
 	.bar = gf100_bar_new,
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.clk = gk104_clk_new,
 //	.devinit = gf100_devinit_new,
@@ -1634,7 +1634,7 @@ static const struct nvkm_device_chip
 nve6_chipset = {
 	.name = "GK106",
 	.bar = gf100_bar_new,
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.clk = gk104_clk_new,
 //	.devinit = gf100_devinit_new,
@@ -1670,7 +1670,7 @@ static const struct nvkm_device_chip
 nve7_chipset = {
 	.name = "GK107",
 	.bar = gf100_bar_new,
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.clk = gk104_clk_new,
 //	.devinit = gf100_devinit_new,
@@ -1730,7 +1730,7 @@ static const struct nvkm_device_chip
 nvf0_chipset = {
 	.name = "GK110",
 	.bar = gf100_bar_new,
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.clk = gk104_clk_new,
 //	.devinit = gf100_devinit_new,
@@ -1766,7 +1766,7 @@ static const struct nvkm_device_chip
 nvf1_chipset = {
 	.name = "GK110B",
 	.bar = gf100_bar_new,
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.clk = gk104_clk_new,
 //	.devinit = gf100_devinit_new,
@@ -1802,7 +1802,7 @@ static const struct nvkm_device_chip
 nv106_chipset = {
 	.name = "GK208B",
 	.bar = gf100_bar_new,
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.clk = gk104_clk_new,
 //	.devinit = gf100_devinit_new,
@@ -1837,7 +1837,7 @@ static const struct nvkm_device_chip
 nv108_chipset = {
 	.name = "GK208",
 	.bar = gf100_bar_new,
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.clk = gk104_clk_new,
 //	.devinit = gf100_devinit_new,
@@ -1872,7 +1872,7 @@ static const struct nvkm_device_chip
 nv117_chipset = {
 	.name = "GM107",
 	.bar = gf100_bar_new,
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.clk = gk104_clk_new,
 //	.devinit = gm107_devinit_new,
@@ -1902,7 +1902,7 @@ static const struct nvkm_device_chip
 nv124_chipset = {
 	.name = "GM204",
 	.bar = gf100_bar_new,
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.devinit = gm204_devinit_new,
 //	.fb = gm107_fb_new,
@@ -1931,7 +1931,7 @@ static const struct nvkm_device_chip
 nv126_chipset = {
 	.name = "GM206",
 	.bar = gf100_bar_new,
-//	.bios = nvkm_bios_new,
+	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.devinit = gm204_devinit_new,
 //	.fb = gm107_fb_new,
@@ -2581,7 +2581,6 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		}
 	} else {
 		device->chip = &null_chipset;
-		device->oclass[NVDEV_SUBDEV_VBIOS] = &nvkm_bios_oclass;
 	}
 
 	if (!device->name)

commit 3293228174e4d44cca56d809cc8409c3f88f8b90
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:20 2015 +1000

    drm/nouveau/bar: convert to new-style nvkm_subdev
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 46d616c7259d..24609108cb90 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -778,7 +778,7 @@ nv4e_chipset = {
 static const struct nvkm_device_chip
 nv50_chipset = {
 	.name = "G80",
-//	.bar = nv50_bar_new,
+	.bar = nv50_bar_new,
 //	.bios = nvkm_bios_new,
 //	.bus = nv50_bus_new,
 //	.clk = nv50_clk_new,
@@ -881,7 +881,7 @@ nv68_chipset = {
 static const struct nvkm_device_chip
 nv84_chipset = {
 	.name = "G84",
-//	.bar = nv50_bar_new,
+	.bar = g84_bar_new,
 //	.bios = nvkm_bios_new,
 //	.bus = nv50_bus_new,
 //	.clk = g84_clk_new,
@@ -912,7 +912,7 @@ nv84_chipset = {
 static const struct nvkm_device_chip
 nv86_chipset = {
 	.name = "G86",
-//	.bar = nv50_bar_new,
+	.bar = g84_bar_new,
 //	.bios = nvkm_bios_new,
 //	.bus = nv50_bus_new,
 //	.clk = g84_clk_new,
@@ -943,7 +943,7 @@ nv86_chipset = {
 static const struct nvkm_device_chip
 nv92_chipset = {
 	.name = "G92",
-//	.bar = nv50_bar_new,
+	.bar = g84_bar_new,
 //	.bios = nvkm_bios_new,
 //	.bus = nv50_bus_new,
 //	.clk = g84_clk_new,
@@ -974,7 +974,7 @@ nv92_chipset = {
 static const struct nvkm_device_chip
 nv94_chipset = {
 	.name = "G94",
-//	.bar = nv50_bar_new,
+	.bar = g84_bar_new,
 //	.bios = nvkm_bios_new,
 //	.bus = g94_bus_new,
 //	.clk = g84_clk_new,
@@ -1019,7 +1019,7 @@ nv96_chipset = {
 //	.fb = g84_fb_new,
 //	.imem = nv50_instmem_new,
 //	.mmu = nv50_mmu_new,
-//	.bar = nv50_bar_new,
+	.bar = g84_bar_new,
 //	.volt = nv40_volt_new,
 //	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
@@ -1050,7 +1050,7 @@ nv98_chipset = {
 //	.fb = g84_fb_new,
 //	.imem = nv50_instmem_new,
 //	.mmu = nv50_mmu_new,
-//	.bar = nv50_bar_new,
+	.bar = g84_bar_new,
 //	.volt = nv40_volt_new,
 //	.dma = nv50_dma_new,
 //	.fifo = g84_fifo_new,
@@ -1067,7 +1067,7 @@ nv98_chipset = {
 static const struct nvkm_device_chip
 nva0_chipset = {
 	.name = "GT200",
-//	.bar = nv50_bar_new,
+	.bar = g84_bar_new,
 //	.bios = nvkm_bios_new,
 //	.bus = g94_bus_new,
 //	.clk = g84_clk_new,
@@ -1098,7 +1098,7 @@ nva0_chipset = {
 static const struct nvkm_device_chip
 nva3_chipset = {
 	.name = "GT215",
-//	.bar = nv50_bar_new,
+	.bar = g84_bar_new,
 //	.bios = nvkm_bios_new,
 //	.bus = g94_bus_new,
 //	.clk = gt215_clk_new,
@@ -1131,7 +1131,7 @@ nva3_chipset = {
 static const struct nvkm_device_chip
 nva5_chipset = {
 	.name = "GT216",
-//	.bar = nv50_bar_new,
+	.bar = g84_bar_new,
 //	.bios = nvkm_bios_new,
 //	.bus = g94_bus_new,
 //	.clk = gt215_clk_new,
@@ -1163,7 +1163,7 @@ nva5_chipset = {
 static const struct nvkm_device_chip
 nva8_chipset = {
 	.name = "GT218",
-//	.bar = nv50_bar_new,
+	.bar = g84_bar_new,
 //	.bios = nvkm_bios_new,
 //	.bus = g94_bus_new,
 //	.clk = gt215_clk_new,
@@ -1195,7 +1195,7 @@ nva8_chipset = {
 static const struct nvkm_device_chip
 nvaa_chipset = {
 	.name = "MCP77/MCP78",
-//	.bar = nv50_bar_new,
+	.bar = g84_bar_new,
 //	.bios = nvkm_bios_new,
 //	.bus = g94_bus_new,
 //	.clk = mcp77_clk_new,
@@ -1226,7 +1226,7 @@ nvaa_chipset = {
 static const struct nvkm_device_chip
 nvac_chipset = {
 	.name = "MCP79/MCP7A",
-//	.bar = nv50_bar_new,
+	.bar = g84_bar_new,
 //	.bios = nvkm_bios_new,
 //	.bus = g94_bus_new,
 //	.clk = mcp77_clk_new,
@@ -1257,7 +1257,7 @@ nvac_chipset = {
 static const struct nvkm_device_chip
 nvaf_chipset = {
 	.name = "MCP89",
-//	.bar = nv50_bar_new,
+	.bar = g84_bar_new,
 //	.bios = nvkm_bios_new,
 //	.bus = g94_bus_new,
 //	.clk = gt215_clk_new,
@@ -1289,7 +1289,7 @@ nvaf_chipset = {
 static const struct nvkm_device_chip
 nvc0_chipset = {
 	.name = "GF100",
-//	.bar = gf100_bar_new,
+	.bar = gf100_bar_new,
 //	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.clk = gf100_clk_new,
@@ -1324,7 +1324,7 @@ nvc0_chipset = {
 static const struct nvkm_device_chip
 nvc1_chipset = {
 	.name = "GF108",
-//	.bar = gf100_bar_new,
+	.bar = gf100_bar_new,
 //	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.clk = gf100_clk_new,
@@ -1358,7 +1358,7 @@ nvc1_chipset = {
 static const struct nvkm_device_chip
 nvc3_chipset = {
 	.name = "GF106",
-//	.bar = gf100_bar_new,
+	.bar = gf100_bar_new,
 //	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.clk = gf100_clk_new,
@@ -1392,7 +1392,7 @@ nvc3_chipset = {
 static const struct nvkm_device_chip
 nvc4_chipset = {
 	.name = "GF104",
-//	.bar = gf100_bar_new,
+	.bar = gf100_bar_new,
 //	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.clk = gf100_clk_new,
@@ -1427,7 +1427,7 @@ nvc4_chipset = {
 static const struct nvkm_device_chip
 nvc8_chipset = {
 	.name = "GF110",
-//	.bar = gf100_bar_new,
+	.bar = gf100_bar_new,
 //	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.clk = gf100_clk_new,
@@ -1462,7 +1462,7 @@ nvc8_chipset = {
 static const struct nvkm_device_chip
 nvce_chipset = {
 	.name = "GF114",
-//	.bar = gf100_bar_new,
+	.bar = gf100_bar_new,
 //	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.clk = gf100_clk_new,
@@ -1497,7 +1497,7 @@ nvce_chipset = {
 static const struct nvkm_device_chip
 nvcf_chipset = {
 	.name = "GF116",
-//	.bar = gf100_bar_new,
+	.bar = gf100_bar_new,
 //	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.clk = gf100_clk_new,
@@ -1531,7 +1531,7 @@ nvcf_chipset = {
 static const struct nvkm_device_chip
 nvd7_chipset = {
 	.name = "GF117",
-//	.bar = gf100_bar_new,
+	.bar = gf100_bar_new,
 //	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.clk = gf100_clk_new,
@@ -1563,7 +1563,7 @@ nvd7_chipset = {
 static const struct nvkm_device_chip
 nvd9_chipset = {
 	.name = "GF119",
-//	.bar = gf100_bar_new,
+	.bar = gf100_bar_new,
 //	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.clk = gf100_clk_new,
@@ -1597,7 +1597,7 @@ nvd9_chipset = {
 static const struct nvkm_device_chip
 nve4_chipset = {
 	.name = "GK104",
-//	.bar = gf100_bar_new,
+	.bar = gf100_bar_new,
 //	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.clk = gk104_clk_new,
@@ -1633,7 +1633,7 @@ nve4_chipset = {
 static const struct nvkm_device_chip
 nve6_chipset = {
 	.name = "GK106",
-//	.bar = gf100_bar_new,
+	.bar = gf100_bar_new,
 //	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.clk = gk104_clk_new,
@@ -1669,7 +1669,7 @@ nve6_chipset = {
 static const struct nvkm_device_chip
 nve7_chipset = {
 	.name = "GK107",
-//	.bar = gf100_bar_new,
+	.bar = gf100_bar_new,
 //	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.clk = gk104_clk_new,
@@ -1705,7 +1705,7 @@ nve7_chipset = {
 static const struct nvkm_device_chip
 nvea_chipset = {
 	.name = "GK20A",
-//	.bar = gk20a_bar_new,
+	.bar = gk20a_bar_new,
 //	.bus = gf100_bus_new,
 //	.clk = gk20a_clk_new,
 //	.fb = gk20a_fb_new,
@@ -1729,7 +1729,7 @@ nvea_chipset = {
 static const struct nvkm_device_chip
 nvf0_chipset = {
 	.name = "GK110",
-//	.bar = gf100_bar_new,
+	.bar = gf100_bar_new,
 //	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.clk = gk104_clk_new,
@@ -1765,7 +1765,7 @@ nvf0_chipset = {
 static const struct nvkm_device_chip
 nvf1_chipset = {
 	.name = "GK110B",
-//	.bar = gf100_bar_new,
+	.bar = gf100_bar_new,
 //	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.clk = gk104_clk_new,
@@ -1801,7 +1801,7 @@ nvf1_chipset = {
 static const struct nvkm_device_chip
 nv106_chipset = {
 	.name = "GK208B",
-//	.bar = gf100_bar_new,
+	.bar = gf100_bar_new,
 //	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.clk = gk104_clk_new,
@@ -1836,7 +1836,7 @@ nv106_chipset = {
 static const struct nvkm_device_chip
 nv108_chipset = {
 	.name = "GK208",
-//	.bar = gf100_bar_new,
+	.bar = gf100_bar_new,
 //	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.clk = gk104_clk_new,
@@ -1871,7 +1871,7 @@ nv108_chipset = {
 static const struct nvkm_device_chip
 nv117_chipset = {
 	.name = "GM107",
-//	.bar = gf100_bar_new,
+	.bar = gf100_bar_new,
 //	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.clk = gk104_clk_new,
@@ -1901,7 +1901,7 @@ nv117_chipset = {
 static const struct nvkm_device_chip
 nv124_chipset = {
 	.name = "GM204",
-//	.bar = gf100_bar_new,
+	.bar = gf100_bar_new,
 //	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.devinit = gm204_devinit_new,
@@ -1930,7 +1930,7 @@ nv124_chipset = {
 static const struct nvkm_device_chip
 nv126_chipset = {
 	.name = "GM206",
-//	.bar = gf100_bar_new,
+	.bar = gf100_bar_new,
 //	.bios = nvkm_bios_new,
 //	.bus = gf100_bus_new,
 //	.devinit = gm204_devinit_new,
@@ -1959,7 +1959,7 @@ nv126_chipset = {
 static const struct nvkm_device_chip
 nv12b_chipset = {
 	.name = "GM20B",
-//	.bar = gk20a_bar_new,
+	.bar = gk20a_bar_new,
 //	.bus = gf100_bus_new,
 //	.fb = gk20a_fb_new,
 //	.fuse = gm107_fuse_new,

commit ef8bc5760b51d69741ed5f42224f1fdd2935541a
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:19 2015 +1000

    drm/nouveau/core: kill some (now) dead code
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 73770fb4da97..46d616c7259d 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1977,7 +1977,6 @@ nv12b_chipset = {
 //	.sw = gf100_sw_new,
 };
 
-#include <core/parent.h>
 #include <core/client.h>
 
 struct nvkm_device *

commit 2a9f847f5d43d15c0401d050cdd77fb4cbe7da06
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:18 2015 +1000

    drm/nouveau/device: convert user class to new-style nvkm_object
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index a59a8e50706b..73770fb4da97 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1990,7 +1990,7 @@ nv_device(void *obj)
 			if (!nv_iclass(device, NV_SUBDEV_CLASS) &&
 			    device->parent == &nvkm_client(device)->object) {
 				struct {
-					struct nvkm_parent base;
+					struct nvkm_object base;
 					struct nvkm_device *device;
 				} *udevice = (void *)device;
 				return udevice->device;

commit 24bd0930bedea1182aaadc52757897d2b9b3ca99
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:18 2015 +1000

    drm/nouveau/client: convert to new-style nvkm_object
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index b3f333602582..a59a8e50706b 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -1988,7 +1988,7 @@ nv_device(void *obj)
 	if (device->engine == NULL) {
 		while (device && device->parent) {
 			if (!nv_iclass(device, NV_SUBDEV_CLASS) &&
-			    device->parent == &nvkm_client(device)->namedb.parent.object) {
+			    device->parent == &nvkm_client(device)->object) {
 				struct {
 					struct nvkm_parent base;
 					struct nvkm_device *device;

commit 6cf813fb26640ef539051fb7f965af8c9ff10d92
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:17 2015 +1000

    drm/nouveau/device: prepare for new-style subdevs
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index c7d8e2902c6c..b3f333602582 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -67,6 +67,1916 @@ nvkm_device_list(u64 *name, int size)
 	return nr;
 }
 
+static const struct nvkm_device_chip
+null_chipset = {
+	.name = "NULL",
+//	.bios = nvkm_bios_new,
+};
+
+static const struct nvkm_device_chip
+nv4_chipset = {
+	.name = "NV04",
+//	.bios = nvkm_bios_new,
+//	.bus = nv04_bus_new,
+//	.clk = nv04_clk_new,
+//	.devinit = nv04_devinit_new,
+//	.fb = nv04_fb_new,
+//	.i2c = nv04_i2c_new,
+//	.imem = nv04_instmem_new,
+//	.mc = nv04_mc_new,
+//	.mmu = nv04_mmu_new,
+//	.timer = nv04_timer_new,
+//	.disp = nv04_disp_new,
+//	.dma = nv04_dma_new,
+//	.fifo = nv04_fifo_new,
+//	.gr = nv04_gr_new,
+//	.sw = nv04_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv5_chipset = {
+	.name = "NV05",
+//	.bios = nvkm_bios_new,
+//	.bus = nv04_bus_new,
+//	.clk = nv04_clk_new,
+//	.devinit = nv05_devinit_new,
+//	.fb = nv04_fb_new,
+//	.i2c = nv04_i2c_new,
+//	.imem = nv04_instmem_new,
+//	.mc = nv04_mc_new,
+//	.mmu = nv04_mmu_new,
+//	.timer = nv04_timer_new,
+//	.disp = nv04_disp_new,
+//	.dma = nv04_dma_new,
+//	.fifo = nv04_fifo_new,
+//	.gr = nv04_gr_new,
+//	.sw = nv04_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv10_chipset = {
+	.name = "NV10",
+//	.bios = nvkm_bios_new,
+//	.bus = nv04_bus_new,
+//	.clk = nv04_clk_new,
+//	.devinit = nv10_devinit_new,
+//	.fb = nv10_fb_new,
+//	.gpio = nv10_gpio_new,
+//	.i2c = nv04_i2c_new,
+//	.imem = nv04_instmem_new,
+//	.mc = nv04_mc_new,
+//	.mmu = nv04_mmu_new,
+//	.timer = nv04_timer_new,
+//	.disp = nv04_disp_new,
+//	.dma = nv04_dma_new,
+//	.gr = nv10_gr_new,
+};
+
+static const struct nvkm_device_chip
+nv11_chipset = {
+	.name = "NV11",
+//	.bios = nvkm_bios_new,
+//	.bus = nv04_bus_new,
+//	.clk = nv04_clk_new,
+//	.devinit = nv10_devinit_new,
+//	.fb = nv10_fb_new,
+//	.gpio = nv10_gpio_new,
+//	.i2c = nv04_i2c_new,
+//	.imem = nv04_instmem_new,
+//	.mc = nv04_mc_new,
+//	.mmu = nv04_mmu_new,
+//	.timer = nv04_timer_new,
+//	.disp = nv04_disp_new,
+//	.dma = nv04_dma_new,
+//	.fifo = nv10_fifo_new,
+//	.gr = nv10_gr_new,
+//	.sw = nv10_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv15_chipset = {
+	.name = "NV15",
+//	.bios = nvkm_bios_new,
+//	.bus = nv04_bus_new,
+//	.clk = nv04_clk_new,
+//	.devinit = nv10_devinit_new,
+//	.fb = nv10_fb_new,
+//	.gpio = nv10_gpio_new,
+//	.i2c = nv04_i2c_new,
+//	.imem = nv04_instmem_new,
+//	.mc = nv04_mc_new,
+//	.mmu = nv04_mmu_new,
+//	.timer = nv04_timer_new,
+//	.disp = nv04_disp_new,
+//	.dma = nv04_dma_new,
+//	.fifo = nv10_fifo_new,
+//	.gr = nv10_gr_new,
+//	.sw = nv10_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv17_chipset = {
+	.name = "NV17",
+//	.bios = nvkm_bios_new,
+//	.bus = nv04_bus_new,
+//	.clk = nv04_clk_new,
+//	.devinit = nv10_devinit_new,
+//	.fb = nv10_fb_new,
+//	.gpio = nv10_gpio_new,
+//	.i2c = nv04_i2c_new,
+//	.imem = nv04_instmem_new,
+//	.mc = nv04_mc_new,
+//	.mmu = nv04_mmu_new,
+//	.timer = nv04_timer_new,
+//	.disp = nv04_disp_new,
+//	.dma = nv04_dma_new,
+//	.fifo = nv17_fifo_new,
+//	.gr = nv10_gr_new,
+//	.sw = nv10_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv18_chipset = {
+	.name = "NV18",
+//	.bios = nvkm_bios_new,
+//	.bus = nv04_bus_new,
+//	.clk = nv04_clk_new,
+//	.devinit = nv10_devinit_new,
+//	.fb = nv10_fb_new,
+//	.gpio = nv10_gpio_new,
+//	.i2c = nv04_i2c_new,
+//	.imem = nv04_instmem_new,
+//	.mc = nv04_mc_new,
+//	.mmu = nv04_mmu_new,
+//	.timer = nv04_timer_new,
+//	.disp = nv04_disp_new,
+//	.dma = nv04_dma_new,
+//	.fifo = nv17_fifo_new,
+//	.gr = nv10_gr_new,
+//	.sw = nv10_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv1a_chipset = {
+	.name = "nForce",
+//	.bios = nvkm_bios_new,
+//	.bus = nv04_bus_new,
+//	.clk = nv04_clk_new,
+//	.devinit = nv1a_devinit_new,
+//	.fb = nv1a_fb_new,
+//	.gpio = nv10_gpio_new,
+//	.i2c = nv04_i2c_new,
+//	.imem = nv04_instmem_new,
+//	.mc = nv04_mc_new,
+//	.mmu = nv04_mmu_new,
+//	.timer = nv04_timer_new,
+//	.disp = nv04_disp_new,
+//	.dma = nv04_dma_new,
+//	.fifo = nv10_fifo_new,
+//	.gr = nv10_gr_new,
+//	.sw = nv10_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv1f_chipset = {
+	.name = "nForce2",
+//	.bios = nvkm_bios_new,
+//	.bus = nv04_bus_new,
+//	.clk = nv04_clk_new,
+//	.devinit = nv1a_devinit_new,
+//	.fb = nv1a_fb_new,
+//	.gpio = nv10_gpio_new,
+//	.i2c = nv04_i2c_new,
+//	.imem = nv04_instmem_new,
+//	.mc = nv04_mc_new,
+//	.mmu = nv04_mmu_new,
+//	.timer = nv04_timer_new,
+//	.disp = nv04_disp_new,
+//	.dma = nv04_dma_new,
+//	.fifo = nv17_fifo_new,
+//	.gr = nv10_gr_new,
+//	.sw = nv10_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv20_chipset = {
+	.name = "NV20",
+//	.bios = nvkm_bios_new,
+//	.bus = nv04_bus_new,
+//	.clk = nv04_clk_new,
+//	.devinit = nv20_devinit_new,
+//	.fb = nv20_fb_new,
+//	.gpio = nv10_gpio_new,
+//	.i2c = nv04_i2c_new,
+//	.imem = nv04_instmem_new,
+//	.mc = nv04_mc_new,
+//	.mmu = nv04_mmu_new,
+//	.timer = nv04_timer_new,
+//	.disp = nv04_disp_new,
+//	.dma = nv04_dma_new,
+//	.fifo = nv17_fifo_new,
+//	.gr = nv20_gr_new,
+//	.sw = nv10_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv25_chipset = {
+	.name = "NV25",
+//	.bios = nvkm_bios_new,
+//	.bus = nv04_bus_new,
+//	.clk = nv04_clk_new,
+//	.devinit = nv20_devinit_new,
+//	.fb = nv25_fb_new,
+//	.gpio = nv10_gpio_new,
+//	.i2c = nv04_i2c_new,
+//	.imem = nv04_instmem_new,
+//	.mc = nv04_mc_new,
+//	.mmu = nv04_mmu_new,
+//	.timer = nv04_timer_new,
+//	.disp = nv04_disp_new,
+//	.dma = nv04_dma_new,
+//	.fifo = nv17_fifo_new,
+//	.gr = nv25_gr_new,
+//	.sw = nv10_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv28_chipset = {
+	.name = "NV28",
+//	.bios = nvkm_bios_new,
+//	.bus = nv04_bus_new,
+//	.clk = nv04_clk_new,
+//	.devinit = nv20_devinit_new,
+//	.fb = nv25_fb_new,
+//	.gpio = nv10_gpio_new,
+//	.i2c = nv04_i2c_new,
+//	.imem = nv04_instmem_new,
+//	.mc = nv04_mc_new,
+//	.mmu = nv04_mmu_new,
+//	.timer = nv04_timer_new,
+//	.disp = nv04_disp_new,
+//	.dma = nv04_dma_new,
+//	.fifo = nv17_fifo_new,
+//	.gr = nv25_gr_new,
+//	.sw = nv10_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv2a_chipset = {
+	.name = "NV2A",
+//	.bios = nvkm_bios_new,
+//	.bus = nv04_bus_new,
+//	.clk = nv04_clk_new,
+//	.devinit = nv20_devinit_new,
+//	.fb = nv25_fb_new,
+//	.gpio = nv10_gpio_new,
+//	.i2c = nv04_i2c_new,
+//	.imem = nv04_instmem_new,
+//	.mc = nv04_mc_new,
+//	.mmu = nv04_mmu_new,
+//	.timer = nv04_timer_new,
+//	.disp = nv04_disp_new,
+//	.dma = nv04_dma_new,
+//	.fifo = nv17_fifo_new,
+//	.gr = nv2a_gr_new,
+//	.sw = nv10_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv30_chipset = {
+	.name = "NV30",
+//	.bios = nvkm_bios_new,
+//	.bus = nv04_bus_new,
+//	.clk = nv04_clk_new,
+//	.devinit = nv20_devinit_new,
+//	.fb = nv30_fb_new,
+//	.gpio = nv10_gpio_new,
+//	.i2c = nv04_i2c_new,
+//	.imem = nv04_instmem_new,
+//	.mc = nv04_mc_new,
+//	.mmu = nv04_mmu_new,
+//	.timer = nv04_timer_new,
+//	.disp = nv04_disp_new,
+//	.dma = nv04_dma_new,
+//	.fifo = nv17_fifo_new,
+//	.gr = nv30_gr_new,
+//	.sw = nv10_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv31_chipset = {
+	.name = "NV31",
+//	.bios = nvkm_bios_new,
+//	.bus = nv31_bus_new,
+//	.clk = nv04_clk_new,
+//	.devinit = nv20_devinit_new,
+//	.fb = nv30_fb_new,
+//	.gpio = nv10_gpio_new,
+//	.i2c = nv04_i2c_new,
+//	.imem = nv04_instmem_new,
+//	.mc = nv04_mc_new,
+//	.mmu = nv04_mmu_new,
+//	.timer = nv04_timer_new,
+//	.disp = nv04_disp_new,
+//	.dma = nv04_dma_new,
+//	.fifo = nv17_fifo_new,
+//	.gr = nv30_gr_new,
+//	.mpeg = nv31_mpeg_new,
+//	.sw = nv10_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv34_chipset = {
+	.name = "NV34",
+//	.bios = nvkm_bios_new,
+//	.bus = nv31_bus_new,
+//	.clk = nv04_clk_new,
+//	.devinit = nv10_devinit_new,
+//	.fb = nv10_fb_new,
+//	.gpio = nv10_gpio_new,
+//	.i2c = nv04_i2c_new,
+//	.imem = nv04_instmem_new,
+//	.mc = nv04_mc_new,
+//	.mmu = nv04_mmu_new,
+//	.timer = nv04_timer_new,
+//	.disp = nv04_disp_new,
+//	.dma = nv04_dma_new,
+//	.fifo = nv17_fifo_new,
+//	.gr = nv34_gr_new,
+//	.mpeg = nv31_mpeg_new,
+//	.sw = nv10_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv35_chipset = {
+	.name = "NV35",
+//	.bios = nvkm_bios_new,
+//	.bus = nv04_bus_new,
+//	.clk = nv04_clk_new,
+//	.devinit = nv20_devinit_new,
+//	.fb = nv35_fb_new,
+//	.gpio = nv10_gpio_new,
+//	.i2c = nv04_i2c_new,
+//	.imem = nv04_instmem_new,
+//	.mc = nv04_mc_new,
+//	.mmu = nv04_mmu_new,
+//	.timer = nv04_timer_new,
+//	.disp = nv04_disp_new,
+//	.dma = nv04_dma_new,
+//	.fifo = nv17_fifo_new,
+//	.gr = nv35_gr_new,
+//	.sw = nv10_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv36_chipset = {
+	.name = "NV36",
+//	.bios = nvkm_bios_new,
+//	.bus = nv31_bus_new,
+//	.clk = nv04_clk_new,
+//	.devinit = nv20_devinit_new,
+//	.fb = nv36_fb_new,
+//	.gpio = nv10_gpio_new,
+//	.i2c = nv04_i2c_new,
+//	.imem = nv04_instmem_new,
+//	.mc = nv04_mc_new,
+//	.mmu = nv04_mmu_new,
+//	.timer = nv04_timer_new,
+//	.disp = nv04_disp_new,
+//	.dma = nv04_dma_new,
+//	.fifo = nv17_fifo_new,
+//	.gr = nv35_gr_new,
+//	.mpeg = nv31_mpeg_new,
+//	.sw = nv10_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv40_chipset = {
+	.name = "NV40",
+//	.bios = nvkm_bios_new,
+//	.bus = nv31_bus_new,
+//	.clk = nv40_clk_new,
+//	.devinit = nv1a_devinit_new,
+//	.fb = nv40_fb_new,
+//	.gpio = nv10_gpio_new,
+//	.i2c = nv04_i2c_new,
+//	.imem = nv40_instmem_new,
+//	.mc = nv40_mc_new,
+//	.mmu = nv04_mmu_new,
+//	.therm = nv40_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.disp = nv04_disp_new,
+//	.dma = nv04_dma_new,
+//	.fifo = nv40_fifo_new,
+//	.gr = nv40_gr_new,
+//	.mpeg = nv40_mpeg_new,
+//	.pm = nv40_pm_new,
+//	.sw = nv10_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv41_chipset = {
+	.name = "NV41",
+//	.bios = nvkm_bios_new,
+//	.bus = nv31_bus_new,
+//	.clk = nv40_clk_new,
+//	.devinit = nv1a_devinit_new,
+//	.fb = nv41_fb_new,
+//	.gpio = nv10_gpio_new,
+//	.i2c = nv04_i2c_new,
+//	.imem = nv40_instmem_new,
+//	.mc = nv40_mc_new,
+//	.mmu = nv41_mmu_new,
+//	.therm = nv40_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.disp = nv04_disp_new,
+//	.dma = nv04_dma_new,
+//	.fifo = nv40_fifo_new,
+//	.gr = nv40_gr_new,
+//	.mpeg = nv40_mpeg_new,
+//	.pm = nv40_pm_new,
+//	.sw = nv10_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv42_chipset = {
+	.name = "NV42",
+//	.bios = nvkm_bios_new,
+//	.bus = nv31_bus_new,
+//	.clk = nv40_clk_new,
+//	.devinit = nv1a_devinit_new,
+//	.fb = nv41_fb_new,
+//	.gpio = nv10_gpio_new,
+//	.i2c = nv04_i2c_new,
+//	.imem = nv40_instmem_new,
+//	.mc = nv40_mc_new,
+//	.mmu = nv41_mmu_new,
+//	.therm = nv40_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.disp = nv04_disp_new,
+//	.dma = nv04_dma_new,
+//	.fifo = nv40_fifo_new,
+//	.gr = nv40_gr_new,
+//	.mpeg = nv40_mpeg_new,
+//	.pm = nv40_pm_new,
+//	.sw = nv10_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv43_chipset = {
+	.name = "NV43",
+//	.bios = nvkm_bios_new,
+//	.bus = nv31_bus_new,
+//	.clk = nv40_clk_new,
+//	.devinit = nv1a_devinit_new,
+//	.fb = nv41_fb_new,
+//	.gpio = nv10_gpio_new,
+//	.i2c = nv04_i2c_new,
+//	.imem = nv40_instmem_new,
+//	.mc = nv40_mc_new,
+//	.mmu = nv41_mmu_new,
+//	.therm = nv40_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.disp = nv04_disp_new,
+//	.dma = nv04_dma_new,
+//	.fifo = nv40_fifo_new,
+//	.gr = nv40_gr_new,
+//	.mpeg = nv40_mpeg_new,
+//	.pm = nv40_pm_new,
+//	.sw = nv10_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv44_chipset = {
+	.name = "NV44",
+//	.bios = nvkm_bios_new,
+//	.bus = nv31_bus_new,
+//	.clk = nv40_clk_new,
+//	.devinit = nv1a_devinit_new,
+//	.fb = nv44_fb_new,
+//	.gpio = nv10_gpio_new,
+//	.i2c = nv04_i2c_new,
+//	.imem = nv40_instmem_new,
+//	.mc = nv44_mc_new,
+//	.mmu = nv44_mmu_new,
+//	.therm = nv40_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.disp = nv04_disp_new,
+//	.dma = nv04_dma_new,
+//	.fifo = nv40_fifo_new,
+//	.gr = nv40_gr_new,
+//	.mpeg = nv44_mpeg_new,
+//	.pm = nv40_pm_new,
+//	.sw = nv10_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv45_chipset = {
+	.name = "NV45",
+//	.bios = nvkm_bios_new,
+//	.bus = nv31_bus_new,
+//	.clk = nv40_clk_new,
+//	.devinit = nv1a_devinit_new,
+//	.fb = nv40_fb_new,
+//	.gpio = nv10_gpio_new,
+//	.i2c = nv04_i2c_new,
+//	.imem = nv40_instmem_new,
+//	.mc = nv40_mc_new,
+//	.mmu = nv04_mmu_new,
+//	.therm = nv40_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.disp = nv04_disp_new,
+//	.dma = nv04_dma_new,
+//	.fifo = nv40_fifo_new,
+//	.gr = nv40_gr_new,
+//	.mpeg = nv44_mpeg_new,
+//	.pm = nv40_pm_new,
+//	.sw = nv10_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv46_chipset = {
+	.name = "G72",
+//	.bios = nvkm_bios_new,
+//	.bus = nv31_bus_new,
+//	.clk = nv40_clk_new,
+//	.devinit = nv1a_devinit_new,
+//	.fb = nv46_fb_new,
+//	.gpio = nv10_gpio_new,
+//	.i2c = nv04_i2c_new,
+//	.imem = nv40_instmem_new,
+//	.mc = nv44_mc_new,
+//	.mmu = nv44_mmu_new,
+//	.therm = nv40_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.disp = nv04_disp_new,
+//	.dma = nv04_dma_new,
+//	.fifo = nv40_fifo_new,
+//	.gr = nv40_gr_new,
+//	.mpeg = nv44_mpeg_new,
+//	.pm = nv40_pm_new,
+//	.sw = nv10_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv47_chipset = {
+	.name = "G70",
+//	.bios = nvkm_bios_new,
+//	.bus = nv31_bus_new,
+//	.clk = nv40_clk_new,
+//	.devinit = nv1a_devinit_new,
+//	.fb = nv47_fb_new,
+//	.gpio = nv10_gpio_new,
+//	.i2c = nv04_i2c_new,
+//	.imem = nv40_instmem_new,
+//	.mc = nv40_mc_new,
+//	.mmu = nv41_mmu_new,
+//	.therm = nv40_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.disp = nv04_disp_new,
+//	.dma = nv04_dma_new,
+//	.fifo = nv40_fifo_new,
+//	.gr = nv40_gr_new,
+//	.mpeg = nv44_mpeg_new,
+//	.pm = nv40_pm_new,
+//	.sw = nv10_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv49_chipset = {
+	.name = "G71",
+//	.bios = nvkm_bios_new,
+//	.bus = nv31_bus_new,
+//	.clk = nv40_clk_new,
+//	.devinit = nv1a_devinit_new,
+//	.fb = nv49_fb_new,
+//	.gpio = nv10_gpio_new,
+//	.i2c = nv04_i2c_new,
+//	.imem = nv40_instmem_new,
+//	.mc = nv40_mc_new,
+//	.mmu = nv41_mmu_new,
+//	.therm = nv40_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.disp = nv04_disp_new,
+//	.dma = nv04_dma_new,
+//	.fifo = nv40_fifo_new,
+//	.gr = nv40_gr_new,
+//	.mpeg = nv44_mpeg_new,
+//	.pm = nv40_pm_new,
+//	.sw = nv10_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv4a_chipset = {
+	.name = "NV44A",
+//	.bios = nvkm_bios_new,
+//	.bus = nv31_bus_new,
+//	.clk = nv40_clk_new,
+//	.devinit = nv1a_devinit_new,
+//	.fb = nv44_fb_new,
+//	.gpio = nv10_gpio_new,
+//	.i2c = nv04_i2c_new,
+//	.imem = nv40_instmem_new,
+//	.mc = nv44_mc_new,
+//	.mmu = nv44_mmu_new,
+//	.therm = nv40_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.disp = nv04_disp_new,
+//	.dma = nv04_dma_new,
+//	.fifo = nv40_fifo_new,
+//	.gr = nv40_gr_new,
+//	.mpeg = nv44_mpeg_new,
+//	.pm = nv40_pm_new,
+//	.sw = nv10_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv4b_chipset = {
+	.name = "G73",
+//	.bios = nvkm_bios_new,
+//	.bus = nv31_bus_new,
+//	.clk = nv40_clk_new,
+//	.devinit = nv1a_devinit_new,
+//	.fb = nv49_fb_new,
+//	.gpio = nv10_gpio_new,
+//	.i2c = nv04_i2c_new,
+//	.imem = nv40_instmem_new,
+//	.mc = nv40_mc_new,
+//	.mmu = nv41_mmu_new,
+//	.therm = nv40_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.disp = nv04_disp_new,
+//	.dma = nv04_dma_new,
+//	.fifo = nv40_fifo_new,
+//	.gr = nv40_gr_new,
+//	.mpeg = nv44_mpeg_new,
+//	.pm = nv40_pm_new,
+//	.sw = nv10_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv4c_chipset = {
+	.name = "C61",
+//	.bios = nvkm_bios_new,
+//	.bus = nv31_bus_new,
+//	.clk = nv40_clk_new,
+//	.devinit = nv1a_devinit_new,
+//	.fb = nv46_fb_new,
+//	.gpio = nv10_gpio_new,
+//	.i2c = nv04_i2c_new,
+//	.imem = nv40_instmem_new,
+//	.mc = nv4c_mc_new,
+//	.mmu = nv44_mmu_new,
+//	.therm = nv40_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.disp = nv04_disp_new,
+//	.dma = nv04_dma_new,
+//	.fifo = nv40_fifo_new,
+//	.gr = nv40_gr_new,
+//	.mpeg = nv44_mpeg_new,
+//	.pm = nv40_pm_new,
+//	.sw = nv10_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv4e_chipset = {
+	.name = "C51",
+//	.bios = nvkm_bios_new,
+//	.bus = nv31_bus_new,
+//	.clk = nv40_clk_new,
+//	.devinit = nv1a_devinit_new,
+//	.fb = nv4e_fb_new,
+//	.gpio = nv10_gpio_new,
+//	.i2c = nv4e_i2c_new,
+//	.imem = nv40_instmem_new,
+//	.mc = nv4c_mc_new,
+//	.mmu = nv44_mmu_new,
+//	.therm = nv40_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.disp = nv04_disp_new,
+//	.dma = nv04_dma_new,
+//	.fifo = nv40_fifo_new,
+//	.gr = nv40_gr_new,
+//	.mpeg = nv44_mpeg_new,
+//	.pm = nv40_pm_new,
+//	.sw = nv10_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv50_chipset = {
+	.name = "G80",
+//	.bar = nv50_bar_new,
+//	.bios = nvkm_bios_new,
+//	.bus = nv50_bus_new,
+//	.clk = nv50_clk_new,
+//	.devinit = nv50_devinit_new,
+//	.fb = nv50_fb_new,
+//	.fuse = nv50_fuse_new,
+//	.gpio = nv50_gpio_new,
+//	.i2c = nv50_i2c_new,
+//	.imem = nv50_instmem_new,
+//	.mc = nv50_mc_new,
+//	.mmu = nv50_mmu_new,
+//	.mxm = nv50_mxm_new,
+//	.therm = nv50_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.disp = nv50_disp_new,
+//	.dma = nv50_dma_new,
+//	.fifo = nv50_fifo_new,
+//	.gr = nv50_gr_new,
+//	.mpeg = nv50_mpeg_new,
+//	.pm = nv50_pm_new,
+//	.sw = nv50_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv63_chipset = {
+	.name = "C73",
+//	.bios = nvkm_bios_new,
+//	.bus = nv31_bus_new,
+//	.clk = nv40_clk_new,
+//	.devinit = nv1a_devinit_new,
+//	.fb = nv46_fb_new,
+//	.gpio = nv10_gpio_new,
+//	.i2c = nv04_i2c_new,
+//	.imem = nv40_instmem_new,
+//	.mc = nv4c_mc_new,
+//	.mmu = nv44_mmu_new,
+//	.therm = nv40_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.disp = nv04_disp_new,
+//	.dma = nv04_dma_new,
+//	.fifo = nv40_fifo_new,
+//	.gr = nv40_gr_new,
+//	.mpeg = nv44_mpeg_new,
+//	.pm = nv40_pm_new,
+//	.sw = nv10_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv67_chipset = {
+	.name = "C67",
+//	.bios = nvkm_bios_new,
+//	.bus = nv31_bus_new,
+//	.clk = nv40_clk_new,
+//	.devinit = nv1a_devinit_new,
+//	.fb = nv46_fb_new,
+//	.gpio = nv10_gpio_new,
+//	.i2c = nv04_i2c_new,
+//	.imem = nv40_instmem_new,
+//	.mc = nv4c_mc_new,
+//	.mmu = nv44_mmu_new,
+//	.therm = nv40_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.disp = nv04_disp_new,
+//	.dma = nv04_dma_new,
+//	.fifo = nv40_fifo_new,
+//	.gr = nv40_gr_new,
+//	.mpeg = nv44_mpeg_new,
+//	.pm = nv40_pm_new,
+//	.sw = nv10_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv68_chipset = {
+	.name = "C68",
+//	.bios = nvkm_bios_new,
+//	.bus = nv31_bus_new,
+//	.clk = nv40_clk_new,
+//	.devinit = nv1a_devinit_new,
+//	.fb = nv46_fb_new,
+//	.gpio = nv10_gpio_new,
+//	.i2c = nv04_i2c_new,
+//	.imem = nv40_instmem_new,
+//	.mc = nv4c_mc_new,
+//	.mmu = nv44_mmu_new,
+//	.therm = nv40_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.disp = nv04_disp_new,
+//	.dma = nv04_dma_new,
+//	.fifo = nv40_fifo_new,
+//	.gr = nv40_gr_new,
+//	.mpeg = nv44_mpeg_new,
+//	.pm = nv40_pm_new,
+//	.sw = nv10_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv84_chipset = {
+	.name = "G84",
+//	.bar = nv50_bar_new,
+//	.bios = nvkm_bios_new,
+//	.bus = nv50_bus_new,
+//	.clk = g84_clk_new,
+//	.devinit = g84_devinit_new,
+//	.fb = g84_fb_new,
+//	.fuse = nv50_fuse_new,
+//	.gpio = nv50_gpio_new,
+//	.i2c = nv50_i2c_new,
+//	.imem = nv50_instmem_new,
+//	.mc = nv50_mc_new,
+//	.mmu = nv50_mmu_new,
+//	.mxm = nv50_mxm_new,
+//	.therm = g84_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.bsp = g84_bsp_new,
+//	.cipher = g84_cipher_new,
+//	.disp = g84_disp_new,
+//	.dma = nv50_dma_new,
+//	.fifo = g84_fifo_new,
+//	.gr = nv50_gr_new,
+//	.mpeg = g84_mpeg_new,
+//	.pm = g84_pm_new,
+//	.sw = nv50_sw_new,
+//	.vp = g84_vp_new,
+};
+
+static const struct nvkm_device_chip
+nv86_chipset = {
+	.name = "G86",
+//	.bar = nv50_bar_new,
+//	.bios = nvkm_bios_new,
+//	.bus = nv50_bus_new,
+//	.clk = g84_clk_new,
+//	.devinit = g84_devinit_new,
+//	.fb = g84_fb_new,
+//	.fuse = nv50_fuse_new,
+//	.gpio = nv50_gpio_new,
+//	.i2c = nv50_i2c_new,
+//	.imem = nv50_instmem_new,
+//	.mc = nv50_mc_new,
+//	.mmu = nv50_mmu_new,
+//	.mxm = nv50_mxm_new,
+//	.therm = g84_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.bsp = g84_bsp_new,
+//	.cipher = g84_cipher_new,
+//	.disp = g84_disp_new,
+//	.dma = nv50_dma_new,
+//	.fifo = g84_fifo_new,
+//	.gr = nv50_gr_new,
+//	.mpeg = g84_mpeg_new,
+//	.pm = g84_pm_new,
+//	.sw = nv50_sw_new,
+//	.vp = g84_vp_new,
+};
+
+static const struct nvkm_device_chip
+nv92_chipset = {
+	.name = "G92",
+//	.bar = nv50_bar_new,
+//	.bios = nvkm_bios_new,
+//	.bus = nv50_bus_new,
+//	.clk = g84_clk_new,
+//	.devinit = g84_devinit_new,
+//	.fb = g84_fb_new,
+//	.fuse = nv50_fuse_new,
+//	.gpio = nv50_gpio_new,
+//	.i2c = nv50_i2c_new,
+//	.imem = nv50_instmem_new,
+//	.mc = nv50_mc_new,
+//	.mmu = nv50_mmu_new,
+//	.mxm = nv50_mxm_new,
+//	.therm = g84_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.bsp = g84_bsp_new,
+//	.cipher = g84_cipher_new,
+//	.disp = g84_disp_new,
+//	.dma = nv50_dma_new,
+//	.fifo = g84_fifo_new,
+//	.gr = nv50_gr_new,
+//	.mpeg = g84_mpeg_new,
+//	.pm = g84_pm_new,
+//	.sw = nv50_sw_new,
+//	.vp = g84_vp_new,
+};
+
+static const struct nvkm_device_chip
+nv94_chipset = {
+	.name = "G94",
+//	.bar = nv50_bar_new,
+//	.bios = nvkm_bios_new,
+//	.bus = g94_bus_new,
+//	.clk = g84_clk_new,
+//	.devinit = g84_devinit_new,
+//	.fb = g84_fb_new,
+//	.fuse = nv50_fuse_new,
+//	.gpio = g94_gpio_new,
+//	.i2c = g94_i2c_new,
+//	.imem = nv50_instmem_new,
+//	.mc = g94_mc_new,
+//	.mmu = nv50_mmu_new,
+//	.mxm = nv50_mxm_new,
+//	.therm = g84_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.bsp = g84_bsp_new,
+//	.cipher = g84_cipher_new,
+//	.disp = g94_disp_new,
+//	.dma = nv50_dma_new,
+//	.fifo = g84_fifo_new,
+//	.gr = nv50_gr_new,
+//	.mpeg = g84_mpeg_new,
+//	.pm = g84_pm_new,
+//	.sw = nv50_sw_new,
+//	.vp = g84_vp_new,
+};
+
+static const struct nvkm_device_chip
+nv96_chipset = {
+	.name = "G96",
+//	.bios = nvkm_bios_new,
+//	.gpio = g94_gpio_new,
+//	.i2c = g94_i2c_new,
+//	.fuse = nv50_fuse_new,
+//	.clk = g84_clk_new,
+//	.therm = g84_therm_new,
+//	.mxm = nv50_mxm_new,
+//	.devinit = g84_devinit_new,
+//	.mc = g94_mc_new,
+//	.bus = g94_bus_new,
+//	.timer = nv04_timer_new,
+//	.fb = g84_fb_new,
+//	.imem = nv50_instmem_new,
+//	.mmu = nv50_mmu_new,
+//	.bar = nv50_bar_new,
+//	.volt = nv40_volt_new,
+//	.dma = nv50_dma_new,
+//	.fifo = g84_fifo_new,
+//	.sw = nv50_sw_new,
+//	.gr = nv50_gr_new,
+//	.mpeg = g84_mpeg_new,
+//	.vp = g84_vp_new,
+//	.cipher = g84_cipher_new,
+//	.bsp = g84_bsp_new,
+//	.disp = g94_disp_new,
+//	.pm = g84_pm_new,
+};
+
+static const struct nvkm_device_chip
+nv98_chipset = {
+	.name = "G98",
+//	.bios = nvkm_bios_new,
+//	.gpio = g94_gpio_new,
+//	.i2c = g94_i2c_new,
+//	.fuse = nv50_fuse_new,
+//	.clk = g84_clk_new,
+//	.therm = g84_therm_new,
+//	.mxm = nv50_mxm_new,
+//	.devinit = g98_devinit_new,
+//	.mc = g98_mc_new,
+//	.bus = g94_bus_new,
+//	.timer = nv04_timer_new,
+//	.fb = g84_fb_new,
+//	.imem = nv50_instmem_new,
+//	.mmu = nv50_mmu_new,
+//	.bar = nv50_bar_new,
+//	.volt = nv40_volt_new,
+//	.dma = nv50_dma_new,
+//	.fifo = g84_fifo_new,
+//	.sw = nv50_sw_new,
+//	.gr = nv50_gr_new,
+//	.mspdec = g98_mspdec_new,
+//	.sec = g98_sec_new,
+//	.msvld = g98_msvld_new,
+//	.msppp = g98_msppp_new,
+//	.disp = g94_disp_new,
+//	.pm = g84_pm_new,
+};
+
+static const struct nvkm_device_chip
+nva0_chipset = {
+	.name = "GT200",
+//	.bar = nv50_bar_new,
+//	.bios = nvkm_bios_new,
+//	.bus = g94_bus_new,
+//	.clk = g84_clk_new,
+//	.devinit = g84_devinit_new,
+//	.fb = g84_fb_new,
+//	.fuse = nv50_fuse_new,
+//	.gpio = g94_gpio_new,
+//	.i2c = nv50_i2c_new,
+//	.imem = nv50_instmem_new,
+//	.mc = g98_mc_new,
+//	.mmu = nv50_mmu_new,
+//	.mxm = nv50_mxm_new,
+//	.therm = g84_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.bsp = g84_bsp_new,
+//	.cipher = g84_cipher_new,
+//	.disp = gt200_disp_new,
+//	.dma = nv50_dma_new,
+//	.fifo = g84_fifo_new,
+//	.gr = nv50_gr_new,
+//	.mpeg = g84_mpeg_new,
+//	.pm = gt200_pm_new,
+//	.sw = nv50_sw_new,
+//	.vp = g84_vp_new,
+};
+
+static const struct nvkm_device_chip
+nva3_chipset = {
+	.name = "GT215",
+//	.bar = nv50_bar_new,
+//	.bios = nvkm_bios_new,
+//	.bus = g94_bus_new,
+//	.clk = gt215_clk_new,
+//	.devinit = gt215_devinit_new,
+//	.fb = gt215_fb_new,
+//	.fuse = nv50_fuse_new,
+//	.gpio = g94_gpio_new,
+//	.i2c = g94_i2c_new,
+//	.imem = nv50_instmem_new,
+//	.mc = g98_mc_new,
+//	.mmu = nv50_mmu_new,
+//	.mxm = nv50_mxm_new,
+//	.pmu = gt215_pmu_new,
+//	.therm = gt215_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.ce[0] = gt215_ce_new,
+//	.disp = gt215_disp_new,
+//	.dma = nv50_dma_new,
+//	.fifo = g84_fifo_new,
+//	.gr = nv50_gr_new,
+//	.mpeg = g84_mpeg_new,
+//	.mspdec = g98_mspdec_new,
+//	.msppp = g98_msppp_new,
+//	.msvld = g98_msvld_new,
+//	.pm = gt215_pm_new,
+//	.sw = nv50_sw_new,
+};
+
+static const struct nvkm_device_chip
+nva5_chipset = {
+	.name = "GT216",
+//	.bar = nv50_bar_new,
+//	.bios = nvkm_bios_new,
+//	.bus = g94_bus_new,
+//	.clk = gt215_clk_new,
+//	.devinit = gt215_devinit_new,
+//	.fb = gt215_fb_new,
+//	.fuse = nv50_fuse_new,
+//	.gpio = g94_gpio_new,
+//	.i2c = g94_i2c_new,
+//	.imem = nv50_instmem_new,
+//	.mc = g98_mc_new,
+//	.mmu = nv50_mmu_new,
+//	.mxm = nv50_mxm_new,
+//	.pmu = gt215_pmu_new,
+//	.therm = gt215_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.ce[0] = gt215_ce_new,
+//	.disp = gt215_disp_new,
+//	.dma = nv50_dma_new,
+//	.fifo = g84_fifo_new,
+//	.gr = nv50_gr_new,
+//	.mspdec = g98_mspdec_new,
+//	.msppp = g98_msppp_new,
+//	.msvld = g98_msvld_new,
+//	.pm = gt215_pm_new,
+//	.sw = nv50_sw_new,
+};
+
+static const struct nvkm_device_chip
+nva8_chipset = {
+	.name = "GT218",
+//	.bar = nv50_bar_new,
+//	.bios = nvkm_bios_new,
+//	.bus = g94_bus_new,
+//	.clk = gt215_clk_new,
+//	.devinit = gt215_devinit_new,
+//	.fb = gt215_fb_new,
+//	.fuse = nv50_fuse_new,
+//	.gpio = g94_gpio_new,
+//	.i2c = g94_i2c_new,
+//	.imem = nv50_instmem_new,
+//	.mc = g98_mc_new,
+//	.mmu = nv50_mmu_new,
+//	.mxm = nv50_mxm_new,
+//	.pmu = gt215_pmu_new,
+//	.therm = gt215_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.ce[0] = gt215_ce_new,
+//	.disp = gt215_disp_new,
+//	.dma = nv50_dma_new,
+//	.fifo = g84_fifo_new,
+//	.gr = nv50_gr_new,
+//	.mspdec = g98_mspdec_new,
+//	.msppp = g98_msppp_new,
+//	.msvld = g98_msvld_new,
+//	.pm = gt215_pm_new,
+//	.sw = nv50_sw_new,
+};
+
+static const struct nvkm_device_chip
+nvaa_chipset = {
+	.name = "MCP77/MCP78",
+//	.bar = nv50_bar_new,
+//	.bios = nvkm_bios_new,
+//	.bus = g94_bus_new,
+//	.clk = mcp77_clk_new,
+//	.devinit = g98_devinit_new,
+//	.fb = mcp77_fb_new,
+//	.fuse = nv50_fuse_new,
+//	.gpio = g94_gpio_new,
+//	.i2c = g94_i2c_new,
+//	.imem = nv50_instmem_new,
+//	.mc = g98_mc_new,
+//	.mmu = nv50_mmu_new,
+//	.mxm = nv50_mxm_new,
+//	.therm = g84_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.disp = g94_disp_new,
+//	.dma = nv50_dma_new,
+//	.fifo = g84_fifo_new,
+//	.gr = nv50_gr_new,
+//	.mspdec = g98_mspdec_new,
+//	.msppp = g98_msppp_new,
+//	.msvld = g98_msvld_new,
+//	.pm = g84_pm_new,
+//	.sec = g98_sec_new,
+//	.sw = nv50_sw_new,
+};
+
+static const struct nvkm_device_chip
+nvac_chipset = {
+	.name = "MCP79/MCP7A",
+//	.bar = nv50_bar_new,
+//	.bios = nvkm_bios_new,
+//	.bus = g94_bus_new,
+//	.clk = mcp77_clk_new,
+//	.devinit = g98_devinit_new,
+//	.fb = mcp77_fb_new,
+//	.fuse = nv50_fuse_new,
+//	.gpio = g94_gpio_new,
+//	.i2c = g94_i2c_new,
+//	.imem = nv50_instmem_new,
+//	.mc = g98_mc_new,
+//	.mmu = nv50_mmu_new,
+//	.mxm = nv50_mxm_new,
+//	.therm = g84_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.disp = g94_disp_new,
+//	.dma = nv50_dma_new,
+//	.fifo = g84_fifo_new,
+//	.gr = nv50_gr_new,
+//	.mspdec = g98_mspdec_new,
+//	.msppp = g98_msppp_new,
+//	.msvld = g98_msvld_new,
+//	.pm = g84_pm_new,
+//	.sec = g98_sec_new,
+//	.sw = nv50_sw_new,
+};
+
+static const struct nvkm_device_chip
+nvaf_chipset = {
+	.name = "MCP89",
+//	.bar = nv50_bar_new,
+//	.bios = nvkm_bios_new,
+//	.bus = g94_bus_new,
+//	.clk = gt215_clk_new,
+//	.devinit = mcp89_devinit_new,
+//	.fb = mcp89_fb_new,
+//	.fuse = nv50_fuse_new,
+//	.gpio = g94_gpio_new,
+//	.i2c = g94_i2c_new,
+//	.imem = nv50_instmem_new,
+//	.mc = g98_mc_new,
+//	.mmu = nv50_mmu_new,
+//	.mxm = nv50_mxm_new,
+//	.pmu = gt215_pmu_new,
+//	.therm = gt215_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.ce[0] = gt215_ce_new,
+//	.disp = gt215_disp_new,
+//	.dma = nv50_dma_new,
+//	.fifo = g84_fifo_new,
+//	.gr = nv50_gr_new,
+//	.mspdec = g98_mspdec_new,
+//	.msppp = g98_msppp_new,
+//	.msvld = g98_msvld_new,
+//	.pm = gt215_pm_new,
+//	.sw = nv50_sw_new,
+};
+
+static const struct nvkm_device_chip
+nvc0_chipset = {
+	.name = "GF100",
+//	.bar = gf100_bar_new,
+//	.bios = nvkm_bios_new,
+//	.bus = gf100_bus_new,
+//	.clk = gf100_clk_new,
+//	.devinit = gf100_devinit_new,
+//	.fb = gf100_fb_new,
+//	.fuse = gf100_fuse_new,
+//	.gpio = g94_gpio_new,
+//	.i2c = g94_i2c_new,
+//	.ibus = gf100_ibus_new,
+//	.imem = nv50_instmem_new,
+//	.ltc = gf100_ltc_new,
+//	.mc = gf100_mc_new,
+//	.mmu = gf100_mmu_new,
+//	.mxm = nv50_mxm_new,
+//	.pmu = gf100_pmu_new,
+//	.therm = gt215_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.ce[0] = gf100_ce0_new,
+//	.ce[1] = gf100_ce1_new,
+//	.disp = gt215_disp_new,
+//	.dma = gf100_dma_new,
+//	.fifo = gf100_fifo_new,
+//	.gr = gf100_gr_new,
+//	.mspdec = gf100_mspdec_new,
+//	.msppp = gf100_msppp_new,
+//	.msvld = gf100_msvld_new,
+//	.pm = gf100_pm_new,
+//	.sw = gf100_sw_new,
+};
+
+static const struct nvkm_device_chip
+nvc1_chipset = {
+	.name = "GF108",
+//	.bar = gf100_bar_new,
+//	.bios = nvkm_bios_new,
+//	.bus = gf100_bus_new,
+//	.clk = gf100_clk_new,
+//	.devinit = gf100_devinit_new,
+//	.fb = gf100_fb_new,
+//	.fuse = gf100_fuse_new,
+//	.gpio = g94_gpio_new,
+//	.i2c = g94_i2c_new,
+//	.ibus = gf100_ibus_new,
+//	.imem = nv50_instmem_new,
+//	.ltc = gf100_ltc_new,
+//	.mc = gf106_mc_new,
+//	.mmu = gf100_mmu_new,
+//	.mxm = nv50_mxm_new,
+//	.pmu = gf100_pmu_new,
+//	.therm = gt215_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.ce[0] = gf100_ce0_new,
+//	.disp = gt215_disp_new,
+//	.dma = gf100_dma_new,
+//	.fifo = gf100_fifo_new,
+//	.gr = gf108_gr_new,
+//	.mspdec = gf100_mspdec_new,
+//	.msppp = gf100_msppp_new,
+//	.msvld = gf100_msvld_new,
+//	.pm = gf108_pm_new,
+//	.sw = gf100_sw_new,
+};
+
+static const struct nvkm_device_chip
+nvc3_chipset = {
+	.name = "GF106",
+//	.bar = gf100_bar_new,
+//	.bios = nvkm_bios_new,
+//	.bus = gf100_bus_new,
+//	.clk = gf100_clk_new,
+//	.devinit = gf100_devinit_new,
+//	.fb = gf100_fb_new,
+//	.fuse = gf100_fuse_new,
+//	.gpio = g94_gpio_new,
+//	.i2c = g94_i2c_new,
+//	.ibus = gf100_ibus_new,
+//	.imem = nv50_instmem_new,
+//	.ltc = gf100_ltc_new,
+//	.mc = gf106_mc_new,
+//	.mmu = gf100_mmu_new,
+//	.mxm = nv50_mxm_new,
+//	.pmu = gf100_pmu_new,
+//	.therm = gt215_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.ce[0] = gf100_ce0_new,
+//	.disp = gt215_disp_new,
+//	.dma = gf100_dma_new,
+//	.fifo = gf100_fifo_new,
+//	.gr = gf104_gr_new,
+//	.mspdec = gf100_mspdec_new,
+//	.msppp = gf100_msppp_new,
+//	.msvld = gf100_msvld_new,
+//	.pm = gf100_pm_new,
+//	.sw = gf100_sw_new,
+};
+
+static const struct nvkm_device_chip
+nvc4_chipset = {
+	.name = "GF104",
+//	.bar = gf100_bar_new,
+//	.bios = nvkm_bios_new,
+//	.bus = gf100_bus_new,
+//	.clk = gf100_clk_new,
+//	.devinit = gf100_devinit_new,
+//	.fb = gf100_fb_new,
+//	.fuse = gf100_fuse_new,
+//	.gpio = g94_gpio_new,
+//	.i2c = g94_i2c_new,
+//	.ibus = gf100_ibus_new,
+//	.imem = nv50_instmem_new,
+//	.ltc = gf100_ltc_new,
+//	.mc = gf100_mc_new,
+//	.mmu = gf100_mmu_new,
+//	.mxm = nv50_mxm_new,
+//	.pmu = gf100_pmu_new,
+//	.therm = gt215_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.ce[0] = gf100_ce0_new,
+//	.ce[1] = gf100_ce1_new,
+//	.disp = gt215_disp_new,
+//	.dma = gf100_dma_new,
+//	.fifo = gf100_fifo_new,
+//	.gr = gf104_gr_new,
+//	.mspdec = gf100_mspdec_new,
+//	.msppp = gf100_msppp_new,
+//	.msvld = gf100_msvld_new,
+//	.pm = gf100_pm_new,
+//	.sw = gf100_sw_new,
+};
+
+static const struct nvkm_device_chip
+nvc8_chipset = {
+	.name = "GF110",
+//	.bar = gf100_bar_new,
+//	.bios = nvkm_bios_new,
+//	.bus = gf100_bus_new,
+//	.clk = gf100_clk_new,
+//	.devinit = gf100_devinit_new,
+//	.fb = gf100_fb_new,
+//	.fuse = gf100_fuse_new,
+//	.gpio = g94_gpio_new,
+//	.i2c = g94_i2c_new,
+//	.ibus = gf100_ibus_new,
+//	.imem = nv50_instmem_new,
+//	.ltc = gf100_ltc_new,
+//	.mc = gf100_mc_new,
+//	.mmu = gf100_mmu_new,
+//	.mxm = nv50_mxm_new,
+//	.pmu = gf100_pmu_new,
+//	.therm = gt215_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.ce[0] = gf100_ce0_new,
+//	.ce[1] = gf100_ce1_new,
+//	.disp = gt215_disp_new,
+//	.dma = gf100_dma_new,
+//	.fifo = gf100_fifo_new,
+//	.gr = gf110_gr_new,
+//	.mspdec = gf100_mspdec_new,
+//	.msppp = gf100_msppp_new,
+//	.msvld = gf100_msvld_new,
+//	.pm = gf100_pm_new,
+//	.sw = gf100_sw_new,
+};
+
+static const struct nvkm_device_chip
+nvce_chipset = {
+	.name = "GF114",
+//	.bar = gf100_bar_new,
+//	.bios = nvkm_bios_new,
+//	.bus = gf100_bus_new,
+//	.clk = gf100_clk_new,
+//	.devinit = gf100_devinit_new,
+//	.fb = gf100_fb_new,
+//	.fuse = gf100_fuse_new,
+//	.gpio = g94_gpio_new,
+//	.i2c = g94_i2c_new,
+//	.ibus = gf100_ibus_new,
+//	.imem = nv50_instmem_new,
+//	.ltc = gf100_ltc_new,
+//	.mc = gf100_mc_new,
+//	.mmu = gf100_mmu_new,
+//	.mxm = nv50_mxm_new,
+//	.pmu = gf100_pmu_new,
+//	.therm = gt215_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.ce[0] = gf100_ce0_new,
+//	.ce[1] = gf100_ce1_new,
+//	.disp = gt215_disp_new,
+//	.dma = gf100_dma_new,
+//	.fifo = gf100_fifo_new,
+//	.gr = gf104_gr_new,
+//	.mspdec = gf100_mspdec_new,
+//	.msppp = gf100_msppp_new,
+//	.msvld = gf100_msvld_new,
+//	.pm = gf100_pm_new,
+//	.sw = gf100_sw_new,
+};
+
+static const struct nvkm_device_chip
+nvcf_chipset = {
+	.name = "GF116",
+//	.bar = gf100_bar_new,
+//	.bios = nvkm_bios_new,
+//	.bus = gf100_bus_new,
+//	.clk = gf100_clk_new,
+//	.devinit = gf100_devinit_new,
+//	.fb = gf100_fb_new,
+//	.fuse = gf100_fuse_new,
+//	.gpio = g94_gpio_new,
+//	.i2c = g94_i2c_new,
+//	.ibus = gf100_ibus_new,
+//	.imem = nv50_instmem_new,
+//	.ltc = gf100_ltc_new,
+//	.mc = gf106_mc_new,
+//	.mmu = gf100_mmu_new,
+//	.mxm = nv50_mxm_new,
+//	.pmu = gf100_pmu_new,
+//	.therm = gt215_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.ce[0] = gf100_ce0_new,
+//	.disp = gt215_disp_new,
+//	.dma = gf100_dma_new,
+//	.fifo = gf100_fifo_new,
+//	.gr = gf104_gr_new,
+//	.mspdec = gf100_mspdec_new,
+//	.msppp = gf100_msppp_new,
+//	.msvld = gf100_msvld_new,
+//	.pm = gf100_pm_new,
+//	.sw = gf100_sw_new,
+};
+
+static const struct nvkm_device_chip
+nvd7_chipset = {
+	.name = "GF117",
+//	.bar = gf100_bar_new,
+//	.bios = nvkm_bios_new,
+//	.bus = gf100_bus_new,
+//	.clk = gf100_clk_new,
+//	.devinit = gf100_devinit_new,
+//	.fb = gf100_fb_new,
+//	.fuse = gf100_fuse_new,
+//	.gpio = gf110_gpio_new,
+//	.i2c = gf117_i2c_new,
+//	.ibus = gf100_ibus_new,
+//	.imem = nv50_instmem_new,
+//	.ltc = gf100_ltc_new,
+//	.mc = gf106_mc_new,
+//	.mmu = gf100_mmu_new,
+//	.mxm = nv50_mxm_new,
+//	.therm = gf110_therm_new,
+//	.timer = nv04_timer_new,
+//	.ce[0] = gf100_ce0_new,
+//	.disp = gf119_disp_new,
+//	.dma = gf119_dma_new,
+//	.fifo = gf100_fifo_new,
+//	.gr = gf117_gr_new,
+//	.mspdec = gf100_mspdec_new,
+//	.msppp = gf100_msppp_new,
+//	.msvld = gf100_msvld_new,
+//	.pm = gf117_pm_new,
+//	.sw = gf100_sw_new,
+};
+
+static const struct nvkm_device_chip
+nvd9_chipset = {
+	.name = "GF119",
+//	.bar = gf100_bar_new,
+//	.bios = nvkm_bios_new,
+//	.bus = gf100_bus_new,
+//	.clk = gf100_clk_new,
+//	.devinit = gf100_devinit_new,
+//	.fb = gf100_fb_new,
+//	.fuse = gf100_fuse_new,
+//	.gpio = gf110_gpio_new,
+//	.i2c = gf110_i2c_new,
+//	.ibus = gf100_ibus_new,
+//	.imem = nv50_instmem_new,
+//	.ltc = gf100_ltc_new,
+//	.mc = gf106_mc_new,
+//	.mmu = gf100_mmu_new,
+//	.mxm = nv50_mxm_new,
+//	.pmu = gf110_pmu_new,
+//	.therm = gf110_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.ce[0] = gf100_ce0_new,
+//	.disp = gf119_disp_new,
+//	.dma = gf119_dma_new,
+//	.fifo = gf100_fifo_new,
+//	.gr = gf119_gr_new,
+//	.mspdec = gf100_mspdec_new,
+//	.msppp = gf100_msppp_new,
+//	.msvld = gf100_msvld_new,
+//	.pm = gf117_pm_new,
+//	.sw = gf100_sw_new,
+};
+
+static const struct nvkm_device_chip
+nve4_chipset = {
+	.name = "GK104",
+//	.bar = gf100_bar_new,
+//	.bios = nvkm_bios_new,
+//	.bus = gf100_bus_new,
+//	.clk = gk104_clk_new,
+//	.devinit = gf100_devinit_new,
+//	.fb = gk104_fb_new,
+//	.fuse = gf100_fuse_new,
+//	.gpio = gk104_gpio_new,
+//	.i2c = gk104_i2c_new,
+//	.ibus = gk104_ibus_new,
+//	.imem = nv50_instmem_new,
+//	.ltc = gk104_ltc_new,
+//	.mc = gf106_mc_new,
+//	.mmu = gf100_mmu_new,
+//	.mxm = nv50_mxm_new,
+//	.pmu = gk104_pmu_new,
+//	.therm = gf110_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.ce[0] = gk104_ce0_new,
+//	.ce[1] = gk104_ce1_new,
+//	.ce[2] = gk104_ce2_new,
+//	.disp = gk104_disp_new,
+//	.dma = gf119_dma_new,
+//	.fifo = gk104_fifo_new,
+//	.gr = gk104_gr_new,
+//	.mspdec = gk104_mspdec_new,
+//	.msppp = gf100_msppp_new,
+//	.msvld = gk104_msvld_new,
+//	.pm = gk104_pm_new,
+//	.sw = gf100_sw_new,
+};
+
+static const struct nvkm_device_chip
+nve6_chipset = {
+	.name = "GK106",
+//	.bar = gf100_bar_new,
+//	.bios = nvkm_bios_new,
+//	.bus = gf100_bus_new,
+//	.clk = gk104_clk_new,
+//	.devinit = gf100_devinit_new,
+//	.fb = gk104_fb_new,
+//	.fuse = gf100_fuse_new,
+//	.gpio = gk104_gpio_new,
+//	.i2c = gk104_i2c_new,
+//	.ibus = gk104_ibus_new,
+//	.imem = nv50_instmem_new,
+//	.ltc = gk104_ltc_new,
+//	.mc = gf106_mc_new,
+//	.mmu = gf100_mmu_new,
+//	.mxm = nv50_mxm_new,
+//	.pmu = gk104_pmu_new,
+//	.therm = gf110_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.ce[0] = gk104_ce0_new,
+//	.ce[1] = gk104_ce1_new,
+//	.ce[2] = gk104_ce2_new,
+//	.disp = gk104_disp_new,
+//	.dma = gf119_dma_new,
+//	.fifo = gk104_fifo_new,
+//	.gr = gk104_gr_new,
+//	.mspdec = gk104_mspdec_new,
+//	.msppp = gf100_msppp_new,
+//	.msvld = gk104_msvld_new,
+//	.pm = gk104_pm_new,
+//	.sw = gf100_sw_new,
+};
+
+static const struct nvkm_device_chip
+nve7_chipset = {
+	.name = "GK107",
+//	.bar = gf100_bar_new,
+//	.bios = nvkm_bios_new,
+//	.bus = gf100_bus_new,
+//	.clk = gk104_clk_new,
+//	.devinit = gf100_devinit_new,
+//	.fb = gk104_fb_new,
+//	.fuse = gf100_fuse_new,
+//	.gpio = gk104_gpio_new,
+//	.i2c = gk104_i2c_new,
+//	.ibus = gk104_ibus_new,
+//	.imem = nv50_instmem_new,
+//	.ltc = gk104_ltc_new,
+//	.mc = gf106_mc_new,
+//	.mmu = gf100_mmu_new,
+//	.mxm = nv50_mxm_new,
+//	.pmu = gf110_pmu_new,
+//	.therm = gf110_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.ce[0] = gk104_ce0_new,
+//	.ce[1] = gk104_ce1_new,
+//	.ce[2] = gk104_ce2_new,
+//	.disp = gk104_disp_new,
+//	.dma = gf119_dma_new,
+//	.fifo = gk104_fifo_new,
+//	.gr = gk104_gr_new,
+//	.mspdec = gk104_mspdec_new,
+//	.msppp = gf100_msppp_new,
+//	.msvld = gk104_msvld_new,
+//	.pm = gk104_pm_new,
+//	.sw = gf100_sw_new,
+};
+
+static const struct nvkm_device_chip
+nvea_chipset = {
+	.name = "GK20A",
+//	.bar = gk20a_bar_new,
+//	.bus = gf100_bus_new,
+//	.clk = gk20a_clk_new,
+//	.fb = gk20a_fb_new,
+//	.fuse = gf100_fuse_new,
+//	.ibus = gk20a_ibus_new,
+//	.imem = gk20a_instmem_new,
+//	.ltc = gk104_ltc_new,
+//	.mc = gk20a_mc_new,
+//	.mmu = gf100_mmu_new,
+//	.pmu = gk20a_pmu_new,
+//	.timer = gk20a_timer_new,
+//	.volt = gk20a_volt_new,
+//	.ce[2] = gk104_ce2_new,
+//	.dma = gf119_dma_new,
+//	.fifo = gk20a_fifo_new,
+//	.gr = gk20a_gr_new,
+//	.pm = gk104_pm_new,
+//	.sw = gf100_sw_new,
+};
+
+static const struct nvkm_device_chip
+nvf0_chipset = {
+	.name = "GK110",
+//	.bar = gf100_bar_new,
+//	.bios = nvkm_bios_new,
+//	.bus = gf100_bus_new,
+//	.clk = gk104_clk_new,
+//	.devinit = gf100_devinit_new,
+//	.fb = gk104_fb_new,
+//	.fuse = gf100_fuse_new,
+//	.gpio = gk104_gpio_new,
+//	.i2c = gk104_i2c_new,
+//	.ibus = gk104_ibus_new,
+//	.imem = nv50_instmem_new,
+//	.ltc = gk104_ltc_new,
+//	.mc = gf106_mc_new,
+//	.mmu = gf100_mmu_new,
+//	.mxm = nv50_mxm_new,
+//	.pmu = gk110_pmu_new,
+//	.therm = gf110_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.ce[0] = gk104_ce0_new,
+//	.ce[1] = gk104_ce1_new,
+//	.ce[2] = gk104_ce2_new,
+//	.disp = gk110_disp_new,
+//	.dma = gf119_dma_new,
+//	.fifo = gk104_fifo_new,
+//	.gr = gk110_gr_new,
+//	.mspdec = gk104_mspdec_new,
+//	.msppp = gf100_msppp_new,
+//	.msvld = gk104_msvld_new,
+//	.pm = gk110_pm_new,
+//	.sw = gf100_sw_new,
+};
+
+static const struct nvkm_device_chip
+nvf1_chipset = {
+	.name = "GK110B",
+//	.bar = gf100_bar_new,
+//	.bios = nvkm_bios_new,
+//	.bus = gf100_bus_new,
+//	.clk = gk104_clk_new,
+//	.devinit = gf100_devinit_new,
+//	.fb = gk104_fb_new,
+//	.fuse = gf100_fuse_new,
+//	.gpio = gk104_gpio_new,
+//	.i2c = gf110_i2c_new,
+//	.ibus = gk104_ibus_new,
+//	.imem = nv50_instmem_new,
+//	.ltc = gk104_ltc_new,
+//	.mc = gf106_mc_new,
+//	.mmu = gf100_mmu_new,
+//	.mxm = nv50_mxm_new,
+//	.pmu = gk110_pmu_new,
+//	.therm = gf110_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.ce[0] = gk104_ce0_new,
+//	.ce[1] = gk104_ce1_new,
+//	.ce[2] = gk104_ce2_new,
+//	.disp = gk110_disp_new,
+//	.dma = gf119_dma_new,
+//	.fifo = gk104_fifo_new,
+//	.gr = gk110b_gr_new,
+//	.mspdec = gk104_mspdec_new,
+//	.msppp = gf100_msppp_new,
+//	.msvld = gk104_msvld_new,
+//	.pm = gk110_pm_new,
+//	.sw = gf100_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv106_chipset = {
+	.name = "GK208B",
+//	.bar = gf100_bar_new,
+//	.bios = nvkm_bios_new,
+//	.bus = gf100_bus_new,
+//	.clk = gk104_clk_new,
+//	.devinit = gf100_devinit_new,
+//	.fb = gk104_fb_new,
+//	.fuse = gf100_fuse_new,
+//	.gpio = gk104_gpio_new,
+//	.i2c = gk104_i2c_new,
+//	.ibus = gk104_ibus_new,
+//	.imem = nv50_instmem_new,
+//	.ltc = gk104_ltc_new,
+//	.mc = gk20a_mc_new,
+//	.mmu = gf100_mmu_new,
+//	.mxm = nv50_mxm_new,
+//	.pmu = gk208_pmu_new,
+//	.therm = gf110_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.ce[0] = gk104_ce0_new,
+//	.ce[1] = gk104_ce1_new,
+//	.ce[2] = gk104_ce2_new,
+//	.disp = gk110_disp_new,
+//	.dma = gf119_dma_new,
+//	.fifo = gk208_fifo_new,
+//	.gr = gk208_gr_new,
+//	.mspdec = gk104_mspdec_new,
+//	.msppp = gf100_msppp_new,
+//	.msvld = gk104_msvld_new,
+//	.sw = gf100_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv108_chipset = {
+	.name = "GK208",
+//	.bar = gf100_bar_new,
+//	.bios = nvkm_bios_new,
+//	.bus = gf100_bus_new,
+//	.clk = gk104_clk_new,
+//	.devinit = gf100_devinit_new,
+//	.fb = gk104_fb_new,
+//	.fuse = gf100_fuse_new,
+//	.gpio = gk104_gpio_new,
+//	.i2c = gk104_i2c_new,
+//	.ibus = gk104_ibus_new,
+//	.imem = nv50_instmem_new,
+//	.ltc = gk104_ltc_new,
+//	.mc = gk20a_mc_new,
+//	.mmu = gf100_mmu_new,
+//	.mxm = nv50_mxm_new,
+//	.pmu = gk208_pmu_new,
+//	.therm = gf110_therm_new,
+//	.timer = nv04_timer_new,
+//	.volt = nv40_volt_new,
+//	.ce[0] = gk104_ce0_new,
+//	.ce[1] = gk104_ce1_new,
+//	.ce[2] = gk104_ce2_new,
+//	.disp = gk110_disp_new,
+//	.dma = gf119_dma_new,
+//	.fifo = gk208_fifo_new,
+//	.gr = gk208_gr_new,
+//	.mspdec = gk104_mspdec_new,
+//	.msppp = gf100_msppp_new,
+//	.msvld = gk104_msvld_new,
+//	.sw = gf100_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv117_chipset = {
+	.name = "GM107",
+//	.bar = gf100_bar_new,
+//	.bios = nvkm_bios_new,
+//	.bus = gf100_bus_new,
+//	.clk = gk104_clk_new,
+//	.devinit = gm107_devinit_new,
+//	.fb = gm107_fb_new,
+//	.fuse = gm107_fuse_new,
+//	.gpio = gk104_gpio_new,
+//	.i2c = gf110_i2c_new,
+//	.ibus = gk104_ibus_new,
+//	.imem = nv50_instmem_new,
+//	.ltc = gm107_ltc_new,
+//	.mc = gk20a_mc_new,
+//	.mmu = gf100_mmu_new,
+//	.mxm = nv50_mxm_new,
+//	.pmu = gk208_pmu_new,
+//	.therm = gm107_therm_new,
+//	.timer = gk20a_timer_new,
+//	.ce[0] = gk104_ce0_new,
+//	.ce[2] = gk104_ce2_new,
+//	.disp = gm107_disp_new,
+//	.dma = gf119_dma_new,
+//	.fifo = gk208_fifo_new,
+//	.gr = gm107_gr_new,
+//	.sw = gf100_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv124_chipset = {
+	.name = "GM204",
+//	.bar = gf100_bar_new,
+//	.bios = nvkm_bios_new,
+//	.bus = gf100_bus_new,
+//	.devinit = gm204_devinit_new,
+//	.fb = gm107_fb_new,
+//	.fuse = gm107_fuse_new,
+//	.gpio = gk104_gpio_new,
+//	.i2c = gm204_i2c_new,
+//	.ibus = gk104_ibus_new,
+//	.imem = nv50_instmem_new,
+//	.ltc = gm107_ltc_new,
+//	.mc = gk20a_mc_new,
+//	.mmu = gf100_mmu_new,
+//	.mxm = nv50_mxm_new,
+//	.pmu = gk208_pmu_new,
+//	.timer = gk20a_timer_new,
+//	.ce[0] = gm204_ce0_new,
+//	.ce[1] = gm204_ce1_new,
+//	.ce[2] = gm204_ce2_new,
+//	.disp = gm204_disp_new,
+//	.dma = gf119_dma_new,
+//	.fifo = gm204_fifo_new,
+//	.gr = gm204_gr_new,
+//	.sw = gf100_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv126_chipset = {
+	.name = "GM206",
+//	.bar = gf100_bar_new,
+//	.bios = nvkm_bios_new,
+//	.bus = gf100_bus_new,
+//	.devinit = gm204_devinit_new,
+//	.fb = gm107_fb_new,
+//	.fuse = gm107_fuse_new,
+//	.gpio = gk104_gpio_new,
+//	.i2c = gm204_i2c_new,
+//	.ibus = gk104_ibus_new,
+//	.imem = nv50_instmem_new,
+//	.ltc = gm107_ltc_new,
+//	.mc = gk20a_mc_new,
+//	.mmu = gf100_mmu_new,
+//	.mxm = nv50_mxm_new,
+//	.pmu = gk208_pmu_new,
+//	.timer = gk20a_timer_new,
+//	.ce[0] = gm204_ce0_new,
+//	.ce[1] = gm204_ce1_new,
+//	.ce[2] = gm204_ce2_new,
+//	.disp = gm204_disp_new,
+//	.dma = gf119_dma_new,
+//	.fifo = gm204_fifo_new,
+//	.gr = gm206_gr_new,
+//	.sw = gf100_sw_new,
+};
+
+static const struct nvkm_device_chip
+nv12b_chipset = {
+	.name = "GM20B",
+//	.bar = gk20a_bar_new,
+//	.bus = gf100_bus_new,
+//	.fb = gk20a_fb_new,
+//	.fuse = gm107_fuse_new,
+//	.ibus = gk20a_ibus_new,
+//	.imem = gk20a_instmem_new,
+//	.ltc = gm107_ltc_new,
+//	.mc = gk20a_mc_new,
+//	.mmu = gf100_mmu_new,
+//	.mmu = gf100_mmu_new,
+//	.timer = gk20a_timer_new,
+//	.ce[2] = gm204_ce2_new,
+//	.dma = gf119_dma_new,
+//	.fifo = gm20b_fifo_new,
+//	.gr = gm20b_gr_new,
+//	.sw = gf100_sw_new,
+};
+
 #include <core/parent.h>
 #include <core/client.h>
 
@@ -116,45 +2026,129 @@ nvkm_device_event_func = {
 	.ctor = nvkm_device_event_ctor,
 };
 
+struct nvkm_subdev *
+nvkm_device_subdev(struct nvkm_device *device, int index)
+{
+	struct nvkm_engine *engine;
+
+	if (device->disable_mask & (1ULL << index))
+		return NULL;
+
+	switch (index) {
+#define _(n,p,m) case NVDEV_SUBDEV_##n: if (p) return (m); break
+	_(BAR    , device->bar    , &device->bar->subdev);
+	_(VBIOS  , device->bios   , &device->bios->subdev);
+	_(BUS    , device->bus    , &device->bus->subdev);
+	_(CLK    , device->clk    , &device->clk->subdev);
+	_(DEVINIT, device->devinit, &device->devinit->subdev);
+	_(FB     , device->fb     , &device->fb->subdev);
+	_(FUSE   , device->fuse   , &device->fuse->subdev);
+	_(GPIO   , device->gpio   , &device->gpio->subdev);
+	_(I2C    , device->i2c    , &device->i2c->subdev);
+	_(IBUS   , device->ibus   ,  device->ibus);
+	_(INSTMEM, device->imem   , &device->imem->subdev);
+	_(LTC    , device->ltc    , &device->ltc->subdev);
+	_(MC     , device->mc     , &device->mc->subdev);
+	_(MMU    , device->mmu    , &device->mmu->subdev);
+	_(MXM    , device->mxm    ,  device->mxm);
+	_(PMU    , device->pmu    , &device->pmu->subdev);
+	_(THERM  , device->therm  , &device->therm->subdev);
+	_(TIMER  , device->timer  , &device->timer->subdev);
+	_(VOLT   , device->volt   , &device->volt->subdev);
+#undef _
+	default:
+		engine = nvkm_device_engine(device, index);
+		if (engine)
+			return &engine->subdev;
+		break;
+	}
+	return NULL;
+}
+
+struct nvkm_engine *
+nvkm_device_engine(struct nvkm_device *device, int index)
+{
+	if (device->disable_mask & (1ULL << index))
+		return NULL;
+
+	switch (index) {
+#define _(n,p,m) case NVDEV_ENGINE_##n: if (p) return (m); break
+	_(BSP    , device->bsp    ,  device->bsp);
+	_(CE0    , device->ce[0]  ,  device->ce[0]);
+	_(CE1    , device->ce[1]  ,  device->ce[1]);
+	_(CE2    , device->ce[2]  ,  device->ce[2]);
+	_(CIPHER , device->cipher ,  device->cipher);
+	_(DISP   , device->disp   , &device->disp->engine);
+	_(DMAOBJ , device->dma    , &device->dma->engine);
+	_(FIFO   , device->fifo   , &device->fifo->engine);
+	_(GR     , device->gr     , &device->gr->engine);
+	_(IFB    , device->ifb    ,  device->ifb);
+	_(ME     , device->me     ,  device->me);
+	_(MPEG   , device->mpeg   ,  device->mpeg);
+	_(MSENC  , device->msenc  ,  device->msenc);
+	_(MSPDEC , device->mspdec ,  device->mspdec);
+	_(MSPPP  , device->msppp  ,  device->msppp);
+	_(MSVLD  , device->msvld  ,  device->msvld);
+	_(PM     , device->pm     , &device->pm->engine);
+	_(SEC    , device->sec    ,  device->sec);
+	_(SW     , device->sw     , &device->sw->engine);
+	_(VIC    , device->vic    ,  device->vic);
+	_(VP     , device->vp     ,  device->vp);
+#undef _
+	default:
+		WARN_ON(1);
+		break;
+	}
+	return NULL;
+}
+
 int
 nvkm_device_fini(struct nvkm_device *device, bool suspend)
 {
-	struct nvkm_object *subdev;
+	const char *action = suspend ? "suspend" : "fini";
+	struct nvkm_subdev *subdev;
 	int ret, i;
+	s64 time;
+
+	nvdev_trace(device, "%s running...\n", action);
+	time = ktime_to_us(ktime_get());
+
+	nvkm_acpi_fini(device);
 
 	for (i = NVDEV_SUBDEV_NR - 1; i >= 0; i--) {
-		if ((subdev = device->subdev[i])) {
-			if (!nv_iclass(subdev, NV_ENGINE_CLASS)) {
-				ret = nvkm_object_dec(subdev, suspend);
-				if (ret && suspend)
-					goto fail;
-			}
+		if ((subdev = nvkm_device_subdev(device, i))) {
+			ret = nvkm_subdev_fini(subdev, suspend);
+			if (ret && suspend)
+				goto fail;
 		}
 	}
 
-	ret = nvkm_acpi_fini(device, suspend);
 
 	if (device->func->fini)
 		device->func->fini(device, suspend);
+
+	time = ktime_to_us(ktime_get()) - time;
+	nvdev_trace(device, "%s completed in %lldus...\n", action, time);
+	return 0;
+
 fail:
-	for (; ret && i < NVDEV_SUBDEV_NR; i++) {
-		if ((subdev = device->subdev[i])) {
-			if (!nv_iclass(subdev, NV_ENGINE_CLASS)) {
-				ret = nvkm_object_inc(subdev);
-				if (ret) {
-					/* XXX */
-				}
-			}
+	do {
+		if ((subdev = nvkm_device_subdev(device, i))) {
+			int rret = nvkm_subdev_init(subdev);
+			if (rret)
+				nvkm_fatal(subdev, "failed restart, %d\n", ret);
 		}
-	}
+	} while (++i < NVDEV_SUBDEV_NR);
 
+	nvdev_trace(device, "%s failed with %d\n", action, ret);
 	return ret;
 }
 
-int
+static int
 nvkm_device_preinit(struct nvkm_device *device)
 {
-	int ret;
+	struct nvkm_subdev *subdev;
+	int ret, i;
 	s64 time;
 
 	nvdev_trace(device, "preinit running...\n");
@@ -166,6 +2160,16 @@ nvkm_device_preinit(struct nvkm_device *device)
 			goto fail;
 	}
 
+	for (i = 0; i < NVDEV_SUBDEV_NR; i++) {
+		if ((subdev = nvkm_device_subdev(device, i))) {
+			ret = nvkm_subdev_preinit(subdev);
+			if (ret)
+				goto fail;
+		}
+	}
+
+	/*XXX: devinit */
+
 	time = ktime_to_us(ktime_get()) - time;
 	nvdev_trace(device, "preinit completed in %lldus\n", time);
 	return 0;
@@ -178,19 +2182,21 @@ nvkm_device_preinit(struct nvkm_device *device)
 int
 nvkm_device_init(struct nvkm_device *device)
 {
-	struct nvkm_object *subdev;
+	struct nvkm_subdev *subdev;
 	int ret, i = 0, c;
+	s64 time;
 
 	ret = nvkm_device_preinit(device);
 	if (ret)
 		return ret;
 
-	ret = nvkm_acpi_init(device);
-	if (ret)
-		goto fail;
+	nvkm_device_fini(device, false);
+
+	nvdev_trace(device, "init running...\n");
+	time = ktime_to_us(ktime_get());
 
 	for (i = 0, c = 0; i < NVDEV_SUBDEV_NR; i++) {
-#define _(s,m) case s: if (device->oclass[s] && !device->subdev[s]) {          \
+#define _(s,m) case s: if (device->oclass[s] && !device->m) {          \
 		ret = nvkm_object_old(nv_object(device), NULL,                \
 				       device->oclass[s], NULL,  (s),          \
 				       (struct nvkm_object **)&device->m);     \
@@ -200,7 +2206,6 @@ nvkm_device_init(struct nvkm_device *device)
 		}                                                              \
 		if (ret)                                                       \
 			goto fail;                                             \
-		device->subdev[s] = (struct nvkm_object *)device->m;           \
 } break
 		switch (i) {
 		_(NVDEV_SUBDEV_BAR    ,     bar);
@@ -259,29 +2264,27 @@ nvkm_device_init(struct nvkm_device *device)
 		 * subdev in turn as they're created.
 		 */
 		while (i >= NVDEV_SUBDEV_DEVINIT_LAST && c <= i) {
-			struct nvkm_object *subdev = device->subdev[c++];
-			if (subdev && !nv_iclass(subdev, NV_ENGINE_CLASS)) {
-				ret = nvkm_object_inc(subdev);
+			if ((subdev = nvkm_device_subdev(device, c++))) {
+				ret = nvkm_subdev_init(subdev);
 				if (ret)
 					goto fail;
-			} else
-			if (subdev) {
-				nvkm_subdev_reset(subdev);
 			}
 		}
 	}
 
-	ret = 0;
+	nvkm_acpi_init(device);
+
+	time = ktime_to_us(ktime_get()) - time;
+	nvdev_trace(device, "init completed in %lldus\n", time);
+	return 0;
+
 fail:
-	for (--i; ret && i >= 0; i--) {
-		if ((subdev = device->subdev[i])) {
-			if (!nv_iclass(subdev, NV_ENGINE_CLASS))
-				nvkm_object_dec(subdev, false);
-		}
-	}
+	do {
+		if ((subdev = nvkm_device_subdev(device, i)))
+			nvkm_subdev_fini(subdev, false);
+	} while (--i >= 0);
 
-	if (ret)
-		nvkm_acpi_fini(device, false);
+	nvdev_error(device, "init failed with %d\n", ret);
 	return ret;
 }
 
@@ -333,8 +2336,12 @@ nvkm_device_del(struct nvkm_device **pdevice)
 	int i;
 	if (device) {
 		mutex_lock(&nv_devices_mutex);
-		for (i = NVDEV_SUBDEV_NR - 1; i >= 0; i--)
-			nvkm_object_ref(NULL, &device->subdev[i]);
+		device->disable_mask = 0;
+		for (i = NVDEV_SUBDEV_NR - 1; i >= 0; i--) {
+			struct nvkm_subdev *subdev =
+				nvkm_device_subdev(device, i);
+			nvkm_subdev_del(&subdev);
+		}
 
 		nvkm_event_fini(&device->event);
 
@@ -363,6 +2370,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		 bool detect, bool mmio, u64 subdev_mask,
 		 struct nvkm_device *device)
 {
+	struct nvkm_subdev *subdev;
 	u64 mmio_base, mmio_size;
 	u32 boot0, strap;
 	void __iomem *map;
@@ -373,13 +2381,7 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 	if (nvkm_device_find_locked(handle))
 		goto done;
 
-	ret = nvkm_engine_ctor(&nvkm_device_func, device, 0, 0,
-			       true, &device->engine);
-	device->engine.subdev.object.parent = NULL;
 	device->func = func;
-	if (ret)
-		goto done;
-
 	device->quirk = quirk;
 	switch (type) {
 	case NVKM_BUS_PCI:
@@ -395,9 +2397,14 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 	device->cfgopt = cfg;
 	device->dbgopt = dbg;
 	device->name = name;
-
 	list_add_tail(&device->head, &nv_devices);
 
+	ret = nvkm_engine_ctor(&nvkm_device_func, device, 0, 0,
+			       true, &device->engine);
+	device->engine.subdev.object.parent = NULL;
+	if (ret)
+		goto done;
+
 	ret = nvkm_event_init(&nvkm_device_event_func, 1, 1, &device->event);
 	if (ret)
 		goto done;
@@ -482,12 +2489,83 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 			break;
 		}
 
-		if (ret) {
+		switch (!ret * device->chipset) {
+		case 0x004: device->chip = &nv4_chipset; break;
+		case 0x005: device->chip = &nv5_chipset; break;
+		case 0x010: device->chip = &nv10_chipset; break;
+		case 0x011: device->chip = &nv11_chipset; break;
+		case 0x015: device->chip = &nv15_chipset; break;
+		case 0x017: device->chip = &nv17_chipset; break;
+		case 0x018: device->chip = &nv18_chipset; break;
+		case 0x01a: device->chip = &nv1a_chipset; break;
+		case 0x01f: device->chip = &nv1f_chipset; break;
+		case 0x020: device->chip = &nv20_chipset; break;
+		case 0x025: device->chip = &nv25_chipset; break;
+		case 0x028: device->chip = &nv28_chipset; break;
+		case 0x02a: device->chip = &nv2a_chipset; break;
+		case 0x030: device->chip = &nv30_chipset; break;
+		case 0x031: device->chip = &nv31_chipset; break;
+		case 0x034: device->chip = &nv34_chipset; break;
+		case 0x035: device->chip = &nv35_chipset; break;
+		case 0x036: device->chip = &nv36_chipset; break;
+		case 0x040: device->chip = &nv40_chipset; break;
+		case 0x041: device->chip = &nv41_chipset; break;
+		case 0x042: device->chip = &nv42_chipset; break;
+		case 0x043: device->chip = &nv43_chipset; break;
+		case 0x044: device->chip = &nv44_chipset; break;
+		case 0x045: device->chip = &nv45_chipset; break;
+		case 0x046: device->chip = &nv46_chipset; break;
+		case 0x047: device->chip = &nv47_chipset; break;
+		case 0x049: device->chip = &nv49_chipset; break;
+		case 0x04a: device->chip = &nv4a_chipset; break;
+		case 0x04b: device->chip = &nv4b_chipset; break;
+		case 0x04c: device->chip = &nv4c_chipset; break;
+		case 0x04e: device->chip = &nv4e_chipset; break;
+		case 0x050: device->chip = &nv50_chipset; break;
+		case 0x063: device->chip = &nv63_chipset; break;
+		case 0x067: device->chip = &nv67_chipset; break;
+		case 0x068: device->chip = &nv68_chipset; break;
+		case 0x084: device->chip = &nv84_chipset; break;
+		case 0x086: device->chip = &nv86_chipset; break;
+		case 0x092: device->chip = &nv92_chipset; break;
+		case 0x094: device->chip = &nv94_chipset; break;
+		case 0x096: device->chip = &nv96_chipset; break;
+		case 0x098: device->chip = &nv98_chipset; break;
+		case 0x0a0: device->chip = &nva0_chipset; break;
+		case 0x0a3: device->chip = &nva3_chipset; break;
+		case 0x0a5: device->chip = &nva5_chipset; break;
+		case 0x0a8: device->chip = &nva8_chipset; break;
+		case 0x0aa: device->chip = &nvaa_chipset; break;
+		case 0x0ac: device->chip = &nvac_chipset; break;
+		case 0x0af: device->chip = &nvaf_chipset; break;
+		case 0x0c0: device->chip = &nvc0_chipset; break;
+		case 0x0c1: device->chip = &nvc1_chipset; break;
+		case 0x0c3: device->chip = &nvc3_chipset; break;
+		case 0x0c4: device->chip = &nvc4_chipset; break;
+		case 0x0c8: device->chip = &nvc8_chipset; break;
+		case 0x0ce: device->chip = &nvce_chipset; break;
+		case 0x0cf: device->chip = &nvcf_chipset; break;
+		case 0x0d7: device->chip = &nvd7_chipset; break;
+		case 0x0d9: device->chip = &nvd9_chipset; break;
+		case 0x0e4: device->chip = &nve4_chipset; break;
+		case 0x0e6: device->chip = &nve6_chipset; break;
+		case 0x0e7: device->chip = &nve7_chipset; break;
+		case 0x0ea: device->chip = &nvea_chipset; break;
+		case 0x0f0: device->chip = &nvf0_chipset; break;
+		case 0x0f1: device->chip = &nvf1_chipset; break;
+		case 0x106: device->chip = &nv106_chipset; break;
+		case 0x108: device->chip = &nv108_chipset; break;
+		case 0x117: device->chip = &nv117_chipset; break;
+		case 0x124: device->chip = &nv124_chipset; break;
+		case 0x126: device->chip = &nv126_chipset; break;
+		case 0x12b: device->chip = &nv12b_chipset; break;
+		default:
 			nvdev_error(device, "unknown chipset (%08x)\n", boot0);
 			goto done;
 		}
 
-		nvdev_info(device, "NVIDIA %s (%08x)\n", device->cname, boot0);
+		nvdev_info(device, "NVIDIA %s (%08x)\n",
+			   device->chip->name, boot0);
 
 		/* determine frequency of timing crystal */
 		if ( device->card_type <= NV_10 || device->chipset < 0x17 ||
@@ -503,10 +2581,13 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 		case 0x00400040: device->crystal = 25000; break;
 		}
 	} else {
-		device->cname = "NULL";
+		device->chip = &null_chipset;
 		device->oclass[NVDEV_SUBDEV_VBIOS] = &nvkm_bios_oclass;
 	}
 
+	if (!device->name)
+		device->name = device->chip->name;
+
 	if (mmio) {
 		device->pri = ioremap(mmio_base, mmio_size);
 		if (!device->pri) {
@@ -523,6 +2604,72 @@ nvkm_device_ctor(const struct nvkm_device_func *func,
 
 	atomic_set(&device->engine.subdev.object.usecount, 2);
 	mutex_init(&device->mutex);
+
+	for (i = 0; i < NVDEV_SUBDEV_NR; i++) {
+#define _(s,m) case s:                                                         \
+	if (device->chip->m && (subdev_mask & (1ULL << (s)))) {                \
+		ret = device->chip->m(device, (s), &device->m);                \
+		if (ret) {                                                     \
+			subdev = nvkm_device_subdev(device, (s));              \
+			nvkm_subdev_del(&subdev);                              \
+			device->m = NULL;                                      \
+			if (ret != -ENODEV) {                                  \
+				nvdev_error(device, "%s ctor failed, %d\n",    \
+					    nvkm_subdev_name[s], ret);         \
+				goto done;                                     \
+			}                                                      \
+		}                                                              \
+	}                                                                      \
+	break
+		switch (i) {
+		_(NVDEV_SUBDEV_BAR    ,     bar);
+		_(NVDEV_SUBDEV_VBIOS  ,    bios);
+		_(NVDEV_SUBDEV_BUS    ,     bus);
+		_(NVDEV_SUBDEV_CLK    ,     clk);
+		_(NVDEV_SUBDEV_DEVINIT, devinit);
+		_(NVDEV_SUBDEV_FB     ,      fb);
+		_(NVDEV_SUBDEV_FUSE   ,    fuse);
+		_(NVDEV_SUBDEV_GPIO   ,    gpio);
+		_(NVDEV_SUBDEV_I2C    ,     i2c);
+		_(NVDEV_SUBDEV_IBUS   ,    ibus);
+		_(NVDEV_SUBDEV_INSTMEM,    imem);
+		_(NVDEV_SUBDEV_LTC    ,     ltc);
+		_(NVDEV_SUBDEV_MC     ,      mc);
+		_(NVDEV_SUBDEV_MMU    ,     mmu);
+		_(NVDEV_SUBDEV_MXM    ,     mxm);
+		_(NVDEV_SUBDEV_PMU    ,     pmu);
+		_(NVDEV_SUBDEV_THERM  ,   therm);
+		_(NVDEV_SUBDEV_TIMER  ,   timer);
+		_(NVDEV_SUBDEV_VOLT   ,    volt);
+		_(NVDEV_ENGINE_BSP    ,     bsp);
+		_(NVDEV_ENGINE_CE0    ,   ce[0]);
+		_(NVDEV_ENGINE_CE1    ,   ce[1]);
+		_(NVDEV_ENGINE_CE2    ,   ce[2]);
+		_(NVDEV_ENGINE_CIPHER ,  cipher);
+		_(NVDEV_ENGINE_DISP   ,    disp);
+		_(NVDEV_ENGINE_DMAOBJ ,     dma);
+		_(NVDEV_ENGINE_FIFO   ,    fifo);
+		_(NVDEV_ENGINE_GR     ,      gr);
+		_(NVDEV_ENGINE_IFB    ,     ifb);
+		_(NVDEV_ENGINE_ME     ,      me);
+		_(NVDEV_ENGINE_MPEG   ,    mpeg);
+		_(NVDEV_ENGINE_MSENC  ,   msenc);
+		_(NVDEV_ENGINE_MSPDEC ,  mspdec);
+		_(NVDEV_ENGINE_MSPPP  ,   msppp);
+		_(NVDEV_ENGINE_MSVLD  ,   msvld);
+		_(NVDEV_ENGINE_PM     ,      pm);
+		_(NVDEV_ENGINE_SEC    ,     sec);
+		_(NVDEV_ENGINE_SW     ,      sw);
+		_(NVDEV_ENGINE_VIC    ,     vic);
+		_(NVDEV_ENGINE_VP     ,      vp);
+		default:
+			WARN_ON(1);
+			continue;
+		}
+#undef _
+	}
+
+	ret = 0;
 done:
 	mutex_unlock(&nv_devices_mutex);
 	return ret;

commit 7974dd1bdb43aaf5b45a915c6b439d11733450fc
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:17 2015 +1000

    drm/nouveau/device: separate construction of pci/tegra devices
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index b7892e6f080b..c7d8e2902c6c 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -32,19 +32,25 @@
 static DEFINE_MUTEX(nv_devices_mutex);
 static LIST_HEAD(nv_devices);
 
-struct nvkm_device *
-nvkm_device_find(u64 name)
+static struct nvkm_device *
+nvkm_device_find_locked(u64 handle)
 {
-	struct nvkm_device *device, *match = NULL;
-	mutex_lock(&nv_devices_mutex);
+	struct nvkm_device *device;
 	list_for_each_entry(device, &nv_devices, head) {
-		if (device->handle == name) {
-			match = device;
-			break;
-		}
+		if (device->handle == handle)
+			return device;
 	}
+	return NULL;
+}
+
+struct nvkm_device *
+nvkm_device_find(u64 handle)
+{
+	struct nvkm_device *device;
+	mutex_lock(&nv_devices_mutex);
+	device = nvkm_device_find_locked(handle);
 	mutex_unlock(&nv_devices_mutex);
-	return match;
+	return device;
 }
 
 int
@@ -62,6 +68,7 @@ nvkm_device_list(u64 *name, int size)
 }
 
 #include <core/parent.h>
+#include <core/client.h>
 
 struct nvkm_device *
 nv_device(void *obj)
@@ -70,7 +77,8 @@ nv_device(void *obj)
 
 	if (device->engine == NULL) {
 		while (device && device->parent) {
-			if (nv_mclass(device) == 0x0080) {
+			if (!nv_iclass(device, NV_SUBDEV_CLASS) &&
+			    device->parent == &nvkm_client(device)->namedb.parent.object) {
 				struct {
 					struct nvkm_parent base;
 					struct nvkm_device *device;
@@ -125,6 +133,9 @@ nvkm_device_fini(struct nvkm_device *device, bool suspend)
 	}
 
 	ret = nvkm_acpi_fini(device, suspend);
+
+	if (device->func->fini)
+		device->func->fini(device, suspend);
 fail:
 	for (; ret && i < NVDEV_SUBDEV_NR; i++) {
 		if ((subdev = device->subdev[i])) {
@@ -140,12 +151,40 @@ nvkm_device_fini(struct nvkm_device *device, bool suspend)
 	return ret;
 }
 
+int
+nvkm_device_preinit(struct nvkm_device *device)
+{
+	int ret;
+	s64 time;
+
+	nvdev_trace(device, "preinit running...\n");
+	time = ktime_to_us(ktime_get());
+
+	if (device->func->preinit) {
+		ret = device->func->preinit(device);
+		if (ret)
+			goto fail;
+	}
+
+	time = ktime_to_us(ktime_get()) - time;
+	nvdev_trace(device, "preinit completed in %lldus\n", time);
+	return 0;
+
+fail:
+	nvdev_error(device, "preinit failed with %d\n", ret);
+	return ret;
+}
+
 int
 nvkm_device_init(struct nvkm_device *device)
 {
 	struct nvkm_object *subdev;
 	int ret, i = 0, c;
 
+	ret = nvkm_device_preinit(device);
+	if (ret)
+		return ret;
+
 	ret = nvkm_acpi_init(device);
 	if (ret)
 		goto fail;
@@ -287,12 +326,6 @@ nv_device_get_irq(struct nvkm_device *device, bool stall)
 	}
 }
 
-static struct nvkm_oclass
-nvkm_device_oclass = {
-	.ofuncs = &(struct nvkm_ofuncs) {
-	},
-};
-
 void
 nvkm_device_del(struct nvkm_device **pdevice)
 {
@@ -308,20 +341,28 @@ nvkm_device_del(struct nvkm_device **pdevice)
 		if (device->pri)
 			iounmap(device->pri);
 		list_del(&device->head);
+
+		if (device->func->dtor)
+			*pdevice = device->func->dtor(device);
 		mutex_unlock(&nv_devices_mutex);
 
-		nvkm_engine_destroy(&device->engine);
+		kfree(*pdevice);
 		*pdevice = NULL;
 	}
 }
 
+static const struct nvkm_engine_func
+nvkm_device_func = {
+};
+
 int
-nvkm_device_new(void *dev, enum nv_bus_type type, u64 name,
-		const char *sname, const char *cfg, const char *dbg,
-		bool detect, bool mmio, u64 subdev_mask,
-		struct nvkm_device **pdevice)
+nvkm_device_ctor(const struct nvkm_device_func *func,
+		 const struct nvkm_device_quirk *quirk,
+		 void *dev, enum nv_bus_type type, u64 handle,
+		 const char *name, const char *cfg, const char *dbg,
+		 bool detect, bool mmio, u64 subdev_mask,
+		 struct nvkm_device *device)
 {
-	struct nvkm_device *device;
 	u64 mmio_base, mmio_size;
 	u32 boot0, strap;
 	void __iomem *map;
@@ -329,17 +370,17 @@ nvkm_device_new(void *dev, enum nv_bus_type type, u64 name,
 	int i;
 
 	mutex_lock(&nv_devices_mutex);
-	list_for_each_entry(device, &nv_devices, head) {
-		if (device->handle == name)
-			goto done;
-	}
+	if (nvkm_device_find_locked(handle))
+		goto done;
 
-	ret = nvkm_engine_create(NULL, NULL, &nvkm_device_oclass, true,
-				 "DEVICE", "device", &device);
-	*pdevice = device;
+	ret = nvkm_engine_ctor(&nvkm_device_func, device, 0, 0,
+			       true, &device->engine);
+	device->engine.subdev.object.parent = NULL;
+	device->func = func;
 	if (ret)
 		goto done;
 
+	device->quirk = quirk;
 	switch (type) {
 	case NVKM_BUS_PCI:
 		device->pdev = dev;
@@ -350,12 +391,11 @@ nvkm_device_new(void *dev, enum nv_bus_type type, u64 name,
 		device->dev = &device->platformdev->dev;
 		break;
 	}
-	device->handle = name;
+	device->handle = handle;
 	device->cfgopt = cfg;
 	device->dbgopt = dbg;
-	device->name = sname;
+	device->name = name;
 
-	nv_subdev(device)->debug = nvkm_dbgopt(device->dbgopt, "DEVICE");
 	list_add_tail(&device->head, &nv_devices);
 
 	ret = nvkm_event_init(&nvkm_device_event_func, 1, 1, &device->event);

commit aa35888ff024b18c7b6b29eb773a221f642987f7
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:16 2015 +1000

    drm/nouveau/object: rename some functions to avoid upcoming conflicts
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 479181c839b4..b7892e6f080b 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -152,7 +152,7 @@ nvkm_device_init(struct nvkm_device *device)
 
 	for (i = 0, c = 0; i < NVDEV_SUBDEV_NR; i++) {
 #define _(s,m) case s: if (device->oclass[s] && !device->subdev[s]) {          \
-		ret = nvkm_object_ctor(nv_object(device), NULL,                \
+		ret = nvkm_object_old(nv_object(device), NULL,                \
 				       device->oclass[s], NULL,  (s),          \
 				       (struct nvkm_object **)&device->m);     \
 		if (ret == -ENODEV) {                                          \

commit a1e88736221d2e971726931c449ed7d0af31755b
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:15 2015 +1000

    drm/nouveau/device: decouple from engine machinery
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 5f64349c9623..479181c839b4 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -61,13 +61,24 @@ nvkm_device_list(u64 *name, int size)
 	return nr;
 }
 
+#include <core/parent.h>
+
 struct nvkm_device *
 nv_device(void *obj)
 {
 	struct nvkm_object *device = nv_object(obj);
+
 	if (device->engine == NULL) {
-		while (device && device->parent)
+		while (device && device->parent) {
+			if (nv_mclass(device) == 0x0080) {
+				struct {
+					struct nvkm_parent base;
+					struct nvkm_device *device;
+				} *udevice = (void *)device;
+				return udevice->device;
+			}
 			device = device->parent;
+		}
 	} else {
 		device = &nv_object(obj)->engine->subdev.object;
 		if (device && device->parent)
@@ -79,12 +90,6 @@ nv_device(void *obj)
 	return (void *)device;
 }
 
-static struct nvkm_oclass
-nvkm_device_sclass[] = {
-	{ 0x0080, &nvkm_udevice_ofuncs },
-	{}
-};
-
 static int
 nvkm_device_event_ctor(struct nvkm_object *object, void *data, u32 size,
 		       struct nvkm_notify *notify)
@@ -103,10 +108,9 @@ nvkm_device_event_func = {
 	.ctor = nvkm_device_event_ctor,
 };
 
-static int
-nvkm_device_fini(struct nvkm_object *object, bool suspend)
+int
+nvkm_device_fini(struct nvkm_device *device, bool suspend)
 {
-	struct nvkm_device *device = (void *)object;
 	struct nvkm_object *subdev;
 	int ret, i;
 
@@ -136,10 +140,9 @@ nvkm_device_fini(struct nvkm_object *object, bool suspend)
 	return ret;
 }
 
-static int
-nvkm_device_init(struct nvkm_object *object)
+int
+nvkm_device_init(struct nvkm_device *device)
 {
-	struct nvkm_device *device = (void *)object;
 	struct nvkm_object *subdev;
 	int ret, i = 0, c;
 
@@ -147,7 +150,7 @@ nvkm_device_init(struct nvkm_object *object)
 	if (ret)
 		goto fail;
 
-	for (i = 1, c = 1; i < NVDEV_SUBDEV_NR; i++) {
+	for (i = 0, c = 0; i < NVDEV_SUBDEV_NR; i++) {
 #define _(s,m) case s: if (device->oclass[s] && !device->subdev[s]) {          \
 		ret = nvkm_object_ctor(nv_object(device), NULL,                \
 				       device->oclass[s], NULL,  (s),          \
@@ -286,10 +289,7 @@ nv_device_get_irq(struct nvkm_device *device, bool stall)
 
 static struct nvkm_oclass
 nvkm_device_oclass = {
-	.handle = NV_ENGINE(DEVICE, 0x00),
 	.ofuncs = &(struct nvkm_ofuncs) {
-		.init = nvkm_device_init,
-		.fini = nvkm_device_fini,
 	},
 };
 
@@ -356,7 +356,6 @@ nvkm_device_new(void *dev, enum nv_bus_type type, u64 name,
 	device->name = sname;
 
 	nv_subdev(device)->debug = nvkm_dbgopt(device->dbgopt, "DEVICE");
-	nv_engine(device)->sclass = nvkm_device_sclass;
 	list_add_tail(&device->head, &nv_devices);
 
 	ret = nvkm_event_init(&nvkm_device_event_func, 1, 1, &device->event);
@@ -482,6 +481,8 @@ nvkm_device_new(void *dev, enum nv_bus_type type, u64 name,
 			device->oclass[i] = NULL;
 	}
 
+	atomic_set(&device->engine.subdev.object.usecount, 2);
+	mutex_init(&device->mutex);
 done:
 	mutex_unlock(&nv_devices_mutex);
 	return ret;

commit a1bfb29a33521efa6b1714589bf68cb4afebacb1
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:15 2015 +1000

    drm/nouveau/device: split user device implementation out on its own
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 1e4935f33842..5f64349c9623 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -24,16 +24,10 @@
 #include "priv.h"
 #include "acpi.h"
 
-#include <core/client.h>
-#include <core/option.h>
 #include <core/notify.h>
-#include <core/parent.h>
-#include <subdev/bios.h>
-#include <subdev/fb.h>
-#include <subdev/instmem.h>
+#include <core/option.h>
 
-#include <nvif/class.h>
-#include <nvif/unpack.h>
+#include <subdev/bios.h>
 
 static DEFINE_MUTEX(nv_devices_mutex);
 static LIST_HEAD(nv_devices);
@@ -67,220 +61,6 @@ nvkm_device_list(u64 *name, int size)
 	return nr;
 }
 
-/******************************************************************************
- * nvkm_devobj (0x0080): class implementation
- *****************************************************************************/
-
-struct nvkm_devobj {
-	struct nvkm_parent base;
-};
-
-static int
-nvkm_devobj_info(struct nvkm_object *object, void *data, u32 size)
-{
-	struct nvkm_device *device = nv_device(object);
-	struct nvkm_fb *fb = nvkm_fb(device);
-	struct nvkm_instmem *imem = nvkm_instmem(device);
-	union {
-		struct nv_device_info_v0 v0;
-	} *args = data;
-	int ret;
-
-	nvif_ioctl(object, "device info size %d\n", size);
-	if (nvif_unpack(args->v0, 0, 0, false)) {
-		nvif_ioctl(object, "device info vers %d\n", args->v0.version);
-	} else
-		return ret;
-
-	switch (device->chipset) {
-	case 0x01a:
-	case 0x01f:
-	case 0x04c:
-	case 0x04e:
-	case 0x063:
-	case 0x067:
-	case 0x068:
-	case 0x0aa:
-	case 0x0ac:
-	case 0x0af:
-		args->v0.platform = NV_DEVICE_INFO_V0_IGP;
-		break;
-	default:
-		if (device->pdev) {
-			if (pci_find_capability(device->pdev, PCI_CAP_ID_AGP))
-				args->v0.platform = NV_DEVICE_INFO_V0_AGP;
-			else
-			if (pci_is_pcie(device->pdev))
-				args->v0.platform = NV_DEVICE_INFO_V0_PCIE;
-			else
-				args->v0.platform = NV_DEVICE_INFO_V0_PCI;
-		} else {
-			args->v0.platform = NV_DEVICE_INFO_V0_SOC;
-		}
-		break;
-	}
-
-	switch (device->card_type) {
-	case NV_04: args->v0.family = NV_DEVICE_INFO_V0_TNT; break;
-	case NV_10:
-	case NV_11: args->v0.family = NV_DEVICE_INFO_V0_CELSIUS; break;
-	case NV_20: args->v0.family = NV_DEVICE_INFO_V0_KELVIN; break;
-	case NV_30: args->v0.family = NV_DEVICE_INFO_V0_RANKINE; break;
-	case NV_40: args->v0.family = NV_DEVICE_INFO_V0_CURIE; break;
-	case NV_50: args->v0.family = NV_DEVICE_INFO_V0_TESLA; break;
-	case NV_C0: args->v0.family = NV_DEVICE_INFO_V0_FERMI; break;
-	case NV_E0: args->v0.family = NV_DEVICE_INFO_V0_KEPLER; break;
-	case GM100: args->v0.family = NV_DEVICE_INFO_V0_MAXWELL; break;
-	default:
-		args->v0.family = 0;
-		break;
-	}
-
-	args->v0.chipset  = device->chipset;
-	args->v0.revision = device->chiprev;
-	if (fb && fb->ram)
-		args->v0.ram_size = args->v0.ram_user = fb->ram->size;
-	else
-		args->v0.ram_size = args->v0.ram_user = 0;
-	if (imem && args->v0.ram_size > 0)
-		args->v0.ram_user = args->v0.ram_user - imem->reserved;
-
-	return 0;
-}
-
-static int
-nvkm_devobj_mthd(struct nvkm_object *object, u32 mthd, void *data, u32 size)
-{
-	switch (mthd) {
-	case NV_DEVICE_V0_INFO:
-		return nvkm_devobj_info(object, data, size);
-	default:
-		break;
-	}
-	return -EINVAL;
-}
-
-static u8
-nvkm_devobj_rd08(struct nvkm_object *object, u64 addr)
-{
-	return nvkm_rd08(object->engine->subdev.device, addr);
-}
-
-static u16
-nvkm_devobj_rd16(struct nvkm_object *object, u64 addr)
-{
-	return nvkm_rd16(object->engine->subdev.device, addr);
-}
-
-static u32
-nvkm_devobj_rd32(struct nvkm_object *object, u64 addr)
-{
-	return nvkm_rd32(object->engine->subdev.device, addr);
-}
-
-static void
-nvkm_devobj_wr08(struct nvkm_object *object, u64 addr, u8 data)
-{
-	nvkm_wr08(object->engine->subdev.device, addr, data);
-}
-
-static void
-nvkm_devobj_wr16(struct nvkm_object *object, u64 addr, u16 data)
-{
-	nvkm_wr16(object->engine->subdev.device, addr, data);
-}
-
-static void
-nvkm_devobj_wr32(struct nvkm_object *object, u64 addr, u32 data)
-{
-	nvkm_wr32(object->engine->subdev.device, addr, data);
-}
-
-static int
-nvkm_devobj_map(struct nvkm_object *object, u64 *addr, u32 *size)
-{
-	struct nvkm_device *device = nv_device(object);
-	*addr = nv_device_resource_start(device, 0);
-	*size = nv_device_resource_len(device, 0);
-	return 0;
-}
-
-static struct nvkm_oclass
-nvkm_devobj_oclass_super = {
-	.handle = NV_DEVICE,
-	.ofuncs = &(struct nvkm_ofuncs) {
-		.dtor = _nvkm_parent_dtor,
-		.init = _nvkm_parent_init,
-		.fini = _nvkm_parent_fini,
-		.mthd = nvkm_devobj_mthd,
-		.map  = nvkm_devobj_map,
-		.rd08 = nvkm_devobj_rd08,
-		.rd16 = nvkm_devobj_rd16,
-		.rd32 = nvkm_devobj_rd32,
-		.wr08 = nvkm_devobj_wr08,
-		.wr16 = nvkm_devobj_wr16,
-		.wr32 = nvkm_devobj_wr32,
-	}
-};
-
-static int
-nvkm_devobj_ctor(struct nvkm_object *parent, struct nvkm_object *engine,
-		 struct nvkm_oclass *oclass, void *data, u32 size,
-		 struct nvkm_object **pobject)
-{
-	union {
-		struct nv_device_v0 v0;
-	} *args = data;
-	struct nvkm_client *client = nv_client(parent);
-	struct nvkm_device *device;
-	struct nvkm_devobj *devobj;
-	int ret;
-
-	nvif_ioctl(parent, "create device size %d\n", size);
-	if (nvif_unpack(args->v0, 0, 0, false)) {
-		nvif_ioctl(parent, "create device v%d device %016llx\n",
-			   args->v0.version, args->v0.device);
-	} else
-		return ret;
-
-	/* give priviledged clients register access */
-	if (client->super)
-		oclass = &nvkm_devobj_oclass_super;
-
-	/* find the device subdev that matches what the client requested */
-	device = client->device;
-	if (args->v0.device != ~0) {
-		device = nvkm_device_find(args->v0.device);
-		if (!device)
-			return -ENODEV;
-	}
-
-	ret = nvkm_parent_create(parent, nv_object(device), oclass, 0,
-				 nvkm_control_oclass,
-				 (1ULL << NVDEV_ENGINE_DMAOBJ) |
-				 (1ULL << NVDEV_ENGINE_FIFO) |
-				 (1ULL << NVDEV_ENGINE_DISP) |
-				 (1ULL << NVDEV_ENGINE_PM), &devobj);
-	*pobject = nv_object(devobj);
-	if (ret)
-		return ret;
-
-	return 0;
-}
-
-static struct nvkm_ofuncs
-nvkm_devobj_ofuncs = {
-	.ctor = nvkm_devobj_ctor,
-	.dtor = _nvkm_parent_dtor,
-	.init = _nvkm_parent_init,
-	.fini = _nvkm_parent_fini,
-	.mthd = nvkm_devobj_mthd,
-};
-
-/******************************************************************************
- * nvkm_device: engine functions
- *****************************************************************************/
-
 struct nvkm_device *
 nv_device(void *obj)
 {
@@ -301,7 +81,7 @@ nv_device(void *obj)
 
 static struct nvkm_oclass
 nvkm_device_sclass[] = {
-	{ 0x0080, &nvkm_devobj_ofuncs },
+	{ 0x0080, &nvkm_udevice_ofuncs },
 	{}
 };
 

commit 0ac9d210a13c6eaa5492bdd27eb0add952238b8c
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:15 2015 +1000

    drm/nouveau/device: simplify subdev construction
    
    Replaces the piece-by-piece (in response to NV_DEVICE ctor args) device
    contruction with a once-off all-or-nothing approach, eliminating some
    tricky refcounting issues.  The partial device init capability was only
    required by some tools, and has been moved to probe time instead.
    
    Temporarily removes a workaround for some boards where we need to fiddle
    with AGP registers before executing the DEVINIT scripts.  A later commit
    in this series reinstates it.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index c943a2ad26c7..1e4935f33842 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -73,7 +73,6 @@ nvkm_device_list(u64 *name, int size)
 
 struct nvkm_devobj {
 	struct nvkm_parent base;
-	struct nvkm_object *subdev[NVDEV_SUBDEV_NR];
 };
 
 static int
@@ -206,65 +205,11 @@ nvkm_devobj_map(struct nvkm_object *object, u64 *addr, u32 *size)
 	return 0;
 }
 
-static const u64 disable_map[] = {
-	[NVDEV_SUBDEV_VBIOS]	= NV_DEVICE_V0_DISABLE_VBIOS,
-	[NVDEV_SUBDEV_DEVINIT]	= NV_DEVICE_V0_DISABLE_CORE,
-	[NVDEV_SUBDEV_GPIO]	= NV_DEVICE_V0_DISABLE_CORE,
-	[NVDEV_SUBDEV_I2C]	= NV_DEVICE_V0_DISABLE_CORE,
-	[NVDEV_SUBDEV_CLK  ]	= NV_DEVICE_V0_DISABLE_CORE,
-	[NVDEV_SUBDEV_MXM]	= NV_DEVICE_V0_DISABLE_CORE,
-	[NVDEV_SUBDEV_MC]	= NV_DEVICE_V0_DISABLE_CORE,
-	[NVDEV_SUBDEV_BUS]	= NV_DEVICE_V0_DISABLE_CORE,
-	[NVDEV_SUBDEV_TIMER]	= NV_DEVICE_V0_DISABLE_CORE,
-	[NVDEV_SUBDEV_FB]	= NV_DEVICE_V0_DISABLE_CORE,
-	[NVDEV_SUBDEV_LTC]	= NV_DEVICE_V0_DISABLE_CORE,
-	[NVDEV_SUBDEV_IBUS]	= NV_DEVICE_V0_DISABLE_CORE,
-	[NVDEV_SUBDEV_INSTMEM]	= NV_DEVICE_V0_DISABLE_CORE,
-	[NVDEV_SUBDEV_MMU]	= NV_DEVICE_V0_DISABLE_CORE,
-	[NVDEV_SUBDEV_BAR]	= NV_DEVICE_V0_DISABLE_CORE,
-	[NVDEV_SUBDEV_VOLT]	= NV_DEVICE_V0_DISABLE_CORE,
-	[NVDEV_SUBDEV_THERM]	= NV_DEVICE_V0_DISABLE_CORE,
-	[NVDEV_SUBDEV_PMU]	= NV_DEVICE_V0_DISABLE_CORE,
-	[NVDEV_SUBDEV_FUSE]	= NV_DEVICE_V0_DISABLE_CORE,
-	[NVDEV_ENGINE_DMAOBJ]	= NV_DEVICE_V0_DISABLE_CORE,
-	[NVDEV_ENGINE_PM     ]  = NV_DEVICE_V0_DISABLE_CORE,
-	[NVDEV_ENGINE_FIFO]	= NV_DEVICE_V0_DISABLE_FIFO,
-	[NVDEV_ENGINE_SW]	= NV_DEVICE_V0_DISABLE_FIFO,
-	[NVDEV_ENGINE_GR]	= NV_DEVICE_V0_DISABLE_GR,
-	[NVDEV_ENGINE_MPEG]	= NV_DEVICE_V0_DISABLE_MPEG,
-	[NVDEV_ENGINE_ME]	= NV_DEVICE_V0_DISABLE_ME,
-	[NVDEV_ENGINE_VP]	= NV_DEVICE_V0_DISABLE_VP,
-	[NVDEV_ENGINE_CIPHER]	= NV_DEVICE_V0_DISABLE_CIPHER,
-	[NVDEV_ENGINE_BSP]	= NV_DEVICE_V0_DISABLE_BSP,
-	[NVDEV_ENGINE_MSPPP]	= NV_DEVICE_V0_DISABLE_MSPPP,
-	[NVDEV_ENGINE_CE0]	= NV_DEVICE_V0_DISABLE_CE0,
-	[NVDEV_ENGINE_CE1]	= NV_DEVICE_V0_DISABLE_CE1,
-	[NVDEV_ENGINE_CE2]	= NV_DEVICE_V0_DISABLE_CE2,
-	[NVDEV_ENGINE_VIC]	= NV_DEVICE_V0_DISABLE_VIC,
-	[NVDEV_ENGINE_MSENC]	= NV_DEVICE_V0_DISABLE_MSENC,
-	[NVDEV_ENGINE_DISP]	= NV_DEVICE_V0_DISABLE_DISP,
-	[NVDEV_ENGINE_MSVLD]	= NV_DEVICE_V0_DISABLE_MSVLD,
-	[NVDEV_ENGINE_SEC]	= NV_DEVICE_V0_DISABLE_SEC,
-	[NVDEV_SUBDEV_NR]	= 0,
-};
-
-static void
-nvkm_devobj_dtor(struct nvkm_object *object)
-{
-	struct nvkm_devobj *devobj = (void *)object;
-	int i;
-
-	for (i = NVDEV_SUBDEV_NR - 1; i >= 0; i--)
-		nvkm_object_ref(NULL, &devobj->subdev[i]);
-
-	nvkm_parent_destroy(&devobj->base);
-}
-
 static struct nvkm_oclass
 nvkm_devobj_oclass_super = {
 	.handle = NV_DEVICE,
 	.ofuncs = &(struct nvkm_ofuncs) {
-		.dtor = nvkm_devobj_dtor,
+		.dtor = _nvkm_parent_dtor,
 		.init = _nvkm_parent_init,
 		.fini = _nvkm_parent_fini,
 		.mthd = nvkm_devobj_mthd,
@@ -289,17 +234,12 @@ nvkm_devobj_ctor(struct nvkm_object *parent, struct nvkm_object *engine,
 	struct nvkm_client *client = nv_client(parent);
 	struct nvkm_device *device;
 	struct nvkm_devobj *devobj;
-	u32 boot0, strap;
-	u64 disable, mmio_base, mmio_size;
-	void __iomem *map;
-	int ret, i, c;
+	int ret;
 
 	nvif_ioctl(parent, "create device size %d\n", size);
 	if (nvif_unpack(args->v0, 0, 0, false)) {
-		nvif_ioctl(parent, "create device v%d device %016llx "
-				   "disable %016llx debug0 %016llx\n",
-			   args->v0.version, args->v0.device,
-			   args->v0.disable, args->v0.debug0);
+		nvif_ioctl(parent, "create device v%d device %016llx\n",
+			   args->v0.version, args->v0.device);
 	} else
 		return ret;
 
@@ -325,226 +265,13 @@ nvkm_devobj_ctor(struct nvkm_object *parent, struct nvkm_object *engine,
 	if (ret)
 		return ret;
 
-	mmio_base = nv_device_resource_start(device, 0);
-	mmio_size = nv_device_resource_len(device, 0);
-
-	/* translate api disable mask into internal mapping */
-	disable = args->v0.debug0;
-	for (i = 0; i < NVDEV_SUBDEV_NR; i++) {
-		if (args->v0.disable & disable_map[i])
-			disable |= (1ULL << i);
-	}
-
-	/* identify the chipset, and determine classes of subdev/engines */
-	if (!(args->v0.disable & NV_DEVICE_V0_DISABLE_IDENTIFY) &&
-	    !device->card_type) {
-		map = ioremap(mmio_base, 0x102000);
-		if (map == NULL)
-			return -ENOMEM;
-
-		/* switch mmio to cpu's native endianness */
-#ifndef __BIG_ENDIAN
-		if (ioread32_native(map + 0x000004) != 0x00000000) {
-#else
-		if (ioread32_native(map + 0x000004) == 0x00000000) {
-#endif
-			iowrite32_native(0x01000001, map + 0x000004);
-			ioread32_native(map);
-		}
-
-		/* read boot0 and strapping information */
-		boot0 = ioread32_native(map + 0x000000);
-		strap = ioread32_native(map + 0x101000);
-		iounmap(map);
-
-		/* determine chipset and derive architecture from it */
-		if ((boot0 & 0x1f000000) > 0) {
-			device->chipset = (boot0 & 0x1ff00000) >> 20;
-			device->chiprev = (boot0 & 0x000000ff);
-			switch (device->chipset & 0x1f0) {
-			case 0x010: {
-				if (0x461 & (1 << (device->chipset & 0xf)))
-					device->card_type = NV_10;
-				else
-					device->card_type = NV_11;
-				device->chiprev = 0x00;
-				break;
-			}
-			case 0x020: device->card_type = NV_20; break;
-			case 0x030: device->card_type = NV_30; break;
-			case 0x040:
-			case 0x060: device->card_type = NV_40; break;
-			case 0x050:
-			case 0x080:
-			case 0x090:
-			case 0x0a0: device->card_type = NV_50; break;
-			case 0x0c0:
-			case 0x0d0: device->card_type = NV_C0; break;
-			case 0x0e0:
-			case 0x0f0:
-			case 0x100: device->card_type = NV_E0; break;
-			case 0x110:
-			case 0x120: device->card_type = GM100; break;
-			default:
-				break;
-			}
-		} else
-		if ((boot0 & 0xff00fff0) == 0x20004000) {
-			if (boot0 & 0x00f00000)
-				device->chipset = 0x05;
-			else
-				device->chipset = 0x04;
-			device->card_type = NV_04;
-		}
-
-		switch (device->card_type) {
-		case NV_04: ret = nv04_identify(device); break;
-		case NV_10:
-		case NV_11: ret = nv10_identify(device); break;
-		case NV_20: ret = nv20_identify(device); break;
-		case NV_30: ret = nv30_identify(device); break;
-		case NV_40: ret = nv40_identify(device); break;
-		case NV_50: ret = nv50_identify(device); break;
-		case NV_C0: ret = gf100_identify(device); break;
-		case NV_E0: ret = gk104_identify(device); break;
-		case GM100: ret = gm100_identify(device); break;
-		default:
-			ret = -EINVAL;
-			break;
-		}
-
-		if (ret) {
-			nvdev_error(device, "unknown chipset (%08x)\n", boot0);
-			return ret;
-		}
-
-		nvdev_info(device, "NVIDIA %s (%08x)\n", device->cname, boot0);
-
-		/* determine frequency of timing crystal */
-		if ( device->card_type <= NV_10 || device->chipset < 0x17 ||
-		    (device->chipset >= 0x20 && device->chipset < 0x25))
-			strap &= 0x00000040;
-		else
-			strap &= 0x00400040;
-
-		switch (strap) {
-		case 0x00000000: device->crystal = 13500; break;
-		case 0x00000040: device->crystal = 14318; break;
-		case 0x00400000: device->crystal = 27000; break;
-		case 0x00400040: device->crystal = 25000; break;
-		}
-	} else
-	if ( (args->v0.disable & NV_DEVICE_V0_DISABLE_IDENTIFY)) {
-		device->cname = "NULL";
-		device->oclass[NVDEV_SUBDEV_VBIOS] = &nvkm_bios_oclass;
-	}
-
-	if (!(args->v0.disable & NV_DEVICE_V0_DISABLE_MMIO) && !device->pri) {
-		device->pri = ioremap(mmio_base, mmio_size);
-		if (!device->pri) {
-			nvdev_error(device, "unable to map PRI\n");
-			return -ENOMEM;
-		}
-	}
-
-	/* ensure requested subsystems are available for use */
-	for (i = 1, c = 1; i < NVDEV_SUBDEV_NR; i++) {
-		if (!(oclass = device->oclass[i]) || (disable & (1ULL << i)))
-			continue;
-
-		if (device->subdev[i]) {
-			nvkm_object_ref(device->subdev[i], &devobj->subdev[i]);
-			continue;
-		}
-
-#define _(s,m) case s:                                                         \
-		ret = nvkm_object_ctor(nv_object(device), NULL, oclass, NULL,  \
-				       (s), (struct nvkm_object **)&device->m);\
-		if (ret == -ENODEV)                                            \
-			continue;                                              \
-		if (ret)                                                       \
-			return ret;                                            \
-		devobj->subdev[s] = (struct nvkm_object *)device->m;           \
-		device->subdev[s] = devobj->subdev[s];                         \
-		break
-
-		switch (i) {
-		_(NVDEV_SUBDEV_BAR    ,     bar);
-		_(NVDEV_SUBDEV_VBIOS  ,    bios);
-		_(NVDEV_SUBDEV_BUS    ,     bus);
-		_(NVDEV_SUBDEV_CLK    ,     clk);
-		_(NVDEV_SUBDEV_DEVINIT, devinit);
-		_(NVDEV_SUBDEV_FB     ,      fb);
-		_(NVDEV_SUBDEV_FUSE   ,    fuse);
-		_(NVDEV_SUBDEV_GPIO   ,    gpio);
-		_(NVDEV_SUBDEV_I2C    ,     i2c);
-		_(NVDEV_SUBDEV_IBUS   ,    ibus);
-		_(NVDEV_SUBDEV_INSTMEM,    imem);
-		_(NVDEV_SUBDEV_LTC    ,     ltc);
-		_(NVDEV_SUBDEV_MC     ,      mc);
-		_(NVDEV_SUBDEV_MMU    ,     mmu);
-		_(NVDEV_SUBDEV_MXM    ,     mxm);
-		_(NVDEV_SUBDEV_PMU    ,     pmu);
-		_(NVDEV_SUBDEV_THERM  ,   therm);
-		_(NVDEV_SUBDEV_TIMER  ,   timer);
-		_(NVDEV_SUBDEV_VOLT   ,    volt);
-		_(NVDEV_ENGINE_BSP    ,     bsp);
-		_(NVDEV_ENGINE_CE0    ,   ce[0]);
-		_(NVDEV_ENGINE_CE1    ,   ce[1]);
-		_(NVDEV_ENGINE_CE2    ,   ce[2]);
-		_(NVDEV_ENGINE_CIPHER ,  cipher);
-		_(NVDEV_ENGINE_DISP   ,    disp);
-		_(NVDEV_ENGINE_DMAOBJ ,     dma);
-		_(NVDEV_ENGINE_FIFO   ,    fifo);
-		_(NVDEV_ENGINE_GR     ,      gr);
-		_(NVDEV_ENGINE_IFB    ,     ifb);
-		_(NVDEV_ENGINE_ME     ,      me);
-		_(NVDEV_ENGINE_MPEG   ,    mpeg);
-		_(NVDEV_ENGINE_MSENC  ,   msenc);
-		_(NVDEV_ENGINE_MSPDEC ,  mspdec);
-		_(NVDEV_ENGINE_MSPPP  ,   msppp);
-		_(NVDEV_ENGINE_MSVLD  ,   msvld);
-		_(NVDEV_ENGINE_PM     ,      pm);
-		_(NVDEV_ENGINE_SEC    ,     sec);
-		_(NVDEV_ENGINE_SW     ,      sw);
-		_(NVDEV_ENGINE_VIC    ,     vic);
-		_(NVDEV_ENGINE_VP     ,      vp);
-		default:
-			WARN_ON(1);
-			continue;
-		}
-#undef _
-
-		/* note: can't init *any* subdevs until devinit has been run
-		 * due to not knowing exactly what the vbios init tables will
-		 * mess with.  devinit also can't be run until all of its
-		 * dependencies have been created.
-		 *
-		 * this code delays init of any subdev until all of devinit's
-		 * dependencies have been created, and then initialises each
-		 * subdev in turn as they're created.
-		 */
-		while (i >= NVDEV_SUBDEV_DEVINIT_LAST && c <= i) {
-			struct nvkm_object *subdev = devobj->subdev[c++];
-			if (subdev && !nv_iclass(subdev, NV_ENGINE_CLASS)) {
-				ret = nvkm_object_inc(subdev);
-				if (ret)
-					return ret;
-				atomic_dec(&nv_object(device)->usecount);
-			} else
-			if (subdev) {
-				nvkm_subdev_reset(subdev);
-			}
-		}
-	}
-
 	return 0;
 }
 
 static struct nvkm_ofuncs
 nvkm_devobj_ofuncs = {
 	.ctor = nvkm_devobj_ctor,
-	.dtor = nvkm_devobj_dtor,
+	.dtor = _nvkm_parent_dtor,
 	.init = _nvkm_parent_init,
 	.fini = _nvkm_parent_fini,
 	.mthd = nvkm_devobj_mthd,
@@ -634,19 +361,89 @@ nvkm_device_init(struct nvkm_object *object)
 {
 	struct nvkm_device *device = (void *)object;
 	struct nvkm_object *subdev;
-	int ret, i = 0;
+	int ret, i = 0, c;
 
 	ret = nvkm_acpi_init(device);
 	if (ret)
 		goto fail;
 
-	for (i = 0; i < NVDEV_SUBDEV_NR; i++) {
-		if ((subdev = device->subdev[i])) {
-			if (!nv_iclass(subdev, NV_ENGINE_CLASS)) {
+	for (i = 1, c = 1; i < NVDEV_SUBDEV_NR; i++) {
+#define _(s,m) case s: if (device->oclass[s] && !device->subdev[s]) {          \
+		ret = nvkm_object_ctor(nv_object(device), NULL,                \
+				       device->oclass[s], NULL,  (s),          \
+				       (struct nvkm_object **)&device->m);     \
+		if (ret == -ENODEV) {                                          \
+			device->oclass[s] = NULL;                              \
+			continue;                                              \
+		}                                                              \
+		if (ret)                                                       \
+			goto fail;                                             \
+		device->subdev[s] = (struct nvkm_object *)device->m;           \
+} break
+		switch (i) {
+		_(NVDEV_SUBDEV_BAR    ,     bar);
+		_(NVDEV_SUBDEV_VBIOS  ,    bios);
+		_(NVDEV_SUBDEV_BUS    ,     bus);
+		_(NVDEV_SUBDEV_CLK    ,     clk);
+		_(NVDEV_SUBDEV_DEVINIT, devinit);
+		_(NVDEV_SUBDEV_FB     ,      fb);
+		_(NVDEV_SUBDEV_FUSE   ,    fuse);
+		_(NVDEV_SUBDEV_GPIO   ,    gpio);
+		_(NVDEV_SUBDEV_I2C    ,     i2c);
+		_(NVDEV_SUBDEV_IBUS   ,    ibus);
+		_(NVDEV_SUBDEV_INSTMEM,    imem);
+		_(NVDEV_SUBDEV_LTC    ,     ltc);
+		_(NVDEV_SUBDEV_MC     ,      mc);
+		_(NVDEV_SUBDEV_MMU    ,     mmu);
+		_(NVDEV_SUBDEV_MXM    ,     mxm);
+		_(NVDEV_SUBDEV_PMU    ,     pmu);
+		_(NVDEV_SUBDEV_THERM  ,   therm);
+		_(NVDEV_SUBDEV_TIMER  ,   timer);
+		_(NVDEV_SUBDEV_VOLT   ,    volt);
+		_(NVDEV_ENGINE_BSP    ,     bsp);
+		_(NVDEV_ENGINE_CE0    ,   ce[0]);
+		_(NVDEV_ENGINE_CE1    ,   ce[1]);
+		_(NVDEV_ENGINE_CE2    ,   ce[2]);
+		_(NVDEV_ENGINE_CIPHER ,  cipher);
+		_(NVDEV_ENGINE_DISP   ,    disp);
+		_(NVDEV_ENGINE_DMAOBJ ,     dma);
+		_(NVDEV_ENGINE_FIFO   ,    fifo);
+		_(NVDEV_ENGINE_GR     ,      gr);
+		_(NVDEV_ENGINE_IFB    ,     ifb);
+		_(NVDEV_ENGINE_ME     ,      me);
+		_(NVDEV_ENGINE_MPEG   ,    mpeg);
+		_(NVDEV_ENGINE_MSENC  ,   msenc);
+		_(NVDEV_ENGINE_MSPDEC ,  mspdec);
+		_(NVDEV_ENGINE_MSPPP  ,   msppp);
+		_(NVDEV_ENGINE_MSVLD  ,   msvld);
+		_(NVDEV_ENGINE_PM     ,      pm);
+		_(NVDEV_ENGINE_SEC    ,     sec);
+		_(NVDEV_ENGINE_SW     ,      sw);
+		_(NVDEV_ENGINE_VIC    ,     vic);
+		_(NVDEV_ENGINE_VP     ,      vp);
+		default:
+			WARN_ON(1);
+			continue;
+		}
+#undef _
+
+		/* note: can't init *any* subdevs until devinit has been run
+		 * due to not knowing exactly what the vbios init tables will
+		 * mess with.  devinit also can't be run until all of its
+		 * dependencies have been created.
+		 *
+		 * this code delays init of any subdev until all of devinit's
+		 * dependencies have been created, and then initialises each
+		 * subdev in turn as they're created.
+		 */
+		while (i >= NVDEV_SUBDEV_DEVINIT_LAST && c <= i) {
+			struct nvkm_object *subdev = device->subdev[c++];
+			if (subdev && !nv_iclass(subdev, NV_ENGINE_CLASS)) {
 				ret = nvkm_object_inc(subdev);
 				if (ret)
 					goto fail;
-			} else {
+			} else
+			if (subdev) {
 				nvkm_subdev_reset(subdev);
 			}
 		}
@@ -720,15 +517,18 @@ void
 nvkm_device_del(struct nvkm_device **pdevice)
 {
 	struct nvkm_device *device = *pdevice;
+	int i;
 	if (device) {
-		nvkm_event_fini(&device->event);
-
 		mutex_lock(&nv_devices_mutex);
-		list_del(&device->head);
-		mutex_unlock(&nv_devices_mutex);
+		for (i = NVDEV_SUBDEV_NR - 1; i >= 0; i--)
+			nvkm_object_ref(NULL, &device->subdev[i]);
+
+		nvkm_event_fini(&device->event);
 
 		if (device->pri)
 			iounmap(device->pri);
+		list_del(&device->head);
+		mutex_unlock(&nv_devices_mutex);
 
 		nvkm_engine_destroy(&device->engine);
 		*pdevice = NULL;
@@ -738,10 +538,15 @@ nvkm_device_del(struct nvkm_device **pdevice)
 int
 nvkm_device_new(void *dev, enum nv_bus_type type, u64 name,
 		const char *sname, const char *cfg, const char *dbg,
+		bool detect, bool mmio, u64 subdev_mask,
 		struct nvkm_device **pdevice)
 {
 	struct nvkm_device *device;
+	u64 mmio_base, mmio_size;
+	u32 boot0, strap;
+	void __iomem *map;
 	int ret = -EEXIST;
+	int i;
 
 	mutex_lock(&nv_devices_mutex);
 	list_for_each_entry(device, &nv_devices, head) {
@@ -775,6 +580,128 @@ nvkm_device_new(void *dev, enum nv_bus_type type, u64 name,
 	list_add_tail(&device->head, &nv_devices);
 
 	ret = nvkm_event_init(&nvkm_device_event_func, 1, 1, &device->event);
+	if (ret)
+		goto done;
+
+	mmio_base = nv_device_resource_start(device, 0);
+	mmio_size = nv_device_resource_len(device, 0);
+
+	/* identify the chipset, and determine classes of subdev/engines */
+	if (detect) {
+		map = ioremap(mmio_base, 0x102000);
+		if (ret = -ENOMEM, map == NULL)
+			goto done;
+
+		/* switch mmio to cpu's native endianness */
+#ifndef __BIG_ENDIAN
+		if (ioread32_native(map + 0x000004) != 0x00000000) {
+#else
+		if (ioread32_native(map + 0x000004) == 0x00000000) {
+#endif
+			iowrite32_native(0x01000001, map + 0x000004);
+			ioread32_native(map);
+		}
+
+		/* read boot0 and strapping information */
+		boot0 = ioread32_native(map + 0x000000);
+		strap = ioread32_native(map + 0x101000);
+		iounmap(map);
+
+		/* determine chipset and derive architecture from it */
+		if ((boot0 & 0x1f000000) > 0) {
+			device->chipset = (boot0 & 0x1ff00000) >> 20;
+			device->chiprev = (boot0 & 0x000000ff);
+			switch (device->chipset & 0x1f0) {
+			case 0x010: {
+				if (0x461 & (1 << (device->chipset & 0xf)))
+					device->card_type = NV_10;
+				else
+					device->card_type = NV_11;
+				device->chiprev = 0x00;
+				break;
+			}
+			case 0x020: device->card_type = NV_20; break;
+			case 0x030: device->card_type = NV_30; break;
+			case 0x040:
+			case 0x060: device->card_type = NV_40; break;
+			case 0x050:
+			case 0x080:
+			case 0x090:
+			case 0x0a0: device->card_type = NV_50; break;
+			case 0x0c0:
+			case 0x0d0: device->card_type = NV_C0; break;
+			case 0x0e0:
+			case 0x0f0:
+			case 0x100: device->card_type = NV_E0; break;
+			case 0x110:
+			case 0x120: device->card_type = GM100; break;
+			default:
+				break;
+			}
+		} else
+		if ((boot0 & 0xff00fff0) == 0x20004000) {
+			if (boot0 & 0x00f00000)
+				device->chipset = 0x05;
+			else
+				device->chipset = 0x04;
+			device->card_type = NV_04;
+		}
+
+		switch (device->card_type) {
+		case NV_04: ret = nv04_identify(device); break;
+		case NV_10:
+		case NV_11: ret = nv10_identify(device); break;
+		case NV_20: ret = nv20_identify(device); break;
+		case NV_30: ret = nv30_identify(device); break;
+		case NV_40: ret = nv40_identify(device); break;
+		case NV_50: ret = nv50_identify(device); break;
+		case NV_C0: ret = gf100_identify(device); break;
+		case NV_E0: ret = gk104_identify(device); break;
+		case GM100: ret = gm100_identify(device); break;
+		default:
+			ret = -EINVAL;
+			break;
+		}
+
+		if (ret) {
+			nvdev_error(device, "unknown chipset (%08x)\n", boot0);
+			goto done;
+		}
+
+		nvdev_info(device, "NVIDIA %s (%08x)\n", device->cname, boot0);
+
+		/* determine frequency of timing crystal */
+		if ( device->card_type <= NV_10 || device->chipset < 0x17 ||
+		    (device->chipset >= 0x20 && device->chipset < 0x25))
+			strap &= 0x00000040;
+		else
+			strap &= 0x00400040;
+
+		switch (strap) {
+		case 0x00000000: device->crystal = 13500; break;
+		case 0x00000040: device->crystal = 14318; break;
+		case 0x00400000: device->crystal = 27000; break;
+		case 0x00400040: device->crystal = 25000; break;
+		}
+	} else {
+		device->cname = "NULL";
+		device->oclass[NVDEV_SUBDEV_VBIOS] = &nvkm_bios_oclass;
+	}
+
+	if (mmio) {
+		device->pri = ioremap(mmio_base, mmio_size);
+		if (!device->pri) {
+			nvdev_error(device, "unable to map PRI\n");
+			return -ENOMEM;
+		}
+	}
+
+	/* disable subdevs that aren't required (used by tools) */
+	for (i = 0; i < NVDEV_SUBDEV_NR; i++) {
+		if (!(subdev_mask & (1ULL << i)))
+			device->oclass[i] = NULL;
+	}
+
 done:
 	mutex_unlock(&nv_devices_mutex);
 	return ret;

commit e781dc8f6cebf69bd410eb652a13e0a3797d71fe
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:15 2015 +1000

    drm/nouveau/device: tidy ctor/dtor interfaces
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index e08418436e0c..c943a2ad26c7 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -666,23 +666,6 @@ nvkm_device_init(struct nvkm_object *object)
 	return ret;
 }
 
-static void
-nvkm_device_dtor(struct nvkm_object *object)
-{
-	struct nvkm_device *device = (void *)object;
-
-	nvkm_event_fini(&device->event);
-
-	mutex_lock(&nv_devices_mutex);
-	list_del(&device->head);
-	mutex_unlock(&nv_devices_mutex);
-
-	if (device->pri)
-		iounmap(device->pri);
-
-	nvkm_engine_destroy(&device->engine);
-}
-
 resource_size_t
 nv_device_resource_start(struct nvkm_device *device, unsigned int bar)
 {
@@ -728,16 +711,34 @@ static struct nvkm_oclass
 nvkm_device_oclass = {
 	.handle = NV_ENGINE(DEVICE, 0x00),
 	.ofuncs = &(struct nvkm_ofuncs) {
-		.dtor = nvkm_device_dtor,
 		.init = nvkm_device_init,
 		.fini = nvkm_device_fini,
 	},
 };
 
+void
+nvkm_device_del(struct nvkm_device **pdevice)
+{
+	struct nvkm_device *device = *pdevice;
+	if (device) {
+		nvkm_event_fini(&device->event);
+
+		mutex_lock(&nv_devices_mutex);
+		list_del(&device->head);
+		mutex_unlock(&nv_devices_mutex);
+
+		if (device->pri)
+			iounmap(device->pri);
+
+		nvkm_engine_destroy(&device->engine);
+		*pdevice = NULL;
+	}
+}
+
 int
-nvkm_device_create_(void *dev, enum nv_bus_type type, u64 name,
-		    const char *sname, const char *cfg, const char *dbg,
-		    int length, void **pobject)
+nvkm_device_new(void *dev, enum nv_bus_type type, u64 name,
+		const char *sname, const char *cfg, const char *dbg,
+		struct nvkm_device **pdevice)
 {
 	struct nvkm_device *device;
 	int ret = -EEXIST;
@@ -748,9 +749,9 @@ nvkm_device_create_(void *dev, enum nv_bus_type type, u64 name,
 			goto done;
 	}
 
-	ret = nvkm_engine_create_(NULL, NULL, &nvkm_device_oclass, true,
-				  "DEVICE", "device", length, pobject);
-	device = *pobject;
+	ret = nvkm_engine_create(NULL, NULL, &nvkm_device_oclass, true,
+				 "DEVICE", "device", &device);
+	*pdevice = device;
 	if (ret)
 		goto done;
 

commit 76ecea5b4b9383edde2bfe49e59e76fec4e21aa4
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:15 2015 +1000

    drm/nouveau/client: tidy ctor/dtor interfaces
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index af8f9ccdc8f6..e08418436e0c 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -308,7 +308,7 @@ nvkm_devobj_ctor(struct nvkm_object *parent, struct nvkm_object *engine,
 		oclass = &nvkm_devobj_oclass_super;
 
 	/* find the device subdev that matches what the client requested */
-	device = nv_device(client->device);
+	device = client->device;
 	if (args->v0.device != ~0) {
 		device = nvkm_device_find(args->v0.device);
 		if (!device)

commit 53003941067534b1071b0f7b71f4700c16d97b28
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:13 2015 +1000

    drm/nouveau/core: remove last printks
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index c58ea4f44c70..af8f9ccdc8f6 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -87,9 +87,9 @@ nvkm_devobj_info(struct nvkm_object *object, void *data, u32 size)
 	} *args = data;
 	int ret;
 
-	nv_ioctl(object, "device info size %d\n", size);
+	nvif_ioctl(object, "device info size %d\n", size);
 	if (nvif_unpack(args->v0, 0, 0, false)) {
-		nv_ioctl(object, "device info vers %d\n", args->v0.version);
+		nvif_ioctl(object, "device info vers %d\n", args->v0.version);
 	} else
 		return ret;
 
@@ -294,12 +294,12 @@ nvkm_devobj_ctor(struct nvkm_object *parent, struct nvkm_object *engine,
 	void __iomem *map;
 	int ret, i, c;
 
-	nv_ioctl(parent, "create device size %d\n", size);
+	nvif_ioctl(parent, "create device size %d\n", size);
 	if (nvif_unpack(args->v0, 0, 0, false)) {
-		nv_ioctl(parent, "create device v%d device %016llx "
-				 "disable %016llx debug0 %016llx\n",
-			 args->v0.version, args->v0.device,
-			 args->v0.disable, args->v0.debug0);
+		nvif_ioctl(parent, "create device v%d device %016llx "
+				   "disable %016llx debug0 %016llx\n",
+			   args->v0.version, args->v0.device,
+			   args->v0.disable, args->v0.debug0);
 	} else
 		return ret;
 
@@ -567,8 +567,7 @@ nv_device(void *obj)
 			device = device->parent;
 	}
 #if CONFIG_NOUVEAU_DEBUG >= NV_DBG_PARANOIA
-	if (unlikely(!device))
-		nv_assert("BAD CAST -> NvDevice, 0x%08x\n", nv_hclass(obj));
+	BUG_ON(!device);
 #endif
 	return (void *)device;
 }

commit e37f543370b86de9eefd86896adb171b7c45a451
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:13 2015 +1000

    drm/nouveau/device: switch to dev_printk macros
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index bced8ea58f45..c58ea4f44c70 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -414,14 +414,11 @@ nvkm_devobj_ctor(struct nvkm_object *parent, struct nvkm_object *engine,
 		}
 
 		if (ret) {
-			nv_error(device, "unknown chipset, 0x%08x\n", boot0);
+			nvdev_error(device, "unknown chipset (%08x)\n", boot0);
 			return ret;
 		}
 
-		nv_info(device, "BOOT0  : 0x%08x\n", boot0);
-		nv_info(device, "Chipset: %s (NV%02X)\n",
-			device->cname, device->chipset);
-		nv_info(device, "Family : NV%02X\n", device->card_type);
+		nvdev_info(device, "NVIDIA %s (%08x)\n", device->cname, boot0);
 
 		/* determine frequency of timing crystal */
 		if ( device->card_type <= NV_10 || device->chipset < 0x17 ||
@@ -436,8 +433,6 @@ nvkm_devobj_ctor(struct nvkm_object *parent, struct nvkm_object *engine,
 		case 0x00400000: device->crystal = 27000; break;
 		case 0x00400040: device->crystal = 25000; break;
 		}
-
-		nv_debug(device, "crystal freq: %dKHz\n", device->crystal);
 	} else
 	if ( (args->v0.disable & NV_DEVICE_V0_DISABLE_IDENTIFY)) {
 		device->cname = "NULL";
@@ -447,7 +442,7 @@ nvkm_devobj_ctor(struct nvkm_object *parent, struct nvkm_object *engine,
 	if (!(args->v0.disable & NV_DEVICE_V0_DISABLE_MMIO) && !device->pri) {
 		device->pri = ioremap(mmio_base, mmio_size);
 		if (!device->pri) {
-			nv_error(device, "unable to map device registers\n");
+			nvdev_error(device, "unable to map PRI\n");
 			return -ENOMEM;
 		}
 	}

commit 2ebfa1bc6ff1a7cded8b662f507d34574ffcc2c6
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:10 2015 +1000

    drm/nouveau/kms/nv04: fix incorrect use of register accessors
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 35047437cf4c..bced8ea58f45 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -444,10 +444,9 @@ nvkm_devobj_ctor(struct nvkm_object *parent, struct nvkm_object *engine,
 		device->oclass[NVDEV_SUBDEV_VBIOS] = &nvkm_bios_oclass;
 	}
 
-	if (!(args->v0.disable & NV_DEVICE_V0_DISABLE_MMIO) &&
-	    !nv_subdev(device)->mmio) {
-		nv_subdev(device)->mmio  = ioremap(mmio_base, mmio_size);
-		if (!nv_subdev(device)->mmio) {
+	if (!(args->v0.disable & NV_DEVICE_V0_DISABLE_MMIO) && !device->pri) {
+		device->pri = ioremap(mmio_base, mmio_size);
+		if (!device->pri) {
 			nv_error(device, "unable to map device registers\n");
 			return -ENOMEM;
 		}
@@ -684,8 +683,8 @@ nvkm_device_dtor(struct nvkm_object *object)
 	list_del(&device->head);
 	mutex_unlock(&nv_devices_mutex);
 
-	if (nv_subdev(device)->mmio)
-		iounmap(nv_subdev(device)->mmio);
+	if (device->pri)
+		iounmap(device->pri);
 
 	nvkm_engine_destroy(&device->engine);
 }

commit f9793bb7ed4d83c1b72661c1cca2949a343df231
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:10 2015 +1000

    drm/nouveau/device: switch to device pri macros
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 106ec87749a4..35047437cf4c 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -164,37 +164,37 @@ nvkm_devobj_mthd(struct nvkm_object *object, u32 mthd, void *data, u32 size)
 static u8
 nvkm_devobj_rd08(struct nvkm_object *object, u64 addr)
 {
-	return nv_rd08(object->engine, addr);
+	return nvkm_rd08(object->engine->subdev.device, addr);
 }
 
 static u16
 nvkm_devobj_rd16(struct nvkm_object *object, u64 addr)
 {
-	return nv_rd16(object->engine, addr);
+	return nvkm_rd16(object->engine->subdev.device, addr);
 }
 
 static u32
 nvkm_devobj_rd32(struct nvkm_object *object, u64 addr)
 {
-	return nv_rd32(object->engine, addr);
+	return nvkm_rd32(object->engine->subdev.device, addr);
 }
 
 static void
 nvkm_devobj_wr08(struct nvkm_object *object, u64 addr, u8 data)
 {
-	nv_wr08(object->engine, addr, data);
+	nvkm_wr08(object->engine->subdev.device, addr, data);
 }
 
 static void
 nvkm_devobj_wr16(struct nvkm_object *object, u64 addr, u16 data)
 {
-	nv_wr16(object->engine, addr, data);
+	nvkm_wr16(object->engine->subdev.device, addr, data);
 }
 
 static void
 nvkm_devobj_wr32(struct nvkm_object *object, u64 addr, u32 data)
 {
-	nv_wr32(object->engine, addr, data);
+	nvkm_wr32(object->engine->subdev.device, addr, data);
 }
 
 static int

commit b1e4553cb1f9deddbd8c13d95e9cef81967a3f41
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:06 2015 +1000

    drm/nouveau/fb: cosmetic changes
    
    This is purely preparation for upcoming commits, there should be no
    code changes here.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 28ebe06e87b9..106ec87749a4 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -80,7 +80,7 @@ static int
 nvkm_devobj_info(struct nvkm_object *object, void *data, u32 size)
 {
 	struct nvkm_device *device = nv_device(object);
-	struct nvkm_fb *pfb = nvkm_fb(device);
+	struct nvkm_fb *fb = nvkm_fb(device);
 	struct nvkm_instmem *imem = nvkm_instmem(device);
 	union {
 		struct nv_device_info_v0 v0;
@@ -139,8 +139,8 @@ nvkm_devobj_info(struct nvkm_object *object, void *data, u32 size)
 
 	args->v0.chipset  = device->chipset;
 	args->v0.revision = device->chiprev;
-	if (pfb && pfb->ram)
-		args->v0.ram_size = args->v0.ram_user = pfb->ram->size;
+	if (fb && fb->ram)
+		args->v0.ram_size = args->v0.ram_user = fb->ram->size;
 	else
 		args->v0.ram_size = args->v0.ram_user = 0;
 	if (imem && args->v0.ram_size > 0)

commit 6d0d40e7a577bbc7497ee7fbfeb2315d46a872a6
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:06 2015 +1000

    drm/nouveau/device: add direct pointer to struct device
    
    A future commit will hide the platform/pci specifics from nvkm_device,
    but it's still very useful in a lot of places to have access to the
    Linux device struct.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 2bceecc9c1e0..28ebe06e87b9 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -764,9 +764,11 @@ nvkm_device_create_(void *dev, enum nv_bus_type type, u64 name,
 	switch (type) {
 	case NVKM_BUS_PCI:
 		device->pdev = dev;
+		device->dev = &device->pdev->dev;
 		break;
 	case NVKM_BUS_PLATFORM:
 		device->platformdev = dev;
+		device->dev = &device->platformdev->dev;
 		break;
 	}
 	device->handle = name;

commit 741d778ea0dde26a345717f1843407760f02fe03
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:05 2015 +1000

    drm/nouveau/device: add direct pointers to subdevs from nvkm_device
    
    Will be used in upcoming commits to remove the need for lookup/runtime
    type-checking functions when accessing foreign subdevs.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 0f6ce3749e14..2bceecc9c1e0 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -463,14 +463,63 @@ nvkm_devobj_ctor(struct nvkm_object *parent, struct nvkm_object *engine,
 			continue;
 		}
 
-		ret = nvkm_object_ctor(nv_object(device), NULL, oclass,
-				       NULL, i, &devobj->subdev[i]);
-		if (ret == -ENODEV)
+#define _(s,m) case s:                                                         \
+		ret = nvkm_object_ctor(nv_object(device), NULL, oclass, NULL,  \
+				       (s), (struct nvkm_object **)&device->m);\
+		if (ret == -ENODEV)                                            \
+			continue;                                              \
+		if (ret)                                                       \
+			return ret;                                            \
+		devobj->subdev[s] = (struct nvkm_object *)device->m;           \
+		device->subdev[s] = devobj->subdev[s];                         \
+		break
+
+		switch (i) {
+		_(NVDEV_SUBDEV_BAR    ,     bar);
+		_(NVDEV_SUBDEV_VBIOS  ,    bios);
+		_(NVDEV_SUBDEV_BUS    ,     bus);
+		_(NVDEV_SUBDEV_CLK    ,     clk);
+		_(NVDEV_SUBDEV_DEVINIT, devinit);
+		_(NVDEV_SUBDEV_FB     ,      fb);
+		_(NVDEV_SUBDEV_FUSE   ,    fuse);
+		_(NVDEV_SUBDEV_GPIO   ,    gpio);
+		_(NVDEV_SUBDEV_I2C    ,     i2c);
+		_(NVDEV_SUBDEV_IBUS   ,    ibus);
+		_(NVDEV_SUBDEV_INSTMEM,    imem);
+		_(NVDEV_SUBDEV_LTC    ,     ltc);
+		_(NVDEV_SUBDEV_MC     ,      mc);
+		_(NVDEV_SUBDEV_MMU    ,     mmu);
+		_(NVDEV_SUBDEV_MXM    ,     mxm);
+		_(NVDEV_SUBDEV_PMU    ,     pmu);
+		_(NVDEV_SUBDEV_THERM  ,   therm);
+		_(NVDEV_SUBDEV_TIMER  ,   timer);
+		_(NVDEV_SUBDEV_VOLT   ,    volt);
+		_(NVDEV_ENGINE_BSP    ,     bsp);
+		_(NVDEV_ENGINE_CE0    ,   ce[0]);
+		_(NVDEV_ENGINE_CE1    ,   ce[1]);
+		_(NVDEV_ENGINE_CE2    ,   ce[2]);
+		_(NVDEV_ENGINE_CIPHER ,  cipher);
+		_(NVDEV_ENGINE_DISP   ,    disp);
+		_(NVDEV_ENGINE_DMAOBJ ,     dma);
+		_(NVDEV_ENGINE_FIFO   ,    fifo);
+		_(NVDEV_ENGINE_GR     ,      gr);
+		_(NVDEV_ENGINE_IFB    ,     ifb);
+		_(NVDEV_ENGINE_ME     ,      me);
+		_(NVDEV_ENGINE_MPEG   ,    mpeg);
+		_(NVDEV_ENGINE_MSENC  ,   msenc);
+		_(NVDEV_ENGINE_MSPDEC ,  mspdec);
+		_(NVDEV_ENGINE_MSPPP  ,   msppp);
+		_(NVDEV_ENGINE_MSVLD  ,   msvld);
+		_(NVDEV_ENGINE_PM     ,      pm);
+		_(NVDEV_ENGINE_SEC    ,     sec);
+		_(NVDEV_ENGINE_SW     ,      sw);
+		_(NVDEV_ENGINE_VIC    ,     vic);
+		_(NVDEV_ENGINE_VP     ,      vp);
+		default:
+			WARN_ON(1);
 			continue;
-		if (ret)
-			return ret;
-
-		device->subdev[i] = devobj->subdev[i];
+		}
+#undef _
 
 		/* note: can't init *any* subdevs until devinit has been run
 		 * due to not knowing exactly what the vbios init tables will

commit 0d5dd3f301bbc66c41b219f50fa97a6df1965cfe
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Aug 20 14:54:05 2015 +1000

    drm/nouveau/lib: various tweaks
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 63d8e52f4b22..0f6ce3749e14 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -727,7 +727,7 @@ nvkm_device_create_(void *dev, enum nv_bus_type type, u64 name,
 
 	nv_subdev(device)->debug = nvkm_dbgopt(device->dbgopt, "DEVICE");
 	nv_engine(device)->sclass = nvkm_device_sclass;
-	list_add(&device->head, &nv_devices);
+	list_add_tail(&device->head, &nv_devices);
 
 	ret = nvkm_event_init(&nvkm_device_event_func, 1, 1, &device->event);
 done:

commit eaecf0326f096faaba462eae48a3b30bcb1f7009
Author: Alexandre Courbot <acourbot@nvidia.com>
Date:   Fri Feb 20 18:22:59 2015 +0900

    make RAM device optional
    
    Having a RAM device does not make sense for chips like GK20A which have
    no dedicated video memory. The dummy RAM device that we used so far
    works as a temporary band-aid, but in the longer term it is desirable
    for the driver to be able to work without any kind of VRAM.
    
    This patch adds a few conditionals in places where a RAM device was
    assumed to be present and allows some more objects to be allocated from
    the TT domain, allowing Nouveau to handle GPUs for which
    pfb->ram == NULL.
    
    Signed-off-by: Alexandre Courbot <acourbot@nvidia.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 6efa8f38ff54..63d8e52f4b22 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -139,9 +139,13 @@ nvkm_devobj_info(struct nvkm_object *object, void *data, u32 size)
 
 	args->v0.chipset  = device->chipset;
 	args->v0.revision = device->chiprev;
-	if (pfb)  args->v0.ram_size = args->v0.ram_user = pfb->ram->size;
-	else      args->v0.ram_size = args->v0.ram_user = 0;
-	if (imem) args->v0.ram_user = args->v0.ram_user - imem->reserved;
+	if (pfb && pfb->ram)
+		args->v0.ram_size = args->v0.ram_user = pfb->ram->size;
+	else
+		args->v0.ram_size = args->v0.ram_user = 0;
+	if (imem && args->v0.ram_size > 0)
+		args->v0.ram_user = args->v0.ram_user - imem->reserved;
+
 	return 0;
 }
 

commit 9fcaa149e7d264822f7ef748ca4a7af643d88ec9
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Mon Feb 2 09:08:14 2015 +1000

    drm/nouveau/device: post write to NV_PMC_BOOT_1 when flipping endian switch
    
    fdo#88868
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 29bd539af183..6efa8f38ff54 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -340,11 +340,13 @@ nvkm_devobj_ctor(struct nvkm_object *parent, struct nvkm_object *engine,
 
 		/* switch mmio to cpu's native endianness */
 #ifndef __BIG_ENDIAN
-		if (ioread32_native(map + 0x000004) != 0x00000000)
+		if (ioread32_native(map + 0x000004) != 0x00000000) {
 #else
-		if (ioread32_native(map + 0x000004) == 0x00000000)
+		if (ioread32_native(map + 0x000004) == 0x00000000) {
 #endif
 			iowrite32_native(0x01000001, map + 0x000004);
+			ioread32_native(map);
+		}
 
 		/* read boot0 and strapping information */
 		boot0 = ioread32_native(map + 0x000000);

commit 9719047b4d985ca7a46819956047cca04213d63e
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Jan 14 15:35:00 2015 +1000

    drm/nouveau/device: namespace + nvidia gpu names (no binary change)
    
    The namespace of NVKM is being changed to nvkm_ instead of nouveau_,
    which will be used for the DRM part of the driver.  This is being
    done in order to make it very clear as to what part of the driver a
    given symbol belongs to, and as a minor step towards splitting the
    DRM driver out to be able to stand on its own (for virt).
    
    Because there's already a large amount of churn here anyway, this is
    as good a time as any to also switch to NVIDIA's device and chipset
    naming to ease collaboration with them.
    
    A comparison of objdump disassemblies proves no code changes.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index ae2ad8b4e5df..29bd539af183 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -21,29 +21,27 @@
  *
  * Authors: Ben Skeggs
  */
+#include "priv.h"
+#include "acpi.h"
 
-#include <core/notify.h>
-#include <core/object.h>
-#include <core/device.h>
 #include <core/client.h>
 #include <core/option.h>
-#include <nvif/unpack.h>
-#include <nvif/class.h>
-
+#include <core/notify.h>
+#include <core/parent.h>
 #include <subdev/bios.h>
 #include <subdev/fb.h>
 #include <subdev/instmem.h>
 
-#include "priv.h"
-#include "acpi.h"
+#include <nvif/class.h>
+#include <nvif/unpack.h>
 
 static DEFINE_MUTEX(nv_devices_mutex);
 static LIST_HEAD(nv_devices);
 
-struct nouveau_device *
-nouveau_device_find(u64 name)
+struct nvkm_device *
+nvkm_device_find(u64 name)
 {
-	struct nouveau_device *device, *match = NULL;
+	struct nvkm_device *device, *match = NULL;
 	mutex_lock(&nv_devices_mutex);
 	list_for_each_entry(device, &nv_devices, head) {
 		if (device->handle == name) {
@@ -56,9 +54,9 @@ nouveau_device_find(u64 name)
 }
 
 int
-nouveau_device_list(u64 *name, int size)
+nvkm_device_list(u64 *name, int size)
 {
-	struct nouveau_device *device;
+	struct nvkm_device *device;
 	int nr = 0;
 	mutex_lock(&nv_devices_mutex);
 	list_for_each_entry(device, &nv_devices, head) {
@@ -70,20 +68,20 @@ nouveau_device_list(u64 *name, int size)
 }
 
 /******************************************************************************
- * nouveau_devobj (0x0080): class implementation
+ * nvkm_devobj (0x0080): class implementation
  *****************************************************************************/
 
-struct nouveau_devobj {
-	struct nouveau_parent base;
-	struct nouveau_object *subdev[NVDEV_SUBDEV_NR];
+struct nvkm_devobj {
+	struct nvkm_parent base;
+	struct nvkm_object *subdev[NVDEV_SUBDEV_NR];
 };
 
 static int
-nouveau_devobj_info(struct nouveau_object *object, void *data, u32 size)
+nvkm_devobj_info(struct nvkm_object *object, void *data, u32 size)
 {
-	struct nouveau_device *device = nv_device(object);
-	struct nouveau_fb *pfb = nouveau_fb(device);
-	struct nouveau_instmem *imem = nouveau_instmem(device);
+	struct nvkm_device *device = nv_device(object);
+	struct nvkm_fb *pfb = nvkm_fb(device);
+	struct nvkm_instmem *imem = nvkm_instmem(device);
 	union {
 		struct nv_device_info_v0 v0;
 	} *args = data;
@@ -148,12 +146,11 @@ nouveau_devobj_info(struct nouveau_object *object, void *data, u32 size)
 }
 
 static int
-nouveau_devobj_mthd(struct nouveau_object *object, u32 mthd,
-		    void *data, u32 size)
+nvkm_devobj_mthd(struct nvkm_object *object, u32 mthd, void *data, u32 size)
 {
 	switch (mthd) {
 	case NV_DEVICE_V0_INFO:
-		return nouveau_devobj_info(object, data, size);
+		return nvkm_devobj_info(object, data, size);
 	default:
 		break;
 	}
@@ -161,45 +158,45 @@ nouveau_devobj_mthd(struct nouveau_object *object, u32 mthd,
 }
 
 static u8
-nouveau_devobj_rd08(struct nouveau_object *object, u64 addr)
+nvkm_devobj_rd08(struct nvkm_object *object, u64 addr)
 {
 	return nv_rd08(object->engine, addr);
 }
 
 static u16
-nouveau_devobj_rd16(struct nouveau_object *object, u64 addr)
+nvkm_devobj_rd16(struct nvkm_object *object, u64 addr)
 {
 	return nv_rd16(object->engine, addr);
 }
 
 static u32
-nouveau_devobj_rd32(struct nouveau_object *object, u64 addr)
+nvkm_devobj_rd32(struct nvkm_object *object, u64 addr)
 {
 	return nv_rd32(object->engine, addr);
 }
 
 static void
-nouveau_devobj_wr08(struct nouveau_object *object, u64 addr, u8 data)
+nvkm_devobj_wr08(struct nvkm_object *object, u64 addr, u8 data)
 {
 	nv_wr08(object->engine, addr, data);
 }
 
 static void
-nouveau_devobj_wr16(struct nouveau_object *object, u64 addr, u16 data)
+nvkm_devobj_wr16(struct nvkm_object *object, u64 addr, u16 data)
 {
 	nv_wr16(object->engine, addr, data);
 }
 
 static void
-nouveau_devobj_wr32(struct nouveau_object *object, u64 addr, u32 data)
+nvkm_devobj_wr32(struct nvkm_object *object, u64 addr, u32 data)
 {
 	nv_wr32(object->engine, addr, data);
 }
 
 static int
-nouveau_devobj_map(struct nouveau_object *object, u64 *addr, u32 *size)
+nvkm_devobj_map(struct nvkm_object *object, u64 *addr, u32 *size)
 {
-	struct nouveau_device *device = nv_device(object);
+	struct nvkm_device *device = nv_device(object);
 	*addr = nv_device_resource_start(device, 0);
 	*size = nv_device_resource_len(device, 0);
 	return 0;
@@ -248,47 +245,46 @@ static const u64 disable_map[] = {
 };
 
 static void
-nouveau_devobj_dtor(struct nouveau_object *object)
+nvkm_devobj_dtor(struct nvkm_object *object)
 {
-	struct nouveau_devobj *devobj = (void *)object;
+	struct nvkm_devobj *devobj = (void *)object;
 	int i;
 
 	for (i = NVDEV_SUBDEV_NR - 1; i >= 0; i--)
-		nouveau_object_ref(NULL, &devobj->subdev[i]);
+		nvkm_object_ref(NULL, &devobj->subdev[i]);
 
-	nouveau_parent_destroy(&devobj->base);
+	nvkm_parent_destroy(&devobj->base);
 }
 
-static struct nouveau_oclass
-nouveau_devobj_oclass_super = {
+static struct nvkm_oclass
+nvkm_devobj_oclass_super = {
 	.handle = NV_DEVICE,
-	.ofuncs = &(struct nouveau_ofuncs) {
-		.dtor = nouveau_devobj_dtor,
-		.init = _nouveau_parent_init,
-		.fini = _nouveau_parent_fini,
-		.mthd = nouveau_devobj_mthd,
-		.map  = nouveau_devobj_map,
-		.rd08 = nouveau_devobj_rd08,
-		.rd16 = nouveau_devobj_rd16,
-		.rd32 = nouveau_devobj_rd32,
-		.wr08 = nouveau_devobj_wr08,
-		.wr16 = nouveau_devobj_wr16,
-		.wr32 = nouveau_devobj_wr32,
+	.ofuncs = &(struct nvkm_ofuncs) {
+		.dtor = nvkm_devobj_dtor,
+		.init = _nvkm_parent_init,
+		.fini = _nvkm_parent_fini,
+		.mthd = nvkm_devobj_mthd,
+		.map  = nvkm_devobj_map,
+		.rd08 = nvkm_devobj_rd08,
+		.rd16 = nvkm_devobj_rd16,
+		.rd32 = nvkm_devobj_rd32,
+		.wr08 = nvkm_devobj_wr08,
+		.wr16 = nvkm_devobj_wr16,
+		.wr32 = nvkm_devobj_wr32,
 	}
 };
 
 static int
-nouveau_devobj_ctor(struct nouveau_object *parent,
-		    struct nouveau_object *engine,
-		    struct nouveau_oclass *oclass, void *data, u32 size,
-		    struct nouveau_object **pobject)
+nvkm_devobj_ctor(struct nvkm_object *parent, struct nvkm_object *engine,
+		 struct nvkm_oclass *oclass, void *data, u32 size,
+		 struct nvkm_object **pobject)
 {
 	union {
 		struct nv_device_v0 v0;
 	} *args = data;
-	struct nouveau_client *client = nv_client(parent);
-	struct nouveau_device *device;
-	struct nouveau_devobj *devobj;
+	struct nvkm_client *client = nv_client(parent);
+	struct nvkm_device *device;
+	struct nvkm_devobj *devobj;
 	u32 boot0, strap;
 	u64 disable, mmio_base, mmio_size;
 	void __iomem *map;
@@ -305,22 +301,22 @@ nouveau_devobj_ctor(struct nouveau_object *parent,
 
 	/* give priviledged clients register access */
 	if (client->super)
-		oclass = &nouveau_devobj_oclass_super;
+		oclass = &nvkm_devobj_oclass_super;
 
 	/* find the device subdev that matches what the client requested */
 	device = nv_device(client->device);
 	if (args->v0.device != ~0) {
-		device = nouveau_device_find(args->v0.device);
+		device = nvkm_device_find(args->v0.device);
 		if (!device)
 			return -ENODEV;
 	}
 
-	ret = nouveau_parent_create(parent, nv_object(device), oclass, 0,
-				    nouveau_control_oclass,
-				    (1ULL << NVDEV_ENGINE_DMAOBJ) |
-				    (1ULL << NVDEV_ENGINE_FIFO) |
-				    (1ULL << NVDEV_ENGINE_DISP) |
-				    (1ULL << NVDEV_ENGINE_PM     ), &devobj);
+	ret = nvkm_parent_create(parent, nv_object(device), oclass, 0,
+				 nvkm_control_oclass,
+				 (1ULL << NVDEV_ENGINE_DMAOBJ) |
+				 (1ULL << NVDEV_ENGINE_FIFO) |
+				 (1ULL << NVDEV_ENGINE_DISP) |
+				 (1ULL << NVDEV_ENGINE_PM), &devobj);
 	*pobject = nv_object(devobj);
 	if (ret)
 		return ret;
@@ -403,8 +399,8 @@ nouveau_devobj_ctor(struct nouveau_object *parent,
 		case NV_30: ret = nv30_identify(device); break;
 		case NV_40: ret = nv40_identify(device); break;
 		case NV_50: ret = nv50_identify(device); break;
-		case NV_C0: ret = nvc0_identify(device); break;
-		case NV_E0: ret = nve0_identify(device); break;
+		case NV_C0: ret = gf100_identify(device); break;
+		case NV_E0: ret = gk104_identify(device); break;
 		case GM100: ret = gm100_identify(device); break;
 		default:
 			ret = -EINVAL;
@@ -439,7 +435,7 @@ nouveau_devobj_ctor(struct nouveau_object *parent,
 	} else
 	if ( (args->v0.disable & NV_DEVICE_V0_DISABLE_IDENTIFY)) {
 		device->cname = "NULL";
-		device->oclass[NVDEV_SUBDEV_VBIOS] = &nouveau_bios_oclass;
+		device->oclass[NVDEV_SUBDEV_VBIOS] = &nvkm_bios_oclass;
 	}
 
 	if (!(args->v0.disable & NV_DEVICE_V0_DISABLE_MMIO) &&
@@ -457,14 +453,12 @@ nouveau_devobj_ctor(struct nouveau_object *parent,
 			continue;
 
 		if (device->subdev[i]) {
-			nouveau_object_ref(device->subdev[i],
-					  &devobj->subdev[i]);
+			nvkm_object_ref(device->subdev[i], &devobj->subdev[i]);
 			continue;
 		}
 
-		ret = nouveau_object_ctor(nv_object(device), NULL,
-					  oclass, NULL, i,
-					  &devobj->subdev[i]);
+		ret = nvkm_object_ctor(nv_object(device), NULL, oclass,
+				       NULL, i, &devobj->subdev[i]);
 		if (ret == -ENODEV)
 			continue;
 		if (ret)
@@ -482,15 +476,15 @@ nouveau_devobj_ctor(struct nouveau_object *parent,
 		 * subdev in turn as they're created.
 		 */
 		while (i >= NVDEV_SUBDEV_DEVINIT_LAST && c <= i) {
-			struct nouveau_object *subdev = devobj->subdev[c++];
+			struct nvkm_object *subdev = devobj->subdev[c++];
 			if (subdev && !nv_iclass(subdev, NV_ENGINE_CLASS)) {
-				ret = nouveau_object_inc(subdev);
+				ret = nvkm_object_inc(subdev);
 				if (ret)
 					return ret;
 				atomic_dec(&nv_object(device)->usecount);
 			} else
 			if (subdev) {
-				nouveau_subdev_reset(subdev);
+				nvkm_subdev_reset(subdev);
 			}
 		}
 	}
@@ -498,23 +492,23 @@ nouveau_devobj_ctor(struct nouveau_object *parent,
 	return 0;
 }
 
-static struct nouveau_ofuncs
-nouveau_devobj_ofuncs = {
-	.ctor = nouveau_devobj_ctor,
-	.dtor = nouveau_devobj_dtor,
-	.init = _nouveau_parent_init,
-	.fini = _nouveau_parent_fini,
-	.mthd = nouveau_devobj_mthd,
+static struct nvkm_ofuncs
+nvkm_devobj_ofuncs = {
+	.ctor = nvkm_devobj_ctor,
+	.dtor = nvkm_devobj_dtor,
+	.init = _nvkm_parent_init,
+	.fini = _nvkm_parent_fini,
+	.mthd = nvkm_devobj_mthd,
 };
 
 /******************************************************************************
- * nouveau_device: engine functions
+ * nvkm_device: engine functions
  *****************************************************************************/
 
-struct nouveau_device *
+struct nvkm_device *
 nv_device(void *obj)
 {
-	struct nouveau_object *device = nv_object(obj);
+	struct nvkm_object *device = nv_object(obj);
 	if (device->engine == NULL) {
 		while (device && device->parent)
 			device = device->parent;
@@ -530,15 +524,15 @@ nv_device(void *obj)
 	return (void *)device;
 }
 
-static struct nouveau_oclass
-nouveau_device_sclass[] = {
-	{ 0x0080, &nouveau_devobj_ofuncs },
+static struct nvkm_oclass
+nvkm_device_sclass[] = {
+	{ 0x0080, &nvkm_devobj_ofuncs },
 	{}
 };
 
 static int
-nouveau_device_event_ctor(struct nouveau_object *object, void *data, u32 size,
-			  struct nvkm_notify *notify)
+nvkm_device_event_ctor(struct nvkm_object *object, void *data, u32 size,
+		       struct nvkm_notify *notify)
 {
 	if (!WARN_ON(size != 0)) {
 		notify->size  = 0;
@@ -550,21 +544,21 @@ nouveau_device_event_ctor(struct nouveau_object *object, void *data, u32 size,
 }
 
 static const struct nvkm_event_func
-nouveau_device_event_func = {
-	.ctor = nouveau_device_event_ctor,
+nvkm_device_event_func = {
+	.ctor = nvkm_device_event_ctor,
 };
 
 static int
-nouveau_device_fini(struct nouveau_object *object, bool suspend)
+nvkm_device_fini(struct nvkm_object *object, bool suspend)
 {
-	struct nouveau_device *device = (void *)object;
-	struct nouveau_object *subdev;
+	struct nvkm_device *device = (void *)object;
+	struct nvkm_object *subdev;
 	int ret, i;
 
 	for (i = NVDEV_SUBDEV_NR - 1; i >= 0; i--) {
 		if ((subdev = device->subdev[i])) {
 			if (!nv_iclass(subdev, NV_ENGINE_CLASS)) {
-				ret = nouveau_object_dec(subdev, suspend);
+				ret = nvkm_object_dec(subdev, suspend);
 				if (ret && suspend)
 					goto fail;
 			}
@@ -576,7 +570,7 @@ nouveau_device_fini(struct nouveau_object *object, bool suspend)
 	for (; ret && i < NVDEV_SUBDEV_NR; i++) {
 		if ((subdev = device->subdev[i])) {
 			if (!nv_iclass(subdev, NV_ENGINE_CLASS)) {
-				ret = nouveau_object_inc(subdev);
+				ret = nvkm_object_inc(subdev);
 				if (ret) {
 					/* XXX */
 				}
@@ -588,10 +582,10 @@ nouveau_device_fini(struct nouveau_object *object, bool suspend)
 }
 
 static int
-nouveau_device_init(struct nouveau_object *object)
+nvkm_device_init(struct nvkm_object *object)
 {
-	struct nouveau_device *device = (void *)object;
-	struct nouveau_object *subdev;
+	struct nvkm_device *device = (void *)object;
+	struct nvkm_object *subdev;
 	int ret, i = 0;
 
 	ret = nvkm_acpi_init(device);
@@ -601,11 +595,11 @@ nouveau_device_init(struct nouveau_object *object)
 	for (i = 0; i < NVDEV_SUBDEV_NR; i++) {
 		if ((subdev = device->subdev[i])) {
 			if (!nv_iclass(subdev, NV_ENGINE_CLASS)) {
-				ret = nouveau_object_inc(subdev);
+				ret = nvkm_object_inc(subdev);
 				if (ret)
 					goto fail;
 			} else {
-				nouveau_subdev_reset(subdev);
+				nvkm_subdev_reset(subdev);
 			}
 		}
 	}
@@ -615,7 +609,7 @@ nouveau_device_init(struct nouveau_object *object)
 	for (--i; ret && i >= 0; i--) {
 		if ((subdev = device->subdev[i])) {
 			if (!nv_iclass(subdev, NV_ENGINE_CLASS))
-				nouveau_object_dec(subdev, false);
+				nvkm_object_dec(subdev, false);
 		}
 	}
 
@@ -625,9 +619,9 @@ nouveau_device_init(struct nouveau_object *object)
 }
 
 static void
-nouveau_device_dtor(struct nouveau_object *object)
+nvkm_device_dtor(struct nvkm_object *object)
 {
-	struct nouveau_device *device = (void *)object;
+	struct nvkm_device *device = (void *)object;
 
 	nvkm_event_fini(&device->event);
 
@@ -638,11 +632,11 @@ nouveau_device_dtor(struct nouveau_object *object)
 	if (nv_subdev(device)->mmio)
 		iounmap(nv_subdev(device)->mmio);
 
-	nouveau_engine_destroy(&device->engine);
+	nvkm_engine_destroy(&device->engine);
 }
 
 resource_size_t
-nv_device_resource_start(struct nouveau_device *device, unsigned int bar)
+nv_device_resource_start(struct nvkm_device *device, unsigned int bar)
 {
 	if (nv_device_is_pci(device)) {
 		return pci_resource_start(device->pdev, bar);
@@ -657,7 +651,7 @@ nv_device_resource_start(struct nouveau_device *device, unsigned int bar)
 }
 
 resource_size_t
-nv_device_resource_len(struct nouveau_device *device, unsigned int bar)
+nv_device_resource_len(struct nvkm_device *device, unsigned int bar)
 {
 	if (nv_device_is_pci(device)) {
 		return pci_resource_len(device->pdev, bar);
@@ -672,7 +666,7 @@ nv_device_resource_len(struct nouveau_device *device, unsigned int bar)
 }
 
 int
-nv_device_get_irq(struct nouveau_device *device, bool stall)
+nv_device_get_irq(struct nvkm_device *device, bool stall)
 {
 	if (nv_device_is_pci(device)) {
 		return device->pdev->irq;
@@ -682,22 +676,22 @@ nv_device_get_irq(struct nouveau_device *device, bool stall)
 	}
 }
 
-static struct nouveau_oclass
-nouveau_device_oclass = {
+static struct nvkm_oclass
+nvkm_device_oclass = {
 	.handle = NV_ENGINE(DEVICE, 0x00),
-	.ofuncs = &(struct nouveau_ofuncs) {
-		.dtor = nouveau_device_dtor,
-		.init = nouveau_device_init,
-		.fini = nouveau_device_fini,
+	.ofuncs = &(struct nvkm_ofuncs) {
+		.dtor = nvkm_device_dtor,
+		.init = nvkm_device_init,
+		.fini = nvkm_device_fini,
 	},
 };
 
 int
-nouveau_device_create_(void *dev, enum nv_bus_type type, u64 name,
-		       const char *sname, const char *cfg, const char *dbg,
-		       int length, void **pobject)
+nvkm_device_create_(void *dev, enum nv_bus_type type, u64 name,
+		    const char *sname, const char *cfg, const char *dbg,
+		    int length, void **pobject)
 {
-	struct nouveau_device *device;
+	struct nvkm_device *device;
 	int ret = -EEXIST;
 
 	mutex_lock(&nv_devices_mutex);
@@ -706,17 +700,17 @@ nouveau_device_create_(void *dev, enum nv_bus_type type, u64 name,
 			goto done;
 	}
 
-	ret = nouveau_engine_create_(NULL, NULL, &nouveau_device_oclass, true,
-				     "DEVICE", "device", length, pobject);
+	ret = nvkm_engine_create_(NULL, NULL, &nvkm_device_oclass, true,
+				  "DEVICE", "device", length, pobject);
 	device = *pobject;
 	if (ret)
 		goto done;
 
 	switch (type) {
-	case NOUVEAU_BUS_PCI:
+	case NVKM_BUS_PCI:
 		device->pdev = dev;
 		break;
-	case NOUVEAU_BUS_PLATFORM:
+	case NVKM_BUS_PLATFORM:
 		device->platformdev = dev;
 		break;
 	}
@@ -725,12 +719,11 @@ nouveau_device_create_(void *dev, enum nv_bus_type type, u64 name,
 	device->dbgopt = dbg;
 	device->name = sname;
 
-	nv_subdev(device)->debug = nouveau_dbgopt(device->dbgopt, "DEVICE");
-	nv_engine(device)->sclass = nouveau_device_sclass;
+	nv_subdev(device)->debug = nvkm_dbgopt(device->dbgopt, "DEVICE");
+	nv_engine(device)->sclass = nvkm_device_sclass;
 	list_add(&device->head, &nv_devices);
 
-	ret = nvkm_event_init(&nouveau_device_event_func, 1, 1,
-			      &device->event);
+	ret = nvkm_event_init(&nvkm_device_event_func, 1, 1, &device->event);
 done:
 	mutex_unlock(&nv_devices_mutex);
 	return ret;

commit 5025407b9862349d17b1dff25737aaef6520a439
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Jan 14 14:11:21 2015 +1000

    drm/nouveau/core: namespace + nvidia gpu names (no binary change)
    
    The namespace of NVKM is being changed to nvkm_ instead of nouveau_,
    which will be used for the DRM part of the driver.  This is being
    done in order to make it very clear as to what part of the driver a
    given symbol belongs to, and as a minor step towards splitting the
    DRM driver out to be able to stand on its own (for virt).
    
    Because there's already a large amount of churn here anyway, this is
    as good a time as any to also switch to NVIDIA's device and chipset
    naming to ease collaboration with them.
    
    A comparison of objdump disassemblies proves no code changes.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 60f538976f3b..ae2ad8b4e5df 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -22,6 +22,7 @@
  * Authors: Ben Skeggs
  */
 
+#include <core/notify.h>
 #include <core/object.h>
 #include <core/device.h>
 #include <core/client.h>

commit bd8369ecf5e7f5fce9f72b2934dc43a844134a13
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Jan 14 12:37:00 2015 +1000

    drm/nouveau/msenc: rename from venc (no binary change)
    
    Switch to NVIDIA's name for the device.
    
    The namespace of NVKM is being changed to nvkm_ instead of nouveau_,
    which will be used for the DRM part of the driver.  This is being
    done in order to make it very clear as to what part of the driver a
    given symbol belongs to, and as a minor step towards splitting the
    DRM driver out to be able to stand on its own (for virt).
    
    Because there's already a large amount of churn here anyway, this is
    as good a time as any to also switch to NVIDIA's device and chipset
    naming to ease collaboration with them.
    
    A comparison of objdump disassemblies proves no code changes.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index fda8d729aa30..60f538976f3b 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -239,7 +239,7 @@ static const u64 disable_map[] = {
 	[NVDEV_ENGINE_CE1]	= NV_DEVICE_V0_DISABLE_CE1,
 	[NVDEV_ENGINE_CE2]	= NV_DEVICE_V0_DISABLE_CE2,
 	[NVDEV_ENGINE_VIC]	= NV_DEVICE_V0_DISABLE_VIC,
-	[NVDEV_ENGINE_VENC]	= NV_DEVICE_V0_DISABLE_VENC,
+	[NVDEV_ENGINE_MSENC]	= NV_DEVICE_V0_DISABLE_MSENC,
 	[NVDEV_ENGINE_DISP]	= NV_DEVICE_V0_DISABLE_DISP,
 	[NVDEV_ENGINE_MSVLD]	= NV_DEVICE_V0_DISABLE_MSVLD,
 	[NVDEV_ENGINE_SEC]	= NV_DEVICE_V0_DISABLE_SEC,

commit fd8666f7db94afc1b63b8439d902783b27a2f27f
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Jan 14 12:26:28 2015 +1000

    drm/nouveau/msppp: rename from ppp (no binary change)
    
    Switch to NVIDIA's name for the device.
    
    The namespace of NVKM is being changed to nvkm_ instead of nouveau_,
    which will be used for the DRM part of the driver.  This is being
    done in order to make it very clear as to what part of the driver a
    given symbol belongs to, and as a minor step towards splitting the
    DRM driver out to be able to stand on its own (for virt).
    
    Because there's already a large amount of churn here anyway, this is
    as good a time as any to also switch to NVIDIA's device and chipset
    naming to ease collaboration with them.
    
    A comparison of objdump disassemblies proves no code changes.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 5b226cb04298..fda8d729aa30 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -234,7 +234,7 @@ static const u64 disable_map[] = {
 	[NVDEV_ENGINE_VP]	= NV_DEVICE_V0_DISABLE_VP,
 	[NVDEV_ENGINE_CIPHER]	= NV_DEVICE_V0_DISABLE_CIPHER,
 	[NVDEV_ENGINE_BSP]	= NV_DEVICE_V0_DISABLE_BSP,
-	[NVDEV_ENGINE_PPP]	= NV_DEVICE_V0_DISABLE_PPP,
+	[NVDEV_ENGINE_MSPPP]	= NV_DEVICE_V0_DISABLE_MSPPP,
 	[NVDEV_ENGINE_CE0]	= NV_DEVICE_V0_DISABLE_CE0,
 	[NVDEV_ENGINE_CE1]	= NV_DEVICE_V0_DISABLE_CE1,
 	[NVDEV_ENGINE_CE2]	= NV_DEVICE_V0_DISABLE_CE2,

commit d5752b9b86fbfb8febd9d45ac4431325031e25e0
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Jan 14 12:11:28 2015 +1000

    drm/nouveau/pm: rename from perfmon (no binary change)
    
    Switch to NVIDIA's name for the device.
    
    The namespace of NVKM is being changed to nvkm_ instead of nouveau_,
    which will be used for the DRM part of the driver.  This is being
    done in order to make it very clear as to what part of the driver a
    given symbol belongs to, and as a minor step towards splitting the
    DRM driver out to be able to stand on its own (for virt).
    
    Because there's already a large amount of churn here anyway, this is
    as good a time as any to also switch to NVIDIA's device and chipset
    naming to ease collaboration with them.
    
    A comparison of objdump disassemblies proves no code changes.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index baad4ad22058..5b226cb04298 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -225,7 +225,7 @@ static const u64 disable_map[] = {
 	[NVDEV_SUBDEV_PMU]	= NV_DEVICE_V0_DISABLE_CORE,
 	[NVDEV_SUBDEV_FUSE]	= NV_DEVICE_V0_DISABLE_CORE,
 	[NVDEV_ENGINE_DMAOBJ]	= NV_DEVICE_V0_DISABLE_CORE,
-	[NVDEV_ENGINE_PERFMON]  = NV_DEVICE_V0_DISABLE_CORE,
+	[NVDEV_ENGINE_PM     ]  = NV_DEVICE_V0_DISABLE_CORE,
 	[NVDEV_ENGINE_FIFO]	= NV_DEVICE_V0_DISABLE_FIFO,
 	[NVDEV_ENGINE_SW]	= NV_DEVICE_V0_DISABLE_FIFO,
 	[NVDEV_ENGINE_GR]	= NV_DEVICE_V0_DISABLE_GR,
@@ -319,7 +319,7 @@ nouveau_devobj_ctor(struct nouveau_object *parent,
 				    (1ULL << NVDEV_ENGINE_DMAOBJ) |
 				    (1ULL << NVDEV_ENGINE_FIFO) |
 				    (1ULL << NVDEV_ENGINE_DISP) |
-				    (1ULL << NVDEV_ENGINE_PERFMON), &devobj);
+				    (1ULL << NVDEV_ENGINE_PM     ), &devobj);
 	*pobject = nv_object(devobj);
 	if (ret)
 		return ret;

commit b8bf04e1fd3aba5cdd81ec766fc0372c7894497c
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Jan 14 12:02:28 2015 +1000

    drm/nouveau/gr: rename from graph (no binary change)
    
    Shorter device name, match Tegra and our existing enums.
    
    The namespace of NVKM is being changed to nvkm_ instead of nouveau_,
    which will be used for the DRM part of the driver.  This is being
    done in order to make it very clear as to what part of the driver a
    given symbol belongs to, and as a minor step towards splitting the
    DRM driver out to be able to stand on its own (for virt).
    
    Because there's already a large amount of churn here anyway, this is
    as good a time as any to also switch to NVIDIA's device and chipset
    naming to ease collaboration with them.
    
    A comparison of objdump disassemblies proves no code changes.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 96050a487226..baad4ad22058 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -228,7 +228,7 @@ static const u64 disable_map[] = {
 	[NVDEV_ENGINE_PERFMON]  = NV_DEVICE_V0_DISABLE_CORE,
 	[NVDEV_ENGINE_FIFO]	= NV_DEVICE_V0_DISABLE_FIFO,
 	[NVDEV_ENGINE_SW]	= NV_DEVICE_V0_DISABLE_FIFO,
-	[NVDEV_ENGINE_GR]	= NV_DEVICE_V0_DISABLE_GRAPH,
+	[NVDEV_ENGINE_GR]	= NV_DEVICE_V0_DISABLE_GR,
 	[NVDEV_ENGINE_MPEG]	= NV_DEVICE_V0_DISABLE_MPEG,
 	[NVDEV_ENGINE_ME]	= NV_DEVICE_V0_DISABLE_ME,
 	[NVDEV_ENGINE_VP]	= NV_DEVICE_V0_DISABLE_VP,

commit aedf24ff354e3d8f32f0264edcb37f07a1826f59
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Jan 14 11:50:20 2015 +1000

    drm/nouveau/ce: rename from copy (no binary change)
    
    Switch to NVIDIA's name for the device.
    
    The namespace of NVKM is being changed to nvkm_ instead of nouveau_,
    which will be used for the DRM part of the driver.  This is being
    done in order to make it very clear as to what part of the driver a
    given symbol belongs to, and as a minor step towards splitting the
    DRM driver out to be able to stand on its own (for virt).
    
    Because there's already a large amount of churn here anyway, this is
    as good a time as any to also switch to NVIDIA's device and chipset
    naming to ease collaboration with them.
    
    A comparison of objdump disassemblies proves no code changes.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index fe269ef00355..96050a487226 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -235,9 +235,9 @@ static const u64 disable_map[] = {
 	[NVDEV_ENGINE_CIPHER]	= NV_DEVICE_V0_DISABLE_CIPHER,
 	[NVDEV_ENGINE_BSP]	= NV_DEVICE_V0_DISABLE_BSP,
 	[NVDEV_ENGINE_PPP]	= NV_DEVICE_V0_DISABLE_PPP,
-	[NVDEV_ENGINE_COPY0]	= NV_DEVICE_V0_DISABLE_COPY0,
-	[NVDEV_ENGINE_COPY1]	= NV_DEVICE_V0_DISABLE_COPY1,
-	[NVDEV_ENGINE_COPY2]	= NV_DEVICE_V0_DISABLE_COPY1,
+	[NVDEV_ENGINE_CE0]	= NV_DEVICE_V0_DISABLE_CE0,
+	[NVDEV_ENGINE_CE1]	= NV_DEVICE_V0_DISABLE_CE1,
+	[NVDEV_ENGINE_CE2]	= NV_DEVICE_V0_DISABLE_CE2,
 	[NVDEV_ENGINE_VIC]	= NV_DEVICE_V0_DISABLE_VIC,
 	[NVDEV_ENGINE_VENC]	= NV_DEVICE_V0_DISABLE_VENC,
 	[NVDEV_ENGINE_DISP]	= NV_DEVICE_V0_DISABLE_DISP,

commit 93d90ad708b8da6efc0e487b66111aa9db7f70c7
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Jan 14 10:46:55 2015 +1000

    drm/nouveau/sec: separate from cipher (formerly crypt)
    
    Switch to NVIDIA's name for the device.
    
    The namespace of NVKM is being changed to nvkm_ instead of nouveau_,
    which will be used for the DRM part of the driver.  This is being
    done in order to make it very clear as to what part of the driver a
    given symbol belongs to, and as a minor step towards splitting the
    DRM driver out to be able to stand on its own (for virt).
    
    Because there's already a large amount of churn here anyway, this is
    as good a time as any to also switch to NVIDIA's device and chipset
    naming to ease collaboration with them.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index 7945bba5e794..fe269ef00355 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -232,7 +232,7 @@ static const u64 disable_map[] = {
 	[NVDEV_ENGINE_MPEG]	= NV_DEVICE_V0_DISABLE_MPEG,
 	[NVDEV_ENGINE_ME]	= NV_DEVICE_V0_DISABLE_ME,
 	[NVDEV_ENGINE_VP]	= NV_DEVICE_V0_DISABLE_VP,
-	[NVDEV_ENGINE_CRYPT]	= NV_DEVICE_V0_DISABLE_CRYPT,
+	[NVDEV_ENGINE_CIPHER]	= NV_DEVICE_V0_DISABLE_CIPHER,
 	[NVDEV_ENGINE_BSP]	= NV_DEVICE_V0_DISABLE_BSP,
 	[NVDEV_ENGINE_PPP]	= NV_DEVICE_V0_DISABLE_PPP,
 	[NVDEV_ENGINE_COPY0]	= NV_DEVICE_V0_DISABLE_COPY0,
@@ -242,6 +242,7 @@ static const u64 disable_map[] = {
 	[NVDEV_ENGINE_VENC]	= NV_DEVICE_V0_DISABLE_VENC,
 	[NVDEV_ENGINE_DISP]	= NV_DEVICE_V0_DISABLE_DISP,
 	[NVDEV_ENGINE_MSVLD]	= NV_DEVICE_V0_DISABLE_MSVLD,
+	[NVDEV_ENGINE_SEC]	= NV_DEVICE_V0_DISABLE_SEC,
 	[NVDEV_SUBDEV_NR]	= 0,
 };
 

commit eccf7e8ad28e64401519e49f56abc7c799f809b5
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Jan 14 10:09:24 2015 +1000

    drm/nouveau/msvld: separate from bsp
    
    Switch to NVIDIA's name for the device.
    
    The namespace of NVKM is being changed to nvkm_ instead of nouveau_,
    which will be used for the DRM part of the driver.  This is being
    done in order to make it very clear as to what part of the driver a
    given symbol belongs to, and as a minor step towards splitting the
    DRM driver out to be able to stand on its own (for virt).
    
    Because there's already a large amount of churn here anyway, this is
    as good a time as any to also switch to NVIDIA's device and chipset
    naming to ease collaboration with them.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index eb9f387d7356..7945bba5e794 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -241,6 +241,7 @@ static const u64 disable_map[] = {
 	[NVDEV_ENGINE_VIC]	= NV_DEVICE_V0_DISABLE_VIC,
 	[NVDEV_ENGINE_VENC]	= NV_DEVICE_V0_DISABLE_VENC,
 	[NVDEV_ENGINE_DISP]	= NV_DEVICE_V0_DISABLE_DISP,
+	[NVDEV_ENGINE_MSVLD]	= NV_DEVICE_V0_DISABLE_MSVLD,
 	[NVDEV_SUBDEV_NR]	= 0,
 };
 

commit 5ce3bf3c72436c49fbd9a5b71d7d278665f4bf55
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Jan 14 09:57:36 2015 +1000

    drm/nouveau/mmu: rename from vmmgr (no binary change)
    
    Switch to NVIDIA's name for the device.
    
    The namespace of NVKM is being changed to nvkm_ instead of nouveau_,
    which will be used for the DRM part of the driver.  This is being
    done in order to make it very clear as to what part of the driver a
    given symbol belongs to, and as a minor step towards splitting the
    DRM driver out to be able to stand on its own (for virt).
    
    Because there's already a large amount of churn here anyway, this is
    as good a time as any to also switch to NVIDIA's device and chipset
    naming to ease collaboration with them.
    
    A comparison of objdump disassemblies proves no code changes.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index e141dff31553..eb9f387d7356 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -218,7 +218,7 @@ static const u64 disable_map[] = {
 	[NVDEV_SUBDEV_LTC]	= NV_DEVICE_V0_DISABLE_CORE,
 	[NVDEV_SUBDEV_IBUS]	= NV_DEVICE_V0_DISABLE_CORE,
 	[NVDEV_SUBDEV_INSTMEM]	= NV_DEVICE_V0_DISABLE_CORE,
-	[NVDEV_SUBDEV_VM]	= NV_DEVICE_V0_DISABLE_CORE,
+	[NVDEV_SUBDEV_MMU]	= NV_DEVICE_V0_DISABLE_CORE,
 	[NVDEV_SUBDEV_BAR]	= NV_DEVICE_V0_DISABLE_CORE,
 	[NVDEV_SUBDEV_VOLT]	= NV_DEVICE_V0_DISABLE_CORE,
 	[NVDEV_SUBDEV_THERM]	= NV_DEVICE_V0_DISABLE_CORE,

commit ebb58dc2ef8c62d1affa28160f57faa7b0e1dc02
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Jan 14 00:04:21 2015 +1000

    drm/nouveau/pmu: rename from pwr (no binary change)
    
    Switch to NVIDIA's name for the device.
    
    The namespace of NVKM is being changed to nvkm_ instead of nouveau_,
    which will be used for the DRM part of the driver.  This is being
    done in order to make it very clear as to what part of the driver a
    given symbol belongs to, and as a minor step towards splitting the
    DRM driver out to be able to stand on its own (for virt).
    
    Because there's already a large amount of churn here anyway, this is
    as good a time as any to also switch to NVIDIA's device and chipset
    naming to ease collaboration with them.
    
    A comparison of objdump disassemblies proves no code changes.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index f9589e8935d9..e141dff31553 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -222,7 +222,7 @@ static const u64 disable_map[] = {
 	[NVDEV_SUBDEV_BAR]	= NV_DEVICE_V0_DISABLE_CORE,
 	[NVDEV_SUBDEV_VOLT]	= NV_DEVICE_V0_DISABLE_CORE,
 	[NVDEV_SUBDEV_THERM]	= NV_DEVICE_V0_DISABLE_CORE,
-	[NVDEV_SUBDEV_PWR]	= NV_DEVICE_V0_DISABLE_CORE,
+	[NVDEV_SUBDEV_PMU]	= NV_DEVICE_V0_DISABLE_CORE,
 	[NVDEV_SUBDEV_FUSE]	= NV_DEVICE_V0_DISABLE_CORE,
 	[NVDEV_ENGINE_DMAOBJ]	= NV_DEVICE_V0_DISABLE_CORE,
 	[NVDEV_ENGINE_PERFMON]  = NV_DEVICE_V0_DISABLE_CORE,

commit f3867f439fd610db0cbcf1bb739001e95b7b25c6
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Jan 13 23:37:38 2015 +1000

    drm/nouveau/clk: rename from clock (no binary change)
    
    Rename to match the Linux subsystem responsible for the same kind of
    things.  Will be investigating how feasible it will be to expose the
    GPU clock trees with it at some point.
    
    The namespace of NVKM is being changed to nvkm_ instead of nouveau_,
    which will be used for the DRM part of the driver.  This is being
    done in order to make it very clear as to what part of the driver a
    given symbol belongs to, and as a minor step towards splitting the
    DRM driver out to be able to stand on its own (for virt).
    
    Because there's already a large amount of churn here anyway, this is
    as good a time as any to also switch to NVIDIA's device and chipset
    naming to ease collaboration with them.
    
    A comparison of objdump disassemblies proves no code changes.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
index f74f9cbbf3d8..f9589e8935d9 100644
--- a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -209,7 +209,7 @@ static const u64 disable_map[] = {
 	[NVDEV_SUBDEV_DEVINIT]	= NV_DEVICE_V0_DISABLE_CORE,
 	[NVDEV_SUBDEV_GPIO]	= NV_DEVICE_V0_DISABLE_CORE,
 	[NVDEV_SUBDEV_I2C]	= NV_DEVICE_V0_DISABLE_CORE,
-	[NVDEV_SUBDEV_CLOCK]	= NV_DEVICE_V0_DISABLE_CORE,
+	[NVDEV_SUBDEV_CLK  ]	= NV_DEVICE_V0_DISABLE_CORE,
 	[NVDEV_SUBDEV_MXM]	= NV_DEVICE_V0_DISABLE_CORE,
 	[NVDEV_SUBDEV_MC]	= NV_DEVICE_V0_DISABLE_CORE,
 	[NVDEV_SUBDEV_BUS]	= NV_DEVICE_V0_DISABLE_CORE,

commit c39f472e9f14e49a9bc091977ced0ec45fc00c57
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Jan 13 22:13:14 2015 +1000

    drm/nouveau: remove symlinks, move core/ to nvkm/ (no code changes)
    
    The symlinks were annoying some people, and they're not used anywhere
    else in the kernel tree.  The include directory structure has been
    changed so that symlinks aren't needed anymore.
    
    NVKM has been moved from core/ to nvkm/ to make it more obvious as to
    what the directory is for, and as some minor prep for when NVKM gets
    split out into its own module (virt) at a later date.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
new file mode 100644
index 000000000000..f74f9cbbf3d8
--- /dev/null
+++ b/drivers/gpu/drm/nouveau/nvkm/engine/device/base.c
@@ -0,0 +1,734 @@
+/*
+ * Copyright 2012 Red Hat Inc.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a
+ * copy of this software and associated documentation files (the "Software"),
+ * to deal in the Software without restriction, including without limitation
+ * the rights to use, copy, modify, merge, publish, distribute, sublicense,
+ * and/or sell copies of the Software, and to permit persons to whom the
+ * Software is furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
+ * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
+ * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
+ * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
+ * OTHER DEALINGS IN THE SOFTWARE.
+ *
+ * Authors: Ben Skeggs
+ */
+
+#include <core/object.h>
+#include <core/device.h>
+#include <core/client.h>
+#include <core/option.h>
+#include <nvif/unpack.h>
+#include <nvif/class.h>
+
+#include <subdev/bios.h>
+#include <subdev/fb.h>
+#include <subdev/instmem.h>
+
+#include "priv.h"
+#include "acpi.h"
+
+static DEFINE_MUTEX(nv_devices_mutex);
+static LIST_HEAD(nv_devices);
+
+struct nouveau_device *
+nouveau_device_find(u64 name)
+{
+	struct nouveau_device *device, *match = NULL;
+	mutex_lock(&nv_devices_mutex);
+	list_for_each_entry(device, &nv_devices, head) {
+		if (device->handle == name) {
+			match = device;
+			break;
+		}
+	}
+	mutex_unlock(&nv_devices_mutex);
+	return match;
+}
+
+int
+nouveau_device_list(u64 *name, int size)
+{
+	struct nouveau_device *device;
+	int nr = 0;
+	mutex_lock(&nv_devices_mutex);
+	list_for_each_entry(device, &nv_devices, head) {
+		if (nr++ < size)
+			name[nr - 1] = device->handle;
+	}
+	mutex_unlock(&nv_devices_mutex);
+	return nr;
+}
+
+/******************************************************************************
+ * nouveau_devobj (0x0080): class implementation
+ *****************************************************************************/
+
+struct nouveau_devobj {
+	struct nouveau_parent base;
+	struct nouveau_object *subdev[NVDEV_SUBDEV_NR];
+};
+
+static int
+nouveau_devobj_info(struct nouveau_object *object, void *data, u32 size)
+{
+	struct nouveau_device *device = nv_device(object);
+	struct nouveau_fb *pfb = nouveau_fb(device);
+	struct nouveau_instmem *imem = nouveau_instmem(device);
+	union {
+		struct nv_device_info_v0 v0;
+	} *args = data;
+	int ret;
+
+	nv_ioctl(object, "device info size %d\n", size);
+	if (nvif_unpack(args->v0, 0, 0, false)) {
+		nv_ioctl(object, "device info vers %d\n", args->v0.version);
+	} else
+		return ret;
+
+	switch (device->chipset) {
+	case 0x01a:
+	case 0x01f:
+	case 0x04c:
+	case 0x04e:
+	case 0x063:
+	case 0x067:
+	case 0x068:
+	case 0x0aa:
+	case 0x0ac:
+	case 0x0af:
+		args->v0.platform = NV_DEVICE_INFO_V0_IGP;
+		break;
+	default:
+		if (device->pdev) {
+			if (pci_find_capability(device->pdev, PCI_CAP_ID_AGP))
+				args->v0.platform = NV_DEVICE_INFO_V0_AGP;
+			else
+			if (pci_is_pcie(device->pdev))
+				args->v0.platform = NV_DEVICE_INFO_V0_PCIE;
+			else
+				args->v0.platform = NV_DEVICE_INFO_V0_PCI;
+		} else {
+			args->v0.platform = NV_DEVICE_INFO_V0_SOC;
+		}
+		break;
+	}
+
+	switch (device->card_type) {
+	case NV_04: args->v0.family = NV_DEVICE_INFO_V0_TNT; break;
+	case NV_10:
+	case NV_11: args->v0.family = NV_DEVICE_INFO_V0_CELSIUS; break;
+	case NV_20: args->v0.family = NV_DEVICE_INFO_V0_KELVIN; break;
+	case NV_30: args->v0.family = NV_DEVICE_INFO_V0_RANKINE; break;
+	case NV_40: args->v0.family = NV_DEVICE_INFO_V0_CURIE; break;
+	case NV_50: args->v0.family = NV_DEVICE_INFO_V0_TESLA; break;
+	case NV_C0: args->v0.family = NV_DEVICE_INFO_V0_FERMI; break;
+	case NV_E0: args->v0.family = NV_DEVICE_INFO_V0_KEPLER; break;
+	case GM100: args->v0.family = NV_DEVICE_INFO_V0_MAXWELL; break;
+	default:
+		args->v0.family = 0;
+		break;
+	}
+
+	args->v0.chipset  = device->chipset;
+	args->v0.revision = device->chiprev;
+	if (pfb)  args->v0.ram_size = args->v0.ram_user = pfb->ram->size;
+	else      args->v0.ram_size = args->v0.ram_user = 0;
+	if (imem) args->v0.ram_user = args->v0.ram_user - imem->reserved;
+	return 0;
+}
+
+static int
+nouveau_devobj_mthd(struct nouveau_object *object, u32 mthd,
+		    void *data, u32 size)
+{
+	switch (mthd) {
+	case NV_DEVICE_V0_INFO:
+		return nouveau_devobj_info(object, data, size);
+	default:
+		break;
+	}
+	return -EINVAL;
+}
+
+static u8
+nouveau_devobj_rd08(struct nouveau_object *object, u64 addr)
+{
+	return nv_rd08(object->engine, addr);
+}
+
+static u16
+nouveau_devobj_rd16(struct nouveau_object *object, u64 addr)
+{
+	return nv_rd16(object->engine, addr);
+}
+
+static u32
+nouveau_devobj_rd32(struct nouveau_object *object, u64 addr)
+{
+	return nv_rd32(object->engine, addr);
+}
+
+static void
+nouveau_devobj_wr08(struct nouveau_object *object, u64 addr, u8 data)
+{
+	nv_wr08(object->engine, addr, data);
+}
+
+static void
+nouveau_devobj_wr16(struct nouveau_object *object, u64 addr, u16 data)
+{
+	nv_wr16(object->engine, addr, data);
+}
+
+static void
+nouveau_devobj_wr32(struct nouveau_object *object, u64 addr, u32 data)
+{
+	nv_wr32(object->engine, addr, data);
+}
+
+static int
+nouveau_devobj_map(struct nouveau_object *object, u64 *addr, u32 *size)
+{
+	struct nouveau_device *device = nv_device(object);
+	*addr = nv_device_resource_start(device, 0);
+	*size = nv_device_resource_len(device, 0);
+	return 0;
+}
+
+static const u64 disable_map[] = {
+	[NVDEV_SUBDEV_VBIOS]	= NV_DEVICE_V0_DISABLE_VBIOS,
+	[NVDEV_SUBDEV_DEVINIT]	= NV_DEVICE_V0_DISABLE_CORE,
+	[NVDEV_SUBDEV_GPIO]	= NV_DEVICE_V0_DISABLE_CORE,
+	[NVDEV_SUBDEV_I2C]	= NV_DEVICE_V0_DISABLE_CORE,
+	[NVDEV_SUBDEV_CLOCK]	= NV_DEVICE_V0_DISABLE_CORE,
+	[NVDEV_SUBDEV_MXM]	= NV_DEVICE_V0_DISABLE_CORE,
+	[NVDEV_SUBDEV_MC]	= NV_DEVICE_V0_DISABLE_CORE,
+	[NVDEV_SUBDEV_BUS]	= NV_DEVICE_V0_DISABLE_CORE,
+	[NVDEV_SUBDEV_TIMER]	= NV_DEVICE_V0_DISABLE_CORE,
+	[NVDEV_SUBDEV_FB]	= NV_DEVICE_V0_DISABLE_CORE,
+	[NVDEV_SUBDEV_LTC]	= NV_DEVICE_V0_DISABLE_CORE,
+	[NVDEV_SUBDEV_IBUS]	= NV_DEVICE_V0_DISABLE_CORE,
+	[NVDEV_SUBDEV_INSTMEM]	= NV_DEVICE_V0_DISABLE_CORE,
+	[NVDEV_SUBDEV_VM]	= NV_DEVICE_V0_DISABLE_CORE,
+	[NVDEV_SUBDEV_BAR]	= NV_DEVICE_V0_DISABLE_CORE,
+	[NVDEV_SUBDEV_VOLT]	= NV_DEVICE_V0_DISABLE_CORE,
+	[NVDEV_SUBDEV_THERM]	= NV_DEVICE_V0_DISABLE_CORE,
+	[NVDEV_SUBDEV_PWR]	= NV_DEVICE_V0_DISABLE_CORE,
+	[NVDEV_SUBDEV_FUSE]	= NV_DEVICE_V0_DISABLE_CORE,
+	[NVDEV_ENGINE_DMAOBJ]	= NV_DEVICE_V0_DISABLE_CORE,
+	[NVDEV_ENGINE_PERFMON]  = NV_DEVICE_V0_DISABLE_CORE,
+	[NVDEV_ENGINE_FIFO]	= NV_DEVICE_V0_DISABLE_FIFO,
+	[NVDEV_ENGINE_SW]	= NV_DEVICE_V0_DISABLE_FIFO,
+	[NVDEV_ENGINE_GR]	= NV_DEVICE_V0_DISABLE_GRAPH,
+	[NVDEV_ENGINE_MPEG]	= NV_DEVICE_V0_DISABLE_MPEG,
+	[NVDEV_ENGINE_ME]	= NV_DEVICE_V0_DISABLE_ME,
+	[NVDEV_ENGINE_VP]	= NV_DEVICE_V0_DISABLE_VP,
+	[NVDEV_ENGINE_CRYPT]	= NV_DEVICE_V0_DISABLE_CRYPT,
+	[NVDEV_ENGINE_BSP]	= NV_DEVICE_V0_DISABLE_BSP,
+	[NVDEV_ENGINE_PPP]	= NV_DEVICE_V0_DISABLE_PPP,
+	[NVDEV_ENGINE_COPY0]	= NV_DEVICE_V0_DISABLE_COPY0,
+	[NVDEV_ENGINE_COPY1]	= NV_DEVICE_V0_DISABLE_COPY1,
+	[NVDEV_ENGINE_COPY2]	= NV_DEVICE_V0_DISABLE_COPY1,
+	[NVDEV_ENGINE_VIC]	= NV_DEVICE_V0_DISABLE_VIC,
+	[NVDEV_ENGINE_VENC]	= NV_DEVICE_V0_DISABLE_VENC,
+	[NVDEV_ENGINE_DISP]	= NV_DEVICE_V0_DISABLE_DISP,
+	[NVDEV_SUBDEV_NR]	= 0,
+};
+
+static void
+nouveau_devobj_dtor(struct nouveau_object *object)
+{
+	struct nouveau_devobj *devobj = (void *)object;
+	int i;
+
+	for (i = NVDEV_SUBDEV_NR - 1; i >= 0; i--)
+		nouveau_object_ref(NULL, &devobj->subdev[i]);
+
+	nouveau_parent_destroy(&devobj->base);
+}
+
+static struct nouveau_oclass
+nouveau_devobj_oclass_super = {
+	.handle = NV_DEVICE,
+	.ofuncs = &(struct nouveau_ofuncs) {
+		.dtor = nouveau_devobj_dtor,
+		.init = _nouveau_parent_init,
+		.fini = _nouveau_parent_fini,
+		.mthd = nouveau_devobj_mthd,
+		.map  = nouveau_devobj_map,
+		.rd08 = nouveau_devobj_rd08,
+		.rd16 = nouveau_devobj_rd16,
+		.rd32 = nouveau_devobj_rd32,
+		.wr08 = nouveau_devobj_wr08,
+		.wr16 = nouveau_devobj_wr16,
+		.wr32 = nouveau_devobj_wr32,
+	}
+};
+
+static int
+nouveau_devobj_ctor(struct nouveau_object *parent,
+		    struct nouveau_object *engine,
+		    struct nouveau_oclass *oclass, void *data, u32 size,
+		    struct nouveau_object **pobject)
+{
+	union {
+		struct nv_device_v0 v0;
+	} *args = data;
+	struct nouveau_client *client = nv_client(parent);
+	struct nouveau_device *device;
+	struct nouveau_devobj *devobj;
+	u32 boot0, strap;
+	u64 disable, mmio_base, mmio_size;
+	void __iomem *map;
+	int ret, i, c;
+
+	nv_ioctl(parent, "create device size %d\n", size);
+	if (nvif_unpack(args->v0, 0, 0, false)) {
+		nv_ioctl(parent, "create device v%d device %016llx "
+				 "disable %016llx debug0 %016llx\n",
+			 args->v0.version, args->v0.device,
+			 args->v0.disable, args->v0.debug0);
+	} else
+		return ret;
+
+	/* give priviledged clients register access */
+	if (client->super)
+		oclass = &nouveau_devobj_oclass_super;
+
+	/* find the device subdev that matches what the client requested */
+	device = nv_device(client->device);
+	if (args->v0.device != ~0) {
+		device = nouveau_device_find(args->v0.device);
+		if (!device)
+			return -ENODEV;
+	}
+
+	ret = nouveau_parent_create(parent, nv_object(device), oclass, 0,
+				    nouveau_control_oclass,
+				    (1ULL << NVDEV_ENGINE_DMAOBJ) |
+				    (1ULL << NVDEV_ENGINE_FIFO) |
+				    (1ULL << NVDEV_ENGINE_DISP) |
+				    (1ULL << NVDEV_ENGINE_PERFMON), &devobj);
+	*pobject = nv_object(devobj);
+	if (ret)
+		return ret;
+
+	mmio_base = nv_device_resource_start(device, 0);
+	mmio_size = nv_device_resource_len(device, 0);
+
+	/* translate api disable mask into internal mapping */
+	disable = args->v0.debug0;
+	for (i = 0; i < NVDEV_SUBDEV_NR; i++) {
+		if (args->v0.disable & disable_map[i])
+			disable |= (1ULL << i);
+	}
+
+	/* identify the chipset, and determine classes of subdev/engines */
+	if (!(args->v0.disable & NV_DEVICE_V0_DISABLE_IDENTIFY) &&
+	    !device->card_type) {
+		map = ioremap(mmio_base, 0x102000);
+		if (map == NULL)
+			return -ENOMEM;
+
+		/* switch mmio to cpu's native endianness */
+#ifndef __BIG_ENDIAN
+		if (ioread32_native(map + 0x000004) != 0x00000000)
+#else
+		if (ioread32_native(map + 0x000004) == 0x00000000)
+#endif
+			iowrite32_native(0x01000001, map + 0x000004);
+
+		/* read boot0 and strapping information */
+		boot0 = ioread32_native(map + 0x000000);
+		strap = ioread32_native(map + 0x101000);
+		iounmap(map);
+
+		/* determine chipset and derive architecture from it */
+		if ((boot0 & 0x1f000000) > 0) {
+			device->chipset = (boot0 & 0x1ff00000) >> 20;
+			device->chiprev = (boot0 & 0x000000ff);
+			switch (device->chipset & 0x1f0) {
+			case 0x010: {
+				if (0x461 & (1 << (device->chipset & 0xf)))
+					device->card_type = NV_10;
+				else
+					device->card_type = NV_11;
+				device->chiprev = 0x00;
+				break;
+			}
+			case 0x020: device->card_type = NV_20; break;
+			case 0x030: device->card_type = NV_30; break;
+			case 0x040:
+			case 0x060: device->card_type = NV_40; break;
+			case 0x050:
+			case 0x080:
+			case 0x090:
+			case 0x0a0: device->card_type = NV_50; break;
+			case 0x0c0:
+			case 0x0d0: device->card_type = NV_C0; break;
+			case 0x0e0:
+			case 0x0f0:
+			case 0x100: device->card_type = NV_E0; break;
+			case 0x110:
+			case 0x120: device->card_type = GM100; break;
+			default:
+				break;
+			}
+		} else
+		if ((boot0 & 0xff00fff0) == 0x20004000) {
+			if (boot0 & 0x00f00000)
+				device->chipset = 0x05;
+			else
+				device->chipset = 0x04;
+			device->card_type = NV_04;
+		}
+
+		switch (device->card_type) {
+		case NV_04: ret = nv04_identify(device); break;
+		case NV_10:
+		case NV_11: ret = nv10_identify(device); break;
+		case NV_20: ret = nv20_identify(device); break;
+		case NV_30: ret = nv30_identify(device); break;
+		case NV_40: ret = nv40_identify(device); break;
+		case NV_50: ret = nv50_identify(device); break;
+		case NV_C0: ret = nvc0_identify(device); break;
+		case NV_E0: ret = nve0_identify(device); break;
+		case GM100: ret = gm100_identify(device); break;
+		default:
+			ret = -EINVAL;
+			break;
+		}
+
+		if (ret) {
+			nv_error(device, "unknown chipset, 0x%08x\n", boot0);
+			return ret;
+		}
+
+		nv_info(device, "BOOT0  : 0x%08x\n", boot0);
+		nv_info(device, "Chipset: %s (NV%02X)\n",
+			device->cname, device->chipset);
+		nv_info(device, "Family : NV%02X\n", device->card_type);
+
+		/* determine frequency of timing crystal */
+		if ( device->card_type <= NV_10 || device->chipset < 0x17 ||
+		    (device->chipset >= 0x20 && device->chipset < 0x25))
+			strap &= 0x00000040;
+		else
+			strap &= 0x00400040;
+
+		switch (strap) {
+		case 0x00000000: device->crystal = 13500; break;
+		case 0x00000040: device->crystal = 14318; break;
+		case 0x00400000: device->crystal = 27000; break;
+		case 0x00400040: device->crystal = 25000; break;
+		}
+
+		nv_debug(device, "crystal freq: %dKHz\n", device->crystal);
+	} else
+	if ( (args->v0.disable & NV_DEVICE_V0_DISABLE_IDENTIFY)) {
+		device->cname = "NULL";
+		device->oclass[NVDEV_SUBDEV_VBIOS] = &nouveau_bios_oclass;
+	}
+
+	if (!(args->v0.disable & NV_DEVICE_V0_DISABLE_MMIO) &&
+	    !nv_subdev(device)->mmio) {
+		nv_subdev(device)->mmio  = ioremap(mmio_base, mmio_size);
+		if (!nv_subdev(device)->mmio) {
+			nv_error(device, "unable to map device registers\n");
+			return -ENOMEM;
+		}
+	}
+
+	/* ensure requested subsystems are available for use */
+	for (i = 1, c = 1; i < NVDEV_SUBDEV_NR; i++) {
+		if (!(oclass = device->oclass[i]) || (disable & (1ULL << i)))
+			continue;
+
+		if (device->subdev[i]) {
+			nouveau_object_ref(device->subdev[i],
+					  &devobj->subdev[i]);
+			continue;
+		}
+
+		ret = nouveau_object_ctor(nv_object(device), NULL,
+					  oclass, NULL, i,
+					  &devobj->subdev[i]);
+		if (ret == -ENODEV)
+			continue;
+		if (ret)
+			return ret;
+
+		device->subdev[i] = devobj->subdev[i];
+
+		/* note: can't init *any* subdevs until devinit has been run
+		 * due to not knowing exactly what the vbios init tables will
+		 * mess with.  devinit also can't be run until all of its
+		 * dependencies have been created.
+		 *
+		 * this code delays init of any subdev until all of devinit's
+		 * dependencies have been created, and then initialises each
+		 * subdev in turn as they're created.
+		 */
+		while (i >= NVDEV_SUBDEV_DEVINIT_LAST && c <= i) {
+			struct nouveau_object *subdev = devobj->subdev[c++];
+			if (subdev && !nv_iclass(subdev, NV_ENGINE_CLASS)) {
+				ret = nouveau_object_inc(subdev);
+				if (ret)
+					return ret;
+				atomic_dec(&nv_object(device)->usecount);
+			} else
+			if (subdev) {
+				nouveau_subdev_reset(subdev);
+			}
+		}
+	}
+
+	return 0;
+}
+
+static struct nouveau_ofuncs
+nouveau_devobj_ofuncs = {
+	.ctor = nouveau_devobj_ctor,
+	.dtor = nouveau_devobj_dtor,
+	.init = _nouveau_parent_init,
+	.fini = _nouveau_parent_fini,
+	.mthd = nouveau_devobj_mthd,
+};
+
+/******************************************************************************
+ * nouveau_device: engine functions
+ *****************************************************************************/
+
+struct nouveau_device *
+nv_device(void *obj)
+{
+	struct nouveau_object *device = nv_object(obj);
+	if (device->engine == NULL) {
+		while (device && device->parent)
+			device = device->parent;
+	} else {
+		device = &nv_object(obj)->engine->subdev.object;
+		if (device && device->parent)
+			device = device->parent;
+	}
+#if CONFIG_NOUVEAU_DEBUG >= NV_DBG_PARANOIA
+	if (unlikely(!device))
+		nv_assert("BAD CAST -> NvDevice, 0x%08x\n", nv_hclass(obj));
+#endif
+	return (void *)device;
+}
+
+static struct nouveau_oclass
+nouveau_device_sclass[] = {
+	{ 0x0080, &nouveau_devobj_ofuncs },
+	{}
+};
+
+static int
+nouveau_device_event_ctor(struct nouveau_object *object, void *data, u32 size,
+			  struct nvkm_notify *notify)
+{
+	if (!WARN_ON(size != 0)) {
+		notify->size  = 0;
+		notify->types = 1;
+		notify->index = 0;
+		return 0;
+	}
+	return -EINVAL;
+}
+
+static const struct nvkm_event_func
+nouveau_device_event_func = {
+	.ctor = nouveau_device_event_ctor,
+};
+
+static int
+nouveau_device_fini(struct nouveau_object *object, bool suspend)
+{
+	struct nouveau_device *device = (void *)object;
+	struct nouveau_object *subdev;
+	int ret, i;
+
+	for (i = NVDEV_SUBDEV_NR - 1; i >= 0; i--) {
+		if ((subdev = device->subdev[i])) {
+			if (!nv_iclass(subdev, NV_ENGINE_CLASS)) {
+				ret = nouveau_object_dec(subdev, suspend);
+				if (ret && suspend)
+					goto fail;
+			}
+		}
+	}
+
+	ret = nvkm_acpi_fini(device, suspend);
+fail:
+	for (; ret && i < NVDEV_SUBDEV_NR; i++) {
+		if ((subdev = device->subdev[i])) {
+			if (!nv_iclass(subdev, NV_ENGINE_CLASS)) {
+				ret = nouveau_object_inc(subdev);
+				if (ret) {
+					/* XXX */
+				}
+			}
+		}
+	}
+
+	return ret;
+}
+
+static int
+nouveau_device_init(struct nouveau_object *object)
+{
+	struct nouveau_device *device = (void *)object;
+	struct nouveau_object *subdev;
+	int ret, i = 0;
+
+	ret = nvkm_acpi_init(device);
+	if (ret)
+		goto fail;
+
+	for (i = 0; i < NVDEV_SUBDEV_NR; i++) {
+		if ((subdev = device->subdev[i])) {
+			if (!nv_iclass(subdev, NV_ENGINE_CLASS)) {
+				ret = nouveau_object_inc(subdev);
+				if (ret)
+					goto fail;
+			} else {
+				nouveau_subdev_reset(subdev);
+			}
+		}
+	}
+
+	ret = 0;
+fail:
+	for (--i; ret && i >= 0; i--) {
+		if ((subdev = device->subdev[i])) {
+			if (!nv_iclass(subdev, NV_ENGINE_CLASS))
+				nouveau_object_dec(subdev, false);
+		}
+	}
+
+	if (ret)
+		nvkm_acpi_fini(device, false);
+	return ret;
+}
+
+static void
+nouveau_device_dtor(struct nouveau_object *object)
+{
+	struct nouveau_device *device = (void *)object;
+
+	nvkm_event_fini(&device->event);
+
+	mutex_lock(&nv_devices_mutex);
+	list_del(&device->head);
+	mutex_unlock(&nv_devices_mutex);
+
+	if (nv_subdev(device)->mmio)
+		iounmap(nv_subdev(device)->mmio);
+
+	nouveau_engine_destroy(&device->engine);
+}
+
+resource_size_t
+nv_device_resource_start(struct nouveau_device *device, unsigned int bar)
+{
+	if (nv_device_is_pci(device)) {
+		return pci_resource_start(device->pdev, bar);
+	} else {
+		struct resource *res;
+		res = platform_get_resource(device->platformdev,
+					    IORESOURCE_MEM, bar);
+		if (!res)
+			return 0;
+		return res->start;
+	}
+}
+
+resource_size_t
+nv_device_resource_len(struct nouveau_device *device, unsigned int bar)
+{
+	if (nv_device_is_pci(device)) {
+		return pci_resource_len(device->pdev, bar);
+	} else {
+		struct resource *res;
+		res = platform_get_resource(device->platformdev,
+					    IORESOURCE_MEM, bar);
+		if (!res)
+			return 0;
+		return resource_size(res);
+	}
+}
+
+int
+nv_device_get_irq(struct nouveau_device *device, bool stall)
+{
+	if (nv_device_is_pci(device)) {
+		return device->pdev->irq;
+	} else {
+		return platform_get_irq_byname(device->platformdev,
+					       stall ? "stall" : "nonstall");
+	}
+}
+
+static struct nouveau_oclass
+nouveau_device_oclass = {
+	.handle = NV_ENGINE(DEVICE, 0x00),
+	.ofuncs = &(struct nouveau_ofuncs) {
+		.dtor = nouveau_device_dtor,
+		.init = nouveau_device_init,
+		.fini = nouveau_device_fini,
+	},
+};
+
+int
+nouveau_device_create_(void *dev, enum nv_bus_type type, u64 name,
+		       const char *sname, const char *cfg, const char *dbg,
+		       int length, void **pobject)
+{
+	struct nouveau_device *device;
+	int ret = -EEXIST;
+
+	mutex_lock(&nv_devices_mutex);
+	list_for_each_entry(device, &nv_devices, head) {
+		if (device->handle == name)
+			goto done;
+	}
+
+	ret = nouveau_engine_create_(NULL, NULL, &nouveau_device_oclass, true,
+				     "DEVICE", "device", length, pobject);
+	device = *pobject;
+	if (ret)
+		goto done;
+
+	switch (type) {
+	case NOUVEAU_BUS_PCI:
+		device->pdev = dev;
+		break;
+	case NOUVEAU_BUS_PLATFORM:
+		device->platformdev = dev;
+		break;
+	}
+	device->handle = name;
+	device->cfgopt = cfg;
+	device->dbgopt = dbg;
+	device->name = sname;
+
+	nv_subdev(device)->debug = nouveau_dbgopt(device->dbgopt, "DEVICE");
+	nv_engine(device)->sclass = nouveau_device_sclass;
+	list_add(&device->head, &nv_devices);
+
+	ret = nvkm_event_init(&nouveau_device_event_func, 1, 1,
+			      &device->event);
+done:
+	mutex_unlock(&nv_devices_mutex);
+	return ret;
+}
