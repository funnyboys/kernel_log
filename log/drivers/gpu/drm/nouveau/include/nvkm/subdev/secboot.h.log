commit 2c5ac5ba4f855b8cb3f20c52c1a1e0773e671164
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 12 16:09:03 2017 +1000

    drm/nouveau/secboot/gp108: implement on top of acr_r370
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Reviewed-by: Gourav Samaiya <gsamaiya@nvidia.com>

diff --git a/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h b/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
index 59f3ba551681..b57fe4ae93ba 100644
--- a/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
+++ b/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
@@ -60,6 +60,7 @@ int nvkm_secboot_reset(struct nvkm_secboot *, unsigned long);
 int gm200_secboot_new(struct nvkm_device *, int, struct nvkm_secboot **);
 int gm20b_secboot_new(struct nvkm_device *, int, struct nvkm_secboot **);
 int gp102_secboot_new(struct nvkm_device *, int, struct nvkm_secboot **);
+int gp108_secboot_new(struct nvkm_device *, int, struct nvkm_secboot **);
 int gp10b_secboot_new(struct nvkm_device *, int, struct nvkm_secboot **);
 
 #endif

commit 59d5592d3bf2e70b9c56212cf5c9f1bfab6f0147
Author: Alexandre Courbot <acourbot@nvidia.com>
Date:   Wed Mar 29 18:31:14 2017 +0900

    drm/nouveau/secboot: add GP10B support
    
    GP10B's secboot is largely similar to GM20B's. Only differences are MC
    base address and the fact that GPCCS is also securely managed.
    
    Signed-off-by: Alexandre Courbot <acourbot@nvidia.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h b/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
index a2d54d81e338..59f3ba551681 100644
--- a/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
+++ b/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
@@ -60,5 +60,6 @@ int nvkm_secboot_reset(struct nvkm_secboot *, unsigned long);
 int gm200_secboot_new(struct nvkm_device *, int, struct nvkm_secboot **);
 int gm20b_secboot_new(struct nvkm_device *, int, struct nvkm_secboot **);
 int gp102_secboot_new(struct nvkm_device *, int, struct nvkm_secboot **);
+int gp10b_secboot_new(struct nvkm_device *, int, struct nvkm_secboot **);
 
 #endif

commit 598a8148e7208aae64f3c3d33f0ad1a65425965f
Author: Alexandre Courbot <acourbot@nvidia.com>
Date:   Wed Mar 29 18:31:09 2017 +0900

    drm/nouveau/secboot: allow to boot multiple falcons
    
    Change the secboot and msgqueue interfaces to take a mask of falcons to
    reset instead of a single falcon. The GP10B firmware interface requires
    FECS and GPCCS to be booted in a single firmware command.
    
    For firmwares that only support single falcon boot, it is trivial to
    loop over the mask and boot each falcons individually.
    
    Signed-off-by: Alexandre Courbot <acourbot@nvidia.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h b/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
index d6a4bdb6573b..a2d54d81e338 100644
--- a/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
+++ b/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
@@ -55,7 +55,7 @@ struct nvkm_secboot {
 #define nvkm_secboot(p) container_of((p), struct nvkm_secboot, subdev)
 
 bool nvkm_secboot_is_managed(struct nvkm_secboot *, enum nvkm_secboot_falcon);
-int nvkm_secboot_reset(struct nvkm_secboot *, enum nvkm_secboot_falcon);
+int nvkm_secboot_reset(struct nvkm_secboot *, unsigned long);
 
 int gm200_secboot_new(struct nvkm_device *, int, struct nvkm_secboot **);
 int gm20b_secboot_new(struct nvkm_device *, int, struct nvkm_secboot **);

commit 5429f82f341524deb9f66193892a69dea2f862a3
Author: Alexandre Courbot <acourbot@nvidia.com>
Date:   Thu Jan 26 15:18:25 2017 +0900

    drm/nouveau/secboot: add gp102/gp104/gp106/gp107 support
    
    These gp10x chips are supporting using (roughly) the same firmware.
    Compared to previous secure chips, ACR runs on SEC2 and so does the
    low-secure msgqueue.
    
    ACR for these chips is based on r367.
    
    Signed-off-by: Alexandre Courbot <acourbot@nvidia.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h b/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
index 03da24e2c229..d6a4bdb6573b 100644
--- a/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
+++ b/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
@@ -59,5 +59,6 @@ int nvkm_secboot_reset(struct nvkm_secboot *, enum nvkm_secboot_falcon);
 
 int gm200_secboot_new(struct nvkm_device *, int, struct nvkm_secboot **);
 int gm20b_secboot_new(struct nvkm_device *, int, struct nvkm_secboot **);
+int gp102_secboot_new(struct nvkm_device *, int, struct nvkm_secboot **);
 
 #endif

commit 7defd1daacef6bfae5387e95bcd7b57c9183aaf7
Author: Alexandre Courbot <acourbot@nvidia.com>
Date:   Thu Jan 26 17:18:49 2017 +0900

    drm/nouveau/secboot: support for different load and unload falcons
    
    On some secure boot instances (e.g. gp10x) the load and unload blobs do
    not run on the same falcon. Support this case by introducing a new
    member to the ACR structure and making related functions take the falcon
    to use as an argument instead of assuming the boot falcon is to be used.
    
    The rule is that the load blob can be run on either the SEC or PMU
    falcons, but the unload blob must be always run on PMU.
    
    Signed-off-by: Alexandre Courbot <acourbot@nvidia.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h b/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
index eb46fbf26df6..03da24e2c229 100644
--- a/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
+++ b/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
@@ -45,6 +45,7 @@ struct nvkm_secboot {
 	struct nvkm_acr *acr;
 	struct nvkm_subdev subdev;
 	struct nvkm_falcon *boot_falcon;
+	struct nvkm_falcon *halt_falcon;
 
 	u64 wpr_addr;
 	u32 wpr_size;

commit 48387f0ca5493258add078de7f5520756ddc510a
Author: Alexandre Courbot <acourbot@nvidia.com>
Date:   Thu Jan 26 16:56:45 2017 +0900

    drm/nouveau/secboot: support running ACR on SEC
    
    Add support for running the ACR binary on the SEC falcon.
    
    Signed-off-by: Alexandre Courbot <acourbot@nvidia.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h b/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
index d03a1b086723..eb46fbf26df6 100644
--- a/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
+++ b/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
@@ -30,7 +30,8 @@ enum nvkm_secboot_falcon {
 	NVKM_SECBOOT_FALCON_RESERVED = 1,
 	NVKM_SECBOOT_FALCON_FECS = 2,
 	NVKM_SECBOOT_FALCON_GPCCS = 3,
-	NVKM_SECBOOT_FALCON_END = 4,
+	NVKM_SECBOOT_FALCON_SEC2 = 7,
+	NVKM_SECBOOT_FALCON_END = 8,
 	NVKM_SECBOOT_FALCON_INVALID = 0xffffffff,
 };
 

commit ba735d061dcbbb061721f302f1ef519c547d5bab
Author: Alexandre Courbot <acourbot@nvidia.com>
Date:   Thu Dec 15 14:40:25 2016 +0900

    drm/nouveau/secboot: make nvkm_secboot_falcon_name visible
    
    Make nvkm_secboot_falcon_name publicly visible as other subdevs will
    need to use it for debug messages.
    
    Signed-off-by: Alexandre Courbot <acourbot@nvidia.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h b/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
index 5dbd8aa4f8c2..d03a1b086723 100644
--- a/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
+++ b/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
@@ -34,6 +34,8 @@ enum nvkm_secboot_falcon {
 	NVKM_SECBOOT_FALCON_INVALID = 0xffffffff,
 };
 
+extern const char *nvkm_secboot_falcon_name[];
+
 /**
  * @wpr_set: whether the WPR region is currently set
 */

commit 555cafb40445861c121422b157c74fe2de793e68
Author: Alexandre Courbot <acourbot@nvidia.com>
Date:   Wed Dec 14 17:02:41 2016 +0900

    drm/nouveau/secboot: split reset function
    
    Split the reset function into more meaningful and reusable ones.
    
    Signed-off-by: Alexandre Courbot <acourbot@nvidia.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h b/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
index 6e9e0450220c..5dbd8aa4f8c2 100644
--- a/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
+++ b/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
@@ -34,6 +34,9 @@ enum nvkm_secboot_falcon {
 	NVKM_SECBOOT_FALCON_INVALID = 0xffffffff,
 };
 
+/**
+ * @wpr_set: whether the WPR region is currently set
+*/
 struct nvkm_secboot {
 	const struct nvkm_secboot_func *func;
 	struct nvkm_acr *acr;
@@ -42,6 +45,8 @@ struct nvkm_secboot {
 
 	u64 wpr_addr;
 	u32 wpr_size;
+
+	bool wpr_set;
 };
 #define nvkm_secboot(p) container_of((p), struct nvkm_secboot, subdev)
 

commit 72e0642fb4c21632a410c1ff971a63886402b9c9
Author: Alexandre Courbot <acourbot@nvidia.com>
Date:   Wed Dec 14 17:02:39 2016 +0900

    drm/nouveau/secboot: reorganize into more files
    
    Split the act of building the ACR blob from firmware files from the rest
    of the (chip-dependent) secure boot logic. ACR logic is moved into
    acr_rxxx.c files, where rxxx corresponds to the compatible release of
    the NVIDIA driver. At the moment r352 and r361 are supported since
    firmwares have been released for these versions. Some abstractions are
    added on top of r352 so r361 can easily be implemented on top of it by
    just overriding a few hooks.
    
    This split makes it possible and easy to reuse the same ACR version on
    different chips. It also hopefully makes the code much more readable as
    the different secure boot logics are separated. As more chips and
    firmware versions will be supported, this is a necessity to not get lost
    in code that is already quite complex.
    
    This is a big commit, but it essentially moves things around (and split
    the nvkm_secboot structure into two, nvkm_secboot and nvkm_acr). Code
    semantics should not be affected.
    
    Signed-off-by: Alexandre Courbot <acourbot@nvidia.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h b/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
index be04c34f25e3..6e9e0450220c 100644
--- a/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
+++ b/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
@@ -34,15 +34,14 @@ enum nvkm_secboot_falcon {
 	NVKM_SECBOOT_FALCON_INVALID = 0xffffffff,
 };
 
-/**
- * @base:		base IO address of the falcon performing secure boot
- * @irq_mask:		IRQ mask of the falcon performing secure boot
- * @enable_mask:	enable mask of the falcon performing secure boot
-*/
 struct nvkm_secboot {
 	const struct nvkm_secboot_func *func;
+	struct nvkm_acr *acr;
 	struct nvkm_subdev subdev;
 	struct nvkm_falcon *boot_falcon;
+
+	u64 wpr_addr;
+	u32 wpr_size;
 };
 #define nvkm_secboot(p) container_of((p), struct nvkm_secboot, subdev)
 

commit c8225b54fe1b0d64b7da2c0d1d5b64d316b248f5
Author: Alexandre Courbot <acourbot@nvidia.com>
Date:   Tue Dec 13 17:11:31 2016 +0900

    drm/nouveau/secboot: remove nvkm_secboot_start()
    
    Since GR has moved to using the falcon library to start the falcons,
    this function is not needed anymore.
    
    Signed-off-by: Alexandre Courbot <acourbot@nvidia.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h b/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
index 2a2f651ccceb..be04c34f25e3 100644
--- a/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
+++ b/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
@@ -48,7 +48,6 @@ struct nvkm_secboot {
 
 bool nvkm_secboot_is_managed(struct nvkm_secboot *, enum nvkm_secboot_falcon);
 int nvkm_secboot_reset(struct nvkm_secboot *, enum nvkm_secboot_falcon);
-int nvkm_secboot_start(struct nvkm_secboot *, enum nvkm_secboot_falcon);
 
 int gm200_secboot_new(struct nvkm_device *, int, struct nvkm_secboot **);
 int gm20b_secboot_new(struct nvkm_device *, int, struct nvkm_secboot **);

commit d72fb36c45698b9f49a1159eb1a3eb46235d3586
Author: Alexandre Courbot <acourbot@nvidia.com>
Date:   Tue Dec 13 17:11:27 2016 +0900

    drm/nouveau/secboot: use falcon library
    
    Use the falcon library functions in secure boot. This removes a lot of
    code and makes the secure boot flow easier to understand as no register
    is directly accessed.
    
    Signed-off-by: Alexandre Courbot <acourbot@nvidia.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h b/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
index 781586b8cc34..2a2f651ccceb 100644
--- a/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
+++ b/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
@@ -42,9 +42,7 @@ enum nvkm_secboot_falcon {
 struct nvkm_secboot {
 	const struct nvkm_secboot_func *func;
 	struct nvkm_subdev subdev;
-
-	enum nvkm_devidx devidx;
-	u32 base;
+	struct nvkm_falcon *boot_falcon;
 };
 #define nvkm_secboot(p) container_of((p), struct nvkm_secboot, subdev)
 

commit 236f4747915bbad4cd276654659870b081e882be
Author: Alexandre Courbot <acourbot@nvidia.com>
Date:   Tue Dec 13 17:11:26 2016 +0900

    drm/nouveau/secboot: fix functions definitions
    
    These functions should use the nvkm_secboot_falcon enum. Fix this.
    
    Signed-off-by: Alexandre Courbot <acourbot@nvidia.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h b/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
index b04c38c07761..781586b8cc34 100644
--- a/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
+++ b/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
@@ -26,7 +26,7 @@
 #include <core/subdev.h>
 
 enum nvkm_secboot_falcon {
-	NVKM_SECBOOT_FALCON_PMU	= 0,
+	NVKM_SECBOOT_FALCON_PMU = 0,
 	NVKM_SECBOOT_FALCON_RESERVED = 1,
 	NVKM_SECBOOT_FALCON_FECS = 2,
 	NVKM_SECBOOT_FALCON_GPCCS = 3,
@@ -49,8 +49,8 @@ struct nvkm_secboot {
 #define nvkm_secboot(p) container_of((p), struct nvkm_secboot, subdev)
 
 bool nvkm_secboot_is_managed(struct nvkm_secboot *, enum nvkm_secboot_falcon);
-int nvkm_secboot_reset(struct nvkm_secboot *, u32 falcon);
-int nvkm_secboot_start(struct nvkm_secboot *, u32 falcon);
+int nvkm_secboot_reset(struct nvkm_secboot *, enum nvkm_secboot_falcon);
+int nvkm_secboot_start(struct nvkm_secboot *, enum nvkm_secboot_falcon);
 
 int gm200_secboot_new(struct nvkm_device *, int, struct nvkm_secboot **);
 int gm20b_secboot_new(struct nvkm_device *, int, struct nvkm_secboot **);

commit 5dfc5dbf656eb033ea04bac331afc196584b01b9
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Mon May 30 08:57:55 2016 +1000

    drm/nouveau/secboot: use nvkm_mc_enable/disable()
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h b/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
index fe8e9e04ec81..b04c38c07761 100644
--- a/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
+++ b/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
@@ -45,7 +45,6 @@ struct nvkm_secboot {
 
 	enum nvkm_devidx devidx;
 	u32 base;
-	u32 enable_mask;
 };
 #define nvkm_secboot(p) container_of((p), struct nvkm_secboot, subdev)
 

commit 2b80bb74fb6a8273d3824981d276e019e349ed2f
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Mon May 30 08:56:23 2016 +1000

    drm/nouveau/secboot: use nvkm_mc_intr_mask/unmask()
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h b/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
index c6edd95a5b69..fe8e9e04ec81 100644
--- a/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
+++ b/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
@@ -43,8 +43,8 @@ struct nvkm_secboot {
 	const struct nvkm_secboot_func *func;
 	struct nvkm_subdev subdev;
 
+	enum nvkm_devidx devidx;
 	u32 base;
-	u32 irq_mask;
 	u32 enable_mask;
 };
 #define nvkm_secboot(p) container_of((p), struct nvkm_secboot, subdev)

commit 923f1bd27bf1ed49b3d1a4cccf2c8238618b49cf
Author: Alexandre Courbot <acourbot@nvidia.com>
Date:   Wed Feb 24 14:42:24 2016 +0900

    drm/nouveau/secboot/gm20b: add secure boot support
    
    Add secure boot support for the GM20B chip found in Tegra X1. Secure
    boot on Tegra works slightly differently from desktop, notably in the
    way the WPR region is set up.
    
    In addition, the firmware bootloaders use a slightly different header
    format.
    
    Signed-off-by: Alexandre Courbot <acourbot@nvidia.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h b/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
index a509f2b4aa5f..c6edd95a5b69 100644
--- a/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
+++ b/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
@@ -54,5 +54,6 @@ int nvkm_secboot_reset(struct nvkm_secboot *, u32 falcon);
 int nvkm_secboot_start(struct nvkm_secboot *, u32 falcon);
 
 int gm200_secboot_new(struct nvkm_device *, int, struct nvkm_secboot **);
+int gm20b_secboot_new(struct nvkm_device *, int, struct nvkm_secboot **);
 
 #endif

commit 9cc45521498b208b44575c96aa0b19e8eaac26ca
Author: Alexandre Courbot <acourbot@nvidia.com>
Date:   Wed Feb 24 14:42:23 2016 +0900

    drm/nouveau/secboot/gm200: add secure-boot support
    
    Add secure-boot for the dGPU set of GM20X chips, using the PMU as the
    high-secure falcon.
    
    This work is based on Deepak Goyal's initial port of Secure Boot to
    Nouveau.
    
    v2. use proper memory target function
    
    Signed-off-by: Alexandre Courbot <acourbot@nvidia.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h b/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
index f40b57567676..a509f2b4aa5f 100644
--- a/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
+++ b/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
@@ -53,4 +53,6 @@ bool nvkm_secboot_is_managed(struct nvkm_secboot *, enum nvkm_secboot_falcon);
 int nvkm_secboot_reset(struct nvkm_secboot *, u32 falcon);
 int nvkm_secboot_start(struct nvkm_secboot *, u32 falcon);
 
+int gm200_secboot_new(struct nvkm_device *, int, struct nvkm_secboot **);
+
 #endif

commit 7d12388a1f4243c2f13e0f84b251b1a4a92f79a3
Author: Alexandre Courbot <acourbot@nvidia.com>
Date:   Wed Feb 24 14:42:20 2016 +0900

    drm/nouveau/core: add support for secure boot
    
    On GM200 and later GPUs, firmware for some essential falcons (notably
    GR ones) must be authenticated by a NVIDIA-produced signature and
    loaded by a high-secure falcon in order to be able to access privileged
    registers, in a process known as Secure Boot.
    
    Secure Boot requires building a binary blob containing the firmwares
    and signatures of the falcons to be loaded. This blob is then given to
    a high-secure falcon running a signed loader firmware that copies the
    blob into a write-protected region, checks that the signatures are
    valid, and finally loads the verified firmware into the managed falcons
    and switches them to privileged mode.
    
    This patch adds infrastructure code to support this process on chips
    that require it.
    
    v2:
    - The IRQ mask of the PMU falcon was left - replace it with the proper
      irq_mask variable.
    - The falcon reset procedure expecting a falcon in an initialized state,
      which was accidentally provided by the PMU subdev. Make sure that
      secboot can manage the falcon on its own.
    
    Signed-off-by: Alexandre Courbot <acourbot@nvidia.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>

diff --git a/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h b/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
new file mode 100644
index 000000000000..f40b57567676
--- /dev/null
+++ b/drivers/gpu/drm/nouveau/include/nvkm/subdev/secboot.h
@@ -0,0 +1,56 @@
+/*
+ * Copyright (c) 2016, NVIDIA CORPORATION. All rights reserved.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a
+ * copy of this software and associated documentation files (the "Software"),
+ * to deal in the Software without restriction, including without limitation
+ * the rights to use, copy, modify, merge, publish, distribute, sublicense,
+ * and/or sell copies of the Software, and to permit persons to whom the
+ * Software is furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
+ * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+ * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
+ * DEALINGS IN THE SOFTWARE.
+ */
+
+#ifndef __NVKM_SECURE_BOOT_H__
+#define __NVKM_SECURE_BOOT_H__
+
+#include <core/subdev.h>
+
+enum nvkm_secboot_falcon {
+	NVKM_SECBOOT_FALCON_PMU	= 0,
+	NVKM_SECBOOT_FALCON_RESERVED = 1,
+	NVKM_SECBOOT_FALCON_FECS = 2,
+	NVKM_SECBOOT_FALCON_GPCCS = 3,
+	NVKM_SECBOOT_FALCON_END = 4,
+	NVKM_SECBOOT_FALCON_INVALID = 0xffffffff,
+};
+
+/**
+ * @base:		base IO address of the falcon performing secure boot
+ * @irq_mask:		IRQ mask of the falcon performing secure boot
+ * @enable_mask:	enable mask of the falcon performing secure boot
+*/
+struct nvkm_secboot {
+	const struct nvkm_secboot_func *func;
+	struct nvkm_subdev subdev;
+
+	u32 base;
+	u32 irq_mask;
+	u32 enable_mask;
+};
+#define nvkm_secboot(p) container_of((p), struct nvkm_secboot, subdev)
+
+bool nvkm_secboot_is_managed(struct nvkm_secboot *, enum nvkm_secboot_falcon);
+int nvkm_secboot_reset(struct nvkm_secboot *, u32 falcon);
+int nvkm_secboot_start(struct nvkm_secboot *, u32 falcon);
+
+#endif
