commit e6980a727154b793adb218fbc7b4d6af52a7e364
Author: Stephan Gerhold <stephan@gerhold.net>
Date:   Fri Jan 17 16:34:28 2020 +0100

    drm/modes: Make sure to parse valid rotation value from cmdline
    
    A rotation value should have exactly one rotation angle.
    At the moment there is no validation for this when parsing video=
    parameters from the command line. This causes problems later on
    when we try to combine the command line rotation with the panel
    orientation.
    
    To make sure that we generate a valid rotation value:
      - Set DRM_MODE_ROTATE_0 by default (if no rotate= option is set)
      - Validate that there is exactly one rotation angle set
        (i.e. specifying the rotate= option multiple times is invalid)
    
    Signed-off-by: Stephan Gerhold <stephan@gerhold.net>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200117153429.54700-2-stephan@gerhold.net

diff --git a/drivers/gpu/drm/selftests/drm_cmdline_selftests.h b/drivers/gpu/drm/selftests/drm_cmdline_selftests.h
index ceac7af9a172..29e367db6118 100644
--- a/drivers/gpu/drm/selftests/drm_cmdline_selftests.h
+++ b/drivers/gpu/drm/selftests/drm_cmdline_selftests.h
@@ -53,6 +53,7 @@ cmdline_test(drm_cmdline_test_rotate_0)
 cmdline_test(drm_cmdline_test_rotate_90)
 cmdline_test(drm_cmdline_test_rotate_180)
 cmdline_test(drm_cmdline_test_rotate_270)
+cmdline_test(drm_cmdline_test_rotate_multiple)
 cmdline_test(drm_cmdline_test_rotate_invalid_val)
 cmdline_test(drm_cmdline_test_rotate_truncated)
 cmdline_test(drm_cmdline_test_hmirror)

commit 4e7a4a6fbdc669c44e6079f9d5eb25673749455f
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Nov 18 16:51:30 2019 +0100

    drm/modes: parse_cmdline: Add support for specifying panel_orientation (v2)
    
    Sometimes we want to override a connector's panel_orientation from the
    kernel commandline. Either for testing and for special cases, e.g. a kiosk
    like setup which uses a TV mounted in portrait mode.
    
    Users can already specify a "rotate" option through a video= kernel cmdline
    option. But that only supports 0/180 degrees (see drm_client_modeset TODO)
    and only works for in kernel modeset clients, not for userspace kms users.
    
    The "panel-orientation" connector property OTOH does support 90/270 degrees
    as it leaves dealing with the rotation up to userspace and this does work
    for userspace kms clients (at least those which support this property).
    
    Changes in v2:
    -Add missing ':' after @panel_orientation (reported by kbuild test robot)
    
    BugLink: https://gitlab.freedesktop.org/plymouth/plymouth/merge_requests/83
    Acked-by: Maxime Ripard <mripard@kernel.org>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20191118155134.30468-9-hdegoede@redhat.com

diff --git a/drivers/gpu/drm/selftests/drm_cmdline_selftests.h b/drivers/gpu/drm/selftests/drm_cmdline_selftests.h
index aee92ac2cc21..ceac7af9a172 100644
--- a/drivers/gpu/drm/selftests/drm_cmdline_selftests.h
+++ b/drivers/gpu/drm/selftests/drm_cmdline_selftests.h
@@ -64,3 +64,4 @@ cmdline_test(drm_cmdline_test_bpp_extra_and_option)
 cmdline_test(drm_cmdline_test_extra_and_option)
 cmdline_test(drm_cmdline_test_freestanding_options)
 cmdline_test(drm_cmdline_test_freestanding_force_e_and_options)
+cmdline_test(drm_cmdline_test_panel_orientation)

commit 7b1cce760afe38b40f0989cdf10b2190dccf9815
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Nov 18 16:51:29 2019 +0100

    drm/modes: parse_cmdline: Allow specifying stand-alone options
    
    Some options which can be specified on the commandline, such as
    margin_right=..., margin_left=..., etc. are applied not only to the
    specified mode, but to all modes. As such it would be nice if the user
    can simply say e.g.
    video=HDMI-1:margin_right=14,margin_left=24,margin_bottom=36,margin_top=42
    
    This commit refactors drm_mode_parse_command_line_for_connector() to
    add support for this, and as a nice side effect also cleans up the
    function a bit.
    
    Acked-by: Maxime Ripard <mripard@kernel.org>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20191118155134.30468-8-hdegoede@redhat.com

diff --git a/drivers/gpu/drm/selftests/drm_cmdline_selftests.h b/drivers/gpu/drm/selftests/drm_cmdline_selftests.h
index 003e2c3ffc39..aee92ac2cc21 100644
--- a/drivers/gpu/drm/selftests/drm_cmdline_selftests.h
+++ b/drivers/gpu/drm/selftests/drm_cmdline_selftests.h
@@ -62,3 +62,5 @@ cmdline_test(drm_cmdline_test_multiple_options)
 cmdline_test(drm_cmdline_test_invalid_option)
 cmdline_test(drm_cmdline_test_bpp_extra_and_option)
 cmdline_test(drm_cmdline_test_extra_and_option)
+cmdline_test(drm_cmdline_test_freestanding_options)
+cmdline_test(drm_cmdline_test_freestanding_force_e_and_options)

commit cfb0881b8f621b656a9e23b31944a5db94cf5842
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Nov 18 16:51:25 2019 +0100

    drm/modes: parse_cmdline: Accept extras directly after mode combined with options
    
    Before this commit it was impossible to combine an extra mode argument
    specified directly after the resolution with an option, e.g.
    video=HDMI-1:720x480e,rotate=180 would not work, either the "e" to force
    enable would need to be dropped or the ",rotate=180", otherwise the
    mode_option would not be accepted.
    
    This commit fixes this by setting parse_extras to true in this case, so
    that drm_mode_parse_cmdline_res_mode() parses the extra arguments directly
    after the resolution.
    
    Acked-by: Maxime Ripard <mripard@kernel.org>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20191118155134.30468-4-hdegoede@redhat.com

diff --git a/drivers/gpu/drm/selftests/drm_cmdline_selftests.h b/drivers/gpu/drm/selftests/drm_cmdline_selftests.h
index ca1fc7a78953..003e2c3ffc39 100644
--- a/drivers/gpu/drm/selftests/drm_cmdline_selftests.h
+++ b/drivers/gpu/drm/selftests/drm_cmdline_selftests.h
@@ -61,3 +61,4 @@ cmdline_test(drm_cmdline_test_margin_options)
 cmdline_test(drm_cmdline_test_multiple_options)
 cmdline_test(drm_cmdline_test_invalid_option)
 cmdline_test(drm_cmdline_test_bpp_extra_and_option)
+cmdline_test(drm_cmdline_test_extra_and_option)

commit c2ed3e941901810ad3d55ce1935fa22c5007fee4
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Nov 18 16:51:24 2019 +0100

    drm/modes: parse_cmdline: Stop parsing extras after bpp / refresh at ', '
    
    Before this commit it was impossible to add an extra mode argument after
    a bpp or refresh specifier, combined with an option, e.g.
    video=HDMI-1:720x480-24e,rotate=180 would not work, either the "e" to
    force enable would need to be dropped or the ",rotate=180", otherwise
    the mode_option would not be accepted.
    
    This commit fixes this by fixing the length calculation if extras_ptr
    is set to stop the extra parsing at the start of the options (stop at the
    ',' options_ptr points to).
    
    Acked-by: Maxime Ripard <mripard@kernel.org>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20191118155134.30468-3-hdegoede@redhat.com

diff --git a/drivers/gpu/drm/selftests/drm_cmdline_selftests.h b/drivers/gpu/drm/selftests/drm_cmdline_selftests.h
index 6d61a0eb5d64..ca1fc7a78953 100644
--- a/drivers/gpu/drm/selftests/drm_cmdline_selftests.h
+++ b/drivers/gpu/drm/selftests/drm_cmdline_selftests.h
@@ -60,3 +60,4 @@ cmdline_test(drm_cmdline_test_vmirror)
 cmdline_test(drm_cmdline_test_margin_options)
 cmdline_test(drm_cmdline_test_multiple_options)
 cmdline_test(drm_cmdline_test_invalid_option)
+cmdline_test(drm_cmdline_test_bpp_extra_and_option)

commit 424c38a4e32509ae82dc9d7300432295806cb911
Author: Maxime Ripard <maxime.ripard@bootlin.com>
Date:   Tue Aug 27 13:58:50 2019 +0200

    drm/selftests: modes: Add more unit tests for the cmdline parser
    
    Let's add some unit tests for the recent bugs we just fixed.
    
    Signed-off-by: Maxime Ripard <maxime.ripard@bootlin.com>
    Tested-by: Thomas Graichen <thomas.graichen@gmail.com>
    Reviewed-by: Jernej Skrabec <jernej.skrabec@siol.net>
    Signed-off-by: Maxime Ripard <mripard@kernel.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190827115850.25731-4-mripard@kernel.org

diff --git a/drivers/gpu/drm/selftests/drm_cmdline_selftests.h b/drivers/gpu/drm/selftests/drm_cmdline_selftests.h
index b45824ec7c8f..6d61a0eb5d64 100644
--- a/drivers/gpu/drm/selftests/drm_cmdline_selftests.h
+++ b/drivers/gpu/drm/selftests/drm_cmdline_selftests.h
@@ -9,6 +9,13 @@
 
 #define cmdline_test(test)	selftest(test, test)
 
+cmdline_test(drm_cmdline_test_force_d_only)
+cmdline_test(drm_cmdline_test_force_D_only_dvi)
+cmdline_test(drm_cmdline_test_force_D_only_hdmi)
+cmdline_test(drm_cmdline_test_force_D_only_not_digital)
+cmdline_test(drm_cmdline_test_force_e_only)
+cmdline_test(drm_cmdline_test_margin_only)
+cmdline_test(drm_cmdline_test_interlace_only)
 cmdline_test(drm_cmdline_test_res)
 cmdline_test(drm_cmdline_test_res_missing_x)
 cmdline_test(drm_cmdline_test_res_missing_y)

commit b7ced38916a95a0c66c3e3fc7af3ba2cf0f874af
Author: Maxime Ripard <maxime.ripard@bootlin.com>
Date:   Wed Jun 19 12:17:52 2019 +0200

    drm/selftests: Add command line parser selftests
    
    The command line parser is pretty tough to get right and very error prone,
    so let's add a selftest to try to catch any regression.
    
    Reviewed-by: Noralf Tr√∏nnes <noralf@tronnes.org>
    Signed-off-by: Maxime Ripard <maxime.ripard@bootlin.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/735348d3a475ce0bcc88b46e093ab149023bb202.1560783090.git-series.maxime.ripard@bootlin.com

diff --git a/drivers/gpu/drm/selftests/drm_cmdline_selftests.h b/drivers/gpu/drm/selftests/drm_cmdline_selftests.h
new file mode 100644
index 000000000000..b45824ec7c8f
--- /dev/null
+++ b/drivers/gpu/drm/selftests/drm_cmdline_selftests.h
@@ -0,0 +1,55 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+/* List each unit test as selftest(function)
+ *
+ * The name is used as both an enum and expanded as igt__name to create
+ * a module parameter. It must be unique and legal for a C identifier.
+ *
+ * Tests are executed in order by igt/drm_mm
+ */
+
+#define cmdline_test(test)	selftest(test, test)
+
+cmdline_test(drm_cmdline_test_res)
+cmdline_test(drm_cmdline_test_res_missing_x)
+cmdline_test(drm_cmdline_test_res_missing_y)
+cmdline_test(drm_cmdline_test_res_bad_y)
+cmdline_test(drm_cmdline_test_res_missing_y_bpp)
+cmdline_test(drm_cmdline_test_res_vesa)
+cmdline_test(drm_cmdline_test_res_vesa_rblank)
+cmdline_test(drm_cmdline_test_res_rblank)
+cmdline_test(drm_cmdline_test_res_bpp)
+cmdline_test(drm_cmdline_test_res_bad_bpp)
+cmdline_test(drm_cmdline_test_res_refresh)
+cmdline_test(drm_cmdline_test_res_bad_refresh)
+cmdline_test(drm_cmdline_test_res_bpp_refresh)
+cmdline_test(drm_cmdline_test_res_bpp_refresh_interlaced)
+cmdline_test(drm_cmdline_test_res_bpp_refresh_margins)
+cmdline_test(drm_cmdline_test_res_bpp_refresh_force_off)
+cmdline_test(drm_cmdline_test_res_bpp_refresh_force_on_off)
+cmdline_test(drm_cmdline_test_res_bpp_refresh_force_on)
+cmdline_test(drm_cmdline_test_res_bpp_refresh_force_on_analog)
+cmdline_test(drm_cmdline_test_res_bpp_refresh_force_on_digital)
+cmdline_test(drm_cmdline_test_res_bpp_refresh_interlaced_margins_force_on)
+cmdline_test(drm_cmdline_test_res_margins_force_on)
+cmdline_test(drm_cmdline_test_res_vesa_margins)
+cmdline_test(drm_cmdline_test_res_invalid_mode)
+cmdline_test(drm_cmdline_test_res_bpp_wrong_place_mode)
+cmdline_test(drm_cmdline_test_name)
+cmdline_test(drm_cmdline_test_name_bpp)
+cmdline_test(drm_cmdline_test_name_refresh)
+cmdline_test(drm_cmdline_test_name_bpp_refresh)
+cmdline_test(drm_cmdline_test_name_refresh_wrong_mode)
+cmdline_test(drm_cmdline_test_name_refresh_invalid_mode)
+cmdline_test(drm_cmdline_test_name_option)
+cmdline_test(drm_cmdline_test_name_bpp_option)
+cmdline_test(drm_cmdline_test_rotate_0)
+cmdline_test(drm_cmdline_test_rotate_90)
+cmdline_test(drm_cmdline_test_rotate_180)
+cmdline_test(drm_cmdline_test_rotate_270)
+cmdline_test(drm_cmdline_test_rotate_invalid_val)
+cmdline_test(drm_cmdline_test_rotate_truncated)
+cmdline_test(drm_cmdline_test_hmirror)
+cmdline_test(drm_cmdline_test_vmirror)
+cmdline_test(drm_cmdline_test_margin_options)
+cmdline_test(drm_cmdline_test_multiple_options)
+cmdline_test(drm_cmdline_test_invalid_option)
