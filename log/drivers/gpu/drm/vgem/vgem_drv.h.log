commit 7b42a2f4e4b850ba9069a3927c50754da8aceb51
Author: Sam Ravnborg <sam@ravnborg.org>
Date:   Tue Jul 16 08:42:13 2019 +0200

    drm/vgem: drop use of drmP.h
    
    Drop use of the deprecated header drmP.h.
    Replace with necessary includes in the individual .c files.
    
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Acked-by: Emil Velikov <emil.velikov@collabora.com>
    Cc: David Airlie <airlied@linux.ie>
    Cc: Daniel Vetter <daniel@ffwll.ch>
    Cc: Deepak Sharma <deepak.sharma@amd.com>
    Cc: Thomas Zimmermann <tzimmermann@suse.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190716064220.18157-13-sam@ravnborg.org

diff --git a/drivers/gpu/drm/vgem/vgem_drv.h b/drivers/gpu/drm/vgem/vgem_drv.h
index 5c8f6d619ff3..0ed300317f87 100644
--- a/drivers/gpu/drm/vgem/vgem_drv.h
+++ b/drivers/gpu/drm/vgem/vgem_drv.h
@@ -29,7 +29,6 @@
 #ifndef _VGEM_DRV_H_
 #define _VGEM_DRV_H_
 
-#include <drm/drmP.h>
 #include <drm/drm_gem.h>
 #include <drm/drm_cache.h>
 

commit 71bb23c707c141b176bc084179ca5ee58d5fd26a
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Thu Jun 22 14:46:17 2017 +0100

    drm/vgem: Pin our pages for dmabuf exports
    
    When the caller maps their dmabuf and we return an sg_table, the caller
    doesn't expect the pages beneath that sg_table to vanish on a whim (i.e.
    under mempressure). The contract is that the pages are pinned for the
    duration of the mapping (from dma_buf_map_attachment() to
    dma_buf_unmap_attachment). To comply, we need to introduce our own
    vgem_object.pages_pin_count and elevate it across the mapping. However,
    the drm_prime interface we use calls drv->prime_pin on dma_buf_attach
    and drv->prime_unpin on dma_buf_detach, which while that does cover the
    mapping is much broader than is desired -- but it will do for now.
    
    v2: also hold the pin across prime_vmap/vunmap
    
    Reported-by: Tomi Sarvela <tomi.p.sarvela@intel.com>
    Testcase: igt/gem_concurrent_blit/*swap*vgem*
    Fixes: 5ba6c9ff961a ("drm/vgem: Fix mmaping")
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Tomi Sarvela <tomi.p.sarvela@intel.com>
    Cc: Laura Abbott <labbott@redhat.com>
    Cc: Sean Paul <seanpaul@chromium.org>
    Cc: Matthew Auld <matthew.auld@intel.com>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Cc: <stable@vger.kernel.org> # needs a backport
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: http://patchwork.freedesktop.org/patch/msgid/20170622134617.17912-1-chris@chris-wilson.co.uk

diff --git a/drivers/gpu/drm/vgem/vgem_drv.h b/drivers/gpu/drm/vgem/vgem_drv.h
index 1aae01419112..5c8f6d619ff3 100644
--- a/drivers/gpu/drm/vgem/vgem_drv.h
+++ b/drivers/gpu/drm/vgem/vgem_drv.h
@@ -43,7 +43,11 @@ struct vgem_file {
 #define to_vgem_bo(x) container_of(x, struct drm_vgem_gem_object, base)
 struct drm_vgem_gem_object {
 	struct drm_gem_object base;
+
 	struct page **pages;
+	unsigned int pages_pin_count;
+	struct mutex pages_lock;
+
 	struct sg_table *table;
 };
 

commit af33a9190d0226251e9cbc137c88a707b0bbe356
Author: Laura Abbott <labbott@redhat.com>
Date:   Thu May 4 11:45:48 2017 -0700

    drm/vgem: Enable dmabuf import interfaces
    
    Enable the GEM dma-buf import interfaces in addition to the export
    interfaces. This lets vgem be used as a test source for other allocators
    (e.g. Ion).
    
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Laura Abbott <labbott@redhat.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: http://patchwork.freedesktop.org/patch/msgid/1493923548-20878-4-git-send-email-labbott@redhat.com

diff --git a/drivers/gpu/drm/vgem/vgem_drv.h b/drivers/gpu/drm/vgem/vgem_drv.h
index cb59c7ab98b9..1aae01419112 100644
--- a/drivers/gpu/drm/vgem/vgem_drv.h
+++ b/drivers/gpu/drm/vgem/vgem_drv.h
@@ -43,6 +43,8 @@ struct vgem_file {
 #define to_vgem_bo(x) container_of(x, struct drm_vgem_gem_object, base)
 struct drm_vgem_gem_object {
 	struct drm_gem_object base;
+	struct page **pages;
+	struct sg_table *table;
 };
 
 int vgem_fence_open(struct vgem_file *file);

commit f9a87bd7d5b64075af87345ae42f3984c56bddb6
Author: Gabriel Krisman Bertazi <krisman@collabora.co.uk>
Date:   Mon Jan 9 19:56:49 2017 -0200

    drm: Move drm_clflush prototypes to drm_cache header file
    
    Continue to clean up drmP.h by moving the cache flushing functions into
    it's own header file.
    
    Compile-tested only
    
    Signed-off-by: Gabriel Krisman Bertazi <krisman@collabora.co.uk>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: http://patchwork.freedesktop.org/patch/msgid/20170109215649.6860-2-krisman@collabora.co.uk

diff --git a/drivers/gpu/drm/vgem/vgem_drv.h b/drivers/gpu/drm/vgem/vgem_drv.h
index 1f8798ad329c..cb59c7ab98b9 100644
--- a/drivers/gpu/drm/vgem/vgem_drv.h
+++ b/drivers/gpu/drm/vgem/vgem_drv.h
@@ -31,6 +31,7 @@
 
 #include <drm/drmP.h>
 #include <drm/drm_gem.h>
+#include <drm/drm_cache.h>
 
 #include <uapi/drm/vgem_drm.h>
 

commit 4077798484459a2eced2050045099a466ecb618a
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Fri Jul 15 09:31:11 2016 +0100

    drm/vgem: Attach sw fences to exported vGEM dma-buf (ioctl)
    
    vGEM buffers are useful for passing data between software clients and
    hardware renders. By allowing the user to create and attach fences to
    the exported vGEM buffers (on the dma-buf), the user can implement a
    deferred renderer and queue hardware operations like flipping and then
    signal the buffer readiness (i.e. this allows the user to schedule
    operations out-of-order, but have them complete in-order).
    
    This also makes it much easier to write tightly controlled testcases for
    dma-buf fencing and signaling between hardware drivers.
    
    v2: Don't pretend the fences exist in an ordered timeline, but allocate
    a separate fence-context for each fence so that the fences are
    unordered.
    v3: Make the debug output more interesting, and show the signaled status.
    v4: Automatically signal the fence to prevent userspace from
    indefinitely hanging drivers.
    
    Testcase: igt/vgem_basic/dmabuf-fence
    Testcase: igt/vgem_slow/nohang
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Sean Paul <seanpaul@chromium.org>
    Cc: Zach Reizner <zachr@google.com>
    Cc: Gustavo Padovan <gustavo.padovan@collabora.co.uk>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Acked-by: Zach Reizner <zachr@google.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: http://patchwork.freedesktop.org/patch/msgid/1468571471-12610-1-git-send-email-chris@chris-wilson.co.uk

diff --git a/drivers/gpu/drm/vgem/vgem_drv.h b/drivers/gpu/drm/vgem/vgem_drv.h
index 988cbaae7588..1f8798ad329c 100644
--- a/drivers/gpu/drm/vgem/vgem_drv.h
+++ b/drivers/gpu/drm/vgem/vgem_drv.h
@@ -32,9 +32,25 @@
 #include <drm/drmP.h>
 #include <drm/drm_gem.h>
 
+#include <uapi/drm/vgem_drm.h>
+
+struct vgem_file {
+	struct idr fence_idr;
+	struct mutex fence_mutex;
+};
+
 #define to_vgem_bo(x) container_of(x, struct drm_vgem_gem_object, base)
 struct drm_vgem_gem_object {
 	struct drm_gem_object base;
 };
 
+int vgem_fence_open(struct vgem_file *file);
+int vgem_fence_attach_ioctl(struct drm_device *dev,
+			    void *data,
+			    struct drm_file *file);
+int vgem_fence_signal_ioctl(struct drm_device *dev,
+			    void *data,
+			    struct drm_file *file);
+void vgem_fence_close(struct vgem_file *file);
+
 #endif

commit 5ba6c9ff961a79809ec0daf2713e8d39e3f77199
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Thu Jun 23 15:35:32 2016 +0100

    drm/vgem: Fix mmaping
    
    The vGEM mmap code has bitrotted slightly and now immediately BUGs.
    Since vGEM was last updated, there are new core GEM facilities to
    provide more common functions, so let's use those here.
    
    v2: drm_gem_free_mmap_offset() is performed from
    drm_gem_object_release() so we can remove the redundant call.
    
    Testcase: igt/vgem_basic/mmap
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=96603
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Sean Paul <seanpaul@chromium.org>
    Cc: Zach Reizner <zachr@google.com>
    Cc: Matthew Auld <matthew.auld@intel.com>
    Tested-by: Humberto Israel Perez Rodriguez <humberto.i.perez.rodriguez@intel.com>
    Reviewed-by: Matthew Auld <matthew.auld@intel.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: http://patchwork.freedesktop.org/patch/msgid/1466692534-28303-1-git-send-email-chris@chris-wilson.co.uk

diff --git a/drivers/gpu/drm/vgem/vgem_drv.h b/drivers/gpu/drm/vgem/vgem_drv.h
index e9f92f7ee275..988cbaae7588 100644
--- a/drivers/gpu/drm/vgem/vgem_drv.h
+++ b/drivers/gpu/drm/vgem/vgem_drv.h
@@ -35,12 +35,6 @@
 #define to_vgem_bo(x) container_of(x, struct drm_vgem_gem_object, base)
 struct drm_vgem_gem_object {
 	struct drm_gem_object base;
-	struct page **pages;
-	bool use_dma_buf;
 };
 
-/* vgem_drv.c */
-extern void vgem_gem_put_pages(struct drm_vgem_gem_object *obj);
-extern int vgem_gem_get_pages(struct drm_vgem_gem_object *obj);
-
 #endif

commit 990ed2720717173bbdea4cfb2bad37cc7aa91495
Author: Rob Clark <robdclark@gmail.com>
Date:   Thu May 21 11:58:30 2015 -0400

    drm/vgem: drop DRIVER_PRIME (v2)
    
    For actual sharing of buffers with other drivers (ie. actual hardware)
    we'll need to pimp things out a bit better to deal w/ caching, multiple
    memory domains, etc.  See thread:
    
      http://lists.freedesktop.org/archives/dri-devel/2015-May/083160.html
    
    But for the llvmpipe use-case this isn't a problem.  Nor do we really
    need prime/dri3 (dri2 is sufficient).  So until the other issues are
    sorted lets remove DRIVER_PRIME.
    
    v2: also drop the dead code
    
    [airlied:
     Okay I'm convinced this API could have a lot of use cases
     that are really really bad, yes the upload use case is valid
     however that isn't the only use case enabled, and if we allow
     all the other use cases, people will start to (ab)use them,
     and then they'll be ABI and my life will get worse, so disable
     PRIME for now]
    
    Acked-by: Thomas Hellstrom <thellstrom@vmware.com>
    Acked-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Rob Clark <robdclark@gmail.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>

diff --git a/drivers/gpu/drm/vgem/vgem_drv.h b/drivers/gpu/drm/vgem/vgem_drv.h
index 57ab4d8f41f9..e9f92f7ee275 100644
--- a/drivers/gpu/drm/vgem/vgem_drv.h
+++ b/drivers/gpu/drm/vgem/vgem_drv.h
@@ -43,15 +43,4 @@ struct drm_vgem_gem_object {
 extern void vgem_gem_put_pages(struct drm_vgem_gem_object *obj);
 extern int vgem_gem_get_pages(struct drm_vgem_gem_object *obj);
 
-/* vgem_dma_buf.c */
-extern struct sg_table *vgem_gem_prime_get_sg_table(
-			struct drm_gem_object *gobj);
-extern int vgem_gem_prime_pin(struct drm_gem_object *gobj);
-extern void vgem_gem_prime_unpin(struct drm_gem_object *gobj);
-extern void *vgem_gem_prime_vmap(struct drm_gem_object *gobj);
-extern void vgem_gem_prime_vunmap(struct drm_gem_object *obj, void *vaddr);
-extern struct drm_gem_object *vgem_gem_prime_import(struct drm_device *dev,
-						    struct dma_buf *dma_buf);
-
-
 #endif

commit 502e95c6678505474f1056480310cd9382bacbac
Author: Zach Reizner <zachr@google.com>
Date:   Wed Mar 4 16:33:41 2015 -0800

    drm/vgem: implement virtual GEM
    
    This patch implements the virtual GEM driver with PRIME sharing which
    allows vgem to import a gem object from other drivers for the purpose
    of mmap-ing them to userspace. The mmap is done using the mmap
    operation exported by other drivers.
    
    v2: remove platform_device and do not attach to dma bufs
    v3: use drm helpers for get/put pages
    v4: correct dumb create pitch
    
    Reviewed-by: Rob Clark <robdclark@gmail.com> (v3)
    Reviewed-by: Stéphane Marchesin <marcheu@chromium.org> (v3)
    Signed-off-by: Adam Jackson <ajax@redhat.com>
    Signed-off-by: Ben Widawsky <ben@bwidawsk.net>
    Signed-off-by: Zach Reizner <zachr@google.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>

diff --git a/drivers/gpu/drm/vgem/vgem_drv.h b/drivers/gpu/drm/vgem/vgem_drv.h
new file mode 100644
index 000000000000..57ab4d8f41f9
--- /dev/null
+++ b/drivers/gpu/drm/vgem/vgem_drv.h
@@ -0,0 +1,57 @@
+/*
+ * Copyright © 2012 Intel Corporation
+ * Copyright © 2014 The Chromium OS Authors
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a
+ * copy of this software and associated documentation files (the "Software"),
+ * to deal in the Software without restriction, including without limitation
+ * the rights to use, copy, modify, merge, publish, distribute, sublicense,
+ * and/or sell copies of the Software, and to permit persons to whom the
+ * Software is furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice (including the next
+ * paragraph) shall be included in all copies or substantial portions of the
+ * Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
+ * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+ * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
+ * IN THE SOFTWARE.
+ *
+ * Authors:
+ *    Ben Widawsky <ben@bwidawsk.net>
+ *
+ */
+
+#ifndef _VGEM_DRV_H_
+#define _VGEM_DRV_H_
+
+#include <drm/drmP.h>
+#include <drm/drm_gem.h>
+
+#define to_vgem_bo(x) container_of(x, struct drm_vgem_gem_object, base)
+struct drm_vgem_gem_object {
+	struct drm_gem_object base;
+	struct page **pages;
+	bool use_dma_buf;
+};
+
+/* vgem_drv.c */
+extern void vgem_gem_put_pages(struct drm_vgem_gem_object *obj);
+extern int vgem_gem_get_pages(struct drm_vgem_gem_object *obj);
+
+/* vgem_dma_buf.c */
+extern struct sg_table *vgem_gem_prime_get_sg_table(
+			struct drm_gem_object *gobj);
+extern int vgem_gem_prime_pin(struct drm_gem_object *gobj);
+extern void vgem_gem_prime_unpin(struct drm_gem_object *gobj);
+extern void *vgem_gem_prime_vmap(struct drm_gem_object *gobj);
+extern void vgem_gem_prime_vunmap(struct drm_gem_object *obj, void *vaddr);
+extern struct drm_gem_object *vgem_gem_prime_import(struct drm_device *dev,
+						    struct dma_buf *dma_buf);
+
+
+#endif
