commit d1b5e41e13a7e9bde3e736df9b8693b0325e41bc
Author: Neil Armstrong <narmstrong@baylibre.com>
Date:   Mon Oct 21 11:15:05 2019 +0200

    drm/meson: Add AFBCD module driver
    
    This adds the driver for the ARM Framebuffer Compression decoders found
    in the Amlogic GXM and G12A SoCs.
    
    The Amlogic GXM and G12A AFBC decoder are totally different, the GXM only
    handling only the AFBC v1.0 modes and the G12A decoder handling the
    AFBC v1.2 modes.
    
    The G12A AFBC decoder is an external IP integrated in the video pipeline,
    and the GXM AFBC decoder seems to the an Amlogic custom decoder more
    tighly integrated in the video pipeline.
    
    The GXM AFBC decoder can handle only one AFBC plane for 2 available
    OSD planes available in HW, and the G12A AFBC decoder can handle up
    to 4 AFBC planes for up to 3 OSD planes available in HW.
    
    The Amlogic GXM supports 16x16 SPARSE and 16x16 SPLIT AFBC buffers up
    to 4k.
    
    On the other side, for G12A SPLIT is mandatory in 16x16 block mode, but
    for 4k modes 32x8+SPLIT AFBC buffers is manadatory for performances reasons.
    
    The RDMA is used here to reset and program the AFBC decoder unit
    on each vsync without involving the interrupt handler that can
    be masked for a long period of time, producing display glitches.
    
    For this we use the meson_rdma_writel_sync() which adds the register
    write tuple (VPU register offset and register value) to the RDMA buffer
    and write the value to the HW.
    
    When enabled, the RDMA is enabled to rewrite the same sequence at the
    next VSYNC event, until a new buffer is committed to the OSD plane.
    
    Then the Amlogic G12A is switched to RDMA, the Amlogic GXM Decoder
    doesn't need a reset/reprogram at each vsync, but needs to keep the
    vsync interrupt enabled to trigger the RDMA module.
    
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Reviewed-by: Kevin Hilman <khilman@baylibre.com>
    [narmstrong: fixed typo in commit log]
    Link: https://patchwork.freedesktop.org/patch/msgid/20191021091509.3864-6-narmstrong@baylibre.com

diff --git a/drivers/gpu/drm/meson/meson_osd_afbcd.h b/drivers/gpu/drm/meson/meson_osd_afbcd.h
new file mode 100644
index 000000000000..5e5523304f42
--- /dev/null
+++ b/drivers/gpu/drm/meson/meson_osd_afbcd.h
@@ -0,0 +1,28 @@
+/* SPDX-License-Identifier: GPL-2.0+ */
+/*
+ * Copyright (C) 2019 BayLibre, SAS
+ * Author: Neil Armstrong <narmstrong@baylibre.com>
+ */
+
+#ifndef __MESON_OSD_AFBCD_H
+#define __MESON_OSD_AFBCD_H
+
+#include "meson_drv.h"
+
+/* This is an internal address used to transfer pixel from AFBC to the VIU */
+#define MESON_G12A_AFBCD_OUT_ADDR	0x1000000
+
+struct meson_afbcd_ops {
+	int (*init)(struct meson_drm *priv);
+	int (*reset)(struct meson_drm *priv);
+	int (*enable)(struct meson_drm *priv);
+	int (*disable)(struct meson_drm *priv);
+	int (*setup)(struct meson_drm *priv);
+	int (*fmt_to_blk_mode)(u64 modifier, uint32_t format);
+	bool (*supported_fmt)(u64 modifier, uint32_t format);
+};
+
+extern struct meson_afbcd_ops meson_afbcd_gxm_ops;
+extern struct meson_afbcd_ops meson_afbcd_g12a_ops;
+
+#endif /* __MESON_OSD_AFBCD_H */
