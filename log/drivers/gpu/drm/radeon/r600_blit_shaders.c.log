commit d0be9f4ec1c4ad8a8b6be1efa5bc81e5bce957a3
Author: Geliang Tang <geliangtang@163.com>
Date:   Sun Oct 18 23:29:48 2015 +0800

    drm: fix trivial typos
    
    s/regsiter/register/
    
    Signed-off-by: Geliang Tang <geliangtang@163.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>

diff --git a/drivers/gpu/drm/radeon/r600_blit_shaders.c b/drivers/gpu/drm/radeon/r600_blit_shaders.c
index 34c8b2340f33..443cbe59b274 100644
--- a/drivers/gpu/drm/radeon/r600_blit_shaders.c
+++ b/drivers/gpu/drm/radeon/r600_blit_shaders.c
@@ -32,7 +32,7 @@
  * R6xx+ cards need to use the 3D engine to blit data which requires
  * quite a bit of hw state setup.  Rather than pull the whole 3D driver
  * (which normally generates the 3D state) into the DRM, we opt to use
- * statically generated state tables.  The regsiter state and shaders
+ * statically generated state tables.  The register state and shaders
  * were hand generated to support blitting functionality.  See the 3D
  * driver or documentation for descriptions of the registers and
  * shader instructions.

commit ed2d265d1266736bd294332d7f649003943ae36e
Merge: f1d38e423a69 6c03438edeb5
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Mar 24 10:08:39 2012 -0700

    Merge tag 'bug-for-3.4' of git://git.kernel.org/pub/scm/linux/kernel/git/paulg/linux
    
    Pull <linux/bug.h> cleanup from Paul Gortmaker:
     "The changes shown here are to unify linux's BUG support under the one
      <linux/bug.h> file.  Due to historical reasons, we have some BUG code
      in bug.h and some in kernel.h -- i.e.  the support for BUILD_BUG in
      linux/kernel.h predates the addition of linux/bug.h, but old code in
      kernel.h wasn't moved to bug.h at that time.  As a band-aid, kernel.h
      was including <asm/bug.h> to pseudo link them.
    
      This has caused confusion[1] and general yuck/WTF[2] reactions.  Here
      is an example that violates the principle of least surprise:
    
          CC      lib/string.o
          lib/string.c: In function 'strlcat':
          lib/string.c:225:2: error: implicit declaration of function 'BUILD_BUG_ON'
          make[2]: *** [lib/string.o] Error 1
          $
          $ grep linux/bug.h lib/string.c
          #include <linux/bug.h>
          $
    
      We've included <linux/bug.h> for the BUG infrastructure and yet we
      still get a compile fail! [We've not kernel.h for BUILD_BUG_ON.] Ugh -
      very confusing for someone who is new to kernel development.
    
      With the above in mind, the goals of this changeset are:
    
      1) find and fix any include/*.h files that were relying on the
         implicit presence of BUG code.
      2) find and fix any C files that were consuming kernel.h and hence
         relying on implicitly getting some/all BUG code.
      3) Move the BUG related code living in kernel.h to <linux/bug.h>
      4) remove the asm/bug.h from kernel.h to finally break the chain.
    
      During development, the order was more like 3-4, build-test, 1-2.  But
      to ensure that git history for bisect doesn't get needless build
      failures introduced, the commits have been reorderd to fix the problem
      areas in advance.
    
            [1]  https://lkml.org/lkml/2012/1/3/90
            [2]  https://lkml.org/lkml/2012/1/17/414"
    
    Fix up conflicts (new radeon file, reiserfs header cleanups) as per Paul
    and linux-next.
    
    * tag 'bug-for-3.4' of git://git.kernel.org/pub/scm/linux/kernel/git/paulg/linux:
      kernel.h: doesn't explicitly use bug.h, so don't include it.
      bug: consolidate BUILD_BUG_ON with other bug code
      BUG: headers with BUG/BUG_ON etc. need linux/bug.h
      bug.h: add include of it to various implicit C users
      lib: fix implicit users of kernel.h for TAINT_WARN
      spinlock: macroize assert_spin_locked to avoid bug.h dependency
      x86: relocate get/set debugreg fcns to include/asm/debugreg.

commit cf00790dea6f210ddd01a6656da58c7c9a4ea0e4
Author: Marek Olšák <maraeo@gmail.com>
Date:   Wed Mar 7 23:33:00 2012 +0100

    drm/radeon/kms: set SX_MISC in the r6xx blit code (v2)
    
    Mesa may set it to 1, causing all primitives to be killed.
    
    v2: also update the r7xx code
    
    Signed-off-by: Marek Olšák <maraeo@gmail.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@kernel.org
    Signed-off-by: Dave Airlie <airlied@redhat.com>

diff --git a/drivers/gpu/drm/radeon/r600_blit_shaders.c b/drivers/gpu/drm/radeon/r600_blit_shaders.c
index 2d1f6c5ee2a7..73e2c7c6edbc 100644
--- a/drivers/gpu/drm/radeon/r600_blit_shaders.c
+++ b/drivers/gpu/drm/radeon/r600_blit_shaders.c
@@ -313,6 +313,10 @@ const u32 r6xx_default_state[] =
 	0x00000000, /* VGT_REUSE_OFF */
 	0x00000000, /* VGT_VTX_CNT_EN */
 
+	0xc0016900,
+	0x000000d4,
+	0x00000000, /* SX_MISC */
+
 	0xc0016900,
 	0x000002c8,
 	0x00000000, /* VGT_STRMOUT_BUFFER_EN */
@@ -625,6 +629,10 @@ const u32 r7xx_default_state[] =
 	0x00000000, /* VGT_REUSE_OFF */
 	0x00000000, /* VGT_VTX_CNT_EN */
 
+	0xc0016900,
+	0x000000d4,
+	0x00000000, /* SX_MISC */
+
 	0xc0016900,
 	0x000002c8,
 	0x00000000, /* VGT_STRMOUT_BUFFER_EN */

commit 50af5ead3b44ccf8bd2b4d2a50c1b610f557c480
Author: Paul Gortmaker <paul.gortmaker@windriver.com>
Date:   Fri Jan 20 18:35:53 2012 -0500

    bug.h: add include of it to various implicit C users
    
    With bug.h currently living right in linux/kernel.h there
    are files that use BUG_ON and friends but are not including
    the header explicitly.  Fix them up so we can remove the
    presence in kernel.h file.
    
    Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>

diff --git a/drivers/gpu/drm/radeon/r600_blit_shaders.c b/drivers/gpu/drm/radeon/r600_blit_shaders.c
index 2d1f6c5ee2a7..3af3c6426a6e 100644
--- a/drivers/gpu/drm/radeon/r600_blit_shaders.c
+++ b/drivers/gpu/drm/radeon/r600_blit_shaders.c
@@ -24,6 +24,7 @@
  *     Alex Deucher <alexander.deucher@amd.com>
  */
 
+#include <linux/bug.h>
 #include <linux/types.h>
 #include <linux/kernel.h>
 

commit 4eace7fdfa1f8ac2f0a833e12bd07eeb453ec9ef
Author: Cédric Cano <ccano@interfaceconcept.com>
Date:   Fri Feb 11 19:45:38 2011 -0500

    drm/radeon/kms: 6xx/7xx big endian fixes
    
    agd5f: minor cleanups
    
    Signed-off-by: Cédric Cano <ccano@interfaceconcept.com>
    Signed-off-by: Alex Deucher <alexdeucher@gmail.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>

diff --git a/drivers/gpu/drm/radeon/r600_blit_shaders.c b/drivers/gpu/drm/radeon/r600_blit_shaders.c
index e8151c1d55b2..2d1f6c5ee2a7 100644
--- a/drivers/gpu/drm/radeon/r600_blit_shaders.c
+++ b/drivers/gpu/drm/radeon/r600_blit_shaders.c
@@ -684,7 +684,11 @@ const u32 r6xx_vs[] =
 	0x00000000,
 	0x3c000000,
 	0x68cd1000,
+#ifdef __BIG_ENDIAN
+	0x000a0000,
+#else
 	0x00080000,
+#endif
 	0x00000000,
 };
 

commit b417cc117a104ea457be18cfde9df9d69c21fa62
Author: Alex Deucher <alexdeucher@gmail.com>
Date:   Tue Jul 27 11:01:15 2010 -0400

    drm/radeon: remove viewport transform from r6xx/r7xx blit emit
    
    We aren't using it, so no need.  Save additional dwords.
    
    Signed-off-by: Alex Deucher <alexdeucher@gmail.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>

diff --git a/drivers/gpu/drm/radeon/r600_blit_shaders.c b/drivers/gpu/drm/radeon/r600_blit_shaders.c
index 762b81cb6bd3..e8151c1d55b2 100644
--- a/drivers/gpu/drm/radeon/r600_blit_shaders.c
+++ b/drivers/gpu/drm/radeon/r600_blit_shaders.c
@@ -127,15 +127,6 @@ const u32 r6xx_default_state[] =
 	0x00000000, /* DB_STENCILREFMASK_BF */
 	0x00000000, /* SX_ALPHA_REF */
 
-	0xc0066900,
-	0x0000010f,
-	0x00000000, /* PA_CL_VPORT_XSCALE */
-	0x00000000,
-	0x00000000,
-	0x00000000,
-	0x00000000,
-	0x00000000,
-
 	0xc0046900,
 	0x0000030c,
 	0x01000000, /* CB_CLRCMP_CNTL */
@@ -455,15 +446,6 @@ const u32 r7xx_default_state[] =
 	0x00000000, /* DB_STENCILREFMASK_BF */
 	0x00000000, /* SX_ALPHA_REF */
 
-	0xc0066900,
-	0x0000010f,
-	0x00000000, /* PA_CL_VPORT_XSCALE */
-	0x00000000,
-	0x00000000,
-	0x00000000,
-	0x00000000,
-	0x00000000,
-
 	0xc0046900,
 	0x0000030c, /* CB_CLRCMP_CNTL */
 	0x01000000,

commit 43a7d2d104f26700c0cc070e5a317a51cd1b46c1
Author: Alex Deucher <alexdeucher@gmail.com>
Date:   Tue Jul 27 11:20:54 2010 -0400

    drm/radeon: group r6xx/r7xx newly sequential blit state
    
    group state that is emitted sequentially into fewer packets.
    This saves a number of dwords.
    
    Signed-off-by: Alex Deucher <alexdeucher@gmail.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>

diff --git a/drivers/gpu/drm/radeon/r600_blit_shaders.c b/drivers/gpu/drm/radeon/r600_blit_shaders.c
index 9a0c947b342c..762b81cb6bd3 100644
--- a/drivers/gpu/drm/radeon/r600_blit_shaders.c
+++ b/drivers/gpu/drm/radeon/r600_blit_shaders.c
@@ -109,22 +109,13 @@ const u32 r6xx_default_state[] =
 	0x00000351,
 	0x0000aa00, /* DB_ALPHA_TO_MASK */
 
-	0xc0036900,
+	0xc00f6900,
 	0x00000100,
 	0x00000800, /* VGT_MAX_VTX_INDX */
 	0x00000000, /* VGT_MIN_VTX_INDX */
 	0x00000000, /* VGT_INDX_OFFSET */
-
-	0xc0016900,
-	0x00000103,
 	0x00000000, /* VGT_MULTI_PRIM_IB_RESET_INDX */
-
-	0xc0016900,
-	0x00000104,
 	0x00000000, /* SX_ALPHA_TEST_CONTROL */
-
-	0xc0076900,
-	0x00000105,
 	0x00000000, /* CB_BLEND_RED */
 	0x00000000,
 	0x00000000,
@@ -132,16 +123,19 @@ const u32 r6xx_default_state[] =
 	0x00000000, /* CB_FOG_RED */
 	0x00000000,
 	0x00000000,
-
-	0xc0026900,
-	0x0000010c,
 	0x00000000, /* DB_STENCILREFMASK */
 	0x00000000, /* DB_STENCILREFMASK_BF */
-
-	0xc0016900,
-	0x0000010e,
 	0x00000000, /* SX_ALPHA_REF */
 
+	0xc0066900,
+	0x0000010f,
+	0x00000000, /* PA_CL_VPORT_XSCALE */
+	0x00000000,
+	0x00000000,
+	0x00000000,
+	0x00000000,
+	0x00000000,
+
 	0xc0046900,
 	0x0000030c,
 	0x01000000, /* CB_CLRCMP_CNTL */
@@ -240,41 +234,20 @@ const u32 r6xx_default_state[] =
 	0x00000000,
 	0x3f800000,
 
-	0xc0016900,
+	0xc0026900,
 	0x00000292,
 	0x00000000, /* PA_SC_MPASS_PS_CNTL */
-
-	0xc0016900,
-	0x00000293,
 	0x00004010, /* PA_SC_MODE_CNTL */
 
-	0xc0066900,
-	0x0000010f,
-	0x00000000, /* PA_CL_VPORT_0_XSCALE */
-	0x00000000,
-	0x00000000,
-	0x00000000,
-	0x00000000,
-	0x00000000,
-
-	0xc0026900,
+	0xc0096900,
 	0x00000300,
 	0x00000000, /* PA_SC_LINE_CNTL */
 	0x00000000, /* PA_SC_AA_CONFIG */
-
-	0xc0016900,
-	0x00000302,
 	0x0000002d, /* PA_SU_VTX_CNTL */
-
-	0xc0046900,
-	0x00000303,
 	0x3f800000, /* PA_CL_GB_VERT_CLIP_ADJ */
 	0x3f800000,
 	0x3f800000,
 	0x3f800000,
-
-	0xc0026900,
-	0x00000307,
 	0x00000000, /* PA_SC_SAMPLE_LOCS_MCTX */
 	0x00000000,
 
@@ -282,28 +255,13 @@ const u32 r6xx_default_state[] =
 	0x00000312,
 	0xffffffff, /* PA_SC_AA_MASK */
 
-	0xc0016900,
+	0xc0066900,
 	0x0000037e,
 	0x00000000, /* PA_SU_POLY_OFFSET_DB_FMT_CNTL */
-
-	0xc0016900,
-	0x0000037f,
 	0x00000000, /* PA_SU_POLY_OFFSET_CLAMP */
-
-	0xc0016900,
-	0x00000380,
 	0x00000000, /* PA_SU_POLY_OFFSET_FRONT_SCALE */
-
-	0xc0016900,
-	0x00000381,
 	0x00000000, /* PA_SU_POLY_OFFSET_FRONT_OFFSET */
-
-	0xc0016900,
-	0x00000382,
 	0x00000000, /* PA_SU_POLY_OFFSET_BACK_SCALE */
-
-	0xc0016900,
-	0x00000383,
 	0x00000000, /* PA_SU_POLY_OFFSET_BACK_OFFSET */
 
 	0xc0046900,
@@ -330,29 +288,14 @@ const u32 r6xx_default_state[] =
 	0x00000000, /* VGT_INSTANCE_STEP_RATE_0 */
 	0x00000000, /* VGT_INSTANCE_STEP_RATE_1 */
 
-	0xc0026900,
+	0xc0116900,
 	0x00000280,
 	0x00000000, /* PA_SU_POINT_SIZE */
 	0x00000000, /* PA_SU_POINT_MINMAX */
-
-	0xc0016900,
-	0x00000282,
 	0x00000008, /* PA_SU_LINE_CNTL */
-
-	0xc0016900,
-	0x00000283,
 	0x00000000, /* PA_SC_LINE_STIPPLE */
-
-	0xc0016900,
-	0x00000284,
 	0x00000000, /* VGT_OUTPUT_PATH_CNTL */
-
-	0xc0016900,
-	0x00000285,
 	0x00000000, /* VGT_HOS_CNTL */
-
-	0xc00a6900,
-	0x00000286,
 	0x00000000, /* VGT_HOS_MAX_TESS_LEVEL */
 	0x00000000, /* VGT_HOS_MIN_TESS_LEVEL */
 	0x00000000, /* VGT_HOS_REUSE_DEPTH */
@@ -363,9 +306,6 @@ const u32 r6xx_default_state[] =
 	0x00000000, /* VGT_GROUP_VECT_1_CNTL */
 	0x00000000, /* VGT_GROUP_VECT_0_FMT_CNTL */
 	0x00000000, /* VGT_GROUP_VECT_1_FMT_CNTL */
-
-	0xc0016900,
-	0x00000290,
 	0x00000000, /* VGT_GS_MODE */
 
 	0xc0016900,
@@ -386,37 +326,19 @@ const u32 r6xx_default_state[] =
 	0x000002c8,
 	0x00000000, /* VGT_STRMOUT_BUFFER_EN */
 
-	0xc0016900,
+	0xc0076900,
 	0x00000202,
 	0x00cc0000, /* CB_COLOR_CONTROL */
-
-	0xc0016900,
-	0x00000203,
 	0x00000210, /* DB_SHADER_CNTL */
-
-	0xc0016900,
-	0x00000204,
 	0x00010000, /* PA_CL_CLIP_CNTL */
-
-	0xc0016900,
-	0x00000205,
 	0x00000244, /* PA_SU_SC_MODE_CNTL */
-
-	0xc0016900,
-	0x00000206,
 	0x00000100, /* PA_CL_VTE_CNTL */
-
-	0xc0026900,
-	0x00000207,
 	0x00000000, /* PA_CL_VS_OUT_CNTL */
 	0x00000000, /* PA_CL_NANINF_CNTL */
 
-	0xc0016900,
+	0xc0026900,
 	0x0000008e,
 	0x0000000f, /* CB_TARGET_MASK */
-
-	0xc0016900,
-	0x0000008f,
 	0x0000000f, /* CB_SHADER_MASK */
 
 	0xc0016900,
@@ -431,21 +353,12 @@ const u32 r6xx_default_state[] =
 	0x00000191,
 	0x00000b00, /* SPI_PS_INPUT_CNTL_0 */
 
-	0xc0016900,
+	0xc0056900,
 	0x000001b1,
 	0x00000000, /* SPI_VS_OUT_CONFIG */
-
-	0xc0016900,
-	0x000001b2,
 	0x00000000, /* SPI_THREAD_GROUPING */
-
-	0xc0026900,
-	0x000001b3,
 	0x00000001, /* SPI_PS_IN_CONTROL_0 */
 	0x00000000, /* SPI_PS_IN_CONTROL_1 */
-
-	0xc0016900,
-	0x000001b5,
 	0x00000000, /* SPI_INTERP_CONTROL_0 */
 
 	0xc0036e00, /* SET_SAMPLER */
@@ -524,36 +437,33 @@ const u32 r7xx_default_state[] =
 	0x00000351,
 	0x0000aa00, /* DB_ALPHA_TO_MASK */
 
-	0xc0036900,
+	0xc0096900,
 	0x00000100,
 	0x00000800, /* VGT_MAX_VTX_INDX */
 	0x00000000, /* VGT_MIN_VTX_INDX */
 	0x00000000, /* VGT_INDX_OFFSET */
-
-	0xc0016900,
-	0x00000103,
 	0x00000000, /* VGT_MULTI_PRIM_IB_RESET_INDX */
-
-	0xc0016900,
-	0x00000104,
 	0x00000000, /* SX_ALPHA_TEST_CONTROL */
-
-	0xc0046900,
-	0x00000105,
 	0x00000000, /* CB_BLEND_RED */
 	0x00000000,
 	0x00000000,
 	0x00000000,
 
-	0xc0026900,
+	0xc0036900,
 	0x0000010c,
 	0x00000000, /* DB_STENCILREFMASK */
 	0x00000000, /* DB_STENCILREFMASK_BF */
-
-	0xc0016900,
-	0x0000010e,
 	0x00000000, /* SX_ALPHA_REF */
 
+	0xc0066900,
+	0x0000010f,
+	0x00000000, /* PA_CL_VPORT_XSCALE */
+	0x00000000,
+	0x00000000,
+	0x00000000,
+	0x00000000,
+	0x00000000,
+
 	0xc0046900,
 	0x0000030c, /* CB_CLRCMP_CNTL */
 	0x01000000,
@@ -645,41 +555,20 @@ const u32 r7xx_default_state[] =
 	0x00000000,
 	0x3f800000,
 
-	0xc0016900,
+	0xc0026900,
 	0x00000292,
 	0x00000000, /* PA_SC_MPASS_PS_CNTL */
-
-	0xc0016900,
-	0x00000293,
 	0x00514000, /* PA_SC_MODE_CNTL */
 
-	0xc0066900,
-	0x0000010f,
-	0x00000000, /* PA_CL_VPORT_0_XSCALE */
-	0x00000000,
-	0x00000000,
-	0x00000000,
-	0x00000000,
-	0x00000000,
-
-	0xc0026900,
+	0xc0096900,
 	0x00000300,
 	0x00000000, /* PA_SC_LINE_CNTL */
 	0x00000000, /* PA_SC_AA_CONFIG */
-
-	0xc0016900,
-	0x00000302,
 	0x0000002d, /* PA_SU_VTX_CNTL */
-
-	0xc0046900,
-	0x00000303,
 	0x3f800000, /* PA_CL_GB_VERT_CLIP_ADJ */
 	0x3f800000,
 	0x3f800000,
 	0x3f800000,
-
-	0xc0026900,
-	0x00000307,
 	0x00000000, /* PA_SC_SAMPLE_LOCS_MCTX */
 	0x00000000,
 
@@ -687,28 +576,13 @@ const u32 r7xx_default_state[] =
 	0x00000312,
 	0xffffffff, /* PA_SC_AA_MASK */
 
-	0xc0016900,
+	0xc0066900,
 	0x0000037e,
 	0x00000000, /* PA_SU_POLY_OFFSET_DB_FMT_CNTL */
-
-	0xc0016900,
-	0x0000037f,
 	0x00000000, /* PA_SU_POLY_OFFSET_CLAMP */
-
-	0xc0016900,
-	0x00000380,
 	0x00000000, /* PA_SU_POLY_OFFSET_FRONT_SCALE */
-
-	0xc0016900,
-	0x00000381,
 	0x00000000, /* PA_SU_POLY_OFFSET_FRONT_OFFSET */
-
-	0xc0016900,
-	0x00000382,
 	0x00000000, /* PA_SU_POLY_OFFSET_BACK_SCALE */
-
-	0xc0016900,
-	0x00000383,
 	0x00000000, /* PA_SU_POLY_OFFSET_BACK_OFFSET */
 
 	0xc0046900,
@@ -735,25 +609,13 @@ const u32 r7xx_default_state[] =
 	0x00000000, /* VGT_INSTANCE_STEP_RATE_0 */
 	0x00000000, /* VGT_INSTANCE_STEP_RATE_1 */
 
-	0xc0026900,
+	0xc0116900,
 	0x00000280,
 	0x00000000, /* PA_SU_POINT_SIZE */
 	0x00000000, /* PA_SU_POINT_MINMAX */
-
-	0xc0016900,
-	0x00000282,
 	0x00000008, /* PA_SU_LINE_CNTL */
-
-	0xc0016900,
-	0x00000283,
 	0x00000000, /* PA_SC_LINE_STIPPLE */
-
-	0xc0016900,
-	0x00000284,
 	0x00000000, /* VGT_OUTPUT_PATH_CNTL */
-
-	0xc00b6900,
-	0x00000285,
 	0x00000000, /* VGT_HOS_CNTL */
 	0x00000000, /* VGT_HOS_MAX_TESS_LEVEL */
 	0x00000000, /* VGT_HOS_MIN_TESS_LEVEL */
@@ -765,9 +627,6 @@ const u32 r7xx_default_state[] =
 	0x00000000, /* VGT_GROUP_VECT_1_CNTL */
 	0x00000000, /* VGT_GROUP_VECT_0_FMT_CNTL */
 	0x00000000, /* VGT_GROUP_VECT_1_FMT_CNTL */
-
-	0xc0016900,
-	0x00000290,
 	0x00000000, /* VGT_GS_MODE */
 
 	0xc0016900,
@@ -788,37 +647,19 @@ const u32 r7xx_default_state[] =
 	0x000002c8,
 	0x00000000, /* VGT_STRMOUT_BUFFER_EN */
 
-	0xc0016900,
+	0xc0076900,
 	0x00000202,
 	0x00cc0000, /* CB_COLOR_CONTROL */
-
-	0xc0016900,
-	0x00000203,
 	0x00000210, /* DB_SHADER_CNTL */
-
-	0xc0016900,
-	0x00000204,
 	0x00010000, /* PA_CL_CLIP_CNTL */
-
-	0xc0016900,
-	0x00000205,
 	0x00000244, /* PA_SU_SC_MODE_CNTL */
-
-	0xc0016900,
-	0x00000206,
 	0x00000100, /* PA_CL_VTE_CNTL */
-
-	0xc0026900,
-	0x00000207,
 	0x00000000, /* PA_CL_VS_OUT_CNTL */
 	0x00000000, /* PA_CL_NANINF_CNTL */
 
-	0xc0016900,
+	0xc0026900,
 	0x0000008e,
 	0x0000000f, /* CB_TARGET_MASK */
-
-	0xc0016900,
-	0x0000008f,
 	0x0000000f, /* CB_SHADER_MASK */
 
 	0xc0016900,
@@ -833,21 +674,12 @@ const u32 r7xx_default_state[] =
 	0x00000191,
 	0x00000b00, /* SPI_PS_INPUT_CNTL_0 */
 
-	0xc0016900,
+	0xc0056900,
 	0x000001b1,
 	0x00000000, /* SPI_VS_OUT_CONFIG */
-
-	0xc0016900,
-	0x000001b2,
 	0x00000001, /* SPI_THREAD_GROUPING */
-
-	0xc0026900,
-	0x000001b3,
 	0x00000001, /* SPI_PS_IN_CONTROL_0 */
 	0x00000000, /* SPI_PS_IN_CONTROL_1 */
-
-	0xc0016900,
-	0x000001b5,
 	0x00000000, /* SPI_INTERP_CONTROL_0 */
 
 	0xc0036e00, /* SET_SAMPLER */

commit d0623a3e74610aff0b984d68bbc027a7e511e686
Author: Alex Deucher <alexdeucher@gmail.com>
Date:   Tue Jul 27 11:17:44 2010 -0400

    drm/radeon: reorder r6xx/r7xx blit state emit to make more regs sequential
    
    Signed-off-by: Alex Deucher <alexdeucher@gmail.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>

diff --git a/drivers/gpu/drm/radeon/r600_blit_shaders.c b/drivers/gpu/drm/radeon/r600_blit_shaders.c
index 9a0553c69f1b..9a0c947b342c 100644
--- a/drivers/gpu/drm/radeon/r600_blit_shaders.c
+++ b/drivers/gpu/drm/radeon/r600_blit_shaders.c
@@ -96,11 +96,6 @@ const u32 r6xx_default_state[] =
 	0x00000000, /* DB_STENCIL_CLEAR */
 	0x00000000, /* DB_DEPTH_CLEAR */
 
-	0xc0026900,
-	0x0000010c,
-	0x00000000, /* DB_STENCILREFMASK */
-	0x00000000, /* DB_STENCILREFMASK_BF */
-
 	0xc0016900,
 	0x00000200,
 	0x00000000, /* DB_DEPTH_CONTROL */
@@ -114,13 +109,19 @@ const u32 r6xx_default_state[] =
 	0x00000351,
 	0x0000aa00, /* DB_ALPHA_TO_MASK */
 
+	0xc0036900,
+	0x00000100,
+	0x00000800, /* VGT_MAX_VTX_INDX */
+	0x00000000, /* VGT_MIN_VTX_INDX */
+	0x00000000, /* VGT_INDX_OFFSET */
+
 	0xc0016900,
-	0x00000104,
-	0x00000000, /* SX_ALPHA_TEST_CONTROL */
+	0x00000103,
+	0x00000000, /* VGT_MULTI_PRIM_IB_RESET_INDX */
 
 	0xc0016900,
-	0x0000010e,
-	0x00000000, /* SX_ALPHA_REF */
+	0x00000104,
+	0x00000000, /* SX_ALPHA_TEST_CONTROL */
 
 	0xc0076900,
 	0x00000105,
@@ -132,6 +133,15 @@ const u32 r6xx_default_state[] =
 	0x00000000,
 	0x00000000,
 
+	0xc0026900,
+	0x0000010c,
+	0x00000000, /* DB_STENCILREFMASK */
+	0x00000000, /* DB_STENCILREFMASK_BF */
+
+	0xc0016900,
+	0x0000010e,
+	0x00000000, /* SX_ALPHA_REF */
+
 	0xc0046900,
 	0x0000030c,
 	0x01000000, /* CB_CLRCMP_CNTL */
@@ -146,10 +156,6 @@ const u32 r6xx_default_state[] =
 	0x3f800000,
 	0x3f800000,
 
-	0xc0016900,
-	0x0000008e,
-	0x0000000f, /* CB_TARGET_MASK */
-
 	0xc0016900,
 	0x00000080,
 	0x00000000, /* PA_SC_WINDOW_OFFSET */
@@ -234,32 +240,14 @@ const u32 r6xx_default_state[] =
 	0x00000000,
 	0x3f800000,
 
-	0xc0016900,
-	0x00000293,
-	0x00004010, /* PA_SC_MODE_CNTL */
-
-	0xc0026900,
-	0x00000300,
-	0x00000000, /* PA_SC_LINE_CNTL */
-	0x00000000, /* PA_SC_AA_CONFIG */
-
-	0xc0016900,
-	0x00000312,
-	0xffffffff, /* PA_SC_AA_MASK */
-
-	0xc0026900,
-	0x00000307,
-	0x00000000, /* PA_SC_SAMPLE_LOCS_MCTX */
-	0x00000000,
-
-	0xc0016900,
-	0x00000283,
-	0x00000000, /* PA_SC_LINE_STIPPLE */
-
 	0xc0016900,
 	0x00000292,
 	0x00000000, /* PA_SC_MPASS_PS_CNTL */
 
+	0xc0016900,
+	0x00000293,
+	0x00004010, /* PA_SC_MODE_CNTL */
+
 	0xc0066900,
 	0x0000010f,
 	0x00000000, /* PA_CL_VPORT_0_XSCALE */
@@ -270,9 +258,13 @@ const u32 r6xx_default_state[] =
 	0x00000000,
 
 	0xc0026900,
-	0x00000207,
-	0x00000000, /* PA_CL_VS_OUT_CNTL */
-	0x00000000, /* PA_CL_NANINF_CNTL */
+	0x00000300,
+	0x00000000, /* PA_SC_LINE_CNTL */
+	0x00000000, /* PA_SC_AA_CONFIG */
+
+	0xc0016900,
+	0x00000302,
+	0x0000002d, /* PA_SU_VTX_CNTL */
 
 	0xc0046900,
 	0x00000303,
@@ -282,45 +274,37 @@ const u32 r6xx_default_state[] =
 	0x3f800000,
 
 	0xc0026900,
-	0x00000280,
-	0x00000000, /* PA_SU_POINT_SIZE */
-	0x00000000, /* PA_SU_POINT_MINMAX */
+	0x00000307,
+	0x00000000, /* PA_SC_SAMPLE_LOCS_MCTX */
+	0x00000000,
+
+	0xc0016900,
+	0x00000312,
+	0xffffffff, /* PA_SC_AA_MASK */
 
 	0xc0016900,
 	0x0000037e,
 	0x00000000, /* PA_SU_POLY_OFFSET_DB_FMT_CNTL */
 
 	0xc0016900,
-	0x00000382,
-	0x00000000, /* PA_SU_POLY_OFFSET_BACK_SCALE */
+	0x0000037f,
+	0x00000000, /* PA_SU_POLY_OFFSET_CLAMP */
 
 	0xc0016900,
 	0x00000380,
 	0x00000000, /* PA_SU_POLY_OFFSET_FRONT_SCALE */
 
-	0xc0016900,
-	0x00000383,
-	0x00000000, /* PA_SU_POLY_OFFSET_BACK_OFFSET */
-
 	0xc0016900,
 	0x00000381,
 	0x00000000, /* PA_SU_POLY_OFFSET_FRONT_OFFSET */
 
 	0xc0016900,
-	0x00000282,
-	0x00000008, /* PA_SU_LINE_CNTL */
-
-	0xc0016900,
-	0x00000302,
-	0x0000002d, /* PA_SU_VTX_CNTL */
-
-	0xc0016900,
-	0x0000037f,
-	0x00000000, /* PA_SU_POLY_OFFSET_CLAMP */
+	0x00000382,
+	0x00000000, /* PA_SU_POLY_OFFSET_BACK_SCALE */
 
 	0xc0016900,
-	0x000001b2,
-	0x00000000, /* SPI_THREAD_GROUPING */
+	0x00000383,
+	0x00000000, /* PA_SU_POLY_OFFSET_BACK_OFFSET */
 
 	0xc0046900,
 	0x000001b6,
@@ -341,28 +325,27 @@ const u32 r6xx_default_state[] =
 	0x00000237,
 	0x00000000, /* SQ_PGM_CF_OFFSET_FS */
 
-	0xc0036900,
-	0x00000100,
-	0x00000800, /* VGT_MAX_VTX_INDX */
-	0x00000000, /* VGT_MIN_VTX_INDX */
-	0x00000000, /* VGT_INDX_OFFSET */
-
 	0xc0026900,
 	0x000002a8,
 	0x00000000, /* VGT_INSTANCE_STEP_RATE_0 */
 	0x00000000, /* VGT_INSTANCE_STEP_RATE_1 */
 
+	0xc0026900,
+	0x00000280,
+	0x00000000, /* PA_SU_POINT_SIZE */
+	0x00000000, /* PA_SU_POINT_MINMAX */
+
 	0xc0016900,
-	0x00000103,
-	0x00000000, /* VGT_MULTI_PRIM_IB_RESET_INDX */
+	0x00000282,
+	0x00000008, /* PA_SU_LINE_CNTL */
 
 	0xc0016900,
-	0x00000284,
-	0x00000000, /* VGT_OUTPUT_PATH_CNTL */
+	0x00000283,
+	0x00000000, /* PA_SC_LINE_STIPPLE */
 
 	0xc0016900,
-	0x00000290,
-	0x00000000, /* VGT_GS_MODE */
+	0x00000284,
+	0x00000000, /* VGT_OUTPUT_PATH_CNTL */
 
 	0xc0016900,
 	0x00000285,
@@ -381,6 +364,10 @@ const u32 r6xx_default_state[] =
 	0x00000000, /* VGT_GROUP_VECT_0_FMT_CNTL */
 	0x00000000, /* VGT_GROUP_VECT_1_FMT_CNTL */
 
+	0xc0016900,
+	0x00000290,
+	0x00000000, /* VGT_GS_MODE */
+
 	0xc0016900,
 	0x000002a1,
 	0x00000000, /* VGT_PRIMITIVEID_EN */
@@ -400,18 +387,33 @@ const u32 r6xx_default_state[] =
 	0x00000000, /* VGT_STRMOUT_BUFFER_EN */
 
 	0xc0016900,
-	0x00000206,
-	0x00000100, /* PA_CL_VTE_CNTL */
+	0x00000202,
+	0x00cc0000, /* CB_COLOR_CONTROL */
+
+	0xc0016900,
+	0x00000203,
+	0x00000210, /* DB_SHADER_CNTL */
 
 	0xc0016900,
 	0x00000204,
 	0x00010000, /* PA_CL_CLIP_CNTL */
 
-	0xc0036e00, /* SET_SAMPLER */
-	0x00000000,
-	0x00000012,
-	0x00000000,
-	0x00000000,
+	0xc0016900,
+	0x00000205,
+	0x00000244, /* PA_SU_SC_MODE_CNTL */
+
+	0xc0016900,
+	0x00000206,
+	0x00000100, /* PA_CL_VTE_CNTL */
+
+	0xc0026900,
+	0x00000207,
+	0x00000000, /* PA_CL_VS_OUT_CNTL */
+	0x00000000, /* PA_CL_NANINF_CNTL */
+
+	0xc0016900,
+	0x0000008e,
+	0x0000000f, /* CB_TARGET_MASK */
 
 	0xc0016900,
 	0x0000008f,
@@ -422,37 +424,35 @@ const u32 r6xx_default_state[] =
 	0x00000001, /* CB_SHADER_CONTROL */
 
 	0xc0016900,
-	0x00000202,
-	0x00cc0000, /* CB_COLOR_CONTROL */
-
-	0xc0016900,
-	0x00000205,
-	0x00000244, /* PA_SU_SC_MODE_CNTL */
+	0x00000185,
+	0x00000000, /* SPI_VS_OUT_ID_0 */
 
 	0xc0016900,
-	0x00000203,
-	0x00000210, /* DB_SHADER_CNTL */
+	0x00000191,
+	0x00000b00, /* SPI_PS_INPUT_CNTL_0 */
 
 	0xc0016900,
 	0x000001b1,
 	0x00000000, /* SPI_VS_OUT_CONFIG */
 
 	0xc0016900,
-	0x00000185,
-	0x00000000, /* SPI_VS_OUT_ID_0 */
+	0x000001b2,
+	0x00000000, /* SPI_THREAD_GROUPING */
 
 	0xc0026900,
 	0x000001b3,
 	0x00000001, /* SPI_PS_IN_CONTROL_0 */
 	0x00000000, /* SPI_PS_IN_CONTROL_1 */
 
-	0xc0016900,
-	0x00000191,
-	0x00000b00, /* SPI_PS_INPUT_CNTL_0 */
-
 	0xc0016900,
 	0x000001b5,
 	0x00000000, /* SPI_INTERP_CONTROL_0 */
+
+	0xc0036e00, /* SET_SAMPLER */
+	0x00000000,
+	0x00000012,
+	0x00000000,
+	0x00000000,
 };
 
 const u32 r7xx_default_state[] =
@@ -511,11 +511,6 @@ const u32 r7xx_default_state[] =
 	0x00000000, /* DB_STENCIL_CLEAR */
 	0x00000000, /* DB_DEPTH_CLEAR */
 
-	0xc0026900,
-	0x0000010c,
-	0x00000000, /* DB_STENCILREFMASK */
-	0x00000000, /* DB_STENCILREFMASK_BF */
-
 	0xc0016900,
 	0x00000200,
 	0x00000000, /* DB_DEPTH_CONTROL */
@@ -529,13 +524,19 @@ const u32 r7xx_default_state[] =
 	0x00000351,
 	0x0000aa00, /* DB_ALPHA_TO_MASK */
 
+	0xc0036900,
+	0x00000100,
+	0x00000800, /* VGT_MAX_VTX_INDX */
+	0x00000000, /* VGT_MIN_VTX_INDX */
+	0x00000000, /* VGT_INDX_OFFSET */
+
 	0xc0016900,
-	0x00000104,
-	0x00000000, /* SX_ALPHA_TEST_CONTROL */
+	0x00000103,
+	0x00000000, /* VGT_MULTI_PRIM_IB_RESET_INDX */
 
 	0xc0016900,
-	0x0000010e,
-	0x00000000, /* SX_ALPHA_REF */
+	0x00000104,
+	0x00000000, /* SX_ALPHA_TEST_CONTROL */
 
 	0xc0046900,
 	0x00000105,
@@ -544,6 +545,15 @@ const u32 r7xx_default_state[] =
 	0x00000000,
 	0x00000000,
 
+	0xc0026900,
+	0x0000010c,
+	0x00000000, /* DB_STENCILREFMASK */
+	0x00000000, /* DB_STENCILREFMASK_BF */
+
+	0xc0016900,
+	0x0000010e,
+	0x00000000, /* SX_ALPHA_REF */
+
 	0xc0046900,
 	0x0000030c, /* CB_CLRCMP_CNTL */
 	0x01000000,
@@ -551,10 +561,6 @@ const u32 r7xx_default_state[] =
 	0x00000000,
 	0x00000000,
 
-	0xc0016900,
-	0x0000008e,
-	0x0000000f, /* CB_TARGET_MASK */
-
 	0xc0016900,
 	0x00000080,
 	0x00000000, /* PA_SC_WINDOW_OFFSET */
@@ -639,32 +645,14 @@ const u32 r7xx_default_state[] =
 	0x00000000,
 	0x3f800000,
 
-	0xc0016900,
-	0x00000293,
-	0x00514000, /* PA_SC_MODE_CNTL */
-
-	0xc0026900,
-	0x00000300,
-	0x00000000, /* PA_SC_LINE_CNTL */
-	0x00000000, /* PA_SC_AA_CONFIG */
-
-	0xc0016900,
-	0x00000312,
-	0xffffffff, /* PA_SC_AA_MASK */
-
-	0xc0026900,
-	0x00000307,
-	0x00000000, /* PA_SC_SAMPLE_LOCS_MCTX */
-	0x00000000,
-
-	0xc0016900,
-	0x00000283,
-	0x00000000, /* PA_SC_LINE_STIPPLE */
-
 	0xc0016900,
 	0x00000292,
 	0x00000000, /* PA_SC_MPASS_PS_CNTL */
 
+	0xc0016900,
+	0x00000293,
+	0x00514000, /* PA_SC_MODE_CNTL */
+
 	0xc0066900,
 	0x0000010f,
 	0x00000000, /* PA_CL_VPORT_0_XSCALE */
@@ -675,9 +663,13 @@ const u32 r7xx_default_state[] =
 	0x00000000,
 
 	0xc0026900,
-	0x00000207,
-	0x00000000, /* PA_CL_VS_OUT_CNTL */
-	0x00000000, /* PA_CL_NANINF_CNTL */
+	0x00000300,
+	0x00000000, /* PA_SC_LINE_CNTL */
+	0x00000000, /* PA_SC_AA_CONFIG */
+
+	0xc0016900,
+	0x00000302,
+	0x0000002d, /* PA_SU_VTX_CNTL */
 
 	0xc0046900,
 	0x00000303,
@@ -687,45 +679,37 @@ const u32 r7xx_default_state[] =
 	0x3f800000,
 
 	0xc0026900,
-	0x00000280,
-	0x00000000, /* PA_SU_POINT_SIZE */
-	0x00000000, /* PA_SU_POINT_MINMAX */
+	0x00000307,
+	0x00000000, /* PA_SC_SAMPLE_LOCS_MCTX */
+	0x00000000,
+
+	0xc0016900,
+	0x00000312,
+	0xffffffff, /* PA_SC_AA_MASK */
 
 	0xc0016900,
 	0x0000037e,
 	0x00000000, /* PA_SU_POLY_OFFSET_DB_FMT_CNTL */
 
 	0xc0016900,
-	0x00000382,
-	0x00000000, /* PA_SU_POLY_OFFSET_BACK_SCALE */
+	0x0000037f,
+	0x00000000, /* PA_SU_POLY_OFFSET_CLAMP */
 
 	0xc0016900,
 	0x00000380,
 	0x00000000, /* PA_SU_POLY_OFFSET_FRONT_SCALE */
 
-	0xc0016900,
-	0x00000383,
-	0x00000000, /* PA_SU_POLY_OFFSET_BACK_OFFSET */
-
 	0xc0016900,
 	0x00000381,
 	0x00000000, /* PA_SU_POLY_OFFSET_FRONT_OFFSET */
 
 	0xc0016900,
-	0x00000282,
-	0x00000008, /* PA_SU_LINE_CNTL */
-
-	0xc0016900,
-	0x00000302,
-	0x0000002d, /* PA_SU_VTX_CNTL */
-
-	0xc0016900,
-	0x0000037f,
-	0x00000000, /* PA_SU_POLY_OFFSET_CLAMP */
+	0x00000382,
+	0x00000000, /* PA_SU_POLY_OFFSET_BACK_SCALE */
 
 	0xc0016900,
-	0x000001b2,
-	0x00000001, /* SPI_THREAD_GROUPING */
+	0x00000383,
+	0x00000000, /* PA_SU_POLY_OFFSET_BACK_OFFSET */
 
 	0xc0046900,
 	0x000001b6,
@@ -746,28 +730,27 @@ const u32 r7xx_default_state[] =
 	0x00000237,
 	0x00000000, /* SQ_PGM_CF_OFFSET_FS */
 
-	0xc0036900,
-	0x00000100,
-	0x00000800, /* VGT_MAX_VTX_INDX */
-	0x00000000, /* VGT_MIN_VTX_INDX */
-	0x00000000, /* VGT_INDX_OFFSET */
-
 	0xc0026900,
 	0x000002a8,
 	0x00000000, /* VGT_INSTANCE_STEP_RATE_0 */
 	0x00000000, /* VGT_INSTANCE_STEP_RATE_1 */
 
+	0xc0026900,
+	0x00000280,
+	0x00000000, /* PA_SU_POINT_SIZE */
+	0x00000000, /* PA_SU_POINT_MINMAX */
+
 	0xc0016900,
-	0x00000103,
-	0x00000000, /* VGT_MULTI_PRIM_IB_RESET_INDX */
+	0x00000282,
+	0x00000008, /* PA_SU_LINE_CNTL */
 
 	0xc0016900,
-	0x00000284,
-	0x00000000, /* VGT_OUTPUT_PATH_CNTL */
+	0x00000283,
+	0x00000000, /* PA_SC_LINE_STIPPLE */
 
 	0xc0016900,
-	0x00000290,
-	0x00000000, /* VGT_GS_MODE */
+	0x00000284,
+	0x00000000, /* VGT_OUTPUT_PATH_CNTL */
 
 	0xc00b6900,
 	0x00000285,
@@ -783,6 +766,10 @@ const u32 r7xx_default_state[] =
 	0x00000000, /* VGT_GROUP_VECT_0_FMT_CNTL */
 	0x00000000, /* VGT_GROUP_VECT_1_FMT_CNTL */
 
+	0xc0016900,
+	0x00000290,
+	0x00000000, /* VGT_GS_MODE */
+
 	0xc0016900,
 	0x000002a1,
 	0x00000000, /* VGT_PRIMITIVEID_EN */
@@ -802,18 +789,33 @@ const u32 r7xx_default_state[] =
 	0x00000000, /* VGT_STRMOUT_BUFFER_EN */
 
 	0xc0016900,
-	0x00000206,
-	0x00000100, /* PA_CL_VTE_CNTL */
+	0x00000202,
+	0x00cc0000, /* CB_COLOR_CONTROL */
+
+	0xc0016900,
+	0x00000203,
+	0x00000210, /* DB_SHADER_CNTL */
 
 	0xc0016900,
 	0x00000204,
 	0x00010000, /* PA_CL_CLIP_CNTL */
 
-	0xc0036e00, /* SET_SAMPLER */
-	0x00000000,
-	0x00000012,
-	0x00000000,
-	0x00000000,
+	0xc0016900,
+	0x00000205,
+	0x00000244, /* PA_SU_SC_MODE_CNTL */
+
+	0xc0016900,
+	0x00000206,
+	0x00000100, /* PA_CL_VTE_CNTL */
+
+	0xc0026900,
+	0x00000207,
+	0x00000000, /* PA_CL_VS_OUT_CNTL */
+	0x00000000, /* PA_CL_NANINF_CNTL */
+
+	0xc0016900,
+	0x0000008e,
+	0x0000000f, /* CB_TARGET_MASK */
 
 	0xc0016900,
 	0x0000008f,
@@ -824,37 +826,35 @@ const u32 r7xx_default_state[] =
 	0x00000001, /* CB_SHADER_CONTROL */
 
 	0xc0016900,
-	0x00000202,
-	0x00cc0000, /* CB_COLOR_CONTROL */
-
-	0xc0016900,
-	0x00000205,
-	0x00000244, /* PA_SU_SC_MODE_CNTL */
+	0x00000185,
+	0x00000000, /* SPI_VS_OUT_ID_0 */
 
 	0xc0016900,
-	0x00000203,
-	0x00000210, /* DB_SHADER_CNTL */
+	0x00000191,
+	0x00000b00, /* SPI_PS_INPUT_CNTL_0 */
 
 	0xc0016900,
 	0x000001b1,
 	0x00000000, /* SPI_VS_OUT_CONFIG */
 
 	0xc0016900,
-	0x00000185,
-	0x00000000, /* SPI_VS_OUT_ID_0 */
+	0x000001b2,
+	0x00000001, /* SPI_THREAD_GROUPING */
 
 	0xc0026900,
 	0x000001b3,
 	0x00000001, /* SPI_PS_IN_CONTROL_0 */
 	0x00000000, /* SPI_PS_IN_CONTROL_1 */
 
-	0xc0016900,
-	0x00000191,
-	0x00000b00, /* SPI_PS_INPUT_CNTL_0 */
-
 	0xc0016900,
 	0x000001b5,
 	0x00000000, /* SPI_INTERP_CONTROL_0 */
+
+	0xc0036e00, /* SET_SAMPLER */
+	0x00000000,
+	0x00000012,
+	0x00000000,
+	0x00000000,
 };
 
 /* same for r6xx/r7xx */

commit 363c6a16e30464fddcb8f82b7e8f44109729cc95
Author: Alex Deucher <alexdeucher@gmail.com>
Date:   Mon Jul 26 13:47:54 2010 -0400

    drm/radeon: r6xx/r7xx move vport clipping to a single packet
    
    Saves lots of dwords in blit emit
    
    Signed-off-by: Alex Deucher <alexdeucher@gmail.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>

diff --git a/drivers/gpu/drm/radeon/r600_blit_shaders.c b/drivers/gpu/drm/radeon/r600_blit_shaders.c
index 3a775c198af7..9a0553c69f1b 100644
--- a/drivers/gpu/drm/radeon/r600_blit_shaders.c
+++ b/drivers/gpu/drm/radeon/r600_blit_shaders.c
@@ -167,163 +167,70 @@ const u32 r6xx_default_state[] =
 	0x20002000,
 	0x00000000, /* PA_SC_EDGERULE */
 
-	0xc0026900,
+	0xc0406900,
 	0x00000094,
 	0x80000000, /* PA_SC_VPORT_SCISSOR_0_TL */
 	0x20002000, /* PA_SC_VPORT_SCISSOR_0_BR */
-
-	0xc0026900,
-	0x000000b4,
-	0x00000000, /* PA_SC_VPORT_ZMIN_0 */
-	0x3f800000,
-
-	0xc0026900,
-	0x00000096,
 	0x80000000, /* PA_SC_VPORT_SCISSOR_1_TL */
 	0x20002000,
-
-	0xc0026900,
-	0x000000b6,
-	0x00000000,
-	0x3f800000,
-
-	0xc0026900,
-	0x00000098,
 	0x80000000,
 	0x20002000,
-
-	0xc0026900,
-	0x000000b8,
-	0x00000000,
-	0x3f800000,
-
-	0xc0026900,
-	0x0000009a,
 	0x80000000,
 	0x20002000,
-
-	0xc0026900,
-	0x000000ba,
-	0x00000000,
-	0x3f800000,
-
-	0xc0026900,
-	0x0000009c,
 	0x80000000,
 	0x20002000,
-
-	0xc0026900,
-	0x000000bc,
-	0x00000000,
-	0x3f800000,
-
-	0xc0026900,
-	0x0000009e,
 	0x80000000,
 	0x20002000,
-
-	0xc0026900,
-	0x000000be,
-	0x00000000,
-	0x3f800000,
-
-	0xc0026900,
-	0x000000a0,
 	0x80000000,
 	0x20002000,
-
-	0xc0026900,
-	0x000000c0,
-	0x00000000,
-	0x3f800000,
-
-	0xc0026900,
-	0x000000a2,
 	0x80000000,
 	0x20002000,
-
-	0xc0026900,
-	0x000000c2,
-	0x00000000,
-	0x3f800000,
-
-	0xc0026900,
-	0x000000a4,
 	0x80000000,
 	0x20002000,
-
-	0xc0026900,
-	0x000000c4,
-	0x00000000,
-	0x3f800000,
-
-	0xc0026900,
-	0x000000a6,
 	0x80000000,
 	0x20002000,
-
-	0xc0026900,
-	0x000000c6,
-	0x00000000,
-	0x3f800000,
-
-	0xc0026900,
-	0x000000a8,
 	0x80000000,
 	0x20002000,
-
-	0xc0026900,
-	0x000000c8,
-	0x00000000,
-	0x3f800000,
-
-	0xc0026900,
-	0x000000aa,
 	0x80000000,
 	0x20002000,
-
-	0xc0026900,
-	0x000000ca,
-	0x00000000,
-	0x3f800000,
-
-	0xc0026900,
-	0x000000ac,
 	0x80000000,
 	0x20002000,
-
-	0xc0026900,
-	0x000000cc,
-	0x00000000,
-	0x3f800000,
-
-	0xc0026900,
-	0x000000ae,
 	0x80000000,
 	0x20002000,
-
-	0xc0026900,
-	0x000000ce,
-	0x00000000,
-	0x3f800000,
-
-	0xc0026900,
-	0x000000b0,
 	0x80000000,
 	0x20002000,
-
-	0xc0026900,
-	0x000000d0,
-	0x00000000,
-	0x3f800000,
-
-	0xc0026900,
-	0x000000b2,
 	0x80000000,
 	0x20002000,
-
-	0xc0026900,
-	0x000000d2,
+	0x00000000, /* PA_SC_VPORT_ZMIN_0 */
+	0x3f800000,
+	0x00000000,
+	0x3f800000,
+	0x00000000,
+	0x3f800000,
+	0x00000000,
+	0x3f800000,
+	0x00000000,
+	0x3f800000,
+	0x00000000,
+	0x3f800000,
+	0x00000000,
+	0x3f800000,
+	0x00000000,
+	0x3f800000,
+	0x00000000,
+	0x3f800000,
+	0x00000000,
+	0x3f800000,
+	0x00000000,
+	0x3f800000,
+	0x00000000,
+	0x3f800000,
+	0x00000000,
+	0x3f800000,
+	0x00000000,
+	0x3f800000,
+	0x00000000,
+	0x3f800000,
 	0x00000000,
 	0x3f800000,
 
@@ -665,163 +572,70 @@ const u32 r7xx_default_state[] =
 	0x20002000,
 	0xaaaaaaaa, /* PA_SC_EDGERULE */
 
-	0xc0026900,
+	0xc0406900,
 	0x00000094,
 	0x80000000, /* PA_SC_VPORT_SCISSOR_0_TL */
 	0x20002000, /* PA_SC_VPORT_SCISSOR_0_BR */
-
-	0xc0026900,
-	0x000000b4,
-	0x00000000, /* PA_SC_VPORT_ZMIN_0 */
-	0x3f800000,
-
-	0xc0026900,
-	0x00000096,
+	0x80000000, /* PA_SC_VPORT_SCISSOR_1_TL */
+	0x20002000,
 	0x80000000,
 	0x20002000,
-
-	0xc0026900,
-	0x000000b6,
-	0x00000000,
-	0x3f800000,
-
-	0xc0026900,
-	0x00000098,
 	0x80000000,
 	0x20002000,
-
-	0xc0026900,
-	0x000000b8,
-	0x00000000,
-	0x3f800000,
-
-	0xc0016900,
-	0x0000009a,
 	0x80000000,
 	0x20002000,
-
-	0xc0026900,
-	0x000000ba,
-	0x00000000,
-	0x3f800000,
-
-	0xc0026900,
-	0x0000009c,
 	0x80000000,
 	0x20002000,
-
-	0xc0026900,
-	0x000000bc,
-	0x00000000,
-	0x3f800000,
-
-	0xc0026900,
-	0x0000009e,
 	0x80000000,
 	0x20002000,
-
-	0xc0026900,
-	0x000000be,
-	0x00000000,
-	0x3f800000,
-
-	0xc0026900,
-	0x000000a0,
 	0x80000000,
 	0x20002000,
-
-	0xc0026900,
-	0x000000c0,
-	0x00000000,
-	0x3f800000,
-
-	0xc0026900,
-	0x000000a2,
 	0x80000000,
 	0x20002000,
-
-	0xc0026900,
-	0x000000c2,
-	0x00000000,
-	0x3f800000,
-
-	0xc0026900,
-	0x000000a4,
 	0x80000000,
 	0x20002000,
-
-	0xc0026900,
-	0x000000c4,
-	0x00000000,
-	0x3f800000,
-
-	0xc0026900,
-	0x000000a6,
 	0x80000000,
 	0x20002000,
-
-	0xc0026900,
-	0x000000c6,
-	0x00000000,
-	0x3f800000,
-
-	0xc0026900,
-	0x000000a8,
 	0x80000000,
 	0x20002000,
-
-	0xc0026900,
-	0x000000c8,
-	0x00000000,
-	0x3f800000,
-
-	0xc0026900,
-	0x000000aa,
 	0x80000000,
 	0x20002000,
-
-	0xc0026900,
-	0x000000ca,
-	0x00000000,
-	0x3f800000,
-
-	0xc0026900,
-	0x000000ac,
 	0x80000000,
 	0x20002000,
-
-	0xc0026900,
-	0x000000cc,
-	0x00000000,
-	0x3f800000,
-
-	0xc0026900,
-	0x000000ae,
 	0x80000000,
 	0x20002000,
-
-	0xc0026900,
-	0x000000ce,
-	0x00000000,
-	0x3f800000,
-
-	0xc0026900,
-	0x000000b0,
 	0x80000000,
 	0x20002000,
-
-	0xc0026900,
-	0x000000d0,
+	0x00000000, /* PA_SC_VPORT_ZMIN_0 */
+	0x3f800000,
+	0x00000000,
+	0x3f800000,
+	0x00000000,
+	0x3f800000,
+	0x00000000,
+	0x3f800000,
+	0x00000000,
+	0x3f800000,
+	0x00000000,
+	0x3f800000,
+	0x00000000,
+	0x3f800000,
+	0x00000000,
+	0x3f800000,
+	0x00000000,
+	0x3f800000,
+	0x00000000,
+	0x3f800000,
+	0x00000000,
+	0x3f800000,
+	0x00000000,
+	0x3f800000,
+	0x00000000,
+	0x3f800000,
+	0x00000000,
+	0x3f800000,
 	0x00000000,
 	0x3f800000,
-
-	0xc0026900,
-	0x000000b2,
-	0x80000000,
-	0x20002000,
-
-	0xc0026900,
-	0x000000d2,
 	0x00000000,
 	0x3f800000,
 

commit eb544433c368ad95615af168bfb2fedfc5e9ddb1
Author: Alex Deucher <alexdeucher@gmail.com>
Date:   Tue Jul 27 18:57:06 2010 -0400

    drm/radeon: group r6xx/r7xx sequential blit state
    
    group state that is emitted sequentially into fewer packets.
    This saves a number of dwords.
    
    Signed-off-by: Alex Deucher <alexdeucher@gmail.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>

diff --git a/drivers/gpu/drm/radeon/r600_blit_shaders.c b/drivers/gpu/drm/radeon/r600_blit_shaders.c
index 3bcbb938a0eb..3a775c198af7 100644
--- a/drivers/gpu/drm/radeon/r600_blit_shaders.c
+++ b/drivers/gpu/drm/radeon/r600_blit_shaders.c
@@ -70,12 +70,9 @@ const u32 r6xx_default_state[] =
 	0x0000060e,
 	0x01020204, /* DB_WATERMARKS */
 
-	0xc0016f00,
+	0xc0026f00,
 	0x00000000,
 	0x00000000, /* SQ_VTX_BASE_VTX_LOC */
-
-	0xc0016f00,
-	0x00000001,
 	0x00000000, /* SQ_VTX_START_INST_LOC */
 
 	0xc0096900,
@@ -94,32 +91,23 @@ const u32 r6xx_default_state[] =
 	0x00000004,
 	0x00000000, /* DB_DEPTH_INFO */
 
-	0xc0016900,
+	0xc0026900,
 	0x0000000a,
 	0x00000000, /* DB_STENCIL_CLEAR */
-
-	0xc0016900,
-	0x0000000b,
 	0x00000000, /* DB_DEPTH_CLEAR */
 
-	0xc0016900,
+	0xc0026900,
 	0x0000010c,
 	0x00000000, /* DB_STENCILREFMASK */
-
-	0xc0016900,
-	0x0000010d,
 	0x00000000, /* DB_STENCILREFMASK_BF */
 
 	0xc0016900,
 	0x00000200,
 	0x00000000, /* DB_DEPTH_CONTROL */
 
-	0xc0016900,
+	0xc0026900,
 	0x00000343,
 	0x00000060, /* DB_RENDER_CONTROL */
-
-	0xc0016900,
-	0x00000344,
 	0x00000040, /* DB_RENDER_OVERRIDE */
 
 	0xc0016900,
@@ -134,15 +122,12 @@ const u32 r6xx_default_state[] =
 	0x0000010e,
 	0x00000000, /* SX_ALPHA_REF */
 
-	0xc0046900,
+	0xc0076900,
 	0x00000105,
 	0x00000000, /* CB_BLEND_RED */
 	0x00000000,
 	0x00000000,
 	0x00000000,
-
-	0xc0036900,
-	0x00000109,
 	0x00000000, /* CB_FOG_RED */
 	0x00000000,
 	0x00000000,
@@ -169,52 +154,22 @@ const u32 r6xx_default_state[] =
 	0x00000080,
 	0x00000000, /* PA_SC_WINDOW_OFFSET */
 
-	0xc0016900,
+	0xc00a6900,
 	0x00000083,
 	0x0000ffff, /* PA_SC_CLIP_RECT_RULE */
-
-	0xc0016900,
-	0x00000084,
-	0x00000000, /* PA_SC_WINDOW_SCISSOR_TL */
-
-	0xc0016900,
-	0x00000085,
+	0x00000000, /* PA_SC_CLIPRECT_0_TL */
 	0x20002000,
-
-	0xc0016900,
-	0x00000086,
 	0x00000000,
-
-	0xc0016900,
-	0x00000087,
 	0x20002000,
-
-	0xc0016900,
-	0x00000088,
 	0x00000000,
-
-	0xc0016900,
-	0x00000089,
 	0x20002000,
-
-	0xc0016900,
-	0x0000008a,
 	0x00000000,
-
-	0xc0016900,
-	0x0000008b,
 	0x20002000,
-
-	0xc0016900,
-	0x0000008c,
 	0x00000000, /* PA_SC_EDGERULE */
 
-	0xc0016900,
+	0xc0026900,
 	0x00000094,
 	0x80000000, /* PA_SC_VPORT_SCISSOR_0_TL */
-
-	0xc0016900,
-	0x00000095,
 	0x20002000, /* PA_SC_VPORT_SCISSOR_0_BR */
 
 	0xc0026900,
@@ -222,12 +177,9 @@ const u32 r6xx_default_state[] =
 	0x00000000, /* PA_SC_VPORT_ZMIN_0 */
 	0x3f800000,
 
-	0xc0016900,
+	0xc0026900,
 	0x00000096,
 	0x80000000, /* PA_SC_VPORT_SCISSOR_1_TL */
-
-	0xc0016900,
-	0x00000097,
 	0x20002000,
 
 	0xc0026900,
@@ -235,12 +187,9 @@ const u32 r6xx_default_state[] =
 	0x00000000,
 	0x3f800000,
 
-	0xc0016900,
+	0xc0026900,
 	0x00000098,
 	0x80000000,
-
-	0xc0016900,
-	0x00000099,
 	0x20002000,
 
 	0xc0026900,
@@ -248,12 +197,9 @@ const u32 r6xx_default_state[] =
 	0x00000000,
 	0x3f800000,
 
-	0xc0016900,
+	0xc0026900,
 	0x0000009a,
 	0x80000000,
-
-	0xc0016900,
-	0x0000009b,
 	0x20002000,
 
 	0xc0026900,
@@ -261,12 +207,9 @@ const u32 r6xx_default_state[] =
 	0x00000000,
 	0x3f800000,
 
-	0xc0016900,
+	0xc0026900,
 	0x0000009c,
 	0x80000000,
-
-	0xc0016900,
-	0x0000009d,
 	0x20002000,
 
 	0xc0026900,
@@ -274,12 +217,9 @@ const u32 r6xx_default_state[] =
 	0x00000000,
 	0x3f800000,
 
-	0xc0016900,
+	0xc0026900,
 	0x0000009e,
 	0x80000000,
-
-	0xc0016900,
-	0x0000009f,
 	0x20002000,
 
 	0xc0026900,
@@ -287,12 +227,9 @@ const u32 r6xx_default_state[] =
 	0x00000000,
 	0x3f800000,
 
-	0xc0016900,
+	0xc0026900,
 	0x000000a0,
 	0x80000000,
-
-	0xc0016900,
-	0x000000a1,
 	0x20002000,
 
 	0xc0026900,
@@ -300,12 +237,9 @@ const u32 r6xx_default_state[] =
 	0x00000000,
 	0x3f800000,
 
-	0xc0016900,
+	0xc0026900,
 	0x000000a2,
 	0x80000000,
-
-	0xc0016900,
-	0x000000a3,
 	0x20002000,
 
 	0xc0026900,
@@ -313,12 +247,9 @@ const u32 r6xx_default_state[] =
 	0x00000000,
 	0x3f800000,
 
-	0xc0016900,
+	0xc0026900,
 	0x000000a4,
 	0x80000000,
-
-	0xc0016900,
-	0x000000a5,
 	0x20002000,
 
 	0xc0026900,
@@ -326,12 +257,9 @@ const u32 r6xx_default_state[] =
 	0x00000000,
 	0x3f800000,
 
-	0xc0016900,
+	0xc0026900,
 	0x000000a6,
 	0x80000000,
-
-	0xc0016900,
-	0x000000a7,
 	0x20002000,
 
 	0xc0026900,
@@ -339,12 +267,9 @@ const u32 r6xx_default_state[] =
 	0x00000000,
 	0x3f800000,
 
-	0xc0016900,
+	0xc0026900,
 	0x000000a8,
 	0x80000000,
-
-	0xc0016900,
-	0x000000a9,
 	0x20002000,
 
 	0xc0026900,
@@ -352,12 +277,9 @@ const u32 r6xx_default_state[] =
 	0x00000000,
 	0x3f800000,
 
-	0xc0016900,
+	0xc0026900,
 	0x000000aa,
 	0x80000000,
-
-	0xc0016900,
-	0x000000ab,
 	0x20002000,
 
 	0xc0026900,
@@ -365,12 +287,9 @@ const u32 r6xx_default_state[] =
 	0x00000000,
 	0x3f800000,
 
-	0xc0016900,
+	0xc0026900,
 	0x000000ac,
 	0x80000000,
-
-	0xc0016900,
-	0x000000ad,
 	0x20002000,
 
 	0xc0026900,
@@ -378,12 +297,9 @@ const u32 r6xx_default_state[] =
 	0x00000000,
 	0x3f800000,
 
-	0xc0016900,
+	0xc0026900,
 	0x000000ae,
 	0x80000000,
-
-	0xc0016900,
-	0x000000af,
 	0x20002000,
 
 	0xc0026900,
@@ -391,12 +307,9 @@ const u32 r6xx_default_state[] =
 	0x00000000,
 	0x3f800000,
 
-	0xc0016900,
+	0xc0026900,
 	0x000000b0,
 	0x80000000,
-
-	0xc0016900,
-	0x000000b1,
 	0x20002000,
 
 	0xc0026900,
@@ -404,12 +317,9 @@ const u32 r6xx_default_state[] =
 	0x00000000,
 	0x3f800000,
 
-	0xc0016900,
+	0xc0026900,
 	0x000000b2,
 	0x80000000,
-
-	0xc0016900,
-	0x000000b3,
 	0x20002000,
 
 	0xc0026900,
@@ -421,24 +331,18 @@ const u32 r6xx_default_state[] =
 	0x00000293,
 	0x00004010, /* PA_SC_MODE_CNTL */
 
-	0xc0016900,
+	0xc0026900,
 	0x00000300,
 	0x00000000, /* PA_SC_LINE_CNTL */
-
-	0xc0016900,
-	0x00000301,
 	0x00000000, /* PA_SC_AA_CONFIG */
 
 	0xc0016900,
 	0x00000312,
 	0xffffffff, /* PA_SC_AA_MASK */
 
-	0xc0016900,
+	0xc0026900,
 	0x00000307,
 	0x00000000, /* PA_SC_SAMPLE_LOCS_MCTX */
-
-	0xc0016900,
-	0x00000308,
 	0x00000000,
 
 	0xc0016900,
@@ -458,12 +362,9 @@ const u32 r6xx_default_state[] =
 	0x00000000,
 	0x00000000,
 
-	0xc0016900,
+	0xc0026900,
 	0x00000207,
 	0x00000000, /* PA_CL_VS_OUT_CNTL */
-
-	0xc0016900,
-	0x00000208,
 	0x00000000, /* PA_CL_NANINF_CNTL */
 
 	0xc0046900,
@@ -473,12 +374,9 @@ const u32 r6xx_default_state[] =
 	0x3f800000,
 	0x3f800000,
 
-	0xc0016900,
+	0xc0026900,
 	0x00000280,
 	0x00000000, /* PA_SU_POINT_SIZE */
-
-	0xc0016900,
-	0x00000281,
 	0x00000000, /* PA_SU_POINT_MINMAX */
 
 	0xc0016900,
@@ -517,20 +415,11 @@ const u32 r6xx_default_state[] =
 	0x000001b2,
 	0x00000000, /* SPI_THREAD_GROUPING */
 
-	0xc0016900,
+	0xc0046900,
 	0x000001b6,
 	0x00000000, /* SPI_INPUT_Z */
-
-	0xc0016900,
-	0x000001b7,
 	0x00000000, /* SPI_FOG_CNTL */
-
-	0xc0016900,
-	0x000001b8,
 	0x00000000, /* SPI_FOG_FUNC_SCALE */
-
-	0xc0016900,
-	0x000001b9,
 	0x00000000, /* SPI_FOG_FUNC_BIAS */
 
 	0xc0016900,
@@ -545,24 +434,15 @@ const u32 r6xx_default_state[] =
 	0x00000237,
 	0x00000000, /* SQ_PGM_CF_OFFSET_FS */
 
-	0xc0016900,
+	0xc0036900,
 	0x00000100,
 	0x00000800, /* VGT_MAX_VTX_INDX */
-
-	0xc0016900,
-	0x00000101,
 	0x00000000, /* VGT_MIN_VTX_INDX */
-
-	0xc0016900,
-	0x00000102,
 	0x00000000, /* VGT_INDX_OFFSET */
 
-	0xc0016900,
+	0xc0026900,
 	0x000002a8,
 	0x00000000, /* VGT_INSTANCE_STEP_RATE_0 */
-
-	0xc0016900,
-	0x000002a9,
 	0x00000000, /* VGT_INSTANCE_STEP_RATE_1 */
 
 	0xc0016900,
@@ -581,44 +461,17 @@ const u32 r6xx_default_state[] =
 	0x00000285,
 	0x00000000, /* VGT_HOS_CNTL */
 
-	0xc0016900,
+	0xc00a6900,
 	0x00000286,
 	0x00000000, /* VGT_HOS_MAX_TESS_LEVEL */
-
-	0xc0016900,
-	0x00000287,
 	0x00000000, /* VGT_HOS_MIN_TESS_LEVEL */
-
-	0xc0016900,
-	0x00000288,
 	0x00000000, /* VGT_HOS_REUSE_DEPTH */
-
-	0xc0016900,
-	0x00000289,
 	0x00000000, /* VGT_GROUP_PRIM_TYPE */
-
-	0xc0016900,
-	0x0000028a,
 	0x00000000, /* VGT_GROUP_FIRST_DECR */
-
-	0xc0016900,
-	0x0000028b,
 	0x00000000, /* VGT_GROUP_DECR */
-
-	0xc0016900,
-	0x0000028c,
 	0x00000000, /* VGT_GROUP_VECT_0_CNTL */
-
-	0xc0016900,
-	0x0000028d,
 	0x00000000, /* VGT_GROUP_VECT_1_CNTL */
-
-	0xc0016900,
-	0x0000028e,
 	0x00000000, /* VGT_GROUP_VECT_0_FMT_CNTL */
-
-	0xc0016900,
-	0x0000028f,
 	0x00000000, /* VGT_GROUP_VECT_1_FMT_CNTL */
 
 	0xc0016900,
@@ -629,16 +482,10 @@ const u32 r6xx_default_state[] =
 	0x000002a5,
 	0x00000000, /* VGT_MULTI_PRIM_ID_RESET_EN */
 
-	0xc0016900,
+	0xc0036900,
 	0x000002ac,
 	0x00000000, /* VGT_STRMOUT_EN */
-
-	0xc0016900,
-	0x000002ad,
 	0x00000000, /* VGT_REUSE_OFF */
-
-	0xc0016900,
-	0x000002ae,
 	0x00000000, /* VGT_VTX_CNT_EN */
 
 	0xc0016900,
@@ -687,12 +534,9 @@ const u32 r6xx_default_state[] =
 	0x00000185,
 	0x00000000, /* SPI_VS_OUT_ID_0 */
 
-	0xc0016900,
+	0xc0026900,
 	0x000001b3,
 	0x00000001, /* SPI_PS_IN_CONTROL_0 */
-
-	0xc0016900,
-	0x000001b4,
 	0x00000000, /* SPI_PS_IN_CONTROL_1 */
 
 	0xc0016900,
@@ -734,12 +578,9 @@ const u32 r7xx_default_state[] =
 	0x0000060e,
 	0x00420204, /* DB_WATERMARKS */
 
-	0xc0016f00,
+	0xc0026f00,
 	0x00000000,
 	0x00000000, /* SQ_VTX_BASE_VTX_LOC */
-
-	0xc0016f00,
-	0x00000001,
 	0x00000000, /* SQ_VTX_START_INST_LOC */
 
 	0xc0096900,
@@ -758,32 +599,23 @@ const u32 r7xx_default_state[] =
 	0x00000004,
 	0x00000000, /* DB_DEPTH_INFO */
 
-	0xc0016900,
+	0xc0026900,
 	0x0000000a,
 	0x00000000, /* DB_STENCIL_CLEAR */
-
-	0xc0016900,
-	0x0000000b,
 	0x00000000, /* DB_DEPTH_CLEAR */
 
-	0xc0016900,
+	0xc0026900,
 	0x0000010c,
 	0x00000000, /* DB_STENCILREFMASK */
-
-	0xc0016900,
-	0x0000010d,
 	0x00000000, /* DB_STENCILREFMASK_BF */
 
 	0xc0016900,
 	0x00000200,
 	0x00000000, /* DB_DEPTH_CONTROL */
 
-	0xc0016900,
+	0xc0026900,
 	0x00000343,
 	0x00000060, /* DB_RENDER_CONTROL */
-
-	0xc0016900,
-	0x00000344,
 	0x00000000, /* DB_RENDER_OVERRIDE */
 
 	0xc0016900,
@@ -820,52 +652,22 @@ const u32 r7xx_default_state[] =
 	0x00000080,
 	0x00000000, /* PA_SC_WINDOW_OFFSET */
 
-	0xc0016900,
+	0xc00a6900,
 	0x00000083,
 	0x0000ffff, /* PA_SC_CLIP_RECT_RULE */
-
-	0xc0016900,
-	0x00000084,
-	0x00000000, /* PA_SC_WINDOW_SCISSOR_TL */
-
-	0xc0016900,
-	0x00000085,
+	0x00000000, /* PA_SC_CLIPRECT_0_TL */
 	0x20002000,
-
-	0xc0016900,
-	0x00000086,
 	0x00000000,
-
-	0xc0016900,
-	0x00000087,
 	0x20002000,
-
-	0xc0016900,
-	0x00000088,
 	0x00000000,
-
-	0xc0016900,
-	0x00000089,
 	0x20002000,
-
-	0xc0016900,
-	0x0000008a,
 	0x00000000,
-
-	0xc0016900,
-	0x0000008b,
 	0x20002000,
-
-	0xc0016900,
-	0x0000008c,
 	0xaaaaaaaa, /* PA_SC_EDGERULE */
 
-	0xc0016900,
+	0xc0026900,
 	0x00000094,
 	0x80000000, /* PA_SC_VPORT_SCISSOR_0_TL */
-
-	0xc0016900,
-	0x00000095,
 	0x20002000, /* PA_SC_VPORT_SCISSOR_0_BR */
 
 	0xc0026900,
@@ -873,12 +675,9 @@ const u32 r7xx_default_state[] =
 	0x00000000, /* PA_SC_VPORT_ZMIN_0 */
 	0x3f800000,
 
-	0xc0016900,
+	0xc0026900,
 	0x00000096,
 	0x80000000,
-
-	0xc0016900,
-	0x00000097,
 	0x20002000,
 
 	0xc0026900,
@@ -886,12 +685,9 @@ const u32 r7xx_default_state[] =
 	0x00000000,
 	0x3f800000,
 
-	0xc0016900,
+	0xc0026900,
 	0x00000098,
 	0x80000000,
-
-	0xc0016900,
-	0x00000099,
 	0x20002000,
 
 	0xc0026900,
@@ -902,9 +698,6 @@ const u32 r7xx_default_state[] =
 	0xc0016900,
 	0x0000009a,
 	0x80000000,
-
-	0xc0016900,
-	0x0000009b,
 	0x20002000,
 
 	0xc0026900,
@@ -912,12 +705,9 @@ const u32 r7xx_default_state[] =
 	0x00000000,
 	0x3f800000,
 
-	0xc0016900,
+	0xc0026900,
 	0x0000009c,
 	0x80000000,
-
-	0xc0016900,
-	0x0000009d,
 	0x20002000,
 
 	0xc0026900,
@@ -925,12 +715,9 @@ const u32 r7xx_default_state[] =
 	0x00000000,
 	0x3f800000,
 
-	0xc0016900,
+	0xc0026900,
 	0x0000009e,
 	0x80000000,
-
-	0xc0016900,
-	0x0000009f,
 	0x20002000,
 
 	0xc0026900,
@@ -938,12 +725,9 @@ const u32 r7xx_default_state[] =
 	0x00000000,
 	0x3f800000,
 
-	0xc0016900,
+	0xc0026900,
 	0x000000a0,
 	0x80000000,
-
-	0xc0016900,
-	0x000000a1,
 	0x20002000,
 
 	0xc0026900,
@@ -951,12 +735,9 @@ const u32 r7xx_default_state[] =
 	0x00000000,
 	0x3f800000,
 
-	0xc0016900,
+	0xc0026900,
 	0x000000a2,
 	0x80000000,
-
-	0xc0016900,
-	0x000000a3,
 	0x20002000,
 
 	0xc0026900,
@@ -964,12 +745,9 @@ const u32 r7xx_default_state[] =
 	0x00000000,
 	0x3f800000,
 
-	0xc0016900,
+	0xc0026900,
 	0x000000a4,
 	0x80000000,
-
-	0xc0016900,
-	0x000000a5,
 	0x20002000,
 
 	0xc0026900,
@@ -977,12 +755,9 @@ const u32 r7xx_default_state[] =
 	0x00000000,
 	0x3f800000,
 
-	0xc0016900,
+	0xc0026900,
 	0x000000a6,
 	0x80000000,
-
-	0xc0016900,
-	0x000000a7,
 	0x20002000,
 
 	0xc0026900,
@@ -990,12 +765,9 @@ const u32 r7xx_default_state[] =
 	0x00000000,
 	0x3f800000,
 
-	0xc0016900,
+	0xc0026900,
 	0x000000a8,
 	0x80000000,
-
-	0xc0016900,
-	0x000000a9,
 	0x20002000,
 
 	0xc0026900,
@@ -1003,12 +775,9 @@ const u32 r7xx_default_state[] =
 	0x00000000,
 	0x3f800000,
 
-	0xc0016900,
+	0xc0026900,
 	0x000000aa,
 	0x80000000,
-
-	0xc0016900,
-	0x000000ab,
 	0x20002000,
 
 	0xc0026900,
@@ -1016,12 +785,9 @@ const u32 r7xx_default_state[] =
 	0x00000000,
 	0x3f800000,
 
-	0xc0016900,
+	0xc0026900,
 	0x000000ac,
 	0x80000000,
-
-	0xc0016900,
-	0x000000ad,
 	0x20002000,
 
 	0xc0026900,
@@ -1029,12 +795,9 @@ const u32 r7xx_default_state[] =
 	0x00000000,
 	0x3f800000,
 
-	0xc0016900,
+	0xc0026900,
 	0x000000ae,
 	0x80000000,
-
-	0xc0016900,
-	0x000000af,
 	0x20002000,
 
 	0xc0026900,
@@ -1042,12 +805,9 @@ const u32 r7xx_default_state[] =
 	0x00000000,
 	0x3f800000,
 
-	0xc0016900,
+	0xc0026900,
 	0x000000b0,
 	0x80000000,
-
-	0xc0016900,
-	0x000000b1,
 	0x20002000,
 
 	0xc0026900,
@@ -1055,12 +815,9 @@ const u32 r7xx_default_state[] =
 	0x00000000,
 	0x3f800000,
 
-	0xc0016900,
+	0xc0026900,
 	0x000000b2,
 	0x80000000,
-
-	0xc0016900,
-	0x000000b3,
 	0x20002000,
 
 	0xc0026900,
@@ -1072,24 +829,18 @@ const u32 r7xx_default_state[] =
 	0x00000293,
 	0x00514000, /* PA_SC_MODE_CNTL */
 
-	0xc0016900,
+	0xc0026900,
 	0x00000300,
 	0x00000000, /* PA_SC_LINE_CNTL */
-
-	0xc0016900,
-	0x00000301,
 	0x00000000, /* PA_SC_AA_CONFIG */
 
 	0xc0016900,
 	0x00000312,
 	0xffffffff, /* PA_SC_AA_MASK */
 
-	0xc0016900,
+	0xc0026900,
 	0x00000307,
 	0x00000000, /* PA_SC_SAMPLE_LOCS_MCTX */
-
-	0xc0016900,
-	0x00000308,
 	0x00000000,
 
 	0xc0016900,
@@ -1109,12 +860,9 @@ const u32 r7xx_default_state[] =
 	0x00000000,
 	0x00000000,
 
-	0xc0016900,
+	0xc0026900,
 	0x00000207,
 	0x00000000, /* PA_CL_VS_OUT_CNTL */
-
-	0xc0016900,
-	0x00000208,
 	0x00000000, /* PA_CL_NANINF_CNTL */
 
 	0xc0046900,
@@ -1124,12 +872,9 @@ const u32 r7xx_default_state[] =
 	0x3f800000,
 	0x3f800000,
 
-	0xc0016900,
+	0xc0026900,
 	0x00000280,
 	0x00000000, /* PA_SU_POINT_SIZE */
-
-	0xc0016900,
-	0x00000281,
 	0x00000000, /* PA_SU_POINT_MINMAX */
 
 	0xc0016900,
@@ -1168,20 +913,11 @@ const u32 r7xx_default_state[] =
 	0x000001b2,
 	0x00000001, /* SPI_THREAD_GROUPING */
 
-	0xc0016900,
+	0xc0046900,
 	0x000001b6,
 	0x00000000, /* SPI_INPUT_Z */
-
-	0xc0016900,
-	0x000001b7,
 	0x00000000, /* SPI_FOG_CNTL */
-
-	0xc0016900,
-	0x000001b8,
 	0x00000000, /* SPI_FOG_FUNC_SCALE */
-
-	0xc0016900,
-	0x000001b9,
 	0x00000000, /* SPI_FOG_FUNC_BIAS */
 
 	0xc0016900,
@@ -1196,24 +932,15 @@ const u32 r7xx_default_state[] =
 	0x00000237,
 	0x00000000, /* SQ_PGM_CF_OFFSET_FS */
 
-	0xc0016900,
+	0xc0036900,
 	0x00000100,
 	0x00000800, /* VGT_MAX_VTX_INDX */
-
-	0xc0016900,
-	0x00000101,
 	0x00000000, /* VGT_MIN_VTX_INDX */
-
-	0xc0016900,
-	0x00000102,
 	0x00000000, /* VGT_INDX_OFFSET */
 
-	0xc0016900,
+	0xc0026900,
 	0x000002a8,
 	0x00000000, /* VGT_INSTANCE_STEP_RATE_0 */
-
-	0xc0016900,
-	0x000002a9,
 	0x00000000, /* VGT_INSTANCE_STEP_RATE_1 */
 
 	0xc0016900,
@@ -1228,48 +955,18 @@ const u32 r7xx_default_state[] =
 	0x00000290,
 	0x00000000, /* VGT_GS_MODE */
 
-	0xc0016900,
+	0xc00b6900,
 	0x00000285,
 	0x00000000, /* VGT_HOS_CNTL */
-
-	0xc0016900,
-	0x00000286,
 	0x00000000, /* VGT_HOS_MAX_TESS_LEVEL */
-
-	0xc0016900,
-	0x00000287,
 	0x00000000, /* VGT_HOS_MIN_TESS_LEVEL */
-
-	0xc0016900,
-	0x00000288,
 	0x00000000, /* VGT_HOS_REUSE_DEPTH */
-
-	0xc0016900,
-	0x00000289,
 	0x00000000, /* VGT_GROUP_PRIM_TYPE */
-
-	0xc0016900,
-	0x0000028a,
 	0x00000000, /* VGT_GROUP_FIRST_DECR */
-
-	0xc0016900,
-	0x0000028b,
 	0x00000000, /* VGT_GROUP_DECR */
-
-	0xc0016900,
-	0x0000028c,
 	0x00000000, /* VGT_GROUP_VECT_0_CNTL */
-
-	0xc0016900,
-	0x0000028d,
 	0x00000000, /* VGT_GROUP_VECT_1_CNTL */
-
-	0xc0016900,
-	0x0000028e,
 	0x00000000, /* VGT_GROUP_VECT_0_FMT_CNTL */
-
-	0xc0016900,
-	0x0000028f,
 	0x00000000, /* VGT_GROUP_VECT_1_FMT_CNTL */
 
 	0xc0016900,
@@ -1280,16 +977,10 @@ const u32 r7xx_default_state[] =
 	0x000002a5,
 	0x00000000, /* VGT_MULTI_PRIM_ID_RESET_EN */
 
-	0xc0016900,
+	0xc0036900,
 	0x000002ac,
 	0x00000000, /* VGT_STRMOUT_EN */
-
-	0xc0016900,
-	0x000002ad,
 	0x00000000, /* VGT_REUSE_OFF */
-
-	0xc0016900,
-	0x000002ae,
 	0x00000000, /* VGT_VTX_CNT_EN */
 
 	0xc0016900,
@@ -1338,12 +1029,9 @@ const u32 r7xx_default_state[] =
 	0x00000185,
 	0x00000000, /* SPI_VS_OUT_ID_0 */
 
-	0xc0016900,
+	0xc0026900,
 	0x000001b3,
 	0x00000001, /* SPI_PS_IN_CONTROL_0 */
-
-	0xc0016900,
-	0x000001b4,
 	0x00000000, /* SPI_PS_IN_CONTROL_1 */
 
 	0xc0016900,

commit 7fc8878c3398a71c39e23ae1d9d56ba1f9e8c97d
Author: Alex Deucher <alexdeucher@gmail.com>
Date:   Tue Jul 27 11:11:19 2010 -0400

    drm/radeon: remove duplicate state emit in r6xx/r7xx blit
    
    Signed-off-by: Alex Deucher <alexdeucher@gmail.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>

diff --git a/drivers/gpu/drm/radeon/r600_blit_shaders.c b/drivers/gpu/drm/radeon/r600_blit_shaders.c
index a8f8bbcf760b..3bcbb938a0eb 100644
--- a/drivers/gpu/drm/radeon/r600_blit_shaders.c
+++ b/drivers/gpu/drm/radeon/r600_blit_shaders.c
@@ -458,10 +458,6 @@ const u32 r6xx_default_state[] =
 	0x00000000,
 	0x00000000,
 
-	0xc0016900,
-	0x00000206, /* PA_CL_VTE_CNTL */
-	0x00000000,
-
 	0xc0016900,
 	0x00000207,
 	0x00000000, /* PA_CL_VS_OUT_CNTL */
@@ -477,10 +473,6 @@ const u32 r6xx_default_state[] =
 	0x3f800000,
 	0x3f800000,
 
-	0xc0016900,
-	0x00000205,
-	0x00000004, /* PA_SU_SC_MODE_CNTL */
-
 	0xc0016900,
 	0x00000280,
 	0x00000000, /* PA_SU_POINT_SIZE */
@@ -1117,10 +1109,6 @@ const u32 r7xx_default_state[] =
 	0x00000000,
 	0x00000000,
 
-	0xc0016900,
-	0x00000206,
-	0x00000000, /* PA_CL_VTE_CNTL */
-
 	0xc0016900,
 	0x00000207,
 	0x00000000, /* PA_CL_VS_OUT_CNTL */
@@ -1136,10 +1124,6 @@ const u32 r7xx_default_state[] =
 	0x3f800000,
 	0x3f800000,
 
-	0xc0016900,
-	0x00000205,
-	0x00000004, /* PA_SU_SC_MODE_CNTL */
-
 	0xc0016900,
 	0x00000280,
 	0x00000000, /* PA_SU_POINT_SIZE */

commit 8c119e9c3b85cb61c1b2bfd616061662367e9240
Author: Alex Deucher <alexdeucher@gmail.com>
Date:   Mon Jul 26 12:39:00 2010 -0400

    drm/radeon: add comments to r6xx/r7xx blit state
    
    Signed-off-by: Alex Deucher <alexdeucher@gmail.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>

diff --git a/drivers/gpu/drm/radeon/r600_blit_shaders.c b/drivers/gpu/drm/radeon/r600_blit_shaders.c
index 0271b53fa2dd..a8f8bbcf760b 100644
--- a/drivers/gpu/drm/radeon/r600_blit_shaders.c
+++ b/drivers/gpu/drm/radeon/r600_blit_shaders.c
@@ -39,37 +39,48 @@
 
 const u32 r6xx_default_state[] =
 {
-	0xc0002400,
+	0xc0002400, /* START_3D_CMDBUF */
 	0x00000000,
-	0xc0012800,
+
+	0xc0012800, /* CONTEXT_CONTROL */
 	0x80000000,
 	0x80000000,
+
 	0xc0016800,
 	0x00000010,
-	0x00008000,
+	0x00008000, /* WAIT_UNTIL */
+
 	0xc0016800,
 	0x00000542,
-	0x07000003,
+	0x07000003, /* TA_CNTL_AUX */
+
 	0xc0016800,
 	0x000005c5,
-	0x00000000,
+	0x00000000, /* VC_ENHANCE */
+
 	0xc0016800,
 	0x00000363,
-	0x00000000,
+	0x00000000, /* SQ_DYN_GPR_CNTL_PS_FLUSH_REQ */
+
 	0xc0016800,
 	0x0000060c,
-	0x82000000,
+	0x82000000, /* DB_DEBUG */
+
 	0xc0016800,
 	0x0000060e,
-	0x01020204,
+	0x01020204, /* DB_WATERMARKS */
+
 	0xc0016f00,
 	0x00000000,
-	0x00000000,
+	0x00000000, /* SQ_VTX_BASE_VTX_LOC */
+
 	0xc0016f00,
 	0x00000001,
-	0x00000000,
+	0x00000000, /* SQ_VTX_START_INST_LOC */
+
 	0xc0096900,
 	0x0000022a,
+	0x00000000, /* SQ_ESGS_RING_ITEMSIZE */
 	0x00000000,
 	0x00000000,
 	0x00000000,
@@ -78,515 +89,670 @@ const u32 r6xx_default_state[] =
 	0x00000000,
 	0x00000000,
 	0x00000000,
-	0x00000000,
+
 	0xc0016900,
 	0x00000004,
-	0x00000000,
+	0x00000000, /* DB_DEPTH_INFO */
+
 	0xc0016900,
 	0x0000000a,
-	0x00000000,
+	0x00000000, /* DB_STENCIL_CLEAR */
+
 	0xc0016900,
 	0x0000000b,
-	0x00000000,
+	0x00000000, /* DB_DEPTH_CLEAR */
+
 	0xc0016900,
 	0x0000010c,
-	0x00000000,
+	0x00000000, /* DB_STENCILREFMASK */
+
 	0xc0016900,
 	0x0000010d,
-	0x00000000,
+	0x00000000, /* DB_STENCILREFMASK_BF */
+
 	0xc0016900,
 	0x00000200,
-	0x00000000,
+	0x00000000, /* DB_DEPTH_CONTROL */
+
 	0xc0016900,
 	0x00000343,
-	0x00000060,
+	0x00000060, /* DB_RENDER_CONTROL */
+
 	0xc0016900,
 	0x00000344,
-	0x00000040,
+	0x00000040, /* DB_RENDER_OVERRIDE */
+
 	0xc0016900,
 	0x00000351,
-	0x0000aa00,
+	0x0000aa00, /* DB_ALPHA_TO_MASK */
+
 	0xc0016900,
 	0x00000104,
-	0x00000000,
+	0x00000000, /* SX_ALPHA_TEST_CONTROL */
+
 	0xc0016900,
 	0x0000010e,
-	0x00000000,
+	0x00000000, /* SX_ALPHA_REF */
+
 	0xc0046900,
 	0x00000105,
+	0x00000000, /* CB_BLEND_RED */
 	0x00000000,
 	0x00000000,
 	0x00000000,
-	0x00000000,
+
 	0xc0036900,
 	0x00000109,
+	0x00000000, /* CB_FOG_RED */
 	0x00000000,
 	0x00000000,
-	0x00000000,
+
 	0xc0046900,
 	0x0000030c,
-	0x01000000,
+	0x01000000, /* CB_CLRCMP_CNTL */
 	0x00000000,
 	0x00000000,
 	0x00000000,
+
 	0xc0046900,
 	0x00000048,
-	0x3f800000,
+	0x3f800000, /* CB_CLEAR_RED */
 	0x00000000,
 	0x3f800000,
 	0x3f800000,
+
 	0xc0016900,
 	0x0000008e,
-	0x0000000f,
+	0x0000000f, /* CB_TARGET_MASK */
+
 	0xc0016900,
 	0x00000080,
-	0x00000000,
+	0x00000000, /* PA_SC_WINDOW_OFFSET */
+
 	0xc0016900,
 	0x00000083,
-	0x0000ffff,
+	0x0000ffff, /* PA_SC_CLIP_RECT_RULE */
+
 	0xc0016900,
 	0x00000084,
-	0x00000000,
+	0x00000000, /* PA_SC_WINDOW_SCISSOR_TL */
+
 	0xc0016900,
 	0x00000085,
 	0x20002000,
+
 	0xc0016900,
 	0x00000086,
 	0x00000000,
+
 	0xc0016900,
 	0x00000087,
 	0x20002000,
+
 	0xc0016900,
 	0x00000088,
 	0x00000000,
+
 	0xc0016900,
 	0x00000089,
 	0x20002000,
+
 	0xc0016900,
 	0x0000008a,
 	0x00000000,
+
 	0xc0016900,
 	0x0000008b,
 	0x20002000,
+
 	0xc0016900,
 	0x0000008c,
-	0x00000000,
+	0x00000000, /* PA_SC_EDGERULE */
+
 	0xc0016900,
 	0x00000094,
-	0x80000000,
+	0x80000000, /* PA_SC_VPORT_SCISSOR_0_TL */
+
 	0xc0016900,
 	0x00000095,
-	0x20002000,
+	0x20002000, /* PA_SC_VPORT_SCISSOR_0_BR */
+
 	0xc0026900,
 	0x000000b4,
-	0x00000000,
+	0x00000000, /* PA_SC_VPORT_ZMIN_0 */
 	0x3f800000,
+
 	0xc0016900,
 	0x00000096,
-	0x80000000,
+	0x80000000, /* PA_SC_VPORT_SCISSOR_1_TL */
+
 	0xc0016900,
 	0x00000097,
 	0x20002000,
+
 	0xc0026900,
 	0x000000b6,
 	0x00000000,
 	0x3f800000,
+
 	0xc0016900,
 	0x00000098,
 	0x80000000,
+
 	0xc0016900,
 	0x00000099,
 	0x20002000,
+
 	0xc0026900,
 	0x000000b8,
 	0x00000000,
 	0x3f800000,
+
 	0xc0016900,
 	0x0000009a,
 	0x80000000,
+
 	0xc0016900,
 	0x0000009b,
 	0x20002000,
+
 	0xc0026900,
 	0x000000ba,
 	0x00000000,
 	0x3f800000,
+
 	0xc0016900,
 	0x0000009c,
 	0x80000000,
+
 	0xc0016900,
 	0x0000009d,
 	0x20002000,
+
 	0xc0026900,
 	0x000000bc,
 	0x00000000,
 	0x3f800000,
+
 	0xc0016900,
 	0x0000009e,
 	0x80000000,
+
 	0xc0016900,
 	0x0000009f,
 	0x20002000,
+
 	0xc0026900,
 	0x000000be,
 	0x00000000,
 	0x3f800000,
+
 	0xc0016900,
 	0x000000a0,
 	0x80000000,
+
 	0xc0016900,
 	0x000000a1,
 	0x20002000,
+
 	0xc0026900,
 	0x000000c0,
 	0x00000000,
 	0x3f800000,
+
 	0xc0016900,
 	0x000000a2,
 	0x80000000,
+
 	0xc0016900,
 	0x000000a3,
 	0x20002000,
+
 	0xc0026900,
 	0x000000c2,
 	0x00000000,
 	0x3f800000,
+
 	0xc0016900,
 	0x000000a4,
 	0x80000000,
+
 	0xc0016900,
 	0x000000a5,
 	0x20002000,
+
 	0xc0026900,
 	0x000000c4,
 	0x00000000,
 	0x3f800000,
+
 	0xc0016900,
 	0x000000a6,
 	0x80000000,
+
 	0xc0016900,
 	0x000000a7,
 	0x20002000,
+
 	0xc0026900,
 	0x000000c6,
 	0x00000000,
 	0x3f800000,
+
 	0xc0016900,
 	0x000000a8,
 	0x80000000,
+
 	0xc0016900,
 	0x000000a9,
 	0x20002000,
+
 	0xc0026900,
 	0x000000c8,
 	0x00000000,
 	0x3f800000,
+
 	0xc0016900,
 	0x000000aa,
 	0x80000000,
+
 	0xc0016900,
 	0x000000ab,
 	0x20002000,
+
 	0xc0026900,
 	0x000000ca,
 	0x00000000,
 	0x3f800000,
+
 	0xc0016900,
 	0x000000ac,
 	0x80000000,
+
 	0xc0016900,
 	0x000000ad,
 	0x20002000,
+
 	0xc0026900,
 	0x000000cc,
 	0x00000000,
 	0x3f800000,
+
 	0xc0016900,
 	0x000000ae,
 	0x80000000,
+
 	0xc0016900,
 	0x000000af,
 	0x20002000,
+
 	0xc0026900,
 	0x000000ce,
 	0x00000000,
 	0x3f800000,
+
 	0xc0016900,
 	0x000000b0,
 	0x80000000,
+
 	0xc0016900,
 	0x000000b1,
 	0x20002000,
+
 	0xc0026900,
 	0x000000d0,
 	0x00000000,
 	0x3f800000,
+
 	0xc0016900,
 	0x000000b2,
 	0x80000000,
+
 	0xc0016900,
 	0x000000b3,
 	0x20002000,
+
 	0xc0026900,
 	0x000000d2,
 	0x00000000,
 	0x3f800000,
+
 	0xc0016900,
 	0x00000293,
-	0x00004010,
+	0x00004010, /* PA_SC_MODE_CNTL */
+
 	0xc0016900,
 	0x00000300,
-	0x00000000,
+	0x00000000, /* PA_SC_LINE_CNTL */
+
 	0xc0016900,
 	0x00000301,
-	0x00000000,
+	0x00000000, /* PA_SC_AA_CONFIG */
+
 	0xc0016900,
 	0x00000312,
-	0xffffffff,
+	0xffffffff, /* PA_SC_AA_MASK */
+
 	0xc0016900,
 	0x00000307,
-	0x00000000,
+	0x00000000, /* PA_SC_SAMPLE_LOCS_MCTX */
+
 	0xc0016900,
 	0x00000308,
 	0x00000000,
+
 	0xc0016900,
 	0x00000283,
-	0x00000000,
+	0x00000000, /* PA_SC_LINE_STIPPLE */
+
 	0xc0016900,
 	0x00000292,
-	0x00000000,
+	0x00000000, /* PA_SC_MPASS_PS_CNTL */
+
 	0xc0066900,
 	0x0000010f,
+	0x00000000, /* PA_CL_VPORT_0_XSCALE */
 	0x00000000,
 	0x00000000,
 	0x00000000,
 	0x00000000,
 	0x00000000,
-	0x00000000,
+
 	0xc0016900,
-	0x00000206,
+	0x00000206, /* PA_CL_VTE_CNTL */
 	0x00000000,
+
 	0xc0016900,
 	0x00000207,
-	0x00000000,
+	0x00000000, /* PA_CL_VS_OUT_CNTL */
+
 	0xc0016900,
 	0x00000208,
-	0x00000000,
+	0x00000000, /* PA_CL_NANINF_CNTL */
+
 	0xc0046900,
 	0x00000303,
+	0x3f800000, /* PA_CL_GB_VERT_CLIP_ADJ */
 	0x3f800000,
 	0x3f800000,
 	0x3f800000,
-	0x3f800000,
+
 	0xc0016900,
 	0x00000205,
-	0x00000004,
+	0x00000004, /* PA_SU_SC_MODE_CNTL */
+
 	0xc0016900,
 	0x00000280,
-	0x00000000,
+	0x00000000, /* PA_SU_POINT_SIZE */
+
 	0xc0016900,
 	0x00000281,
-	0x00000000,
+	0x00000000, /* PA_SU_POINT_MINMAX */
+
 	0xc0016900,
 	0x0000037e,
-	0x00000000,
+	0x00000000, /* PA_SU_POLY_OFFSET_DB_FMT_CNTL */
+
 	0xc0016900,
 	0x00000382,
-	0x00000000,
+	0x00000000, /* PA_SU_POLY_OFFSET_BACK_SCALE */
+
 	0xc0016900,
 	0x00000380,
-	0x00000000,
+	0x00000000, /* PA_SU_POLY_OFFSET_FRONT_SCALE */
+
 	0xc0016900,
 	0x00000383,
-	0x00000000,
+	0x00000000, /* PA_SU_POLY_OFFSET_BACK_OFFSET */
+
 	0xc0016900,
 	0x00000381,
-	0x00000000,
+	0x00000000, /* PA_SU_POLY_OFFSET_FRONT_OFFSET */
+
 	0xc0016900,
 	0x00000282,
-	0x00000008,
+	0x00000008, /* PA_SU_LINE_CNTL */
+
 	0xc0016900,
 	0x00000302,
-	0x0000002d,
+	0x0000002d, /* PA_SU_VTX_CNTL */
+
 	0xc0016900,
 	0x0000037f,
-	0x00000000,
+	0x00000000, /* PA_SU_POLY_OFFSET_CLAMP */
+
 	0xc0016900,
 	0x000001b2,
-	0x00000000,
+	0x00000000, /* SPI_THREAD_GROUPING */
+
 	0xc0016900,
 	0x000001b6,
-	0x00000000,
+	0x00000000, /* SPI_INPUT_Z */
+
 	0xc0016900,
 	0x000001b7,
-	0x00000000,
+	0x00000000, /* SPI_FOG_CNTL */
+
 	0xc0016900,
 	0x000001b8,
-	0x00000000,
+	0x00000000, /* SPI_FOG_FUNC_SCALE */
+
 	0xc0016900,
 	0x000001b9,
-	0x00000000,
+	0x00000000, /* SPI_FOG_FUNC_BIAS */
+
 	0xc0016900,
 	0x00000225,
-	0x00000000,
+	0x00000000, /* SQ_PGM_START_FS */
+
 	0xc0016900,
 	0x00000229,
-	0x00000000,
+	0x00000000, /* SQ_PGM_RESOURCES_FS */
+
 	0xc0016900,
 	0x00000237,
-	0x00000000,
+	0x00000000, /* SQ_PGM_CF_OFFSET_FS */
+
 	0xc0016900,
 	0x00000100,
-	0x00000800,
+	0x00000800, /* VGT_MAX_VTX_INDX */
+
 	0xc0016900,
 	0x00000101,
-	0x00000000,
+	0x00000000, /* VGT_MIN_VTX_INDX */
+
 	0xc0016900,
 	0x00000102,
-	0x00000000,
+	0x00000000, /* VGT_INDX_OFFSET */
+
 	0xc0016900,
 	0x000002a8,
-	0x00000000,
+	0x00000000, /* VGT_INSTANCE_STEP_RATE_0 */
+
 	0xc0016900,
 	0x000002a9,
-	0x00000000,
+	0x00000000, /* VGT_INSTANCE_STEP_RATE_1 */
+
 	0xc0016900,
 	0x00000103,
-	0x00000000,
+	0x00000000, /* VGT_MULTI_PRIM_IB_RESET_INDX */
+
 	0xc0016900,
 	0x00000284,
-	0x00000000,
+	0x00000000, /* VGT_OUTPUT_PATH_CNTL */
+
 	0xc0016900,
 	0x00000290,
-	0x00000000,
+	0x00000000, /* VGT_GS_MODE */
+
 	0xc0016900,
 	0x00000285,
-	0x00000000,
+	0x00000000, /* VGT_HOS_CNTL */
+
 	0xc0016900,
 	0x00000286,
-	0x00000000,
+	0x00000000, /* VGT_HOS_MAX_TESS_LEVEL */
+
 	0xc0016900,
 	0x00000287,
-	0x00000000,
+	0x00000000, /* VGT_HOS_MIN_TESS_LEVEL */
+
 	0xc0016900,
 	0x00000288,
-	0x00000000,
+	0x00000000, /* VGT_HOS_REUSE_DEPTH */
+
 	0xc0016900,
 	0x00000289,
-	0x00000000,
+	0x00000000, /* VGT_GROUP_PRIM_TYPE */
+
 	0xc0016900,
 	0x0000028a,
-	0x00000000,
+	0x00000000, /* VGT_GROUP_FIRST_DECR */
+
 	0xc0016900,
 	0x0000028b,
-	0x00000000,
+	0x00000000, /* VGT_GROUP_DECR */
+
 	0xc0016900,
 	0x0000028c,
-	0x00000000,
+	0x00000000, /* VGT_GROUP_VECT_0_CNTL */
+
 	0xc0016900,
 	0x0000028d,
-	0x00000000,
+	0x00000000, /* VGT_GROUP_VECT_1_CNTL */
+
 	0xc0016900,
 	0x0000028e,
-	0x00000000,
+	0x00000000, /* VGT_GROUP_VECT_0_FMT_CNTL */
+
 	0xc0016900,
 	0x0000028f,
-	0x00000000,
+	0x00000000, /* VGT_GROUP_VECT_1_FMT_CNTL */
+
 	0xc0016900,
 	0x000002a1,
-	0x00000000,
+	0x00000000, /* VGT_PRIMITIVEID_EN */
+
 	0xc0016900,
 	0x000002a5,
-	0x00000000,
+	0x00000000, /* VGT_MULTI_PRIM_ID_RESET_EN */
+
 	0xc0016900,
 	0x000002ac,
-	0x00000000,
+	0x00000000, /* VGT_STRMOUT_EN */
+
 	0xc0016900,
 	0x000002ad,
-	0x00000000,
+	0x00000000, /* VGT_REUSE_OFF */
+
 	0xc0016900,
 	0x000002ae,
-	0x00000000,
+	0x00000000, /* VGT_VTX_CNT_EN */
+
 	0xc0016900,
 	0x000002c8,
-	0x00000000,
+	0x00000000, /* VGT_STRMOUT_BUFFER_EN */
+
 	0xc0016900,
 	0x00000206,
-	0x00000100,
+	0x00000100, /* PA_CL_VTE_CNTL */
+
 	0xc0016900,
 	0x00000204,
-	0x00010000,
-	0xc0036e00,
+	0x00010000, /* PA_CL_CLIP_CNTL */
+
+	0xc0036e00, /* SET_SAMPLER */
 	0x00000000,
 	0x00000012,
 	0x00000000,
 	0x00000000,
+
 	0xc0016900,
 	0x0000008f,
-	0x0000000f,
+	0x0000000f, /* CB_SHADER_MASK */
+
 	0xc0016900,
 	0x000001e8,
-	0x00000001,
+	0x00000001, /* CB_SHADER_CONTROL */
+
 	0xc0016900,
 	0x00000202,
-	0x00cc0000,
+	0x00cc0000, /* CB_COLOR_CONTROL */
+
 	0xc0016900,
 	0x00000205,
-	0x00000244,
+	0x00000244, /* PA_SU_SC_MODE_CNTL */
+
 	0xc0016900,
 	0x00000203,
-	0x00000210,
+	0x00000210, /* DB_SHADER_CNTL */
+
 	0xc0016900,
 	0x000001b1,
-	0x00000000,
+	0x00000000, /* SPI_VS_OUT_CONFIG */
+
 	0xc0016900,
 	0x00000185,
-	0x00000000,
+	0x00000000, /* SPI_VS_OUT_ID_0 */
+
 	0xc0016900,
 	0x000001b3,
-	0x00000001,
+	0x00000001, /* SPI_PS_IN_CONTROL_0 */
+
 	0xc0016900,
 	0x000001b4,
-	0x00000000,
+	0x00000000, /* SPI_PS_IN_CONTROL_1 */
+
 	0xc0016900,
 	0x00000191,
-	0x00000b00,
+	0x00000b00, /* SPI_PS_INPUT_CNTL_0 */
+
 	0xc0016900,
 	0x000001b5,
-	0x00000000,
+	0x00000000, /* SPI_INTERP_CONTROL_0 */
 };
 
 const u32 r7xx_default_state[] =
 {
-	0xc0012800,
+	0xc0012800, /* CONTEXT_CONTROL */
 	0x80000000,
 	0x80000000,
+
 	0xc0016800,
 	0x00000010,
-	0x00008000,
+	0x00008000, /* WAIT_UNTIL */
+
 	0xc0016800,
 	0x00000542,
-	0x07000002,
+	0x07000002, /* TA_CNTL_AUX */
+
 	0xc0016800,
 	0x000005c5,
-	0x00000000,
+	0x00000000, /* VC_ENHANCE */
+
 	0xc0016800,
 	0x00000363,
-	0x00004000,
+	0x00004000, /* SQ_DYN_GPR_CNTL_PS_FLUSH_REQ */
+
 	0xc0016800,
 	0x0000060c,
-	0x00000000,
+	0x00000000, /* DB_DEBUG */
+
 	0xc0016800,
 	0x0000060e,
-	0x00420204,
+	0x00420204, /* DB_WATERMARKS */
+
 	0xc0016f00,
 	0x00000000,
-	0x00000000,
+	0x00000000, /* SQ_VTX_BASE_VTX_LOC */
+
 	0xc0016f00,
 	0x00000001,
-	0x00000000,
+	0x00000000, /* SQ_VTX_START_INST_LOC */
+
 	0xc0096900,
 	0x0000022a,
+	0x00000000, /* SQ_ESGS_RING_ITEMSIZE */
 	0x00000000,
 	0x00000000,
 	0x00000000,
@@ -595,471 +761,614 @@ const u32 r7xx_default_state[] =
 	0x00000000,
 	0x00000000,
 	0x00000000,
-	0x00000000,
+
 	0xc0016900,
 	0x00000004,
-	0x00000000,
+	0x00000000, /* DB_DEPTH_INFO */
+
 	0xc0016900,
 	0x0000000a,
-	0x00000000,
+	0x00000000, /* DB_STENCIL_CLEAR */
+
 	0xc0016900,
 	0x0000000b,
-	0x00000000,
+	0x00000000, /* DB_DEPTH_CLEAR */
+
 	0xc0016900,
 	0x0000010c,
-	0x00000000,
+	0x00000000, /* DB_STENCILREFMASK */
+
 	0xc0016900,
 	0x0000010d,
-	0x00000000,
+	0x00000000, /* DB_STENCILREFMASK_BF */
+
 	0xc0016900,
 	0x00000200,
-	0x00000000,
+	0x00000000, /* DB_DEPTH_CONTROL */
+
 	0xc0016900,
 	0x00000343,
-	0x00000060,
+	0x00000060, /* DB_RENDER_CONTROL */
+
 	0xc0016900,
 	0x00000344,
-	0x00000000,
+	0x00000000, /* DB_RENDER_OVERRIDE */
+
 	0xc0016900,
 	0x00000351,
-	0x0000aa00,
+	0x0000aa00, /* DB_ALPHA_TO_MASK */
+
 	0xc0016900,
 	0x00000104,
-	0x00000000,
+	0x00000000, /* SX_ALPHA_TEST_CONTROL */
+
 	0xc0016900,
 	0x0000010e,
-	0x00000000,
+	0x00000000, /* SX_ALPHA_REF */
+
 	0xc0046900,
 	0x00000105,
+	0x00000000, /* CB_BLEND_RED */
 	0x00000000,
 	0x00000000,
 	0x00000000,
-	0x00000000,
+
 	0xc0046900,
-	0x0000030c,
+	0x0000030c, /* CB_CLRCMP_CNTL */
 	0x01000000,
 	0x00000000,
 	0x00000000,
 	0x00000000,
+
 	0xc0016900,
 	0x0000008e,
-	0x0000000f,
+	0x0000000f, /* CB_TARGET_MASK */
+
 	0xc0016900,
 	0x00000080,
-	0x00000000,
+	0x00000000, /* PA_SC_WINDOW_OFFSET */
+
 	0xc0016900,
 	0x00000083,
-	0x0000ffff,
+	0x0000ffff, /* PA_SC_CLIP_RECT_RULE */
+
 	0xc0016900,
 	0x00000084,
-	0x00000000,
+	0x00000000, /* PA_SC_WINDOW_SCISSOR_TL */
+
 	0xc0016900,
 	0x00000085,
 	0x20002000,
+
 	0xc0016900,
 	0x00000086,
 	0x00000000,
+
 	0xc0016900,
 	0x00000087,
 	0x20002000,
+
 	0xc0016900,
 	0x00000088,
 	0x00000000,
+
 	0xc0016900,
 	0x00000089,
 	0x20002000,
+
 	0xc0016900,
 	0x0000008a,
 	0x00000000,
+
 	0xc0016900,
 	0x0000008b,
 	0x20002000,
+
 	0xc0016900,
 	0x0000008c,
-	0xaaaaaaaa,
+	0xaaaaaaaa, /* PA_SC_EDGERULE */
+
 	0xc0016900,
 	0x00000094,
-	0x80000000,
+	0x80000000, /* PA_SC_VPORT_SCISSOR_0_TL */
+
 	0xc0016900,
 	0x00000095,
-	0x20002000,
+	0x20002000, /* PA_SC_VPORT_SCISSOR_0_BR */
+
 	0xc0026900,
 	0x000000b4,
-	0x00000000,
+	0x00000000, /* PA_SC_VPORT_ZMIN_0 */
 	0x3f800000,
+
 	0xc0016900,
 	0x00000096,
 	0x80000000,
+
 	0xc0016900,
 	0x00000097,
 	0x20002000,
+
 	0xc0026900,
 	0x000000b6,
 	0x00000000,
 	0x3f800000,
+
 	0xc0016900,
 	0x00000098,
 	0x80000000,
+
 	0xc0016900,
 	0x00000099,
 	0x20002000,
+
 	0xc0026900,
 	0x000000b8,
 	0x00000000,
 	0x3f800000,
+
 	0xc0016900,
 	0x0000009a,
 	0x80000000,
+
 	0xc0016900,
 	0x0000009b,
 	0x20002000,
+
 	0xc0026900,
 	0x000000ba,
 	0x00000000,
 	0x3f800000,
+
 	0xc0016900,
 	0x0000009c,
 	0x80000000,
+
 	0xc0016900,
 	0x0000009d,
 	0x20002000,
+
 	0xc0026900,
 	0x000000bc,
 	0x00000000,
 	0x3f800000,
+
 	0xc0016900,
 	0x0000009e,
 	0x80000000,
+
 	0xc0016900,
 	0x0000009f,
 	0x20002000,
+
 	0xc0026900,
 	0x000000be,
 	0x00000000,
 	0x3f800000,
+
 	0xc0016900,
 	0x000000a0,
 	0x80000000,
+
 	0xc0016900,
 	0x000000a1,
 	0x20002000,
+
 	0xc0026900,
 	0x000000c0,
 	0x00000000,
 	0x3f800000,
+
 	0xc0016900,
 	0x000000a2,
 	0x80000000,
+
 	0xc0016900,
 	0x000000a3,
 	0x20002000,
+
 	0xc0026900,
 	0x000000c2,
 	0x00000000,
 	0x3f800000,
+
 	0xc0016900,
 	0x000000a4,
 	0x80000000,
+
 	0xc0016900,
 	0x000000a5,
 	0x20002000,
+
 	0xc0026900,
 	0x000000c4,
 	0x00000000,
 	0x3f800000,
+
 	0xc0016900,
 	0x000000a6,
 	0x80000000,
+
 	0xc0016900,
 	0x000000a7,
 	0x20002000,
+
 	0xc0026900,
 	0x000000c6,
 	0x00000000,
 	0x3f800000,
+
 	0xc0016900,
 	0x000000a8,
 	0x80000000,
+
 	0xc0016900,
 	0x000000a9,
 	0x20002000,
+
 	0xc0026900,
 	0x000000c8,
 	0x00000000,
 	0x3f800000,
+
 	0xc0016900,
 	0x000000aa,
 	0x80000000,
+
 	0xc0016900,
 	0x000000ab,
 	0x20002000,
+
 	0xc0026900,
 	0x000000ca,
 	0x00000000,
 	0x3f800000,
+
 	0xc0016900,
 	0x000000ac,
 	0x80000000,
+
 	0xc0016900,
 	0x000000ad,
 	0x20002000,
+
 	0xc0026900,
 	0x000000cc,
 	0x00000000,
 	0x3f800000,
+
 	0xc0016900,
 	0x000000ae,
 	0x80000000,
+
 	0xc0016900,
 	0x000000af,
 	0x20002000,
+
 	0xc0026900,
 	0x000000ce,
 	0x00000000,
 	0x3f800000,
+
 	0xc0016900,
 	0x000000b0,
 	0x80000000,
+
 	0xc0016900,
 	0x000000b1,
 	0x20002000,
+
 	0xc0026900,
 	0x000000d0,
 	0x00000000,
 	0x3f800000,
+
 	0xc0016900,
 	0x000000b2,
 	0x80000000,
+
 	0xc0016900,
 	0x000000b3,
 	0x20002000,
+
 	0xc0026900,
 	0x000000d2,
 	0x00000000,
 	0x3f800000,
+
 	0xc0016900,
 	0x00000293,
-	0x00514000,
+	0x00514000, /* PA_SC_MODE_CNTL */
+
 	0xc0016900,
 	0x00000300,
-	0x00000000,
+	0x00000000, /* PA_SC_LINE_CNTL */
+
 	0xc0016900,
 	0x00000301,
-	0x00000000,
+	0x00000000, /* PA_SC_AA_CONFIG */
+
 	0xc0016900,
 	0x00000312,
-	0xffffffff,
+	0xffffffff, /* PA_SC_AA_MASK */
+
 	0xc0016900,
 	0x00000307,
-	0x00000000,
+	0x00000000, /* PA_SC_SAMPLE_LOCS_MCTX */
+
 	0xc0016900,
 	0x00000308,
 	0x00000000,
+
 	0xc0016900,
 	0x00000283,
-	0x00000000,
+	0x00000000, /* PA_SC_LINE_STIPPLE */
+
 	0xc0016900,
 	0x00000292,
-	0x00000000,
+	0x00000000, /* PA_SC_MPASS_PS_CNTL */
+
 	0xc0066900,
 	0x0000010f,
+	0x00000000, /* PA_CL_VPORT_0_XSCALE */
 	0x00000000,
 	0x00000000,
 	0x00000000,
 	0x00000000,
 	0x00000000,
-	0x00000000,
+
 	0xc0016900,
 	0x00000206,
-	0x00000000,
+	0x00000000, /* PA_CL_VTE_CNTL */
+
 	0xc0016900,
 	0x00000207,
-	0x00000000,
+	0x00000000, /* PA_CL_VS_OUT_CNTL */
+
 	0xc0016900,
 	0x00000208,
-	0x00000000,
+	0x00000000, /* PA_CL_NANINF_CNTL */
+
 	0xc0046900,
 	0x00000303,
+	0x3f800000, /* PA_CL_GB_VERT_CLIP_ADJ */
 	0x3f800000,
 	0x3f800000,
 	0x3f800000,
-	0x3f800000,
+
 	0xc0016900,
 	0x00000205,
-	0x00000004,
+	0x00000004, /* PA_SU_SC_MODE_CNTL */
+
 	0xc0016900,
 	0x00000280,
-	0x00000000,
+	0x00000000, /* PA_SU_POINT_SIZE */
+
 	0xc0016900,
 	0x00000281,
-	0x00000000,
+	0x00000000, /* PA_SU_POINT_MINMAX */
+
 	0xc0016900,
 	0x0000037e,
-	0x00000000,
+	0x00000000, /* PA_SU_POLY_OFFSET_DB_FMT_CNTL */
+
 	0xc0016900,
 	0x00000382,
-	0x00000000,
+	0x00000000, /* PA_SU_POLY_OFFSET_BACK_SCALE */
+
 	0xc0016900,
 	0x00000380,
-	0x00000000,
+	0x00000000, /* PA_SU_POLY_OFFSET_FRONT_SCALE */
+
 	0xc0016900,
 	0x00000383,
-	0x00000000,
+	0x00000000, /* PA_SU_POLY_OFFSET_BACK_OFFSET */
+
 	0xc0016900,
 	0x00000381,
-	0x00000000,
+	0x00000000, /* PA_SU_POLY_OFFSET_FRONT_OFFSET */
+
 	0xc0016900,
 	0x00000282,
-	0x00000008,
+	0x00000008, /* PA_SU_LINE_CNTL */
+
 	0xc0016900,
 	0x00000302,
-	0x0000002d,
+	0x0000002d, /* PA_SU_VTX_CNTL */
+
 	0xc0016900,
 	0x0000037f,
-	0x00000000,
+	0x00000000, /* PA_SU_POLY_OFFSET_CLAMP */
+
 	0xc0016900,
 	0x000001b2,
-	0x00000001,
+	0x00000001, /* SPI_THREAD_GROUPING */
+
 	0xc0016900,
 	0x000001b6,
-	0x00000000,
+	0x00000000, /* SPI_INPUT_Z */
+
 	0xc0016900,
 	0x000001b7,
-	0x00000000,
+	0x00000000, /* SPI_FOG_CNTL */
+
 	0xc0016900,
 	0x000001b8,
-	0x00000000,
+	0x00000000, /* SPI_FOG_FUNC_SCALE */
+
 	0xc0016900,
 	0x000001b9,
-	0x00000000,
+	0x00000000, /* SPI_FOG_FUNC_BIAS */
+
 	0xc0016900,
 	0x00000225,
-	0x00000000,
+	0x00000000, /* SQ_PGM_START_FS */
+
 	0xc0016900,
 	0x00000229,
-	0x00000000,
+	0x00000000, /* SQ_PGM_RESOURCES_FS */
+
 	0xc0016900,
 	0x00000237,
-	0x00000000,
+	0x00000000, /* SQ_PGM_CF_OFFSET_FS */
+
 	0xc0016900,
 	0x00000100,
-	0x00000800,
+	0x00000800, /* VGT_MAX_VTX_INDX */
+
 	0xc0016900,
 	0x00000101,
-	0x00000000,
+	0x00000000, /* VGT_MIN_VTX_INDX */
+
 	0xc0016900,
 	0x00000102,
-	0x00000000,
+	0x00000000, /* VGT_INDX_OFFSET */
+
 	0xc0016900,
 	0x000002a8,
-	0x00000000,
+	0x00000000, /* VGT_INSTANCE_STEP_RATE_0 */
+
 	0xc0016900,
 	0x000002a9,
-	0x00000000,
+	0x00000000, /* VGT_INSTANCE_STEP_RATE_1 */
+
 	0xc0016900,
 	0x00000103,
-	0x00000000,
+	0x00000000, /* VGT_MULTI_PRIM_IB_RESET_INDX */
+
 	0xc0016900,
 	0x00000284,
-	0x00000000,
+	0x00000000, /* VGT_OUTPUT_PATH_CNTL */
+
 	0xc0016900,
 	0x00000290,
-	0x00000000,
+	0x00000000, /* VGT_GS_MODE */
+
 	0xc0016900,
 	0x00000285,
-	0x00000000,
+	0x00000000, /* VGT_HOS_CNTL */
+
 	0xc0016900,
 	0x00000286,
-	0x00000000,
+	0x00000000, /* VGT_HOS_MAX_TESS_LEVEL */
+
 	0xc0016900,
 	0x00000287,
-	0x00000000,
+	0x00000000, /* VGT_HOS_MIN_TESS_LEVEL */
+
 	0xc0016900,
 	0x00000288,
-	0x00000000,
+	0x00000000, /* VGT_HOS_REUSE_DEPTH */
+
 	0xc0016900,
 	0x00000289,
-	0x00000000,
+	0x00000000, /* VGT_GROUP_PRIM_TYPE */
+
 	0xc0016900,
 	0x0000028a,
-	0x00000000,
+	0x00000000, /* VGT_GROUP_FIRST_DECR */
+
 	0xc0016900,
 	0x0000028b,
-	0x00000000,
+	0x00000000, /* VGT_GROUP_DECR */
+
 	0xc0016900,
 	0x0000028c,
-	0x00000000,
+	0x00000000, /* VGT_GROUP_VECT_0_CNTL */
+
 	0xc0016900,
 	0x0000028d,
-	0x00000000,
+	0x00000000, /* VGT_GROUP_VECT_1_CNTL */
+
 	0xc0016900,
 	0x0000028e,
-	0x00000000,
+	0x00000000, /* VGT_GROUP_VECT_0_FMT_CNTL */
+
 	0xc0016900,
 	0x0000028f,
-	0x00000000,
+	0x00000000, /* VGT_GROUP_VECT_1_FMT_CNTL */
+
 	0xc0016900,
 	0x000002a1,
-	0x00000000,
+	0x00000000, /* VGT_PRIMITIVEID_EN */
+
 	0xc0016900,
 	0x000002a5,
-	0x00000000,
+	0x00000000, /* VGT_MULTI_PRIM_ID_RESET_EN */
+
 	0xc0016900,
 	0x000002ac,
-	0x00000000,
+	0x00000000, /* VGT_STRMOUT_EN */
+
 	0xc0016900,
 	0x000002ad,
-	0x00000000,
+	0x00000000, /* VGT_REUSE_OFF */
+
 	0xc0016900,
 	0x000002ae,
-	0x00000000,
+	0x00000000, /* VGT_VTX_CNT_EN */
+
 	0xc0016900,
 	0x000002c8,
-	0x00000000,
+	0x00000000, /* VGT_STRMOUT_BUFFER_EN */
+
 	0xc0016900,
 	0x00000206,
-	0x00000100,
+	0x00000100, /* PA_CL_VTE_CNTL */
+
 	0xc0016900,
 	0x00000204,
-	0x00010000,
-	0xc0036e00,
+	0x00010000, /* PA_CL_CLIP_CNTL */
+
+	0xc0036e00, /* SET_SAMPLER */
 	0x00000000,
 	0x00000012,
 	0x00000000,
 	0x00000000,
+
 	0xc0016900,
 	0x0000008f,
-	0x0000000f,
+	0x0000000f, /* CB_SHADER_MASK */
+
 	0xc0016900,
 	0x000001e8,
-	0x00000001,
+	0x00000001, /* CB_SHADER_CONTROL */
+
 	0xc0016900,
 	0x00000202,
-	0x00cc0000,
+	0x00cc0000, /* CB_COLOR_CONTROL */
+
 	0xc0016900,
 	0x00000205,
-	0x00000244,
+	0x00000244, /* PA_SU_SC_MODE_CNTL */
+
 	0xc0016900,
 	0x00000203,
-	0x00000210,
+	0x00000210, /* DB_SHADER_CNTL */
+
 	0xc0016900,
 	0x000001b1,
-	0x00000000,
+	0x00000000, /* SPI_VS_OUT_CONFIG */
+
 	0xc0016900,
 	0x00000185,
-	0x00000000,
+	0x00000000, /* SPI_VS_OUT_ID_0 */
+
 	0xc0016900,
 	0x000001b3,
-	0x00000001,
+	0x00000001, /* SPI_PS_IN_CONTROL_0 */
+
 	0xc0016900,
 	0x000001b4,
-	0x00000000,
+	0x00000000, /* SPI_PS_IN_CONTROL_1 */
+
 	0xc0016900,
 	0x00000191,
-	0x00000b00,
+	0x00000b00, /* SPI_PS_INPUT_CNTL_0 */
+
 	0xc0016900,
 	0x000001b5,
-	0x00000000,
+	0x00000000, /* SPI_INTERP_CONTROL_0 */
 };
 
 /* same for r6xx/r7xx */

commit 65388342d66a63a29c76058e94a00d7bc0c6423b
Author: Alex Deucher <alexdeucher@gmail.com>
Date:   Fri Mar 5 19:22:24 2010 -0500

    drm/radeon/r600: add missing license and comments to r600_blit_shaders.c
    
    R6xx+ cards need to use the 3D engine to blit data which requires
    quite a bit of hw state setup.  Rather than pull the whole 3D driver
    (which normally generates the 3D state) into the DRM, we opt to use
    statically generated state tables.  The regsiter state and shaders
    were hand generated to support blitting functionality.  See the 3D
    driver or documentation for descriptions of the registers and
    shader instructions.
    
    Signed-off-by: Alex Deucher <alexdeucher@gmail.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>

diff --git a/drivers/gpu/drm/radeon/r600_blit_shaders.c b/drivers/gpu/drm/radeon/r600_blit_shaders.c
index a112c59f9d82..0271b53fa2dd 100644
--- a/drivers/gpu/drm/radeon/r600_blit_shaders.c
+++ b/drivers/gpu/drm/radeon/r600_blit_shaders.c
@@ -1,7 +1,42 @@
+/*
+ * Copyright 2009 Advanced Micro Devices, Inc.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a
+ * copy of this software and associated documentation files (the "Software"),
+ * to deal in the Software without restriction, including without limitation
+ * the rights to use, copy, modify, merge, publish, distribute, sublicense,
+ * and/or sell copies of the Software, and to permit persons to whom the
+ * Software is furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice (including the next
+ * paragraph) shall be included in all copies or substantial portions of the
+ * Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
+ * THE COPYRIGHT HOLDER(S) AND/OR ITS SUPPLIERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
+ * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
+ * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
+ * DEALINGS IN THE SOFTWARE.
+ *
+ * Authors:
+ *     Alex Deucher <alexander.deucher@amd.com>
+ */
 
 #include <linux/types.h>
 #include <linux/kernel.h>
 
+/*
+ * R6xx+ cards need to use the 3D engine to blit data which requires
+ * quite a bit of hw state setup.  Rather than pull the whole 3D driver
+ * (which normally generates the 3D state) into the DRM, we opt to use
+ * statically generated state tables.  The regsiter state and shaders
+ * were hand generated to support blitting functionality.  See the 3D
+ * driver or documentation for descriptions of the registers and
+ * shader instructions.
+ */
+
 const u32 r6xx_default_state[] =
 {
 	0xc0002400,

commit 44224c3f455886190b101dbb00befbaff5e98466
Author: Alex Deucher <alexdeucher@gmail.com>
Date:   Thu Feb 4 11:01:52 2010 -0500

    drm/radeon/kms/r600: reduce gpu cache flushing
    
    Only flush the gpu caches before we submit a fence.
    This leads to a small performance boost when we take
    the extra gpu cache flushes out of the ddx and mesa.
    Once this patch is in and the drm version is bumped,
    we can remove the flushes from the ddx and drm.
    
    Also, remove the extra cache flushes from the blit
    routine.
    
    Signed-off-by: Alex Deucher <alexdeucher@gmail.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>

diff --git a/drivers/gpu/drm/radeon/r600_blit_shaders.c b/drivers/gpu/drm/radeon/r600_blit_shaders.c
index d745e815c2e8..a112c59f9d82 100644
--- a/drivers/gpu/drm/radeon/r600_blit_shaders.c
+++ b/drivers/gpu/drm/radeon/r600_blit_shaders.c
@@ -9,11 +9,6 @@ const u32 r6xx_default_state[] =
 	0xc0012800,
 	0x80000000,
 	0x80000000,
-	0xc0004600,
-	0x00000016,
-	0xc0016800,
-	0x00000010,
-	0x00028000,
 	0xc0016800,
 	0x00000010,
 	0x00008000,
@@ -531,11 +526,6 @@ const u32 r7xx_default_state[] =
 	0xc0012800,
 	0x80000000,
 	0x80000000,
-	0xc0004600,
-	0x00000016,
-	0xc0016800,
-	0x00000010,
-	0x00028000,
 	0xc0016800,
 	0x00000010,
 	0x00008000,

commit 3ce0a23d2d253185df24e22e3d5f89800bb3dd1c
Author: Jerome Glisse <jglisse@redhat.com>
Date:   Tue Sep 8 10:10:24 2009 +1000

    drm/radeon/kms: add r600 KMS support
    
    This adds the r600 KMS + CS support to the Linux kernel.
    
    The r600 TTM support is quite basic and still needs more
    work esp around using interrupts, but the polled fencing
    should work okay for now.
    
    Also currently TTM is using memcpy to do VRAM moves,
    the code is here to use a 3D blit to do this, but
    isn't fully debugged yet.
    
    Authors:
    Alex Deucher <alexdeucher@gmail.com>
    Dave Airlie <airlied@redhat.com>
    Jerome Glisse <jglisse@redhat.com>
    
    Signed-off-by: Jerome Glisse <jglisse@redhat.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>

diff --git a/drivers/gpu/drm/radeon/r600_blit_shaders.c b/drivers/gpu/drm/radeon/r600_blit_shaders.c
new file mode 100644
index 000000000000..d745e815c2e8
--- /dev/null
+++ b/drivers/gpu/drm/radeon/r600_blit_shaders.c
@@ -0,0 +1,1072 @@
+
+#include <linux/types.h>
+#include <linux/kernel.h>
+
+const u32 r6xx_default_state[] =
+{
+	0xc0002400,
+	0x00000000,
+	0xc0012800,
+	0x80000000,
+	0x80000000,
+	0xc0004600,
+	0x00000016,
+	0xc0016800,
+	0x00000010,
+	0x00028000,
+	0xc0016800,
+	0x00000010,
+	0x00008000,
+	0xc0016800,
+	0x00000542,
+	0x07000003,
+	0xc0016800,
+	0x000005c5,
+	0x00000000,
+	0xc0016800,
+	0x00000363,
+	0x00000000,
+	0xc0016800,
+	0x0000060c,
+	0x82000000,
+	0xc0016800,
+	0x0000060e,
+	0x01020204,
+	0xc0016f00,
+	0x00000000,
+	0x00000000,
+	0xc0016f00,
+	0x00000001,
+	0x00000000,
+	0xc0096900,
+	0x0000022a,
+	0x00000000,
+	0x00000000,
+	0x00000000,
+	0x00000000,
+	0x00000000,
+	0x00000000,
+	0x00000000,
+	0x00000000,
+	0x00000000,
+	0xc0016900,
+	0x00000004,
+	0x00000000,
+	0xc0016900,
+	0x0000000a,
+	0x00000000,
+	0xc0016900,
+	0x0000000b,
+	0x00000000,
+	0xc0016900,
+	0x0000010c,
+	0x00000000,
+	0xc0016900,
+	0x0000010d,
+	0x00000000,
+	0xc0016900,
+	0x00000200,
+	0x00000000,
+	0xc0016900,
+	0x00000343,
+	0x00000060,
+	0xc0016900,
+	0x00000344,
+	0x00000040,
+	0xc0016900,
+	0x00000351,
+	0x0000aa00,
+	0xc0016900,
+	0x00000104,
+	0x00000000,
+	0xc0016900,
+	0x0000010e,
+	0x00000000,
+	0xc0046900,
+	0x00000105,
+	0x00000000,
+	0x00000000,
+	0x00000000,
+	0x00000000,
+	0xc0036900,
+	0x00000109,
+	0x00000000,
+	0x00000000,
+	0x00000000,
+	0xc0046900,
+	0x0000030c,
+	0x01000000,
+	0x00000000,
+	0x00000000,
+	0x00000000,
+	0xc0046900,
+	0x00000048,
+	0x3f800000,
+	0x00000000,
+	0x3f800000,
+	0x3f800000,
+	0xc0016900,
+	0x0000008e,
+	0x0000000f,
+	0xc0016900,
+	0x00000080,
+	0x00000000,
+	0xc0016900,
+	0x00000083,
+	0x0000ffff,
+	0xc0016900,
+	0x00000084,
+	0x00000000,
+	0xc0016900,
+	0x00000085,
+	0x20002000,
+	0xc0016900,
+	0x00000086,
+	0x00000000,
+	0xc0016900,
+	0x00000087,
+	0x20002000,
+	0xc0016900,
+	0x00000088,
+	0x00000000,
+	0xc0016900,
+	0x00000089,
+	0x20002000,
+	0xc0016900,
+	0x0000008a,
+	0x00000000,
+	0xc0016900,
+	0x0000008b,
+	0x20002000,
+	0xc0016900,
+	0x0000008c,
+	0x00000000,
+	0xc0016900,
+	0x00000094,
+	0x80000000,
+	0xc0016900,
+	0x00000095,
+	0x20002000,
+	0xc0026900,
+	0x000000b4,
+	0x00000000,
+	0x3f800000,
+	0xc0016900,
+	0x00000096,
+	0x80000000,
+	0xc0016900,
+	0x00000097,
+	0x20002000,
+	0xc0026900,
+	0x000000b6,
+	0x00000000,
+	0x3f800000,
+	0xc0016900,
+	0x00000098,
+	0x80000000,
+	0xc0016900,
+	0x00000099,
+	0x20002000,
+	0xc0026900,
+	0x000000b8,
+	0x00000000,
+	0x3f800000,
+	0xc0016900,
+	0x0000009a,
+	0x80000000,
+	0xc0016900,
+	0x0000009b,
+	0x20002000,
+	0xc0026900,
+	0x000000ba,
+	0x00000000,
+	0x3f800000,
+	0xc0016900,
+	0x0000009c,
+	0x80000000,
+	0xc0016900,
+	0x0000009d,
+	0x20002000,
+	0xc0026900,
+	0x000000bc,
+	0x00000000,
+	0x3f800000,
+	0xc0016900,
+	0x0000009e,
+	0x80000000,
+	0xc0016900,
+	0x0000009f,
+	0x20002000,
+	0xc0026900,
+	0x000000be,
+	0x00000000,
+	0x3f800000,
+	0xc0016900,
+	0x000000a0,
+	0x80000000,
+	0xc0016900,
+	0x000000a1,
+	0x20002000,
+	0xc0026900,
+	0x000000c0,
+	0x00000000,
+	0x3f800000,
+	0xc0016900,
+	0x000000a2,
+	0x80000000,
+	0xc0016900,
+	0x000000a3,
+	0x20002000,
+	0xc0026900,
+	0x000000c2,
+	0x00000000,
+	0x3f800000,
+	0xc0016900,
+	0x000000a4,
+	0x80000000,
+	0xc0016900,
+	0x000000a5,
+	0x20002000,
+	0xc0026900,
+	0x000000c4,
+	0x00000000,
+	0x3f800000,
+	0xc0016900,
+	0x000000a6,
+	0x80000000,
+	0xc0016900,
+	0x000000a7,
+	0x20002000,
+	0xc0026900,
+	0x000000c6,
+	0x00000000,
+	0x3f800000,
+	0xc0016900,
+	0x000000a8,
+	0x80000000,
+	0xc0016900,
+	0x000000a9,
+	0x20002000,
+	0xc0026900,
+	0x000000c8,
+	0x00000000,
+	0x3f800000,
+	0xc0016900,
+	0x000000aa,
+	0x80000000,
+	0xc0016900,
+	0x000000ab,
+	0x20002000,
+	0xc0026900,
+	0x000000ca,
+	0x00000000,
+	0x3f800000,
+	0xc0016900,
+	0x000000ac,
+	0x80000000,
+	0xc0016900,
+	0x000000ad,
+	0x20002000,
+	0xc0026900,
+	0x000000cc,
+	0x00000000,
+	0x3f800000,
+	0xc0016900,
+	0x000000ae,
+	0x80000000,
+	0xc0016900,
+	0x000000af,
+	0x20002000,
+	0xc0026900,
+	0x000000ce,
+	0x00000000,
+	0x3f800000,
+	0xc0016900,
+	0x000000b0,
+	0x80000000,
+	0xc0016900,
+	0x000000b1,
+	0x20002000,
+	0xc0026900,
+	0x000000d0,
+	0x00000000,
+	0x3f800000,
+	0xc0016900,
+	0x000000b2,
+	0x80000000,
+	0xc0016900,
+	0x000000b3,
+	0x20002000,
+	0xc0026900,
+	0x000000d2,
+	0x00000000,
+	0x3f800000,
+	0xc0016900,
+	0x00000293,
+	0x00004010,
+	0xc0016900,
+	0x00000300,
+	0x00000000,
+	0xc0016900,
+	0x00000301,
+	0x00000000,
+	0xc0016900,
+	0x00000312,
+	0xffffffff,
+	0xc0016900,
+	0x00000307,
+	0x00000000,
+	0xc0016900,
+	0x00000308,
+	0x00000000,
+	0xc0016900,
+	0x00000283,
+	0x00000000,
+	0xc0016900,
+	0x00000292,
+	0x00000000,
+	0xc0066900,
+	0x0000010f,
+	0x00000000,
+	0x00000000,
+	0x00000000,
+	0x00000000,
+	0x00000000,
+	0x00000000,
+	0xc0016900,
+	0x00000206,
+	0x00000000,
+	0xc0016900,
+	0x00000207,
+	0x00000000,
+	0xc0016900,
+	0x00000208,
+	0x00000000,
+	0xc0046900,
+	0x00000303,
+	0x3f800000,
+	0x3f800000,
+	0x3f800000,
+	0x3f800000,
+	0xc0016900,
+	0x00000205,
+	0x00000004,
+	0xc0016900,
+	0x00000280,
+	0x00000000,
+	0xc0016900,
+	0x00000281,
+	0x00000000,
+	0xc0016900,
+	0x0000037e,
+	0x00000000,
+	0xc0016900,
+	0x00000382,
+	0x00000000,
+	0xc0016900,
+	0x00000380,
+	0x00000000,
+	0xc0016900,
+	0x00000383,
+	0x00000000,
+	0xc0016900,
+	0x00000381,
+	0x00000000,
+	0xc0016900,
+	0x00000282,
+	0x00000008,
+	0xc0016900,
+	0x00000302,
+	0x0000002d,
+	0xc0016900,
+	0x0000037f,
+	0x00000000,
+	0xc0016900,
+	0x000001b2,
+	0x00000000,
+	0xc0016900,
+	0x000001b6,
+	0x00000000,
+	0xc0016900,
+	0x000001b7,
+	0x00000000,
+	0xc0016900,
+	0x000001b8,
+	0x00000000,
+	0xc0016900,
+	0x000001b9,
+	0x00000000,
+	0xc0016900,
+	0x00000225,
+	0x00000000,
+	0xc0016900,
+	0x00000229,
+	0x00000000,
+	0xc0016900,
+	0x00000237,
+	0x00000000,
+	0xc0016900,
+	0x00000100,
+	0x00000800,
+	0xc0016900,
+	0x00000101,
+	0x00000000,
+	0xc0016900,
+	0x00000102,
+	0x00000000,
+	0xc0016900,
+	0x000002a8,
+	0x00000000,
+	0xc0016900,
+	0x000002a9,
+	0x00000000,
+	0xc0016900,
+	0x00000103,
+	0x00000000,
+	0xc0016900,
+	0x00000284,
+	0x00000000,
+	0xc0016900,
+	0x00000290,
+	0x00000000,
+	0xc0016900,
+	0x00000285,
+	0x00000000,
+	0xc0016900,
+	0x00000286,
+	0x00000000,
+	0xc0016900,
+	0x00000287,
+	0x00000000,
+	0xc0016900,
+	0x00000288,
+	0x00000000,
+	0xc0016900,
+	0x00000289,
+	0x00000000,
+	0xc0016900,
+	0x0000028a,
+	0x00000000,
+	0xc0016900,
+	0x0000028b,
+	0x00000000,
+	0xc0016900,
+	0x0000028c,
+	0x00000000,
+	0xc0016900,
+	0x0000028d,
+	0x00000000,
+	0xc0016900,
+	0x0000028e,
+	0x00000000,
+	0xc0016900,
+	0x0000028f,
+	0x00000000,
+	0xc0016900,
+	0x000002a1,
+	0x00000000,
+	0xc0016900,
+	0x000002a5,
+	0x00000000,
+	0xc0016900,
+	0x000002ac,
+	0x00000000,
+	0xc0016900,
+	0x000002ad,
+	0x00000000,
+	0xc0016900,
+	0x000002ae,
+	0x00000000,
+	0xc0016900,
+	0x000002c8,
+	0x00000000,
+	0xc0016900,
+	0x00000206,
+	0x00000100,
+	0xc0016900,
+	0x00000204,
+	0x00010000,
+	0xc0036e00,
+	0x00000000,
+	0x00000012,
+	0x00000000,
+	0x00000000,
+	0xc0016900,
+	0x0000008f,
+	0x0000000f,
+	0xc0016900,
+	0x000001e8,
+	0x00000001,
+	0xc0016900,
+	0x00000202,
+	0x00cc0000,
+	0xc0016900,
+	0x00000205,
+	0x00000244,
+	0xc0016900,
+	0x00000203,
+	0x00000210,
+	0xc0016900,
+	0x000001b1,
+	0x00000000,
+	0xc0016900,
+	0x00000185,
+	0x00000000,
+	0xc0016900,
+	0x000001b3,
+	0x00000001,
+	0xc0016900,
+	0x000001b4,
+	0x00000000,
+	0xc0016900,
+	0x00000191,
+	0x00000b00,
+	0xc0016900,
+	0x000001b5,
+	0x00000000,
+};
+
+const u32 r7xx_default_state[] =
+{
+	0xc0012800,
+	0x80000000,
+	0x80000000,
+	0xc0004600,
+	0x00000016,
+	0xc0016800,
+	0x00000010,
+	0x00028000,
+	0xc0016800,
+	0x00000010,
+	0x00008000,
+	0xc0016800,
+	0x00000542,
+	0x07000002,
+	0xc0016800,
+	0x000005c5,
+	0x00000000,
+	0xc0016800,
+	0x00000363,
+	0x00004000,
+	0xc0016800,
+	0x0000060c,
+	0x00000000,
+	0xc0016800,
+	0x0000060e,
+	0x00420204,
+	0xc0016f00,
+	0x00000000,
+	0x00000000,
+	0xc0016f00,
+	0x00000001,
+	0x00000000,
+	0xc0096900,
+	0x0000022a,
+	0x00000000,
+	0x00000000,
+	0x00000000,
+	0x00000000,
+	0x00000000,
+	0x00000000,
+	0x00000000,
+	0x00000000,
+	0x00000000,
+	0xc0016900,
+	0x00000004,
+	0x00000000,
+	0xc0016900,
+	0x0000000a,
+	0x00000000,
+	0xc0016900,
+	0x0000000b,
+	0x00000000,
+	0xc0016900,
+	0x0000010c,
+	0x00000000,
+	0xc0016900,
+	0x0000010d,
+	0x00000000,
+	0xc0016900,
+	0x00000200,
+	0x00000000,
+	0xc0016900,
+	0x00000343,
+	0x00000060,
+	0xc0016900,
+	0x00000344,
+	0x00000000,
+	0xc0016900,
+	0x00000351,
+	0x0000aa00,
+	0xc0016900,
+	0x00000104,
+	0x00000000,
+	0xc0016900,
+	0x0000010e,
+	0x00000000,
+	0xc0046900,
+	0x00000105,
+	0x00000000,
+	0x00000000,
+	0x00000000,
+	0x00000000,
+	0xc0046900,
+	0x0000030c,
+	0x01000000,
+	0x00000000,
+	0x00000000,
+	0x00000000,
+	0xc0016900,
+	0x0000008e,
+	0x0000000f,
+	0xc0016900,
+	0x00000080,
+	0x00000000,
+	0xc0016900,
+	0x00000083,
+	0x0000ffff,
+	0xc0016900,
+	0x00000084,
+	0x00000000,
+	0xc0016900,
+	0x00000085,
+	0x20002000,
+	0xc0016900,
+	0x00000086,
+	0x00000000,
+	0xc0016900,
+	0x00000087,
+	0x20002000,
+	0xc0016900,
+	0x00000088,
+	0x00000000,
+	0xc0016900,
+	0x00000089,
+	0x20002000,
+	0xc0016900,
+	0x0000008a,
+	0x00000000,
+	0xc0016900,
+	0x0000008b,
+	0x20002000,
+	0xc0016900,
+	0x0000008c,
+	0xaaaaaaaa,
+	0xc0016900,
+	0x00000094,
+	0x80000000,
+	0xc0016900,
+	0x00000095,
+	0x20002000,
+	0xc0026900,
+	0x000000b4,
+	0x00000000,
+	0x3f800000,
+	0xc0016900,
+	0x00000096,
+	0x80000000,
+	0xc0016900,
+	0x00000097,
+	0x20002000,
+	0xc0026900,
+	0x000000b6,
+	0x00000000,
+	0x3f800000,
+	0xc0016900,
+	0x00000098,
+	0x80000000,
+	0xc0016900,
+	0x00000099,
+	0x20002000,
+	0xc0026900,
+	0x000000b8,
+	0x00000000,
+	0x3f800000,
+	0xc0016900,
+	0x0000009a,
+	0x80000000,
+	0xc0016900,
+	0x0000009b,
+	0x20002000,
+	0xc0026900,
+	0x000000ba,
+	0x00000000,
+	0x3f800000,
+	0xc0016900,
+	0x0000009c,
+	0x80000000,
+	0xc0016900,
+	0x0000009d,
+	0x20002000,
+	0xc0026900,
+	0x000000bc,
+	0x00000000,
+	0x3f800000,
+	0xc0016900,
+	0x0000009e,
+	0x80000000,
+	0xc0016900,
+	0x0000009f,
+	0x20002000,
+	0xc0026900,
+	0x000000be,
+	0x00000000,
+	0x3f800000,
+	0xc0016900,
+	0x000000a0,
+	0x80000000,
+	0xc0016900,
+	0x000000a1,
+	0x20002000,
+	0xc0026900,
+	0x000000c0,
+	0x00000000,
+	0x3f800000,
+	0xc0016900,
+	0x000000a2,
+	0x80000000,
+	0xc0016900,
+	0x000000a3,
+	0x20002000,
+	0xc0026900,
+	0x000000c2,
+	0x00000000,
+	0x3f800000,
+	0xc0016900,
+	0x000000a4,
+	0x80000000,
+	0xc0016900,
+	0x000000a5,
+	0x20002000,
+	0xc0026900,
+	0x000000c4,
+	0x00000000,
+	0x3f800000,
+	0xc0016900,
+	0x000000a6,
+	0x80000000,
+	0xc0016900,
+	0x000000a7,
+	0x20002000,
+	0xc0026900,
+	0x000000c6,
+	0x00000000,
+	0x3f800000,
+	0xc0016900,
+	0x000000a8,
+	0x80000000,
+	0xc0016900,
+	0x000000a9,
+	0x20002000,
+	0xc0026900,
+	0x000000c8,
+	0x00000000,
+	0x3f800000,
+	0xc0016900,
+	0x000000aa,
+	0x80000000,
+	0xc0016900,
+	0x000000ab,
+	0x20002000,
+	0xc0026900,
+	0x000000ca,
+	0x00000000,
+	0x3f800000,
+	0xc0016900,
+	0x000000ac,
+	0x80000000,
+	0xc0016900,
+	0x000000ad,
+	0x20002000,
+	0xc0026900,
+	0x000000cc,
+	0x00000000,
+	0x3f800000,
+	0xc0016900,
+	0x000000ae,
+	0x80000000,
+	0xc0016900,
+	0x000000af,
+	0x20002000,
+	0xc0026900,
+	0x000000ce,
+	0x00000000,
+	0x3f800000,
+	0xc0016900,
+	0x000000b0,
+	0x80000000,
+	0xc0016900,
+	0x000000b1,
+	0x20002000,
+	0xc0026900,
+	0x000000d0,
+	0x00000000,
+	0x3f800000,
+	0xc0016900,
+	0x000000b2,
+	0x80000000,
+	0xc0016900,
+	0x000000b3,
+	0x20002000,
+	0xc0026900,
+	0x000000d2,
+	0x00000000,
+	0x3f800000,
+	0xc0016900,
+	0x00000293,
+	0x00514000,
+	0xc0016900,
+	0x00000300,
+	0x00000000,
+	0xc0016900,
+	0x00000301,
+	0x00000000,
+	0xc0016900,
+	0x00000312,
+	0xffffffff,
+	0xc0016900,
+	0x00000307,
+	0x00000000,
+	0xc0016900,
+	0x00000308,
+	0x00000000,
+	0xc0016900,
+	0x00000283,
+	0x00000000,
+	0xc0016900,
+	0x00000292,
+	0x00000000,
+	0xc0066900,
+	0x0000010f,
+	0x00000000,
+	0x00000000,
+	0x00000000,
+	0x00000000,
+	0x00000000,
+	0x00000000,
+	0xc0016900,
+	0x00000206,
+	0x00000000,
+	0xc0016900,
+	0x00000207,
+	0x00000000,
+	0xc0016900,
+	0x00000208,
+	0x00000000,
+	0xc0046900,
+	0x00000303,
+	0x3f800000,
+	0x3f800000,
+	0x3f800000,
+	0x3f800000,
+	0xc0016900,
+	0x00000205,
+	0x00000004,
+	0xc0016900,
+	0x00000280,
+	0x00000000,
+	0xc0016900,
+	0x00000281,
+	0x00000000,
+	0xc0016900,
+	0x0000037e,
+	0x00000000,
+	0xc0016900,
+	0x00000382,
+	0x00000000,
+	0xc0016900,
+	0x00000380,
+	0x00000000,
+	0xc0016900,
+	0x00000383,
+	0x00000000,
+	0xc0016900,
+	0x00000381,
+	0x00000000,
+	0xc0016900,
+	0x00000282,
+	0x00000008,
+	0xc0016900,
+	0x00000302,
+	0x0000002d,
+	0xc0016900,
+	0x0000037f,
+	0x00000000,
+	0xc0016900,
+	0x000001b2,
+	0x00000001,
+	0xc0016900,
+	0x000001b6,
+	0x00000000,
+	0xc0016900,
+	0x000001b7,
+	0x00000000,
+	0xc0016900,
+	0x000001b8,
+	0x00000000,
+	0xc0016900,
+	0x000001b9,
+	0x00000000,
+	0xc0016900,
+	0x00000225,
+	0x00000000,
+	0xc0016900,
+	0x00000229,
+	0x00000000,
+	0xc0016900,
+	0x00000237,
+	0x00000000,
+	0xc0016900,
+	0x00000100,
+	0x00000800,
+	0xc0016900,
+	0x00000101,
+	0x00000000,
+	0xc0016900,
+	0x00000102,
+	0x00000000,
+	0xc0016900,
+	0x000002a8,
+	0x00000000,
+	0xc0016900,
+	0x000002a9,
+	0x00000000,
+	0xc0016900,
+	0x00000103,
+	0x00000000,
+	0xc0016900,
+	0x00000284,
+	0x00000000,
+	0xc0016900,
+	0x00000290,
+	0x00000000,
+	0xc0016900,
+	0x00000285,
+	0x00000000,
+	0xc0016900,
+	0x00000286,
+	0x00000000,
+	0xc0016900,
+	0x00000287,
+	0x00000000,
+	0xc0016900,
+	0x00000288,
+	0x00000000,
+	0xc0016900,
+	0x00000289,
+	0x00000000,
+	0xc0016900,
+	0x0000028a,
+	0x00000000,
+	0xc0016900,
+	0x0000028b,
+	0x00000000,
+	0xc0016900,
+	0x0000028c,
+	0x00000000,
+	0xc0016900,
+	0x0000028d,
+	0x00000000,
+	0xc0016900,
+	0x0000028e,
+	0x00000000,
+	0xc0016900,
+	0x0000028f,
+	0x00000000,
+	0xc0016900,
+	0x000002a1,
+	0x00000000,
+	0xc0016900,
+	0x000002a5,
+	0x00000000,
+	0xc0016900,
+	0x000002ac,
+	0x00000000,
+	0xc0016900,
+	0x000002ad,
+	0x00000000,
+	0xc0016900,
+	0x000002ae,
+	0x00000000,
+	0xc0016900,
+	0x000002c8,
+	0x00000000,
+	0xc0016900,
+	0x00000206,
+	0x00000100,
+	0xc0016900,
+	0x00000204,
+	0x00010000,
+	0xc0036e00,
+	0x00000000,
+	0x00000012,
+	0x00000000,
+	0x00000000,
+	0xc0016900,
+	0x0000008f,
+	0x0000000f,
+	0xc0016900,
+	0x000001e8,
+	0x00000001,
+	0xc0016900,
+	0x00000202,
+	0x00cc0000,
+	0xc0016900,
+	0x00000205,
+	0x00000244,
+	0xc0016900,
+	0x00000203,
+	0x00000210,
+	0xc0016900,
+	0x000001b1,
+	0x00000000,
+	0xc0016900,
+	0x00000185,
+	0x00000000,
+	0xc0016900,
+	0x000001b3,
+	0x00000001,
+	0xc0016900,
+	0x000001b4,
+	0x00000000,
+	0xc0016900,
+	0x00000191,
+	0x00000b00,
+	0xc0016900,
+	0x000001b5,
+	0x00000000,
+};
+
+/* same for r6xx/r7xx */
+const u32 r6xx_vs[] =
+{
+	0x00000004,
+	0x81000000,
+	0x0000203c,
+	0x94000b08,
+	0x00004000,
+	0x14200b1a,
+	0x00000000,
+	0x00000000,
+	0x3c000000,
+	0x68cd1000,
+	0x00080000,
+	0x00000000,
+};
+
+const u32 r6xx_ps[] =
+{
+	0x00000002,
+	0x80800000,
+	0x00000000,
+	0x94200688,
+	0x00000010,
+	0x000d1000,
+	0xb0800000,
+	0x00000000,
+};
+
+const u32 r6xx_ps_size = ARRAY_SIZE(r6xx_ps);
+const u32 r6xx_vs_size = ARRAY_SIZE(r6xx_vs);
+const u32 r6xx_default_size = ARRAY_SIZE(r6xx_default_state);
+const u32 r7xx_default_size = ARRAY_SIZE(r7xx_default_state);
