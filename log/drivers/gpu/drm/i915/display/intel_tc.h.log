commit edc0e09c6ba81fc7a06cc68deec430519b7d18d8
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Wed Mar 11 17:54:20 2020 +0200

    drm/i915: Turn intel_digital_port_connected() in a vfunc
    
    Let's get rid of the platform if ladders in
    intel_digital_port_connected() and make it a vfunc. Now the if
    ladders are at the encoder initialization which makes them a bit
    less convoluted.
    
    v2: Add forward decl for intel_encoder in intel_tc.h
    v3: Duplicate stuff to avoid exposing platform specific
        functions across files (Jani)
    
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200311155422.3043-2-ville.syrjala@linux.intel.com
    Reviewed-by: Imre Deak <imre.deak@intel.com>

diff --git a/drivers/gpu/drm/i915/display/intel_tc.h b/drivers/gpu/drm/i915/display/intel_tc.h
index 463f1b3c836f..b619e4736f85 100644
--- a/drivers/gpu/drm/i915/display/intel_tc.h
+++ b/drivers/gpu/drm/i915/display/intel_tc.h
@@ -10,8 +10,9 @@
 #include <linux/types.h>
 
 struct intel_digital_port;
+struct intel_encoder;
 
-bool intel_tc_port_connected(struct intel_digital_port *dig_port);
+bool intel_tc_port_connected(struct intel_encoder *encoder);
 u32 intel_tc_port_get_lane_mask(struct intel_digital_port *dig_port);
 u32 intel_tc_port_get_pin_assignment_mask(struct intel_digital_port *dig_port);
 int intel_tc_port_fia_max_lane_count(struct intel_digital_port *dig_port);

commit 3b51be4e4061bd5e0f1b73f56cfecaa879c76d51
Author: Clinton A Taylor <clinton.a.taylor@intel.com>
Date:   Thu Sep 26 14:06:56 2019 -0700

    drm/i915/tc: Update DP_MODE programming
    
    BSpec was updated(r146548) with a new MG_DP_MODE Programming table,
    now taking in consideration the pin assignment and allowing us to
    optimize power by shutting down available but not needed lanes.
    
    It was tested on ICL and TGL, with adaptors that used pin assignment
    C and B, reversing the connector and going to different modes testing
    the not needed lane shutdown.
    
    v5:
    Using crtc_state->lane_count instead of dp.lane_count
    
    BSpec: 21735
    BSpec: 49292
    
    Cc: Imre Deak <imre.deak@intel.com>
    Cc: Lucas De Marchi <lucas.demarchi@intel.com>
    Reviewed-by: Imre Deak <imre.deak@intel.com>
    Signed-off-by: Clinton A Taylor <clinton.a.taylor@intel.com>
    Signed-off-by: José Roberto de Souza <jose.souza@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190926210659.56317-1-jose.souza@intel.com

diff --git a/drivers/gpu/drm/i915/display/intel_tc.h b/drivers/gpu/drm/i915/display/intel_tc.h
index 783d75531435..463f1b3c836f 100644
--- a/drivers/gpu/drm/i915/display/intel_tc.h
+++ b/drivers/gpu/drm/i915/display/intel_tc.h
@@ -13,6 +13,7 @@ struct intel_digital_port;
 
 bool intel_tc_port_connected(struct intel_digital_port *dig_port);
 u32 intel_tc_port_get_lane_mask(struct intel_digital_port *dig_port);
+u32 intel_tc_port_get_pin_assignment_mask(struct intel_digital_port *dig_port);
 int intel_tc_port_fia_max_lane_count(struct intel_digital_port *dig_port);
 void intel_tc_port_set_fia_lane_count(struct intel_digital_port *dig_port,
 				      int required_lanes);

commit d0d392a8deed8442191bdf5b2d6bb17e04c928b6
Author: Jani Nikula <jani.nikula@intel.com>
Date:   Tue Aug 6 14:37:00 2019 +0300

    drm/i915/tc: un-inline intel_tc_port_ref_held()
    
    Avoid including the intel_drv.h mega header from other header files to
    make further header cleanup easier.
    
    v2: restore the over-eagerly dropped <linux/types.h> (Imre)
    
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190806113700.18816-1-jani.nikula@intel.com

diff --git a/drivers/gpu/drm/i915/display/intel_tc.h b/drivers/gpu/drm/i915/display/intel_tc.h
index 22fe922ac9cf..783d75531435 100644
--- a/drivers/gpu/drm/i915/display/intel_tc.h
+++ b/drivers/gpu/drm/i915/display/intel_tc.h
@@ -9,7 +9,7 @@
 #include <linux/mutex.h>
 #include <linux/types.h>
 
-#include "intel_drv.h"
+struct intel_digital_port;
 
 bool intel_tc_port_connected(struct intel_digital_port *dig_port);
 u32 intel_tc_port_get_lane_mask(struct intel_digital_port *dig_port);
@@ -23,12 +23,7 @@ void intel_tc_port_unlock(struct intel_digital_port *dig_port);
 void intel_tc_port_get_link(struct intel_digital_port *dig_port,
 			    int required_lanes);
 void intel_tc_port_put_link(struct intel_digital_port *dig_port);
-
-static inline int intel_tc_port_ref_held(struct intel_digital_port *dig_port)
-{
-	return mutex_is_locked(&dig_port->tc_lock) ||
-	       dig_port->tc_link_refcount;
-}
+bool intel_tc_port_ref_held(struct intel_digital_port *dig_port);
 
 void intel_tc_port_init(struct intel_digital_port *dig_port, bool is_legacy);
 

commit 9d44dcb9088aadd11718a7ad5a8567d6b8a1174a
Author: Lucas De Marchi <lucas.demarchi@intel.com>
Date:   Mon Jul 8 10:28:14 2019 -0700

    drm/i915: move intel_ddi_set_fia_lane_count to intel_tc.c
    
    PORT_TX_DFLEXDPMLE1 is a FIA register so move it to intel_tc.c where we
    access other FIA registers. In Tiger Lake we have multiple/modular FIAs
    so it makes sense to start moving all access to their registers to a
    common place.
    
    While at it, make it clear that we will only ever call this function
    for ports with TC phy. Previously we were relying on tc_mode being
    TC_PORT_TBT_ALT for combo phy ports. However it's confusing since in
    this same function we have checks for is_tc_port. Also, if we manage to
    make each phy access only their own field, we may in future add them as
    a union inside intel_digital_port.
    
    v2: Fix coding style while moving the code
    
    Signed-off-by: Lucas De Marchi <lucas.demarchi@intel.com>
    Reviewed-by: Imre Deak <imre.deak@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190708172815.6814-4-lucas.demarchi@intel.com

diff --git a/drivers/gpu/drm/i915/display/intel_tc.h b/drivers/gpu/drm/i915/display/intel_tc.h
index 706c5bc050a5..22fe922ac9cf 100644
--- a/drivers/gpu/drm/i915/display/intel_tc.h
+++ b/drivers/gpu/drm/i915/display/intel_tc.h
@@ -14,6 +14,8 @@
 bool intel_tc_port_connected(struct intel_digital_port *dig_port);
 u32 intel_tc_port_get_lane_mask(struct intel_digital_port *dig_port);
 int intel_tc_port_fia_max_lane_count(struct intel_digital_port *dig_port);
+void intel_tc_port_set_fia_lane_count(struct intel_digital_port *dig_port,
+				      int required_lanes);
 
 void intel_tc_port_sanitize(struct intel_digital_port *dig_port);
 void intel_tc_port_lock(struct intel_digital_port *dig_port);

commit c99fd7b3908e287ccd20be4f9eefe597c7d354fd
Author: Lucas De Marchi <lucas.demarchi@intel.com>
Date:   Tue Jul 9 08:54:03 2019 -0700

    drm/i915: fix include order in intel_tc.*
    
    Separate local includes with a blank line and sort the groups
    alphabetically.
    
    v2: don't make intel_tc.h be the first include
    v3: don't make local includes be included first
    
    Signed-off-by: Lucas De Marchi <lucas.demarchi@intel.com>
    Reviewed-by: Imre Deak <imre.deak@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190709155403.29370-1-lucas.demarchi@intel.com

diff --git a/drivers/gpu/drm/i915/display/intel_tc.h b/drivers/gpu/drm/i915/display/intel_tc.h
index 0d8411d4a91d..706c5bc050a5 100644
--- a/drivers/gpu/drm/i915/display/intel_tc.h
+++ b/drivers/gpu/drm/i915/display/intel_tc.h
@@ -6,8 +6,9 @@
 #ifndef __INTEL_TC_H__
 #define __INTEL_TC_H__
 
-#include <linux/types.h>
 #include <linux/mutex.h>
+#include <linux/types.h>
+
 #include "intel_drv.h"
 
 bool intel_tc_port_connected(struct intel_digital_port *dig_port);

commit a171f8e7f466345a2a0c7bacdc7992777e1c1f37
Author: Imre Deak <imre.deak@intel.com>
Date:   Fri Jun 28 17:36:34 2019 +0300

    drm/i915: Remove unneeded disconnect in TypeC legacy port mode
    
    Disconnecting the TypeC PHY when the port is in legacy mode is not
    necessary:
    - BSpec doesn't specify a disconnect sequence for legacy mode.
    - The use of the PHY is dedicated for the display in legacy mode.
    - We keep the PHY always connected during runtime as well in legacy
      mode.
    
    We disconnect the PHY when needed during a disabling modeset for the
    port, so we can also remove the disconnect call from the destroy hook.
    
    Cc: José Roberto de Souza <jose.souza@intel.com>
    Cc: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Imre Deak <imre.deak@intel.com>
    Reviewed-by: José Roberto de Souza <jose.souza@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190628143635.22066-23-imre.deak@intel.com

diff --git a/drivers/gpu/drm/i915/display/intel_tc.h b/drivers/gpu/drm/i915/display/intel_tc.h
index 8adc107cdbcb..0d8411d4a91d 100644
--- a/drivers/gpu/drm/i915/display/intel_tc.h
+++ b/drivers/gpu/drm/i915/display/intel_tc.h
@@ -10,8 +10,6 @@
 #include <linux/mutex.h>
 #include "intel_drv.h"
 
-void icl_tc_phy_disconnect(struct intel_digital_port *dig_port);
-
 bool intel_tc_port_connected(struct intel_digital_port *dig_port);
 u32 intel_tc_port_get_lane_mask(struct intel_digital_port *dig_port);
 int intel_tc_port_fia_max_lane_count(struct intel_digital_port *dig_port);

commit d5ce34da31456a28fb2c35db0d0f57b7e4af477e
Author: Imre Deak <imre.deak@intel.com>
Date:   Fri Jun 28 17:36:33 2019 +0300

    drm/i915: Add state verification for the TypeC port mode
    
    Add state verification for the TypeC port mode wrt. the port's AUX power
    well enabling/disabling. Also check the correctness of changing the port
    mode:
    - When enabling/disabling the AUX power well for a TypeC port we must hold
      the TypeC port lock - the case for AUX transfers - or hold a Type C
      port link reference - the case for modeset enabling/disabling.
    - When changing the TypeC port mode the port's AUX power domain must be
      disabled.
    
    v2: (Ville)
    - Simplify power_well_async_ref_count().
    - Fix the commit log, clarifying what are the valid conditions to
      enable/disable the AUX power wells.
    
    Cc: José Roberto de Souza <jose.souza@intel.com>
    Cc: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Imre Deak <imre.deak@intel.com>
    Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190628143635.22066-22-imre.deak@intel.com

diff --git a/drivers/gpu/drm/i915/display/intel_tc.h b/drivers/gpu/drm/i915/display/intel_tc.h
index 31af7be96070..8adc107cdbcb 100644
--- a/drivers/gpu/drm/i915/display/intel_tc.h
+++ b/drivers/gpu/drm/i915/display/intel_tc.h
@@ -7,8 +7,8 @@
 #define __INTEL_TC_H__
 
 #include <linux/types.h>
-
-struct intel_digital_port;
+#include <linux/mutex.h>
+#include "intel_drv.h"
 
 void icl_tc_phy_disconnect(struct intel_digital_port *dig_port);
 
@@ -23,6 +23,12 @@ void intel_tc_port_get_link(struct intel_digital_port *dig_port,
 			    int required_lanes);
 void intel_tc_port_put_link(struct intel_digital_port *dig_port);
 
+static inline int intel_tc_port_ref_held(struct intel_digital_port *dig_port)
+{
+	return mutex_is_locked(&dig_port->tc_lock) ||
+	       dig_port->tc_link_refcount;
+}
+
 void intel_tc_port_init(struct intel_digital_port *dig_port, bool is_legacy);
 
 #endif /* __INTEL_TC_H__ */

commit 24a7bfe0c2d7aec06956d48808cdfe2756f618ad
Author: Imre Deak <imre.deak@intel.com>
Date:   Fri Jun 28 17:36:32 2019 +0300

    drm/i915: Keep the TypeC port mode fixed when the port is active
    
    The TypeC port mode needs to stay fixed whenever the port is active. Do
    that by introducing a tc_link_refcount to account for active ports,
    avoiding changing the port mode if a reference is held.
    
    During the modeset commit phase we also have to reset the port mode and
    update the active PLL reflecting the new port mode. We can do this only
    once the port and its old PLL has been already disabled. Add the new
    encoder update_prepare/complete hooks that are called around the whole
    enabling sequence. The TypeC specific hooks of these will reset the port
    mode, update the active PLL if the port will be active and ensure that
    the port mode will stay fixed for the duration of the whole enabling
    sequence by holding a tc_link_refcount.
    
    During the port enabling, the pre_pll_enable/post_pll_disable hooks will
    take/release a tc_link_refcount to ensure the port mode stays fixed
    while the port is active.
    
    Changing the port mode should also be avoided during connector detection
    and AUX transfers if the port is active, we'll do that by checking the
    port's tc_link_refcount.
    
    When resetting the port mode we also have to take into account the
    maximum lanes provided by the FIA. It's guaranteed to be 4 in TBT-alt
    and legacy modes, but there may be less lanes available in DP-alt mode,
    in which case we have to fall back to TBT-alt mode.
    
    While at it also update icl_tc_phy_connect()'s code comment, reflecting
    the current way of switching the port mode.
    
    v2:
    - Add the update_prepare/complete hooks to the encoder instead of the
      connector. (Ville)
    - Simplify intel_connector_needs_modeset() by removing redundant if.
      (Ville)
    v3:
    - Fix sparse warning, marking static functions as such.
    v4:
    - Rebase on drm-tip.
    
    Cc: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Cc: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Signed-off-by: Imre Deak <imre.deak@intel.com>
    Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190628143635.22066-21-imre.deak@intel.com

diff --git a/drivers/gpu/drm/i915/display/intel_tc.h b/drivers/gpu/drm/i915/display/intel_tc.h
index b5af2fe60b22..31af7be96070 100644
--- a/drivers/gpu/drm/i915/display/intel_tc.h
+++ b/drivers/gpu/drm/i915/display/intel_tc.h
@@ -19,6 +19,9 @@ int intel_tc_port_fia_max_lane_count(struct intel_digital_port *dig_port);
 void intel_tc_port_sanitize(struct intel_digital_port *dig_port);
 void intel_tc_port_lock(struct intel_digital_port *dig_port);
 void intel_tc_port_unlock(struct intel_digital_port *dig_port);
+void intel_tc_port_get_link(struct intel_digital_port *dig_port,
+			    int required_lanes);
+void intel_tc_port_put_link(struct intel_digital_port *dig_port);
 
 void intel_tc_port_init(struct intel_digital_port *dig_port, bool is_legacy);
 

commit 8c10e2262663951ab4d43d4f74e282566c04e00c
Author: Imre Deak <imre.deak@intel.com>
Date:   Fri Jun 28 17:36:26 2019 +0300

    drm/i915: Keep the TypeC port mode fixed for detect/AUX transfers
    
    We must keep the TypeC port mode fixed for the duration of the connector
    detection and each AUX transfers. Add a new TypeC lock holding it around
    these two sequences. For consistency also hold the lock during the port
    mode sanitization.
    
    Whenever resetting the port mode (only during the detection for now) the
    port's AUX power domain must be disabled already. Flush the async power
    domain disabling work to ensure this.
    
    A follow-up patch will make the port mode changing more robust by
    postponing the change for active ports.
    
    v2:
    - Fix checkpatch issue: missing annotation for tc_lock.
    
    Cc: José Roberto de Souza <jose.souza@intel.com>
    Cc: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Cc: Paulo Zanoni <paulo.r.zanoni@intel.com>
    Cc: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Signed-off-by: Imre Deak <imre.deak@intel.com>
    Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190628143635.22066-15-imre.deak@intel.com

diff --git a/drivers/gpu/drm/i915/display/intel_tc.h b/drivers/gpu/drm/i915/display/intel_tc.h
index 5a7876a74522..b5af2fe60b22 100644
--- a/drivers/gpu/drm/i915/display/intel_tc.h
+++ b/drivers/gpu/drm/i915/display/intel_tc.h
@@ -17,6 +17,8 @@ u32 intel_tc_port_get_lane_mask(struct intel_digital_port *dig_port);
 int intel_tc_port_fia_max_lane_count(struct intel_digital_port *dig_port);
 
 void intel_tc_port_sanitize(struct intel_digital_port *dig_port);
+void intel_tc_port_lock(struct intel_digital_port *dig_port);
+void intel_tc_port_unlock(struct intel_digital_port *dig_port);
 
 void intel_tc_port_init(struct intel_digital_port *dig_port, bool is_legacy);
 

commit 32691b58d157584b18faabf25cce755c1e31c370
Author: Imre Deak <imre.deak@intel.com>
Date:   Fri Jun 28 17:36:25 2019 +0300

    drm/i915: Fix the TypeC port mode sanitization during loading/resume
    
    For using the correct AUX power domains we have to sanitize the TypeC
    port mode early, so move that before encoder sanitization. To do this
    properly read out the actual port mode instead of just relying on the
    VBT legacy port flag (which can be incorrect).
    
    We also verify that the PHY is connected as expected if the port is
    active. In case the port is inactive we connect the PHY in case of a
    legacy port - as we did so far. The PHY will be connected during
    detection for DP-alt mode - as it was done so far. For TBT-alt mode
    nothing needs to be done to connect the PHY.
    
    v2:
    - Use DRM_DEBUG_KMS instead of DRM_DEBUG_DRIVER. (José)
    v3:
    - Detect TCCOLD any time PORT_TX_DFLEXDPCSSS is read. (Ville)
    
    Cc: José Roberto de Souza <jose.souza@intel.com>
    Cc: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Cc: Paulo Zanoni <paulo.r.zanoni@intel.com>
    Cc: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Signed-off-by: Imre Deak <imre.deak@intel.com>
    Reviewed-by: José Roberto de Souza <jose.souza@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190628143635.22066-14-imre.deak@intel.com

diff --git a/drivers/gpu/drm/i915/display/intel_tc.h b/drivers/gpu/drm/i915/display/intel_tc.h
index 8c338c45796d..5a7876a74522 100644
--- a/drivers/gpu/drm/i915/display/intel_tc.h
+++ b/drivers/gpu/drm/i915/display/intel_tc.h
@@ -16,6 +16,8 @@ bool intel_tc_port_connected(struct intel_digital_port *dig_port);
 u32 intel_tc_port_get_lane_mask(struct intel_digital_port *dig_port);
 int intel_tc_port_fia_max_lane_count(struct intel_digital_port *dig_port);
 
+void intel_tc_port_sanitize(struct intel_digital_port *dig_port);
+
 void intel_tc_port_init(struct intel_digital_port *dig_port, bool is_legacy);
 
 #endif /* __INTEL_TC_H__ */

commit c905eb28bd3f43e96ef9180971f7809738caaa27
Author: Imre Deak <imre.deak@intel.com>
Date:   Fri Jun 28 17:36:21 2019 +0300

    drm/i915: Factor out common parts from TypeC port handling functions
    
    Factor out helpers reading/parsing the TypeC specific registers, making
    current users of them clearer and letting us use them later.
    
    While at it also:
    - Simplify icl_tc_phy_connect() with an early return in legacy mode.
    - Simplify the live status check using one bitmask for all HPD bits.
    - Remove a micro-optimisation of the repeated safe-mode clearing.
    - Make sure we fix the legacy port flag in all cases.
    
    Except for the last two, no functional changes.
    
    v2:
    - Don't do reg reads at variable declarations. (Jani)
    - Prevent constant truncated compiler warning when assigning the
      valid_hpd_mask. (Nick)
    - s/intel_tc_port_get_lane_info/intel_tc_port_get_lane_mask/ (Ville)
    v3:
    - Make valid_hpd_mask init clear. (Ville)
    
    Cc: José Roberto de Souza <jose.souza@intel.com>
    Cc: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Cc: Paulo Zanoni <paulo.r.zanoni@intel.com>
    Cc: Jani Nikula <jani.nikula@intel.com>
    Cc: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Imre Deak <imre.deak@intel.com>
    Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190628143635.22066-10-imre.deak@intel.com

diff --git a/drivers/gpu/drm/i915/display/intel_tc.h b/drivers/gpu/drm/i915/display/intel_tc.h
index ca1735303252..8c338c45796d 100644
--- a/drivers/gpu/drm/i915/display/intel_tc.h
+++ b/drivers/gpu/drm/i915/display/intel_tc.h
@@ -13,6 +13,7 @@ struct intel_digital_port;
 void icl_tc_phy_disconnect(struct intel_digital_port *dig_port);
 
 bool intel_tc_port_connected(struct intel_digital_port *dig_port);
+u32 intel_tc_port_get_lane_mask(struct intel_digital_port *dig_port);
 int intel_tc_port_fia_max_lane_count(struct intel_digital_port *dig_port);
 
 void intel_tc_port_init(struct intel_digital_port *dig_port, bool is_legacy);

commit ab7bc4e1a5508e5cb974985fba325d80086b3f10
Author: Imre Deak <imre.deak@intel.com>
Date:   Fri Jun 28 17:36:20 2019 +0300

    drm/i915: Unify the TypeC port notation in debug/error messages
    
    Unify the TypeC port notation in log messages, so that it matches the
    spec. For instance the first ICL TypeC port will read as 'Port C/TC#1'.
    
    v2:
    - Format print the name only once. (José)
    
    Cc: José Roberto de Souza <jose.souza@intel.com>
    Cc: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Cc: Paulo Zanoni <paulo.r.zanoni@intel.com>
    Signed-off-by: Imre Deak <imre.deak@intel.com>
    Reviewed-by: José Roberto de Souza <jose.souza@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190628143635.22066-9-imre.deak@intel.com

diff --git a/drivers/gpu/drm/i915/display/intel_tc.h b/drivers/gpu/drm/i915/display/intel_tc.h
index 0c65675394e5..ca1735303252 100644
--- a/drivers/gpu/drm/i915/display/intel_tc.h
+++ b/drivers/gpu/drm/i915/display/intel_tc.h
@@ -15,4 +15,6 @@ void icl_tc_phy_disconnect(struct intel_digital_port *dig_port);
 bool intel_tc_port_connected(struct intel_digital_port *dig_port);
 int intel_tc_port_fia_max_lane_count(struct intel_digital_port *dig_port);
 
+void intel_tc_port_init(struct intel_digital_port *dig_port, bool is_legacy);
+
 #endif /* __INTEL_TC_H__ */

commit bc85328ff431e41bea3fe88e74e738f2d372e6d1
Author: Imre Deak <imre.deak@intel.com>
Date:   Fri Jun 28 17:36:15 2019 +0300

    drm/i915: Move the TypeC port handling code to a separate file
    
    Move the TypeC port handling functions to a new file for clarity.
    
    While at it:
    - s/icl_tc_port_connected()/intel_tc_port_connected()/
      icl_tc_phy_disconnect(), will be unexported later.
    
    - s/intel_dp_get_fia_supported_lane_count()/
        intel_tc_port_fia_max_lane_count()/
      It's used for HDMI legacy mode too.
    
    - Simplify function interfaces by passing only dig_port to them.
    
    No functional changes.
    
    v2:
    - Fix checkpatch issues: +1/-1 empty lines in intel_tc.c and add
      missing SPDX to intel_tc.h. (Jani)
    
    Cc: Animesh Manna <animesh.manna@intel.com>
    Cc: Paulo Zanoni <paulo.r.zanoni@intel.com>
    Cc: José Roberto de Souza <jose.souza@intel.com>
    Cc: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Imre Deak <imre.deak@intel.com>
    Acked-by: Jani Nikula <jani.nikula@intel.com>
    Reviewed-by: José Roberto de Souza <jose.souza@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190628143635.22066-4-imre.deak@intel.com

diff --git a/drivers/gpu/drm/i915/display/intel_tc.h b/drivers/gpu/drm/i915/display/intel_tc.h
new file mode 100644
index 000000000000..0c65675394e5
--- /dev/null
+++ b/drivers/gpu/drm/i915/display/intel_tc.h
@@ -0,0 +1,18 @@
+/* SPDX-License-Identifier: MIT */
+/*
+ * Copyright © 2019 Intel Corporation
+ */
+
+#ifndef __INTEL_TC_H__
+#define __INTEL_TC_H__
+
+#include <linux/types.h>
+
+struct intel_digital_port;
+
+void icl_tc_phy_disconnect(struct intel_digital_port *dig_port);
+
+bool intel_tc_port_connected(struct intel_digital_port *dig_port);
+int intel_tc_port_fia_max_lane_count(struct intel_digital_port *dig_port);
+
+#endif /* __INTEL_TC_H__ */
