commit 6dc0d028f53945ca8de3e61a149f103f100d42df
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Mon Apr 27 16:45:54 2020 +0100

    drm/i915/gt: Fix up clock frequency
    
    The bspec lists both the clock frequency and the effective interval. The
    interval corresponds to observed behaviour, so adjust the frequency to
    match.
    
    v2: Mika rightfully asked if we could measure the clock frequency from a
    selftest.
    
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Mika Kuoppala <mika.kuoppala@linux.intel.com>
    Acked-by: Mika Kuoppala <mika.kuoppala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200427154554.12736-1-chris@chris-wilson.co.uk

diff --git a/drivers/gpu/drm/i915/gt/selftest_rps.h b/drivers/gpu/drm/i915/gt/selftest_rps.h
index 76c4b19553e6..6e82a631cfa1 100644
--- a/drivers/gpu/drm/i915/gt/selftest_rps.h
+++ b/drivers/gpu/drm/i915/gt/selftest_rps.h
@@ -7,6 +7,7 @@
 #define SELFTEST_RPS_H
 
 int live_rps_control(void *arg);
+int live_rps_clock_interval(void *arg);
 int live_rps_frequency_cs(void *arg);
 int live_rps_frequency_srm(void *arg);
 int live_rps_power(void *arg);

commit e42a969e725c2ff93a0a66ca5d2c27d59310056e
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Mon Apr 20 18:27:39 2020 +0100

    drm/i915/selftests: Exercise dynamic reclocking with RPS
    
    After having testing all the RPS controls individually, we need to take
    a step back and check how our RPS worker integrates them to perform
    dynamic GPU reclocking. So do that by submitting a spinner and wait and
    see what happens.
    
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Reviewed-by: Mika Kuoppala <mika.kuoppala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200420172739.11620-6-chris@chris-wilson.co.uk

diff --git a/drivers/gpu/drm/i915/gt/selftest_rps.h b/drivers/gpu/drm/i915/gt/selftest_rps.h
index 22e46c5341c5..76c4b19553e6 100644
--- a/drivers/gpu/drm/i915/gt/selftest_rps.h
+++ b/drivers/gpu/drm/i915/gt/selftest_rps.h
@@ -9,7 +9,8 @@
 int live_rps_control(void *arg);
 int live_rps_frequency_cs(void *arg);
 int live_rps_frequency_srm(void *arg);
-int live_rps_interrupt(void *arg);
 int live_rps_power(void *arg);
+int live_rps_interrupt(void *arg);
+int live_rps_dynamic(void *arg);
 
 #endif /* SELFTEST_RPS_H */

commit 0eaccc4b180c0ded33e0b71491aac09fcb323dac
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Mon Apr 20 18:27:37 2020 +0100

    drm/i915/selftests: Split RPS frequency measurement
    
    Split the frequency measurement into two modes, so that we can judge the
    impact of the llc setup on top of the pure CS frequency scaling.
    
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Reviewed-by: Mika Kuoppala <mika.kuoppala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200420172739.11620-4-chris@chris-wilson.co.uk

diff --git a/drivers/gpu/drm/i915/gt/selftest_rps.h b/drivers/gpu/drm/i915/gt/selftest_rps.h
index be0bf8e3f639..22e46c5341c5 100644
--- a/drivers/gpu/drm/i915/gt/selftest_rps.h
+++ b/drivers/gpu/drm/i915/gt/selftest_rps.h
@@ -7,7 +7,8 @@
 #define SELFTEST_RPS_H
 
 int live_rps_control(void *arg);
-int live_rps_frequency(void *arg);
+int live_rps_frequency_cs(void *arg);
+int live_rps_frequency_srm(void *arg);
 int live_rps_interrupt(void *arg);
 int live_rps_power(void *arg);
 

commit 9938ee2e631c329ff335884c51ff78ebe5224722
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Mon Apr 20 18:27:36 2020 +0100

    drm/i915/selftests: Check RPS controls
    
    Check that the GPU does respond to our RPS frequency requests by setting
    our desired frequency.
    
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Reviewed-by: Mika Kuoppala <mika.kuoppala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200420172739.11620-3-chris@chris-wilson.co.uk

diff --git a/drivers/gpu/drm/i915/gt/selftest_rps.h b/drivers/gpu/drm/i915/gt/selftest_rps.h
index 07c2bddf8899..be0bf8e3f639 100644
--- a/drivers/gpu/drm/i915/gt/selftest_rps.h
+++ b/drivers/gpu/drm/i915/gt/selftest_rps.h
@@ -6,6 +6,7 @@
 #ifndef SELFTEST_RPS_H
 #define SELFTEST_RPS_H
 
+int live_rps_control(void *arg);
 int live_rps_frequency(void *arg);
 int live_rps_interrupt(void *arg);
 int live_rps_power(void *arg);

commit 4ba74e53ada3c7cca9808d0c1332d34133f06575
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Mon Apr 20 18:27:34 2020 +0100

    drm/i915/selftests: Verify frequency scaling with RPS
    
    One of the core tenents of reclocking the GPU is that its throughput
    scales with the clock frequency. We can observe this by incrementing a
    loop counter on the GPU, and compare the different execution rates at
    the notional RPS frequencies.
    
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Reviewed-by: Mika Kuoppala <mika.kuoppala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200420172739.11620-1-chris@chris-wilson.co.uk

diff --git a/drivers/gpu/drm/i915/gt/selftest_rps.h b/drivers/gpu/drm/i915/gt/selftest_rps.h
index cad515a7f0e5..07c2bddf8899 100644
--- a/drivers/gpu/drm/i915/gt/selftest_rps.h
+++ b/drivers/gpu/drm/i915/gt/selftest_rps.h
@@ -6,6 +6,7 @@
 #ifndef SELFTEST_RPS_H
 #define SELFTEST_RPS_H
 
+int live_rps_frequency(void *arg);
 int live_rps_interrupt(void *arg);
 int live_rps_power(void *arg);
 

commit c43dd6b4144aa8f27ff9a1c4872f6ab49a4ba3ec
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Fri Apr 17 16:20:18 2020 +0100

    drm/i915/selftests: Check power consumption at min/max frequencies
    
    A basic premise of RPS is that at lower frequencies, not only do we run
    slower, but we save power compared to higher frequencies. For example,
    when idle, we set the minimum frequency just in case there is some
    residual current. Since the power curve should be a physical
    relationship, if we find no power saving it's likely that we've broken
    our frequency handling, so test!
    
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Mika Kuoppala <mika.kuoppala@linux.intel.com>
    Cc: Andi Shyti <andi.shyti@intel.com>
    Reviewed-by: Andi Shyti <andi.shyti@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200417152018.13079-2-chris@chris-wilson.co.uk

diff --git a/drivers/gpu/drm/i915/gt/selftest_rps.h b/drivers/gpu/drm/i915/gt/selftest_rps.h
index abba66420996..cad515a7f0e5 100644
--- a/drivers/gpu/drm/i915/gt/selftest_rps.h
+++ b/drivers/gpu/drm/i915/gt/selftest_rps.h
@@ -7,5 +7,6 @@
 #define SELFTEST_RPS_H
 
 int live_rps_interrupt(void *arg);
+int live_rps_power(void *arg);
 
 #endif /* SELFTEST_RPS_H */

commit 46495adc6ca74bb5903b3064b32afe96830a38e8
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Wed Apr 15 18:03:17 2020 +0100

    drm/i915/selftests: Exercise basic RPS interrupt generation
    
    Since we depend upon RPS generating interrupts after evaluation
    intervals to determine when to up/down clock the GPU, it is imperative
    that we successfully enable interrupt generation! Verify that we do see
    an interrupt if we keep the GPU busy for an entire EI.
    
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Reviewed-by: Andi Shyti <andi.shyti@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200415170318.16771-1-chris@chris-wilson.co.uk

diff --git a/drivers/gpu/drm/i915/gt/selftest_rps.h b/drivers/gpu/drm/i915/gt/selftest_rps.h
new file mode 100644
index 000000000000..abba66420996
--- /dev/null
+++ b/drivers/gpu/drm/i915/gt/selftest_rps.h
@@ -0,0 +1,11 @@
+/* SPDX-License-Identifier: MIT */
+/*
+ * Copyright Â© 2020 Intel Corporation
+ */
+
+#ifndef SELFTEST_RPS_H
+#define SELFTEST_RPS_H
+
+int live_rps_interrupt(void *arg);
+
+#endif /* SELFTEST_RPS_H */
