commit b24413180f5600bcb3bb70fbed5cf186b60864bd
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Nov 1 15:07:57 2017 +0100

    License cleanup: add SPDX GPL-2.0 license identifier to files with no license
    
    Many source files in the tree are missing licensing information, which
    makes it harder for compliance tools to determine the correct license.
    
    By default all files without license information are under the default
    license of the kernel, which is GPL version 2.
    
    Update the files which contain no license information with the 'GPL-2.0'
    SPDX license identifier.  The SPDX identifier is a legally binding
    shorthand, which can be used instead of the full boiler plate text.
    
    This patch is based on work done by Thomas Gleixner and Kate Stewart and
    Philippe Ombredanne.
    
    How this work was done:
    
    Patches were generated and checked against linux-4.14-rc6 for a subset of
    the use cases:
     - file had no licensing information it it.
     - file was a */uapi/* one with no licensing information in it,
     - file was a */uapi/* one with existing licensing information,
    
    Further patches will be generated in subsequent months to fix up cases
    where non-standard license headers were used, and references to license
    had to be inferred by heuristics based on keywords.
    
    The analysis to determine which SPDX License Identifier to be applied to
    a file was done in a spreadsheet of side by side results from of the
    output of two independent scanners (ScanCode & Windriver) producing SPDX
    tag:value files created by Philippe Ombredanne.  Philippe prepared the
    base worksheet, and did an initial spot review of a few 1000 files.
    
    The 4.13 kernel was the starting point of the analysis with 60,537 files
    assessed.  Kate Stewart did a file by file comparison of the scanner
    results in the spreadsheet to determine which SPDX license identifier(s)
    to be applied to the file. She confirmed any determination that was not
    immediately clear with lawyers working with the Linux Foundation.
    
    Criteria used to select files for SPDX license identifier tagging was:
     - Files considered eligible had to be source code files.
     - Make and config files were included as candidates if they contained >5
       lines of source
     - File already had some variant of a license header in it (even if <5
       lines).
    
    All documentation files were explicitly excluded.
    
    The following heuristics were used to determine which SPDX license
    identifiers to apply.
    
     - when both scanners couldn't find any license traces, file was
       considered to have no license information in it, and the top level
       COPYING file license applied.
    
       For non */uapi/* files that summary was:
    
       SPDX license identifier                            # files
       ---------------------------------------------------|-------
       GPL-2.0                                              11139
    
       and resulted in the first patch in this series.
    
       If that file was a */uapi/* path one, it was "GPL-2.0 WITH
       Linux-syscall-note" otherwise it was "GPL-2.0".  Results of that was:
    
       SPDX license identifier                            # files
       ---------------------------------------------------|-------
       GPL-2.0 WITH Linux-syscall-note                        930
    
       and resulted in the second patch in this series.
    
     - if a file had some form of licensing information in it, and was one
       of the */uapi/* ones, it was denoted with the Linux-syscall-note if
       any GPL family license was found in the file or had no licensing in
       it (per prior point).  Results summary:
    
       SPDX license identifier                            # files
       ---------------------------------------------------|------
       GPL-2.0 WITH Linux-syscall-note                       270
       GPL-2.0+ WITH Linux-syscall-note                      169
       ((GPL-2.0 WITH Linux-syscall-note) OR BSD-2-Clause)    21
       ((GPL-2.0 WITH Linux-syscall-note) OR BSD-3-Clause)    17
       LGPL-2.1+ WITH Linux-syscall-note                      15
       GPL-1.0+ WITH Linux-syscall-note                       14
       ((GPL-2.0+ WITH Linux-syscall-note) OR BSD-3-Clause)    5
       LGPL-2.0+ WITH Linux-syscall-note                       4
       LGPL-2.1 WITH Linux-syscall-note                        3
       ((GPL-2.0 WITH Linux-syscall-note) OR MIT)              3
       ((GPL-2.0 WITH Linux-syscall-note) AND MIT)             1
    
       and that resulted in the third patch in this series.
    
     - when the two scanners agreed on the detected license(s), that became
       the concluded license(s).
    
     - when there was disagreement between the two scanners (one detected a
       license but the other didn't, or they both detected different
       licenses) a manual inspection of the file occurred.
    
     - In most cases a manual inspection of the information in the file
       resulted in a clear resolution of the license that should apply (and
       which scanner probably needed to revisit its heuristics).
    
     - When it was not immediately clear, the license identifier was
       confirmed with lawyers working with the Linux Foundation.
    
     - If there was any question as to the appropriate license identifier,
       the file was flagged for further research and to be revisited later
       in time.
    
    In total, over 70 hours of logged manual review was done on the
    spreadsheet to determine the SPDX license identifiers to apply to the
    source files by Kate, Philippe, Thomas and, in some cases, confirmation
    by lawyers working with the Linux Foundation.
    
    Kate also obtained a third independent scan of the 4.13 code base from
    FOSSology, and compared selected files where the other two scanners
    disagreed against that SPDX file, to see if there was new insights.  The
    Windriver scanner is based on an older version of FOSSology in part, so
    they are related.
    
    Thomas did random spot checks in about 500 files from the spreadsheets
    for the uapi headers and agreed with SPDX license identifier in the
    files he inspected. For the non-uapi files Thomas did random spot checks
    in about 15000 files.
    
    In initial set of patches against 4.14-rc6, 3 files were found to have
    copy/paste license identifier errors, and have been fixed to reflect the
    correct identifier.
    
    Additionally Philippe spent 10 hours this week doing a detailed manual
    inspection and review of the 12,461 patched files from the initial patch
    version early this week with:
     - a full scancode scan run, collecting the matched texts, detected
       license ids and scores
     - reviewing anything where there was a license detected (about 500+
       files) to ensure that the applied SPDX license was correct
     - reviewing anything where there was no detection but the patch license
       was not GPL-2.0 WITH Linux-syscall-note to ensure that the applied
       SPDX license was correct
    
    This produced a worksheet with 20 files needing minor correction.  This
    worksheet was then exported into 3 different .csv files for the
    different types of files to be modified.
    
    These .csv files were then reviewed by Greg.  Thomas wrote a script to
    parse the csv files and add the proper SPDX tag to the file, in the
    format that the file expected.  This script was further refined by Greg
    based on the output to detect more types of files automatically and to
    distinguish between header and source .c files (which need different
    comment types.)  Finally Greg ran the script using the .csv files to
    generate the patches.
    
    Reviewed-by: Kate Stewart <kstewart@linuxfoundation.org>
    Reviewed-by: Philippe Ombredanne <pombredanne@nexb.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/hid/hid-lg.h b/drivers/hid/hid-lg.h
index 10dd8f024135..3d8902ba1c6c 100644
--- a/drivers/hid/hid-lg.h
+++ b/drivers/hid/hid-lg.h
@@ -1,3 +1,4 @@
+/* SPDX-License-Identifier: GPL-2.0 */
 #ifndef __HID_LG_H
 #define __HID_LG_H
 

commit a54dc7795efceb9a458457540c69450c995a2772
Author: Michal Malý <madcatxster@devoid-pointer.net>
Date:   Wed Feb 18 17:59:22 2015 +0100

    HID: hid-lg4ff: Introduce a module parameter to disable automatic switch of compatibility mode
    
    Introduce a module parameter to disable automatic switch of Logitech gaming
    wheels from compatibility to native mode. This only applies to multimode wheels.
    
    Signed-off-by: Michal Malý <madcatxster@devoid-pointer.net>
    Tested-by: Simon Wood <simon@mungewell.org>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>

diff --git a/drivers/hid/hid-lg.h b/drivers/hid/hid-lg.h
index 142ce3f5f055..10dd8f024135 100644
--- a/drivers/hid/hid-lg.h
+++ b/drivers/hid/hid-lg.h
@@ -24,16 +24,4 @@ int lg3ff_init(struct hid_device *hdev);
 static inline int lg3ff_init(struct hid_device *hdev) { return -1; }
 #endif
 
-#ifdef CONFIG_LOGIWHEELS_FF
-int lg4ff_adjust_input_event(struct hid_device *hid, struct hid_field *field,
-			     struct hid_usage *usage, __s32 value, struct lg_drv_data *drv_data);
-int lg4ff_init(struct hid_device *hdev);
-int lg4ff_deinit(struct hid_device *hdev);
-#else
-static inline int lg4ff_adjust_input_event(struct hid_device *hid, struct hid_field *field,
-					   struct hid_usage *usage, __s32 value, struct lg_drv_data *drv_data) { return 0; }
-static inline int lg4ff_init(struct hid_device *hdev) { return -1; }
-static inline int lg4ff_deinit(struct hid_device *hdev) { return -1; }
-#endif
-
 #endif

commit 2b24a960016b8d3221a6dd2764ab97247c48dd97
Author: Michal Malý <madcatxster@gmail.com>
Date:   Sun Sep 23 22:41:08 2012 +0200

    HID: hid-lg4ff: Adjust X axis input value accordingly to selected range.
    
    Range limiting command for the Driving Force Pro wheel is only a FF_SPRING
    effect so that the wheel creates resistance when the user tries to turn it past
    the limit. It is however possible to overpower the FFB motors quite easily which
    leads to the X axis value exceeding the expected limit. This confuses
    games which dynamically adjust calibration using the highest/lowest min and max
    values reported by the wheel. Joydev device driver also doesn't take in account
    any changes in an axis range after the joystick device is created.
    
    This patch recalculates received ABS_X axis value so it is always in
    <0; 16383> range where 0 is the left limit and 16383 the right limit.
    Logitech driver for Windows does the same thing.  As for any concerns about
    possible loss of precision, I compared a large set of raw/adjusted values
    generated by "mult_frac" to values returned by the Windows driver and I got
    a 100% match.
    
    Other Logitech wheels will probably need a similar fix, but I currently lack
    the information needed to write one.
    
    Signed-off-by: Michal Malý <madcatxster@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>

diff --git a/drivers/hid/hid-lg.h b/drivers/hid/hid-lg.h
index d64cf8d2751e..142ce3f5f055 100644
--- a/drivers/hid/hid-lg.h
+++ b/drivers/hid/hid-lg.h
@@ -25,9 +25,13 @@ static inline int lg3ff_init(struct hid_device *hdev) { return -1; }
 #endif
 
 #ifdef CONFIG_LOGIWHEELS_FF
+int lg4ff_adjust_input_event(struct hid_device *hid, struct hid_field *field,
+			     struct hid_usage *usage, __s32 value, struct lg_drv_data *drv_data);
 int lg4ff_init(struct hid_device *hdev);
 int lg4ff_deinit(struct hid_device *hdev);
 #else
+static inline int lg4ff_adjust_input_event(struct hid_device *hid, struct hid_field *field,
+					   struct hid_usage *usage, __s32 value, struct lg_drv_data *drv_data) { return 0; }
 static inline int lg4ff_init(struct hid_device *hdev) { return -1; }
 static inline int lg4ff_deinit(struct hid_device *hdev) { return -1; }
 #endif

commit 6a2e176b2d6ae6bb528c0c1a50a6332e176cda12
Author: Michal Malý <madcatxster@gmail.com>
Date:   Sat Mar 31 11:35:05 2012 +0200

    HID: lg4ff: Remove sysfs iface before deallocating memory
    
    This patch fixes a possible race condition caused by the sysfs
    interface being removed after the memory used by the interface
    was already kfree'd.
    
    Signed-off-by: Michal Malý <madcatsxter@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>

diff --git a/drivers/hid/hid-lg.h b/drivers/hid/hid-lg.h
index 500457b67b21..d64cf8d2751e 100644
--- a/drivers/hid/hid-lg.h
+++ b/drivers/hid/hid-lg.h
@@ -1,8 +1,6 @@
 #ifndef __HID_LG_H
 #define __HID_LG_H
 
-#include <linux/spinlock.h>
-
 struct lg_drv_data {
 	unsigned long quirks;
 	void *device_props;	/* Device specific properties */

commit 8577dbf9d6eb07213caefb49e2017c177c5f023d
Author: Michal Malý <madcatxster@gmail.com>
Date:   Sat Mar 31 11:17:25 2012 +0200

    HID: hid-lg: Allow for custom device-specific properties to be stored in priv drvdata
    
    This patch adds support for custom device-specific properties which can now be
    stored as private driver data and read/saved using hid_get/set_drvdata().
    
    Signed-off-by: Michal Malý <madcatxster@gmail.com>
    Tested-by: simon@mungewell.org
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>

diff --git a/drivers/hid/hid-lg.h b/drivers/hid/hid-lg.h
index 4b097286dc78..500457b67b21 100644
--- a/drivers/hid/hid-lg.h
+++ b/drivers/hid/hid-lg.h
@@ -1,6 +1,13 @@
 #ifndef __HID_LG_H
 #define __HID_LG_H
 
+#include <linux/spinlock.h>
+
+struct lg_drv_data {
+	unsigned long quirks;
+	void *device_props;	/* Device specific properties */
+};
+
 #ifdef CONFIG_LOGITECH_FF
 int lgff_init(struct hid_device *hdev);
 #else

commit a7ac90f18cf1182f01846f36f7d2706e2cc7747c
Author: Michal Malý <madcatxster@gmail.com>
Date:   Thu Aug 4 16:24:22 2011 +0200

    HID: lg4ff - Fix misleading info in Kconfig
    
    The description of lg4ff driver has to be changed to reflect the fact that the
    driver now handles a lot more Logitech wh the Wii. Entry in Kconfig has been
    renamed to LOGIWHEELS_FF
    
    Signed-off-by: Michal Malý <madcatxster@gmail.com>
    Signed-off-by: Simon Wood <simon@mungewell.org>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>

diff --git a/drivers/hid/hid-lg.h b/drivers/hid/hid-lg.h
index 3a3295991ab3..4b097286dc78 100644
--- a/drivers/hid/hid-lg.h
+++ b/drivers/hid/hid-lg.h
@@ -19,7 +19,7 @@ int lg3ff_init(struct hid_device *hdev);
 static inline int lg3ff_init(struct hid_device *hdev) { return -1; }
 #endif
 
-#ifdef CONFIG_LOGIWII_FF
+#ifdef CONFIG_LOGIWHEELS_FF
 int lg4ff_init(struct hid_device *hdev);
 int lg4ff_deinit(struct hid_device *hdev);
 #else

commit 30bb75d71b3732c0adb6297815288ce0fb9cc04c
Author: Michal Malý <madcatxster@gmail.com>
Date:   Thu Aug 4 16:20:40 2011 +0200

    HID: lg4ff - Add range setting support and sysfs interface
    
    Wheel range of certain Logitech wheels - namely Driving Force GT, Driving Force
    Pro, G25 and G27 can be adjusted. Minimu is 40 degrees, maximum 900. DFGT, G25
    and G27 all use a common command, DFP uses another one.  Range can be set from
    userspace by writing to
    "/sys/module/hid_logitech/drivers/hid:logitech/<dev>range". The driver use list
    to store range of each connected wheel; it's not possible to use driver_data in
    hid_device struct as it's already b hig-lg driver.
    
    Signed-off-by: Michal Malý <madcatxster@gmail.com>
    Signed-off-by: Simon Wood <simon@mungewell.org>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>

diff --git a/drivers/hid/hid-lg.h b/drivers/hid/hid-lg.h
index b0100ba2ae0b..3a3295991ab3 100644
--- a/drivers/hid/hid-lg.h
+++ b/drivers/hid/hid-lg.h
@@ -21,8 +21,10 @@ static inline int lg3ff_init(struct hid_device *hdev) { return -1; }
 
 #ifdef CONFIG_LOGIWII_FF
 int lg4ff_init(struct hid_device *hdev);
+int lg4ff_deinit(struct hid_device *hdev);
 #else
 static inline int lg4ff_init(struct hid_device *hdev) { return -1; }
+static inline int lg4ff_deinit(struct hid_device *hdev) { return -1; }
 #endif
 
 #endif

commit 32c88cbc3080f43c429f6456aa9cd845e37f3778
Author: Simon Wood <simon@mungewell.org>
Date:   Wed Sep 22 13:19:42 2010 +0200

    HID: Add support for Logitech Speed Force Wireless gaming wheel
    
    The following patch adds support for the Logitech Speed Force Wireless gaming
    wheel. Originally designed for the WII console. Details on the protocol:
    
    http://wiibrew.org/wiki/Logitech_USB_steering_wheel
    
    This patch relies on previous patch:
    "Don't Send Feature Reports on Interrupt Endpoint"
    
    Logitech as produce a very similar wheel for the PS2/PS3, it is expected that
    this patch could also support the PS2/PS3 wheel if the USB ID's are added and
    (if required) the HID descriptor is modified.
    
    Signed-off-by: Simon Wood <simon@mungewell.org>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>

diff --git a/drivers/hid/hid-lg.h b/drivers/hid/hid-lg.h
index ce2ac8672624..b0100ba2ae0b 100644
--- a/drivers/hid/hid-lg.h
+++ b/drivers/hid/hid-lg.h
@@ -19,4 +19,10 @@ int lg3ff_init(struct hid_device *hdev);
 static inline int lg3ff_init(struct hid_device *hdev) { return -1; }
 #endif
 
+#ifdef CONFIG_LOGIWII_FF
+int lg4ff_init(struct hid_device *hdev);
+#else
+static inline int lg4ff_init(struct hid_device *hdev) { return -1; }
+#endif
+
 #endif

commit e1a0bdd8022317e98650e70850de73eccfcde5ad
Merge: 8127f4e88366 1a45dcfe2525
Author: Jiri Kosina <jkosina@suse.cz>
Date:   Tue Feb 2 23:10:39 2010 +0100

    Merge branch 'master' into upstream
    
    Conflicts:
            drivers/hid/hid-ids.h

commit 74f292ca8c7a2b9370f80d97a49e48174f4c7635
Author: Gary Stein <LordCnidarian@gmail.com>
Date:   Wed Jan 13 00:25:58 2010 +0100

    HID: add driver for the Logitech Flight System G940
    
    Implements a new USB-HID for Force Feedback based on the normal
    Logitech Force Feedback code and FF-Memless.
    
    Currently only supports the FF_CONSTANT effect although the joystick
    appears to support additional non-standard ones.
    
    Signed-off-by: Gary Stein <LordCnidarian@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>

diff --git a/drivers/hid/hid-lg.h b/drivers/hid/hid-lg.h
index 27ae750ca878..8069c3e8b64a 100644
--- a/drivers/hid/hid-lg.h
+++ b/drivers/hid/hid-lg.h
@@ -15,4 +15,10 @@ int lg2ff_init(struct hid_device *hdev);
 static inline int lg2ff_init(struct hid_device *hdev) { return -1; }
 #endif
 
+#ifdef CONFIG_LOGIG940_FF
+int lg3ff_init(struct hid_device *hdev);
+#else
+static inline int lg3ff_init(struct hid_device *hdev) { return -1; }
+#endif
+
 #endif

commit 98b8788ae91694499d1995035625bea16a4db0c4
Author: Sam Ravnborg <sam@ravnborg.org>
Date:   Sun Oct 18 00:39:40 2009 +0200

    drop explicit include of autoconf.h
    
    kbuild.h forces include of autoconf.h on the
    commandline using -include - so we do not need to
    include the file explicit.
    
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Signed-off-by: Michal Marek <mmarek@suse.cz>

diff --git a/drivers/hid/hid-lg.h b/drivers/hid/hid-lg.h
index 27ae750ca878..bf31592eaf79 100644
--- a/drivers/hid/hid-lg.h
+++ b/drivers/hid/hid-lg.h
@@ -1,8 +1,6 @@
 #ifndef __HID_LG_H
 #define __HID_LG_H
 
-#include <linux/autoconf.h>
-
 #ifdef CONFIG_LOGITECH_FF
 int lgff_init(struct hid_device *hdev);
 #else

commit 606bd0a8616a0e59021cb2997e942513f24f641d
Author: Jiri Slaby <jirislaby@gmail.com>
Date:   Fri Jul 4 23:06:45 2008 +0200

    HID: move logitech FF processing
    
    Merge the logitech force feedback processing directly into logitech
    driver from the usbhid core.
    
    Signed-off-by: Jiri Slaby <jirislaby@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>

diff --git a/drivers/hid/hid-lg.h b/drivers/hid/hid-lg.h
new file mode 100644
index 000000000000..27ae750ca878
--- /dev/null
+++ b/drivers/hid/hid-lg.h
@@ -0,0 +1,18 @@
+#ifndef __HID_LG_H
+#define __HID_LG_H
+
+#include <linux/autoconf.h>
+
+#ifdef CONFIG_LOGITECH_FF
+int lgff_init(struct hid_device *hdev);
+#else
+static inline int lgff_init(struct hid_device *hdev) { return -1; }
+#endif
+
+#ifdef CONFIG_LOGIRUMBLEPAD2_FF
+int lg2ff_init(struct hid_device *hdev);
+#else
+static inline int lg2ff_init(struct hid_device *hdev) { return -1; }
+#endif
+
+#endif
