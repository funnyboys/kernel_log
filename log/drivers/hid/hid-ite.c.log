commit beae56192a2570578ae45050e73c5ff9254f63e6
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sat Feb 1 12:56:48 2020 +0100

    HID: ite: Only bind to keyboard USB interface on Acer SW5-012 keyboard dock
    
    Commit 8f18eca9ebc5 ("HID: ite: Add USB id match for Acer SW5-012 keyboard
    dock") added the USB id for the Acer SW5-012's keyboard dock to the
    hid-ite driver to fix the rfkill driver not working.
    
    Most keyboard docks with an ITE 8595 keyboard/touchpad controller have the
    "Wireless Radio Control" bits which need the special hid-ite driver on the
    second USB interface (the mouse interface) and their touchpad only supports
    mouse emulation, so using generic hid-input handling for anything but
    the "Wireless Radio Control" bits is fine. On these devices we simply bind
    to all USB interfaces.
    
    But unlike other ITE8595 using keyboard docks, the Acer Aspire Switch 10
    (SW5-012)'s touchpad not only does mouse emulation it also supports
    HID-multitouch and all the keys including the "Wireless Radio Control"
    bits have been moved to the first USB interface (the keyboard intf).
    
    So we need hid-ite to handle the first (keyboard) USB interface and have
    it NOT bind to the second (mouse) USB interface so that that can be
    handled by hid-multitouch.c and we get proper multi-touch support.
    
    This commit changes the hid_device_id for the SW5-012 keyboard dock to
    only match on hid devices from the HID_GROUP_GENERIC group, this way
    hid-ite will not bind the the mouse/multi-touch interface which has
    HID_GROUP_MULTITOUCH_WIN_8 as group.
    This fixes the regression to mouse-emulation mode introduced by adding
    the keyboard dock USB id.
    
    Cc: stable@vger.kernel.org
    Fixes: 8f18eca9ebc5 ("HID: ite: Add USB id match for Acer SW5-012 keyboard dock")
    Reported-by: ZdenÄ›k Rampas <zdenda.rampas@gmail.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>

diff --git a/drivers/hid/hid-ite.c b/drivers/hid/hid-ite.c
index c436e12feb23..6c55682c5974 100644
--- a/drivers/hid/hid-ite.c
+++ b/drivers/hid/hid-ite.c
@@ -41,8 +41,9 @@ static const struct hid_device_id ite_devices[] = {
 	{ HID_USB_DEVICE(USB_VENDOR_ID_ITE, USB_DEVICE_ID_ITE8595) },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_258A, USB_DEVICE_ID_258A_6A88) },
 	/* ITE8595 USB kbd ctlr, with Synaptics touchpad connected to it. */
-	{ HID_USB_DEVICE(USB_VENDOR_ID_SYNAPTICS,
-			 USB_DEVICE_ID_SYNAPTICS_ACER_SWITCH5_012) },
+	{ HID_DEVICE(BUS_USB, HID_GROUP_GENERIC,
+		     USB_VENDOR_ID_SYNAPTICS,
+		     USB_DEVICE_ID_SYNAPTICS_ACER_SWITCH5_012) },
 	{ }
 };
 MODULE_DEVICE_TABLE(hid, ite_devices);

commit 8f18eca9ebc57d6b150237033f6439242907e0ba
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Tue Nov 19 15:57:11 2019 +0100

    HID: ite: Add USB id match for Acer SW5-012 keyboard dock
    
    The Acer SW5-012 2-in-1 keyboard dock uses a Synaptics S91028 touchpad
    which is connected to an ITE 8595 USB keyboard controller chip.
    
    This keyboard has the same quirk for its rfkill / airplane mode hotkey as
    other keyboards with the ITE 8595 chip, it only sends a single release
    event when pressed and released, it never sends a press event.
    
    This commit adds this keyboards USB id to the hid-ite id-table, fixing
    the rfkill key not working on this keyboard.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>

diff --git a/drivers/hid/hid-ite.c b/drivers/hid/hid-ite.c
index a45f2352618d..c436e12feb23 100644
--- a/drivers/hid/hid-ite.c
+++ b/drivers/hid/hid-ite.c
@@ -40,6 +40,9 @@ static int ite_event(struct hid_device *hdev, struct hid_field *field,
 static const struct hid_device_id ite_devices[] = {
 	{ HID_USB_DEVICE(USB_VENDOR_ID_ITE, USB_DEVICE_ID_ITE8595) },
 	{ HID_USB_DEVICE(USB_VENDOR_ID_258A, USB_DEVICE_ID_258A_6A88) },
+	/* ITE8595 USB kbd ctlr, with Synaptics touchpad connected to it. */
+	{ HID_USB_DEVICE(USB_VENDOR_ID_SYNAPTICS,
+			 USB_DEVICE_ID_SYNAPTICS_ACER_SWITCH5_012) },
 	{ }
 };
 MODULE_DEVICE_TABLE(hid, ite_devices);

commit d2912cb15bdda8ba4a5dd73396ad62641af2f520
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Tue Jun 4 10:11:33 2019 +0200

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 500
    
    Based on 2 normalized pattern(s):
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license version 2 as
      published by the free software foundation
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license version 2 as
      published by the free software foundation #
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-only
    
    has been chosen to replace the boilerplate/reference in 4122 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Enrico Weigelt <info@metux.net>
    Reviewed-by: Kate Stewart <kstewart@linuxfoundation.org>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190604081206.933168790@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/hid/hid-ite.c b/drivers/hid/hid-ite.c
index 98b059d79bc8..a45f2352618d 100644
--- a/drivers/hid/hid-ite.c
+++ b/drivers/hid/hid-ite.c
@@ -1,10 +1,7 @@
+// SPDX-License-Identifier: GPL-2.0-only
 /*
  * HID driver for some ITE "special" devices
  * Copyright (c) 2017 Hans de Goede <hdegoede@redhat.com>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License version 2 as
- * published by the Free Software Foundation.
  */
 
 #include <linux/device.h>

commit 4050207485e47e00353e87f2fe2166083e282688
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Nov 26 11:52:18 2018 +0100

    HID: ite: Add USB id match for another ITE based keyboard rfkill key quirk
    
    The 258a:6a88 keyboard-dock shipped with the Prowise PT301 tablet is
    likely another ITE based design. The controller die is directly bonded
    to the PCB with a blob of black glue on top so there are no markings and
    the 258a vendor-id used is unknown anywhere. But the keyboard has the
    exact same hotkeys mapped to Fn+F1 - F10 as the other ITE8595 keyboard
    I have *and* it has the same quirky behavior wrt the rfkill hotkey.
    
    Either way as said this keyboard has the same quirk for its rfkill /
    airplane mode hotkey as the ITE 8595 chip, it only sends a single release
    event when pressed and released, it never sends a press event.
    
    This commit adds the 258a:6a88 USB id to the hid-ite id-table, fixing
    the rfkill key not working on this keyboard.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>

diff --git a/drivers/hid/hid-ite.c b/drivers/hid/hid-ite.c
index 1882a4ab0f29..98b059d79bc8 100644
--- a/drivers/hid/hid-ite.c
+++ b/drivers/hid/hid-ite.c
@@ -42,6 +42,7 @@ static int ite_event(struct hid_device *hdev, struct hid_field *field,
 
 static const struct hid_device_id ite_devices[] = {
 	{ HID_USB_DEVICE(USB_VENDOR_ID_ITE, USB_DEVICE_ID_ITE8595) },
+	{ HID_USB_DEVICE(USB_VENDOR_ID_258A, USB_DEVICE_ID_258A_6A88) },
 	{ }
 };
 MODULE_DEVICE_TABLE(hid, ite_devices);

commit f1918be1c1dd6d97390513677f184c4d5e22e2ac
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Wed May 10 17:12:53 2017 +0200

    HID: ite: Add hid-ite driver
    
    The ITE8595 keyboard uses the HID_GD_RFKILL_BTN usage code
    from the Wireless Radio Controls Application Collection Microsoft
    has defined for Windows 8 and later.
    
    However it has a quirk, when the rfkill hotkey is pressed it does
    generate a report for the collection, but the reported value is
    always 0. Luckily it is the only button in this collection / report,
    and it sends a report on release only, so receiving a report means the
    button was pressed.
    
    This commit adds a hid-ite driver which watches for the Wireless Radio
    Controls Application Collection report and then reports a KEY_RFKILL event,
    ignoring the value, making the rfkill on this keyboard work.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Reviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>

diff --git a/drivers/hid/hid-ite.c b/drivers/hid/hid-ite.c
new file mode 100644
index 000000000000..1882a4ab0f29
--- /dev/null
+++ b/drivers/hid/hid-ite.c
@@ -0,0 +1,56 @@
+/*
+ * HID driver for some ITE "special" devices
+ * Copyright (c) 2017 Hans de Goede <hdegoede@redhat.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+
+#include <linux/device.h>
+#include <linux/input.h>
+#include <linux/hid.h>
+#include <linux/module.h>
+
+#include "hid-ids.h"
+
+static int ite_event(struct hid_device *hdev, struct hid_field *field,
+		     struct hid_usage *usage, __s32 value)
+{
+	struct input_dev *input;
+
+	if (!(hdev->claimed & HID_CLAIMED_INPUT) || !field->hidinput)
+		return 0;
+
+	input = field->hidinput->input;
+
+	/*
+	 * The ITE8595 always reports 0 as value for the rfkill button. Luckily
+	 * it is the only button in its report, and it sends a report on
+	 * release only, so receiving a report means the button was pressed.
+	 */
+	if (usage->hid == HID_GD_RFKILL_BTN) {
+		input_event(input, EV_KEY, KEY_RFKILL, 1);
+		input_sync(input);
+		input_event(input, EV_KEY, KEY_RFKILL, 0);
+		input_sync(input);
+		return 1;
+	}
+
+	return 0;
+}
+
+static const struct hid_device_id ite_devices[] = {
+	{ HID_USB_DEVICE(USB_VENDOR_ID_ITE, USB_DEVICE_ID_ITE8595) },
+	{ }
+};
+MODULE_DEVICE_TABLE(hid, ite_devices);
+
+static struct hid_driver ite_driver = {
+	.name = "itetech",
+	.id_table = ite_devices,
+	.event = ite_event,
+};
+module_hid_driver(ite_driver);
+
+MODULE_LICENSE("GPL");
