commit 4ff028f6c1087bcaf1ee970d4ef43730ed0aaa8c
Author: Stephan Gerhold <stephan@gerhold.net>
Date:   Sat Apr 25 20:46:57 2020 +0200

    ASoC: qcom: lpass-cpu: Make I2S SD lines configurable
    
    The LPASS hardware allows configuring the MI2S SD lines to use
    when playing/recording audio. However, at the moment the lpass-cpu
    driver has SD0 hard-coded for mono/stereo (or additional fixed
    SD lines for more channels).
    
    For weird reasons there seems to be hardware that uses one of the
    other SD lines for mono/stereo. For example, some Samsung devices
    use an external Speaker amplifier connected to Quaternary MI2S.
    For some reason, the SD line for audio playback was connected to
    SD1 rather than SD0. (I have no idea why...)
    At the moment, the lpass-cpu driver cannot be configured to work
    for the Speaker on these devices.
    
    The q6afe driver already allows configuring the MI2S SD lines
    through the "qcom,sd-lines" device tree property, but this works
    only when routing audio through the ADSP.
    
    This commit adds a very similar configuration for the lpass-cpu driver.
    It is now possible to add additional subnodes to the lpass device in
    the device tree, to configure the SD lines for playback and/or capture.
    E.g. for the Samsung devices mentioned above:
    
    &lpass {
            dai@3 {
                    reg = <MI2S_QUATERNARY>;
                    qcom,playback-sd-lines = <1>;
            };
    };
    
    qcom,playback/capture-sd-lines takes a list of SD lines (0-3)
    in the same format as the q6afe driver. (The difference here is that
    q6afe has separate DAIs for playback/capture, while lpass-cpu has one
    for both...)
    
    For backwards compatibility with older device trees, the lpass-cpu driver
    defaults to LPAIF_I2SCTL_MODE_8CH if the subnode for a DAI is missing.
    This is equivalent to the previous behavior: Up to 8 channels can be
    configured, and SD0/QUAT01 will be chosen when setting up a stream
    with fewer channels.
    
    This allows the speaker to work on Samsung MSM8916 devices
    that use an external speaker amplifier.
    
    Signed-off-by: Stephan Gerhold <stephan@gerhold.net>
    Cc: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Link: https://lore.kernel.org/r/20200425184657.121991-2-stephan@gerhold.net
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/sound/soc/qcom/lpass.h b/sound/soc/qcom/lpass.h
index 17113d380dcc..bd19ec57c73d 100644
--- a/sound/soc/qcom/lpass.h
+++ b/sound/soc/qcom/lpass.h
@@ -29,6 +29,10 @@ struct lpass_data {
 	/* MI2S bit clock (derived from system clock by a divider */
 	struct clk *mi2s_bit_clk[LPASS_MAX_MI2S_PORTS];
 
+	/* MI2S SD lines to use for playback/capture */
+	unsigned int mi2s_playback_sd_mode[LPASS_MAX_MI2S_PORTS];
+	unsigned int mi2s_capture_sd_mode[LPASS_MAX_MI2S_PORTS];
+
 	/* low-power audio interface (LPAIF) registers */
 	void __iomem *lpaif;
 

commit 97fb5e8d9b57f10f294303c9a5d1bd033eded6bf
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed May 29 07:17:58 2019 -0700

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 284
    
    Based on 1 normalized pattern(s):
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license version 2 and
      only version 2 as published by the free software foundation this
      program is distributed in the hope that it will be useful but
      without any warranty without even the implied warranty of
      merchantability or fitness for a particular purpose see the gnu
      general public license for more details
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-only
    
    has been chosen to replace the boilerplate/reference in 294 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Reviewed-by: Alexios Zavras <alexios.zavras@intel.com>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190529141900.825281744@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/sound/soc/qcom/lpass.h b/sound/soc/qcom/lpass.h
index b848db2d6c3d..17113d380dcc 100644
--- a/sound/soc/qcom/lpass.h
+++ b/sound/soc/qcom/lpass.h
@@ -1,15 +1,7 @@
+/* SPDX-License-Identifier: GPL-2.0-only */
 /*
  * Copyright (c) 2010-2011,2013-2015 The Linux Foundation. All rights reserved.
  *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License version 2 and
- * only version 2 as published by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
  * lpass.h - Definitions for the QTi LPASS
  */
 

commit 97c52eb969718f0231f197937eb0418e7514aba3
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Wed Apr 5 10:34:10 2017 +0200

    ASoC: qcom: move clock names into LPASS variant struct
    
    The clock names for the two supported codecs are either
    "mi2s-*" name variants generated by code. This naming scheme
    does not work for platforms like MSM8660 which has I2S channels
    named CODEC_I2S_SPKR (rather than just "MI2S tertiary" and other
    repetitive names) and consequently have clocks named
    "codec-i2s-spkr-osr-clk" and similar.
    
    Skip the runtime generation of clock names and replace it with
    name lookup tables encoded into the variant data.
    
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/sound/soc/qcom/lpass.h b/sound/soc/qcom/lpass.h
index 9b031352ea3c..b848db2d6c3d 100644
--- a/sound/soc/qcom/lpass.h
+++ b/sound/soc/qcom/lpass.h
@@ -91,6 +91,8 @@ struct lpass_variant {
 	/* SOC specific dais */
 	struct snd_soc_dai_driver *dai_driver;
 	int num_dai;
+	const char * const *dai_osr_clk_names;
+	const char * const *dai_bit_clk_names;
 };
 
 /* register the platform driver from the CPU DAI driver */

commit 183b8021fc0a5fadecdf9c0ccac1f48b5c326278
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Mon Feb 27 14:29:20 2017 -0800

    scripts/spelling.txt: add "intialization" pattern and fix typo instances
    
    Fix typos and add the following to the scripts/spelling.txt:
    
      intialization||initialization
    
    The "inintialization" in drivers/acpi/spcr.c is a different pattern but
    I fixed it as well in this commit.
    
    Link: http://lkml.kernel.org/r/1481573103-11329-16-git-send-email-yamada.masahiro@socionext.com
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/sound/soc/qcom/lpass.h b/sound/soc/qcom/lpass.h
index 924971b6ded5..9b031352ea3c 100644
--- a/sound/soc/qcom/lpass.h
+++ b/sound/soc/qcom/lpass.h
@@ -82,7 +82,7 @@ struct lpass_variant {
 	 **/
 	u32	dmactl_audif_start;
 	u32	wrdma_channel_start;
-	/* SOC specific intialization like clocks */
+	/* SOC specific initialization like clocks */
 	int (*init)(struct platform_device *pdev);
 	int (*exit)(struct platform_device *pdev);
 	int (*alloc_dma_channel)(struct lpass_data *data, int direction);

commit 022d00ee0b55e6cd49048acadb9bf76c37e538d8
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Mon Oct 31 11:25:43 2016 +0000

    ASoC: lpass-platform: Fix broken pcm data usage
    
    This patch fixes lpass-platform driver which was broken in v4.9-rc1.
    lpass_pcm_data data structure holds information specific to stream.
    Holding a single private pointer to it in global lpass_data
    will not work, because it would be overwritten by for each pcm instance.
    
    This code was breaking playback when we have both playback and capture
    pcm streams, as playback settings are over written by capture settings.
    
    Fix this by moving channel allocation logic out of pcm_new to pcm_open
    so that we can store the stream specific information in private_data of
    snd_pcm_runtime.
    
    Fixes: 6adcbdcd4b6e ("ASoC: lpass-platform: don't use snd_soc_pcm_set_drvdata()")
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/sound/soc/qcom/lpass.h b/sound/soc/qcom/lpass.h
index 35b3cea8207d..924971b6ded5 100644
--- a/sound/soc/qcom/lpass.h
+++ b/sound/soc/qcom/lpass.h
@@ -59,7 +59,6 @@ struct lpass_data {
 	struct clk *pcnoc_mport_clk;
 	struct clk *pcnoc_sway_clk;
 
-	void *private_data;
 };
 
 /* Vairant data per each SOC */

commit 6adcbdcd4b6e8301c3a4c61284e701f87de9a409
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Aug 1 06:10:54 2016 +0000

    ASoC: lpass-platform: don't use snd_soc_pcm_set_drvdata()
    
    snd_soc_pcm_set_drvdata() will set driver data to rtd->dev,
    but driver data of rtd->dev is already used as "rtd" on
    soc_post_component_init().
    
            static int soc_post_component_init(xxx)
            {
                    ...
                    dev_set_drvdata(rtd->dev, rtd);
                    ...
            }
    
    To remove confusion, snd_soc_pcm_set/get_drvdata() should be
    removed soon. This patch is for it.
    
    qcom/lpass-platform.c sets struct lpass_pcm_data to rtd->dev today,
    but we can replace it to struct lpass_data :: private_data.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/sound/soc/qcom/lpass.h b/sound/soc/qcom/lpass.h
index 30714ad1e138..35b3cea8207d 100644
--- a/sound/soc/qcom/lpass.h
+++ b/sound/soc/qcom/lpass.h
@@ -58,6 +58,8 @@ struct lpass_data {
 	/* 8016 specific */
 	struct clk *pcnoc_mport_clk;
 	struct clk *pcnoc_sway_clk;
+
+	void *private_data;
 };
 
 /* Vairant data per each SOC */

commit 4d809fb12189aef9419f7337bb1767de85699003
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Thu Feb 11 12:17:51 2016 +0000

    ASoC: qcom: rename rdma_ch_bit_map to dma_ch_bit_map
    
    rdma_ch_bit_map can be reused for wrdma channel allocations as wrdma
    channel numbering start after rdma channel numbers.
    With capture support referring rdma_ch_bit_map for wrdma channel allocation
    is confusing, so renaming rdma_ch_bit_map to dma_ch_bit_map makes sense.
    
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Acked-by: Kenneth Westfield <kwestfie@codeaurora.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/sound/soc/qcom/lpass.h b/sound/soc/qcom/lpass.h
index 8475b609f8ce..30714ad1e138 100644
--- a/sound/soc/qcom/lpass.h
+++ b/sound/soc/qcom/lpass.h
@@ -50,7 +50,7 @@ struct lpass_data {
 	struct lpass_variant *variant;
 
 	/* bit map to keep track of static channel allocations */
-	unsigned long rdma_ch_bit_map;
+	unsigned long dma_ch_bit_map;
 
 	/* used it for handling interrupt per dma channel */
 	struct snd_pcm_substream *substream[LPASS_MAX_DMA_CHANNELS];

commit 73c847b6d3670e4521cd3f603102332614d0b640
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Thu Feb 11 12:17:37 2016 +0000

    ASoC: qcom: pass direction to dma allocation
    
    This patch updates the internal dma allocation callbacks to take the
    stream direction so that it can allocate channels suitable for that
    stream direction. Before the capture support this was not necessary.
    
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Acked-by: Kenneth Westfield <kwestfie@codeaurora.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/sound/soc/qcom/lpass.h b/sound/soc/qcom/lpass.h
index 412399acfe3d..8475b609f8ce 100644
--- a/sound/soc/qcom/lpass.h
+++ b/sound/soc/qcom/lpass.h
@@ -84,7 +84,7 @@ struct lpass_variant {
 	/* SOC specific intialization like clocks */
 	int (*init)(struct platform_device *pdev);
 	int (*exit)(struct platform_device *pdev);
-	int (*alloc_dma_channel)(struct lpass_data *data);
+	int (*alloc_dma_channel)(struct lpass_data *data, int direction);
 	int (*free_dma_channel)(struct lpass_data *data, int ch);
 
 	/* SOC specific dais */

commit ec5b82878c36f8c7c6d0d85eacd5185633e6c91b
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Thu Feb 11 12:17:30 2016 +0000

    ASoC: qcom: rename rdmactl_audif_start to dmactrl_audif_start
    
    This patch renames rdmactl_audif_start to dmactrl_audif_start as this
    is common for both rdma and wrdma. Without this patch the name would be
    bit misleading to the readers.
    
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Acked-by: Kenneth Westfield <kwestfie@codeaurora.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/sound/soc/qcom/lpass.h b/sound/soc/qcom/lpass.h
index 024a771be4dc..412399acfe3d 100644
--- a/sound/soc/qcom/lpass.h
+++ b/sound/soc/qcom/lpass.h
@@ -79,7 +79,7 @@ struct lpass_variant {
 	 * on SOCs like APQ8016 the channel control bits start
 	 * at different offset to ipq806x
 	 **/
-	u32	rdmactl_audif_start;
+	u32	dmactl_audif_start;
 	u32	wrdma_channel_start;
 	/* SOC specific intialization like clocks */
 	int (*init)(struct platform_device *pdev);

commit ffc1325e1d3bb809dbd8c0b7f9682a22e51a69c3
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Thu Feb 11 12:17:23 2016 +0000

    ASoC: qcom: add wrdma register details to lpass_variant
    
    This patch adds wrdma related register offsets, wrdma channel start
    and shifts into lpass variant structure.
    
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Acked-by: Kenneth Westfield <kwestfie@codeaurora.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/sound/soc/qcom/lpass.h b/sound/soc/qcom/lpass.h
index 0b63e2e5bcc9..024a771be4dc 100644
--- a/sound/soc/qcom/lpass.h
+++ b/sound/soc/qcom/lpass.h
@@ -71,12 +71,16 @@ struct lpass_variant {
 	u32	rdma_reg_base;
 	u32	rdma_reg_stride;
 	u32	rdma_channels;
+	u32	wrdma_reg_base;
+	u32	wrdma_reg_stride;
+	u32	wrdma_channels;
 
 	/**
 	 * on SOCs like APQ8016 the channel control bits start
 	 * at different offset to ipq806x
 	 **/
 	u32	rdmactl_audif_start;
+	u32	wrdma_channel_start;
 	/* SOC specific intialization like clocks */
 	int (*init)(struct platform_device *pdev);
 	int (*exit)(struct platform_device *pdev);

commit 618718dc56a49321a12f231b34f6c43f44c3c374
Author: Axel Lin <axel.lin@ingics.com>
Date:   Fri Aug 28 10:53:31 2015 +0800

    ASoC: qcom: Constify asoc_qcom_lpass_cpu_dai_ops
    
    asoc_qcom_lpass_cpu_dai_ops is exported and used by multiple drivers,
    make it const to prevent modifying it at run time.
    
    Signed-off-by: Axel Lin <axel.lin@ingics.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/sound/soc/qcom/lpass.h b/sound/soc/qcom/lpass.h
index d6e86c119e74..0b63e2e5bcc9 100644
--- a/sound/soc/qcom/lpass.h
+++ b/sound/soc/qcom/lpass.h
@@ -93,6 +93,6 @@ int asoc_qcom_lpass_platform_register(struct platform_device *);
 int asoc_qcom_lpass_cpu_platform_remove(struct platform_device *pdev);
 int asoc_qcom_lpass_cpu_platform_probe(struct platform_device *pdev);
 int asoc_qcom_lpass_cpu_dai_probe(struct snd_soc_dai *dai);
-extern struct snd_soc_dai_ops asoc_qcom_lpass_cpu_dai_ops;
+extern const struct snd_soc_dai_ops asoc_qcom_lpass_cpu_dai_ops;
 
 #endif /* __LPASS_H__ */

commit dc1ebd1811e984301f98f3f9edd192327d2e35e1
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Fri May 22 16:53:52 2015 +0100

    ASoC: qcom: Add apq8016 lpass driver support
    
    This patch adds apq8016 lpass driver support. APQ8016 has 4 MI2S which
    can be routed to one internal codec and 2 external codec interfaces.
    
    Primary, Secondary, Quaternary I2S can do Rx(playback) and Tertiary and
    Quaternary can do Tx(capture).
    
    Tested-by: Kenneth Westfield <kwestfie@codeaurora.org>
    Acked-by: Kenneth Westfield <kwestfie@codeaurora.org>
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/sound/soc/qcom/lpass.h b/sound/soc/qcom/lpass.h
index deecae9f64f9..d6e86c119e74 100644
--- a/sound/soc/qcom/lpass.h
+++ b/sound/soc/qcom/lpass.h
@@ -54,6 +54,10 @@ struct lpass_data {
 
 	/* used it for handling interrupt per dma channel */
 	struct snd_pcm_substream *substream[LPASS_MAX_DMA_CHANNELS];
+
+	/* 8016 specific */
+	struct clk *pcnoc_mport_clk;
+	struct clk *pcnoc_sway_clk;
 };
 
 /* Vairant data per each SOC */

commit 89cdfa06d9fdaa97e8c6c688383e4f38310d1e92
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Thu May 21 22:53:21 2015 +0100

    ASoC: qcom: add bit map to track static dma channel allocations
    
    This patch adds dma channel bit mask to lpass data to keep track of dma
    channel allocations. This flag would be used in apq8016 lpass driver.
    
    Tested-by: Kenneth Westfield <kwestfie@codeaurora.org>
    Acked-by: Kenneth Westfield <kwestfie@codeaurora.org>
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/sound/soc/qcom/lpass.h b/sound/soc/qcom/lpass.h
index d572e7b8d590..deecae9f64f9 100644
--- a/sound/soc/qcom/lpass.h
+++ b/sound/soc/qcom/lpass.h
@@ -49,6 +49,9 @@ struct lpass_data {
 	/* SOC specific variations in the LPASS IP integration */
 	struct lpass_variant *variant;
 
+	/* bit map to keep track of static channel allocations */
+	unsigned long rdma_ch_bit_map;
+
 	/* used it for handling interrupt per dma channel */
 	struct snd_pcm_substream *substream[LPASS_MAX_DMA_CHANNELS];
 };

commit 4f629e4b8705fb02e9618ca257fb077f0022921b
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Thu May 21 22:53:14 2015 +0100

    ASoC: qcom: Add ability to handle interrupts per dma channel
    
    This patch adds ablity to lpass driver to handle interrupt per dma
    channel. Without this patch its not possible to use multipl ports on the
    lpass.
    
    Tested-by: Kenneth Westfield <kwestfie@codeaurora.org>
    Acked-by: Kenneth Westfield <kwestfie@codeaurora.org>
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/sound/soc/qcom/lpass.h b/sound/soc/qcom/lpass.h
index 023170a0943d..d572e7b8d590 100644
--- a/sound/soc/qcom/lpass.h
+++ b/sound/soc/qcom/lpass.h
@@ -23,6 +23,7 @@
 
 #define LPASS_AHBIX_CLOCK_FREQUENCY		131072000
 #define LPASS_MAX_MI2S_PORTS			(8)
+#define LPASS_MAX_DMA_CHANNELS			(8)
 
 /* Both the CPU DAI and platform drivers will access this data */
 struct lpass_data {
@@ -47,6 +48,9 @@ struct lpass_data {
 
 	/* SOC specific variations in the LPASS IP integration */
 	struct lpass_variant *variant;
+
+	/* used it for handling interrupt per dma channel */
+	struct snd_pcm_substream *substream[LPASS_MAX_DMA_CHANNELS];
 };
 
 /* Vairant data per each SOC */

commit 0054055c590ae5ca69f027d42cf171493476f6d8
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Thu May 21 22:53:05 2015 +0100

    ASoC: qcom: add dma channel control offset to variant data
    
    This patch adds ability to pass dma channel control bits start offset,
    which differ in differnet qcom SOCs. On apq8016 dma channel control bits
    start after an offset of 1.
    
    Tested-by: Kenneth Westfield <kwestfie@codeaurora.org>
    Acked-by: Kenneth Westfield <kwestfie@codeaurora.org>
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/sound/soc/qcom/lpass.h b/sound/soc/qcom/lpass.h
index 75e9370cb360..023170a0943d 100644
--- a/sound/soc/qcom/lpass.h
+++ b/sound/soc/qcom/lpass.h
@@ -61,6 +61,11 @@ struct lpass_variant {
 	u32	rdma_reg_stride;
 	u32	rdma_channels;
 
+	/**
+	 * on SOCs like APQ8016 the channel control bits start
+	 * at different offset to ipq806x
+	 **/
+	u32	rdmactl_audif_start;
 	/* SOC specific intialization like clocks */
 	int (*init)(struct platform_device *pdev);
 	int (*exit)(struct platform_device *pdev);

commit 9a127cff91e43af807c96ca4ec7c855d382cc23d
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Thu May 21 22:52:49 2015 +0100

    ASoC: qcom: support bitclk and osrclk per i2s port
    
    This patch adds support to allow bitclk and osrclk per i2s dai port.
    on APQ8016 there are 4 i2s ports each one has its own bit clks.
    
    Without this patch its not possible to support multiple i2s ports in the
    lpass driver.
    
    Tested-by: Kenneth Westfield <kwestfie@codeaurora.org>
    Acked-by: Kenneth Westfield <kwestfie@codeaurora.org>
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/sound/soc/qcom/lpass.h b/sound/soc/qcom/lpass.h
index caaf17fb0015..75e9370cb360 100644
--- a/sound/soc/qcom/lpass.h
+++ b/sound/soc/qcom/lpass.h
@@ -22,6 +22,7 @@
 #include <linux/regmap.h>
 
 #define LPASS_AHBIX_CLOCK_FREQUENCY		131072000
+#define LPASS_MAX_MI2S_PORTS			(8)
 
 /* Both the CPU DAI and platform drivers will access this data */
 struct lpass_data {
@@ -30,10 +31,10 @@ struct lpass_data {
 	struct clk *ahbix_clk;
 
 	/* MI2S system clock */
-	struct clk *mi2s_osr_clk;
+	struct clk *mi2s_osr_clk[LPASS_MAX_MI2S_PORTS];
 
 	/* MI2S bit clock (derived from system clock by a divider */
-	struct clk *mi2s_bit_clk;
+	struct clk *mi2s_bit_clk[LPASS_MAX_MI2S_PORTS];
 
 	/* low-power audio interface (LPAIF) registers */
 	void __iomem *lpaif;

commit 6db1c6ba9544e99778e0fdebe2d62c917fe1811c
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Sat May 16 13:32:34 2015 +0100

    ASoC: qcom: remove hardcoded dma channel
    
    This patch removes hardcoded dma channel value in lpass driver, Now the
    dma channel allocation happens in the SOC specific layer. This will
    allow different LPASS integrations to use the lpass driver in more
    generic way.
    
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Tested-by: Kenneth Westfield <kwestfie@codeaurora.org>
    Acked-by: Kenneth Westfield <kwestfie@codeaurora.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/sound/soc/qcom/lpass.h b/sound/soc/qcom/lpass.h
index fa00be43e923..caaf17fb0015 100644
--- a/sound/soc/qcom/lpass.h
+++ b/sound/soc/qcom/lpass.h
@@ -63,6 +63,8 @@ struct lpass_variant {
 	/* SOC specific intialization like clocks */
 	int (*init)(struct platform_device *pdev);
 	int (*exit)(struct platform_device *pdev);
+	int (*alloc_dma_channel)(struct lpass_data *data);
+	int (*free_dma_channel)(struct lpass_data *data, int ch);
 
 	/* SOC specific dais */
 	struct snd_soc_dai_driver *dai_driver;

commit 9bae4880acee1cd7340d0566b55b927f92de89fb
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Sat May 16 13:32:17 2015 +0100

    ASoC: qcom: move ipq806x specific bits out of lpass driver.
    
    This patch tries to make the lpass driver more generic by moving the
    ipq806x specific bits out of the cpu and platform driver, also allows the
    SOC specific drivers to add the correct register offsets.
    
    This patch also renames the register definition header file into more
    generic header file.
    
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Tested-by: Kenneth Westfield <kwestfie@codeaurora.org>
    Acked-by: Kenneth Westfield <kwestfie@codeaurora.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/sound/soc/qcom/lpass.h b/sound/soc/qcom/lpass.h
index 5c99b3dace86..fa00be43e923 100644
--- a/sound/soc/qcom/lpass.h
+++ b/sound/soc/qcom/lpass.h
@@ -43,9 +43,37 @@ struct lpass_data {
 
 	/* interrupts from the low-power audio interface (LPAIF) */
 	int lpaif_irq;
+
+	/* SOC specific variations in the LPASS IP integration */
+	struct lpass_variant *variant;
+};
+
+/* Vairant data per each SOC */
+struct lpass_variant {
+	u32	i2sctrl_reg_base;
+	u32	i2sctrl_reg_stride;
+	u32	i2s_ports;
+	u32	irq_reg_base;
+	u32	irq_reg_stride;
+	u32	irq_ports;
+	u32	rdma_reg_base;
+	u32	rdma_reg_stride;
+	u32	rdma_channels;
+
+	/* SOC specific intialization like clocks */
+	int (*init)(struct platform_device *pdev);
+	int (*exit)(struct platform_device *pdev);
+
+	/* SOC specific dais */
+	struct snd_soc_dai_driver *dai_driver;
+	int num_dai;
 };
 
 /* register the platform driver from the CPU DAI driver */
 int asoc_qcom_lpass_platform_register(struct platform_device *);
+int asoc_qcom_lpass_cpu_platform_remove(struct platform_device *pdev);
+int asoc_qcom_lpass_cpu_platform_probe(struct platform_device *pdev);
+int asoc_qcom_lpass_cpu_dai_probe(struct snd_soc_dai *dai);
+extern struct snd_soc_dai_ops asoc_qcom_lpass_cpu_dai_ops;
 
 #endif /* __LPASS_H__ */

commit cd59f13823ae65a16b7c99fdd338ebac0c6487f2
Author: Kenneth Westfield <kwestfie@codeaurora.org>
Date:   Tue Mar 3 16:21:53 2015 -0800

    ASoC: qcom: add LPASS header files
    
    Add the LPASS header files for ipq806x SOC.  This
    includes the register definitions for the ipq806x
    LPAIF, and the structure definition for the driver
    data.
    
    Signed-off-by: Kenneth Westfield <kwestfie@codeaurora.org>
    Acked-by: Banajit Goswami <bgoswami@codeaurora.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/sound/soc/qcom/lpass.h b/sound/soc/qcom/lpass.h
new file mode 100644
index 000000000000..5c99b3dace86
--- /dev/null
+++ b/sound/soc/qcom/lpass.h
@@ -0,0 +1,51 @@
+/*
+ * Copyright (c) 2010-2011,2013-2015 The Linux Foundation. All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 and
+ * only version 2 as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * lpass.h - Definitions for the QTi LPASS
+ */
+
+#ifndef __LPASS_H__
+#define __LPASS_H__
+
+#include <linux/clk.h>
+#include <linux/compiler.h>
+#include <linux/platform_device.h>
+#include <linux/regmap.h>
+
+#define LPASS_AHBIX_CLOCK_FREQUENCY		131072000
+
+/* Both the CPU DAI and platform drivers will access this data */
+struct lpass_data {
+
+	/* AHB-I/X bus clocks inside the low-power audio subsystem (LPASS) */
+	struct clk *ahbix_clk;
+
+	/* MI2S system clock */
+	struct clk *mi2s_osr_clk;
+
+	/* MI2S bit clock (derived from system clock by a divider */
+	struct clk *mi2s_bit_clk;
+
+	/* low-power audio interface (LPAIF) registers */
+	void __iomem *lpaif;
+
+	/* regmap backed by the low-power audio interface (LPAIF) registers */
+	struct regmap *lpaif_map;
+
+	/* interrupts from the low-power audio interface (LPAIF) */
+	int lpaif_irq;
+};
+
+/* register the platform driver from the CPU DAI driver */
+int asoc_qcom_lpass_platform_register(struct platform_device *);
+
+#endif /* __LPASS_H__ */
