commit fda8d26e61fc518499ddc78ae74ec1aaa89c4134
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Tue May 28 09:57:06 2019 -0700

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 177
    
    Based on 1 normalized pattern(s):
    
      licensed under the gpl 2
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-only
    
    has been chosen to replace the boilerplate/reference in 135 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Reviewed-by: Richard Fontana <rfontana@redhat.com>
    Reviewed-by: Alexios Zavras <alexios.zavras@intel.com>
    Reviewed-by: Steve Winslow <swinslow@gmail.com>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190528170026.071193225@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/sound/soc/codecs/ad193x-spi.c b/sound/soc/codecs/ad193x-spi.c
index 3c1394a803b8..bce96a3d81c9 100644
--- a/sound/soc/codecs/ad193x-spi.c
+++ b/sound/soc/codecs/ad193x-spi.c
@@ -1,9 +1,8 @@
+// SPDX-License-Identifier: GPL-2.0-only
 /*
  * AD1938/AD1939 audio driver
  *
  * Copyright 2014 Analog Devices Inc.
- *
- * Licensed under the GPL-2.
  */
 
 #include <linux/module.h>

commit 89cea5c9a9f3dc487f39997801ff5191f2375369
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Jan 29 04:25:29 2018 +0000

    ASoC: ad193x: replace codec to component
    
    Now we can replace Codec to Component. Let's do it.
    
    Note:
            xxx_codec_xxx()         ->      xxx_component_xxx()
            .idle_bias_off = 0      ->      .idle_bias_on = 1
            .ignore_pmdown_time = 0 ->      .use_pmdown_time = 1
            -                       ->      .endianness = 1
            -                       ->      .non_legacy_dai_naming = 1
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/sound/soc/codecs/ad193x-spi.c b/sound/soc/codecs/ad193x-spi.c
index 23c28573bdb7..3c1394a803b8 100644
--- a/sound/soc/codecs/ad193x-spi.c
+++ b/sound/soc/codecs/ad193x-spi.c
@@ -29,12 +29,6 @@ static int ad193x_spi_probe(struct spi_device *spi)
 			    (enum ad193x_type)id->driver_data);
 }
 
-static int ad193x_spi_remove(struct spi_device *spi)
-{
-	snd_soc_unregister_codec(&spi->dev);
-	return 0;
-}
-
 static const struct spi_device_id ad193x_spi_id[] = {
 	{ "ad193x", AD193X },
 	{ "ad1933", AD1933 },
@@ -51,7 +45,6 @@ static struct spi_driver ad193x_spi_driver = {
 		.name	= "ad193x",
 	},
 	.probe		= ad193x_spi_probe,
-	.remove		= ad193x_spi_remove,
 	.id_table	= ad193x_spi_id,
 };
 module_spi_driver(ad193x_spi_driver);

commit 0280d1a099da1d211e76ec47cc0944c993a36316
Merge: 5bc23a0cdee4 5cf92c8b3dc5
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Nov 6 11:04:07 2015 -0800

    Merge tag 'sound-4.4-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound updates from Takashi Iwai:
     "Here is the first batch of updates for sound system on 4.4-rc1.
    
      Again at this time, the update looks fairly calm; no big changes in
      either ALSA core or ASoC infrastructures, rather all small cleanups,
      in addition to the new stuff as usual.
    
      The biggest changes are about Firewire sound devices.  It gained lots
      of new device support, and MIDI functionality.  Also there are updates
      for a few still working-in-progress stuff (topology API and ASoC
      skylake), too.  But overall, this update should give no big surprise.
    
      Some highlights are below:
    
      Core:
       - A few more Kconfig items for tinification; it's marked as EXPERT,
         so normal user should't be bothered :)
       - Refactoring with a new PCM hw_constraint helper
       - Removal of unused transfer_ack_{begin,end} PCM callbacks
    
      Firewire:
       - Restructuring of code subtree, lots of refactoring
       - Support AMDTP variants
       - New driver for Digidesign 002/003 family
       - Adds support for TASCAM FireOne to ALSA OXFW driver
       - Add MIDI support to TASCAM and Digi00x devices
    
      HD-Audio:
       - Automated modalias generation for codec drivers, finally
       - Improvement on heuristics for setting mixer name
       - A few fixes for longstanding bugs on Creative CA0132 cards
       - Addition of audio rate callback with i915 communication
       - Fix suspend issue on recent Dell XPS
       - Intel Lewisburg controller support
    
      ASoC:
       - Updates to the topology userspace interface
       - Big updates to the Renesas support (rcar)
       - More updates for supporting Intel Sky Lake systems
       - New drivers for Asahi Kasei Microdevices AK4613, Allwinnner A10,
         Cirrus Logic WM8998, Dialog DA7219, Nuvoton NAU8825, Rockchip
         S/PDIF, and Atmel class D amplifier
    
      USB-Audio:
       - A fix for newer Roland MIDI devices
       - Quirks and workarounds for Zoom R16/24 device
    
      Misc:
       - A few fixes for some old Cirrus CS46xx PCI sound boards
       - Yet another fixes for some old ESS Maestro3 PCI sound boards"
    
    * tag 'sound-4.4-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (330 commits)
      ALSA: hda - Add Intel Lewisburg device IDs Audio
      ALSA: hda - Apply pin fixup for HP ProBook 6550b
      ALSA: hda - Fix lost 4k BDL boundary workaround
      ALSA: maestro3: Fix Allegro mute until master volume/mute is touched
      ALSA: maestro3: Enable docking support for Dell Latitude C810
      ALSA: firewire-digi00x: add another rawmidi character device for MIDI control ports
      ALSA: firewire-digi00x: add MIDI operations for MIDI control port
      ALSA: firewire-digi00x: rename identifiers of MIDI operation for physical ports
      ALSA: cs46xx: Fix suspend for all channels
      ALSA: cs46xx: Fix Duplicate front for CS4294 and CS4298 codecs
      ALSA: DocBook: Add soc-ops.c and soc-compress.c
      ALSA: hda - Add / fix kernel doc comments
      ALSA: Constify ratden/ratnum constraints
      ALSA: hda - Disable 64bit address for Creative HDA controllers
      ALSA: hda/realtek - Dell XPS one ALC3260 speaker no sound after resume back
      ALSA: hda/ca0132 - Convert leftover pr_info() and pr_err()
      ASoC: fsl: Use #ifdef instead of #if for CONFIG_PM_SLEEP
      ASoC: rt5645: Sort the order for register bit defines
      ASoC: dwc: add check for master/slave format
      ASoC: rt5645: Add the HWEQ for the speaker output
      ...

commit 3821a065f5672c430a088ae68b4da2a2d2b34106
Author: Andrew F. Davis <afd@ti.com>
Date:   Fri Oct 23 08:59:11 2015 -0500

    spi: Drop owner assignment from spi_drivers
    
    An spi_driver does not need to set an owner, it will be populated by the
    driver core.
    
    Signed-off-by: Andrew F. Davis <afd@ti.com>
    Acked-by: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/sound/soc/codecs/ad193x-spi.c b/sound/soc/codecs/ad193x-spi.c
index 390cef9b9dc2..8199a3de0024 100644
--- a/sound/soc/codecs/ad193x-spi.c
+++ b/sound/soc/codecs/ad193x-spi.c
@@ -36,7 +36,6 @@ static int ad193x_spi_remove(struct spi_device *spi)
 static struct spi_driver ad193x_spi_driver = {
 	.driver = {
 		.name	= "ad193x",
-		.owner	= THIS_MODULE,
 	},
 	.probe		= ad193x_spi_probe,
 	.remove		= ad193x_spi_remove,

commit 355b27e181f667dad248a40d3d4d48150e9a593c
Author: Axel Lin <axel.lin@ingics.com>
Date:   Sun Oct 18 10:06:11 2015 +0800

    ASoC: ad193x-spi: Add adau1328 to ad193x_spi_id table
    
    This driver also supports adau1328, thus add adau1328 to ad193x_spi_id.
    
    Signed-off-by: Axel Lin <axel.lin@ingics.com>
    Acked-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/sound/soc/codecs/ad193x-spi.c b/sound/soc/codecs/ad193x-spi.c
index b55055a6a265..431f95da1de1 100644
--- a/sound/soc/codecs/ad193x-spi.c
+++ b/sound/soc/codecs/ad193x-spi.c
@@ -41,6 +41,7 @@ static const struct spi_device_id ad193x_spi_id[] = {
 	{ "ad1934", AD1934 },
 	{ "ad1938", AD193X },
 	{ "ad1939", AD193X },
+	{ "adau1328", AD193X },
 	{ }
 };
 MODULE_DEVICE_TABLE(spi, ad193x_spi_id);

commit d46183efe3b57d06461c9bea35e1a0262391fe77
Author: Axel Lin <axel.lin@ingics.com>
Date:   Tue Oct 6 17:26:36 2015 +0800

    ASoC: ad193x-spi: Fixup ad193x_spi_id table
    
    AD1939 is missed from the table, so add it.
    AD1936 and AD1937 are controlled by I2C interface, so remove them.
    
    Fixes: e5224f58e3ef ("ASoC: ad193x: add support to ad1934")
    Signed-off-by: Axel Lin <axel.lin@ingics.com>
    Acked-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/sound/soc/codecs/ad193x-spi.c b/sound/soc/codecs/ad193x-spi.c
index 364e82112e8c..b55055a6a265 100644
--- a/sound/soc/codecs/ad193x-spi.c
+++ b/sound/soc/codecs/ad193x-spi.c
@@ -39,9 +39,8 @@ static const struct spi_device_id ad193x_spi_id[] = {
 	{ "ad193x", AD193X },
 	{ "ad1933", AD1933 },
 	{ "ad1934", AD1934 },
-	{ "ad1936", AD193X },
-	{ "ad1937", AD193X },
 	{ "ad1938", AD193X },
+	{ "ad1939", AD193X },
 	{ }
 };
 MODULE_DEVICE_TABLE(spi, ad193x_spi_id);

commit e5224f58e3efd74972f7dcf46264c3ba9aa807ba
Author: Cyrille Pitchen <cyrille.pitchen@atmel.com>
Date:   Tue Sep 29 16:41:43 2015 +0200

    ASoC: ad193x: add support to ad1934
    
    The AD1934 codec has no ADC feature. Hence it register mapping is slightly
    different from the register mapping of other members of the AD193x family.
    
    Some ASoC controls and widgets are related to the DAC feature so are not
    relevant in the case of an AD1934 codec.
    
    Signed-off-by: Cyrille Pitchen <cyrille.pitchen@atmel.com>
    Acked-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/sound/soc/codecs/ad193x-spi.c b/sound/soc/codecs/ad193x-spi.c
index 390cef9b9dc2..364e82112e8c 100644
--- a/sound/soc/codecs/ad193x-spi.c
+++ b/sound/soc/codecs/ad193x-spi.c
@@ -16,6 +16,7 @@
 
 static int ad193x_spi_probe(struct spi_device *spi)
 {
+	const struct spi_device_id *id = spi_get_device_id(spi);
 	struct regmap_config config;
 
 	config = ad193x_regmap_config;
@@ -24,7 +25,8 @@ static int ad193x_spi_probe(struct spi_device *spi)
 	config.read_flag_mask = 0x09;
 	config.write_flag_mask = 0x08;
 
-	return ad193x_probe(&spi->dev, devm_regmap_init_spi(spi, &config));
+	return ad193x_probe(&spi->dev, devm_regmap_init_spi(spi, &config),
+			    (enum ad193x_type)id->driver_data);
 }
 
 static int ad193x_spi_remove(struct spi_device *spi)
@@ -33,6 +35,17 @@ static int ad193x_spi_remove(struct spi_device *spi)
 	return 0;
 }
 
+static const struct spi_device_id ad193x_spi_id[] = {
+	{ "ad193x", AD193X },
+	{ "ad1933", AD1933 },
+	{ "ad1934", AD1934 },
+	{ "ad1936", AD193X },
+	{ "ad1937", AD193X },
+	{ "ad1938", AD193X },
+	{ }
+};
+MODULE_DEVICE_TABLE(spi, ad193x_spi_id);
+
 static struct spi_driver ad193x_spi_driver = {
 	.driver = {
 		.name	= "ad193x",
@@ -40,6 +53,7 @@ static struct spi_driver ad193x_spi_driver = {
 	},
 	.probe		= ad193x_spi_probe,
 	.remove		= ad193x_spi_remove,
+	.id_table	= ad193x_spi_id,
 };
 module_spi_driver(ad193x_spi_driver);
 

commit 6c3d713e6d32706999689e379a9098afb4cd8a2c
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Mon Feb 17 13:16:54 2014 +0100

    ASoC: ad193x: Split SPI and I2C code into different modules
    
    There are a few known (minor) problems with having the support code for both I2C
    and SPI in the same module:
        * We need to be extra careful to make sure to not build the driver into the
          kernel if one of the subsystems is build as a module (Currently only I2C
          can be build as a module).
        * The module init path error handling is rather ugly. E.g. what should be
          done if either the SPI or the I2C driver fails to register? Most drivers
          that implement SPI and I2C in the same module currently fallback to
          undefined behavior in that case. Splitting the the driver into two
          modules, one for each bus, allows the registration of the other bus driver
          to continue without problems if one of them fails.
    
    This patch splits the AD193X driver into 3 modules. One core module that
    implements the device logic, but is independent of the bus method used. And one
    module for SPI and I2C each that registers the drivers and sets up the regmap
    struct for the bus.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>

diff --git a/sound/soc/codecs/ad193x-spi.c b/sound/soc/codecs/ad193x-spi.c
new file mode 100644
index 000000000000..390cef9b9dc2
--- /dev/null
+++ b/sound/soc/codecs/ad193x-spi.c
@@ -0,0 +1,48 @@
+/*
+ * AD1938/AD1939 audio driver
+ *
+ * Copyright 2014 Analog Devices Inc.
+ *
+ * Licensed under the GPL-2.
+ */
+
+#include <linux/module.h>
+#include <linux/spi/spi.h>
+#include <linux/regmap.h>
+
+#include <sound/soc.h>
+
+#include "ad193x.h"
+
+static int ad193x_spi_probe(struct spi_device *spi)
+{
+	struct regmap_config config;
+
+	config = ad193x_regmap_config;
+	config.val_bits = 8;
+	config.reg_bits = 16;
+	config.read_flag_mask = 0x09;
+	config.write_flag_mask = 0x08;
+
+	return ad193x_probe(&spi->dev, devm_regmap_init_spi(spi, &config));
+}
+
+static int ad193x_spi_remove(struct spi_device *spi)
+{
+	snd_soc_unregister_codec(&spi->dev);
+	return 0;
+}
+
+static struct spi_driver ad193x_spi_driver = {
+	.driver = {
+		.name	= "ad193x",
+		.owner	= THIS_MODULE,
+	},
+	.probe		= ad193x_spi_probe,
+	.remove		= ad193x_spi_remove,
+};
+module_spi_driver(ad193x_spi_driver);
+
+MODULE_DESCRIPTION("ASoC AD1938/AD1939 audio CODEC driver");
+MODULE_AUTHOR("Barry Song <21cnbao@gmail.com>");
+MODULE_LICENSE("GPL");
