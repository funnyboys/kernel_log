commit 58f9d806d16a38ed3bae11e2ada83393436a4956
Author: Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
Date:   Fri Nov 30 09:42:05 2018 +0200

    ALSA: xen-front: Use Xen common shared buffer implementation
    
    Use page directory based shared buffer implementation
    now available as common code for Xen frontend drivers.
    
    Signed-off-by: Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
    Reviewed-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>

diff --git a/sound/xen/xen_snd_front.h b/sound/xen/xen_snd_front.h
index a2ea2463bcc5..05611f113b94 100644
--- a/sound/xen/xen_snd_front.h
+++ b/sound/xen/xen_snd_front.h
@@ -16,7 +16,7 @@
 struct xen_snd_front_card_info;
 struct xen_snd_front_evtchnl;
 struct xen_snd_front_evtchnl_pair;
-struct xen_snd_front_shbuf;
+struct xen_front_pgdir_shbuf;
 struct xensnd_query_hw_param;
 
 struct xen_snd_front_info {
@@ -35,7 +35,7 @@ int xen_snd_front_stream_query_hw_param(struct xen_snd_front_evtchnl *evtchnl,
 					struct xensnd_query_hw_param *hw_param_resp);
 
 int xen_snd_front_stream_prepare(struct xen_snd_front_evtchnl *evtchnl,
-				 struct xen_snd_front_shbuf *sh_buf,
+				 struct xen_front_pgdir_shbuf *shbuf,
 				 u8 format, unsigned int channels,
 				 unsigned int rate, u32 buffer_sz,
 				 u32 period_sz);

commit 1cee559351a7cb57b405554bac10a6f33c28ed09
Author: Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
Date:   Mon May 14 09:27:41 2018 +0300

    ALSA: xen-front: Implement ALSA virtual sound driver
    
    Implement essential initialization of the sound driver:
      - introduce required data structures
      - handle driver registration
      - handle sound card registration
      - register sound driver on backend connection
      - remove sound driver on backend disconnect
    
    Initialize virtual sound card with streams according to the
    Xen store configuration.
    
    Implement ALSA driver operations including:
      - manage frontend/backend shared buffers
      - manage Xen bus event channel states
    
    Implement requests from front to back for ALSA
    PCM operations.
      - report ALSA period elapsed event: handle XENSND_EVT_CUR_POS
        notifications from the backend when stream position advances
        during playback/capture. The event carries a value of how
        many octets were played/captured at the time of the event.
      - implement explicit stream parameter negotiation between
        backend and frontend: handle XENSND_OP_HW_PARAM_QUERY request
        to read/update configuration space for the parameter given:
        request passes desired parameter interval and the response to
        this request returns min/max interval for the parameter to be used.
    
    Signed-off-by: Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/xen/xen_snd_front.h b/sound/xen/xen_snd_front.h
index 9d0c92100c7b..a2ea2463bcc5 100644
--- a/sound/xen/xen_snd_front.h
+++ b/sound/xen/xen_snd_front.h
@@ -13,15 +13,42 @@
 
 #include "xen_snd_front_cfg.h"
 
+struct xen_snd_front_card_info;
+struct xen_snd_front_evtchnl;
 struct xen_snd_front_evtchnl_pair;
+struct xen_snd_front_shbuf;
+struct xensnd_query_hw_param;
 
 struct xen_snd_front_info {
 	struct xenbus_device *xb_dev;
 
+	struct xen_snd_front_card_info *card_info;
+
 	int num_evt_pairs;
 	struct xen_snd_front_evtchnl_pair *evt_pairs;
 
 	struct xen_front_cfg_card cfg;
 };
 
+int xen_snd_front_stream_query_hw_param(struct xen_snd_front_evtchnl *evtchnl,
+					struct xensnd_query_hw_param *hw_param_req,
+					struct xensnd_query_hw_param *hw_param_resp);
+
+int xen_snd_front_stream_prepare(struct xen_snd_front_evtchnl *evtchnl,
+				 struct xen_snd_front_shbuf *sh_buf,
+				 u8 format, unsigned int channels,
+				 unsigned int rate, u32 buffer_sz,
+				 u32 period_sz);
+
+int xen_snd_front_stream_close(struct xen_snd_front_evtchnl *evtchnl);
+
+int xen_snd_front_stream_write(struct xen_snd_front_evtchnl *evtchnl,
+			       unsigned long pos, unsigned long count);
+
+int xen_snd_front_stream_read(struct xen_snd_front_evtchnl *evtchnl,
+			      unsigned long pos, unsigned long count);
+
+int xen_snd_front_stream_trigger(struct xen_snd_front_evtchnl *evtchnl,
+				 int type);
+
 #endif /* __XEN_SND_FRONT_H */

commit 788ef64a2caee38cc4b8890abd3d7e54dfa3bcc9
Author: Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
Date:   Mon May 14 09:27:39 2018 +0300

    ALSA: xen-front: Implement Xen event channel handling
    
    Handle Xen event channels:
      - create for all configured streams and publish
        corresponding ring references and event channels in Xen store,
        so backend can connect
      - implement event channels interrupt handlers
      - create and destroy event channels with respect to Xen bus state
    
    Signed-off-by: Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/xen/xen_snd_front.h b/sound/xen/xen_snd_front.h
index b52226cb30bc..9d0c92100c7b 100644
--- a/sound/xen/xen_snd_front.h
+++ b/sound/xen/xen_snd_front.h
@@ -13,9 +13,14 @@
 
 #include "xen_snd_front_cfg.h"
 
+struct xen_snd_front_evtchnl_pair;
+
 struct xen_snd_front_info {
 	struct xenbus_device *xb_dev;
 
+	int num_evt_pairs;
+	struct xen_snd_front_evtchnl_pair *evt_pairs;
+
 	struct xen_front_cfg_card cfg;
 };
 

commit fd3b36045c2c612b5f44a47f388677af256d1d0a
Author: Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
Date:   Mon May 14 09:27:38 2018 +0300

    ALSA: xen-front: Read sound driver configuration from Xen store
    
    Read configuration values from Xen store according
    to xen/interface/io/sndif.h protocol:
      - introduce configuration structures for different
        components, e.g. sound card, device, stream
      - read PCM HW parameters, e.g rate, format etc.
      - detect stream type (capture/playback)
      - read device and card parameters
    
    Signed-off-by: Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/xen/xen_snd_front.h b/sound/xen/xen_snd_front.h
index 4ae204b23d32..b52226cb30bc 100644
--- a/sound/xen/xen_snd_front.h
+++ b/sound/xen/xen_snd_front.h
@@ -11,8 +11,12 @@
 #ifndef __XEN_SND_FRONT_H
 #define __XEN_SND_FRONT_H
 
+#include "xen_snd_front_cfg.h"
+
 struct xen_snd_front_info {
 	struct xenbus_device *xb_dev;
+
+	struct xen_front_cfg_card cfg;
 };
 
 #endif /* __XEN_SND_FRONT_H */

commit cc3196ae197c28cd6db0a2e9ddddc2e0aa1e694f
Author: Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
Date:   Mon May 14 09:27:37 2018 +0300

    ALSA: xen-front: Introduce Xen para-virtualized sound frontend driver
    
    Introduce skeleton of the para-virtualized Xen sound
    frontend driver.
    
    Initial handling for Xen bus states: implement
    Xen bus state machine for the frontend driver according to
    the state diagram and recovery flow from sound para-virtualized
    protocol: xen/interface/io/sndif.h.
    
    Signed-off-by: Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/xen/xen_snd_front.h b/sound/xen/xen_snd_front.h
new file mode 100644
index 000000000000..4ae204b23d32
--- /dev/null
+++ b/sound/xen/xen_snd_front.h
@@ -0,0 +1,18 @@
+/* SPDX-License-Identifier: GPL-2.0 OR MIT */
+
+/*
+ * Xen para-virtual sound device
+ *
+ * Copyright (C) 2016-2018 EPAM Systems Inc.
+ *
+ * Author: Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
+ */
+
+#ifndef __XEN_SND_FRONT_H
+#define __XEN_SND_FRONT_H
+
+struct xen_snd_front_info {
+	struct xenbus_device *xb_dev;
+};
+
+#endif /* __XEN_SND_FRONT_H */
