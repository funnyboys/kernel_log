commit 89781d0806c2c4f29072d3f00cb2dd4274aabc3d
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Aug 30 12:03:38 2019 +0200

    ALSA: hda/realtek - Fix overridden device-specific initialization
    
    The recent change to shuffle the codec initialization procedure for
    Realtek via commit 607ca3bd220f ("ALSA: hda/realtek - EAPD turn on
    later") caused the silent output on some machines.  This change was
    supposed to be safe, but it isn't actually; some devices have quirk
    setups to override the EAPD via COEF or BTL in the additional verb
    table, which is applied at the beginning of snd_hda_gen_init().  And
    this EAPD setup is again overridden in alc_auto_init_amp().
    
    For recovering from the regression, tell snd_hda_gen_init() not to
    apply the verbs there by a new flag, then apply the verbs in
    alc_init().
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=204727
    Fixes: 607ca3bd220f ("ALSA: hda/realtek - EAPD turn on later")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 5f199dcb0d18..fb9f1a90238b 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -243,6 +243,7 @@ struct hda_gen_spec {
 	unsigned int indep_hp_enabled:1; /* independent HP enabled */
 	unsigned int have_aamix_ctl:1;
 	unsigned int hp_mic_jack_modes:1;
+	unsigned int skip_verbs:1; /* don't apply verbs at snd_hda_gen_init() */
 
 	/* additional mute flags (only effective with auto_mute_via_amp=1) */
 	u64 mute_bits;

commit 871b9066027702e6e6589da0e1edd3b7dede7205
Author: Hui Wang <hui.wang@canonical.com>
Date:   Wed Aug 14 12:09:08 2019 +0800

    ALSA: hda - Add a generic reboot_notify
    
    Make codec enter D3 before rebooting or poweroff can fix the noise
    issue on some laptops. And in theory it is harmless for all codecs
    to enter D3 before rebooting or poweroff, let us add a generic
    reboot_notify, then realtek and conexant drivers can call this
    function.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 35a670a71c42..5f199dcb0d18 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -332,6 +332,7 @@ int snd_hda_gen_parse_auto_config(struct hda_codec *codec,
 				  struct auto_pin_cfg *cfg);
 int snd_hda_gen_build_controls(struct hda_codec *codec);
 int snd_hda_gen_build_pcms(struct hda_codec *codec);
+void snd_hda_gen_reboot_notify(struct hda_codec *codec);
 
 /* standard jack event callbacks */
 void snd_hda_gen_hp_automute(struct hda_codec *codec,

commit 62810dbdc7b92462118d693b74087357f3ab7f94
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon May 20 19:08:11 2019 +0200

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 46
    
    Based on 1 normalized pattern(s):
    
      this driver is free software you can redistribute it and or modify
      it under the terms of the gnu general public license as published by
      the free software foundation either version 2 of the license or at
      your option any later version
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-or-later
    
    has been chosen to replace the boilerplate/reference in 5 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Reviewed-by: Kate Stewart <kstewart@linuxfoundation.org>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190520170858.461662648@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 78d77042b05a..35a670a71c42 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -1,12 +1,8 @@
+/* SPDX-License-Identifier: GPL-2.0-or-later */
 /*
  * Generic BIOS auto-parser helper functions for HD-audio
  *
  * Copyright (c) 2012 Takashi Iwai <tiwai@suse.de>
- *
- * This driver is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
  */
 
 #ifndef __SOUND_HDA_GENERIC_H

commit b3802783d0b58989d70a484aa2d50fb8ce40841b
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Nov 26 17:47:46 2018 +0100

    ALSA: hda - Support led audio trigger
    
    Now all relevant platform drivers are providing the LED audio trigger,
    we can switch the mute LED control with the LED trigger, finally.
    
    For the mic-mute LED trigger, a common fixup function,
    snd_hda_gen_fixup_micmute_led(), is provided to be called for the
    corresponding quirk entries.  This sets up the capture sync hook with
    ledtrig_audio_set() call appropriately.
    
    For the mute LED trigger, which is done currently only for
    thinkpad_acpi, the call is replaced with ledtrig_audio_set() as well.
    
    Overall, the beauty of the new implementation is that the whole ugly
    bindings with request_symbol() are dropped, and also that it provides
    more flexibility to users.
    
    One potential behavior change by this patch is that the mute LED enum
    may be created on machines that actually have no LED device.  In the
    former code, we did test-call and abort binding if the test failed.
    But with the LED-trigger binding, this test isn't possible, and the
    actual check is done in the LED class device side.  So it's the
    downside of simpleness.
    
    Also, note that the HD-audio codec driver doesn't select CONFIG_LEDS
    and co by itself.  It's supposed to be selected by the platform
    drivers instead.
    
    Acked-by: Jacek Anaszewski <jacek.anaszewski@gmail.com>
    Acked-by: Pavel Machek <pavel@ucw.cz>
    Acked-by: Pali Rohár <pali.rohar@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 10123664fa61..78d77042b05a 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -357,5 +357,7 @@ int snd_hda_gen_fix_pin_power(struct hda_codec *codec, hda_nid_t pin);
 
 int snd_hda_gen_add_micmute_led(struct hda_codec *codec,
 				void (*hook)(struct hda_codec *));
+void snd_hda_gen_fixup_micmute_led(struct hda_codec *codec,
+				   const struct hda_fixup *fix, int action);
 
 #endif /* __SOUND_HDA_GENERIC_H */

commit f567b78851d49a4887b9bb1a8b3cfad37da515c8
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Jun 18 17:26:12 2018 +0200

    ALSA: hda - Move mic mute LED helper to the generic parser
    
    Move the code for setting up and controlling the mic mute LED hook
    from dell-wmi helper to the generic parser, so that it can be referred
    from the multiple driver codes.
    
    No functional change.
    
    Tested-by: Pali Rohár <pali.rohar@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 61772317de46..10123664fa61 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -86,6 +86,16 @@ struct badness_table {
 extern const struct badness_table hda_main_out_badness;
 extern const struct badness_table hda_extra_out_badness;
 
+struct hda_micmute_hook {
+	unsigned int led_mode;
+	unsigned int capture;
+	unsigned int led_value;
+	void (*update)(struct hda_codec *codec);
+	void (*old_hook)(struct hda_codec *codec,
+			 struct snd_kcontrol *kcontrol,
+			 struct snd_ctl_elem_value *ucontrol);
+};
+
 struct hda_gen_spec {
 	char stream_name_analog[32];	/* analog PCM stream */
 	const struct hda_pcm_stream *stream_analog_playback;
@@ -276,6 +286,9 @@ struct hda_gen_spec {
 			      struct snd_kcontrol *kcontrol,
 			      struct snd_ctl_elem_value *ucontrol);
 
+	/* mic mute LED hook; called via cap_sync_hook */
+	struct hda_micmute_hook micmute_led;
+
 	/* PCM hooks */
 	void (*pcm_playback_hook)(struct hda_pcm_stream *hinfo,
 				  struct hda_codec *codec,
@@ -342,4 +355,7 @@ unsigned int snd_hda_gen_path_power_filter(struct hda_codec *codec,
 void snd_hda_gen_stream_pm(struct hda_codec *codec, hda_nid_t nid, bool on);
 int snd_hda_gen_fix_pin_power(struct hda_codec *codec, hda_nid_t pin);
 
+int snd_hda_gen_add_micmute_led(struct hda_codec *codec,
+				void (*hook)(struct hda_codec *));
+
 #endif /* __SOUND_HDA_GENERIC_H */

commit 7480316c265c9fcdbf73b1b8dec061b893b7e987
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Apr 10 17:37:34 2017 +0200

    ALSA: hda - Allow to enable/disable vmaster build explicitly
    
    Another preliminary patch for the dual-codec support: since the
    support of vmaster over multiple codecs is difficult, simply disable
    it by a new flag to hda_codec struct.  A new user hint is added as
    well for consistency.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index f66fc7e25e07..61772317de46 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -229,6 +229,7 @@ struct hda_gen_spec {
 	unsigned int add_jack_modes:1; /* add i/o jack mode enum ctls */
 	unsigned int power_down_unused:1; /* power down unused widgets */
 	unsigned int dac_min_mute:1; /* minimal = mute for DACs */
+	unsigned int suppress_vmaster:1; /* don't create vmaster kctls */
 
 	/* other internal flags */
 	unsigned int no_analog:1; /* digital I/O only */

commit c4a58c308a459901827ac941d40d5db047a1cb71
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Dec 8 11:48:39 2015 +0100

    ALSA: hda - Make snd_hda_parse_nid_path() local
    
    An exported function snd_hda_parse_nid_path() is used only inside
    hda_generic.c.  Let's make it a static local function for a better
    code optimization.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 692510e59365..f66fc7e25e07 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -308,9 +308,6 @@ void snd_hda_gen_free(struct hda_codec *codec);
 
 int snd_hda_get_path_idx(struct hda_codec *codec, struct nid_path *path);
 struct nid_path *snd_hda_get_path_from_idx(struct hda_codec *codec, int idx);
-bool snd_hda_parse_nid_path(struct hda_codec *codec, hda_nid_t from_nid,
-			    hda_nid_t to_nid, int anchor_nid,
-			    struct nid_path *path);
 struct nid_path *
 snd_hda_add_new_path(struct hda_codec *codec, hda_nid_t from_nid,
 		     hda_nid_t to_nid, int anchor_nid);

commit 1e73bf781546f3969039fe60bff1eca44c87c241
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Dec 8 11:47:31 2015 +0100

    ALSA: hda - Remove unused snd_hda_get_nid_path()
    
    An exported helper function snd_hda_get_nid_path() is nowhere used.
    Let's remove it.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 56e4139b9032..692510e59365 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -306,8 +306,6 @@ int snd_hda_gen_spec_init(struct hda_gen_spec *spec);
 int snd_hda_gen_init(struct hda_codec *codec);
 void snd_hda_gen_free(struct hda_codec *codec);
 
-struct nid_path *snd_hda_get_nid_path(struct hda_codec *codec,
-				      hda_nid_t from_nid, hda_nid_t to_nid);
 int snd_hda_get_path_idx(struct hda_codec *codec, struct nid_path *path);
 struct nid_path *snd_hda_get_path_from_idx(struct hda_codec *codec, int idx);
 bool snd_hda_parse_nid_path(struct hda_codec *codec, hda_nid_t from_nid,

commit 6b275b140094b701f7ad15272f0597e9d954e5e4
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Mar 20 18:11:05 2015 +0100

    ALSA: hda - Fix power of pins used for mute LED with vrefs
    
    Some pins are used for controlling the LED with the VREF value.
    This patch changes the power behavior of such pins to be constantly
    up.  A new state, pin_fixed, is introduced to nid_path to indicate
    that the path contains the fixed pin.  This improves also the
    readability a bit for other static routes, too.
    
    Then a helper function snd_hda_gen_fix_pin_power() is called from the
    codec driver for such fixed pins, and it will create fake paths
    containing only these pins with pin_fixed=1 flag.
    
    Reported-by: David Henningsson <david.henningsson@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 54659b51fe16..56e4139b9032 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -48,6 +48,7 @@ struct nid_path {
 	unsigned int ctls[NID_PATH_NUM_CTLS]; /* NID_PATH_XXX_CTL */
 	bool active:1;		/* activated by driver */
 	bool pin_enabled:1;	/* pins are enabled */
+	bool pin_fixed:1;	/* path with fixed pin */
 	bool stream_enabled:1;	/* stream is active */
 };
 
@@ -343,5 +344,6 @@ unsigned int snd_hda_gen_path_power_filter(struct hda_codec *codec,
 					   hda_nid_t nid,
 					   unsigned int power_state);
 void snd_hda_gen_stream_pm(struct hda_codec *codec, hda_nid_t nid, bool on);
+int snd_hda_gen_fix_pin_power(struct hda_codec *codec, hda_nid_t pin);
 
 #endif /* __SOUND_HDA_GENERIC_H */

commit e6feb5d08509be1af2ebc894dae35f32f7b92ab6
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Mar 16 21:32:11 2015 +0100

    ALSA: hda - Support advanced power state controls
    
    This patch enables the finer power state control of each widget
    depending on the jack plug state and streaming state in addition to
    the existing power_down_unused power optimization.  The new feature is
    enabled only when codec->power_mgmt flag is set.
    
    Two new flags, pin_enabled and stream_enabled, are introduced in
    nid_path struct for marking the two individual power states: the pin
    plug/unplug and DAC/ADC stream, respectively.  They can be set
    statically in case they are static routes (e.g. some mixer paths),
    too.
    
    The power up and down events for each pin are triggered via the
    standard hda_jack table.  The call order is hard-coded, relying on the
    current implementation of jack event chain (a la FILO/stack order).
    
    One point to be dealt carefully is that DAC/ADC cannot be powered
    on/off while streaming.  They are pinned as long as the stream is
    running.  For controlling the power of DAC/ADC, a new patch_ops is
    added.  The generic parser provides the default callback for that.
    
    As of this patch, only IDT/Sigmatel codec driver enables the flag.
    The support on other codecs will follow.
    
    An assumption we made in this code is that the widget state (e.g. amp,
    pinctl, connections) remains after the widget power transition (not
    about FG power transition).  This is true for IDT codecs, at least.
    But if the widget state is lost at widget power transition, we'd need
    to implement additional code to sync the cached amp/verbs for the
    specific NID.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index b211f889b335..54659b51fe16 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -46,7 +46,9 @@ struct nid_path {
 	unsigned char idx[MAX_NID_PATH_DEPTH];
 	unsigned char multi[MAX_NID_PATH_DEPTH];
 	unsigned int ctls[NID_PATH_NUM_CTLS]; /* NID_PATH_XXX_CTL */
-	bool active;
+	bool active:1;		/* activated by driver */
+	bool pin_enabled:1;	/* pins are enabled */
+	bool stream_enabled:1;	/* stream is active */
 };
 
 /* mic/line-in auto switching entry */
@@ -340,5 +342,6 @@ int snd_hda_gen_check_power_status(struct hda_codec *codec, hda_nid_t nid);
 unsigned int snd_hda_gen_path_power_filter(struct hda_codec *codec,
 					   hda_nid_t nid,
 					   unsigned int power_state);
+void snd_hda_gen_stream_pm(struct hda_codec *codec, hda_nid_t nid, bool on);
 
 #endif /* __SOUND_HDA_GENERIC_H */

commit bbbc7e8502c95237dbd86cc4d0a12ca9a6b18c8f
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Feb 27 17:43:19 2015 +0100

    ALSA: hda - Allocate hda_pcm objects dynamically
    
    So far, the hda_codec object kept the hda_pcm list in an array, and
    the codec driver was expected to assign the array.  However, this
    makes the object life cycle management harder, because the assigned
    array is freed at the codec driver detach while it might be still
    accessed by the opened streams.
    
    In this patch, we allocate each hda_pcm object dynamically and manage
    it as a linked list.  Each object has a kref refcount, and both the
    codec driver binder and the PCM open/close touches it, so that the
    object won't be freed while in use.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 3d852660443a..b211f889b335 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -144,7 +144,7 @@ struct hda_gen_spec {
 	int const_channel_count;	/* channel count for all */
 
 	/* PCM information */
-	struct hda_pcm pcm_rec[3];	/* used in build_pcms() */
+	struct hda_pcm *pcm_rec[3];	/* used in build_pcms() */
 
 	/* dynamic controls, init_verbs and input_mux */
 	struct auto_pin_cfg autocfg;

commit 74f14b36838a6f5406ff1a14fcfda935c190476c
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Dec 15 13:43:59 2014 +0100

    ALSA: hda - Make add_stereo_mix_input flag tristate
    
    ... for distinguishing whether it's explicitly enabled via a user hint
    or enabled by a driver as a fallback.  Now the former case corresponds
    to HDA_HINT_STEREO_MIX_ENABLE while the latter to
    HDA_HINT_STEREO_MIX_AUTO.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 61dd5153f512..3d852660443a 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -222,7 +222,7 @@ struct hda_gen_spec {
 	unsigned int vmaster_mute_enum:1; /* add vmaster mute mode enum */
 	unsigned int indep_hp:1; /* independent HP supported */
 	unsigned int prefer_hp_amp:1; /* enable HP amp for speaker if any */
-	unsigned int add_stereo_mix_input:1; /* add aamix as a capture src */
+	unsigned int add_stereo_mix_input:2; /* add aamix as a capture src */
 	unsigned int add_jack_modes:1; /* add i/o jack mode enum ctls */
 	unsigned int power_down_unused:1; /* power down unused widgets */
 	unsigned int dac_min_mute:1; /* minimal = mute for DACs */
@@ -291,6 +291,13 @@ struct hda_gen_spec {
 				    struct hda_jack_callback *cb);
 };
 
+/* values for add_stereo_mix_input flag */
+enum {
+	HDA_HINT_STEREO_MIX_DISABLE,	/* No stereo mix input */
+	HDA_HINT_STEREO_MIX_ENABLE,	/* Add stereo mix input */
+	HDA_HINT_STEREO_MIX_AUTO,	/* Add only if auto-mic is disabled */
+};
+
 int snd_hda_gen_spec_init(struct hda_gen_spec *spec);
 
 int snd_hda_gen_init(struct hda_codec *codec);

commit 1a4f69d5aaecb39a980fc20b14ec800fd5b53061
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Sep 11 15:22:46 2014 +0200

    ALSA: hda - Allow multiple callbacks for jack
    
    So far, hda_jack infrastructure allows only one callback per jack, and
    this makes things slightly complicated when a driver wants to assign
    multiple tasks to a jack, e.g. the standard auto-mute with a power
    up/down sequence.  This can be simplified if the hda_jack accepts
    multiple callbacks.
    
    This patch is such an extension: the callback-specific part (the
    function and private_data) is split to another struct from
    hda_jack_tbl, and multiple such objects can be assigned to a single
    hda_jack_tbl entry.
    
    The new struct hda_jack_callback is passed to each callback function
    now, thus the patch became bigger than expected.  But these changes
    are mostly trivial.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 72f5624125fb..61dd5153f512 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -284,11 +284,11 @@ struct hda_gen_spec {
 
 	/* automute / autoswitch hooks */
 	void (*hp_automute_hook)(struct hda_codec *codec,
-				 struct hda_jack_tbl *tbl);
+				 struct hda_jack_callback *cb);
 	void (*line_automute_hook)(struct hda_codec *codec,
-				   struct hda_jack_tbl *tbl);
+				   struct hda_jack_callback *cb);
 	void (*mic_autoswitch_hook)(struct hda_codec *codec,
-				    struct hda_jack_tbl *tbl);
+				    struct hda_jack_callback *cb);
 };
 
 int snd_hda_gen_spec_init(struct hda_gen_spec *spec);
@@ -320,11 +320,11 @@ int snd_hda_gen_build_pcms(struct hda_codec *codec);
 
 /* standard jack event callbacks */
 void snd_hda_gen_hp_automute(struct hda_codec *codec,
-			     struct hda_jack_tbl *jack);
+			     struct hda_jack_callback *jack);
 void snd_hda_gen_line_automute(struct hda_codec *codec,
-			       struct hda_jack_tbl *jack);
+			       struct hda_jack_callback *jack);
 void snd_hda_gen_mic_autoswitch(struct hda_codec *codec,
-				struct hda_jack_tbl *jack);
+				struct hda_jack_callback *jack);
 void snd_hda_gen_update_outputs(struct hda_codec *codec);
 
 #ifdef CONFIG_PM

commit 62f949bf6bf6ceb44872c44ef3913a96d93fb5d4
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Sep 11 14:06:53 2014 +0200

    ALSA: hda - Get rid of action field from struct hda_jack_tbl
    
    The action value assigned to each hda_jack_tbl entry is mostly
    superfluous.  The actually used values are either the widget NID or a
    value specific to the callback.
    
    The former case can be simply replaced by a reference to widget NID
    itself.  The only place doing the latter is STAC/IDT codec driver for
    the powermap handling.  But, the code doesn't need to check the action
    field at all -- the function jack_update_power() is called either with
    a specific pin or with NULL.  So the check of jack->action can be
    removed completely there, too.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 3f95f1d3f1f8..72f5624125fb 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -12,12 +12,6 @@
 #ifndef __SOUND_HDA_GENERIC_H
 #define __SOUND_HDA_GENERIC_H
 
-/* unsol event tags */
-enum {
-	HDA_GEN_HP_EVENT = 1, HDA_GEN_FRONT_EVENT, HDA_GEN_MIC_EVENT,
-	HDA_GEN_LAST_EVENT = HDA_GEN_MIC_EVENT
-};
-
 /* table entry for multi-io paths */
 struct hda_multi_io {
 	hda_nid_t pin;		/* multi-io widget pin NID */

commit d89c6c0c91af0344b52dd21ca48dd29821fee677
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Sep 1 10:07:04 2014 +0200

    ALSA: hda - Add TLV_DB_SCALE_MUTE bit for relevant controls
    
    The DACs on Sigmatel/IDT codecs do mute at the lowest volume level,
    and in the earlier drivers, we passed TLV_DB_SCALE_MUTE bit for each
    volume control element like Speaker and Headphone as well as Master.
    Along with the translation to the generic parser, however, the TLV bit
    was lost for the slave controls (e.g. Speaker) but set only to
    Master.  In theory this should have sufficed, but apps, particularly
    PA, do care the slave volume bits, so we seem to see a regression in
    the volume controls.
    
    This patch adds a flag to hda_gen_spec to specify the DAC mute
    feature, and adds the TLV bit properly for all relevant volume
    controls.  Also, the TLV bit for vmaster is set in hda_generic.c, so
    that we can get rid of all tricks from the codec driver side.
    
    As the similar hack is applied to Conexant 5051 stuff, we can get rid
    of it as well.
    
    BugLink: https://bugs.launchpad.net/bugs/1357928
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index bb2dea743986..3f95f1d3f1f8 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -231,6 +231,7 @@ struct hda_gen_spec {
 	unsigned int add_stereo_mix_input:1; /* add aamix as a capture src */
 	unsigned int add_jack_modes:1; /* add i/o jack mode enum ctls */
 	unsigned int power_down_unused:1; /* power down unused widgets */
+	unsigned int dac_min_mute:1; /* minimal = mute for DACs */
 
 	/* other internal flags */
 	unsigned int no_analog:1; /* digital I/O only */

commit c4d1489390aa0be73104fc502a1e3107511c8926
Merge: a8dca4604a13 ef8e39b51f24
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Feb 12 10:34:27 2014 +0100

    Merge branch 'for-linus' into for-next

commit a8dca4604a13469892c77c25638691d7757e7a47
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Feb 10 18:23:57 2014 +0100

    ALSA: hda - Make snd_hda_gen_spec_free() static
    
    The last user of snd_hda_gen_spec_free() is patch_via.c, and we can
    rewrite it safely with snd_hda_gen_free(), so that
    snd_hda_gen_spec_free() can be a local function in hda_generic.c.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 07f767231c9f..9b2cbf8c1eb4 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -296,7 +296,6 @@ struct hda_gen_spec {
 };
 
 int snd_hda_gen_spec_init(struct hda_gen_spec *spec);
-void snd_hda_gen_spec_free(struct hda_gen_spec *spec);
 
 int snd_hda_gen_init(struct hda_codec *codec);
 void snd_hda_gen_free(struct hda_codec *codec);

commit 7fe307117db5bd7ec6efb93c563dcf44577b6d2b
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Jan 30 17:59:02 2014 +0100

    ALSA: hda - Fix inconsistent Mic mute LED
    
    The current code for controlling mic mute LED in patch_sigmatel.c
    blindly assumes that there is a single capture switch.  But, there can
    be multiple multiple ones, and each of them flips the state, ended up
    in an inconsistent state.
    
    For fixing this problem, this patch adds kcontrol to be passed to the
    hook function so that the callee can check which switch is being
    accessed.  In stac_capture_led_hook(), the state is checked as a
    bitmask, and turns on the LED when all capture switches are off.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 07f767231c9f..c908afbe4d94 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -274,6 +274,7 @@ struct hda_gen_spec {
 	void (*init_hook)(struct hda_codec *codec);
 	void (*automute_hook)(struct hda_codec *codec);
 	void (*cap_sync_hook)(struct hda_codec *codec,
+			      struct snd_kcontrol *kcontrol,
 			      struct snd_ctl_elem_value *ucontrol);
 
 	/* PCM hooks */

commit dfc6e469b6d1ee5e8c71fa398b7b58fbb600dad8
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Jan 13 16:09:57 2014 +0100

    ALSA: hda - Apply codec power_filter to FG nodes
    
    Apply the codec->power_filter to the FG nodes in general for reducing
    hackish set_power_state ops override in patch_sigmatel.c.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 0929a06df812..07f767231c9f 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -335,5 +335,8 @@ void snd_hda_gen_update_outputs(struct hda_codec *codec);
 #ifdef CONFIG_PM
 int snd_hda_gen_check_power_status(struct hda_codec *codec, hda_nid_t nid);
 #endif
+unsigned int snd_hda_gen_path_power_filter(struct hda_codec *codec,
+					   hda_nid_t nid,
+					   unsigned int power_state);
 
 #endif /* __SOUND_HDA_GENERIC_H */

commit 3690739b013504d33fe9348dd45f6b126aa370fb
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Dec 10 17:29:26 2013 +0100

    ALSA: hda - Add static DAC/pin mapping for AD1986A codec
    
    AD1986A codec is a pretty old codec and has really many hidden
    restrictions.  One of such is that each DAC is dedicated to certain
    pin although there are possible connections.  Currently, the generic
    parser tries to assign individual DACs as much as possible, and this
    lead to two bad situations: connections where the sound actually
    doesn't work, and connections conflicting other channels.
    
    We may fix this by trying to find the best connections more harder,
    but as of now, it's easier to give some hints for paired DAC/pin
    connections and honor them if available, since such a hint is needed
    only for specific codecs (right now only AD1986A, and there will be
    unlikely any others in future).
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=64971
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=66621
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 7e45cb44d151..0929a06df812 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -249,6 +249,9 @@ struct hda_gen_spec {
 	const struct badness_table *main_out_badness;
 	const struct badness_table *extra_out_badness;
 
+	/* preferred pin/DAC pairs; an array of paired NIDs */
+	const hda_nid_t *preferred_dacs;
+
 	/* loopback mixing mode */
 	bool aamix_mode;
 

commit a1114a8c681b0724d6ad905f53ff06aa756f5fb8
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Nov 4 16:32:01 2013 +0100

    ALSA: hda - Introduce the bitmask for excluding output volume
    
    Add a bitmask to hda_gen_spec indicating NIDs to exclude from the
    possible volume controls.  That is, when the bit is set, the NID
    corresponding to the bit won't be picked as an output volume control
    any longer.
    
    Basically this is just a band-aid for working around the issue found
    with CS4208 codec, where only the headphone pin has a volume AMP with
    different dB steps.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=60811
    Cc: <stable@vger.kernel.org> [v3.12+]
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 48d44026705b..7e45cb44d151 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -242,6 +242,9 @@ struct hda_gen_spec {
 	/* additional mute flags (only effective with auto_mute_via_amp=1) */
 	u64 mute_bits;
 
+	/* bitmask for skipping volume controls */
+	u64 out_vol_mask;
+
 	/* badness tables for output path evaluations */
 	const struct badness_table *main_out_badness;
 	const struct badness_table *extra_out_badness;

commit da96fb5b0185d27faab0746f872d22b0cee7b026
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Jul 29 16:54:36 2013 +0200

    ALSA: hda - Fix invalid multi-io creation on VAIO-Z laptops
    
    VAIO-Z laptops need to use the specific DAC for the speaker output
    by some unknown reason although the codec itself supports the flexible
    connection.  So we implemented a workaround by a new flag,
    no_primary_hp, for assigning the speaker pin first.
    
    This worked until 3.8 kernel, but it got broken because the driver
    learned for a better multi-io pin mapping, and not it can assign two
    mic pins for multi-io.  Since the multi-io requires to be the primary
    output, the hp and two mic pins are assigned in prior to the speaker
    in the end.
    
    Although the machine has two mic pins, one of them is used as a noise-
    canceling headphone, thus it's no real retaskable mic jack.  Thus, at
    best, we can disable the multi-io assignment and make the parser
    behavior back to the state before the multi-io.
    
    This patch adds again a new flag, no_multi_io, to indicate that the
    device has no multi-io capability, and set it in the fixup for
    VAIO-Z.  The no_multi_io flag itself can be used generically, added
    via a helper line, too.
    
    Reported-by: Tormen <my.nl.abos@gmail.com>
    Reported-by: Adam Williamson <awilliam@redhat.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index e199a852388b..48d44026705b 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -220,6 +220,7 @@ struct hda_gen_spec {
 	unsigned int hp_mic:1; /* Allow HP as a mic-in */
 	unsigned int suppress_hp_mic_detect:1; /* Don't detect HP/mic */
 	unsigned int no_primary_hp:1; /* Don't prefer HP pins to speaker pins */
+	unsigned int no_multi_io:1; /* Don't try multi I/O config */
 	unsigned int multi_cap_vol:1; /* allow multiple capture xxx volumes */
 	unsigned int inv_dmic_split:1; /* inverted dmic w/a for conexant */
 	unsigned int own_eapd_ctl:1; /* set EAPD by own function */

commit 7eebffd3f4328c6dc220521f14b384affdaf9427
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Jun 24 16:00:21 2013 +0200

    ALSA: hda - Add auto_mute_via_amp flag to generic parser
    
    Add a new flag, auto_mute_via_amp, to determine the behavior of the
    headphone / line-out auto-mute.  When this flag is set, the generic
    driver mutes the speaker and line outputs via the amp mute of each
    pin, instead of changing the pin control values.
    
    This is introduced for devices that don't work expectedly with the pin
    control values; for example, some devices are known to keep enabling
    the speaker outputs no matter which pin control values are set on the
    speaker pins.
    
    The driver doesn't check actually whether the pins have the output amp
    caps, but assumes that the proper mixer (mute) controls are created on
    all these pins.  If not the case, you can't use this flag for your
    device.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 76200314ee95..e199a852388b 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -209,6 +209,7 @@ struct hda_gen_spec {
 	unsigned int master_mute:1;	/* master mute over all */
 	unsigned int keep_vref_in_automute:1; /* Don't clear VREF in automute */
 	unsigned int line_in_auto_switch:1; /* allow line-in auto switch */
+	unsigned int auto_mute_via_amp:1; /* auto-mute via amp instead of pinctl */
 
 	/* parser behavior flags; set before snd_hda_gen_parse_auto_config() */
 	unsigned int suppress_auto_mute:1; /* suppress input jack auto mute */
@@ -237,6 +238,9 @@ struct hda_gen_spec {
 	unsigned int have_aamix_ctl:1;
 	unsigned int hp_mic_jack_modes:1;
 
+	/* additional mute flags (only effective with auto_mute_via_amp=1) */
+	u64 mute_bits;
+
 	/* badness tables for output path evaluations */
 	const struct badness_table *main_out_badness;
 	const struct badness_table *extra_out_badness;

commit 05909d5c679cf7c9a8a5bc663677c066a546894f
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri May 31 19:55:54 2013 +0200

    ALSA: hda - Add keep_eapd_on flag to generic parser
    
    VT1802 codec seems to reset EAPD of other pins in the hardware level,
    and this was another reason of the silent headphone output on some
    machines.  As a workaround, introduce a new flag indicating to keep
    the EPAD on to the generic parser, and set it in patch_via.c.
    
    Reported-by: Alex Riesen <raa.lkml@gmail.com>
    Cc: <stable@vger.kernel.org> [v3.9]
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 54e665160379..76200314ee95 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -222,6 +222,7 @@ struct hda_gen_spec {
 	unsigned int multi_cap_vol:1; /* allow multiple capture xxx volumes */
 	unsigned int inv_dmic_split:1; /* inverted dmic w/a for conexant */
 	unsigned int own_eapd_ctl:1; /* set EAPD by own function */
+	unsigned int keep_eapd_on:1; /* don't turn off EAPD automatically */
 	unsigned int vmaster_mute_enum:1; /* add vmaster mute mode enum */
 	unsigned int indep_hp:1; /* independent HP supported */
 	unsigned int prefer_hp_amp:1; /* enable HP amp for speaker if any */

commit 98bd11152b5b8725b26d803dfdf205dc989d9832
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Mar 22 14:53:50 2013 +0100

    ALSA: hda - Allow codec drivers to give own badness tables
    
    The standard badness values don't seem to fit to all preferences.
    Some configuration prefer the side output over the headphone, some
    want the speaker over the surround, etc.
    
    This patch moves the badness table pointers into hda_gen_spec, so that
    the codec driver can override them.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 39d83943f25d..54e665160379 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -76,6 +76,19 @@ enum {
 	HDA_GEN_PCM_ACT_CLOSE,
 };
 
+/* DAC assignment badness table */
+struct badness_table {
+	int no_primary_dac;	/* no primary DAC */
+	int no_dac;		/* no secondary DACs */
+	int shared_primary;	/* primary DAC is shared with main output */
+	int shared_surr;	/* secondary DAC shared with main or primary */
+	int shared_clfe;	/* third DAC shared with main or primary */
+	int shared_surr_main;	/* secondary DAC sahred with main/DAC0 */
+};
+
+extern const struct badness_table hda_main_out_badness;
+extern const struct badness_table hda_extra_out_badness;
+
 struct hda_gen_spec {
 	char stream_name_analog[32];	/* analog PCM stream */
 	const struct hda_pcm_stream *stream_analog_playback;
@@ -223,6 +236,10 @@ struct hda_gen_spec {
 	unsigned int have_aamix_ctl:1;
 	unsigned int hp_mic_jack_modes:1;
 
+	/* badness tables for output path evaluations */
+	const struct badness_table *main_out_badness;
+	const struct badness_table *extra_out_badness;
+
 	/* loopback mixing mode */
 	bool aamix_mode;
 

commit 7504b6cd220a3dd8104abe3d0f985c6957dc3e17
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Mar 18 11:25:51 2013 +0100

    ALSA: hda - Move beep attach/detach calls in hda_generic.c
    
    Instead of calling snd_hda_attach_beep_device() and
    snd_hda_detach_beep_device() in each codec driver, move them to the
    generic parser.  The codec driver just needs to set spec->beep_nid for
    activating the digital beep.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 094e6af7a107..39d83943f25d 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -226,6 +226,9 @@ struct hda_gen_spec {
 	/* loopback mixing mode */
 	bool aamix_mode;
 
+	/* digital beep */
+	hda_nid_t beep_nid;
+
 	/* for virtual master */
 	hda_nid_t vmaster_nid;
 	unsigned int vmaster_tlv[4];

commit 8ba955cef30921417dffba901a8af5a2662a1dec
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Mar 7 18:40:58 2013 +0100

    ALSA: hda - Avoid automatic pin-ctl update for hp/mic when jack ctl exists
    
    When the headphone mic jack enum control is created (via explicitly
    specification by user), it doesn't make much sense to change the I/O
    direction dynamically per capture source change, since the I/O
    direction is rather controlled over the enum ctl.
    
    This also reduces the implicit dependency between the capture source
    and the hp mic jack enum ctls, which might confuse a program accessing
    the whole control elements at once like alsactl.
    
    In addition, this patch introduces update_hp_automute_hook() function
    to call the proper hook function.  It's just to remove the open codes
    in multiple places in hda_generic.c.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 984bf301ebbb..094e6af7a107 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -221,6 +221,7 @@ struct hda_gen_spec {
 	unsigned int dyn_adc_switch:1; /* switch ADCs (for ALC275) */
 	unsigned int indep_hp_enabled:1; /* independent HP enabled */
 	unsigned int have_aamix_ctl:1;
+	unsigned int hp_mic_jack_modes:1;
 
 	/* loopback mixing mode */
 	bool aamix_mode;

commit f811c3cf8fae63ecc8a937ba7376490e2565f8f1
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Mar 7 18:32:59 2013 +0100

    ALSA: hda - Consolidate add_in_jack_modes and add_out_jack_modes hints
    
    There is no big merit to distinguish these two hints.  Instead, just
    have a single flag, add_jack_modes, for creating the jack mode enum
    ctls for both I/O directions.
    
    The hint string parser code is left and translated as add_jack_modes
    just for keeping compatibility.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 7ee5b57946c9..984bf301ebbb 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -213,8 +213,7 @@ struct hda_gen_spec {
 	unsigned int indep_hp:1; /* independent HP supported */
 	unsigned int prefer_hp_amp:1; /* enable HP amp for speaker if any */
 	unsigned int add_stereo_mix_input:1; /* add aamix as a capture src */
-	unsigned int add_out_jack_modes:1; /* add output jack mode enum ctls */
-	unsigned int add_in_jack_modes:1; /* add input jack mode enum ctls */
+	unsigned int add_jack_modes:1; /* add i/o jack mode enum ctls */
 	unsigned int power_down_unused:1; /* power down unused widgets */
 
 	/* other internal flags */

commit 967303dabc22335e83c6ee4a9e0684a7c05da976
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Feb 19 17:12:42 2013 +0100

    ALSA: hda - Add the generic Headphone Mic feature
    
    This patch improves the generic parser code to allow to set up the
    headphone jack as a mic input.  User can enable this feature by giving
    hp_mic hint string.
    
    The former shared hp/mic feature for the single built-in mic is still
    retained.  This detection can be disabled now via hp_mic_detect hint
    string, too.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 009b57be96d3..7ee5b57946c9 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -145,7 +145,10 @@ struct hda_gen_spec {
 	hda_nid_t private_dac_nids[AUTO_CFG_MAX_OUTS];
 	hda_nid_t imux_pins[HDA_MAX_NUM_INPUTS];
 	unsigned int dyn_adc_idx[HDA_MAX_NUM_INPUTS];
+	/* shared hp/mic */
 	hda_nid_t shared_mic_vref_pin;
+	hda_nid_t hp_mic_pin;
+	int hp_mic_mux_idx;
 
 	/* DAC/ADC lists */
 	int num_all_dacs;
@@ -200,7 +203,8 @@ struct hda_gen_spec {
 
 	/* other parse behavior flags */
 	unsigned int need_dac_fix:1; /* need to limit DACs for multi channels */
-	unsigned int shared_mic_hp:1; /* HP/Mic-in sharing */
+	unsigned int hp_mic:1; /* Allow HP as a mic-in */
+	unsigned int suppress_hp_mic_detect:1; /* Don't detect HP/mic */
 	unsigned int no_primary_hp:1; /* Don't prefer HP pins to speaker pins */
 	unsigned int multi_cap_vol:1; /* allow multiple capture xxx volumes */
 	unsigned int inv_dmic_split:1; /* inverted dmic w/a for conexant */

commit 0186f4f4f248d00a2bfcd7c305cfec12fa8e5e30
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Feb 7 10:45:11 2013 +0100

    ALSA: hda - Use generic array for loopback list management
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index d5348dd7a14f..009b57be96d3 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -228,8 +228,7 @@ struct hda_gen_spec {
 	struct hda_vmaster_mute_hook vmaster_mute;
 
 	struct hda_loopback_check loopback;
-	int num_loopbacks;
-	struct hda_amp_list loopback_list[8];
+	struct snd_array loopback_list;
 
 	/* multi-io */
 	int multi_ios;

commit 46a144818acd8b340bdc6ccf12255c7fb301f0ee
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Feb 7 09:58:11 2013 +0100

    ALSA: hda - Enable loopback accounts for CONFIG_PM=n, too
    
    The loopback list is referred by the VIA codec driver no matter
    whether CONFIG_PM is set or not, thus we need to enable it always.
    Otherwise it gets compile errors.
    
    Reported-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 065fcc77b860..d5348dd7a14f 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -226,11 +226,10 @@ struct hda_gen_spec {
 	hda_nid_t vmaster_nid;
 	unsigned int vmaster_tlv[4];
 	struct hda_vmaster_mute_hook vmaster_mute;
-#ifdef CONFIG_PM
+
 	struct hda_loopback_check loopback;
 	int num_loopbacks;
 	struct hda_amp_list loopback_list[8];
-#endif
 
 	/* multi-io */
 	int multi_ios;

commit 55196fffc951059bb89f97ba53203acb9f87a6f1
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Jan 24 17:32:56 2013 +0100

    ALSA: hda - Implement path-based power filter to the generic parser
    
    This patch adds a better power filter hook for powering down unused
    widgets in the generic parser.
    
    The feature is enabled by setting hda_gen_spec.power_down_unused
    flag.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index d226856b2dfa..065fcc77b860 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -211,6 +211,7 @@ struct hda_gen_spec {
 	unsigned int add_stereo_mix_input:1; /* add aamix as a capture src */
 	unsigned int add_out_jack_modes:1; /* add output jack mode enum ctls */
 	unsigned int add_in_jack_modes:1; /* add input jack mode enum ctls */
+	unsigned int power_down_unused:1; /* power down unused widgets */
 
 	/* other internal flags */
 	unsigned int no_analog:1; /* digital I/O only */

commit e4a395e7819b1e666b2e9da22234059f403dbc11
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Jan 23 17:00:31 2013 +0100

    ALSA: hda - Fix missing path between aamix and outputs in AD codecs
    
    AD1988 family and AD1882 codecs have another mixer widget (0x21)
    between the analog-loopback mixer widget (0x20) and the actual
    outputs.  Due to this hole, the analog-loopbacks aren't sent properly
    to the output pins.
    
    As a band-aid fix, introduce another fields holding the aamix merge
    path, and activate it.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 980707fcd30a..d226856b2dfa 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -107,6 +107,7 @@ struct hda_gen_spec {
 	hda_nid_t adc_nids[AUTO_CFG_MAX_INS];
 	hda_nid_t dig_in_nid;		/* digital-in NID; optional */
 	hda_nid_t mixer_nid;		/* analog-mixer NID */
+	hda_nid_t mixer_merge_nid;	/* aamix merge-point NID (optional) */
 	const char *input_labels[HDA_MAX_NUM_INPUTS];
 	int input_label_idxs[HDA_MAX_NUM_INPUTS];
 
@@ -163,6 +164,7 @@ struct hda_gen_spec {
 	int digout_paths[AUTO_CFG_MAX_OUTS];
 	int input_paths[HDA_MAX_NUM_INPUTS][AUTO_CFG_MAX_INS];
 	int loopback_paths[HDA_MAX_NUM_INPUTS];
+	int loopback_merge_path;
 	int digin_path;
 
 	/* auto-mic stuff */

commit a607148ff3b9f40427c0f0d5fa039a3a758735c7
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Jan 21 16:50:09 2013 +0100

    ALSA: hda - Set individual name to secondary analog PCM stream
    
    It'd be better to give another name to the secondary (alt) analog PCM
    stream, which is dedicated for the independent HP out and extra
    inputs.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 9c63555b971c..980707fcd30a 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -80,6 +80,8 @@ struct hda_gen_spec {
 	char stream_name_analog[32];	/* analog PCM stream */
 	const struct hda_pcm_stream *stream_analog_playback;
 	const struct hda_pcm_stream *stream_analog_capture;
+
+	char stream_name_alt_analog[32]; /* alternative analog PCM stream */
 	const struct hda_pcm_stream *stream_analog_alt_playback;
 	const struct hda_pcm_stream *stream_analog_alt_capture;
 

commit a1e908edccd1b6928cda78371026b458e2c1973a
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Jan 21 15:11:25 2013 +0100

    ALSA: hda - Fix conflicts between Loopback Mixing and Independent HP
    
    This patch eventually fixes two issues:
    - Handle the case where the primary output is a headphone and can have
      independent HP mode;
      so far we checked only the case where the headphone is the secondary
      output.
    
    - Fix the conflict of HP independent mode and aamix mode;
      when switched to aamix mode, the DAC might be also switched to
      another widget shared with other outputs.  Then even if we disable
      the DAC for the original output, it doesn't change -- because the
      active route is from another (shared) DAC to HP pin through aamix.
      So, in such a case, we have to prohibit the switch to aamix for HP
      routes.
    
    This fixes issues appearing on VT codecs.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 696b6068a889..9c63555b971c 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -212,6 +212,7 @@ struct hda_gen_spec {
 	unsigned int no_analog:1; /* digital I/O only */
 	unsigned int dyn_adc_switch:1; /* switch ADCs (for ALC275) */
 	unsigned int indep_hp_enabled:1; /* independent HP enabled */
+	unsigned int have_aamix_ctl:1;
 
 	/* loopback mixing mode */
 	bool aamix_mode;

commit cf799aa300b38f86684944bf9f61f7a13277f8b2
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Jan 18 16:38:08 2013 +0100

    ALSA: hda - Correct more array rooms in hda_gen_spec
    
    Looking through the whole definitions, some fields have inappropriate
    array sizes, especially about the capture.  The array assigned to each
    input (pin) should have HDA_MAX_NUM_INPUTS entries while the array
    assigned to each ADC should have AUTO_CFG_MAX_INS entries.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index eacfca93215a..696b6068a889 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -102,11 +102,11 @@ struct hda_gen_spec {
 
 	/* capture */
 	unsigned int num_adc_nids;
-	hda_nid_t adc_nids[AUTO_CFG_MAX_OUTS];
+	hda_nid_t adc_nids[AUTO_CFG_MAX_INS];
 	hda_nid_t dig_in_nid;		/* digital-in NID; optional */
 	hda_nid_t mixer_nid;		/* analog-mixer NID */
-	const char *input_labels[AUTO_CFG_MAX_INS];
-	int input_label_idxs[AUTO_CFG_MAX_INS];
+	const char *input_labels[HDA_MAX_NUM_INPUTS];
+	int input_label_idxs[HDA_MAX_NUM_INPUTS];
 
 	/* capture setup for dynamic dual-adc switch */
 	hda_nid_t cur_adc;
@@ -148,7 +148,7 @@ struct hda_gen_spec {
 	int num_all_dacs;
 	hda_nid_t all_dacs[16];
 	int num_all_adcs;
-	hda_nid_t all_adcs[AUTO_CFG_MAX_OUTS];
+	hda_nid_t all_adcs[AUTO_CFG_MAX_INS];
 
 	/* path list */
 	struct snd_array paths;

commit d3d982f7447ba9f5cbb57c1a525c3b61bfcffc37
Author: David Henningsson <david.henningsson@canonical.com>
Date:   Fri Jan 18 15:43:01 2013 +0100

    ALSA: hda - make sure there are enough input labels and paths
    
    I found a codec configuration which had six inputs, so the max of
    five was not appropriate.
    
    Signed-off-by: David Henningsson <david.henningsson@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 594a9cc4ecca..eacfca93215a 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -105,8 +105,8 @@ struct hda_gen_spec {
 	hda_nid_t adc_nids[AUTO_CFG_MAX_OUTS];
 	hda_nid_t dig_in_nid;		/* digital-in NID; optional */
 	hda_nid_t mixer_nid;		/* analog-mixer NID */
-	const char *input_labels[AUTO_CFG_MAX_OUTS];
-	int input_label_idxs[AUTO_CFG_MAX_OUTS];
+	const char *input_labels[AUTO_CFG_MAX_INS];
+	int input_label_idxs[AUTO_CFG_MAX_INS];
 
 	/* capture setup for dynamic dual-adc switch */
 	hda_nid_t cur_adc;
@@ -159,7 +159,7 @@ struct hda_gen_spec {
 	int speaker_paths[AUTO_CFG_MAX_OUTS];
 	int aamix_out_paths[3];
 	int digout_paths[AUTO_CFG_MAX_OUTS];
-	int input_paths[HDA_MAX_NUM_INPUTS][AUTO_CFG_MAX_OUTS];
+	int input_paths[HDA_MAX_NUM_INPUTS][AUTO_CFG_MAX_INS];
 	int loopback_paths[HDA_MAX_NUM_INPUTS];
 	int digin_path;
 

commit a90229e0517938a5c5d9d682708b6ee7cd0e19b9
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Jan 18 14:10:00 2013 +0100

    ALSA: hda - Consolidate cap_sync_hook and capture_switch_hook
    
    Two hooks in hda_gen_spec, cap_sync_hook and capture_switch_hook, play
    very similar roles.  The only differences are that the former is
    called more often (e.g. at init or switching capsrc) while the latter
    can take an on/off argument.
    
    As a more generic implementation, consolidate these two hooks, and
    pass snd_ctl_elem_value pointer as the second argument.  If the
    secondary argument is non-NULL, it can take the on/off value, so the
    caller handles it like the former capture_switch_hook.  If it's NULL,
    it's called in the init or capsrc switch case.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index f6b88cd4584f..594a9cc4ecca 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -233,7 +233,8 @@ struct hda_gen_spec {
 	/* hooks */
 	void (*init_hook)(struct hda_codec *codec);
 	void (*automute_hook)(struct hda_codec *codec);
-	void (*cap_sync_hook)(struct hda_codec *codec);
+	void (*cap_sync_hook)(struct hda_codec *codec,
+			      struct snd_ctl_elem_value *ucontrol);
 
 	/* PCM hooks */
 	void (*pcm_playback_hook)(struct hda_pcm_stream *hinfo,
@@ -252,9 +253,6 @@ struct hda_gen_spec {
 				   struct hda_jack_tbl *tbl);
 	void (*mic_autoswitch_hook)(struct hda_codec *codec,
 				    struct hda_jack_tbl *tbl);
-
-	/* capture switch hook (for mic-mute LED) */
-	void (*capture_switch_hook)(struct hda_codec *codec, bool enable);
 };
 
 int snd_hda_gen_spec_init(struct hda_gen_spec *spec);

commit c970042c129fbda2017e537d284e61ef4966a140
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Jan 18 10:17:30 2013 +0100

    ALSA: hda - Unify input label creations in generic parser
    
    There are a few places creating the labels and indices of kctls for
    each input pin in the current generic parser code.  This is redundant
    and makes harder to maintain.  Let's create the labels and indices at
    once and keep them in hda_gen_spec.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 7b14e9ce7486..f6b88cd4584f 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -105,6 +105,8 @@ struct hda_gen_spec {
 	hda_nid_t adc_nids[AUTO_CFG_MAX_OUTS];
 	hda_nid_t dig_in_nid;		/* digital-in NID; optional */
 	hda_nid_t mixer_nid;		/* analog-mixer NID */
+	const char *input_labels[AUTO_CFG_MAX_OUTS];
+	int input_label_idxs[AUTO_CFG_MAX_OUTS];
 
 	/* capture setup for dynamic dual-adc switch */
 	hda_nid_t cur_adc;

commit ac2e87366c18d49c6dc12e89ae4f4512f126eeb4
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Jan 17 15:57:10 2013 +0100

    ALSA: hda - Add PCM capture hook to hda_gen_spec
    
    Not only PCM playback, a hook for PCM capture would be required for
    power controls in codec drivers.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index a0486b1b4da4..7b14e9ce7486 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -233,11 +233,15 @@ struct hda_gen_spec {
 	void (*automute_hook)(struct hda_codec *codec);
 	void (*cap_sync_hook)(struct hda_codec *codec);
 
-	/* PCM playback hook */
+	/* PCM hooks */
 	void (*pcm_playback_hook)(struct hda_pcm_stream *hinfo,
 				  struct hda_codec *codec,
 				  struct snd_pcm_substream *substream,
 				  int action);
+	void (*pcm_capture_hook)(struct hda_pcm_stream *hinfo,
+				 struct hda_codec *codec,
+				 struct snd_pcm_substream *substream,
+				 int action);
 
 	/* automute / autoswitch hooks */
 	void (*hp_automute_hook)(struct hda_codec *codec,

commit 0ffd534eb164fbc87e91fc54a217247ea0cfbabc
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Jan 17 15:53:29 2013 +0100

    ALSA: hda - Record all detected ADCs in hda_gen_spec
    
    Since the generic parser reduces the ADC list, copy the list of the
    all detected ADCs and keep it.
    
    This list can be later referred by the codec driver for finer power
    controls.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 43a8482ed2b3..a0486b1b4da4 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -142,9 +142,11 @@ struct hda_gen_spec {
 	unsigned int dyn_adc_idx[HDA_MAX_NUM_INPUTS];
 	hda_nid_t shared_mic_vref_pin;
 
-	/* DAC list */
+	/* DAC/ADC lists */
 	int num_all_dacs;
 	hda_nid_t all_dacs[16];
+	int num_all_adcs;
+	hda_nid_t all_adcs[AUTO_CFG_MAX_OUTS];
 
 	/* path list */
 	struct snd_array paths;

commit 7a71bbf310cda13a713aab0c1dcf888707a54286
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Jan 17 10:25:15 2013 +0100

    ALSA: hda - Move vmaster TLV parsing to snd_hda_gen_parse_auto_config()
    
    Add vmaster_tlv[] to hda_gen_spec and store the suggested TLV data
    in snd_hda_gen_parse_auto_config().  This allows the codec driver to
    correct the TLV data (e.g. mute capability) before actually creating
    vmaster instance.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 142a571ecd5b..43a8482ed2b3 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -214,6 +214,7 @@ struct hda_gen_spec {
 
 	/* for virtual master */
 	hda_nid_t vmaster_nid;
+	unsigned int vmaster_tlv[4];
 	struct hda_vmaster_mute_hook vmaster_mute;
 #ifdef CONFIG_PM
 	struct hda_loopback_check loopback;

commit 29476558deb3017993366a3b0b45dff2acad495b
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Jan 17 09:52:11 2013 +0100

    ALSA: hda - Add input jack mode enum controls to generic parser
    
    Just like the jack mode enum ctls for output jacks, add the support
    for similar enum ctls for input pins to control the bias Vref.
    The new controls will be added when spec->add_in_jack_modes is set
    either by the codec driver or by a hint string.
    
    Note that ground and 100% vrefs are excluded from the list for
    simplicity, currently.  We may add a new flag to allow them, too.
    But I guess it's easier to put a value override in the pinfix in such
    a case.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index dd0818b8963b..142a571ecd5b 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -202,6 +202,7 @@ struct hda_gen_spec {
 	unsigned int prefer_hp_amp:1; /* enable HP amp for speaker if any */
 	unsigned int add_stereo_mix_input:1; /* add aamix as a capture src */
 	unsigned int add_out_jack_modes:1; /* add output jack mode enum ctls */
+	unsigned int add_in_jack_modes:1; /* add input jack mode enum ctls */
 
 	/* other internal flags */
 	unsigned int no_analog:1; /* digital I/O only */

commit acc47aafcfcf16cebcab12ab65efdc0ff3af181c
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Jan 16 18:28:38 2013 +0100

    ALSA: hda - Give more comments to hda_gen_spec flags
    
    Since we have many bit flags in hda_gen_spec, rearrange in sections
    and give more comments there.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 59d08c60ac47..dd0818b8963b 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -164,27 +164,34 @@ struct hda_gen_spec {
 	struct automic_entry am_entry[MAX_AUTO_MIC_PINS];
 
 	/* for pin sensing */
+	/* current status; set in hda_geneic.c */
 	unsigned int hp_jack_present:1;
 	unsigned int line_jack_present:1;
-	unsigned int master_mute:1;
+	unsigned int speaker_muted:1; /* current status of speaker mute */
+	unsigned int line_out_muted:1; /* current status of LO mute */
+
+	/* internal states of automute / autoswitch behavior */
 	unsigned int auto_mic:1;
 	unsigned int automute_speaker:1; /* automute speaker outputs */
 	unsigned int automute_lo:1; /* automute LO outputs */
-	unsigned int speaker_muted:1; /* current status of speaker mute */
-	unsigned int line_out_muted:1; /* current status of LO mute */
+
+	/* capabilities detected by parser */
 	unsigned int detect_hp:1;	/* Headphone detection enabled */
 	unsigned int detect_lo:1;	/* Line-out detection enabled */
 	unsigned int automute_speaker_possible:1; /* there are speakers and either LO or HP */
 	unsigned int automute_lo_possible:1;	  /* there are line outs and HP */
+
+	/* additional parameters set by codec drivers */
+	unsigned int master_mute:1;	/* master mute over all */
 	unsigned int keep_vref_in_automute:1; /* Don't clear VREF in automute */
+	unsigned int line_in_auto_switch:1; /* allow line-in auto switch */
+
+	/* parser behavior flags; set before snd_hda_gen_parse_auto_config() */
 	unsigned int suppress_auto_mute:1; /* suppress input jack auto mute */
 	unsigned int suppress_auto_mic:1; /* suppress input jack auto switch */
-	unsigned int line_in_auto_switch:1; /* allow line-in auto switch */
 
-	/* other flags */
+	/* other parse behavior flags */
 	unsigned int need_dac_fix:1; /* need to limit DACs for multi channels */
-	unsigned int no_analog:1; /* digital I/O only */
-	unsigned int dyn_adc_switch:1; /* switch ADCs (for ALC275) */
 	unsigned int shared_mic_hp:1; /* HP/Mic-in sharing */
 	unsigned int no_primary_hp:1; /* Don't prefer HP pins to speaker pins */
 	unsigned int multi_cap_vol:1; /* allow multiple capture xxx volumes */
@@ -192,11 +199,15 @@ struct hda_gen_spec {
 	unsigned int own_eapd_ctl:1; /* set EAPD by own function */
 	unsigned int vmaster_mute_enum:1; /* add vmaster mute mode enum */
 	unsigned int indep_hp:1; /* independent HP supported */
-	unsigned int indep_hp_enabled:1; /* independent HP enabled */
 	unsigned int prefer_hp_amp:1; /* enable HP amp for speaker if any */
 	unsigned int add_stereo_mix_input:1; /* add aamix as a capture src */
 	unsigned int add_out_jack_modes:1; /* add output jack mode enum ctls */
 
+	/* other internal flags */
+	unsigned int no_analog:1; /* digital I/O only */
+	unsigned int dyn_adc_switch:1; /* switch ADCs (for ALC275) */
+	unsigned int indep_hp_enabled:1; /* independent HP enabled */
+
 	/* loopback mixing mode */
 	bool aamix_mode;
 

commit f72706be354b35fa3ccdfd64fe609bde4435e12b
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Jan 16 18:20:07 2013 +0100

    ALSA: hda - Add suppress_auto_mute flag to hda_gen_spec
    
    A new flag to skip the auto-mute handling in the generic parser, just
    like suppress_auto_mic flag.  It has to be set before calling
    snd_hda_gen_parse_auto_config().
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index d4abf87c969f..59d08c60ac47 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -177,6 +177,7 @@ struct hda_gen_spec {
 	unsigned int automute_speaker_possible:1; /* there are speakers and either LO or HP */
 	unsigned int automute_lo_possible:1;	  /* there are line outs and HP */
 	unsigned int keep_vref_in_automute:1; /* Don't clear VREF in automute */
+	unsigned int suppress_auto_mute:1; /* suppress input jack auto mute */
 	unsigned int suppress_auto_mic:1; /* suppress input jack auto switch */
 	unsigned int line_in_auto_switch:1; /* allow line-in auto switch */
 

commit 47b9ddb83b719d35ca0a723410734951b04cf403
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Jan 16 18:18:00 2013 +0100

    ALSA: hda - Record the current speaker / LO mute status in hda_gen_spec
    
    ... to be referred by the codec driver.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 6ba580540081..d4abf87c969f 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -170,6 +170,8 @@ struct hda_gen_spec {
 	unsigned int auto_mic:1;
 	unsigned int automute_speaker:1; /* automute speaker outputs */
 	unsigned int automute_lo:1; /* automute LO outputs */
+	unsigned int speaker_muted:1; /* current status of speaker mute */
+	unsigned int line_out_muted:1; /* current status of LO mute */
 	unsigned int detect_hp:1;	/* Headphone detection enabled */
 	unsigned int detect_lo:1;	/* Line-out detection enabled */
 	unsigned int automute_speaker_possible:1; /* there are speakers and either LO or HP */

commit ea46c3c87c35b90139b4dca43917d0f605d568ed
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Jan 15 18:45:53 2013 +0100

    ALSA: hda - Add prefer_hp_amp flag to hda_gen_spec
    
    Add a new flag to indicate whether HP amp is turned on as default for
    speaker or line-outs, and enable this for ALC260 codec, as many
    machines with this codec require the HP amp even for speakers.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 1ceaacd1b775..6ba580540081 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -190,6 +190,7 @@ struct hda_gen_spec {
 	unsigned int vmaster_mute_enum:1; /* add vmaster mute mode enum */
 	unsigned int indep_hp:1; /* independent HP supported */
 	unsigned int indep_hp_enabled:1; /* independent HP enabled */
+	unsigned int prefer_hp_amp:1; /* enable HP amp for speaker if any */
 	unsigned int add_stereo_mix_input:1; /* add aamix as a capture src */
 	unsigned int add_out_jack_modes:1; /* add output jack mode enum ctls */
 

commit ae177c3fd0667df21b60bc8e031607de257e58e4
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Jan 14 12:13:06 2013 +0100

    ALSA: hda - Add capture_switch_hook to generic parser
    
    Add a hook for the capture mixer switch.  This will be used by IDT
    codecs for controlling the mic-mute LED.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index bfa2d973268b..1ceaacd1b775 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -227,6 +227,9 @@ struct hda_gen_spec {
 				   struct hda_jack_tbl *tbl);
 	void (*mic_autoswitch_hook)(struct hda_codec *codec,
 				    struct hda_jack_tbl *tbl);
+
+	/* capture switch hook (for mic-mute LED) */
+	void (*capture_switch_hook)(struct hda_codec *codec, bool enable);
 };
 
 int snd_hda_gen_spec_init(struct hda_gen_spec *spec);

commit 978e77e78cff7a85a31ad552ffd8afee319e8721
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Jan 10 16:57:58 2013 +0100

    ALSA: hda - Add output jack mode enum controls
    
    Add the enum controls for changing the headphone amp bits of output
    jacks, such as "Headphone Jack Mode".  This feature isn't enabled as
    default, so far, unless spec->add_out_jack_modes flag is set.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 89683c7fe263..bfa2d973268b 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -191,6 +191,7 @@ struct hda_gen_spec {
 	unsigned int indep_hp:1; /* independent HP supported */
 	unsigned int indep_hp_enabled:1; /* independent HP enabled */
 	unsigned int add_stereo_mix_input:1; /* add aamix as a capture src */
+	unsigned int add_out_jack_modes:1; /* add output jack mode enum ctls */
 
 	/* loopback mixing mode */
 	bool aamix_mode;

commit f3fc0b0b1fe31e0ec9a72ab85b421e74c696f00d
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Jan 9 09:14:23 2013 +0100

    ALSA: hda - Allow aamix as a capture source
    
    Since some codecs can choose the aamix as a capture source, we should
    support it as well.  When spec->add_stereo_mix_input flag is set, the
    parser checks the availability of aamix as the input source, and adds
    the paths automatically when possible.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 1763e33b90ef..89683c7fe263 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -190,6 +190,7 @@ struct hda_gen_spec {
 	unsigned int vmaster_mute_enum:1; /* add vmaster mute mode enum */
 	unsigned int indep_hp:1; /* independent HP supported */
 	unsigned int indep_hp_enabled:1; /* independent HP enabled */
+	unsigned int add_stereo_mix_input:1; /* add aamix as a capture src */
 
 	/* loopback mixing mode */
 	bool aamix_mode;

commit d12daf6f41693b6b34351b37b6d05d1a6f9b3472
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Jan 7 16:32:11 2013 +0100

    ALSA: hda - Add a flag to suppress mic auto-switch
    
    Add a new flag spec->suppress_mic_auto_switch for codecs that don't
    support unsol events properly like VT1708.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 343195c827e4..1763e33b90ef 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -175,6 +175,7 @@ struct hda_gen_spec {
 	unsigned int automute_speaker_possible:1; /* there are speakers and either LO or HP */
 	unsigned int automute_lo_possible:1;	  /* there are line outs and HP */
 	unsigned int keep_vref_in_automute:1; /* Don't clear VREF in automute */
+	unsigned int suppress_auto_mic:1; /* suppress input jack auto switch */
 	unsigned int line_in_auto_switch:1; /* allow line-in auto switch */
 
 	/* other flags */

commit 3ca529d339f1904b68c6251172522302fca77b28
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Jan 7 17:25:08 2013 +0100

    ALSA: hda - Re-define snd_hda_parse_nid_path()
    
    This commit modifies the definition of snd_hda_parse_nid_path()
    slightly, now with_aa_mix argument is changed to anchor_nid, so that
    it can handle any NID generically as an anchor point to include or
    exclude.
    
    The with_aa_mix field in struct nid_path is removed again by this
    change.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 1ad9127e9f95..343195c827e4 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -53,7 +53,6 @@ struct nid_path {
 	unsigned char multi[MAX_NID_PATH_DEPTH];
 	unsigned int ctls[NID_PATH_NUM_CTLS]; /* NID_PATH_XXX_CTL */
 	bool active;
-	bool with_aa_mix;
 };
 
 /* mic/line-in auto switching entry */
@@ -237,19 +236,12 @@ struct nid_path *snd_hda_get_nid_path(struct hda_codec *codec,
 				      hda_nid_t from_nid, hda_nid_t to_nid);
 int snd_hda_get_path_idx(struct hda_codec *codec, struct nid_path *path);
 struct nid_path *snd_hda_get_path_from_idx(struct hda_codec *codec, int idx);
-
-enum {
-	HDA_PARSE_NO_AAMIX,
-	HDA_PARSE_ONLY_AAMIX,
-	HDA_PARSE_ALL,
-};
-
 bool snd_hda_parse_nid_path(struct hda_codec *codec, hda_nid_t from_nid,
-			    hda_nid_t to_nid, int with_aa_mix,
+			    hda_nid_t to_nid, int anchor_nid,
 			    struct nid_path *path);
 struct nid_path *
 snd_hda_add_new_path(struct hda_codec *codec, hda_nid_t from_nid,
-		     hda_nid_t to_nid, int with_aa_mix);
+		     hda_nid_t to_nid, int anchor_nid);
 void snd_hda_activate_path(struct hda_codec *codec, struct nid_path *path,
 			   bool enable, bool add_aamix);
 

commit c697b716859c6c8c4e9f102304638c83ff2e61aa
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Jan 7 17:09:26 2013 +0100

    ALSA: hda - Manage input paths via path indices
    
    ... like we did for output and loopback paths.
    It makes the code slightly easier.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index b65769cbde2b..1ad9127e9f95 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -156,6 +156,7 @@ struct hda_gen_spec {
 	int speaker_paths[AUTO_CFG_MAX_OUTS];
 	int aamix_out_paths[3];
 	int digout_paths[AUTO_CFG_MAX_OUTS];
+	int input_paths[HDA_MAX_NUM_INPUTS][AUTO_CFG_MAX_OUTS];
 	int loopback_paths[HDA_MAX_NUM_INPUTS];
 	int digin_path;
 

commit a07a949be6eb1c9aab06adaadce72dbd27b7d9cb
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Jan 7 16:44:06 2013 +0100

    ALSA: hda - Fix multi-io channel mode management
    
    The multi-io channels can vary not only from 1 to 6 but also may vary
    from 6 to 8 or such.  At the same time, there are more speaker pins
    available than the primary output pins.  So, we need three variables
    to check: the minimum channel counts for primary outputs, the current
    channel counts for primary outputs, and the minimum channel counts for
    all outputs.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 00a1eab2c0b2..b65769cbde2b 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -117,8 +117,20 @@ struct hda_gen_spec {
 	unsigned int cur_mux[3];
 
 	/* channel model */
-	int const_channel_count;	/* min. channel count (for speakers) */
-	int ext_channel_count;		/* current channel count for multi-io */
+	/* min_channel_count contains the minimum channel count for primary
+	 * outputs.  When multi_ios is set, the channels can be configured
+	 * between min_channel_count and (min_channel_count + multi_ios * 2).
+	 *
+	 * ext_channel_count contains the current channel count of the primary
+	 * out.  This varies in the range above.
+	 *
+	 * Meanwhile, const_channel_count is the channel count for all outputs
+	 * including headphone and speakers.  It's a constant value, and the
+	 * PCM is set up as max(ext_channel_count, const_channel_count).
+	 */
+	int min_channel_count;		/* min. channel count for primary out */
+	int ext_channel_count;		/* current channel count for primary */
+	int const_channel_count;	/* channel count for all */
 
 	/* PCM information */
 	struct hda_pcm pcm_rec[3];	/* used in build_pcms() */

commit fce52a3bb15bf3db63cbde496f212edf5e6d366e
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Jan 7 12:42:48 2013 +0100

    ALSA: hda - Add snd_hda_gen_free() and snd_hda_gen_check_power_status()
    
    Just to remove duplicated codes.
    Also fixed EXPORT_SYMBOL() in hda_generic.c.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 7e84c22f98b8..00a1eab2c0b2 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -218,6 +218,7 @@ int snd_hda_gen_spec_init(struct hda_gen_spec *spec);
 void snd_hda_gen_spec_free(struct hda_gen_spec *spec);
 
 int snd_hda_gen_init(struct hda_codec *codec);
+void snd_hda_gen_free(struct hda_codec *codec);
 
 struct nid_path *snd_hda_get_nid_path(struct hda_codec *codec,
 				      hda_nid_t from_nid, hda_nid_t to_nid);
@@ -257,4 +258,8 @@ void snd_hda_gen_mic_autoswitch(struct hda_codec *codec,
 				struct hda_jack_tbl *jack);
 void snd_hda_gen_update_outputs(struct hda_codec *codec);
 
+#ifdef CONFIG_PM
+int snd_hda_gen_check_power_status(struct hda_codec *codec, hda_nid_t nid);
+#endif
+
 #endif /* __SOUND_HDA_GENERIC_H */

commit e6b85f3c9d5ea3807dee651c28d5b0d5982ae2fa
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Jan 7 11:54:34 2013 +0100

    ALSA: hda - Add pcm_playback_hook to hda_gen_spec
    
    The new hook which is called at each PCM playback ops.
    It can be used to control the codec-specific power-saving feature in
    each codec driver.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 4c0d9add6145..7e84c22f98b8 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -69,6 +69,14 @@ struct automic_entry {
 /* active stream id */
 enum { STREAM_MULTI_OUT, STREAM_INDEP_HP };
 
+/* PCM hook action */
+enum {
+	HDA_GEN_PCM_ACT_OPEN,
+	HDA_GEN_PCM_ACT_PREPARE,
+	HDA_GEN_PCM_ACT_CLEANUP,
+	HDA_GEN_PCM_ACT_CLOSE,
+};
+
 struct hda_gen_spec {
 	char stream_name_analog[32];	/* analog PCM stream */
 	const struct hda_pcm_stream *stream_analog_playback;
@@ -191,6 +199,12 @@ struct hda_gen_spec {
 	void (*automute_hook)(struct hda_codec *codec);
 	void (*cap_sync_hook)(struct hda_codec *codec);
 
+	/* PCM playback hook */
+	void (*pcm_playback_hook)(struct hda_pcm_stream *hinfo,
+				  struct hda_codec *codec,
+				  struct snd_pcm_substream *substream,
+				  int action);
+
 	/* automute / autoswitch hooks */
 	void (*hp_automute_hook)(struct hda_codec *codec,
 				 struct hda_jack_tbl *tbl);

commit c2c803830a5d9897344cd3ffd82daddd7f9f3864
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Jan 7 10:33:57 2013 +0100

    ALSA: hda - Drop bind-volume workaround
    
    The bind-volume workaround was introduced for simplifying the mixer
    abstraction in the case where one or more pins of multiple outputs
    lack of individual volume controls.  This was essentially the case
    like Acer Aspire 5935, which has 5.1 speakers and 5.1 (multi-io)
    jacks although there are 5 DACs, so some of them must share a DAC.
    
    However, the recent code rewrite changed the DAC assignment policy to
    share with the same channel instead of binding to the front, thus
    binding the volumes for all channels makes little sense now, rather
    it's confusing.  So in this patch, the ugly workaround is finally
    dropped and simply create the volume control corresponding to the
    parsed path position.
    
    For dual headphones or 2.1 speakers with a shared volume control, it's
    anyway bound to the same DAC if needed, so this change shouldn't bring
    any practical difference.
    
    And, as a good bonus, we can cut off the whole code handling the bind
    volume elements.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index d4a8f6c4e7a9..4c0d9add6145 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -186,9 +186,6 @@ struct hda_gen_spec {
 	int multi_ios;
 	struct hda_multi_io multi_io[4];
 
-	/* bind volumes */
-	struct snd_array bind_ctls;
-
 	/* hooks */
 	void (*init_hook)(struct hda_codec *codec);
 	void (*automute_hook)(struct hda_codec *codec);

commit c30aa7b24282c6c544f25f360131fceb646927e4
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Jan 4 16:42:48 2013 +0100

    ALSA: hda - Add Loopback Mixing control
    
    For codecs that have individual routes going through a loopback mixer
    (like VIA codecs), we need to provide an explicit switch to choose
    whether the output goes through mixer or directly from DAC.
    
    This patch adds the check for such paths and creates "Loopback Mixing"
    enum control when available.
    
    It won't influence on codecs like Realtek or others where the loopback
    mixer is connected independently from the primary output routes.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index ba8de12b7125..d4a8f6c4e7a9 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -134,6 +134,7 @@ struct hda_gen_spec {
 	int out_paths[AUTO_CFG_MAX_OUTS];
 	int hp_paths[AUTO_CFG_MAX_OUTS];
 	int speaker_paths[AUTO_CFG_MAX_OUTS];
+	int aamix_out_paths[3];
 	int digout_paths[AUTO_CFG_MAX_OUTS];
 	int loopback_paths[HDA_MAX_NUM_INPUTS];
 	int digin_path;
@@ -169,6 +170,9 @@ struct hda_gen_spec {
 	unsigned int indep_hp:1; /* independent HP supported */
 	unsigned int indep_hp_enabled:1; /* independent HP enabled */
 
+	/* loopback mixing mode */
+	bool aamix_mode;
+
 	/* for virtual master */
 	hda_nid_t vmaster_nid;
 	struct hda_vmaster_mute_hook vmaster_mute;

commit 2430d7b78ba161656a621279964421aa06e04b02
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Jan 4 15:09:42 2013 +0100

    ALSA: hda - Initialize digital-input path properly
    
    Call the path activation for the digital input pin properly, not only
    setting the pin control.  Also add spec->digin_path for keeping the
    path index.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 71d409f5de87..ba8de12b7125 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -136,6 +136,7 @@ struct hda_gen_spec {
 	int speaker_paths[AUTO_CFG_MAX_OUTS];
 	int digout_paths[AUTO_CFG_MAX_OUTS];
 	int loopback_paths[HDA_MAX_NUM_INPUTS];
+	int digin_path;
 
 	/* auto-mic stuff */
 	int am_num_entries;

commit 196c17668056ed5226070d06878242c116dfece2
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Jan 4 15:01:40 2013 +0100

    ALSA: hda - Manage using output/loopback path indices
    
    Instead of search for the path with the certain route at each time,
    keep the path index for each output and loopback, and just use it when
    referred.
    
    In this implementation, the path index number begins with one, not
    zero (although I've been writing in C over decades).  It's just to
    make the check for uninitialized values easier.
    
    So far, the input paths aren't handled with indices yet, but still
    picked up via snd_hda_get_nid_path() at each time.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index f1cae2e49377..71d409f5de87 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -130,6 +130,13 @@ struct hda_gen_spec {
 	/* path list */
 	struct snd_array paths;
 
+	/* path indices */
+	int out_paths[AUTO_CFG_MAX_OUTS];
+	int hp_paths[AUTO_CFG_MAX_OUTS];
+	int speaker_paths[AUTO_CFG_MAX_OUTS];
+	int digout_paths[AUTO_CFG_MAX_OUTS];
+	int loopback_paths[HDA_MAX_NUM_INPUTS];
+
 	/* auto-mic stuff */
 	int am_num_entries;
 	struct automic_entry am_entry[MAX_AUTO_MIC_PINS];
@@ -198,6 +205,8 @@ int snd_hda_gen_init(struct hda_codec *codec);
 
 struct nid_path *snd_hda_get_nid_path(struct hda_codec *codec,
 				      hda_nid_t from_nid, hda_nid_t to_nid);
+int snd_hda_get_path_idx(struct hda_codec *codec, struct nid_path *path);
+struct nid_path *snd_hda_get_path_from_idx(struct hda_codec *codec, int idx);
 
 enum {
 	HDA_PARSE_NO_AAMIX,

commit f5172a7ed966493414aa58319fbb7ab0a80cf889
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Jan 4 13:19:55 2013 +0100

    ALSA: hda - Check the existing path in snd_hda_add_new_path()
    
    If the requested path has been already added, return the existing path
    instance instead of adding a duplicated instance.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 1090a524755b..f1cae2e49377 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -53,6 +53,7 @@ struct nid_path {
 	unsigned char multi[MAX_NID_PATH_DEPTH];
 	unsigned int ctls[NID_PATH_NUM_CTLS]; /* NID_PATH_XXX_CTL */
 	bool active;
+	bool with_aa_mix;
 };
 
 /* mic/line-in auto switching entry */

commit 2e03e9528d1cc15edf037c8e2ee0ae6499b0e59d
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Jan 3 15:55:06 2013 +0100

    ALSA: hda - Add hooks for HP/line/mic auto switching
    
    ... as a preliminary work for migrating patch_sigmatel.c.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 5c1569c69888..1090a524755b 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -180,6 +180,14 @@ struct hda_gen_spec {
 	void (*init_hook)(struct hda_codec *codec);
 	void (*automute_hook)(struct hda_codec *codec);
 	void (*cap_sync_hook)(struct hda_codec *codec);
+
+	/* automute / autoswitch hooks */
+	void (*hp_automute_hook)(struct hda_codec *codec,
+				 struct hda_jack_tbl *tbl);
+	void (*line_automute_hook)(struct hda_codec *codec,
+				   struct hda_jack_tbl *tbl);
+	void (*mic_autoswitch_hook)(struct hda_codec *codec,
+				    struct hda_jack_tbl *tbl);
 };
 
 int snd_hda_gen_spec_init(struct hda_gen_spec *spec);

commit 38cf6f1a41e40a33d80924554b356fcd5b5d2751
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Dec 21 14:09:42 2012 +0100

    ALSA: hda - Implement independent HP control
    
    Similar like the implementation in patch_analog.c and patch_via.c,
    the generic parser can provide the independent HP PCM stream now.
    It's enabled when spec->indep_hp is set by the caller while parsing.
    
    Currently no dynamic PCM switching as in patch_via.c is implemented
    yet.  The control returns -EBUSY when the value is changed during PCM
    operations.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 85d138fc10b3..5c1569c69888 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -65,6 +65,9 @@ struct automic_entry {
 	unsigned int attr;	/* pin attribute (INPUT_PIN_ATTR_*) */
 };
 
+/* active stream id */
+enum { STREAM_MULTI_OUT, STREAM_INDEP_HP };
+
 struct hda_gen_spec {
 	char stream_name_analog[32];	/* analog PCM stream */
 	const struct hda_pcm_stream *stream_analog_playback;
@@ -76,6 +79,10 @@ struct hda_gen_spec {
 	const struct hda_pcm_stream *stream_digital_playback;
 	const struct hda_pcm_stream *stream_digital_capture;
 
+	/* PCM */
+	unsigned int active_streams;
+	struct mutex pcm_mutex;
+
 	/* playback */
 	struct hda_multi_out multiout;	/* playback set-up
 					 * max_channels, dacs must be set
@@ -150,6 +157,8 @@ struct hda_gen_spec {
 	unsigned int inv_dmic_split:1; /* inverted dmic w/a for conexant */
 	unsigned int own_eapd_ctl:1; /* set EAPD by own function */
 	unsigned int vmaster_mute_enum:1; /* add vmaster mute mode enum */
+	unsigned int indep_hp:1; /* independent HP supported */
+	unsigned int indep_hp_enabled:1; /* independent HP enabled */
 
 	/* for virtual master */
 	hda_nid_t vmaster_nid;

commit 4ac0eefa761f62b07d4b96884cf1acc625d7063f
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Dec 20 18:10:51 2012 +0100

    ALSA: hda - Define HDA_PARSE_* for snd_hda_parse_nid_path() argument
    
    ... instead of numbers.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 6365140924af..85d138fc10b3 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -180,6 +180,13 @@ int snd_hda_gen_init(struct hda_codec *codec);
 
 struct nid_path *snd_hda_get_nid_path(struct hda_codec *codec,
 				      hda_nid_t from_nid, hda_nid_t to_nid);
+
+enum {
+	HDA_PARSE_NO_AAMIX,
+	HDA_PARSE_ONLY_AAMIX,
+	HDA_PARSE_ALL,
+};
+
 bool snd_hda_parse_nid_path(struct hda_codec *codec, hda_nid_t from_nid,
 			    hda_nid_t to_nid, int with_aa_mix,
 			    struct nid_path *path);

commit 545502de54c5ec31222915e5b977a86d603cec86
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Dec 20 17:05:20 2012 +0100

    ALSA: hda - Drop spec->channel_mode field from hda_gen_spec
    
    It's never used in the generic parser.  It was there from the old
    Realtek code, which has been dropped quite ago, too.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index a406cd4cf072..6365140924af 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -101,8 +101,6 @@ struct hda_gen_spec {
 	unsigned int cur_mux[3];
 
 	/* channel model */
-	const struct hda_channel_mode *channel_mode;
-	int num_channel_mode;
 	int const_channel_count;	/* min. channel count (for speakers) */
 	int ext_channel_count;		/* current channel count for multi-io */
 

commit fd25a97a97c78e7f09b0b3069a40bf7671654366
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Dec 20 14:57:18 2012 +0100

    ALSA: hda - Add spec->vmaster_mute_enum flag to generic parser
    
    Add a flag to indicate whether the vmaster mute hook enum is exposed
    or not.  Conexant codecs may want not to expose the control depending
    on the model.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index b59889911937..a406cd4cf072 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -151,6 +151,7 @@ struct hda_gen_spec {
 	unsigned int multi_cap_vol:1; /* allow multiple capture xxx volumes */
 	unsigned int inv_dmic_split:1; /* inverted dmic w/a for conexant */
 	unsigned int own_eapd_ctl:1; /* set EAPD by own function */
+	unsigned int vmaster_mute_enum:1; /* add vmaster mute mode enum */
 
 	/* for virtual master */
 	hda_nid_t vmaster_nid;

commit 406b285da3a04381d46d0f5f5e53c3de0362738c
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Dec 20 14:46:57 2012 +0100

    ALSA: hda - Begin HDA_GEN_* event tag from 1
    
    ... to distinguish from the invalid event type.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 89ad877e48c8..b59889911937 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -14,7 +14,7 @@
 
 /* unsol event tags */
 enum {
-	HDA_GEN_HP_EVENT, HDA_GEN_FRONT_EVENT, HDA_GEN_MIC_EVENT,
+	HDA_GEN_HP_EVENT = 1, HDA_GEN_FRONT_EVENT, HDA_GEN_MIC_EVENT,
 	HDA_GEN_LAST_EVENT = HDA_GEN_MIC_EVENT
 };
 

commit d94ddd85b1e044c030d62c62f95ae700776888f8
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Dec 20 14:42:42 2012 +0100

    ALSA: hda - Increase the max depth of widget connections
    
    Old codecs like AD1986A tend to have long paths as they were just made
    to be the way like AC97.  The current max depth 5 can be too short for
    such devices.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 417ab65a323e..89ad877e48c8 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -37,7 +37,7 @@ struct hda_multi_io {
  * vol_ctl and mute_ctl contains the NIDs for the assigned mixers
  */
 
-#define MAX_NID_PATH_DEPTH	5
+#define MAX_NID_PATH_DEPTH	10
 
 enum {
 	NID_PATH_VOL_CTL,

commit 5d550e15be0a960c7ff5dbcf12b5a454e70403b6
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Dec 19 15:16:44 2012 +0100

    ALSA: hda - Export standard jack event handlers for generic parser
    
    These handlers are supposed to be called externally from the codec
    drivers once when they need to handle own jack events.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 1a3b4042c5ba..417ab65a323e 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -199,4 +199,13 @@ int snd_hda_gen_parse_auto_config(struct hda_codec *codec,
 int snd_hda_gen_build_controls(struct hda_codec *codec);
 int snd_hda_gen_build_pcms(struct hda_codec *codec);
 
+/* standard jack event callbacks */
+void snd_hda_gen_hp_automute(struct hda_codec *codec,
+			     struct hda_jack_tbl *jack);
+void snd_hda_gen_line_automute(struct hda_codec *codec,
+			       struct hda_jack_tbl *jack);
+void snd_hda_gen_mic_autoswitch(struct hda_codec *codec,
+				struct hda_jack_tbl *jack);
+void snd_hda_gen_update_outputs(struct hda_codec *codec);
+
 #endif /* __SOUND_HDA_GENERIC_H */

commit 9eb413e5e4801753f7851ec6c46528adcc15579f
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Dec 19 14:41:21 2012 +0100

    ALSA: hda - Move the call of snd_hda_parse_pin_defcfg() from snd_hda_gen_parse_auto_config()
    
    In some cases, we want to manipulate the auto_pin_cfg table before
    passing to snd_hda_gen_parse_auto_config() (e.g. Realtek SSID check
    code fiddles with the headphone pin).   Also passing ignore_pins just
    for snd_hda_parse_pin_defcfg() isn't good.
    
    In this patch, snd_hda_gen_parse_auto_config() is changed to receive
    the auto_pin_cfg table to be parsed.  The passed auto_pin_cfg table
    must have been initialized (typically by calling
    snd_hda_gen_parse_auto_config()) beforehand by the caller.
    
    Also together with this change, spec->parse_flags is also removed.
    Since this was referred only at the place calling
    snd_hda_parse_pin_defcfg(), no longer needed to be kept in spec.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index d71e86de9060..1a3b4042c5ba 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -152,8 +152,6 @@ struct hda_gen_spec {
 	unsigned int inv_dmic_split:1; /* inverted dmic w/a for conexant */
 	unsigned int own_eapd_ctl:1; /* set EAPD by own function */
 
-	unsigned int parse_flags; /* passed to snd_hda_parse_pin_defcfg() */
-
 	/* for virtual master */
 	hda_nid_t vmaster_nid;
 	struct hda_vmaster_mute_hook vmaster_mute;
@@ -197,7 +195,7 @@ snd_hda_gen_add_kctl(struct hda_gen_spec *spec, const char *name,
 		     const struct snd_kcontrol_new *temp);
 
 int snd_hda_gen_parse_auto_config(struct hda_codec *codec,
-				  const hda_nid_t *ignore_nids);
+				  struct auto_pin_cfg *cfg);
 int snd_hda_gen_build_controls(struct hda_codec *codec);
 int snd_hda_gen_build_pcms(struct hda_codec *codec);
 

commit 12c93df60ccf926f8798723f97f9f45175fce85b
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Dec 19 14:38:33 2012 +0100

    ALSA: hda - Export snd_hda_gen_add_kctl()
    
    It may be used in other codec drivers, so let it free.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index 9c00bd5863e5..d71e86de9060 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -192,6 +192,10 @@ snd_hda_add_new_path(struct hda_codec *codec, hda_nid_t from_nid,
 void snd_hda_activate_path(struct hda_codec *codec, struct nid_path *path,
 			   bool enable, bool add_aamix);
 
+struct snd_kcontrol_new *
+snd_hda_gen_add_kctl(struct hda_gen_spec *spec, const char *name,
+		     const struct snd_kcontrol_new *temp);
+
 int snd_hda_gen_parse_auto_config(struct hda_codec *codec,
 				  const hda_nid_t *ignore_nids);
 int snd_hda_gen_build_controls(struct hda_codec *codec);

commit 731dc3019c7b9fa7a787f9b0a74e94638eee3fe1
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Dec 19 13:01:54 2012 +0100

    ALSA: hda - Add EAPD control to generic parser
    
    Enable EAPD in output path initializations automatically unless the
    new flag spec->own_eapd_ctl is set.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
index a9f4f63b4894..9c00bd5863e5 100644
--- a/sound/pci/hda/hda_generic.h
+++ b/sound/pci/hda/hda_generic.h
@@ -150,6 +150,7 @@ struct hda_gen_spec {
 	unsigned int no_primary_hp:1; /* Don't prefer HP pins to speaker pins */
 	unsigned int multi_cap_vol:1; /* allow multiple capture xxx volumes */
 	unsigned int inv_dmic_split:1; /* inverted dmic w/a for conexant */
+	unsigned int own_eapd_ctl:1; /* set EAPD by own function */
 
 	unsigned int parse_flags; /* passed to snd_hda_parse_pin_defcfg() */
 

commit 352f7f914ebb8fe19f9b3f03e7767b04eedf5be3
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Dec 19 12:52:06 2012 +0100

    ALSA: hda - Merge Realtek parser code to generic parser
    
    Finally the whole generic parser code in Realtek driver is moved into
    hda_generic.c so that it can be used for generic codec driver.
    The old dumb generic driver is replaced.  Yay.
    
    The future plan is to adapt this generic parser for other codecs,
    i.e. the codec driver calls the exported functions in generic driver
    but adds some codec-specific fixes and setups.
    
    As of this commit, the complete driver code is still duplicated in
    Realtek codec driver.  The big code reduction will come from now on.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_generic.h b/sound/pci/hda/hda_generic.h
new file mode 100644
index 000000000000..a9f4f63b4894
--- /dev/null
+++ b/sound/pci/hda/hda_generic.h
@@ -0,0 +1,199 @@
+/*
+ * Generic BIOS auto-parser helper functions for HD-audio
+ *
+ * Copyright (c) 2012 Takashi Iwai <tiwai@suse.de>
+ *
+ * This driver is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ */
+
+#ifndef __SOUND_HDA_GENERIC_H
+#define __SOUND_HDA_GENERIC_H
+
+/* unsol event tags */
+enum {
+	HDA_GEN_HP_EVENT, HDA_GEN_FRONT_EVENT, HDA_GEN_MIC_EVENT,
+	HDA_GEN_LAST_EVENT = HDA_GEN_MIC_EVENT
+};
+
+/* table entry for multi-io paths */
+struct hda_multi_io {
+	hda_nid_t pin;		/* multi-io widget pin NID */
+	hda_nid_t dac;		/* DAC to be connected */
+	unsigned int ctl_in;	/* cached input-pin control value */
+};
+
+/* Widget connection path
+ *
+ * For output, stored in the order of DAC -> ... -> pin,
+ * for input, pin -> ... -> ADC.
+ *
+ * idx[i] contains the source index number to select on of the widget path[i];
+ * e.g. idx[1] is the index of the DAC (path[0]) selected by path[1] widget
+ * multi[] indicates whether it's a selector widget with multi-connectors
+ * (i.e. the connection selection is mandatory)
+ * vol_ctl and mute_ctl contains the NIDs for the assigned mixers
+ */
+
+#define MAX_NID_PATH_DEPTH	5
+
+enum {
+	NID_PATH_VOL_CTL,
+	NID_PATH_MUTE_CTL,
+	NID_PATH_BOOST_CTL,
+	NID_PATH_NUM_CTLS
+};
+
+struct nid_path {
+	int depth;
+	hda_nid_t path[MAX_NID_PATH_DEPTH];
+	unsigned char idx[MAX_NID_PATH_DEPTH];
+	unsigned char multi[MAX_NID_PATH_DEPTH];
+	unsigned int ctls[NID_PATH_NUM_CTLS]; /* NID_PATH_XXX_CTL */
+	bool active;
+};
+
+/* mic/line-in auto switching entry */
+
+#define MAX_AUTO_MIC_PINS	3
+
+struct automic_entry {
+	hda_nid_t pin;		/* pin */
+	int idx;		/* imux index, -1 = invalid */
+	unsigned int attr;	/* pin attribute (INPUT_PIN_ATTR_*) */
+};
+
+struct hda_gen_spec {
+	char stream_name_analog[32];	/* analog PCM stream */
+	const struct hda_pcm_stream *stream_analog_playback;
+	const struct hda_pcm_stream *stream_analog_capture;
+	const struct hda_pcm_stream *stream_analog_alt_playback;
+	const struct hda_pcm_stream *stream_analog_alt_capture;
+
+	char stream_name_digital[32];	/* digital PCM stream */
+	const struct hda_pcm_stream *stream_digital_playback;
+	const struct hda_pcm_stream *stream_digital_capture;
+
+	/* playback */
+	struct hda_multi_out multiout;	/* playback set-up
+					 * max_channels, dacs must be set
+					 * dig_out_nid and hp_nid are optional
+					 */
+	hda_nid_t alt_dac_nid;
+	hda_nid_t slave_dig_outs[3];	/* optional - for auto-parsing */
+	int dig_out_type;
+
+	/* capture */
+	unsigned int num_adc_nids;
+	hda_nid_t adc_nids[AUTO_CFG_MAX_OUTS];
+	hda_nid_t dig_in_nid;		/* digital-in NID; optional */
+	hda_nid_t mixer_nid;		/* analog-mixer NID */
+
+	/* capture setup for dynamic dual-adc switch */
+	hda_nid_t cur_adc;
+	unsigned int cur_adc_stream_tag;
+	unsigned int cur_adc_format;
+
+	/* capture source */
+	struct hda_input_mux input_mux;
+	unsigned int cur_mux[3];
+
+	/* channel model */
+	const struct hda_channel_mode *channel_mode;
+	int num_channel_mode;
+	int const_channel_count;	/* min. channel count (for speakers) */
+	int ext_channel_count;		/* current channel count for multi-io */
+
+	/* PCM information */
+	struct hda_pcm pcm_rec[3];	/* used in build_pcms() */
+
+	/* dynamic controls, init_verbs and input_mux */
+	struct auto_pin_cfg autocfg;
+	struct snd_array kctls;
+	hda_nid_t private_dac_nids[AUTO_CFG_MAX_OUTS];
+	hda_nid_t imux_pins[HDA_MAX_NUM_INPUTS];
+	unsigned int dyn_adc_idx[HDA_MAX_NUM_INPUTS];
+	hda_nid_t shared_mic_vref_pin;
+
+	/* DAC list */
+	int num_all_dacs;
+	hda_nid_t all_dacs[16];
+
+	/* path list */
+	struct snd_array paths;
+
+	/* auto-mic stuff */
+	int am_num_entries;
+	struct automic_entry am_entry[MAX_AUTO_MIC_PINS];
+
+	/* for pin sensing */
+	unsigned int hp_jack_present:1;
+	unsigned int line_jack_present:1;
+	unsigned int master_mute:1;
+	unsigned int auto_mic:1;
+	unsigned int automute_speaker:1; /* automute speaker outputs */
+	unsigned int automute_lo:1; /* automute LO outputs */
+	unsigned int detect_hp:1;	/* Headphone detection enabled */
+	unsigned int detect_lo:1;	/* Line-out detection enabled */
+	unsigned int automute_speaker_possible:1; /* there are speakers and either LO or HP */
+	unsigned int automute_lo_possible:1;	  /* there are line outs and HP */
+	unsigned int keep_vref_in_automute:1; /* Don't clear VREF in automute */
+	unsigned int line_in_auto_switch:1; /* allow line-in auto switch */
+
+	/* other flags */
+	unsigned int need_dac_fix:1; /* need to limit DACs for multi channels */
+	unsigned int no_analog:1; /* digital I/O only */
+	unsigned int dyn_adc_switch:1; /* switch ADCs (for ALC275) */
+	unsigned int shared_mic_hp:1; /* HP/Mic-in sharing */
+	unsigned int no_primary_hp:1; /* Don't prefer HP pins to speaker pins */
+	unsigned int multi_cap_vol:1; /* allow multiple capture xxx volumes */
+	unsigned int inv_dmic_split:1; /* inverted dmic w/a for conexant */
+
+	unsigned int parse_flags; /* passed to snd_hda_parse_pin_defcfg() */
+
+	/* for virtual master */
+	hda_nid_t vmaster_nid;
+	struct hda_vmaster_mute_hook vmaster_mute;
+#ifdef CONFIG_PM
+	struct hda_loopback_check loopback;
+	int num_loopbacks;
+	struct hda_amp_list loopback_list[8];
+#endif
+
+	/* multi-io */
+	int multi_ios;
+	struct hda_multi_io multi_io[4];
+
+	/* bind volumes */
+	struct snd_array bind_ctls;
+
+	/* hooks */
+	void (*init_hook)(struct hda_codec *codec);
+	void (*automute_hook)(struct hda_codec *codec);
+	void (*cap_sync_hook)(struct hda_codec *codec);
+};
+
+int snd_hda_gen_spec_init(struct hda_gen_spec *spec);
+void snd_hda_gen_spec_free(struct hda_gen_spec *spec);
+
+int snd_hda_gen_init(struct hda_codec *codec);
+
+struct nid_path *snd_hda_get_nid_path(struct hda_codec *codec,
+				      hda_nid_t from_nid, hda_nid_t to_nid);
+bool snd_hda_parse_nid_path(struct hda_codec *codec, hda_nid_t from_nid,
+			    hda_nid_t to_nid, int with_aa_mix,
+			    struct nid_path *path);
+struct nid_path *
+snd_hda_add_new_path(struct hda_codec *codec, hda_nid_t from_nid,
+		     hda_nid_t to_nid, int with_aa_mix);
+void snd_hda_activate_path(struct hda_codec *codec, struct nid_path *path,
+			   bool enable, bool add_aamix);
+
+int snd_hda_gen_parse_auto_config(struct hda_codec *codec,
+				  const hda_nid_t *ignore_nids);
+int snd_hda_gen_build_controls(struct hda_codec *codec);
+int snd_hda_gen_build_pcms(struct hda_codec *codec);
+
+#endif /* __SOUND_HDA_GENERIC_H */
