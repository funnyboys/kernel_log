commit b4e5e70775546480035e156b40040e5d0d4264d1
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Jan 3 09:16:53 2020 +0100

    ALSA: pci: Constify snd_kcontrol_new items
    
    Most of snd_kcontrol_new definitions are read-only and passed as-is.
    Let's declare them as const for further optimization.
    
    There should be no functional changes by this patch.
    
    Link: https://lore.kernel.org/r/20200103081714.9560-38-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/cs5535audio/cs5535audio_olpc.c b/sound/pci/cs5535audio/cs5535audio_olpc.c
index bd246b10636e..4e295303b041 100644
--- a/sound/pci/cs5535audio/cs5535audio_olpc.c
+++ b/sound/pci/cs5535audio/cs5535audio_olpc.c
@@ -111,7 +111,7 @@ static int olpc_mic_put(struct snd_kcontrol *kctl, struct snd_ctl_elem_value *v)
 	return 1;
 }
 
-static struct snd_kcontrol_new olpc_cs5535audio_ctls[] = {
+static const struct snd_kcontrol_new olpc_cs5535audio_ctls[] = {
 {
 	.iface = SNDRV_CTL_ELEM_IFACE_MIXER,
 	.name = "DC Mode Enable",

commit 2874c5fd284268364ece81a7bd936f3c8168e567
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon May 27 08:55:01 2019 +0200

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 152
    
    Based on 1 normalized pattern(s):
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license as published by
      the free software foundation either version 2 of the license or at
      your option any later version
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-or-later
    
    has been chosen to replace the boilerplate/reference in 3029 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190527070032.746973796@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/sound/pci/cs5535audio/cs5535audio_olpc.c b/sound/pci/cs5535audio/cs5535audio_olpc.c
index 3b0fdaca8dc7..bd246b10636e 100644
--- a/sound/pci/cs5535audio/cs5535audio_olpc.c
+++ b/sound/pci/cs5535audio/cs5535audio_olpc.c
@@ -1,13 +1,9 @@
+// SPDX-License-Identifier: GPL-2.0-or-later
 /*
  * OLPC XO-1 additional sound features
  *
  * Copyright © 2006  Jaya Kumar <jayakumar.lkml@gmail.com>
  * Copyright © 2007-2008  Andres Salomon <dilinger@debian.org>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
  */
 #include <sound/core.h>
 #include <sound/info.h>

commit 00980aa9c7ce2b5b54a5a7e7cf259f36fabdb249
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Feb 25 16:10:25 2014 +0100

    ALSA: cs5535audio: Use standard printk helpers
    
    Convert with dev_err() and co from snd_printk(), etc.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/cs5535audio/cs5535audio_olpc.c b/sound/pci/cs5535audio/cs5535audio_olpc.c
index e6a44507d557..3b0fdaca8dc7 100644
--- a/sound/pci/cs5535audio/cs5535audio_olpc.c
+++ b/sound/pci/cs5535audio/cs5535audio_olpc.c
@@ -36,7 +36,8 @@ void olpc_analog_input(struct snd_ac97 *ac97, int on)
 	err = snd_ac97_update_bits(ac97, AC97_AD_TEST2,
 			1 << AC97_AD_HPFD_SHIFT, on << AC97_AD_HPFD_SHIFT);
 	if (err < 0) {
-		snd_printk(KERN_ERR "setting High Pass Filter - %d\n", err);
+		dev_err(ac97->bus->card->dev,
+			"setting High Pass Filter - %d\n", err);
 		return;
 	}
 
@@ -58,7 +59,7 @@ void olpc_mic_bias(struct snd_ac97 *ac97, int on)
 	err = snd_ac97_update_bits(ac97, AC97_AD_MISC,
 			1 << AC97_AD_VREFD_SHIFT, on << AC97_AD_VREFD_SHIFT);
 	if (err < 0)
-		snd_printk(KERN_ERR "setting MIC Bias - %d\n", err);
+		dev_err(ac97->bus->card->dev, "setting MIC Bias - %d\n", err);
 }
 
 static int olpc_dc_info(struct snd_kcontrol *kctl,
@@ -153,7 +154,7 @@ int olpc_quirks(struct snd_card *card, struct snd_ac97 *ac97)
 		return 0;
 
 	if (gpio_request(OLPC_GPIO_MIC_AC, DRV_NAME)) {
-		printk(KERN_ERR DRV_NAME ": unable to allocate MIC GPIO\n");
+		dev_err(card->dev, "unable to allocate MIC GPIO\n");
 		return -EIO;
 	}
 	gpio_direction_output(OLPC_GPIO_MIC_AC, 0);

commit 57a4451d26eef4ccbf3b32fd116295f001c18cb4
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Oct 29 15:26:12 2013 +0100

    ALSA: Use strlcpy() instead of strncpy()
    
    We tend to make stupid mistakes with strncpy().  Let's take a safer
    one, strlcpy().
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/cs5535audio/cs5535audio_olpc.c b/sound/pci/cs5535audio/cs5535audio_olpc.c
index da1cb9c4c76c..e6a44507d557 100644
--- a/sound/pci/cs5535audio/cs5535audio_olpc.c
+++ b/sound/pci/cs5535audio/cs5535audio_olpc.c
@@ -161,13 +161,13 @@ int olpc_quirks(struct snd_card *card, struct snd_ac97 *ac97)
 	/* drop the original AD1888 HPF control */
 	memset(&elem, 0, sizeof(elem));
 	elem.iface = SNDRV_CTL_ELEM_IFACE_MIXER;
-	strncpy(elem.name, "High Pass Filter Enable", sizeof(elem.name));
+	strlcpy(elem.name, "High Pass Filter Enable", sizeof(elem.name));
 	snd_ctl_remove_id(card, &elem);
 
 	/* drop the original V_REFOUT control */
 	memset(&elem, 0, sizeof(elem));
 	elem.iface = SNDRV_CTL_ELEM_IFACE_MIXER;
-	strncpy(elem.name, "V_REFOUT Enable", sizeof(elem.name));
+	strlcpy(elem.name, "V_REFOUT Enable", sizeof(elem.name));
 	snd_ctl_remove_id(card, &elem);
 
 	/* add the OLPC-specific controls */

commit e23e7a1436207217000c2854214bc908936af3cb
Author: Bill Pemberton <wfp5p@virginia.edu>
Date:   Thu Dec 6 12:35:10 2012 -0500

    ALSA: pci: remove __dev* attributes
    
    CONFIG_HOTPLUG is going away as an option.  As result the __dev*
    markings will be going away.
    
    Remove use of __devinit, __devexit_p, __devinitdata, __devinitconst,
    and __devexit.
    
    Signed-off-by: Bill Pemberton <wfp5p@virginia.edu>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/cs5535audio/cs5535audio_olpc.c b/sound/pci/cs5535audio/cs5535audio_olpc.c
index 50da49be9ae5..da1cb9c4c76c 100644
--- a/sound/pci/cs5535audio/cs5535audio_olpc.c
+++ b/sound/pci/cs5535audio/cs5535audio_olpc.c
@@ -114,7 +114,7 @@ static int olpc_mic_put(struct snd_kcontrol *kctl, struct snd_ctl_elem_value *v)
 	return 1;
 }
 
-static struct snd_kcontrol_new olpc_cs5535audio_ctls[] __devinitdata = {
+static struct snd_kcontrol_new olpc_cs5535audio_ctls[] = {
 {
 	.iface = SNDRV_CTL_ELEM_IFACE_MIXER,
 	.name = "DC Mode Enable",
@@ -133,8 +133,8 @@ static struct snd_kcontrol_new olpc_cs5535audio_ctls[] __devinitdata = {
 },
 };
 
-void __devinit olpc_prequirks(struct snd_card *card,
-		struct snd_ac97_template *ac97)
+void olpc_prequirks(struct snd_card *card,
+		    struct snd_ac97_template *ac97)
 {
 	if (!machine_is_olpc())
 		return;
@@ -144,7 +144,7 @@ void __devinit olpc_prequirks(struct snd_card *card,
 		ac97->scaps |= AC97_SCAP_INV_EAPD;
 }
 
-int __devinit olpc_quirks(struct snd_card *card, struct snd_ac97 *ac97)
+int olpc_quirks(struct snd_card *card, struct snd_ac97 *ac97)
 {
 	struct snd_ctl_elem_id elem;
 	int i, err;
@@ -185,7 +185,7 @@ int __devinit olpc_quirks(struct snd_card *card, struct snd_ac97 *ac97)
 	return 0;
 }
 
-void __devexit olpc_quirks_cleanup(void)
+void olpc_quirks_cleanup(void)
 {
 	gpio_free(OLPC_GPIO_MIC_AC);
 }

commit 3c55494670745e523f69b56edb66ca0b50a470c2
Author: Andres Salomon <dilinger@collabora.co.uk>
Date:   Mon Dec 14 18:00:36 2009 -0800

    ALSA: cs5535audio: free OLPC quirks from reliance on MGEODE_LX cpu optimization
    
    Previously, OLPC support for the mic extensions was only enabled in the
    ALSA driver if CONFIG_OLPC and CONFIG_MGEODE_LX were both set.  This was
    because the old geode GPIO code was written in a manner that assumed
    CONFIG_MGEODE_LX.  With the new cs553x-gpio driver, this is no longer the
    case; as such, we can drop the requirement on CONFIG_MGEODE_LX and instead
    include a requirement on GPIOLIB.
    
    We use the generic GPIO API rather than the cs553x-specific API.
    
    Signed-off-by: Andres Salomon <dilinger@collabora.co.uk>
    Cc: Takashi Iwai <tiwai@suse.de>
    Cc: Jordan Crouse <jordan@cosmicpenguin.net>
    Cc: David Brownell <david-b@pacbell.net>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/sound/pci/cs5535audio/cs5535audio_olpc.c b/sound/pci/cs5535audio/cs5535audio_olpc.c
index 5c6814335cd7..50da49be9ae5 100644
--- a/sound/pci/cs5535audio/cs5535audio_olpc.c
+++ b/sound/pci/cs5535audio/cs5535audio_olpc.c
@@ -13,10 +13,13 @@
 #include <sound/info.h>
 #include <sound/control.h>
 #include <sound/ac97_codec.h>
+#include <linux/gpio.h>
 
 #include <asm/olpc.h>
 #include "cs5535audio.h"
 
+#define DRV_NAME "cs5535audio-olpc"
+
 /*
  * OLPC has an additional feature on top of the regular AD1888 codec features.
  * It has an Analog Input mode that is switched into (after disabling the
@@ -38,10 +41,7 @@ void olpc_analog_input(struct snd_ac97 *ac97, int on)
 	}
 
 	/* set Analog Input through GPIO */
-	if (on)
-		geode_gpio_set(OLPC_GPIO_MIC_AC, GPIO_OUTPUT_VAL);
-	else
-		geode_gpio_clear(OLPC_GPIO_MIC_AC, GPIO_OUTPUT_VAL);
+	gpio_set_value(OLPC_GPIO_MIC_AC, on);
 }
 
 /*
@@ -73,8 +73,7 @@ static int olpc_dc_info(struct snd_kcontrol *kctl,
 
 static int olpc_dc_get(struct snd_kcontrol *kctl, struct snd_ctl_elem_value *v)
 {
-	v->value.integer.value[0] = geode_gpio_isset(OLPC_GPIO_MIC_AC,
-			GPIO_OUTPUT_VAL);
+	v->value.integer.value[0] = gpio_get_value(OLPC_GPIO_MIC_AC);
 	return 0;
 }
 
@@ -153,6 +152,12 @@ int __devinit olpc_quirks(struct snd_card *card, struct snd_ac97 *ac97)
 	if (!machine_is_olpc())
 		return 0;
 
+	if (gpio_request(OLPC_GPIO_MIC_AC, DRV_NAME)) {
+		printk(KERN_ERR DRV_NAME ": unable to allocate MIC GPIO\n");
+		return -EIO;
+	}
+	gpio_direction_output(OLPC_GPIO_MIC_AC, 0);
+
 	/* drop the original AD1888 HPF control */
 	memset(&elem, 0, sizeof(elem));
 	elem.iface = SNDRV_CTL_ELEM_IFACE_MIXER;
@@ -169,11 +174,18 @@ int __devinit olpc_quirks(struct snd_card *card, struct snd_ac97 *ac97)
 	for (i = 0; i < ARRAY_SIZE(olpc_cs5535audio_ctls); i++) {
 		err = snd_ctl_add(card, snd_ctl_new1(&olpc_cs5535audio_ctls[i],
 				ac97->private_data));
-		if (err < 0)
+		if (err < 0) {
+			gpio_free(OLPC_GPIO_MIC_AC);
 			return err;
+		}
 	}
 
 	/* turn off the mic by default */
 	olpc_mic_bias(ac97, 0);
 	return 0;
 }
+
+void __devexit olpc_quirks_cleanup(void)
+{
+	gpio_free(OLPC_GPIO_MIC_AC);
+}

commit 0fb497f5b6ff8da1e9e60afb39835f40d7f043ec
Author: Andres Salomon <dilinger@queued.net>
Date:   Thu Nov 6 16:53:34 2008 -0500

    ALSA: cs5535audio: ensure MIC Bias/Analog Input bail if not on an OLPC machine
    
    Signed-off-by: Andres Salomon <dilinger@debian.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/cs5535audio/cs5535audio_olpc.c b/sound/pci/cs5535audio/cs5535audio_olpc.c
index 164f6bdab991..5c6814335cd7 100644
--- a/sound/pci/cs5535audio/cs5535audio_olpc.c
+++ b/sound/pci/cs5535audio/cs5535audio_olpc.c
@@ -26,6 +26,9 @@ void olpc_analog_input(struct snd_ac97 *ac97, int on)
 {
 	int err;
 
+	if (!machine_is_olpc())
+		return;
+
 	/* update the High Pass Filter (via AC97_AD_TEST2) */
 	err = snd_ac97_update_bits(ac97, AC97_AD_TEST2,
 			1 << AC97_AD_HPFD_SHIFT, on << AC97_AD_HPFD_SHIFT);
@@ -48,6 +51,9 @@ void olpc_mic_bias(struct snd_ac97 *ac97, int on)
 {
 	int err;
 
+	if (!machine_is_olpc())
+		return;
+
 	on = on ? 0 : 1;
 	err = snd_ac97_update_bits(ac97, AC97_AD_MISC,
 			1 << AC97_AD_VREFD_SHIFT, on << AC97_AD_VREFD_SHIFT);

commit b5ccc57b06b54058879ab3ea548625d9bf88c7fc
Author: Andres Salomon <dilinger@queued.net>
Date:   Thu Nov 6 16:53:26 2008 -0500

    ALSA: cs5535audio: clean up OLPC code
    
    - add copyright info to _olpc.c
     - minor layout fixes
     - make Makefile more concise
     - silence a warning
    
    Signed-off-by: Andres Salomon <dilinger@debian.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/cs5535audio/cs5535audio_olpc.c b/sound/pci/cs5535audio/cs5535audio_olpc.c
index 45b24f718d62..164f6bdab991 100644
--- a/sound/pci/cs5535audio/cs5535audio_olpc.c
+++ b/sound/pci/cs5535audio/cs5535audio_olpc.c
@@ -1,4 +1,14 @@
-#include <sound/driver.h>
+/*
+ * OLPC XO-1 additional sound features
+ *
+ * Copyright © 2006  Jaya Kumar <jayakumar.lkml@gmail.com>
+ * Copyright © 2007-2008  Andres Salomon <dilinger@debian.org>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ */
 #include <sound/core.h>
 #include <sound/info.h>
 #include <sound/control.h>
@@ -106,7 +116,7 @@ static struct snd_kcontrol_new olpc_cs5535audio_ctls[] __devinitdata = {
 	.info = olpc_dc_info,
 	.get = olpc_dc_get,
 	.put = olpc_dc_put,
-	.private_value = 0
+	.private_value = 0,
 },
 {
 	.iface = SNDRV_CTL_ELEM_IFACE_MIXER,
@@ -161,4 +171,3 @@ int __devinit olpc_quirks(struct snd_card *card, struct snd_ac97 *ac97)
 	olpc_mic_bias(ac97, 0);
 	return 0;
 }
-

commit c8f0eeebc119c401202bc2794bec026d6cfd062e
Author: Andres Salomon <dilinger@queued.net>
Date:   Thu Nov 6 16:53:19 2008 -0500

    ALSA: cs5535audio: turn off mic bias on OLPCs by default
    
    Always turn off mic bias; the MIC LED should never come on when the
    driver is first loaded.
    
    Signed-off-by: Andres Salomon <dilinger@debian.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/cs5535audio/cs5535audio_olpc.c b/sound/pci/cs5535audio/cs5535audio_olpc.c
index 73811e0e8ac7..45b24f718d62 100644
--- a/sound/pci/cs5535audio/cs5535audio_olpc.c
+++ b/sound/pci/cs5535audio/cs5535audio_olpc.c
@@ -157,6 +157,8 @@ int __devinit olpc_quirks(struct snd_card *card, struct snd_ac97 *ac97)
 			return err;
 	}
 
+	/* turn off the mic by default */
+	olpc_mic_bias(ac97, 0);
 	return 0;
 }
 

commit bf1e5278354856ac0260d338961560e720147681
Author: Andres Salomon <dilinger@queued.net>
Date:   Thu Nov 6 16:53:03 2008 -0500

    ALSA: cs5535audio: rename V_REFOUT control to MIC Bias
    
    This drops the AD1888 V_REFOUT control, and replaces it with a MIC Bias
    Enable control.  It also moves the MIC bias enabling into a separate
    function.
    
    Signed-off-by: Andres Salomon <dilinger@debian.org>

diff --git a/sound/pci/cs5535audio/cs5535audio_olpc.c b/sound/pci/cs5535audio/cs5535audio_olpc.c
index 7f26cfbc8f52..73811e0e8ac7 100644
--- a/sound/pci/cs5535audio/cs5535audio_olpc.c
+++ b/sound/pci/cs5535audio/cs5535audio_olpc.c
@@ -31,6 +31,20 @@ void olpc_analog_input(struct snd_ac97 *ac97, int on)
 		geode_gpio_clear(OLPC_GPIO_MIC_AC, GPIO_OUTPUT_VAL);
 }
 
+/*
+ * OLPC XO-1's V_REFOUT is a mic bias enable.
+ */
+void olpc_mic_bias(struct snd_ac97 *ac97, int on)
+{
+	int err;
+
+	on = on ? 0 : 1;
+	err = snd_ac97_update_bits(ac97, AC97_AD_MISC,
+			1 << AC97_AD_VREFD_SHIFT, on << AC97_AD_VREFD_SHIFT);
+	if (err < 0)
+		snd_printk(KERN_ERR "setting MIC Bias - %d\n", err);
+}
+
 static int olpc_dc_info(struct snd_kcontrol *kctl,
 		struct snd_ctl_elem_info *uinfo)
 {
@@ -56,7 +70,36 @@ static int olpc_dc_put(struct snd_kcontrol *kctl, struct snd_ctl_elem_value *v)
 	return 1;
 }
 
-static struct snd_kcontrol_new snd_cs5535audio_controls __devinitdata =
+static int olpc_mic_info(struct snd_kcontrol *kctl,
+		struct snd_ctl_elem_info *uinfo)
+{
+	uinfo->type = SNDRV_CTL_ELEM_TYPE_BOOLEAN;
+	uinfo->count = 1;
+	uinfo->value.integer.min = 0;
+	uinfo->value.integer.max = 1;
+	return 0;
+}
+
+static int olpc_mic_get(struct snd_kcontrol *kctl, struct snd_ctl_elem_value *v)
+{
+	struct cs5535audio *cs5535au = snd_kcontrol_chip(kctl);
+	struct snd_ac97 *ac97 = cs5535au->ac97;
+	int i;
+
+	i = (snd_ac97_read(ac97, AC97_AD_MISC) >> AC97_AD_VREFD_SHIFT) & 0x1;
+	v->value.integer.value[0] = i ? 0 : 1;
+	return 0;
+}
+
+static int olpc_mic_put(struct snd_kcontrol *kctl, struct snd_ctl_elem_value *v)
+{
+	struct cs5535audio *cs5535au = snd_kcontrol_chip(kctl);
+
+	olpc_mic_bias(cs5535au->ac97, v->value.integer.value[0]);
+	return 1;
+}
+
+static struct snd_kcontrol_new olpc_cs5535audio_ctls[] __devinitdata = {
 {
 	.iface = SNDRV_CTL_ELEM_IFACE_MIXER,
 	.name = "DC Mode Enable",
@@ -64,6 +107,15 @@ static struct snd_kcontrol_new snd_cs5535audio_controls __devinitdata =
 	.get = olpc_dc_get,
 	.put = olpc_dc_put,
 	.private_value = 0
+},
+{
+	.iface = SNDRV_CTL_ELEM_IFACE_MIXER,
+	.name = "MIC Bias Enable",
+	.info = olpc_mic_info,
+	.get = olpc_mic_get,
+	.put = olpc_mic_put,
+	.private_value = 0,
+},
 };
 
 void __devinit olpc_prequirks(struct snd_card *card,
@@ -80,6 +132,7 @@ void __devinit olpc_prequirks(struct snd_card *card,
 int __devinit olpc_quirks(struct snd_card *card, struct snd_ac97 *ac97)
 {
 	struct snd_ctl_elem_id elem;
+	int i, err;
 
 	if (!machine_is_olpc())
 		return 0;
@@ -90,8 +143,20 @@ int __devinit olpc_quirks(struct snd_card *card, struct snd_ac97 *ac97)
 	strncpy(elem.name, "High Pass Filter Enable", sizeof(elem.name));
 	snd_ctl_remove_id(card, &elem);
 
-	/* add the override for OLPC's HPF */
-	return snd_ctl_add(card, snd_ctl_new1(&snd_cs5535audio_controls,
-						ac97->private_data));
+	/* drop the original V_REFOUT control */
+	memset(&elem, 0, sizeof(elem));
+	elem.iface = SNDRV_CTL_ELEM_IFACE_MIXER;
+	strncpy(elem.name, "V_REFOUT Enable", sizeof(elem.name));
+	snd_ctl_remove_id(card, &elem);
+
+	/* add the OLPC-specific controls */
+	for (i = 0; i < ARRAY_SIZE(olpc_cs5535audio_ctls); i++) {
+		err = snd_ctl_add(card, snd_ctl_new1(&olpc_cs5535audio_ctls[i],
+				ac97->private_data));
+		if (err < 0)
+			return err;
+	}
+
+	return 0;
 }
 

commit 189d34e747e9540b70227f6682bd680868d90b10
Author: Andres Salomon <dilinger@queued.net>
Date:   Thu Nov 6 16:49:55 2008 -0500

    ALSA: cs5535audio: check OLPC's Analog Input status vis GPIO
    
    Checking the HPF register is irrelevant; HPF is secondary to the AI mode.
    Instead, check for Analog Input mode via GPIO.
    
    Signed-off-by: Andres Salomon <dilinger@debian.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/cs5535audio/cs5535audio_olpc.c b/sound/pci/cs5535audio/cs5535audio_olpc.c
index 6c0c0dbeb218..7f26cfbc8f52 100644
--- a/sound/pci/cs5535audio/cs5535audio_olpc.c
+++ b/sound/pci/cs5535audio/cs5535audio_olpc.c
@@ -43,13 +43,8 @@ static int olpc_dc_info(struct snd_kcontrol *kctl,
 
 static int olpc_dc_get(struct snd_kcontrol *kctl, struct snd_ctl_elem_value *v)
 {
-	struct cs5535audio *cs5535au = snd_kcontrol_chip(kctl);
-	u8 val;
-
-	val = snd_ac97_read(cs5535au->ac97, AC97_AD_TEST2);
-	val >>= AC97_AD_HPFD_SHIFT;
-	v->value.integer.value[0] = val & 0x1;
-
+	v->value.integer.value[0] = geode_gpio_isset(OLPC_GPIO_MIC_AC,
+			GPIO_OUTPUT_VAL);
 	return 0;
 }
 

commit 466ae3055be8665525a5613456fcb387ffef4cb7
Author: Andres Salomon <dilinger@queued.net>
Date:   Thu Nov 6 16:49:46 2008 -0500

    ALSA: cs5535audio: rename OLPC's analog input control && drop AD1888's HPF
    
    Previously, we had two separate controls; there's no need to have AD1888's
    HPF control, so drop it if we're on an OLPC machine.  Also, as per Arjun's
    request, rename OLPC's Analog Input Switch control to "DC Mode Enable".
    
    Signed-off-by: Andres Salomon <dilinger@debian.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/cs5535audio/cs5535audio_olpc.c b/sound/pci/cs5535audio/cs5535audio_olpc.c
index 597395e6e358..6c0c0dbeb218 100644
--- a/sound/pci/cs5535audio/cs5535audio_olpc.c
+++ b/sound/pci/cs5535audio/cs5535audio_olpc.c
@@ -31,8 +31,8 @@ void olpc_analog_input(struct snd_ac97 *ac97, int on)
 		geode_gpio_clear(OLPC_GPIO_MIC_AC, GPIO_OUTPUT_VAL);
 }
 
-static int snd_cs5535audio_ctl_info(struct snd_kcontrol *kcontrol,
-					struct snd_ctl_elem_info *uinfo)
+static int olpc_dc_info(struct snd_kcontrol *kctl,
+		struct snd_ctl_elem_info *uinfo)
 {
 	uinfo->type = SNDRV_CTL_ELEM_TYPE_BOOLEAN;
 	uinfo->count = 1;
@@ -41,35 +41,33 @@ static int snd_cs5535audio_ctl_info(struct snd_kcontrol *kcontrol,
 	return 0;
 }
 
-static int snd_cs5535audio_ctl_get(struct snd_kcontrol *kcontrol,
-					struct snd_ctl_elem_value *ucontrol)
+static int olpc_dc_get(struct snd_kcontrol *kctl, struct snd_ctl_elem_value *v)
 {
-	struct cs5535audio *cs5535au = snd_kcontrol_chip(kcontrol);
+	struct cs5535audio *cs5535au = snd_kcontrol_chip(kctl);
 	u8 val;
 
 	val = snd_ac97_read(cs5535au->ac97, AC97_AD_TEST2);
 	val >>= AC97_AD_HPFD_SHIFT;
-	ucontrol->value.integer.value[0] = val & 0x1;
+	v->value.integer.value[0] = val & 0x1;
 
 	return 0;
 }
 
-static int snd_cs5535audio_ctl_put(struct snd_kcontrol *kcontrol,
-					struct snd_ctl_elem_value *ucontrol)
+static int olpc_dc_put(struct snd_kcontrol *kctl, struct snd_ctl_elem_value *v)
 {
-	struct cs5535audio *cs5535au = snd_kcontrol_chip(kcontrol);
+	struct cs5535audio *cs5535au = snd_kcontrol_chip(kctl);
 
-	olpc_analog_input(cs5535au->ac97, ucontrol->value.integer.value[0]);
+	olpc_analog_input(cs5535au->ac97, v->value.integer.value[0]);
 	return 1;
 }
 
 static struct snd_kcontrol_new snd_cs5535audio_controls __devinitdata =
 {
 	.iface = SNDRV_CTL_ELEM_IFACE_MIXER,
-	.name = "Analog Input Switch",
-	.info = snd_cs5535audio_ctl_info,
-	.get = snd_cs5535audio_ctl_get,
-	.put = snd_cs5535audio_ctl_put,
+	.name = "DC Mode Enable",
+	.info = olpc_dc_info,
+	.get = olpc_dc_get,
+	.put = olpc_dc_put,
 	.private_value = 0
 };
 
@@ -86,10 +84,18 @@ void __devinit olpc_prequirks(struct snd_card *card,
 
 int __devinit olpc_quirks(struct snd_card *card, struct snd_ac97 *ac97)
 {
+	struct snd_ctl_elem_id elem;
+
 	if (!machine_is_olpc())
 		return 0;
 
-	/* setup callback for mixer control that does analog input mode */
+	/* drop the original AD1888 HPF control */
+	memset(&elem, 0, sizeof(elem));
+	elem.iface = SNDRV_CTL_ELEM_IFACE_MIXER;
+	strncpy(elem.name, "High Pass Filter Enable", sizeof(elem.name));
+	snd_ctl_remove_id(card, &elem);
+
+	/* add the override for OLPC's HPF */
 	return snd_ctl_add(card, snd_ctl_new1(&snd_cs5535audio_controls,
 						ac97->private_data));
 }

commit d6276b78028dfab944dd4a58124aefcc9aa580da
Author: Andres Salomon <dilinger@queued.net>
Date:   Thu Nov 6 16:49:38 2008 -0500

    ALSA: cs5535audio: create function for setting OLPC's Analog Input mode
    
    Clean this stuff up a bit..
    
    Signed-off-by: Andres Salomon <dilinger@debian.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/cs5535audio/cs5535audio_olpc.c b/sound/pci/cs5535audio/cs5535audio_olpc.c
index f20e74182725..597395e6e358 100644
--- a/sound/pci/cs5535audio/cs5535audio_olpc.c
+++ b/sound/pci/cs5535audio/cs5535audio_olpc.c
@@ -7,12 +7,29 @@
 #include <asm/olpc.h>
 #include "cs5535audio.h"
 
-/* OLPC has an additional feature on top of regular AD1888 codec
-features. This is support for an analog input mode. This is a
-2 step process. First, to turn off the AD1888 codec bias voltage
-and high pass filter. Second, to tell the embedded controller to
-reroute from a capacitive trace to a direct trace using an analog
-switch. The *_ec()s are what talk to that controller */
+/*
+ * OLPC has an additional feature on top of the regular AD1888 codec features.
+ * It has an Analog Input mode that is switched into (after disabling the
+ * High Pass Filter) via GPIO.  It is supported on B2 and later models.
+ */
+void olpc_analog_input(struct snd_ac97 *ac97, int on)
+{
+	int err;
+
+	/* update the High Pass Filter (via AC97_AD_TEST2) */
+	err = snd_ac97_update_bits(ac97, AC97_AD_TEST2,
+			1 << AC97_AD_HPFD_SHIFT, on << AC97_AD_HPFD_SHIFT);
+	if (err < 0) {
+		snd_printk(KERN_ERR "setting High Pass Filter - %d\n", err);
+		return;
+	}
+
+	/* set Analog Input through GPIO */
+	if (on)
+		geode_gpio_set(OLPC_GPIO_MIC_AC, GPIO_OUTPUT_VAL);
+	else
+		geode_gpio_clear(OLPC_GPIO_MIC_AC, GPIO_OUTPUT_VAL);
+}
 
 static int snd_cs5535audio_ctl_info(struct snd_kcontrol *kcontrol,
 					struct snd_ctl_elem_info *uinfo)
@@ -24,8 +41,6 @@ static int snd_cs5535audio_ctl_info(struct snd_kcontrol *kcontrol,
 	return 0;
 }
 
-#define AD1888_VREFOUT_EN_BIT (1 << 2)
-#define AD1888_HPF_EN_BIT (1 << 12)
 static int snd_cs5535audio_ctl_get(struct snd_kcontrol *kcontrol,
 					struct snd_ctl_elem_value *ucontrol)
 {
@@ -42,30 +57,9 @@ static int snd_cs5535audio_ctl_get(struct snd_kcontrol *kcontrol,
 static int snd_cs5535audio_ctl_put(struct snd_kcontrol *kcontrol,
 					struct snd_ctl_elem_value *ucontrol)
 {
-	int err;
 	struct cs5535audio *cs5535au = snd_kcontrol_chip(kcontrol);
-	u8 value;
-	struct snd_ac97 *ac97 = cs5535au->ac97;
-
-	/* value is 1 if analog input is desired */
-	value = ucontrol->value.integer.value[0];
-
-	/* turns off High Pass Filter if 1 */
-	if (value)
-		err = snd_ac97_update_bits(ac97, AC97_AD_TEST2,
-				AD1888_HPF_EN_BIT, AD1888_HPF_EN_BIT);
-	else
-		err = snd_ac97_update_bits(ac97, AC97_AD_TEST2,
-				AD1888_HPF_EN_BIT, 0);
-	if (err < 0)
-		snd_printk(KERN_ERR "Error updating AD_TEST2 %d\n", err);
-
-	/* B2 and newer writes directly to a GPIO pin */
-	if (value)
-		geode_gpio_set(OLPC_GPIO_MIC_AC, GPIO_OUTPUT_VAL);
-	else
-		geode_gpio_clear(OLPC_GPIO_MIC_AC, GPIO_OUTPUT_VAL);
 
+	olpc_analog_input(cs5535au->ac97, ucontrol->value.integer.value[0]);
 	return 1;
 }
 

commit 1e2232bc70b32f90109d678d1faccf6f50ebba80
Author: Andres Salomon <dilinger@queued.net>
Date:   Thu Nov 6 16:47:05 2008 -0500

    ALSA: cs5535audio: decouple HPF from V_REFOUT in OLPC code
    
    We shouldn't be touching V_REFOUT when we toggle HPF/analog input, so just
    drop that code.
    
    Signed-off-by: Andres Salomon <dilinger@debian.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/cs5535audio/cs5535audio_olpc.c b/sound/pci/cs5535audio/cs5535audio_olpc.c
index 2bd6588b4353..f20e74182725 100644
--- a/sound/pci/cs5535audio/cs5535audio_olpc.c
+++ b/sound/pci/cs5535audio/cs5535audio_olpc.c
@@ -30,18 +30,11 @@ static int snd_cs5535audio_ctl_get(struct snd_kcontrol *kcontrol,
 					struct snd_ctl_elem_value *ucontrol)
 {
 	struct cs5535audio *cs5535au = snd_kcontrol_chip(kcontrol);
-	u16 reg1, reg2;
+	u8 val;
 
-	/* if either AD1888 VRef Bias and High Pass Filter are enabled
-	or the EC is not in analog mode then flag as not in analog mode.
-	No EC command to read current analog state so we cache that. */
-	reg1 = snd_ac97_read(cs5535au->ac97, AC97_AD_MISC);
-	reg2 = snd_ac97_read(cs5535au->ac97, AC97_AD_TEST2);
-
-	if ((reg1 & AD1888_VREFOUT_EN_BIT) && (reg2 & AD1888_HPF_EN_BIT))
-		ucontrol->value.integer.value[0] = 1;
-	else
-		ucontrol->value.integer.value[0] = 0;
+	val = snd_ac97_read(cs5535au->ac97, AC97_AD_TEST2);
+	val >>= AC97_AD_HPFD_SHIFT;
+	ucontrol->value.integer.value[0] = val & 0x1;
 
 	return 0;
 }
@@ -57,16 +50,6 @@ static int snd_cs5535audio_ctl_put(struct snd_kcontrol *kcontrol,
 	/* value is 1 if analog input is desired */
 	value = ucontrol->value.integer.value[0];
 
-	/* sets High Z on VREF Bias if 1 */
-	if (value)
-		err = snd_ac97_update_bits(ac97, AC97_AD_MISC,
-				AD1888_VREFOUT_EN_BIT, AD1888_VREFOUT_EN_BIT);
-	else
-		err = snd_ac97_update_bits(ac97, AC97_AD_MISC,
-				AD1888_VREFOUT_EN_BIT, 0);
-	if (err < 0)
-		snd_printk(KERN_ERR "Error updating AD_MISC %d\n", err);
-
 	/* turns off High Pass Filter if 1 */
 	if (value)
 		err = snd_ac97_update_bits(ac97, AC97_AD_TEST2,

commit b91254e75c3ec4f371ce1849672a95a929d99861
Author: Andres Salomon <dilinger@queued.net>
Date:   Thu Nov 6 16:46:31 2008 -0500

    ALSA: cs5535audio: drop ec_analog_input flag for OLPC stuff
    
    This is no longer necessary, as we're no longer doing indexed i/o commands.
    
    Signed-off-by: Andres Salomon <dilinger@debian.org>

diff --git a/sound/pci/cs5535audio/cs5535audio_olpc.c b/sound/pci/cs5535audio/cs5535audio_olpc.c
index ff7b68ba6179..2bd6588b4353 100644
--- a/sound/pci/cs5535audio/cs5535audio_olpc.c
+++ b/sound/pci/cs5535audio/cs5535audio_olpc.c
@@ -38,8 +38,7 @@ static int snd_cs5535audio_ctl_get(struct snd_kcontrol *kcontrol,
 	reg1 = snd_ac97_read(cs5535au->ac97, AC97_AD_MISC);
 	reg2 = snd_ac97_read(cs5535au->ac97, AC97_AD_TEST2);
 
-	if ((reg1 & AD1888_VREFOUT_EN_BIT) && (reg2 & AD1888_HPF_EN_BIT) &&
-		cs5535au->ec_analog_input_mode)
+	if ((reg1 & AD1888_VREFOUT_EN_BIT) && (reg2 & AD1888_HPF_EN_BIT))
 		ucontrol->value.integer.value[0] = 1;
 	else
 		ucontrol->value.integer.value[0] = 0;
@@ -58,10 +57,6 @@ static int snd_cs5535audio_ctl_put(struct snd_kcontrol *kcontrol,
 	/* value is 1 if analog input is desired */
 	value = ucontrol->value.integer.value[0];
 
-	/* use ec mode as flag to determine if any change needed */
-	if (cs5535au->ec_analog_input_mode == value)
-		return 0;
-
 	/* sets High Z on VREF Bias if 1 */
 	if (value)
 		err = snd_ac97_update_bits(ac97, AC97_AD_MISC,
@@ -88,8 +83,6 @@ static int snd_cs5535audio_ctl_put(struct snd_kcontrol *kcontrol,
 	else
 		geode_gpio_clear(OLPC_GPIO_MIC_AC, GPIO_OUTPUT_VAL);
 
-	cs5535au->ec_analog_input_mode = value;
-
 	return 1;
 }
 

commit 3556d18465c6e67c7a8f436428b95671add02f57
Author: Andres Salomon <dilinger@queued.net>
Date:   Thu Nov 6 16:44:08 2008 -0500

    ALSA: cs5535audio: invert EAPD for OLPC (newer than B3)
    
    Fix an audible pop described in <http://dev.laptop.org/ticket/977>.  Originally
    based upon fixes by Mitch Bradley and Chris Ball.
    
    Signed-off-by: Andres Salomon <dilinger@debian.org>

diff --git a/sound/pci/cs5535audio/cs5535audio_olpc.c b/sound/pci/cs5535audio/cs5535audio_olpc.c
index 9073fb353f0e..ff7b68ba6179 100644
--- a/sound/pci/cs5535audio/cs5535audio_olpc.c
+++ b/sound/pci/cs5535audio/cs5535audio_olpc.c
@@ -103,6 +103,17 @@ static struct snd_kcontrol_new snd_cs5535audio_controls __devinitdata =
 	.private_value = 0
 };
 
+void __devinit olpc_prequirks(struct snd_card *card,
+		struct snd_ac97_template *ac97)
+{
+	if (!machine_is_olpc())
+		return;
+
+	/* invert EAPD if on an OLPC B3 or higher */
+	if (olpc_board_at_least(olpc_board_pre(0xb3)))
+		ac97->scaps |= AC97_SCAP_INV_EAPD;
+}
+
 int __devinit olpc_quirks(struct snd_card *card, struct snd_ac97 *ac97)
 {
 	if (!machine_is_olpc())

commit c8974be5465b87414fa542cf9cca1a1ba21b8d60
Author: Jordan Crouse <jordan.crouse@amd.com>
Date:   Thu Nov 6 16:43:53 2008 -0500

    ALSA: cs5535audio: Use OLPC/Geode basic infrastructure
    
    Use basic infrastructure code; geode_gpio* (rather than indexed i/o
    EC access), and do an OLPC machine check in olpc_quirk.
    
    [dilinger@debian.org: don't return failure in olpc_quirks if !OLPC]
    [dilinger@debian.org: drop the <B2 workarounds; those machines are EOL'd]
    
    Signed-off-by: Jordan Crouse <jordan.crouse@amd.com>
    Signed-off-by: Andres Salomon <dilinger@debian.org>

diff --git a/sound/pci/cs5535audio/cs5535audio_olpc.c b/sound/pci/cs5535audio/cs5535audio_olpc.c
index 4b72d8662ec9..9073fb353f0e 100644
--- a/sound/pci/cs5535audio/cs5535audio_olpc.c
+++ b/sound/pci/cs5535audio/cs5535audio_olpc.c
@@ -1,9 +1,10 @@
-#include <linux/olpc.h>
 #include <sound/driver.h>
 #include <sound/core.h>
 #include <sound/info.h>
 #include <sound/control.h>
 #include <sound/ac97_codec.h>
+
+#include <asm/olpc.h>
 #include "cs5535audio.h"
 
 /* OLPC has an additional feature on top of regular AD1888 codec
@@ -81,13 +82,11 @@ static int snd_cs5535audio_ctl_put(struct snd_kcontrol *kcontrol,
 	if (err < 0)
 		snd_printk(KERN_ERR "Error updating AD_TEST2 %d\n", err);
 
+	/* B2 and newer writes directly to a GPIO pin */
 	if (value)
-		err = write_ec_command(0x01); /* activate MIC_AC_OFF */
+		geode_gpio_set(OLPC_GPIO_MIC_AC, GPIO_OUTPUT_VAL);
 	else
-		err = write_ec_command(0x02); /* deactivates MIC_AC_OFF */
-
-	if (err < 0)
-		snd_printk(KERN_ERR "Error talking to EC %d\n", err);
+		geode_gpio_clear(OLPC_GPIO_MIC_AC, GPIO_OUTPUT_VAL);
 
 	cs5535au->ec_analog_input_mode = value;
 
@@ -106,6 +105,9 @@ static struct snd_kcontrol_new snd_cs5535audio_controls __devinitdata =
 
 int __devinit olpc_quirks(struct snd_card *card, struct snd_ac97 *ac97)
 {
+	if (!machine_is_olpc())
+		return 0;
+
 	/* setup callback for mixer control that does analog input mode */
 	return snd_ctl_add(card, snd_ctl_new1(&snd_cs5535audio_controls,
 						ac97->private_data));

commit 57d4bf6d8e965404b82b105ae44ddf137bb7b8e6
Author: Jaya Kumar <jayakumar.lkml@gmail.com>
Date:   Thu Nov 6 16:43:34 2008 -0500

    ALSA: cs5535audio: OLPC analog input support
    
    This is a 2nd cut at adding support for OLPC analog input.
    
    Signed-off-by: Jaya Kumar <jayakumar.lkml@gmail.com>
    Signed-off-by: Andres Salomon <dilinger@debian.org>

diff --git a/sound/pci/cs5535audio/cs5535audio_olpc.c b/sound/pci/cs5535audio/cs5535audio_olpc.c
new file mode 100644
index 000000000000..4b72d8662ec9
--- /dev/null
+++ b/sound/pci/cs5535audio/cs5535audio_olpc.c
@@ -0,0 +1,113 @@
+#include <linux/olpc.h>
+#include <sound/driver.h>
+#include <sound/core.h>
+#include <sound/info.h>
+#include <sound/control.h>
+#include <sound/ac97_codec.h>
+#include "cs5535audio.h"
+
+/* OLPC has an additional feature on top of regular AD1888 codec
+features. This is support for an analog input mode. This is a
+2 step process. First, to turn off the AD1888 codec bias voltage
+and high pass filter. Second, to tell the embedded controller to
+reroute from a capacitive trace to a direct trace using an analog
+switch. The *_ec()s are what talk to that controller */
+
+static int snd_cs5535audio_ctl_info(struct snd_kcontrol *kcontrol,
+					struct snd_ctl_elem_info *uinfo)
+{
+	uinfo->type = SNDRV_CTL_ELEM_TYPE_BOOLEAN;
+	uinfo->count = 1;
+	uinfo->value.integer.min = 0;
+	uinfo->value.integer.max = 1;
+	return 0;
+}
+
+#define AD1888_VREFOUT_EN_BIT (1 << 2)
+#define AD1888_HPF_EN_BIT (1 << 12)
+static int snd_cs5535audio_ctl_get(struct snd_kcontrol *kcontrol,
+					struct snd_ctl_elem_value *ucontrol)
+{
+	struct cs5535audio *cs5535au = snd_kcontrol_chip(kcontrol);
+	u16 reg1, reg2;
+
+	/* if either AD1888 VRef Bias and High Pass Filter are enabled
+	or the EC is not in analog mode then flag as not in analog mode.
+	No EC command to read current analog state so we cache that. */
+	reg1 = snd_ac97_read(cs5535au->ac97, AC97_AD_MISC);
+	reg2 = snd_ac97_read(cs5535au->ac97, AC97_AD_TEST2);
+
+	if ((reg1 & AD1888_VREFOUT_EN_BIT) && (reg2 & AD1888_HPF_EN_BIT) &&
+		cs5535au->ec_analog_input_mode)
+		ucontrol->value.integer.value[0] = 1;
+	else
+		ucontrol->value.integer.value[0] = 0;
+
+	return 0;
+}
+
+static int snd_cs5535audio_ctl_put(struct snd_kcontrol *kcontrol,
+					struct snd_ctl_elem_value *ucontrol)
+{
+	int err;
+	struct cs5535audio *cs5535au = snd_kcontrol_chip(kcontrol);
+	u8 value;
+	struct snd_ac97 *ac97 = cs5535au->ac97;
+
+	/* value is 1 if analog input is desired */
+	value = ucontrol->value.integer.value[0];
+
+	/* use ec mode as flag to determine if any change needed */
+	if (cs5535au->ec_analog_input_mode == value)
+		return 0;
+
+	/* sets High Z on VREF Bias if 1 */
+	if (value)
+		err = snd_ac97_update_bits(ac97, AC97_AD_MISC,
+				AD1888_VREFOUT_EN_BIT, AD1888_VREFOUT_EN_BIT);
+	else
+		err = snd_ac97_update_bits(ac97, AC97_AD_MISC,
+				AD1888_VREFOUT_EN_BIT, 0);
+	if (err < 0)
+		snd_printk(KERN_ERR "Error updating AD_MISC %d\n", err);
+
+	/* turns off High Pass Filter if 1 */
+	if (value)
+		err = snd_ac97_update_bits(ac97, AC97_AD_TEST2,
+				AD1888_HPF_EN_BIT, AD1888_HPF_EN_BIT);
+	else
+		err = snd_ac97_update_bits(ac97, AC97_AD_TEST2,
+				AD1888_HPF_EN_BIT, 0);
+	if (err < 0)
+		snd_printk(KERN_ERR "Error updating AD_TEST2 %d\n", err);
+
+	if (value)
+		err = write_ec_command(0x01); /* activate MIC_AC_OFF */
+	else
+		err = write_ec_command(0x02); /* deactivates MIC_AC_OFF */
+
+	if (err < 0)
+		snd_printk(KERN_ERR "Error talking to EC %d\n", err);
+
+	cs5535au->ec_analog_input_mode = value;
+
+	return 1;
+}
+
+static struct snd_kcontrol_new snd_cs5535audio_controls __devinitdata =
+{
+	.iface = SNDRV_CTL_ELEM_IFACE_MIXER,
+	.name = "Analog Input Switch",
+	.info = snd_cs5535audio_ctl_info,
+	.get = snd_cs5535audio_ctl_get,
+	.put = snd_cs5535audio_ctl_put,
+	.private_value = 0
+};
+
+int __devinit olpc_quirks(struct snd_card *card, struct snd_ac97 *ac97)
+{
+	/* setup callback for mixer control that does analog input mode */
+	return snd_ctl_add(card, snd_ctl_new1(&snd_cs5535audio_controls,
+						ac97->private_data));
+}
+
