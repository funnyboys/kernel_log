commit 09c434b8a0047c69e48499de0107de312901e798
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Sun May 19 13:08:20 2019 +0100

    treewide: Add SPDX license identifier for more missed files
    
    Add SPDX license identifiers to all files which:
    
     - Have no license information of any form
    
     - Have MODULE_LICENCE("GPL*") inside which was used in the initial
       scan/conversion to ignore the file
    
    These files fall under the project license, GPL v2 only. The resulting SPDX
    license identifier is:
    
      GPL-2.0-only
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/lib/test_sort.c b/lib/test_sort.c
index 385c0ed5202f..52edbe10f2e5 100644
--- a/lib/test_sort.c
+++ b/lib/test_sort.c
@@ -1,3 +1,4 @@
+// SPDX-License-Identifier: GPL-2.0-only
 #include <linux/sort.h>
 #include <linux/slab.h>
 #include <linux/module.h>

commit 92fc7cb8ae4d021cf7740e4ad0ced9fa9e07dae0
Author: Pravin Shedge <pravin.shedge4linux@gmail.com>
Date:   Tue Feb 6 15:38:42 2018 -0800

    lib/test_sort.c: add module unload support
    
    test_sort.c performs array-based and linked list sort test.  Code allows
    to compile either as a loadable modules or builtin into the kernel.
    
    Current code is not allow to unload the test_sort.ko module after
    successful completion.
    
    This patch adds support to unload the "test_sort.ko" module by adding
    module_exit support.
    
    Previous patch was implemented auto unload support by returning -EAGAIN
    from module_init() function on successful case, but this approach is not
    ideal.
    
    The auto-unload might seem like a nice optimization, but it encourages
    inconsistent behaviour.  And behaviour that is different from all other
    normal modules.
    
    Link: http://lkml.kernel.org/r/1513967133-6843-1-git-send-email-pravin.shedge4linux@gmail.com
    Signed-off-by: Pravin Shedge <pravin.shedge4linux@gmail.com>
    Cc: Kostenzer Felix <fkostenzer@live.at>
    Cc: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Cc: Geert Uytterhoeven <geert@linux-m68k.org>
    Cc: Paul Gortmaker <paul.gortmaker@windriver.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/lib/test_sort.c b/lib/test_sort.c
index d389c1cc2f6c..385c0ed5202f 100644
--- a/lib/test_sort.c
+++ b/lib/test_sort.c
@@ -39,5 +39,11 @@ static int __init test_sort_init(void)
 	return err;
 }
 
+static void __exit test_sort_exit(void)
+{
+}
+
 module_init(test_sort_init);
+module_exit(test_sort_exit);
+
 MODULE_LICENSE("GPL");

commit ebd03a9aacc7d47a9d5dc7ed63adf594f9a0391c
Author: Geert Uytterhoeven <geert@linux-m68k.org>
Date:   Mon May 8 15:55:20 2017 -0700

    Revert "lib/test_sort.c: make it explicitly non-modular"
    
    Patch series "lib: add module support to sort tests".
    
    This patch series allows to compile the array-based and linked list sort
    test code either to loadable modules, or builtin into the kernel.
    
    It's very valuable to have modular tests, so you can run them just by
    insmodding the test modules, instead of needing a separate kernel that
    runs them at boot.
    
    This patch (of 3):
    
    This reverts commit 8893f519330bb073a49c5b4676fce4be6f1be15d.
    
    It's very valuable to have modular tests, so you can run them just by
    insmodding the test modules, instead of needing a separate kernel that
    runs them at boot.
    
    Link: http://lkml.kernel.org/r/1488287219-15832-2-git-send-email-geert@linux-m68k.org
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Paul Gortmaker <paul.gortmaker@windriver.com>
    Cc: Shuah Khan <shuah@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/lib/test_sort.c b/lib/test_sort.c
index 4db3911db50a..d389c1cc2f6c 100644
--- a/lib/test_sort.c
+++ b/lib/test_sort.c
@@ -1,11 +1,8 @@
 #include <linux/sort.h>
 #include <linux/slab.h>
-#include <linux/init.h>
+#include <linux/module.h>
 
-/*
- * A simple boot-time regression test
- * License: GPL
- */
+/* a simple boot-time regression test */
 
 #define TEST_LEN 1000
 
@@ -41,4 +38,6 @@ static int __init test_sort_init(void)
 	kfree(a);
 	return err;
 }
-subsys_initcall(test_sort_init);
+
+module_init(test_sort_init);
+MODULE_LICENSE("GPL");

commit 8893f519330bb073a49c5b4676fce4be6f1be15d
Author: Paul Gortmaker <paul.gortmaker@windriver.com>
Date:   Fri Feb 24 15:01:09 2017 -0800

    lib/test_sort.c: make it explicitly non-modular
    
    The Kconfig currently controlling compilation of this code is:
    
         lib/Kconfig.debug:config TEST_SORT
         lib/Kconfig.debug:      bool "Array-based sort test"
    
    ...meaning that it currently is not being built as a module by anyone.
    
    Lets remove the couple traces of modular infrastructure use, so that
    when reading the code there is no doubt it is builtin-only.
    
    Since module_init translates to device_initcall in the non-modular case,
    the init ordering becomes slightly earlier when we change it to use
    subsys_initcall as done here.  However, since it is a self contained
    test, this shouldn't be an issue and subsys_initcall seems like a better
    fit for this particular case.
    
    We also delete the MODULE_LICENSE tag since that information is now
    contained at the top of the file in the comments.
    
    Link: http://lkml.kernel.org/r/20170124225608.7319-1-paul.gortmaker@windriver.com
    Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
    Cc: Kostenzer Felix <fkostenzer@live.at>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/lib/test_sort.c b/lib/test_sort.c
index d389c1cc2f6c..4db3911db50a 100644
--- a/lib/test_sort.c
+++ b/lib/test_sort.c
@@ -1,8 +1,11 @@
 #include <linux/sort.h>
 #include <linux/slab.h>
-#include <linux/module.h>
+#include <linux/init.h>
 
-/* a simple boot-time regression test */
+/*
+ * A simple boot-time regression test
+ * License: GPL
+ */
 
 #define TEST_LEN 1000
 
@@ -38,6 +41,4 @@ static int __init test_sort_init(void)
 	kfree(a);
 	return err;
 }
-
-module_init(test_sort_init);
-MODULE_LICENSE("GPL");
+subsys_initcall(test_sort_init);

commit c5adae9583ef6985875532904160c6bf9f07b453
Author: Kostenzer Felix <fkostenzer@live.at>
Date:   Fri Feb 24 15:01:07 2017 -0800

    lib: add CONFIG_TEST_SORT to enable self-test of sort()
    
    Along with the addition made to Kconfig.debug, the prior existing but
    permanently disabled test function has been slightly refactored.
    
    Patch has been tested using QEMU 2.1.2 with a .config obtained through
    'make defconfig' (x86_64) and manually enabling the option.
    
    [arnd@arndb.de: move sort self-test into a separate file]
      Link: http://lkml.kernel.org/r/20170112110657.3123790-1-arnd@arndb.de
    Link: http://lkml.kernel.org/r/HE1PR09MB0394B0418D504DCD27167D4FD49B0@HE1PR09MB0394.eurprd09.prod.outlook.com
    Signed-off-by: Kostenzer Felix <fkostenzer@live.at>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/lib/test_sort.c b/lib/test_sort.c
new file mode 100644
index 000000000000..d389c1cc2f6c
--- /dev/null
+++ b/lib/test_sort.c
@@ -0,0 +1,43 @@
+#include <linux/sort.h>
+#include <linux/slab.h>
+#include <linux/module.h>
+
+/* a simple boot-time regression test */
+
+#define TEST_LEN 1000
+
+static int __init cmpint(const void *a, const void *b)
+{
+	return *(int *)a - *(int *)b;
+}
+
+static int __init test_sort_init(void)
+{
+	int *a, i, r = 1, err = -ENOMEM;
+
+	a = kmalloc_array(TEST_LEN, sizeof(*a), GFP_KERNEL);
+	if (!a)
+		return err;
+
+	for (i = 0; i < TEST_LEN; i++) {
+		r = (r * 725861) % 6599;
+		a[i] = r;
+	}
+
+	sort(a, TEST_LEN, sizeof(*a), cmpint, NULL);
+
+	err = -EINVAL;
+	for (i = 0; i < TEST_LEN-1; i++)
+		if (a[i] > a[i+1]) {
+			pr_err("test has failed\n");
+			goto exit;
+		}
+	err = 0;
+	pr_info("test passed\n");
+exit:
+	kfree(a);
+	return err;
+}
+
+module_init(test_sort_init);
+MODULE_LICENSE("GPL");
