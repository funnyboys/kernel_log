commit 588cb88cedd56cb8272c312aac59b5e204f036a7
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Thu May 23 11:14:57 2019 +0200

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 120
    
    Based on 1 normalized pattern(s):
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license as published by
      the free software foundation either version 2 of the license or at
      your option any later version this program is distributed in the
      hope that it will be useful but without any warranty without even
      the implied warranty of merchantability or fitness for a particular
      purpose see the gnu general public license for more details you
      should have received a copy of the gnu general public license along
      with this program if not see the file copying or write to the free
      software foundation inc
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-or-later
    
    has been chosen to replace the boilerplate/reference in 12 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Richard Fontana <rfontana@redhat.com>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190523091651.231300438@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/lib/ucmpdi2.c b/lib/ucmpdi2.c
index 597998169a96..726e394c9fcc 100644
--- a/lib/ucmpdi2.c
+++ b/lib/ucmpdi2.c
@@ -1,17 +1,5 @@
+// SPDX-License-Identifier: GPL-2.0-or-later
 /*
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, see the file COPYING, or write
- * to the Free Software Foundation, Inc.
  */
 
 #include <linux/module.h>

commit aad5a537aca45efca82ff1eac79bf32e5547b521
Author: Palmer Dabbelt <palmer@sifive.com>
Date:   Wed Apr 11 08:50:16 2018 +0100

    Add notrace to lib/ucmpdi2.c
    
    As part of the MIPS conversion to use the generic GCC library routines,
    Matt Redfearn discovered that I'd missed a notrace on __ucmpdi2().  This
    patch rectifies the problem.
    
    Signed-off-by: Palmer Dabbelt <palmer@sifive.com>
    Reviewed-by: Matt Redfearn <matt.redfearn@mips.com>
    Signed-off-by: Matt Redfearn <matt.redfearn@mips.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Matt Redfearn <matt.redfearn@mips.com>
    Cc: Antony Pavlov <antonynpavlov@gmail.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/19048/
    Signed-off-by: James Hogan <jhogan@kernel.org>

diff --git a/lib/ucmpdi2.c b/lib/ucmpdi2.c
index 25ca2d4c1e19..597998169a96 100644
--- a/lib/ucmpdi2.c
+++ b/lib/ucmpdi2.c
@@ -17,7 +17,7 @@
 #include <linux/module.h>
 #include <linux/libgcc.h>
 
-word_type __ucmpdi2(unsigned long long a, unsigned long long b)
+word_type notrace __ucmpdi2(unsigned long long a, unsigned long long b)
 {
 	const DWunion au = {.ll = a};
 	const DWunion bu = {.ll = b};

commit 4db2b604c05afc3d2678fe01d3136c015df313ec
Author: Christoph Hellwig <hch@lst.de>
Date:   Wed Nov 22 11:47:28 2017 +0100

    move libgcc.h to include/linux
    
    Introducing a new include/lib directory just for this file totally
    messes up tab completion for include/linux, which is highly annoying.
    
    Move it to include/linux where we have headers for all kinds of other
    lib/ code as well.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Palmer Dabbelt <palmer@sifive.com>

diff --git a/lib/ucmpdi2.c b/lib/ucmpdi2.c
index 49a53505c8e3..25ca2d4c1e19 100644
--- a/lib/ucmpdi2.c
+++ b/lib/ucmpdi2.c
@@ -15,7 +15,7 @@
  */
 
 #include <linux/module.h>
-#include <lib/libgcc.h>
+#include <linux/libgcc.h>
 
 word_type __ucmpdi2(unsigned long long a, unsigned long long b)
 {

commit b35cd9884fa5d81c9d5e7f57c9d03264ae2bd835
Author: Palmer Dabbelt <palmer@dabbelt.com>
Date:   Tue May 23 10:28:26 2017 -0700

    lib: Add shared copies of some GCC library routines
    
    Many ports (m32r, microblaze, mips, parisc, score, and sparc) use
    functionally identical copies of various GCC library routine files,
    which came up as we were submitting the RISC-V port (which also uses
    some of these).
    
    This patch adds a new copy of these library routine files, which are
    functionally identical to the various other copies.  These are
    availiable via Kconfig as CONFIG_GENERIC_$ROUTINE, which currently isn't
    used anywhere.
    
    Reviewed-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Palmer Dabbelt <palmer@dabbelt.com>

diff --git a/lib/ucmpdi2.c b/lib/ucmpdi2.c
new file mode 100644
index 000000000000..49a53505c8e3
--- /dev/null
+++ b/lib/ucmpdi2.c
@@ -0,0 +1,35 @@
+/*
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, see the file COPYING, or write
+ * to the Free Software Foundation, Inc.
+ */
+
+#include <linux/module.h>
+#include <lib/libgcc.h>
+
+word_type __ucmpdi2(unsigned long long a, unsigned long long b)
+{
+	const DWunion au = {.ll = a};
+	const DWunion bu = {.ll = b};
+
+	if ((unsigned int) au.s.high < (unsigned int) bu.s.high)
+		return 0;
+	else if ((unsigned int) au.s.high > (unsigned int) bu.s.high)
+		return 2;
+	if ((unsigned int) au.s.low < (unsigned int) bu.s.low)
+		return 0;
+	else if ((unsigned int) au.s.low > (unsigned int) bu.s.low)
+		return 2;
+	return 1;
+}
+EXPORT_SYMBOL(__ucmpdi2);
