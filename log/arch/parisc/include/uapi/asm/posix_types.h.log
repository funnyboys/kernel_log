commit 9a298b445514b3de08252c71833f9273b7727355
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Sep 13 17:59:50 2018 +0200

    parisc64: change __kernel_suseconds_t to match glibc
    
    There are only two 64-bit architecture ports that have a 32-bit
    suseconds_t: sparc64 and parisc64. I've encountered a number of problems
    with this, while trying to get a proper 64-bit time_t working on 32-bit
    architectures. Having a 32-bit suseconds_t combined with a 64-bit time_t
    means that we get extra padding in data structures that may leak kernel
    stack data to user space, and it breaks all code that assumes that
    timespec and timeval have the same layout.
    
    While we can't change sparc64, it seems that glibc on parisc64 has always
    set suseconds_t to 'long', and the current version would give incorrect
    results for gettimeofday() and many other interfaces: timestamps passed
    from user space into the kernel result in tv_usec being always zero
    (the lower bits contain the intended value but are ignored) while data
    passed from the kernel to user space contains either zeroes or random
    data in tv_usec.
    
    Based on that, it seems best to change the user API in the kernel in
    an incompatible way to match what glibc expects.
    
    Note that the distros I could find (gentoo and debian) all just
    have 32-bit user space, which does not suffer from this problem.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Helge Deller <deller@gmx.de>

diff --git a/arch/parisc/include/uapi/asm/posix_types.h b/arch/parisc/include/uapi/asm/posix_types.h
index 2785632c85e7..8dce56f5dcee 100644
--- a/arch/parisc/include/uapi/asm/posix_types.h
+++ b/arch/parisc/include/uapi/asm/posix_types.h
@@ -16,9 +16,6 @@ typedef unsigned short		__kernel_mode_t;
 typedef unsigned short		__kernel_ipc_pid_t;
 #define __kernel_ipc_pid_t __kernel_ipc_pid_t
 
-typedef int			__kernel_suseconds_t;
-#define __kernel_suseconds_t __kernel_suseconds_t
-
 typedef long long		__kernel_off64_t;
 typedef unsigned long long	__kernel_ino64_t;
 

commit 6f52b16c5b29b89d92c0e7236f4655dc8491ad70
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Nov 1 15:08:43 2017 +0100

    License cleanup: add SPDX license identifier to uapi header files with no license
    
    Many user space API headers are missing licensing information, which
    makes it hard for compliance tools to determine the correct license.
    
    By default are files without license information under the default
    license of the kernel, which is GPLV2.  Marking them GPLV2 would exclude
    them from being included in non GPLV2 code, which is obviously not
    intended. The user space API headers fall under the syscall exception
    which is in the kernels COPYING file:
    
       NOTE! This copyright does *not* cover user programs that use kernel
       services by normal system calls - this is merely considered normal use
       of the kernel, and does *not* fall under the heading of "derived work".
    
    otherwise syscall usage would not be possible.
    
    Update the files which contain no license information with an SPDX
    license identifier.  The chosen identifier is 'GPL-2.0 WITH
    Linux-syscall-note' which is the officially assigned identifier for the
    Linux syscall exception.  SPDX license identifiers are a legally binding
    shorthand, which can be used instead of the full boiler plate text.
    
    This patch is based on work done by Thomas Gleixner and Kate Stewart and
    Philippe Ombredanne.  See the previous patch in this series for the
    methodology of how this patch was researched.
    
    Reviewed-by: Kate Stewart <kstewart@linuxfoundation.org>
    Reviewed-by: Philippe Ombredanne <pombredanne@nexb.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/arch/parisc/include/uapi/asm/posix_types.h b/arch/parisc/include/uapi/asm/posix_types.h
index f3b5f70b9a5f..2785632c85e7 100644
--- a/arch/parisc/include/uapi/asm/posix_types.h
+++ b/arch/parisc/include/uapi/asm/posix_types.h
@@ -1,3 +1,4 @@
+/* SPDX-License-Identifier: GPL-2.0 WITH Linux-syscall-note */
 #ifndef __ARCH_PARISC_POSIX_TYPES_H
 #define __ARCH_PARISC_POSIX_TYPES_H
 

commit d0cf62fb63f760e98244d31396b3b58f3a1e326b
Author: Helge Deller <deller@gmx.de>
Date:   Fri Nov 6 23:36:01 2015 +0100

    parisc: Fixes and cleanups in kernel uapi header files
    
    This patch fixes some bugs and partly cleans up the parisc uapi header
    files to what glibc defined:
    - compat_semid64_ds was wrong and did not take the endianess into
      account
    - ipc64_perm exported userspace types which broke building userspace
      packages on debian (e.g. trinity)
    - ipc64_perm needs to use a 32bit mode_t on 64bit kernel
    - msqid64_ds and semid64_ds needs unsigned longs for various struct members
    - shmid64_ds exported size_t instead of __kernel_size_t
    
    And finally add some compile-time checks for the sizes of those structs
    to avoid future breakage.
    
    Runtime-tested with the Linux Test Project (LTP) testsuite.
    
    Cc: <stable@vger.kernel.org> # 3.18+
    Reviewed-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Helge Deller <deller@gmx.de>

diff --git a/arch/parisc/include/uapi/asm/posix_types.h b/arch/parisc/include/uapi/asm/posix_types.h
index b9344256f76b..f3b5f70b9a5f 100644
--- a/arch/parisc/include/uapi/asm/posix_types.h
+++ b/arch/parisc/include/uapi/asm/posix_types.h
@@ -7,8 +7,10 @@
  * assume GCC is being used.
  */
 
+#ifndef __LP64__
 typedef unsigned short		__kernel_mode_t;
 #define __kernel_mode_t __kernel_mode_t
+#endif
 
 typedef unsigned short		__kernel_ipc_pid_t;
 #define __kernel_ipc_pid_t __kernel_ipc_pid_t

commit 70c1674f62026e455c0c821fb7f4baf24d2d1139
Author: David Howells <dhowells@redhat.com>
Date:   Tue Oct 16 21:28:05 2012 +0100

    UAPI: (Scripted) Disintegrate arch/parisc/include/asm
    
    Signed-off-by: David Howells <dhowells@redhat.com>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Michael Kerrisk <mtk.manpages@gmail.com>
    Acked-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Acked-by: Dave Jones <davej@redhat.com>

diff --git a/arch/parisc/include/uapi/asm/posix_types.h b/arch/parisc/include/uapi/asm/posix_types.h
new file mode 100644
index 000000000000..b9344256f76b
--- /dev/null
+++ b/arch/parisc/include/uapi/asm/posix_types.h
@@ -0,0 +1,24 @@
+#ifndef __ARCH_PARISC_POSIX_TYPES_H
+#define __ARCH_PARISC_POSIX_TYPES_H
+
+/*
+ * This file is generally used by user-level software, so you need to
+ * be a little careful about namespace pollution etc.  Also, we cannot
+ * assume GCC is being used.
+ */
+
+typedef unsigned short		__kernel_mode_t;
+#define __kernel_mode_t __kernel_mode_t
+
+typedef unsigned short		__kernel_ipc_pid_t;
+#define __kernel_ipc_pid_t __kernel_ipc_pid_t
+
+typedef int			__kernel_suseconds_t;
+#define __kernel_suseconds_t __kernel_suseconds_t
+
+typedef long long		__kernel_off64_t;
+typedef unsigned long long	__kernel_ino64_t;
+
+#include <asm-generic/posix_types.h>
+
+#endif
