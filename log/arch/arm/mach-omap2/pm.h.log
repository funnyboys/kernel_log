commit d44fa156dcb29dd0215c1fe63e7a7031a106557e
Author: Tony Lindgren <tony@atomide.com>
Date:   Wed Oct 16 07:37:06 2019 -0700

    ARM: OMAP2+: Configure voltage controller for cpcap
    
    We can configure voltage controller for cpcap with the data available in
    Motorola Mapphone Android Linux kernel. Let's add it so we can have droid4
    behave the same way for voltage controller as other omap4 devices and save
    some power when idle.
    
    Note that we're now using high-speed i2c mode, looks like the Motorola
    kernel had a typo using 0x200 instead of 200 for the timings which may
    caused it to not work properly.
    
    Also note that in the long run, this should just become dts data for a
    voltage controller device driver. But let's get things working first to
    make it possible to test further changes easily.
    
    Cc: Merlijn Wajer <merlijn@wizzup.org>
    Cc: Pavel Machek <pavel@ucw.cz>
    Cc: Sebastian Reichel <sre@kernel.org>
    Acked-by: Pavel Machek <pavel@ucw.cz>
    Signed-off-by: Tony Lindgren <tony@atomide.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 8a55b69bca63..2a883a0c1fcd 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -107,6 +107,11 @@ extern u16 pm44xx_errata;
 #define IS_PM44XX_ERRATUM(id)		0
 #endif
 
+#define OMAP4_VP_CONFIG_ERROROFFSET	0x00
+#define OMAP4_VP_VSTEPMIN_VSTEPMIN	0x01
+#define OMAP4_VP_VSTEPMAX_VSTEPMAX	0x04
+#define OMAP4_VP_VLIMITTO_TIMEOUT_US	200
+
 #ifdef CONFIG_POWER_AVS_OMAP
 extern int omap_devinit_smartreflex(void);
 extern void omap_enable_smartreflex_on_init(void);
@@ -134,6 +139,15 @@ static inline int omap4_twl_init(void)
 }
 #endif
 
+#if IS_ENABLED(CONFIG_MFD_CPCAP)
+extern int omap4_cpcap_init(void);
+#else
+static inline int omap4_cpcap_init(void)
+{
+	return -EINVAL;
+}
+#endif
+
 #ifdef CONFIG_PM
 extern void omap_pm_setup_oscillator(u32 tstart, u32 tshut);
 extern void omap_pm_get_oscillator(u32 *tstart, u32 *tshut);

commit d2912cb15bdda8ba4a5dd73396ad62641af2f520
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Tue Jun 4 10:11:33 2019 +0200

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 500
    
    Based on 2 normalized pattern(s):
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license version 2 as
      published by the free software foundation
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license version 2 as
      published by the free software foundation #
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-only
    
    has been chosen to replace the boilerplate/reference in 4122 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Enrico Weigelt <info@metux.net>
    Reviewed-by: Kate Stewart <kstewart@linuxfoundation.org>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190604081206.933168790@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index c73776b82348..8a55b69bca63 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -1,12 +1,9 @@
+/* SPDX-License-Identifier: GPL-2.0-only */
 /*
  * OMAP2/3 Power Management Routines
  *
  * Copyright (C) 2008 Nokia Corporation
  * Jouni Hogander
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License version 2 as
- * published by the Free Software Foundation.
  */
 #ifndef __ARCH_ARM_MACH_OMAP2_PM_H
 #define __ARCH_ARM_MACH_OMAP2_PM_H

commit 41d9d44d725808f27b53f266733e6d17d83020ba
Author: Dave Gerlach <d-gerlach@ti.com>
Date:   Fri Feb 23 09:43:56 2018 -0600

    ARM: OMAP2+: pm33xx-core: Add platform code needed for PM
    
    Most of the PM code needed for am335x and am437x can be moved into a
    module under drivers but some core code must remain in mach-omap2 at the
    moment. This includes some internal clockdomain APIs and low-level ARM
    APIs which are also not exported for use by modules.
    
    Implement a few functions that handle these low-level platform
    operations can be passed to the pm33xx module through the use of
    platform data.
    
    In addition to this, to be able to share data structures between C and
    the sleep33xx and sleep43xx assembly code, we can automatically generate
    all of the C struct member offsets and sizes as macros by processing
    pm-asm-offsets.c into assembly code and then extracting the relevant
    data as is done for the generated platform asm-offsets.h files.
    
    Finally, add amx3_common_pm_init to create a dummy platform_device for
    pm33xx so that our soon to be introduced pm33xx module can probe on
    am335x and am437x platforms to enable basic suspend to mem and standby
    support.
    
    Signed-off-by: Dave Gerlach <d-gerlach@ti.com>
    Acked-by: Santosh Shilimkar <ssantosh@kernel.org>
    Signed-off-by: Tony Lindgren <tony@atomide.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 8e30772cfe32..c73776b82348 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -81,6 +81,9 @@ extern unsigned int omap3_do_wfi_sz;
 /* ... and its pointer from SRAM after copy */
 extern void (*omap3_do_wfi_sram)(void);
 
+extern struct am33xx_pm_sram_addr am33xx_pm_sram;
+extern struct am33xx_pm_sram_addr am43xx_pm_sram;
+
 extern void omap3_save_scratchpad_contents(void);
 
 #define PM_RTA_ERRATUM_i608		(1 << 0)

commit d09220a887f70368afa79e850c95e74890c0a32d
Author: Tony Lindgren <tony@atomide.com>
Date:   Mon Nov 27 08:57:26 2017 -0800

    ARM: OMAP2+: Fix SRAM virt to phys translation for save_secure_ram_context
    
    With the CMA changes from Joonsoo Kim <iamjoonsoo.kim@lge.com>, it
    was noticed that n900 stopped booting. After investigating it turned
    out that n900 save_secure_ram_context does some whacky virtual to
    physical address translation for the SRAM data address.
    
    As we now only have minimal parts of omap3 idle code copied to SRAM,
    running save_secure_ram_context() in SRAM is not needed. It only gets
    called on PM init. And it seems there's no need to ever call this from
    SRAM idle code.
    
    So let's just keep save_secure_ram_context() in DDR, and pass it the
    physical address of the parameters. We can do everything else in
    omap-secure.c like we already do for other secure code.
    
    And since we don't have any documentation, I still have no clue what
    the values for 0, 1 and 1 for the parameters might be. If somebody has
    figured it out, please do send a patch to add some comments.
    
    Debugged-by: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index b668719b9b25..8e30772cfe32 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -81,10 +81,6 @@ extern unsigned int omap3_do_wfi_sz;
 /* ... and its pointer from SRAM after copy */
 extern void (*omap3_do_wfi_sram)(void);
 
-/* save_secure_ram_context function pointer and size, for copy to SRAM */
-extern int save_secure_ram_context(u32 *addr);
-extern unsigned int save_secure_ram_context_sz;
-
 extern void omap3_save_scratchpad_contents(void);
 
 #define PM_RTA_ERRATUM_i608		(1 << 0)

commit 6d785c963a660b0279c43a2b1cd9b1c89ce5514b
Author: Nishanth Menon <nm@ti.com>
Date:   Wed Sep 9 16:18:11 2015 -0500

    ARM: OMAP4+: PM: erratum is used by OMAP5 and DRA7 as well
    
    OMAP5 and DRA7 reuse the same pm44xx_erratum variable so, enable the
    same, else PM features such as Suspend to ram is broken in a SoC only
    build configuration.
    
    Reported-by: Carlos Hernandez <ceh@ti.com>
    Signed-off-by: Nishanth Menon <nm@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 425bfcd67db6..b668719b9b25 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -103,7 +103,8 @@ static inline void enable_omap3630_toggle_l2_on_restore(void) { }
 #define PM_OMAP4_ROM_SMP_BOOT_ERRATUM_GICD	(1 << 0)
 #define PM_OMAP4_CPU_OSWR_DISABLE		(1 << 1)
 
-#if defined(CONFIG_PM) && defined(CONFIG_ARCH_OMAP4)
+#if defined(CONFIG_PM) && (defined(CONFIG_ARCH_OMAP4) ||\
+	   defined(CONFIG_SOC_OMAP5) || defined(CONFIG_SOC_DRA7XX))
 extern u16 pm44xx_errata;
 #define IS_PM44XX_ERRATUM(id)		(pm44xx_errata & (id))
 #else

commit 6099dd37c66931085557363b4716483f97cf92a0
Author: Rajendra Nayak <rnayak@ti.com>
Date:   Mon May 27 15:46:44 2013 +0530

    ARM: OMAP5 / DRA7: Enable CPU RET on suspend
    
    On OMAP5 / DRA7, prevent a CPU powerdomain OFF and resulting MPU OSWR
    and instead attempt a CPU RET and side effect, MPU RET in suspend.
    
    NOTE: the hardware was originally designed to be capable of achieving
    deep power states such as OFF and OSWR, however due to various issues
    and risks, deepest valid state was determined to be CSWR - hence we use
    the errata framework to handle this case.
    
    Signed-off-by: Rajendra Nayak <rnayak@ti.com>
    [nm@ti.com: updates]
    Signed-off-by: Nishanth Menon <nm@ti.com>
    Reviewed-by: Kevin Hilman <khilman@linaro.org>
    Tested-by: Kevin Hilman <khilman@linaro.org>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index e150102d6c06..425bfcd67db6 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -101,6 +101,7 @@ static inline void enable_omap3630_toggle_l2_on_restore(void) { }
 #endif		/* defined(CONFIG_PM) && defined(CONFIG_ARCH_OMAP3) */
 
 #define PM_OMAP4_ROM_SMP_BOOT_ERRATUM_GICD	(1 << 0)
+#define PM_OMAP4_CPU_OSWR_DISABLE		(1 << 1)
 
 #if defined(CONFIG_PM) && defined(CONFIG_ARCH_OMAP4)
 extern u16 pm44xx_errata;

commit 2e4b62dc5e6e2011dbd03ae1a654d990d18d0a14
Author: Dave Gerlach <d-gerlach@ti.com>
Date:   Mon May 12 13:33:21 2014 -0500

    ARM: OMAP2+: Remove suspend_set_ops from common pm late init
    
    In omap2_common_pm_late_init suspend_set_ops was called to set common
    suspend handling functions for all omap platforms. This created two
    problems. First, these suspend ops were being set for all platforms,
    regardless of whether or not suspend support has been integrated so in
    the case of AM33XX, suspend to mem was presented as available but
    failed every time. Second, some platforms will need to define a
    completely separate set of suspend ops, such as AM33XX, due to
    differences from previous omap platforms so there is no need to
    always set the common omap ops.
    
    This patch moves the suspend_set_ops call from omap2_common_pm_late_init
    into a separate function that then gets called in the omap*_pm_init
    functions for each platform.
    
    Signed-off-by: Dave Gerlach <d-gerlach@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index d4d0fce325c7..e150102d6c06 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -34,7 +34,6 @@ extern void *omap3_secure_ram_storage;
 extern void omap3_pm_off_mode_enable(int);
 extern void omap_sram_idle(void);
 extern int omap_pm_clkdms_setup(struct clockdomain *clkdm, void *unused);
-extern int (*omap_pm_suspend)(void);
 
 #if defined(CONFIG_PM_OPP)
 extern int omap3_opp_init(void);
@@ -147,4 +146,11 @@ static inline void omap_pm_get_oscillator(u32 *tstart, u32 *tshut) { *tstart = *
 static inline void omap_pm_setup_sr_i2c_pcb_length(u32 mm) { }
 #endif
 
+#ifdef CONFIG_SUSPEND
+void omap_common_suspend_init(void *pm_suspend);
+#else
+static inline void omap_common_suspend_init(void *pm_suspend)
+{
+}
+#endif /* CONFIG_SUSPEND */
 #endif

commit 07484ca33ef83900f5cfbde075c1a19e5a237aa1
Author: Nishanth Menon <nm@ti.com>
Date:   Wed Mar 12 16:43:20 2014 -0500

    ARM: OMAP4: Fix definition of IS_PM44XX_ERRATUM
    
    Just like IS_PM34XX_ERRATUM, IS_PM44XX_ERRATUM is valid only if
    CONFIG_PM is enabled, else, disabling CONFIG_PM results in build
    failure complaining about the following:
    arch/arm/mach-omap2/built-in.o: In function `omap4_boot_secondary':
    :(.text+0x8a70): undefined reference to `pm44xx_errata'
    
    Fixes: c962184 (ARM: OMAP4: PM: add errata support)
    Reported-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Nishanth Menon <nm@ti.com>
    Acked-by: Santosh Shilimkar <santosh.shilimkar@ti.ocm>
    Acked-by: Kevin Hilman <khilman@linaro.org>
    Signed-off-by: Tony Lindgren <tony@atomide.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 7bdd22afce69..d4d0fce325c7 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -103,7 +103,7 @@ static inline void enable_omap3630_toggle_l2_on_restore(void) { }
 
 #define PM_OMAP4_ROM_SMP_BOOT_ERRATUM_GICD	(1 << 0)
 
-#if defined(CONFIG_ARCH_OMAP4)
+#if defined(CONFIG_PM) && defined(CONFIG_ARCH_OMAP4)
 extern u16 pm44xx_errata;
 #define IS_PM44XX_ERRATUM(id)		(pm44xx_errata & (id))
 #else

commit c4978fba6b2d4e3a584d72c067a371871fecbedc
Author: Paul Walmsley <paul@pwsan.com>
Date:   Tue Jan 29 13:45:09 2013 -0700

    ARM: OMAP2+: PM/powerdomain: move omap_set_pwrdm_state() to powerdomain code
    
    Move omap_set_pwrdm_state() from the PM code to the powerdomain code,
    and refactor it to split it up into several functions.  A subsequent patch
    will rename it to conform with the existing powerdomain function names.
    
    This version includes some additional documentation, based on a
    suggestion from Jean Pihet.  It also modifies omap_set_pwrdm_state()
    to not bail out early unless both the powerdomain current power state
    and the next power state are equal.  (Previously it would terminate
    early if the next power state was equal to the target power state,
    which was insufficiently rigorous.)
    
    Signed-off-by: Paul Walmsley <paul@pwsan.com>
    Cc: Jean Pihet <jean.pihet@newoldbits.com>
    Cc: Kevin Hilman <khilman@deeprootsystems.com>
    Cc: Tero Kristo <t-kristo@ti.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index c22503b17abd..7bdd22afce69 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -33,7 +33,6 @@ static inline int omap4_idle_init(void)
 extern void *omap3_secure_ram_storage;
 extern void omap3_pm_off_mode_enable(int);
 extern void omap_sram_idle(void);
-extern int omap_set_pwrdm_state(struct powerdomain *pwrdm, u32 state);
 extern int omap_pm_clkdms_setup(struct clockdomain *clkdm, void *unused);
 extern int (*omap_pm_suspend)(void);
 

commit a11da7df6543b5f71a150b47c0d08ecf0799a0f3
Merge: b8edf848e911 9c7466b217af
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Dec 13 10:58:20 2012 -0800

    Merge tag 'pm-merge' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc
    
    Pull ARM SoC power management and clock changes from Olof Johansson:
     "This branch contains a largeish set of updates of power management and
      clock setup.  The bulk of it is for OMAP/AM33xx platforms, but also a
      few around hotplug/suspend/resume on Exynos.
    
      It includes a split-up of some of the OMAP clock data into separate
      files which adds to the diffstat, but gross delta is fairly reasonable."
    
    * tag 'pm-merge' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc: (60 commits)
      ARM: OMAP: Move plat-omap/dma-omap.h to include/linux/omap-dma.h
      ASoC: OMAP: mcbsp fixes for enabling ARM multiplatform support
      watchdog: OMAP: fixup for ARM multiplatform support
      ARM: EXYNOS: Add flush_cache_all in suspend finisher
      ARM: EXYNOS: Remove scu_enable from cpuidle
      ARM: EXYNOS: Fix soft reboot hang after suspend/resume
      ARM: EXYNOS: Add support for rtc wakeup
      ARM: EXYNOS: fix the hotplug for Cortex-A15
      ARM: OMAP2+: omap_device: Correct resource handling for DT boot
      ARM: OMAP2+: hwmod: Add possibility to count hwmod resources based on type
      ARM: OMAP2+: hwmod: Add support for per hwmod/module context lost count
      ARM: OMAP2+: PRM: initialize some PRM functions early
      ARM: OMAP2+: voltage: fixup oscillator handling when CONFIG_PM=n
      ARM: OMAP4: USB: power down MUSB PHY during boot
      ARM: OMAP2+: clock: Cleanup !CONFIG_COMMON_CLK parts
      ARM: OMAP2xxx: clock: drop obsolete clock data
      ARM: OMAP2: clock: Cleanup !CONFIG_COMMON_CLK parts
      ARM: OMAP3+: DPLL: drop !CONFIG_COMMON_CLK sections
      ARM: AM33xx: clock: drop obsolete clock data
      ARM: OMAP3xxx: clk: drop obsolete clock data
      ...

commit 74d29168e9af59c9db1885e27493fbed4d24ef18
Author: Kevin Hilman <khilman@ti.com>
Date:   Wed Nov 14 17:13:04 2012 -0800

    ARM: OMAP2+: voltage: fixup oscillator handling when CONFIG_PM=n
    
    commit 908b75e8 (ARM: OMAP: add support for oscillator setup) added a new
    API for oscillator setup, but is broken when CONFIG_PM=n.
    
    The new functions have dummy definitions when CONFIG_PM=n, but also have
    full implementations available, which conflict.
    
    To fix, wrap the PM implmentations in #ifdef CONFIG_PM.
    
    Cc: Tero Kristo <t-kristo@ti.com>
    Signed-off-by: Kevin Hilman <khilman@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 4db7b238a0d5..02c291c8e470 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -135,7 +135,7 @@ extern void omap_pm_get_oscillator(u32 *tstart, u32 *tshut);
 extern void omap_pm_setup_sr_i2c_pcb_length(u32 mm);
 #else
 static inline void omap_pm_setup_oscillator(u32 tstart, u32 tshut) { }
-static inline void omap_pm_get_oscillator(u32 *tstart, u32 *tshut) { }
+static inline void omap_pm_get_oscillator(u32 *tstart, u32 *tshut) { *tstart = *tshut = 0; }
 static inline void omap_pm_setup_sr_i2c_pcb_length(u32 mm) { }
 #endif
 

commit 00bd228ea9f7aad23f7933fa62a13d975d4b213a
Author: Tero Kristo <t-kristo@ti.com>
Date:   Tue Sep 25 19:33:48 2012 +0300

    ARM: OMAP4: VC: setup I2C parameters based on board data
    
    VC code now provides a table of pre-calculated I2C setup parameters,
    which will be used based on the capacitance value calculated for the I2C
    trace on the PCB. A default trace length of 6.3cm is used unless board
    defines its own value during init. The parameters set will be the I2C
    internal pull setup and the I2C timing parameters for high speed use
    mode. Full speed mode is not supported as of now.
    
    Signed-off-by: Tero Kristo <t-kristo@ti.com>
    Signed-off-by: Kevin Hilman <khilman@ti.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 429028852103..4db7b238a0d5 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -132,9 +132,11 @@ static inline int omap4_twl_init(void)
 #ifdef CONFIG_PM
 extern void omap_pm_setup_oscillator(u32 tstart, u32 tshut);
 extern void omap_pm_get_oscillator(u32 *tstart, u32 *tshut);
+extern void omap_pm_setup_sr_i2c_pcb_length(u32 mm);
 #else
 static inline void omap_pm_setup_oscillator(u32 tstart, u32 tshut) { }
 static inline void omap_pm_get_oscillator(u32 *tstart, u32 *tshut) { }
+static inline void omap_pm_setup_sr_i2c_pcb_length(u32 mm) { }
 #endif
 
 #endif

commit 908b75e850c4a6130b680ea7e59b00f80d4cd2d2
Author: Tero Kristo <t-kristo@ti.com>
Date:   Tue Sep 25 19:33:39 2012 +0300

    ARM: OMAP: add support for oscillator setup
    
    This contains startup and shutdown times for the oscillator. By default
    use ULONG_MAX. Oscillator setup is used for calculating and setting up
    latencies for sleep modes that disable oscillator.
    
    Based on a patch from Nishanth Menon <nm@ti.com>.
    
    Signed-off-by: Tero Kristo <t-kristo@ti.com>
    Signed-off-by: Kevin Hilman <khilman@ti.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 67d66131cfa7..429028852103 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -129,4 +129,12 @@ static inline int omap4_twl_init(void)
 }
 #endif
 
+#ifdef CONFIG_PM
+extern void omap_pm_setup_oscillator(u32 tstart, u32 tshut);
+extern void omap_pm_get_oscillator(u32 *tstart, u32 *tshut);
+#else
+static inline void omap_pm_setup_oscillator(u32 tstart, u32 tshut) { }
+static inline void omap_pm_get_oscillator(u32 *tstart, u32 *tshut) { }
+#endif
+
 #endif

commit ff999b8a0983ee15668394ed49e38d3568fc6859
Author: Santosh Shilimkar <santosh.shilimkar@ti.com>
Date:   Thu Oct 18 12:20:05 2012 +0300

    ARM: OMAP4460: Workaround for ROM bug because of CA9 r2pX GIC control register change.
    
    On OMAP4+ devices, GIC register context is lost when MPUSS hits
    the OSWR(Open Switch Retention). On the CPU wakeup path, ROM code
    gets executed and one of the steps in it is to restore the
    saved context of the GIC. The ROM Code GIC distributor restoration
    is split in two parts: CPU specific register done by each CPU and
    common register done by only one CPU.
    
    Below is the abstract flow.
    
    ...............................................................
    - MPUSS in OSWR state.
    - CPU0 wakes up on the event(interrupt) and start executing ROM code.
    
    [..]
    
    - CPU0 executes "GIC Restoration:"
    
    [...]
    
    - CPU0 swicthes to non-secure mode and jumps to OS resume code.
    
    [...]
    
    - CPU0 is online in OS
    - CPU0 enables the GIC distributor. GICD.Enable Non-secure = 1
    - CPU0 wakes up CPU1 with clock-domain force wakeup method.
    - CPU0 continues it's execution.
    [..]
    
    - CPU1 wakes up and start executing ROM code.
    
    [..]
    
    - CPU1 executes "GIC Restoration:"
    
    [..]
    
    - CPU1 swicthes to non-secure mode and jumps to OS resume code.
    
    [...]
    
    - CPU1 is online in OS and start executing.
    [...]   -
    
    GIC Restoration: /* Common routine for HS and GP devices */
    {
           if (GICD != 1)  { /* This will be true in OSWR state */
                   if (GIC_SAR_BACKUP_STATE == SAVED)
                           - CPU restores GIC distributor
                   else
                           - reconfigure GIC distributor to boot values.
    
                   GICD.Enable secure = 1
           }
    
           if (GIC_SAR_BACKUP_STATE == SAVED)
                   - CPU restore its GIC CPU interface registers if saved.
           else
                   - reconfigure its GIC CPU interface registers to boot
                           values.
    }
    ...............................................................
    
    So as mentioned in the flow, GICD != 1 condition decides how
    the GIC registers are handled in ROM code wakeup path from
    OSWR. As evident from the flow, ROM code relies on the entire
    GICD register value and not specific register bits.
    
    The assumption was valid till CortexA9 r1pX version since there
    was only one banked bit to control secure and non-secure GICD.
    Secure view which ROM code sees:
           bit 0 == Enable Non-secure
    Non-secure view which HLOS sees:
           bit 0 == Enable secure
    
    But GICD register has changed between CortexA9 r1pX and r2pX.
    On r2pX GICD register is composed of 2 bits.
    Secure view which ROM code sees:
           bit 1 == Enable Non-secure
           bit 0 == Enable secure
    Non-secure view which HLOS sees:
           bit 0 == Enable Non-secure
    
    Hence on OMAP4460(r2pX) devices, if you go through the
    above flow again during CPU1 wakeup, GICD == 3 and hence
    ROM code fails to understand the real wakeup power state
    and reconfigures GIC distributor to boot values. This is
    nasty since you loose the entire interrupt controller
    context in a live system.
    
    The ROM code fix done on next OMAP4 device (OMAP4470 - r2px) is to
    check "GICD.Enable secure != 1" for GIC restoration in OSWR wakeup path.
    
    Since ROM code can't be fixed on OMAP4460 devices, a work around
    needs to be implemented. As evident from the flow, as long as
    CPU1 sees GICD == 1 in it's wakeup path from OSWR, the issue
    won't happen. Below is the flow with the work-around.
    
    ...............................................................
    - MPUSS in OSWR state.
    - CPU0 wakes up on the event(interrupt) and start executing ROM code.
    
    [..]
    
    - CPU0 executes "GIC Restoration:"
    
    [..]
    
    - CPU0 swicthes to non-secure mode and jumps to OS resume code.
    
    [..]
    
    - CPU0 is online in OS.
    - CPU0 does GICD.Enable Non-secure = 0
    - CPU0 wakes up CPU1 with clock domain force wakeup method.
    - CPU0 waits for GICD.Enable Non-secure = 1
    - CPU0 coninues it's execution.
    [..]
    
    - CPU1 wakes up and start executing ROM code.
    
    [..]
    
    - CPU1 executes "GIC Restoration:"
    
    [..]
    
    - CPU1 swicthes to non-secure mode and jumps to OS resume code.
    
    [..]
    
    - CPU1 is online in OS
    - CPU1 does GICD.Enable Non-secure = 1
    - CPU1 start executing
    [...]
    ...............................................................
    
    With this procedure, the GIC configuration done between the
    CPU0 wakeup and CPU1 wakeup will not be lost but during this
    short windows, the CPU0 will not receive interrupts.
    
    The BUG is applicable to only OMAP4460(r2pX) devices.
    OMAP4470 (also r2pX) is not affected by this bug because
    ROM code has been fixed.
    
    Signed-off-by: Santosh Shilimkar <santosh.shilimkar@ti.com>
    Signed-off-by: Tero Kristo <t-kristo@ti.com>
    Signed-off-by: Kevin Hilman <khilman@ti.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index f76a0d0f839f..fc3c96d5e013 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -102,6 +102,8 @@ extern void enable_omap3630_toggle_l2_on_restore(void);
 static inline void enable_omap3630_toggle_l2_on_restore(void) { }
 #endif		/* defined(CONFIG_PM) && defined(CONFIG_ARCH_OMAP3) */
 
+#define PM_OMAP4_ROM_SMP_BOOT_ERRATUM_GICD	(1 << 0)
+
 #if defined(CONFIG_ARCH_OMAP4)
 extern u16 pm44xx_errata;
 #define IS_PM44XX_ERRATUM(id)		(pm44xx_errata & (id))

commit c962184459ab75502b242efb04291c2cf8700bc3
Author: Tero Kristo <t-kristo@ti.com>
Date:   Thu Oct 18 12:20:04 2012 +0300

    ARM: OMAP4: PM: add errata support
    
    Added similar PM errata flag support as omap3 has. This should be used
    in similar manner, set the flags during init time, and check the flag
    values during runtime.
    
    Signed-off-by: Tero Kristo <t-kristo@ti.com>
    Signed-off-by: Kevin Hilman <khilman@ti.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 67d66131cfa7..f76a0d0f839f 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -102,6 +102,13 @@ extern void enable_omap3630_toggle_l2_on_restore(void);
 static inline void enable_omap3630_toggle_l2_on_restore(void) { }
 #endif		/* defined(CONFIG_PM) && defined(CONFIG_ARCH_OMAP3) */
 
+#if defined(CONFIG_ARCH_OMAP4)
+extern u16 pm44xx_errata;
+#define IS_PM44XX_ERRATUM(id)		(pm44xx_errata & (id))
+#else
+#define IS_PM44XX_ERRATUM(id)		0
+#endif
+
 #ifdef CONFIG_POWER_AVS_OMAP
 extern int omap_devinit_smartreflex(void);
 extern void omap_enable_smartreflex_on_init(void);

commit 856c3c5b28597f70068984d036bcee1d342ddb69
Author: Paul Walmsley <paul@pwsan.com>
Date:   Tue Oct 16 00:08:53 2012 -0600

    ARM: OMAP3: PM: apply part of the erratum i582 workaround
    
    On OMAP34xx/35xx, and OMAP36xx chips with ES < 1.2, if the PER
    powerdomain goes to OSWR or OFF while CORE stays at CSWR or ON, or if,
    upon chip wakeup from OSWR or OFF, the CORE powerdomain goes ON before
    PER, the UART3/4 FIFOs and McBSP2/3 SIDETONE memories will be
    unusable.  This is erratum i582 in the OMAP36xx Silicon Errata
    document.
    
    This patch implements one of several parts of the workaround: the
    addition of the wakeup dependency between the PER and WKUP
    clockdomains, such that PER will wake up at the same time CORE_L3
    does.
    
    This is not a complete workaround.  For it to be complete:
    
    1. the PER powerdomain's next power state must not be set to OSWR or
       OFF if the CORE powerdomain's next power state is set to CSWR or
       ON;
    
    2. the UART3/4 FIFO and McBSP2/3 SIDETONE loopback tests should be run
       if the LASTPOWERSTATEENTERED bits for PER and CORE indicate that
       PER went OFF while CORE stayed on.  If loopback tests fail, then
       those devices will be unusable until PER and CORE can undergo a
       transition from ON to OSWR/OFF and back ON.
    
    Signed-off-by: Paul Walmsley <paul@pwsan.com>
    Cc: Tero Kristo <t-kristo@ti.com>
    Cc: Kevin Hilman <khilman@ti.com>
    Signed-off-by: Kevin Hilman <khilman@ti.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 686137d164da..67d66131cfa7 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -91,6 +91,7 @@ extern void omap3_save_scratchpad_contents(void);
 
 #define PM_RTA_ERRATUM_i608		(1 << 0)
 #define PM_SDRC_WAKEUP_ERRATUM_i583	(1 << 1)
+#define PM_PER_MEMORIES_ERRATUM_i582	(1 << 2)
 
 #if defined(CONFIG_PM) && defined(CONFIG_ARCH_OMAP3)
 extern u16 pm34xx_errata;

commit a5ebba6b54bc8038a38d3eacac3a79bbeaf3ee24
Merge: e81218f5f0fd 6b21a9ce0402
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Jul 23 17:43:53 2012 -0700

    Merge tag 'pm' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc
    
    Pull arm-soc power management changes from Arnd Bergmann:
     "These are various power management related changes, mainly concerning
      cpuidle on i.MX and OMAP, as well as a the move of the omap
      smartreflex driver to live in the power subsystem."
    
    Fix up conflicts in arch/arm/mach-{imx/mach-imx6q.c,omap2/prm2xxx_3xxx.h}
    
    * tag 'pm' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc: (37 commits)
      ARM: OMAP2+: PM: fix IRQ_NOAUTOEN removal by mis-merge
      ARM: OMAP2+: do not allow SmartReflex to be built as a module
      ARM: OMAP2: Use hwmod to initialize mmc for 2420
      ARM: OMAP3: PM: cpuidle: optimize the clkdm idle latency in C1 state
      ARM: OMAP3: PM: cpuidle: optimize the PER latency in C1 state
      ARM: OMAP3: PM: cpuidle: default to C1 in next_valid_state
      ARM: OMAP3: PM: cleanup cam_pwrdm leftovers
      ARM: OMAP3: PM: call pre/post transition per powerdomain
      ARM: OMAP2+: powerdomain: allow pre/post transtion to be per pwrdm
      ARM: OMAP3: PM: Remove IO Daisychain control from cpuidle
      ARM: OMAP3PLUS: hwmod: reconfigure IO Daisychain during hwmod mux
      ARM: OMAP3+: PRM: Enable IO wake up
      ARM: OMAP4: PRM: Add IO Daisychain support
      ARM: OMAP3: PM: Move IO Daisychain function to omap3 prm file
      ARM: OMAP3: PM: correct enable/disable of daisy io chain
      ARM: OMAP2+: PRM: fix compile for OMAP4-only build
      W1: OMAP HDQ1W: use runtime PM
      ARM: OMAP2+: HDQ1W: use omap_device
      W1: OMAP HDQ1W: use 32-bit register accesses
      W1: OMAP HDQ1W: allow driver to be built on all OMAP2+
      ...

commit 164e0cbf608214bddc4d28e2777f49e7b3a0f65c
Author: Daniel Lezcano <daniel.lezcano@linaro.org>
Date:   Thu May 10 12:02:57 2012 +0200

    ARM: OMAP3/4: consolidate cpuidle Makefile
    
    The current Makefile compiles the cpuidle34xx.c and cpuidle44xx.c files
    even if the cpuidle option is not set in the kernel.
    
    This patch fixes this by creating a section in the Makefile where these
    files are compiled only if the CONFIG_CPU_IDLE option is set.
    
    This modification breaks an implicit dependency between CPU_IDLE and PM as
    they belong to the same block in the Makefile. This is fixed in the Kconfig
    by selecting explicitely PM is CPU_IDLE is set.
    
    The linux coding style recommend to use no-op functions in the headers
    when the subsystem is disabled instead of adding big section in C files.
    
    This patch fix this also.
    
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Reviewed-by: Jean Pihet <j-pihet@ti.com>
    Reviewed-by: Rajendra Nayak <rnayak@ti.com>
    Signed-off-by: Kevin Hilman <khilman@ti.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 78564895e914..ab04d3bba2e7 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -15,12 +15,25 @@
 
 #include "powerdomain.h"
 
+#ifdef CONFIG_CPU_IDLE
+extern int __init omap3_idle_init(void);
+extern int __init omap4_idle_init(void);
+#else
+static inline int omap3_idle_init(void)
+{
+	return 0;
+}
+
+static inline int omap4_idle_init(void)
+{
+	return 0;
+}
+#endif
+
 extern void *omap3_secure_ram_storage;
 extern void omap3_pm_off_mode_enable(int);
 extern void omap_sram_idle(void);
 extern int omap_set_pwrdm_state(struct powerdomain *pwrdm, u32 state);
-extern int omap3_idle_init(void);
-extern int omap4_idle_init(void);
 extern int omap_pm_clkdms_setup(struct clockdomain *clkdm, void *unused);
 extern int (*omap_pm_suspend)(void);
 

commit 7fb149ffe357d6ad672cf9325181530b4c478a81
Author: Jean Pihet <j-pihet@ti.com>
Date:   Tue Apr 24 11:38:50 2012 +0530

    ARM: OMAP2+: SmartReflex: add POWER_AVS Kconfig options
    
    Add a Kconfig menu (POWER_AVS) and rename the Kconfig options
    for the OMAP SmartReflex implementation:
            CONFIG_OMAP_SMARTREFLEX renames to CONFIG_POWER_AVS_OMAP
            CONFIG_OMAP_SMARTREFLEX_CLASS3 renames to CONFIG_POWER_AVS_OMAP_CLASS3
    
    This change makes the SmartReflex implementation ready for the move
    to drivers/.
    
    Signed-off-by: Jean Pihet <j-pihet@ti.com>
    Signed-off-by: J Keerthy <j-keerthy@ti.com>
    Reviewed-by: Kevin Hilman <khilman@ti.com>
    Signed-off-by: Kevin Hilman <khilman@ti.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 78564895e914..9fac67d6c985 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -88,7 +88,7 @@ extern void enable_omap3630_toggle_l2_on_restore(void);
 static inline void enable_omap3630_toggle_l2_on_restore(void) { }
 #endif		/* defined(CONFIG_PM) && defined(CONFIG_ARCH_OMAP3) */
 
-#ifdef CONFIG_OMAP_SMARTREFLEX
+#ifdef CONFIG_POWER_AVS_OMAP
 extern int omap_devinit_smartreflex(void);
 extern void omap_enable_smartreflex_on_init(void);
 #else

commit 0c2487f6b44a33c5a5876d5f8c59f5e17fd2ef68
Author: Daniel Lezcano <daniel.lezcano@linaro.org>
Date:   Tue Apr 24 16:05:33 2012 +0200

    ARM: OMAP3: cpuidle - remove cpuidle_params_table
    
    We do not longer need the ''cpuidle_params_table' array as
    we defined the states in the driver and we checked they are
    all valid.
    
    We also remove the structure definition as it is no longer used.
    
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Reviewed-by: Jean Pihet <j-pihet@ti.com>
    Reviewed-by: Santosh Shilimkar <santosh.shilimkar@ti.com>
    Tested-by: Santosh Shilimkar <santosh.shilimkar@ti.com>
    Tested-by: Kevin Hilman <khilman@ti.com>
    Signed-off-by: Kevin Hilman <khilman@ti.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 5646b8010f26..78564895e914 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -38,18 +38,6 @@ static inline int omap4_opp_init(void)
 }
 #endif
 
-/*
- * cpuidle mach specific parameters
- *
- * The board code can override the default C-states definition using
- * omap3_pm_init_cpuidle
- */
-struct cpuidle_params {
-	u32 exit_latency;	/* exit_latency = sleep + wake-up latencies */
-	u32 target_residency;
-	u8 valid;		/* validates the C-state */
-};
-
 extern int omap3_pm_get_suspend_state(struct powerdomain *pwrdm);
 extern int omap3_pm_set_suspend_state(struct powerdomain *pwrdm, int state);
 

commit 231900afba52d6faddfb480cde4132d4edc089bc
Author: Daniel Lezcano <daniel.lezcano@linaro.org>
Date:   Tue Apr 24 16:05:29 2012 +0200

    ARM: OMAP3: cpuidle - remove rx51 cpuidle parameters table
    
    As suggested, this table is an optimized version for rx51 and we
    remove it in order to consolidate the cpuidle code between omap3
    and omap4, we remove this specific data definition which is used
    to override the default omap3 latencies but at the cost of extra
    code and complexity.
    
    In order to not lose the values which probably took time to be
    measured, the table is converted into a comment with an array
    description.
    
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Reviewed-by: Jean Pihet <j-pihet@ti.com>
    Reviewed-by: Santosh Shilimkar <santosh.shilimkar@ti.com>
    Tested-by: Santosh Shilimkar <santosh.shilimkar@ti.com>
    Tested-by: Kevin Hilman <khilman@ti.com>
    Signed-off-by: Kevin Hilman <khilman@ti.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 36fa90b6ece8..5646b8010f26 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -50,15 +50,6 @@ struct cpuidle_params {
 	u8 valid;		/* validates the C-state */
 };
 
-#if defined(CONFIG_PM) && defined(CONFIG_CPU_IDLE)
-extern void omap3_pm_init_cpuidle(struct cpuidle_params *cpuidle_board_params);
-#else
-static
-inline void omap3_pm_init_cpuidle(struct cpuidle_params *cpuidle_board_params)
-{
-}
-#endif
-
 extern int omap3_pm_get_suspend_state(struct powerdomain *pwrdm);
 extern int omap3_pm_set_suspend_state(struct powerdomain *pwrdm, int state);
 

commit 86ca5b6fef2bf1aa77a62f29d844400e4fed8dde
Merge: e65bc8918f75 dd713e97f7e0
Author: Olof Johansson <olof@lixom.net>
Date:   Sat Mar 10 09:10:21 2012 -0800

    Merge branch 'uart' of git://git.kernel.org/pub/scm/linux/kernel/git/tmlind/linux-omap into next/cleanup
    
    * 'uart' of git://git.kernel.org/pub/scm/linux/kernel/git/tmlind/linux-omap:
      ARM: OMAP2+: remove some orphan function declarations.
      ARM: OMAP2+: UART: remove unused fields in omap_uart_state.

commit 1416408d31236dc2a80d269aa23ffa93aa01e833
Author: Paul Walmsley <paul@pwsan.com>
Date:   Thu Feb 2 02:30:50 2012 -0700

    ARM: OMAP2+: PM: share some suspend-related functions across OMAP2, 3, 4
    
    The platform_suspend_ops can be shared across OMAP2, 3, and 4, along
    with all of the functions referenced in that structure.  This patch
    shares them.  It also removes the suspend_state file-scoped variable
    in the OMAP2 and 3 PM code; it does not appear to be actually needed
    by anything.
    
    Signed-off-by: Paul Walmsley <paul@pwsan.com>
    Cc: Santosh Shilimkar <santosh.shilimkar@ti.com>
    Cc: Rajendra Nayak <rnayak@ti.com>
    Reviewed-by: Kevin Hilman <khilman@ti.com>
    [khilman@ti.com: minor rework needed due to rebase/merge with conflicting changes]
    Signed-off-by: Kevin Hilman <khilman@ti.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index eef67f67872e..a0514310d15f 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -23,6 +23,7 @@ extern int omap_set_pwrdm_state(struct powerdomain *pwrdm, u32 state);
 extern int omap3_idle_init(void);
 extern int omap4_idle_init(void);
 extern int omap_pm_clkdms_setup(struct clockdomain *clkdm, void *unused);
+extern int (*omap_pm_suspend)(void);
 
 #if defined(CONFIG_PM_OPP)
 extern int omap3_opp_init(void);

commit 92206fd292da7632c039f6c4054bdaac08b030c0
Author: Paul Walmsley <paul@pwsan.com>
Date:   Thu Feb 2 02:38:50 2012 -0700

    ARM: OMAP2+: PM: share clkdms_setup() across OMAP2, 3, 4
    
    clkdms_setup() is identical across OMAP2, 3, and 4, so share it.
    
    Signed-off-by: Paul Walmsley <paul@pwsan.com>
    Tested-by: Santosh Shilimkar <santosh.shilimkar@ti.com>
    Cc: Rajendra Nayak <rnayak@ti.com>
    Tested-by: Kevin Hilman <khilman@ti.com>
    Signed-off-by: Kevin Hilman <khilman@ti.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index b737b11e4499..eef67f67872e 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -22,6 +22,7 @@ extern int omap3_can_sleep(void);
 extern int omap_set_pwrdm_state(struct powerdomain *pwrdm, u32 state);
 extern int omap3_idle_init(void);
 extern int omap4_idle_init(void);
+extern int omap_pm_clkdms_setup(struct clockdomain *clkdm, void *unused);
 
 #if defined(CONFIG_PM_OPP)
 extern int omap3_opp_init(void);

commit 7cb034f8179dfc2889c1f2341566ee68f648a324
Author: NeilBrown <neilb@suse.de>
Date:   Sun Feb 19 13:29:31 2012 +1100

    ARM: OMAP2+: remove some orphan function declarations.
    
    commit 2fd149645eb (ARM: OMAP2+: UART: Remove omap_uart_can_sleep and
    add pm_qos) removed omap_uart_can_sleep and omap3_can_sleep, but not
    their declarations.  So remove those now.
    
    Signed-off-by: NeilBrown <neilb@suse.de>
    Reviewed-by: Shubhrajyoti D <shubhrajyoti@ti.com>
    [khilman@ti.com: minor changelog edits]
    Signed-off-by: Kevin Hilman <khilman@ti.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index b737b11e4499..6cd954dd189f 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -18,7 +18,6 @@
 extern void *omap3_secure_ram_storage;
 extern void omap3_pm_off_mode_enable(int);
 extern void omap_sram_idle(void);
-extern int omap3_can_sleep(void);
 extern int omap_set_pwrdm_state(struct powerdomain *pwrdm, u32 state);
 extern int omap3_idle_init(void);
 extern int omap4_idle_init(void);

commit 98272660970a71e21ad1992f695f75b780de833c
Author: Santosh Shilimkar <santosh.shilimkar@ti.com>
Date:   Tue Aug 16 17:31:40 2011 +0530

    ARM: OMAP4: PM: Add CPUidle support
    
    Add OMAP4 CPUIDLE support. CPU1 is left with defualt idle and
    the low power state for it is managed via cpu-hotplug.
    
    This patch adds MPUSS low power states in cpuidle.
    
            C1 - CPU0 ON + CPU1 ON + MPU ON
            C2 - CPU0 OFF + CPU1 OFF + MPU CSWR
            C3 - CPU0 OFF + CPU1 OFF + MPU OSWR
    
    OMAP4460 onwards, MPUSS power domain doesn't support OFF state any more
    anymore just like CORE power domain. The deepest state supported is OSWr.
    Ofcourse when MPUSS and CORE PD transitions to OSWR along with device
    off mode, even the memory contemts are lost which is as good as
    the PD off state.
    
    On OMAP4 because of hardware constraints, no low power states are
    targeted when both CPUs are online and in SMP mode. The low power
    states are attempted only when secondary CPU gets offline to OFF
    through hotplug infrastructure.
    
    Thanks to Nicole Chalhoub <n-chalhoub@ti.com> for doing exhaustive
    C-state latency profiling.
    
    Signed-off-by: Rajendra Nayak <rnayak@ti.com>
    Signed-off-by: Santosh Shilimkar <santosh.shilimkar@ti.com>
    Acked-by: Jean Pihet <j-pihet@ti.com>
    Reviewed-by: Kevin Hilman <khilman@ti.com>
    Tested-by: Vishwanath BS <vishwanath.bs@ti.com>
    Signed-off-by: Kevin Hilman <khilman@ti.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 4e166add2f35..b737b11e4499 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -21,6 +21,7 @@ extern void omap_sram_idle(void);
 extern int omap3_can_sleep(void);
 extern int omap_set_pwrdm_state(struct powerdomain *pwrdm, u32 state);
 extern int omap3_idle_init(void);
+extern int omap4_idle_init(void);
 
 #if defined(CONFIG_PM_OPP)
 extern int omap3_opp_init(void);

commit ae4c42e4e4d76d003f8ca551fe1aef93ff9a4b21
Merge: dd58ecba48ed ab2a0e0d1354
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Jul 25 12:38:42 2011 -0700

    Merge branch 'next/cleanup' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/linux-arm-soc
    
    * 'next/cleanup' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/linux-arm-soc: (133 commits)
      ARM: EXYNOS4: Change devname for FIMD clkdev
      ARM: S3C64XX: Cleanup mach/regs-fb.h from mach-s3c64xx
      ARM: S5PV210: Cleanup mach/regs-fb.h from mach-s5pv210
      ARM: S5PC100: Cleanup mach/regs-fb.h from mach-s5pc100
      ARM: S3C24XX: Use generic s3c_set_platdata for devices
      ARM: S3C64XX: Use generic s3c_set_platdata for OneNAND
      ARM: SAMSUNG: Use generic s3c_set_platdata for NAND
      ARM: SAMSUNG: Use generic s3c_set_platdata for USB OHCI
      ARM: SAMSUNG: Use generic s3c_set_platdata for HWMON
      ARM: SAMSUNG: Use generic s3c_set_platdata for FB
      ARM: SAMSUNG: Use generic s3c_set_platdata for TS
      ARM: S3C64XX: Add PWM backlight support on SMDK6410
      ARM: S5P64X0: Add PWM backlight support on SMDK6450
      ARM: S5P64X0: Add PWM backlight support on SMDK6440
      ARM: S5PC100: Add PWM backlight support on SMDKC100
      ARM: S5PV210: Add PWM backlight support on SMDKV210
      ARM: EXYNOS4: Add PWM backlight support on SMDKC210
      ARM: EXYNOS4: Add PWM backlight support on SMDKV310
      ARM: SAMSUNG: Create a common infrastructure for PWM backlight support
      clocksource: convert 32-bit down counting clocksource on S5PV210/S5P64X0
      ...
    
    Fix up trivial conflict in arch/arm/mach-imx/mach-scb9328.c

commit cbe263497def23befb6f475977661bae5d1f82e4
Author: Russell King <rmk+kernel@arm.linux.org.uk>
Date:   Thu Jun 30 08:45:49 2011 +0100

    ARM: pm: omap3: move saving of the auxiliary control registers to C
    
    Move the saving of the auxiliary control registers into C; there's
    no need for this to be in assembly code.  This results in less
    assembly code to deal with in OMAP.
    
    Kevin tested full-chip retention and off on 3430/n900, 3530/Overo and
    3630/Zoom3.
    
    Tested-by: Kevin Hilman <khilman@ti.com>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index a4ec213e30c0..04ee56646126 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -97,7 +97,7 @@ extern void omap24xx_cpu_suspend(u32 dll_ctrl, void __iomem *sdrc_dlla_ctrl,
 extern unsigned int omap24xx_cpu_suspend_sz;
 
 /* 3xxx */
-extern void omap34xx_cpu_suspend(u32 *addr, int save_state);
+extern void omap34xx_cpu_suspend(int save_state);
 
 /* omap3_do_wfi function pointer and size, for copy to SRAM */
 extern void omap3_do_wfi(void);

commit 46e130d298a384b677426e19faec311749ff2677
Author: Jean Pihet <j-pihet@ti.com>
Date:   Wed Jun 29 18:40:23 2011 +0200

    ARM: pm: omap3: run the ASM sleep code from DDR
    
    Most of the ASM sleep code (in arch/arm/mach-omap2/sleep34xx.S)
    is copied to internal SRAM at boot and after wake-up from CORE OFF
    mode.  However only a small part of the code really needs to run from
    internal SRAM.
    
    This fix lets most of the ASM idle code run from the DDR in order to
    minimize the SRAM usage and the overhead in the code copy.
    
    The only pieces of code that are mandatory in SRAM are:
    - the i443 erratum WA,
    - the i581 erratum WA,
    - the security extension code.
    
    SRAM usage:
    - original code:
      . 560 bytes for omap3_sram_configure_core_dpll (used by DVFS),
      . 852 bytes for omap_sram_idle (used by suspend/resume in RETention),
      . 124 bytes for es3_sdrc_fix (used by suspend/resume in OFF mode on ES3.x),
      . 108 bytes for save_secure_ram_context (used on HS parts only).
    
    With this fix the usage for suspend/resume in RETention goes down 288
    bytes, so the gain in SRAM usage for suspend/resume is 564 bytes.
    
    Also fixed the SRAM initialization sequence to avoid an unnecessary
    copy to SRAM at boot time and for readability.
    
    Tested on Beagleboard (ES2.x) in idle with full RET and OFF modes.
    
    Kevin Hilman tested retention and off on 3430/n900, 3530/Overo and
    3630/Zoom3
    
    Signed-off-by: Jean Pihet <j-pihet@ti.com>
    Reviewed-by: Kevin Hilman <khilman@ti.com>
    Tested-by: Kevin Hilman <khilman@ti.com>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 45bcfce77352..a4ec213e30c0 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -88,18 +88,28 @@ extern int pm_dbg_regset_init(int reg_set);
 #define pm_dbg_regset_init(reg_set) do {} while (0);
 #endif /* CONFIG_PM_DEBUG */
 
+/* 24xx */
 extern void omap24xx_idle_loop_suspend(void);
+extern unsigned int omap24xx_idle_loop_suspend_sz;
 
 extern void omap24xx_cpu_suspend(u32 dll_ctrl, void __iomem *sdrc_dlla_ctrl,
 					void __iomem *sdrc_power);
+extern unsigned int omap24xx_cpu_suspend_sz;
+
+/* 3xxx */
 extern void omap34xx_cpu_suspend(u32 *addr, int save_state);
-extern int save_secure_ram_context(u32 *addr);
-extern void omap3_save_scratchpad_contents(void);
 
-extern unsigned int omap24xx_idle_loop_suspend_sz;
+/* omap3_do_wfi function pointer and size, for copy to SRAM */
+extern void omap3_do_wfi(void);
+extern unsigned int omap3_do_wfi_sz;
+/* ... and its pointer from SRAM after copy */
+extern void (*omap3_do_wfi_sram)(void);
+
+/* save_secure_ram_context function pointer and size, for copy to SRAM */
+extern int save_secure_ram_context(u32 *addr);
 extern unsigned int save_secure_ram_context_sz;
-extern unsigned int omap24xx_cpu_suspend_sz;
-extern unsigned int omap34xx_cpu_suspend_sz;
+
+extern void omap3_save_scratchpad_contents(void);
 
 #define PM_RTA_ERRATUM_i608		(1 << 0)
 #define PM_SDRC_WAKEUP_ERRATUM_i583	(1 << 1)

commit 48cb1258e8b0f8c81cfb699b42326c5b2147b3f8
Merge: 332acd9e534e ec3cdb5baedf
Author: Tony Lindgren <tony@atomide.com>
Date:   Wed Jun 29 04:45:16 2011 -0700

    Merge branch 'for_3.1/pm-misc' of git://git.kernel.org/pub/scm/linux/kernel/git/khilman/linux-omap-pm into devel-cleanup
    
    Conflicts:
            arch/arm/mach-omap2/pm-debug.c
            arch/arm/mach-omap2/pm.h

commit 59bec58373bc8324a2ee7d7355fe8499c8f6f602
Author: Kevin Hilman <khilman@ti.com>
Date:   Thu May 26 15:34:39 2011 -0700

    OMAP3: PM debug: remove register dumping
    
    Remove OMAP3-specific register dumping feature from PM debug layer.
    This is removed because:
    
    - it's ugly
    - it's OMAP3-specific, and will obviously not scale to OMAP4+
    - userspace /dev/mem-based tools (like omapconf) can do this much better
    
    Tested-by: Santosh Shilimkar <santosh.shilimkar@ti.com>
    Acked-by: Santosh Shilimkar <santosh.shilimkar@ti.com>
    Acked-by: Jean Pihet <j-pihet@ti.com>
    Signed-off-by: Kevin Hilman <khilman@ti.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index acac27501d4e..ea58f5dd2400 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -74,12 +74,8 @@ extern u32 enable_off_mode;
 
 #if defined(CONFIG_PM_DEBUG) && defined(CONFIG_DEBUG_FS)
 extern void pm_dbg_update_time(struct powerdomain *pwrdm, int prev);
-extern int pm_dbg_regset_save(int reg_set);
-extern int pm_dbg_regset_init(int reg_set);
 #else
 #define pm_dbg_update_time(pwrdm, prev) do {} while (0);
-#define pm_dbg_regset_save(reg_set) do {} while (0);
-#define pm_dbg_regset_init(reg_set) do {} while (0);
 #endif /* CONFIG_PM_DEBUG */
 
 extern void omap24xx_idle_loop_suspend(void);

commit 20d5d5514981f9a68832bffb27a698545ecba77a
Author: Kevin Hilman <khilman@ti.com>
Date:   Thu May 26 14:07:41 2011 -0700

    OMAP2: PM debug: remove register dumping
    
    Tested-by: Santosh Shilimkar <santosh.shilimkar@ti.com>
    Acked-by: Santosh Shilimkar <santosh.shilimkar@ti.com>
    Signed-off-by: Kevin Hilman <khilman@ti.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 674eedcee92c..acac27501d4e 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -65,14 +65,10 @@ extern u32 wakeup_timer_milliseconds;
 extern struct omap_dm_timer *gptimer_wakeup;
 
 #ifdef CONFIG_PM_DEBUG
-extern void omap2_pm_dump(int mode, int resume, unsigned int us);
 extern void omap2_pm_wakeup_on_timer(u32 seconds, u32 milliseconds);
-extern int omap2_pm_debug;
 extern u32 enable_off_mode;
 #else
-#define omap2_pm_dump(mode, resume, us)		do {} while (0);
 #define omap2_pm_wakeup_on_timer(seconds, milliseconds)	do {} while (0);
-#define omap2_pm_debug				0
 #define enable_off_mode 0
 #endif
 

commit 3a7b7bdd24286a9cfce9dda5d2b7324dfc2e3b31
Author: Kevin Hilman <khilman@ti.com>
Date:   Thu May 26 14:48:19 2011 -0700

    OMAP3: PM debug: remove sleep_while_idle feature
    
    Remove the OMAP-specific PM debug 'sleep_while_idle' feature which is
    currently available as an OMAP-specific debugfs entry.
    
    This duplicates existing ARM-generic functionality available as a
    boot-time option using the boot cmdline option 'hohlt'.
    
    If runtime configuration of this is needed, then adding a debugfs
    entry for the ARM-generic hlt/nohlt interface should be added.
    
    Tested-by: Santosh Shilimkar <santosh.shilimkar@ti.com>
    Acked-by: Santosh Shilimkar <santosh.shilimkar@ti.com>
    Acked-by: Jean Pihet <j-pihet@ti.com>
    Signed-off-by: Kevin Hilman <khilman@ti.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 45bcfce77352..674eedcee92c 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -69,13 +69,11 @@ extern void omap2_pm_dump(int mode, int resume, unsigned int us);
 extern void omap2_pm_wakeup_on_timer(u32 seconds, u32 milliseconds);
 extern int omap2_pm_debug;
 extern u32 enable_off_mode;
-extern u32 sleep_while_idle;
 #else
 #define omap2_pm_dump(mode, resume, us)		do {} while (0);
 #define omap2_pm_wakeup_on_timer(seconds, milliseconds)	do {} while (0);
 #define omap2_pm_debug				0
 #define enable_off_mode 0
-#define sleep_while_idle 0
 #endif
 
 #if defined(CONFIG_PM_DEBUG) && defined(CONFIG_DEBUG_FS)

commit 98e182a26bbbf5575457622337684ef61493e864
Author: Tony Lindgren <tony@atomide.com>
Date:   Tue Mar 29 15:54:49 2011 -0700

    omap2+: Remove gptimer_wakeup for now
    
    This removes the support for setting the wake-up timer for debugging.
    
    Later on we can reserve gptimer1 for PM code only and have similar
    functionality.
    
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Reviewed-by: Kevin Hilman <khilman@ti.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 45bcfce77352..c3a367e3d010 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -60,19 +60,13 @@ inline void omap3_pm_init_cpuidle(struct cpuidle_params *cpuidle_board_params)
 extern int omap3_pm_get_suspend_state(struct powerdomain *pwrdm);
 extern int omap3_pm_set_suspend_state(struct powerdomain *pwrdm, int state);
 
-extern u32 wakeup_timer_seconds;
-extern u32 wakeup_timer_milliseconds;
-extern struct omap_dm_timer *gptimer_wakeup;
-
 #ifdef CONFIG_PM_DEBUG
 extern void omap2_pm_dump(int mode, int resume, unsigned int us);
-extern void omap2_pm_wakeup_on_timer(u32 seconds, u32 milliseconds);
 extern int omap2_pm_debug;
 extern u32 enable_off_mode;
 extern u32 sleep_while_idle;
 #else
 #define omap2_pm_dump(mode, resume, us)		do {} while (0);
-#define omap2_pm_wakeup_on_timer(seconds, milliseconds)	do {} while (0);
 #define omap2_pm_debug				0
 #define enable_off_mode 0
 #define sleep_while_idle 0

commit 04908918191f7926ec7af99890fb4ddb3b769c13
Author: Jean Pihet <j-pihet@ti.com>
Date:   Mon May 9 12:02:16 2011 +0200

    OMAP3: cpuidle: change the power domains modes determination logic
    
    The achievable power modes of the power domains in cpuidle
    depends on the system wide 'enable_off_mode' knob in debugfs.
    Upon changing enable_off_mode, do not change the C-states
    'valid' field but instead dynamically restrict the power modes
    when entering idle.
    
    The C-states 'valid' field is just used to enable/disable some
    C-states at init and shall not be changed later on.
    
    Signed-off-by: Jean Pihet <j-pihet@ti.com>
    Signed-off-by: Kevin Hilman <khilman@ti.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 32dbc1311efd..45bcfce77352 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -78,10 +78,6 @@ extern u32 sleep_while_idle;
 #define sleep_while_idle 0
 #endif
 
-#if defined(CONFIG_CPU_IDLE)
-extern void omap3_cpuidle_update_states(u32, u32);
-#endif
-
 #if defined(CONFIG_PM_DEBUG) && defined(CONFIG_DEBUG_FS)
 extern void pm_dbg_update_time(struct powerdomain *pwrdm, int prev);
 extern int pm_dbg_regset_save(int reg_set);

commit 866ba0ef967c693dae952afafcb1582a390a82a0
Author: Jean Pihet <j-pihet@ti.com>
Date:   Mon May 9 12:02:13 2011 +0200

    OMAP3: clean-up mach specific cpuidle data structures
    
    - sleep_latency and wake_latency are not used, replace them by
      exit_latency which is used by cpuidle. exit_latency simply is
      the sum of sleep_latency and wake_latency,
    - replace threshold by target_residency,
    - changed the OMAP3 specific cpuidle code accordingly,
    - changed the OMAP3 board code accordingly.
    
    Signed-off-by: Jean Pihet <j-pihet@ti.com>
    Signed-off-by: Kevin Hilman <khilman@ti.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 797bfd12b643..32dbc1311efd 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -36,11 +36,16 @@ static inline int omap4_opp_init(void)
 }
 #endif
 
+/*
+ * cpuidle mach specific parameters
+ *
+ * The board code can override the default C-states definition using
+ * omap3_pm_init_cpuidle
+ */
 struct cpuidle_params {
-	u8  valid;
-	u32 sleep_latency;
-	u32 wake_latency;
-	u32 threshold;
+	u32 exit_latency;	/* exit_latency = sleep + wake-up latencies */
+	u32 target_residency;
+	u8 valid;		/* validates the C-state */
 };
 
 #if defined(CONFIG_PM) && defined(CONFIG_CPU_IDLE)

commit 0df0914d414a504b975f3cc66ace0c16ef55b7f3
Merge: 689960853341 05f689400ea5
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Mar 17 19:28:15 2011 -0700

    Merge branch 'omap-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tmlind/linux-omap-2.6
    
    * 'omap-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tmlind/linux-omap-2.6: (258 commits)
      omap: zoom: host should not pull up wl1271's irq line
      arm: plat-omap: iommu: fix request_mem_region() error path
      OMAP2+: Common CPU DIE ID reading code reads wrong registers for OMAP4430
      omap4: mux: Remove duplicate mux modes
      omap: iovmm: don't check 'da' to set IOVMF_DA_FIXED flag
      omap: iovmm: disallow mapping NULL address when IOVMF_DA_ANON is set
      omap2+: mux: Fix compile when CONFIG_OMAP_MUX is not selected
      omap4: board-omap4panda: Initialise the serial pads
      omap3: board-3430sdp: Initialise the serial pads
      omap4: board-4430sdp: Initialise the serial pads
      omap2+: mux: Add macro for configuring static with omap_hwmod_mux_init
      omap2+: mux: Remove the use of IDLE flag
      omap2+: Add separate list for dynamic pads to mux
      perf: add OMAP support for the new power events
      OMAP4: Add IVA OPP enteries.
      OMAP4: Update Voltage Rail Values for MPU, IVA and CORE
      OMAP4: Enable 800 MHz and 1 GHz MPU-OPP
      OMAP3+: OPP: Replace voltage values with Macros
      OMAP3: wdtimer: Fix CORE idle transition
      Watchdog: omap_wdt: add fine grain runtime-pm
      ...
    
    Fix up various conflicts in
     - arch/arm/mach-omap2/board-omap3evm.c
     - arch/arm/mach-omap2/clock3xxx_data.c
     - arch/arm/mach-omap2/usb-musb.c
     - arch/arm/plat-omap/include/plat/usb.h
     - drivers/usb/musb/musb_core.h

commit 4071318983ff2dead7fd2caf85498bcd8956d93e
Author: Thara Gopinath <thara@ti.com>
Date:   Tue Feb 15 13:28:58 2011 +0530

    OMAP3: PM: Set/clear T2 bit for Smartreflex on TWL
    
    Voltage control on TWL can be done using VMODE/I2C1/I2C_SR.
    Since almost all platforms use I2C_SR on omap3, omap3_twl_init by
    default expects that OMAP's I2C_SR is plugged in to TWL's I2C
    and calls omap3_twl_set_sr_bit. On platforms where I2C_SR is not connected,
    the board files are expected to call omap3_twl_set_sr_bit(false) to
    ensure that I2C_SR path is not set for voltage control and prevent
    the default behavior of omap3_twl_init.
    
    Signed-off-by: Nishanth Menon <nm@ti.com>
    Signed-off-by: Thara Gopinath <thara@ti.com>
    Signed-off-by: Shweta Gulati <shweta.gulati@ti.com>
    Cc: linux-arm-kernel@lists.infradead.org
    Signed-off-by: Kevin Hilman <khilman@ti.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 1c1b0ab5b978..f4a5f716422b 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -127,6 +127,7 @@ static inline void omap_enable_smartreflex_on_init(void) {}
 #ifdef CONFIG_TWL4030_CORE
 extern int omap3_twl_init(void);
 extern int omap4_twl_init(void);
+extern int omap3_twl_set_sr_bit(bool enable);
 #else
 static inline int omap3_twl_init(void)
 {

commit b6338bdc8305b27688a7feb8689e4ccfd42f0292
Author: Jean Pihet <j-pihet@ti.com>
Date:   Wed Feb 2 16:38:06 2011 +0100

    ARM: 6649/1: omap: use fncpy to copy the PM code functions to SRAM
    
    The new fncpy API is better suited* for copying some
    code to SRAM at runtime. This patch changes the ad-hoc
    code to the more generic fncpy API.
    
    *: 1. fncpy ensures that the thumb mode bit is propagated,
       2. fncpy provides the security of type safety between the
         original function and the sram function pointer.
    
    Tested OK on OMAP3 in low power modes (RET/OFF)
    using omap2plus_defconfig with !CONFIG_THUMB2_KERNEL.
    Compile tested on OMAP1/2 using omap1_defconfig.
    
    Boot tested on OMAP1 & OMAP2
    Tested OK with suspend/resume on OMAP2420/n810
    
    Boots fine on osk5912 and n800
    
    Signed-off-by: Jean Pihet <j-pihet@ti.com>
    Acked-by: Kevin Hilman <khilman@ti.com>
    Acked-by: Tony Lindgren <tony@atomide.com>
    Reviewed-by: Dave Martin <dave.martin@linaro.org>
    Tested-by: Kevin Hilman <khilman@ti.com>
    Tested-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 1c1b0ab5b978..39580e6060e8 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -92,7 +92,7 @@ extern void omap24xx_idle_loop_suspend(void);
 extern void omap24xx_cpu_suspend(u32 dll_ctrl, void __iomem *sdrc_dlla_ctrl,
 					void __iomem *sdrc_power);
 extern void omap34xx_cpu_suspend(u32 *addr, int save_state);
-extern void save_secure_ram_context(u32 *addr);
+extern int save_secure_ram_context(u32 *addr);
 extern void omap3_save_scratchpad_contents(void);
 
 extern unsigned int omap24xx_idle_loop_suspend_sz;

commit 7bc3ed9ae632b9c94d3721d555d3452e24ca8ee3
Author: Thara Gopinath <thara@ti.com>
Date:   Fri Dec 10 23:15:16 2010 +0530

    OMAP4: Register voltage PMIC parameters with the voltage layer
    
    TWL6030 is the power IC used along with OMAP4 in OMAP4 SDPs,
    blaze boards and panda boards. This patch registers the OMAP4
    PMIC specific information with the voltage layer.
    This also involves implementing a different formula for
    voltage to vsel and vsel to voltage calculations from
    TWL4030.
    
    Signed-off-by: Thara Gopinath <thara@ti.com>
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index c975a79691b7..1c1b0ab5b978 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -126,11 +126,16 @@ static inline void omap_enable_smartreflex_on_init(void) {}
 
 #ifdef CONFIG_TWL4030_CORE
 extern int omap3_twl_init(void);
+extern int omap4_twl_init(void);
 #else
 static inline int omap3_twl_init(void)
 {
 	return -EINVAL;
 }
+static inline int omap4_twl_init(void)
+{
+	return -EINVAL;
+}
 #endif
 
 #endif

commit fbc319f67660ede23cc22f3af5df559693f8062e
Author: Thara Gopinath <thara@ti.com>
Date:   Fri Dec 10 22:51:05 2010 +0530

    OMAP3: PM: Register TWL4030 pmic info with the voltage driver.
    
    This patch registers the TWL4030 PMIC specific informtion
    with the voltage driver. Failing this patch the voltage driver
    is unware of the formula to use for vsel to voltage and vice versa
    conversion and lot of other PMIC dependent parameters.
    
    This file is based on the arch/arm/plat-omap opp_twl_tpl.c file
    by Paul Walmsley. The original file is replaced by this file.
    
    Signed-off-by: Thara Gopinath <thara@ti.com>
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index cc9f18b5c61d..c975a79691b7 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -124,4 +124,13 @@ static inline int omap_devinit_smartreflex(void)
 static inline void omap_enable_smartreflex_on_init(void) {}
 #endif
 
+#ifdef CONFIG_TWL4030_CORE
+extern int omap3_twl_init(void);
+#else
+static inline int omap3_twl_init(void)
+{
+	return -EINVAL;
+}
+#endif
+
 #endif

commit 0c0a5d61ed9319e7e666990a7888f3b00868ac20
Author: Thara Gopinath <thara@ti.com>
Date:   Sat May 29 22:02:23 2010 +0530

    OMAP3: PM: Adding smartreflex device file.
    
    This patch adds support for device registration of various
    smartreflex module present in the system. This patch introduces
    the platform data for smartreflex devices which include
    the efused n-target vaules, a parameter to indicate
    whether smartreflex autocompensation needs to be
    enabled on init or not. An API
    omap_enable_smartreflex_on_init is provided for the
    board files to enable smartreflex autocompensation during
    system boot up.
    
    Signed-off-by: Thara Gopinath <thara@ti.com>
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 482df7fc1585..cc9f18b5c61d 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -11,6 +11,8 @@
 #ifndef __ARCH_ARM_MACH_OMAP2_PM_H
 #define __ARCH_ARM_MACH_OMAP2_PM_H
 
+#include <linux/err.h>
+
 #include "powerdomain.h"
 
 extern void *omap3_secure_ram_storage;
@@ -110,4 +112,16 @@ extern void enable_omap3630_toggle_l2_on_restore(void);
 static inline void enable_omap3630_toggle_l2_on_restore(void) { }
 #endif		/* defined(CONFIG_PM) && defined(CONFIG_ARCH_OMAP3) */
 
+#ifdef CONFIG_OMAP_SMARTREFLEX
+extern int omap_devinit_smartreflex(void);
+extern void omap_enable_smartreflex_on_init(void);
+#else
+static inline int omap_devinit_smartreflex(void)
+{
+	return -EINVAL;
+}
+
+static inline void omap_enable_smartreflex_on_init(void) {}
+#endif
+
 #endif

commit 72e06d087204f3bc9acf281717b90ebf0b9731f7
Author: Paul Walmsley <paul@pwsan.com>
Date:   Tue Dec 21 21:05:16 2010 -0700

    OMAP2+: powerdomain: move header file from plat-omap to mach-omap2
    
    The OMAP powerdomain code and data is all OMAP2+-specific.  This seems
    unlikely to change any time soon.  Move plat-omap/include/plat/powerdomain.h
    to mach-omap2/powerdomain.h.  The primary point of doing this is to remove
    the temptation for unrelated upper-layer code to access powerdomain code
    and data directly.
    
    As part of this process, remove the references to powerdomain data
    from the GPIO "driver" and the OMAP PM no-op layer, both in plat-omap.
    Change the DSPBridge code to point to the new location for the
    powerdomain headers.  The DSPBridge code should not be including the
    powerdomain headers; these should be removed.
    
    Signed-off-by: Paul Walmsley <paul@pwsan.com>
    Cc: Kevin Hilman <khilman@deeprootsystems.com>
    Cc: Omar Ramirez Luna <omar.ramirez@ti.com>
    Cc: Felipe Contreras <felipe.contreras@gmail.com>
    Cc: Greg Kroah-Hartman <greg@kroah.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 8b4f45eba1b5..482df7fc1585 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -11,7 +11,7 @@
 #ifndef __ARCH_ARM_MACH_OMAP2_PM_H
 #define __ARCH_ARM_MACH_OMAP2_PM_H
 
-#include <plat/powerdomain.h>
+#include "powerdomain.h"
 
 extern void *omap3_secure_ram_storage;
 extern void omap3_pm_off_mode_enable(int);

commit b9e7683bbca638967a56e5d7fd4035a947109621
Merge: bb3613aa34a8 53da4ce23809
Author: Tony Lindgren <tony@atomide.com>
Date:   Tue Dec 21 17:05:57 2010 -0800

    Merge branch 'pm-opp' of ssh://master.kernel.org/pub/scm/linux/kernel/git/khilman/linux-omap-pm into omap-for-linus

commit d3cdfd2a15d87d040a5f553231b979fbc28b98e7
Author: Jean Pihet <j-pihet@ti.com>
Date:   Sat Dec 18 16:44:41 2010 +0100

    OMAP3: remove unused code from the ASM sleep code
    
    Remove unused code:
    - macros,
    - variables,
    - unused semaphore locking API. This API shall be added back
      when needed,
    - infinite loops for debug.
    
    Tested on N900 and Beagleboard with full RET and OFF modes,
    using cpuidle and suspend.
    
    Signed-off-by: Jean Pihet <j-pihet@ti.com>
    Acked-by: Santosh Shilimkar <santosh.shilimkar@ti.com>
    Reviewed-by: Nishanth Menon <nm@ti.com>
    Tested-by: Nishanth Menon<nm@ti.com>
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index b4e66f9e1945..c04f7b50e26f 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -80,7 +80,6 @@ extern void save_secure_ram_context(u32 *addr);
 extern void omap3_save_scratchpad_contents(void);
 
 extern unsigned int omap24xx_idle_loop_suspend_sz;
-extern unsigned int omap34xx_suspend_sz;
 extern unsigned int save_secure_ram_context_sz;
 extern unsigned int omap24xx_cpu_suspend_sz;
 extern unsigned int omap34xx_cpu_suspend_sz;

commit cc1b6028878646a2419b27e5f590b5e9fe01dc3d
Author: Eduardo Valentin <eduardo.valentin@nokia.com>
Date:   Mon Dec 20 14:05:09 2010 -0600

    OMAP3630: PM: Erratum i583: disable coreoff if < ES1.2
    
    Limitation i583: Self_Refresh Exit issue after OFF mode
    
    Issue:
    When device is waking up from OFF mode, then SDRC state machine sends
    inappropriate sequence violating JEDEC standards.
    
    Impact:
    OMAP3630 < ES1.2 is impacted as follows depending on the platform:
    CS0: for 38.4MHz as internal sysclk, DDR content seen to be stable, while
            for all other sysclk frequencies, varied levels of instability
            seen based on varied parameters.
    CS1: impacted
    
    This patch takes option #3 as recommended by the Silicon erratum:
    Avoid core power domain transitioning to OFF mode. Power consumption
    impact is expected in this case.
    To do this, we route core OFF requests to RET request on the impacted
    revisions of silicon.
    
    Acked-by: Jean Pihet <j-pihet@ti.com>
    
    [nm@ti.com: rebased the code to 2.6.37-rc2- short circuit code changed a bit]
    Signed-off-by: Nishanth Menon <nm@ti.com>
    Signed-off-by: Eduardo Valentin <eduardo.valentin@nokia.com>
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 29663cc01a59..b4e66f9e1945 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -86,6 +86,7 @@ extern unsigned int omap24xx_cpu_suspend_sz;
 extern unsigned int omap34xx_cpu_suspend_sz;
 
 #define PM_RTA_ERRATUM_i608		(1 << 0)
+#define PM_SDRC_WAKEUP_ERRATUM_i583	(1 << 1)
 
 #if defined(CONFIG_PM) && defined(CONFIG_ARCH_OMAP3)
 extern u16 pm34xx_errata;

commit 80723c3fe457a5d29c178da4ac72983f47b37ed7
Author: Nishanth Menon <nm@ti.com>
Date:   Mon Dec 20 14:05:08 2010 -0600

    OMAP3: PM: make omap3_cpuidle_update_states independent of enable_off_mode
    
    Currently omap3_cpuidle_update_states makes whole sale decision
    on which C states to update based on enable_off_mode variable
    Instead, achieve the same functionality by independently providing
    mpu and core deepest states the system is allowed to achieve and
    update the idle states accordingly.
    
    Acked-by: Santosh Shilimkar <santosh.shilimkar@ti.com>
    Acked-by: Jean Pihet <j-pihet@ti.com>
    Signed-off-by: Nishanth Menon <nm@ti.com>
    [khilman: fixed additional user of this API in OMAP CPUidle driver]
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 5e0bee961850..29663cc01a59 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -58,7 +58,7 @@ extern u32 sleep_while_idle;
 #endif
 
 #if defined(CONFIG_CPU_IDLE)
-extern void omap3_cpuidle_update_states(void);
+extern void omap3_cpuidle_update_states(u32, u32);
 #endif
 
 #if defined(CONFIG_PM_DEBUG) && defined(CONFIG_DEBUG_FS)

commit c4236d2e7913d18d058a018f0d19473eb6a11a3c
Author: Peter 'p2' De Schrijver <peter.de-schrijver@nokia.com>
Date:   Mon Dec 20 14:05:07 2010 -0600

    OMAP3630: PM: Disable L2 cache while invalidating L2 cache
    
    While coming out of MPU OSWR/OFF states, L2 controller is reseted.
    The reset behavior is implementation specific as per ARMv7 TRM and
    hence $L2 needs to be invalidated before it's use. Since the
    AUXCTRL register is also reconfigured, disable L2 cache before
    invalidating it and re-enables it afterwards. This is as per
    Cortex-A8 ARM documentation.
    Currently this is identified as being needed on OMAP3630 as the
    disable/enable is done from "public side" while, on OMAP3430, this
    is done in the "secure side".
    
    Cc: Kevin Hilman <khilman@deeprootsystems.com>
    Cc: Tony Lindgren <tony@atomide.com>
    
    Acked-by: Jean Pihet <j-pihet@ti.com>
    Acked-by: Santosh Shilimkar <santosh.shilimkar@ti.com>
    
    [nm@ti.com: ported to 2.6.37-rc2, added hooks to enable the logic only on 3630]
    Signed-off-by: Nishanth Menon <nm@ti.com>
    Signed-off-by: Eduardo Valentin <eduardo.valentin@nokia.com>
    Signed-off-by: Peter 'p2' De Schrijver <peter.de-schrijver@nokia.com>
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 8d9aa3e0f635..5e0bee961850 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -90,8 +90,10 @@ extern unsigned int omap34xx_cpu_suspend_sz;
 #if defined(CONFIG_PM) && defined(CONFIG_ARCH_OMAP3)
 extern u16 pm34xx_errata;
 #define IS_PM34XX_ERRATUM(id)		(pm34xx_errata & (id))
+extern void enable_omap3630_toggle_l2_on_restore(void);
 #else
 #define IS_PM34XX_ERRATUM(id)		0
+static inline void enable_omap3630_toggle_l2_on_restore(void) { }
 #endif		/* defined(CONFIG_PM) && defined(CONFIG_ARCH_OMAP3) */
 
 #endif

commit 458e999eb14a301d4176783c8fcb277f5d009b4e
Author: Nishanth Menon <nm@ti.com>
Date:   Mon Dec 20 14:05:06 2010 -0600

    OMAP3630: PM: Erratum i608: disable RTA
    
    Erratum id: i608
    RTA (Retention Till Access) feature is not supported and leads to device
    stability issues when enabled. This impacts modules with embedded memories
    on OMAP3630
    
    Workaround is to disable RTA on boot and coming out of core off.
    For disabling RTA coming out of off mode, we do this by overriding the
    restore pointer for 3630 as the first point of entry before caches are
    touched and is common for GP and HS devices. To disable earlier than
    this could be possible by modifying the PPA for HS devices, but not for
    GP devices.
    
    Cc: Kevin Hilman <khilman@deeprootsystems.com>
    Cc: Tony Lindgren <tony@atomide.com>
    
    Acked-by: Jean Pihet <j-pihet@ti.com>
    Acked-by: Santosh Shilimkar <santosh.shilimkar@ti.com>
    
    [ambresh@ti.com: co-developer]
    Signed-off-by: Ambresh K <ambresh@ti.com>
    Signed-off-by: Nishanth Menon <nm@ti.com>
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 0348fd717f61..8d9aa3e0f635 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -85,6 +85,8 @@ extern unsigned int save_secure_ram_context_sz;
 extern unsigned int omap24xx_cpu_suspend_sz;
 extern unsigned int omap34xx_cpu_suspend_sz;
 
+#define PM_RTA_ERRATUM_i608		(1 << 0)
+
 #if defined(CONFIG_PM) && defined(CONFIG_ARCH_OMAP3)
 extern u16 pm34xx_errata;
 #define IS_PM34XX_ERRATUM(id)		(pm34xx_errata & (id))

commit 8cdfd83473d9b408b924b5d32777ac3fddd251ff
Author: Nishanth Menon <nm@ti.com>
Date:   Mon Dec 20 14:05:05 2010 -0600

    OMAP3: pm: introduce errata handling
    
    Introduce errata handling for OMAP3. This patch introduces
    errata variable and stub for initialization which will be
    filled up by follow-on patches.
    
    Signed-off-by: Nishanth Menon <nm@ti.com>
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 0d75bfd1fdbe..0348fd717f61 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -85,4 +85,11 @@ extern unsigned int save_secure_ram_context_sz;
 extern unsigned int omap24xx_cpu_suspend_sz;
 extern unsigned int omap34xx_cpu_suspend_sz;
 
+#if defined(CONFIG_PM) && defined(CONFIG_ARCH_OMAP3)
+extern u16 pm34xx_errata;
+#define IS_PM34XX_ERRATUM(id)		(pm34xx_errata & (id))
+#else
+#define IS_PM34XX_ERRATUM(id)		0
+#endif		/* defined(CONFIG_PM) && defined(CONFIG_ARCH_OMAP3) */
+
 #endif

commit f5a6422d4e0e85a9c7f5522d3321254bfdfa7f04
Author: Nishanth Menon <nm@ti.com>
Date:   Thu Dec 9 09:13:47 2010 -0600

    omap4: opp: add OPP table data
    
    This patch adds OPP tables for OMAP4. New file has been added to keep
    the OMAP4 opp tables and the registration of these tables with the
    generic opp framework by OMAP SoC OPP interface.
    
    Based on:
    http://dev.omapzoom.org/?p=santosh/kernel-omap4-base.git;a=blob;f=arch/arm/mach-omap2/opp44xx_data.c;h=252e3d0cb6050a64f390b9311c1c4977d74f762a;hb=refs/heads/omap4_next
    
    Signed-off-by: Thara Gopinath <thara@ti.com>
    Signed-off-by: Nishanth Menon <nm@ti.com>
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 2031f157a6ee..a43e0697b6bc 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -22,11 +22,16 @@ extern int omap3_idle_init(void);
 
 #if defined(CONFIG_PM_OPP)
 extern int omap3_opp_init(void);
+extern int omap4_opp_init(void);
 #else
 static inline int omap3_opp_init(void)
 {
 	return -EINVAL;
 }
+static inline int omap4_opp_init(void)
+{
+	return -EINVAL;
+}
 #endif
 
 struct cpuidle_params {

commit fd1478cd61624479c89e35602925459d74505ff3
Author: Nishanth Menon <nm@ti.com>
Date:   Thu Dec 9 09:13:46 2010 -0600

    omap: opp: add OMAP3 OPP table data and common init
    
    Add OPP data for OMAP34xx and OMAP36xx and initialization functions
    to populate OPP tables based on current SoC.
    introduce an OMAP generic opp initialization routine which OMAP3
    and OMAP4+ SoCs can use to register their OPP definitions.
    
    Cc: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>
    Signed-off-by: Nishanth Menon <nm@ti.com>
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 0d75bfd1fdbe..2031f157a6ee 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -20,6 +20,15 @@ extern int omap3_can_sleep(void);
 extern int omap_set_pwrdm_state(struct powerdomain *pwrdm, u32 state);
 extern int omap3_idle_init(void);
 
+#if defined(CONFIG_PM_OPP)
+extern int omap3_opp_init(void);
+#else
+static inline int omap3_opp_init(void)
+{
+	return -EINVAL;
+}
+#endif
+
 struct cpuidle_params {
 	u8  valid;
 	u32 sleep_latency;

commit ebfa88cfa1f00022c500e35db63b5f6c977c95c0
Author: Loïc Minier <loic.minier@linaro.org>
Date:   Mon Sep 27 23:04:20 2010 +0200

    OMAP: PM: Fix build when CONFIG_PM_DEBUG isn't set
    
    Since 6cdee91257bee23a46dc869ca62469b67cba2c7e the references to
    enable_off_mode and sleep_while_idle can't be resolved when CONFIG_PM_DEBUG
    isn't set:
    arch/arm/mach-omap2/built-in.o: In function `omap_uart_restore_context':
    arch/arm/mach-omap2/serial.c:253: undefined reference to `enable_off_mode'
    arch/arm/mach-omap2/built-in.o: In function `omap3_can_sleep':
    arch/arm/mach-omap2/pm34xx.c:479: undefined reference to `sleep_while_idle'
    
    Simply #define these in pm.h just like omap2_pm_debug.
    
    Signed-off-by: Loïc Minier <loic.minier@linaro.org>
    [khilman: moved down into existing #ifdef section]
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 77770a13cea8..0d75bfd1fdbe 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -13,9 +13,6 @@
 
 #include <plat/powerdomain.h>
 
-extern u32 enable_off_mode;
-extern u32 sleep_while_idle;
-
 extern void *omap3_secure_ram_storage;
 extern void omap3_pm_off_mode_enable(int);
 extern void omap_sram_idle(void);
@@ -50,10 +47,14 @@ extern struct omap_dm_timer *gptimer_wakeup;
 extern void omap2_pm_dump(int mode, int resume, unsigned int us);
 extern void omap2_pm_wakeup_on_timer(u32 seconds, u32 milliseconds);
 extern int omap2_pm_debug;
+extern u32 enable_off_mode;
+extern u32 sleep_while_idle;
 #else
 #define omap2_pm_dump(mode, resume, us)		do {} while (0);
 #define omap2_pm_wakeup_on_timer(seconds, milliseconds)	do {} while (0);
 #define omap2_pm_debug				0
+#define enable_off_mode 0
+#define sleep_while_idle 0
 #endif
 
 #if defined(CONFIG_CPU_IDLE)

commit eb6a2c7550560e6619eadb912ea8384ce27964b8
Author: Santosh Shilimkar <santosh.shilimkar@ti.com>
Date:   Wed Sep 15 01:04:01 2010 +0530

    omap: pm: Move set_pwrdm_state routine to common pm.c
    
    The set_pwrdm_state() is needed on omap4 as well so move
    this routine to common pm.c file so that it's available for omap3/4
    
    Signed-off-by: Rajendra Nayak <rnayak@ti.com>
    Signed-off-by: Santosh Shilimkar <santosh.shilimkar@ti.com>
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 4fd021f31e25..77770a13cea8 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -20,7 +20,7 @@ extern void *omap3_secure_ram_storage;
 extern void omap3_pm_off_mode_enable(int);
 extern void omap_sram_idle(void);
 extern int omap3_can_sleep(void);
-extern int set_pwrdm_state(struct powerdomain *pwrdm, u32 state);
+extern int omap_set_pwrdm_state(struct powerdomain *pwrdm, u32 state);
 extern int omap3_idle_init(void);
 
 struct cpuidle_params {

commit 86b0c1e3c07f7fc3a8197a934d9a04476061bed9
Author: Santosh Shilimkar <santosh.shilimkar@ti.com>
Date:   Wed Sep 15 01:03:59 2010 +0530

    omap: pm-debug: Move common debug code to pm-debug.c
    
    This patch moves omap2_pm_wakeup_on_timer() and pm debug entries
    form pm34xx.c to pm-debug.c and export it, so that it is available
    to other OMAPs
    
    Signed-off-by: Santosh Shilimkar <santosh.shilimkar@ti.com>
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 3de6ece23fc8..4fd021f31e25 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -48,9 +48,11 @@ extern struct omap_dm_timer *gptimer_wakeup;
 
 #ifdef CONFIG_PM_DEBUG
 extern void omap2_pm_dump(int mode, int resume, unsigned int us);
+extern void omap2_pm_wakeup_on_timer(u32 seconds, u32 milliseconds);
 extern int omap2_pm_debug;
 #else
 #define omap2_pm_dump(mode, resume, us)		do {} while (0);
+#define omap2_pm_wakeup_on_timer(seconds, milliseconds)	do {} while (0);
 #define omap2_pm_debug				0
 #endif
 

commit 8e2efde9f1ba2fb918245f9419246e4e59b42a11
Author: Ari Kauppi <Ext-Ari.Kauppi@nokia.com>
Date:   Tue Mar 23 09:04:59 2010 +0200

    OMAP3: PM: Add milliseconds interface to suspend wakeup timer
    
    Millisecond resolution is possible and there are use cases for it
    (automatic testing).
    
    Seconds-based interface is preserved for compatibility.
    
    Signed-off-by: Ari Kauppi <Ext-Ari.Kauppi@nokia.com>
    Reviewed-by: Phil Carmody <ext-phil.2.carmody@nokia.com>
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index bd6466a2b039..3de6ece23fc8 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -43,6 +43,7 @@ extern int omap3_pm_get_suspend_state(struct powerdomain *pwrdm);
 extern int omap3_pm_set_suspend_state(struct powerdomain *pwrdm, int state);
 
 extern u32 wakeup_timer_seconds;
+extern u32 wakeup_timer_milliseconds;
 extern struct omap_dm_timer *gptimer_wakeup;
 
 #ifdef CONFIG_PM_DEBUG

commit 709731bb369b562586ee4c60f3f0393eb94dd9d6
Author: Kalle Jokiniemi <kalle.jokiniemi@digia.com>
Date:   Thu Oct 29 10:30:19 2009 +0200

    OMAP3: cpuidle: Add valid field into C-state parameter passing
    
    Different boards benefit differently from the available
    seven C-states for cpu idle. In most cases, only few,
    properly spaced (in terms of consumption and latency)
    C-states are required to make the power management
    optimal. Hence we need a possibility to pass which
    C-states are actually used for each board.
    
    So added the valid field to cpuidle_params and added
    support to 3430sdp, which uses the paramenter passing.
    
    Signed-off-by: Kalle Jokiniemi <kalle.jokiniemi@digia.com>
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 58a2671e6147..bd6466a2b039 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -24,6 +24,7 @@ extern int set_pwrdm_state(struct powerdomain *pwrdm, u32 state);
 extern int omap3_idle_init(void);
 
 struct cpuidle_params {
+	u8  valid;
 	u32 sleep_latency;
 	u32 wake_latency;
 	u32 threshold;

commit bb4de3df69e2993d642e38e17a3eccfe37845acc
Author: Kevin Hilman <khilman@deeprootsystems.com>
Date:   Tue Dec 15 16:37:18 2009 -0800

    OMAP3: cpuidle: configure latencies/thresholds from board file
    
    The CPUidle C state latencies and thresholds are dependent on various
    board specific details.  This patch makes it possible to configure
    these values from the respective board files.
    
    omap3_pm_init_cpuidle() can now be optionally called from board files
    to pass board specific cpuidle parameters.  If the board files do not
    use this function to pass the params default values are used which
    might cause higher consumption dur to wrong state selection by the
    governor.
    
    This patch only updates the 3430sdp board files to use
    omap3_pm_init_cpuidle().
    
    From Kalle, in addition to original patch from Rajendra:
    
    Building without CONFIG_CPU_IDLE or CONFIG_PM causes build to fail if
    cpu idle parameters are tried to pass using omap3_pm_init_cpuidle
    function.
    
    Signed-off-by: Rajendra Nayak <rnayak@ti.com>
    Signed-off-by: Kalle Jokiniemi <kalle.jokiniemi@digia.com>
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 09c0144e90d1..58a2671e6147 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -23,6 +23,21 @@ extern int omap3_can_sleep(void);
 extern int set_pwrdm_state(struct powerdomain *pwrdm, u32 state);
 extern int omap3_idle_init(void);
 
+struct cpuidle_params {
+	u32 sleep_latency;
+	u32 wake_latency;
+	u32 threshold;
+};
+
+#if defined(CONFIG_PM) && defined(CONFIG_CPU_IDLE)
+extern void omap3_pm_init_cpuidle(struct cpuidle_params *cpuidle_board_params);
+#else
+static
+inline void omap3_pm_init_cpuidle(struct cpuidle_params *cpuidle_board_params)
+{
+}
+#endif
+
 extern int omap3_pm_get_suspend_state(struct powerdomain *pwrdm);
 extern int omap3_pm_set_suspend_state(struct powerdomain *pwrdm, int state);
 

commit 6af83b38613da58a221e56af676097575ce2c763
Author: Sanjeev Premi <premi@ti.com>
Date:   Thu Jan 28 23:16:43 2010 +0530

    OMAP3: cpuidle: Update statistics for correct state
    
    When 'enable_off_mode' is 0, the target power state for MPU
    and CORE was locally changed to PWRDM_POWER_RET but, the
    statistics are updated for idle state originally selected
    by the governor.
    
    This patch 'invalidates' the idle states that lead either of
    MPU or Core to PWRDM_POWER_OFF state when 'enable_off_mode'
    is '0'. The states are valid once 'enable_off_mode' is set
    to '1'.
    
    Added function next_valid_state() to check if current state
    is valid; else get the next valid state. It is called from
    omap3_enter_idle_bm().
    
    Signed-off-by: Sanjeev Premi <premi@ti.com>
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 7a9c2d004511..09c0144e90d1 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -37,6 +37,10 @@ extern int omap2_pm_debug;
 #define omap2_pm_debug				0
 #endif
 
+#if defined(CONFIG_CPU_IDLE)
+extern void omap3_cpuidle_update_states(void);
+#endif
+
 #if defined(CONFIG_PM_DEBUG) && defined(CONFIG_DEBUG_FS)
 extern void pm_dbg_update_time(struct powerdomain *pwrdm, int prev);
 extern int pm_dbg_regset_save(int reg_set);

commit ae559d8769531ab8895d241107a10fbe320b3b7f
Author: Manjunatha GK <manjugk@ti.com>
Date:   Mon Nov 16 20:16:52 2009 +0530

    OMAP3: PM debug: fix build error when !CONFIG_DEBUG_FS
    
    The PM debug code fails to build on when CONFIG_DEBUG_FS is not
    enabled.
    
    Build error log:
    arch/arm/mach-omap2/built-in.o: In function `omap_sram_idle':
    arch/arm/mach-omap2/pm34xx.c:449: undefined reference to `pm_dbg_regset_save'
    arch/arm/mach-omap2/pm34xx.c:460: undefined reference to `pm_dbg_regset_save'
    arch/arm/mach-omap2/built-in.o: In function `configure_vc':
    arch/arm/mach-omap2/pm34xx.c:1237: undefined reference to `pm_dbg_regset_init'
    arch/arm/mach-omap2/pm34xx.c:1238: undefined reference to `pm_dbg_regset_init'
    make: *** [.tmp_vmlinux1] Error 1
    
    This patch fixes the above errors.
    
    Kernel booting is tested on omap zoom2 and zoom3 boards.
    
    Signed-off-by: Manjunatha GK <manjugk@ti.com>
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 0bf345db7147..7a9c2d004511 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -32,12 +32,16 @@ extern struct omap_dm_timer *gptimer_wakeup;
 #ifdef CONFIG_PM_DEBUG
 extern void omap2_pm_dump(int mode, int resume, unsigned int us);
 extern int omap2_pm_debug;
+#else
+#define omap2_pm_dump(mode, resume, us)		do {} while (0);
+#define omap2_pm_debug				0
+#endif
+
+#if defined(CONFIG_PM_DEBUG) && defined(CONFIG_DEBUG_FS)
 extern void pm_dbg_update_time(struct powerdomain *pwrdm, int prev);
 extern int pm_dbg_regset_save(int reg_set);
 extern int pm_dbg_regset_init(int reg_set);
 #else
-#define omap2_pm_dump(mode, resume, us)		do {} while (0);
-#define omap2_pm_debug				0
 #define pm_dbg_update_time(pwrdm, prev) do {} while (0);
 #define pm_dbg_regset_save(reg_set) do {} while (0);
 #define pm_dbg_regset_init(reg_set) do {} while (0);

commit 0343371e22dcfec9291193ad3e771dbce3a93670
Author: Kalle Jokiniemi <ext-kalle.jokiniemi@nokia.com>
Date:   Fri Sep 26 11:04:20 2008 +0300

    OMAP3: PM: CPUidle: fix init sequencing
    
    Previously omap3_idle_init() was called in device_init, while
    omap_pm_init() is called at late_initcall. This causes the cpu idle
    driver to call omap_sram_idle before it is properly initialized. This
    patch fixes the issue by moving omap3_idle_init into omap3_pm_init.
    
    Signed-off-by: Kalle Jokiniemi <ext-kalle.jokiniemi@nokia.com>
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 379e35034ccc..0bf345db7147 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -21,6 +21,7 @@ extern void omap3_pm_off_mode_enable(int);
 extern void omap_sram_idle(void);
 extern int omap3_can_sleep(void);
 extern int set_pwrdm_state(struct powerdomain *pwrdm, u32 state);
+extern int omap3_idle_init(void);
 
 extern int omap3_pm_get_suspend_state(struct powerdomain *pwrdm);
 extern int omap3_pm_set_suspend_state(struct powerdomain *pwrdm, int state);

commit 20b01669885483ba2102d5a71c662bb6ae1bed0b
Author: Rajendra Nayak <rnayak@ti.com>
Date:   Wed Oct 8 17:31:22 2008 +0530

    OMAP3: PM: CPUidle: support retention and off-mode C-states
    
    This patch adds support and enables state C4(MPU RET + CORE RET)
    and MPU OFF states (C3 and C5.)
    
    Signed-off-by: Rajendra Nayak <rnayak@ti.com>
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 2edf1ba12dca..379e35034ccc 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -19,6 +19,8 @@ extern u32 sleep_while_idle;
 extern void *omap3_secure_ram_storage;
 extern void omap3_pm_off_mode_enable(int);
 extern void omap_sram_idle(void);
+extern int omap3_can_sleep(void);
+extern int set_pwrdm_state(struct powerdomain *pwrdm, u32 state);
 
 extern int omap3_pm_get_suspend_state(struct powerdomain *pwrdm);
 extern int omap3_pm_set_suspend_state(struct powerdomain *pwrdm, int state);

commit 99e6a4d22f7c7bda0cd8978333c2e85fba02f181
Author: Rajendra Nayak <rnayak@ti.com>
Date:   Wed Oct 8 17:30:58 2008 +0530

    OMAP3: PM: CPUidle: base driver and support for C1-C2
    
    Basic CPUidle driver for OMAP3 with deepest sleep state supported
    being MPU CSWR.
    
    Signed-off-by: Rajendra Nayak <rnayak@ti.com>
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 7eb769f4ef30..2edf1ba12dca 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -18,6 +18,7 @@ extern u32 sleep_while_idle;
 
 extern void *omap3_secure_ram_storage;
 extern void omap3_pm_off_mode_enable(int);
+extern void omap_sram_idle(void);
 
 extern int omap3_pm_get_suspend_state(struct powerdomain *pwrdm);
 extern int omap3_pm_set_suspend_state(struct powerdomain *pwrdm, int state);

commit d7814e4df6e9c54680a30de3f439c66a2a55ce94
Author: Kevin Hilman <khilman@deeprootsystems.com>
Date:   Tue Oct 6 14:30:23 2009 -0700

    PM debug: allow configurable wakeup from suspend on OMAP GPtimer
    
    Using debugfs, export a configurable wakeup timer to be used to
    wakeup system from suspend.
    
    If a non-zero value is written to
    /debug/pm_debug/wakeup_timer_seconds, A timer wakeup event will wake
    the system and resume after the configured number of seconds.
    
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 9582793ce82d..7eb769f4ef30 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -22,6 +22,9 @@ extern void omap3_pm_off_mode_enable(int);
 extern int omap3_pm_get_suspend_state(struct powerdomain *pwrdm);
 extern int omap3_pm_set_suspend_state(struct powerdomain *pwrdm, int state);
 
+extern u32 wakeup_timer_seconds;
+extern struct omap_dm_timer *gptimer_wakeup;
+
 #ifdef CONFIG_PM_DEBUG
 extern void omap2_pm_dump(int mode, int resume, unsigned int us);
 extern int omap2_pm_debug;

commit c40552bc82166adb21a1a7fcb1dc4e76352b1b79
Author: Kevin Hilman <khilman@deeprootsystems.com>
Date:   Tue Oct 6 14:25:09 2009 -0700

    OMAP3: PM debug: allow runtime toggle of PM features
    
    Allow enable/disable of low-power states during idle.  To
    enable low-power idle:
    
       echo 1 > /debug/pm_debug/sleep_while_idle
    
     to disable:
    
       echo 0 > /debug/pm_debug/sleep_while_idle
    
    Also allow enable/disable of OFF-mode.  To enable:
    
       echo 1 > /debug/pm_debug/enable_off_mode
    
     to disable:
    
       echo 0 > /debug/pm_debug/enable_off_mode
    
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 45cafac716d1..9582793ce82d 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -13,7 +13,11 @@
 
 #include <plat/powerdomain.h>
 
+extern u32 enable_off_mode;
+extern u32 sleep_while_idle;
+
 extern void *omap3_secure_ram_storage;
+extern void omap3_pm_off_mode_enable(int);
 
 extern int omap3_pm_get_suspend_state(struct powerdomain *pwrdm);
 extern int omap3_pm_set_suspend_state(struct powerdomain *pwrdm, int state);

commit 27d59a4a2def42307349079f2e3538d96934c379
Author: Tero Kristo <tero.kristo@nokia.com>
Date:   Mon Oct 13 13:15:00 2008 +0300

    OMAP3 PM: off-mode support for HS/EMU devices
    
    For HS/EMU devices, some additional resources need to be
    saved/restored for off-mode support.  Namely, saving the secure RAM
    and a pointer to it in the scratchpad.
    
    Signed-off-by: Tero Kristo <tero.kristo@nokia.com>
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 85b6face5392..45cafac716d1 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -13,6 +13,8 @@
 
 #include <plat/powerdomain.h>
 
+extern void *omap3_secure_ram_storage;
+
 extern int omap3_pm_get_suspend_state(struct powerdomain *pwrdm);
 extern int omap3_pm_set_suspend_state(struct powerdomain *pwrdm, int state);
 
@@ -36,6 +38,7 @@ extern void omap24xx_cpu_suspend(u32 dll_ctrl, void __iomem *sdrc_dlla_ctrl,
 					void __iomem *sdrc_power);
 extern void omap34xx_cpu_suspend(u32 *addr, int save_state);
 extern void save_secure_ram_context(u32 *addr);
+extern void omap3_save_scratchpad_contents(void);
 
 extern unsigned int omap24xx_idle_loop_suspend_sz;
 extern unsigned int omap34xx_suspend_sz;

commit ce491cf85466c3377228c5a852ea627ec5136956
Author: Tony Lindgren <tony@atomide.com>
Date:   Tue Oct 20 09:40:47 2009 -0700

    omap: headers: Move remaining headers from include/mach to include/plat
    
    Move the remaining headers under plat-omap/include/mach
    to plat-omap/include/plat. Also search and replace the
    files using these headers to include using the right path.
    
    This was done with:
    
    #!/bin/bash
    mach_dir_old="arch/arm/plat-omap/include/mach"
    plat_dir_new="arch/arm/plat-omap/include/plat"
    headers=$(cd $mach_dir_old && ls *.h)
    omap_dirs="arch/arm/*omap*/ \
    drivers/video/omap \
    sound/soc/omap"
    other_files="drivers/leds/leds-ams-delta.c \
    drivers/mfd/menelaus.c \
    drivers/mfd/twl4030-core.c \
    drivers/mtd/nand/ams-delta.c"
    
    for header in $headers; do
            old="#include <mach\/$header"
            new="#include <plat\/$header"
            for dir in $omap_dirs; do
                    find $dir -type f -name \*.[chS] | \
                            xargs sed -i "s/$old/$new/"
            done
            find drivers/ -type f -name \*omap*.[chS] | \
                    xargs sed -i "s/$old/$new/"
            for file in $other_files; do
                    sed -i "s/$old/$new/" $file
            done
    done
    
    for header in $(ls $mach_dir_old/*.h); do
            git mv $header $plat_dir_new/
    done
    
    Signed-off-by: Tony Lindgren <tony@atomide.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 8400f5768923..85b6face5392 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -11,7 +11,7 @@
 #ifndef __ARCH_ARM_MACH_OMAP2_PM_H
 #define __ARCH_ARM_MACH_OMAP2_PM_H
 
-#include <mach/powerdomain.h>
+#include <plat/powerdomain.h>
 
 extern int omap3_pm_get_suspend_state(struct powerdomain *pwrdm);
 extern int omap3_pm_set_suspend_state(struct powerdomain *pwrdm, int state);

commit 68d4778c701b7e22ddfd64e3afb6628c92718ad2
Author: Tero Kristo <tero.kristo@nokia.com>
Date:   Wed Nov 26 12:26:24 2008 +0200

    OMAP: PM: Added suspend target state control to debugfs for OMAP3
    
    Target state can be read / programmed via files under:
      [debugfs]/pm_debug/[pwrdm]/suspend
    
    Signed-off-by: Tero Kristo <tero.kristo@nokia.com>
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 8fa856770188..8400f5768923 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -13,6 +13,9 @@
 
 #include <mach/powerdomain.h>
 
+extern int omap3_pm_get_suspend_state(struct powerdomain *pwrdm);
+extern int omap3_pm_set_suspend_state(struct powerdomain *pwrdm, int state);
+
 #ifdef CONFIG_PM_DEBUG
 extern void omap2_pm_dump(int mode, int resume, unsigned int us);
 extern int omap2_pm_debug;

commit 2811d6b3237c9b77007a6b2b10ee5b576da0574e
Author: Tero Kristo <tero.kristo@nokia.com>
Date:   Wed Oct 29 13:31:24 2008 +0200

    OMAP: PM debug: Add PRCM register dump support
    
    Allows dumping out current register contents from the debug filesystem, and
    also allows user to add arbitrary register save points into code. Current
    register contents are available under debugfs at:
    
    [debugfs]/pm_debug/registers/current
    
    To add a save point, do following:
    
    From module init (or somewhere before the save call, called only once):
      pm_dbg_init_regset(n); // n=1..4, allocates memory for dump area #n
    
    From arbitrary code location:
      pm_dbg_regset_save(n); // n=1..4, saves registers to dump area #n
    
    After this, the register dump can be seen under [debugfs]/pm_debug/registers/n
    
    Signed-off-by: Tero Kristo <tero.kristo@nokia.com>
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 4589db1c8af8..8fa856770188 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -17,10 +17,14 @@
 extern void omap2_pm_dump(int mode, int resume, unsigned int us);
 extern int omap2_pm_debug;
 extern void pm_dbg_update_time(struct powerdomain *pwrdm, int prev);
+extern int pm_dbg_regset_save(int reg_set);
+extern int pm_dbg_regset_init(int reg_set);
 #else
 #define omap2_pm_dump(mode, resume, us)		do {} while (0);
 #define omap2_pm_debug				0
 #define pm_dbg_update_time(pwrdm, prev) do {} while (0);
+#define pm_dbg_regset_save(reg_set) do {} while (0);
+#define pm_dbg_regset_init(reg_set) do {} while (0);
 #endif /* CONFIG_PM_DEBUG */
 
 extern void omap24xx_idle_loop_suspend(void);

commit 331b93f41dff21c8f95709032cb184fb82bf2003
Author: Peter 'p2' De Schrijver <peter.de-schrijver@nokia.com>
Date:   Wed Oct 15 18:13:48 2008 +0300

    OMAP: PM: Add pm-debug counters
    
    This patch provides the debugfs entries and a function which will be
    called by the PM code to register the time spent per domain per
    state. Also some new fields are added to the powerdomain struct to
    keep the time information.
    
    NOTE: As of v2.6.29, using getnstimeofday() after drivers are
    suspended is no longer safe since the timekeeping subsystem is also
    suspended as part of the suspend process.  Instead use sched_clock()
    which on OMAP returns the 32k SYNC timer in nanoseconds.
    
    Also, do not print out status for meta powerdomains (dpll*)
    
    Signed-off-by: Peter 'p2' De Schrijver <peter.de-schrijver@nokia.com>
    Signed-off-by: Tero Kristo <tero.kristo@nokia.com>
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index 21201cd4117b..4589db1c8af8 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -11,12 +11,16 @@
 #ifndef __ARCH_ARM_MACH_OMAP2_PM_H
 #define __ARCH_ARM_MACH_OMAP2_PM_H
 
+#include <mach/powerdomain.h>
+
 #ifdef CONFIG_PM_DEBUG
 extern void omap2_pm_dump(int mode, int resume, unsigned int us);
 extern int omap2_pm_debug;
+extern void pm_dbg_update_time(struct powerdomain *pwrdm, int prev);
 #else
 #define omap2_pm_dump(mode, resume, us)		do {} while (0);
 #define omap2_pm_debug				0
+#define pm_dbg_update_time(pwrdm, prev) do {} while (0);
 #endif /* CONFIG_PM_DEBUG */
 
 extern void omap24xx_idle_loop_suspend(void);

commit 7cc515f74d2871daff106a17714bfd16bcb045ca
Author: Kevin Hilman <khilman@deeprootsystems.com>
Date:   Wed Jun 10 09:02:25 2009 -0700

    OMAP2/3: PM: make PM __init calls static
    
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
index f7b3baf76678..21201cd4117b 100644
--- a/arch/arm/mach-omap2/pm.h
+++ b/arch/arm/mach-omap2/pm.h
@@ -11,9 +11,6 @@
 #ifndef __ARCH_ARM_MACH_OMAP2_PM_H
 #define __ARCH_ARM_MACH_OMAP2_PM_H
 
-extern int omap2_pm_init(void);
-extern int omap3_pm_init(void);
-
 #ifdef CONFIG_PM_DEBUG
 extern void omap2_pm_dump(int mode, int resume, unsigned int us);
 extern int omap2_pm_debug;

commit 8bd229492209c0c7d050e2f9a600c12f035d72f7
Author: Kevin Hilman <khilman@deeprootsystems.com>
Date:   Thu May 28 10:56:16 2009 -0700

    OMAP2/3: PM: push core PM code from linux-omap
    
    This patch is to sync the core linux-omap PM code with mainline.  This
    code has evolved and been used for a while the linux-omap tree, but
    the attempt here is to finally get this into mainline.
    
    Following this will be a series of patches from the 'PM branch' of the
    linux-omap tree to add full PM hardware support from the linux-omap
    tree.
    
    Much of this PM core code was written by Jouni Hogander with
    significant contributions from Paul Walmsley as well as many others
    from Nokia, Texas Instruments and linux-omap community.
    
    Signed-off-by: Jouni Hogander <jouni.hogander@nokia.com>
    Cc: Paul Walmsley <paul@pwsan.com>
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-omap2/pm.h b/arch/arm/mach-omap2/pm.h
new file mode 100644
index 000000000000..f7b3baf76678
--- /dev/null
+++ b/arch/arm/mach-omap2/pm.h
@@ -0,0 +1,38 @@
+/*
+ * OMAP2/3 Power Management Routines
+ *
+ * Copyright (C) 2008 Nokia Corporation
+ * Jouni Hogander
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+#ifndef __ARCH_ARM_MACH_OMAP2_PM_H
+#define __ARCH_ARM_MACH_OMAP2_PM_H
+
+extern int omap2_pm_init(void);
+extern int omap3_pm_init(void);
+
+#ifdef CONFIG_PM_DEBUG
+extern void omap2_pm_dump(int mode, int resume, unsigned int us);
+extern int omap2_pm_debug;
+#else
+#define omap2_pm_dump(mode, resume, us)		do {} while (0);
+#define omap2_pm_debug				0
+#endif /* CONFIG_PM_DEBUG */
+
+extern void omap24xx_idle_loop_suspend(void);
+
+extern void omap24xx_cpu_suspend(u32 dll_ctrl, void __iomem *sdrc_dlla_ctrl,
+					void __iomem *sdrc_power);
+extern void omap34xx_cpu_suspend(u32 *addr, int save_state);
+extern void save_secure_ram_context(u32 *addr);
+
+extern unsigned int omap24xx_idle_loop_suspend_sz;
+extern unsigned int omap34xx_suspend_sz;
+extern unsigned int save_secure_ram_context_sz;
+extern unsigned int omap24xx_cpu_suspend_sz;
+extern unsigned int omap34xx_cpu_suspend_sz;
+
+#endif
