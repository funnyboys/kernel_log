commit 8c5a916f4c8815196cc8a86b9582ca89422aac25
Author: Keerthy <j-keerthy@ti.com>
Date:   Mon Jul 9 13:03:17 2018 +0530

    ARM: OMAP2+: sleep33/43xx: Add RTC-Mode support
    
    Add support for RTC mode to low level suspend code. This includes
    providing the rtc base address for the assembly code to configuring the
    PMIC_PWR_EN line late in suspend to enter RTC+DDR mode.
    
    Note: This patch also fold in left out space parameter for
    am33xx_emif_sram_table and am43xx_emif_sram_table
    
    Signed-off-by: Dave Gerlach <d-gerlach@ti.com>
    Signed-off-by: Keerthy <j-keerthy@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>

diff --git a/arch/arm/mach-omap2/pm-asm-offsets.c b/arch/arm/mach-omap2/pm-asm-offsets.c
index b9846b19e5e2..d8ae8a85b14b 100644
--- a/arch/arm/mach-omap2/pm-asm-offsets.c
+++ b/arch/arm/mach-omap2/pm-asm-offsets.c
@@ -27,6 +27,8 @@ int main(void)
 	       offsetof(struct am33xx_pm_ro_sram_data, amx3_pm_sram_data_virt));
 	DEFINE(AMX3_PM_RO_SRAM_DATA_PHYS_OFFSET,
 	       offsetof(struct am33xx_pm_ro_sram_data, amx3_pm_sram_data_phys));
+	DEFINE(AMX3_PM_RTC_BASE_VIRT_OFFSET,
+	       offsetof(struct am33xx_pm_ro_sram_data, rtc_base_virt));
 	DEFINE(AMX3_PM_RO_SRAM_DATA_SIZE,
 	       sizeof(struct am33xx_pm_ro_sram_data));
 

commit 5692fceebeb7f11c07e2a990f7711a01ae437de2
Author: Dave Gerlach <d-gerlach@ti.com>
Date:   Wed Apr 11 16:15:43 2018 -0500

    ARM: OMAP2+: Fix build when using split object directories
    
    The sleep33xx and sleep43xx files should not depend on a header file
    generated in drivers/memory. Remove this dependency and instead allow
    both drivers/memory and arch/arm/mach-omap2 to generate all macros
    needed in headers local to their own paths.
    
    This fixes an issue where the build fail will when using O= to set a
    split object directory and arch/arm/mach-omap2 is built before
    drivers/memory with the following error:
    
    .../drivers/memory/emif-asm-offsets.c:1:0: fatal error: can't open
    drivers/memory/emif-asm-offsets.s for writing: No such file or directory
    compilation terminated.
    
    Fixes: 41d9d44d7258 ("ARM: OMAP2+: pm33xx-core: Add platform code needed for PM")
    Reviewed-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Dave Gerlach <d-gerlach@ti.com>
    Acked-by: Santosh Shilimkar <ssantosh@kernel.org>
    Signed-off-by: Tony Lindgren <tony@atomide.com>

diff --git a/arch/arm/mach-omap2/pm-asm-offsets.c b/arch/arm/mach-omap2/pm-asm-offsets.c
index 6d4392da7c11..b9846b19e5e2 100644
--- a/arch/arm/mach-omap2/pm-asm-offsets.c
+++ b/arch/arm/mach-omap2/pm-asm-offsets.c
@@ -7,9 +7,12 @@
 
 #include <linux/kbuild.h>
 #include <linux/platform_data/pm33xx.h>
+#include <linux/ti-emif-sram.h>
 
 int main(void)
 {
+	ti_emif_asm_offsets();
+
 	DEFINE(AMX3_PM_WFI_FLAGS_OFFSET,
 	       offsetof(struct am33xx_pm_sram_data, wfi_flags));
 	DEFINE(AMX3_PM_L2_AUX_CTRL_VAL_OFFSET,

commit 41d9d44d725808f27b53f266733e6d17d83020ba
Author: Dave Gerlach <d-gerlach@ti.com>
Date:   Fri Feb 23 09:43:56 2018 -0600

    ARM: OMAP2+: pm33xx-core: Add platform code needed for PM
    
    Most of the PM code needed for am335x and am437x can be moved into a
    module under drivers but some core code must remain in mach-omap2 at the
    moment. This includes some internal clockdomain APIs and low-level ARM
    APIs which are also not exported for use by modules.
    
    Implement a few functions that handle these low-level platform
    operations can be passed to the pm33xx module through the use of
    platform data.
    
    In addition to this, to be able to share data structures between C and
    the sleep33xx and sleep43xx assembly code, we can automatically generate
    all of the C struct member offsets and sizes as macros by processing
    pm-asm-offsets.c into assembly code and then extracting the relevant
    data as is done for the generated platform asm-offsets.h files.
    
    Finally, add amx3_common_pm_init to create a dummy platform_device for
    pm33xx so that our soon to be introduced pm33xx module can probe on
    am335x and am437x platforms to enable basic suspend to mem and standby
    support.
    
    Signed-off-by: Dave Gerlach <d-gerlach@ti.com>
    Acked-by: Santosh Shilimkar <ssantosh@kernel.org>
    Signed-off-by: Tony Lindgren <tony@atomide.com>

diff --git a/arch/arm/mach-omap2/pm-asm-offsets.c b/arch/arm/mach-omap2/pm-asm-offsets.c
new file mode 100644
index 000000000000..6d4392da7c11
--- /dev/null
+++ b/arch/arm/mach-omap2/pm-asm-offsets.c
@@ -0,0 +1,31 @@
+// SPDX-License-Identifier: GPL-2.0
+/*
+ * TI AM33XX and AM43XX PM Assembly Offsets
+ *
+ * Copyright (C) 2017-2018 Texas Instruments Inc.
+ */
+
+#include <linux/kbuild.h>
+#include <linux/platform_data/pm33xx.h>
+
+int main(void)
+{
+	DEFINE(AMX3_PM_WFI_FLAGS_OFFSET,
+	       offsetof(struct am33xx_pm_sram_data, wfi_flags));
+	DEFINE(AMX3_PM_L2_AUX_CTRL_VAL_OFFSET,
+	       offsetof(struct am33xx_pm_sram_data, l2_aux_ctrl_val));
+	DEFINE(AMX3_PM_L2_PREFETCH_CTRL_VAL_OFFSET,
+	       offsetof(struct am33xx_pm_sram_data, l2_prefetch_ctrl_val));
+	DEFINE(AMX3_PM_SRAM_DATA_SIZE, sizeof(struct am33xx_pm_sram_data));
+
+	BLANK();
+
+	DEFINE(AMX3_PM_RO_SRAM_DATA_VIRT_OFFSET,
+	       offsetof(struct am33xx_pm_ro_sram_data, amx3_pm_sram_data_virt));
+	DEFINE(AMX3_PM_RO_SRAM_DATA_PHYS_OFFSET,
+	       offsetof(struct am33xx_pm_ro_sram_data, amx3_pm_sram_data_phys));
+	DEFINE(AMX3_PM_RO_SRAM_DATA_SIZE,
+	       sizeof(struct am33xx_pm_ro_sram_data));
+
+	return 0;
+}
