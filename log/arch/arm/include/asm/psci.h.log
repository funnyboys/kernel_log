commit 1802d0beecafe581ad584634ba92f8a471d8a63a
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon May 27 08:55:21 2019 +0200

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 174
    
    Based on 1 normalized pattern(s):
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license version 2 as
      published by the free software foundation this program is
      distributed in the hope that it will be useful but without any
      warranty without even the implied warranty of merchantability or
      fitness for a particular purpose see the gnu general public license
      for more details
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-only
    
    has been chosen to replace the boilerplate/reference in 655 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Reviewed-by: Kate Stewart <kstewart@linuxfoundation.org>
    Reviewed-by: Richard Fontana <rfontana@redhat.com>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190527070034.575739538@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/arch/arm/include/asm/psci.h b/arch/arm/include/asm/psci.h
index e1b825dfab23..536e155328fa 100644
--- a/arch/arm/include/asm/psci.h
+++ b/arch/arm/include/asm/psci.h
@@ -1,12 +1,5 @@
+/* SPDX-License-Identifier: GPL-2.0-only */
 /*
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License version 2 as
- * published by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
  *
  * Copyright (C) 2012 ARM Limited
  */

commit 5083c54264d21bf9b8a4766068f51581854d772c
Merge: 0c582826a158 0ef917f4fb83
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Jan 20 17:55:20 2016 -0800

    Merge tag 'armsoc-cleanup' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc
    
    Pull ARM SoC cleanups from Olof Johansson:
     "A smallish number of general cleanup commits this release cycle.  Some
      of these are minor tweaks:
    
       - shmobile change of binding for their GIC (using arm,pl390 now)
       - ARCH_RENESAS introduction
       - Misc other renesas updates
    
      There's also a couple of treewide commits from Masahiro Yamada
      cleaning up const/__initconst for SMP operation structs and a switch
      to using "depends on" instead of if-constructs on most of the Kconfig
      platform targets"
    
    * tag 'armsoc-cleanup' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc:
      staging: board: armadillo800eva: Use "arm,pl390"
      staging: board: kzm9d: Use "arm,pl390"
      ARM: shmobile: r8a7778 dtsi: Use "arm,pl390" for GIC
      ARM: shmobile: emev2 dtsi: Use "arm,pl390" for GIC
      ARM: shmobile: r8a7740 dtsi: Use "arm,pl390" for GIC
      ARM: shmobile: r7s72100 dtsi: Use "arm,pl390" for GIC
      ARM: use "depends on" for SoC configs instead of "if" after prompt
      ARM/clocksource: use automatic DT probing for ux500 PRCMU
      ARM: use const and __initconst for smp_operations
      ARM: hisi: do not export smp_operations structures
      ARM: mvebu: remove unused mach/gpio.h
      ARM: shmobile: Remove legacy mach/irqs.h
      ARM: shmobile: Introduce ARCH_RENESAS
      MAINTAINERS: Remove link to oss.renesas.com which is closed

commit be95485a0b8288a93402705730d3ea32f9f812b9
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Nov 19 15:03:57 2015 +0100

    ARM: 8457/1: psci-smp is built only for SMP
    
    The PSCI SMP implementation is built only when both CONFIG_SMP and
    CONFIG_ARM_PSCI are set, so a configuration that has the latter
    but not the former can get a link error when it tries to call
    psci_smp_available().
    
    arch/arm/mach-tegra/built-in.o: In function `tegra114_cpuidle_init':
    cpuidle-tegra114.c:(.init.text+0x52a): undefined reference to `psci_smp_available'
    
    This corrects the #ifdef in the psci.h header file to match the
    Makefile conditional we have for building that function.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>

diff --git a/arch/arm/include/asm/psci.h b/arch/arm/include/asm/psci.h
index 68ee3ce17b82..b4c6d99364f1 100644
--- a/arch/arm/include/asm/psci.h
+++ b/arch/arm/include/asm/psci.h
@@ -16,7 +16,7 @@
 
 extern struct smp_operations psci_smp_ops;
 
-#ifdef CONFIG_ARM_PSCI
+#if defined(CONFIG_SMP) && defined(CONFIG_ARM_PSCI)
 bool psci_smp_available(void);
 #else
 static inline bool psci_smp_available(void) { return false; }

commit 75305275a721d33ae9abfaeed2817cec8b2fee9a
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Sun Nov 15 10:39:53 2015 +0900

    ARM: use const and __initconst for smp_operations
    
    These smp_operations structures are not over-written, so add "const"
    qualifier and replace __initdata with __initconst.
    
    Also, add "static" where it is possible.
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Acked-by: Krzysztof Kozlowski <k.kozlowski@samsung.com>
    Acked-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Acked-by: Moritz Fischer <moritz.fischer@ettus.com>
    Acked-by: Stephen Boyd <sboyd@codeaurora.org> # qcom part
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Acked-by: Patrice Chotard <patrice.chotard@st.com>
    Acked-by: Heiko Stuebner <heiko@sntech.de>
    Acked-by: Wei Xu <xuwei5@hisilicon.com>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Acked-by: Sebastian Hesselbarth <sebastian.hesselbarth@gmail.com>
    Acked-by: Gregory CLEMENT <gregory.clement@free-electrons.com>
    Acked-by: Shawn Guo <shawnguo@kernel.org>
    Acked-by: Matthias Brugger <matthias.bgg@gmail.com>
    Acked-by: Thierry Reding <treding@nvidia.com>
    Acked-by: Nicolas Pitre <nico@linaro.org>
    Acked-by: Liviu Dudau <Liviu.Dudau@arm.com>
    Acked-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>

diff --git a/arch/arm/include/asm/psci.h b/arch/arm/include/asm/psci.h
index 68ee3ce17b82..97735a8ff451 100644
--- a/arch/arm/include/asm/psci.h
+++ b/arch/arm/include/asm/psci.h
@@ -14,7 +14,7 @@
 #ifndef __ASM_ARM_PSCI_H
 #define __ASM_ARM_PSCI_H
 
-extern struct smp_operations psci_smp_ops;
+extern const struct smp_operations psci_smp_ops;
 
 #ifdef CONFIG_ARM_PSCI
 bool psci_smp_available(void);

commit be120397e7709d9d5ed88317a385ce864a2603bc
Author: Mark Rutland <mark.rutland@arm.com>
Date:   Fri Jul 31 15:46:19 2015 +0100

    ARM: migrate to common PSCI client code
    
    Now that the common PSCI client code has been factored out to
    drivers/firmware, and made safe for 32-bit use, move the 32-bit ARM code
    over to it. This results in a moderate reduction of duplicated lines,
    and will prevent further duplication as the PSCI client code is updated
    for PSCI 1.0 and beyond.
    
    The two legacy platform users of the PSCI invocation code are updated to
    account for interface changes. In both cases the power state parameter
    (which is constant) is now generated using macros, so that the
    pack/unpack logic can be killed in preparation for PSCI 1.0 power state
    changes.
    
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Acked-by: Rob Herring <robh@kernel.org>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Ashwin Chaugule <ashwin.chaugule@linaro.org>
    Cc: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Cc: Russell King <rmk+kernel@arm.linux.org.uk>
    Cc: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>

diff --git a/arch/arm/include/asm/psci.h b/arch/arm/include/asm/psci.h
index c25ef3ec6d1f..68ee3ce17b82 100644
--- a/arch/arm/include/asm/psci.h
+++ b/arch/arm/include/asm/psci.h
@@ -14,34 +14,11 @@
 #ifndef __ASM_ARM_PSCI_H
 #define __ASM_ARM_PSCI_H
 
-#define PSCI_POWER_STATE_TYPE_STANDBY		0
-#define PSCI_POWER_STATE_TYPE_POWER_DOWN	1
-
-struct psci_power_state {
-	u16	id;
-	u8	type;
-	u8	affinity_level;
-};
-
-struct psci_operations {
-	int (*cpu_suspend)(struct psci_power_state state,
-			   unsigned long entry_point);
-	int (*cpu_off)(struct psci_power_state state);
-	int (*cpu_on)(unsigned long cpuid, unsigned long entry_point);
-	int (*migrate)(unsigned long cpuid);
-	int (*affinity_info)(unsigned long target_affinity,
-			unsigned long lowest_affinity_level);
-	int (*migrate_info_type)(void);
-};
-
-extern struct psci_operations psci_ops;
 extern struct smp_operations psci_smp_ops;
 
 #ifdef CONFIG_ARM_PSCI
-int psci_init(void);
 bool psci_smp_available(void);
 #else
-static inline int psci_init(void) { return 0; }
 static inline bool psci_smp_available(void) { return false; }
 #endif
 

commit d6d7a95c1bdba370e2249efdecfab712c10cfc9b
Author: Christoffer Dall <christoffer.dall@linaro.org>
Date:   Tue May 27 11:18:17 2014 +0200

    arm: Fix compile warning for psci
    
    Commit e71246a23acbc89e9cb4ebf1558d60e65733479f changes psci_init from a
    function returning a void to an int, but does not change the non
    CONFIG_ARM_PSCI implementation to return a value, which causes a compile
    warning.  Just return 0.
    
    Cc: Ashwin Chaugule <ashwin.chaugule@linaro.org>
    Cc: Shawn Guo <shawn.guo@freescale.com>
    Signed-off-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

diff --git a/arch/arm/include/asm/psci.h b/arch/arm/include/asm/psci.h
index b93e34a9fdf1..c25ef3ec6d1f 100644
--- a/arch/arm/include/asm/psci.h
+++ b/arch/arm/include/asm/psci.h
@@ -41,7 +41,7 @@ extern struct smp_operations psci_smp_ops;
 int psci_init(void);
 bool psci_smp_available(void);
 #else
-static inline int psci_init(void) { }
+static inline int psci_init(void) { return 0; }
 static inline bool psci_smp_available(void) { return false; }
 #endif
 

commit e71246a23acbc89e9cb4ebf1558d60e65733479f
Author: Ashwin Chaugule <ashwin.chaugule@linaro.org>
Date:   Thu Apr 17 14:38:41 2014 -0400

    PSCI: Add initial support for PSCIv0.2 functions
    
    The PSCIv0.2 spec defines standard values of function IDs
    and introduces a few new functions. Detect version of PSCI
    and appropriately select the right PSCI functions.
    
    Signed-off-by: Ashwin Chaugule <ashwin.chaugule@linaro.org>
    Reviewed-by: Rob Herring <robh@kernel.org>
    Acked-by: Catalin Marinas <catalin.marinas@arm.com>

diff --git a/arch/arm/include/asm/psci.h b/arch/arm/include/asm/psci.h
index c4ae171850f8..b93e34a9fdf1 100644
--- a/arch/arm/include/asm/psci.h
+++ b/arch/arm/include/asm/psci.h
@@ -29,16 +29,19 @@ struct psci_operations {
 	int (*cpu_off)(struct psci_power_state state);
 	int (*cpu_on)(unsigned long cpuid, unsigned long entry_point);
 	int (*migrate)(unsigned long cpuid);
+	int (*affinity_info)(unsigned long target_affinity,
+			unsigned long lowest_affinity_level);
+	int (*migrate_info_type)(void);
 };
 
 extern struct psci_operations psci_ops;
 extern struct smp_operations psci_smp_ops;
 
 #ifdef CONFIG_ARM_PSCI
-void psci_init(void);
+int psci_init(void);
 bool psci_smp_available(void);
 #else
-static inline void psci_init(void) { }
+static inline int psci_init(void) { }
 static inline bool psci_smp_available(void) { return false; }
 #endif
 

commit 05774088391c7430f6a4c1d5d18196ef17bb3ba9
Author: Stefano Stabellini <stefano.stabellini@eu.citrix.com>
Date:   Tue May 21 14:24:11 2013 +0000

    arm: introduce psci_smp_ops
    
    Rename virt_smp_ops to psci_smp_ops and move them to arch/arm/kernel/psci_smp.c.
    Remove mach-virt/platsmp.c, now unused.
    Compile psci_smp if CONFIG_ARM_PSCI and CONFIG_SMP.
    
    Add a cpu_die smp_op based on psci_ops.cpu_off.
    
    Initialize PSCI before setting smp_ops in setup_arch.
    
    If PSCI is available on the platform, prefer psci_smp_ops over the
    platform smp_ops.
    
    
    Signed-off-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>
    Acked-by: Will Deacon <will.deacon@arm.com>
    CC: arnd@arndb.de
    CC: marc.zyngier@arm.com
    CC: linux@arm.linux.org.uk
    CC: nico@linaro.org
    CC: rob.herring@calxeda.com

diff --git a/arch/arm/include/asm/psci.h b/arch/arm/include/asm/psci.h
index ce0dbe7c1625..c4ae171850f8 100644
--- a/arch/arm/include/asm/psci.h
+++ b/arch/arm/include/asm/psci.h
@@ -32,5 +32,14 @@ struct psci_operations {
 };
 
 extern struct psci_operations psci_ops;
+extern struct smp_operations psci_smp_ops;
+
+#ifdef CONFIG_ARM_PSCI
+void psci_init(void);
+bool psci_smp_available(void);
+#else
+static inline void psci_init(void) { }
+static inline bool psci_smp_available(void) { return false; }
+#endif
 
 #endif /* __ASM_ARM_PSCI_H */

commit 2bdd424f26be1c98b6e3d9acfffb5559c131c888
Author: Will Deacon <will.deacon@arm.com>
Date:   Wed Dec 12 19:20:52 2012 +0000

    ARM: psci: add support for PSCI invocations from the kernel
    
    This patch adds support for the Power State Coordination Interface
    defined by ARM, allowing Linux to request CPU-centric power-management
    operations from firmware implementing the PSCI protocol.
    
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Nicolas Pitre <nico@linaro.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>

diff --git a/arch/arm/include/asm/psci.h b/arch/arm/include/asm/psci.h
new file mode 100644
index 000000000000..ce0dbe7c1625
--- /dev/null
+++ b/arch/arm/include/asm/psci.h
@@ -0,0 +1,36 @@
+/*
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * Copyright (C) 2012 ARM Limited
+ */
+
+#ifndef __ASM_ARM_PSCI_H
+#define __ASM_ARM_PSCI_H
+
+#define PSCI_POWER_STATE_TYPE_STANDBY		0
+#define PSCI_POWER_STATE_TYPE_POWER_DOWN	1
+
+struct psci_power_state {
+	u16	id;
+	u8	type;
+	u8	affinity_level;
+};
+
+struct psci_operations {
+	int (*cpu_suspend)(struct psci_power_state state,
+			   unsigned long entry_point);
+	int (*cpu_off)(struct psci_power_state state);
+	int (*cpu_on)(unsigned long cpuid, unsigned long entry_point);
+	int (*migrate)(unsigned long cpuid);
+};
+
+extern struct psci_operations psci_ops;
+
+#endif /* __ASM_ARM_PSCI_H */
