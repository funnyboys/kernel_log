commit d2912cb15bdda8ba4a5dd73396ad62641af2f520
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Tue Jun 4 10:11:33 2019 +0200

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 500
    
    Based on 2 normalized pattern(s):
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license version 2 as
      published by the free software foundation
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license version 2 as
      published by the free software foundation #
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-only
    
    has been chosen to replace the boilerplate/reference in 4122 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Enrico Weigelt <info@metux.net>
    Reviewed-by: Kate Stewart <kstewart@linuxfoundation.org>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190604081206.933168790@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/arch/arm/common/firmware.c b/arch/arm/common/firmware.c
index 27ddccb1131f..c1f8f581b41d 100644
--- a/arch/arm/common/firmware.c
+++ b/arch/arm/common/firmware.c
@@ -1,11 +1,8 @@
+// SPDX-License-Identifier: GPL-2.0-only
 /*
  * Copyright (C) 2012 Samsung Electronics.
  * Kyungmin Park <kyungmin.park@samsung.com>
  * Tomasz Figa <t.figa@samsung.com>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License version 2 as
- * published by the Free Software Foundation.
  */
 
 #include <linux/kernel.h>

commit 7366b92a77fc00357294819bb495896d7482f30c
Author: Tomasz Figa <t.figa@samsung.com>
Date:   Tue Dec 11 13:58:43 2012 +0900

    ARM: Add interface for registering and calling firmware-specific operations
    
    Some boards are running with secure firmware running in TrustZone secure
    world, which changes the way some things have to be initialized.
    
    This patch adds an interface for platforms to specify available firmware
    operations and call them.
    
    A wrapper macro, call_firmware_op(), checks if the operation is provided
    and calls it if so, otherwise returns -ENOSYS to allow fallback to
    legacy operation..
    
    By default no operations are provided.
    
    Example of use:
    
    In code using firmware ops:
    
      __raw_writel(virt_to_phys(exynos4_secondary_startup),
                   CPU1_BOOT_REG);
    
      /* Call Exynos specific smc call */
      if (call_firmware_op(cpu_boot, cpu) == -ENOSYS)
              cpu_boot_legacy(...); /* Try legacy way */
    
      gic_raise_softirq(cpumask_of(cpu), 1);
    
    In board-/platform-specific code:
    
      static int platformX_do_idle(void)
      {
              /* tell platformX firmware to enter idle */
              return 0;
      }
    
      static int platformX_cpu_boot(int i)
      {
              /* tell platformX firmware to boot CPU i */
              return 0;
      }
    
      static const struct firmware_ops platformX_firmware_ops = {
              .do_idle      = exynos_do_idle,
              .cpu_boot     = exynos_cpu_boot,
              /* other operations not available on platformX */
      };
    
      static void __init board_init_early(void)
      {
              register_firmware_ops(&platformX_firmware_ops);
      }
    
    Signed-off-by: Kyungmin Park <kyungmin.park@samsung.com>
    Signed-off-by: Tomasz Figa <t.figa@samsung.com>
    Signed-off-by: Kukjin Kim <kgene.kim@samsung.com>

diff --git a/arch/arm/common/firmware.c b/arch/arm/common/firmware.c
new file mode 100644
index 000000000000..27ddccb1131f
--- /dev/null
+++ b/arch/arm/common/firmware.c
@@ -0,0 +1,18 @@
+/*
+ * Copyright (C) 2012 Samsung Electronics.
+ * Kyungmin Park <kyungmin.park@samsung.com>
+ * Tomasz Figa <t.figa@samsung.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+
+#include <linux/kernel.h>
+#include <linux/suspend.h>
+
+#include <asm/firmware.h>
+
+static const struct firmware_ops default_firmware_ops;
+
+const struct firmware_ops *firmware_ops = &default_firmware_ops;
