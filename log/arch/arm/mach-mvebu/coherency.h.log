commit cb2bb5de64d1620e8fea432d014c29c7daf39e23
Author: Ben Dooks <ben.dooks@codethink.co.uk>
Date:   Tue Jun 7 20:03:49 2016 +0100

    mvebu: add definition for coherency_base
    
    Fix the warning that coherency_base is not defined by adding
    it to coherency.h (it is only used in the coherency_ll.S):
    
    arch/arm/mach-mvebu/coherency.c:41:14: warning: symbol 'coherency_base' was not declared. Should it be static?
    
    Signed-off-by: Ben Dooks <ben.dooks@codethink.co.uk>
    Signed-off-by: Gregory CLEMENT <gregory.clement@free-electrons.com>

diff --git a/arch/arm/mach-mvebu/coherency.h b/arch/arm/mach-mvebu/coherency.h
index 54cb7607b526..6067f14263f7 100644
--- a/arch/arm/mach-mvebu/coherency.h
+++ b/arch/arm/mach-mvebu/coherency.h
@@ -14,6 +14,7 @@
 #ifndef __MACH_370_XP_COHERENCY_H
 #define __MACH_370_XP_COHERENCY_H
 
+extern void __iomem *coherency_base;	/* for coherency_ll.S */
 extern unsigned long coherency_phys_base;
 int set_cpu_coherent(void);
 

commit 952f4ca79b4ec7114291aa711add1b36c6ba7515
Author: Gregory CLEMENT <gregory.clement@free-electrons.com>
Date:   Mon Apr 14 17:10:07 2014 +0200

    ARM: mvebu: Remove the unused argument of set_cpu_coherent()
    
    set_cpu_coherent() took the SMP group ID as parameter. But this
    parameter was never used, and the CPU always uses the SMP group 0. So
    we can remove this parameter.
    
    Signed-off-by: Gregory CLEMENT <gregory.clement@free-electrons.com>
    Link: https://lkml.kernel.org/r/1397488214-20685-5-git-send-email-gregory.clement@free-electrons.com
    Signed-off-by: Jason Cooper <jason@lakedaemon.net>

diff --git a/arch/arm/mach-mvebu/coherency.h b/arch/arm/mach-mvebu/coherency.h
index ab594a75fef3..54cb7607b526 100644
--- a/arch/arm/mach-mvebu/coherency.h
+++ b/arch/arm/mach-mvebu/coherency.h
@@ -15,8 +15,8 @@
 #define __MACH_370_XP_COHERENCY_H
 
 extern unsigned long coherency_phys_base;
+int set_cpu_coherent(void);
 
-int set_cpu_coherent(int smp_group_id);
 int coherency_init(void);
 int coherency_available(void);
 

commit b41375f71aceadb7d74a18aafba4da5024fc104b
Author: Gregory CLEMENT <gregory.clement@free-electrons.com>
Date:   Mon Apr 14 17:10:06 2014 +0200

    ARM: mvebu: ll_set_cpu_coherent always uses the current CPU
    
    ll_set_cpu_coherent is always used on the current CPU, so instead of
    passing the CPU id as argument, ll_set_cpu_coherent() can find it by
    itself.
    
    Signed-off-by: Gregory CLEMENT <gregory.clement@free-electrons.com>
    Link: https://lkml.kernel.org/r/1397488214-20685-4-git-send-email-gregory.clement@free-electrons.com
    Acked-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Signed-off-by: Jason Cooper <jason@lakedaemon.net>

diff --git a/arch/arm/mach-mvebu/coherency.h b/arch/arm/mach-mvebu/coherency.h
index 02f7ec34ced2..ab594a75fef3 100644
--- a/arch/arm/mach-mvebu/coherency.h
+++ b/arch/arm/mach-mvebu/coherency.h
@@ -16,7 +16,7 @@
 
 extern unsigned long coherency_phys_base;
 
-int set_cpu_coherent(unsigned int cpu_id, int smp_group_id);
+int set_cpu_coherent(int smp_group_id);
 int coherency_init(void);
 int coherency_available(void);
 

commit 501f928e009760f4987d4630265bb9fff28a6ecc
Author: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
Date:   Mon Apr 14 15:47:00 2014 +0200

    ARM: mvebu: add a coherency_available() call
    
    This commit extends the coherency fabric code to provide a
    coherency_available()function that the SoC code can call to be told
    whether coherency support is available or not. On Armada 370/XP,
    coherency support is available as soon as the relevant DT node is
    present. On some upcoming SoCs, the DT node needs to be present *and*
    the system running with CONFIG_SMP enabled.
    
    Signed-off-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Link: https://lkml.kernel.org/r/1397483228-25625-3-git-send-email-thomas.petazzoni@free-electrons.com
    Signed-off-by: Jason Cooper <jason@lakedaemon.net>

diff --git a/arch/arm/mach-mvebu/coherency.h b/arch/arm/mach-mvebu/coherency.h
index 760226c41353..02f7ec34ced2 100644
--- a/arch/arm/mach-mvebu/coherency.h
+++ b/arch/arm/mach-mvebu/coherency.h
@@ -18,5 +18,6 @@ extern unsigned long coherency_phys_base;
 
 int set_cpu_coherent(unsigned int cpu_id, int smp_group_id);
 int coherency_init(void);
+int coherency_available(void);
 
 #endif	/* __MACH_370_XP_COHERENCY_H */

commit b12634e343bea9ce94ed3252fccbac347f8bb37f
Author: Jisheng Zhang <jszhang@marvell.com>
Date:   Thu Nov 7 17:02:38 2013 +0800

    ARM: mvebu: fix some sparse warnings
    
    This patch fixes conflicting types for 'set_cpu_coherent' and fixes the
    following sparse warnings.
    
    arch/arm/mach-mvebu/system-controller.c:42:38:
    warning: symbol 'armada_370_xp_system_controller' was not declared. Should it be static?
    arch/arm/mach-mvebu/system-controller.c:49:38:
    warning: symbol 'orion_system_controller' was not declared. Should it be static?
    arch/arm/mach-mvebu/system-controller.c:67:6:
    warning: symbol 'mvebu_restart' was not declared. Should it be static?
    arch/arm/mach-mvebu/coherency.c:31:15:
    warning: symbol 'coherency_phys_base' was not declared. Should it be static?
    arch/arm/mach-mvebu/coherency.c:48:5:
    warning: symbol 'set_cpu_coherent' was not declared. Should it be static?
    arch/arm/mach-mvebu/coherency.c:123:12:
    warning: symbol 'coherency_init' was not declared. Should it be static?
    arch/arm/mach-mvebu/pmsu.c:38:5: warning:
    symbol 'armada_xp_boot_cpu' was not declared. Should it be static?
    arch/arm/mach-mvebu/pmsu.c:61:12: warning:
    symbol 'armada_370_xp_pmsu_init' was not declared. Should it be static?
    arch/arm/mach-mvebu/platsmp.c:49:13: warning:
    symbol 'set_secondary_cpus_clock' was not declared. Should it be static?
    arch/arm/mach-mvebu/platsmp.c:97:13: warning:
    symbol 'armada_xp_smp_prepare_cpus' was not declared. Should it be static?
    arch/arm/mach-mvebu/hotplug.c:24:12: warning:
    symbol 'armada_xp_cpu_die' was not declared. Should it be static?
    
    Signed-off-by: Jisheng Zhang <jszhang@marvell.com>
    Acked-by: Gregory CLEMENT <gregory.clement@free-electrons.com>
    Signed-off-by: Jason Cooper <jason@lakedaemon.net>

diff --git a/arch/arm/mach-mvebu/coherency.h b/arch/arm/mach-mvebu/coherency.h
index df33ad8a6c08..760226c41353 100644
--- a/arch/arm/mach-mvebu/coherency.h
+++ b/arch/arm/mach-mvebu/coherency.h
@@ -14,7 +14,9 @@
 #ifndef __MACH_370_XP_COHERENCY_H
 #define __MACH_370_XP_COHERENCY_H
 
-int set_cpu_coherent(int cpu_id, int smp_group_id);
+extern unsigned long coherency_phys_base;
+
+int set_cpu_coherent(unsigned int cpu_id, int smp_group_id);
 int coherency_init(void);
 
 #endif	/* __MACH_370_XP_COHERENCY_H */

commit b21dcafea36dd6249df9cf485a48c7337a8987af
Author: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
Date:   Wed Jun 5 09:04:54 2013 +0200

    arm: mvebu: remove dependency of SMP init on static I/O mapping
    
    The ->smp_init_cpus() function is called very early during boot, at a
    point where dynamic I/O mappings are not yet possible. However, in the
    Armada 370/XP implementation of this function, we have to get the
    number of CPUs. We used to do that by accessing a hardware register,
    which requires relying on a static I/O mapping set up by
    ->map_io(). Not only this requires hardcoding a virtual address, but
    it also prevents us from removing the static I/O mapping.
    
    So this commit changes the way used to get the number of CPUs: we now
    use the Device Tree, which is a representation of the hardware, and
    provides us the number of available CPUs. This is also more accurate,
    because it potentially allows to boot the Linux kernel on only a
    number of CPUs given by the Device Tree, instead of unconditionally on
    all CPUs.
    
    As a consequence, the coherency_get_cpu_count() function becomes no
    longer used, so we remove it.
    
    Signed-off-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Jason Cooper <jason@lakedaemon.net>

diff --git a/arch/arm/mach-mvebu/coherency.h b/arch/arm/mach-mvebu/coherency.h
index 2f428137f6fe..df33ad8a6c08 100644
--- a/arch/arm/mach-mvebu/coherency.h
+++ b/arch/arm/mach-mvebu/coherency.h
@@ -14,10 +14,6 @@
 #ifndef __MACH_370_XP_COHERENCY_H
 #define __MACH_370_XP_COHERENCY_H
 
-#ifdef CONFIG_SMP
-int coherency_get_cpu_count(void);
-#endif
-
 int set_cpu_coherent(int cpu_id, int smp_group_id);
 int coherency_init(void);
 

commit 009f13159bfdccd6e06fe3b62a39fee6dce26c39
Author: Gregory CLEMENT <gregory.clement@free-electrons.com>
Date:   Thu Aug 2 11:16:29 2012 +0300

    arm: mvebu: Add support for coherency fabric in mach-mvebu
    
    The Armada 370 and Armada XP SOCs have a coherency fabric unit which
    is responsible for ensuring hardware coherency between all CPUs and
    between CPUs and I/O masters. This patch provides the basic support
    needed for SMP.
    
    Signed-off-by: Yehuda Yitschak <yehuday@marvell.com>
    Signed-off-by: Gregory CLEMENT <gregory.clement@free-electrons.com>
    Reviewed-by: Will Deacon <will.deacon@arm.com>

diff --git a/arch/arm/mach-mvebu/coherency.h b/arch/arm/mach-mvebu/coherency.h
new file mode 100644
index 000000000000..2f428137f6fe
--- /dev/null
+++ b/arch/arm/mach-mvebu/coherency.h
@@ -0,0 +1,24 @@
+/*
+ * arch/arm/mach-mvebu/include/mach/coherency.h
+ *
+ *
+ * Coherency fabric (Aurora) support for Armada 370 and XP platforms.
+ *
+ * Copyright (C) 2012 Marvell
+ *
+ * This file is licensed under the terms of the GNU General Public
+ * License version 2.  This program is licensed "as is" without any
+ * warranty of any kind, whether express or implied.
+ */
+
+#ifndef __MACH_370_XP_COHERENCY_H
+#define __MACH_370_XP_COHERENCY_H
+
+#ifdef CONFIG_SMP
+int coherency_get_cpu_count(void);
+#endif
+
+int set_cpu_coherent(int cpu_id, int smp_group_id);
+int coherency_init(void);
+
+#endif	/* __MACH_370_XP_COHERENCY_H */
