commit d2199b34871b859d33cd08398af5f1530241cb4e
Author: Peng Fan <peng.fan@nxp.com>
Date:   Wed May 20 13:51:27 2020 +0800

    ARM: imx: use device_initcall for imx_soc_device_init
    
    This is preparation to move imx_soc_device_init to drivers/soc/imx/
    
    There is no reason to must put dt devices under /sys/devices/soc0,
    they could also be under /sys/devices/platform, so we could
    pass NULL as parent when calling of_platform_default_populate.
    
    Following soc-imx8.c soc-imx-scu.c using device_initcall, need
    to change return type to int type for imx_soc_device_init.
    
    Signed-off-by: Peng Fan <peng.fan@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>

diff --git a/arch/arm/mach-imx/mach-imx7ulp.c b/arch/arm/mach-imx/mach-imx7ulp.c
index 11ac71aaf965..128cf4c92aab 100644
--- a/arch/arm/mach-imx/mach-imx7ulp.c
+++ b/arch/arm/mach-imx/mach-imx7ulp.c
@@ -57,7 +57,7 @@ static void __init imx7ulp_init_machine(void)
 
 	mxc_set_cpu_type(MXC_CPU_IMX7ULP);
 	imx7ulp_set_revision();
-	of_platform_default_populate(NULL, NULL, imx_soc_device_init());
+	of_platform_default_populate(NULL, NULL, NULL);
 }
 
 static const char *const imx7ulp_dt_compat[] __initconst = {

commit 9edf908a16c43c438f0edc08ce839c5a7ef7d039
Author: Anson Huang <anson.huang@nxp.com>
Date:   Fri Jan 11 06:22:50 2019 +0000

    ARM: imx: add i.MX7ULP SoC revision support
    
    i.MX7ULP SoC's revision info is inside the SIM module,
    bit[31:28] of JTAG_ID register defines revision as below
    from B0:
    
    0001        B0
    0010        B1
    
    This patch adds SoC revision support for i.MX7ULP, test
    result as below:
    
    root@imx7ulp-evk ~$ cat /sys/devices/soc0/revision
    2.1
    
    Signed-off-by: Anson Huang <Anson.Huang@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>

diff --git a/arch/arm/mach-imx/mach-imx7ulp.c b/arch/arm/mach-imx/mach-imx7ulp.c
index 19c5b3050cb9..11ac71aaf965 100644
--- a/arch/arm/mach-imx/mach-imx7ulp.c
+++ b/arch/arm/mach-imx/mach-imx7ulp.c
@@ -6,18 +6,57 @@
  */
 
 #include <linux/irqchip.h>
+#include <linux/mfd/syscon.h>
 #include <linux/of_platform.h>
+#include <linux/regmap.h>
 #include <asm/mach/arch.h>
 
 #include "common.h"
 #include "cpuidle.h"
 #include "hardware.h"
 
+#define SIM_JTAG_ID_REG		0x8c
+
+static void __init imx7ulp_set_revision(void)
+{
+	struct regmap *sim;
+	u32 revision;
+
+	sim = syscon_regmap_lookup_by_compatible("fsl,imx7ulp-sim");
+	if (IS_ERR(sim)) {
+		pr_warn("failed to find fsl,imx7ulp-sim regmap!\n");
+		return;
+	}
+
+	if (regmap_read(sim, SIM_JTAG_ID_REG, &revision)) {
+		pr_warn("failed to read sim regmap!\n");
+		return;
+	}
+
+	/*
+	 * bit[31:28] of JTAG_ID register defines revision as below from B0:
+	 * 0001        B0
+	 * 0010        B1
+	 */
+	switch (revision >> 28) {
+	case 1:
+		imx_set_soc_revision(IMX_CHIP_REVISION_2_0);
+		break;
+	case 2:
+		imx_set_soc_revision(IMX_CHIP_REVISION_2_1);
+		break;
+	default:
+		imx_set_soc_revision(IMX_CHIP_REVISION_1_0);
+		break;
+	}
+}
+
 static void __init imx7ulp_init_machine(void)
 {
 	imx7ulp_pm_init();
 
 	mxc_set_cpu_type(MXC_CPU_IMX7ULP);
+	imx7ulp_set_revision();
 	of_platform_default_populate(NULL, NULL, imx_soc_device_init());
 }
 

commit 6d45a4028c8a6bc0a1e92438283ef7d4ed6ffe71
Author: Anson Huang <anson.huang@nxp.com>
Date:   Mon Jan 14 08:54:59 2019 +0800

    ARM: imx: add i.MX7ULP cpuidle support
    
    This patch adds cpuidle support for i.MX7ULP, 3 cpuidle
    states supported as below:
    
    1. WFI, just ARM wfi;
    2. WAIT mode, mapped to SoC's partial stop mode #3;
    3. STOP mode, mapped to SoC's partial stop mode #1.
    
    In WAIT mode, system clock and bus clock will be enabled;
    In STOP mode, system clock and bus clock will be disabled.
    
    Signed-off-by: Anson Huang <Anson.Huang@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>

diff --git a/arch/arm/mach-imx/mach-imx7ulp.c b/arch/arm/mach-imx/mach-imx7ulp.c
index 33937ebf66b5..19c5b3050cb9 100644
--- a/arch/arm/mach-imx/mach-imx7ulp.c
+++ b/arch/arm/mach-imx/mach-imx7ulp.c
@@ -10,6 +10,7 @@
 #include <asm/mach/arch.h>
 
 #include "common.h"
+#include "cpuidle.h"
 #include "hardware.h"
 
 static void __init imx7ulp_init_machine(void)
@@ -25,7 +26,13 @@ static const char *const imx7ulp_dt_compat[] __initconst = {
 	NULL,
 };
 
+static void __init imx7ulp_init_late(void)
+{
+	imx7ulp_cpuidle_init();
+}
+
 DT_MACHINE_START(IMX7ulp, "Freescale i.MX7ULP (Device Tree)")
 	.init_machine	= imx7ulp_init_machine,
 	.dt_compat	= imx7ulp_dt_compat,
+	.init_late	= imx7ulp_init_late,
 MACHINE_END

commit de70d0e9d43dd5fa899ce3a1560a4d2536b6b71e
Author: A.s. Dong <aisheng.dong@nxp.com>
Date:   Sat Nov 10 15:13:04 2018 +0000

    ARM: imx: add initial support for imx7ulp
    
    The i.MX 7ULP family of processors features NXP's advanced implementation
    of the Arm Cortex-A7 core, the Arm Cortex-M4 core, as well as a 3D and 2D
    Graphics Processing Units (GPUs).
    
    This patch aims to add an initial support for imx7ulp. Note that we need
    configure power mode to Partial Stop mode 3 with system/bus clock enabled
    first as the default enabled STOP mode will gate off system/bus clock when
    execute WFI in MX7ULP SoC.
    
    And there's still no MXC_CPU_IMX7ULP IDs read from register as ULP has no
    anatop as before. So we encode one with 0xff in reverse order in case new
    ones will be in the future.
    
    Cc: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Dong Aisheng <aisheng.dong@nxp.com>
    Reviewed-by: Fabio Estevam <festevam@gmail.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>

diff --git a/arch/arm/mach-imx/mach-imx7ulp.c b/arch/arm/mach-imx/mach-imx7ulp.c
new file mode 100644
index 000000000000..33937ebf66b5
--- /dev/null
+++ b/arch/arm/mach-imx/mach-imx7ulp.c
@@ -0,0 +1,31 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * Copyright (C) 2016 Freescale Semiconductor, Inc.
+ * Copyright 2017-2018 NXP
+ *   Author: Dong Aisheng <aisheng.dong@nxp.com>
+ */
+
+#include <linux/irqchip.h>
+#include <linux/of_platform.h>
+#include <asm/mach/arch.h>
+
+#include "common.h"
+#include "hardware.h"
+
+static void __init imx7ulp_init_machine(void)
+{
+	imx7ulp_pm_init();
+
+	mxc_set_cpu_type(MXC_CPU_IMX7ULP);
+	of_platform_default_populate(NULL, NULL, imx_soc_device_init());
+}
+
+static const char *const imx7ulp_dt_compat[] __initconst = {
+	"fsl,imx7ulp",
+	NULL,
+};
+
+DT_MACHINE_START(IMX7ulp, "Freescale i.MX7ULP (Device Tree)")
+	.init_machine	= imx7ulp_init_machine,
+	.dt_compat	= imx7ulp_dt_compat,
+MACHINE_END
