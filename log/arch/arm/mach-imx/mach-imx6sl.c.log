commit d2199b34871b859d33cd08398af5f1530241cb4e
Author: Peng Fan <peng.fan@nxp.com>
Date:   Wed May 20 13:51:27 2020 +0800

    ARM: imx: use device_initcall for imx_soc_device_init
    
    This is preparation to move imx_soc_device_init to drivers/soc/imx/
    
    There is no reason to must put dt devices under /sys/devices/soc0,
    they could also be under /sys/devices/platform, so we could
    pass NULL as parent when calling of_platform_default_populate.
    
    Following soc-imx8.c soc-imx-scu.c using device_initcall, need
    to change return type to int type for imx_soc_device_init.
    
    Signed-off-by: Peng Fan <peng.fan@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>

diff --git a/arch/arm/mach-imx/mach-imx6sl.c b/arch/arm/mach-imx/mach-imx6sl.c
index e27a6889cc56..f6e87363d605 100644
--- a/arch/arm/mach-imx/mach-imx6sl.c
+++ b/arch/arm/mach-imx/mach-imx6sl.c
@@ -45,13 +45,7 @@ static void __init imx6sl_init_late(void)
 
 static void __init imx6sl_init_machine(void)
 {
-	struct device *parent;
-
-	parent = imx_soc_device_init();
-	if (parent == NULL)
-		pr_warn("failed to initialize soc device\n");
-
-	of_platform_default_populate(NULL, NULL, parent);
+	of_platform_default_populate(NULL, NULL, NULL);
 
 	if (cpu_is_imx6sl())
 		imx6sl_fec_init();

commit cc56f77e526dd1b7b29b4529367747fc4c789c66
Author: Anson Huang <Anson.Huang@nxp.com>
Date:   Fri Feb 14 14:11:51 2020 +0800

    ARM: imx: Remove unused include of linux/of.h on mach-imx6sl.c
    
    linux/of.h is NOT used on mach-imx6sl.c, remove it.
    
    Signed-off-by: Anson Huang <Anson.Huang@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>

diff --git a/arch/arm/mach-imx/mach-imx6sl.c b/arch/arm/mach-imx/mach-imx6sl.c
index e00818abe54d..e27a6889cc56 100644
--- a/arch/arm/mach-imx/mach-imx6sl.c
+++ b/arch/arm/mach-imx/mach-imx6sl.c
@@ -4,7 +4,6 @@
  */
 
 #include <linux/irqchip.h>
-#include <linux/of.h>
 #include <linux/of_platform.h>
 #include <linux/mfd/syscon.h>
 #include <linux/mfd/syscon/imx6q-iomuxc-gpr.h>

commit d2912cb15bdda8ba4a5dd73396ad62641af2f520
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Tue Jun 4 10:11:33 2019 +0200

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 500
    
    Based on 2 normalized pattern(s):
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license version 2 as
      published by the free software foundation
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license version 2 as
      published by the free software foundation #
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-only
    
    has been chosen to replace the boilerplate/reference in 4122 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Enrico Weigelt <info@metux.net>
    Reviewed-by: Kate Stewart <kstewart@linuxfoundation.org>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190604081206.933168790@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/arch/arm/mach-imx/mach-imx6sl.c b/arch/arm/mach-imx/mach-imx6sl.c
index 99be4225297a..e00818abe54d 100644
--- a/arch/arm/mach-imx/mach-imx6sl.c
+++ b/arch/arm/mach-imx/mach-imx6sl.c
@@ -1,10 +1,6 @@
+// SPDX-License-Identifier: GPL-2.0-only
 /*
  * Copyright 2013 Freescale Semiconductor, Inc.
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License version 2 as
- * published by the Free Software Foundation.
- *
  */
 
 #include <linux/irqchip.h>

commit bc0ebbd5b5c14cd8d85ba671d725fb439741afa2
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Jul 9 17:51:17 2018 +0200

    ARM: imx: call imx6sx_cpuidle_init() conditionally for 6sll
    
    The imx6sl platform has two different cpuidle implementations,
    and fails to link if we only want one of the two:
    
    arch/arm/mach-imx/mach-imx6sl.o: In function `imx6sl_init_late':
    mach-imx6sl.c:(.init.text+0x12): undefined reference to `imx6sx_cpuidle_init'
    
    This makes the call into reference conditional on the configuration.
    
    Fixes: e7fa1fb39b11 ("ARM: imx: add cpu idle support for i.MX6SLL")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>

diff --git a/arch/arm/mach-imx/mach-imx6sl.c b/arch/arm/mach-imx/mach-imx6sl.c
index 183540e0838b..99be4225297a 100644
--- a/arch/arm/mach-imx/mach-imx6sl.c
+++ b/arch/arm/mach-imx/mach-imx6sl.c
@@ -42,9 +42,9 @@ static void __init imx6sl_init_late(void)
 	if (IS_ENABLED(CONFIG_ARM_IMX6Q_CPUFREQ))
 		platform_device_register_simple("imx6q-cpufreq", -1, NULL, 0);
 
-	if (cpu_is_imx6sl())
+	if (IS_ENABLED(CONFIG_SOC_IMX6SL) && cpu_is_imx6sl())
 		imx6sl_cpuidle_init();
-	else
+	else if (IS_ENABLED(CONFIG_SOC_IMX6SLL))
 		imx6sx_cpuidle_init();
 }
 

commit e7fa1fb39b118cc8415a946fd2e6bc0f6b6c05c9
Author: Anson Huang <Anson.Huang@nxp.com>
Date:   Sun Jun 3 10:33:45 2018 +0800

    ARM: imx: add cpu idle support for i.MX6SLL
    
    i.MX6SLL supports cpu idle with ARM power gated,
    it can reuse i.MX6SX's cpu idle driver to support
    below 3 states of cpu idle:
    
    state0: WFI;
    state1: WAIT mode with ARM power on;
    state2: WAIT mode with ARM power off.
    
    L2_PGE in GPC_CNTR needs to be cleared to support
    state2 cpu idle.
    
    Signed-off-by: Anson Huang <Anson.Huang@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>

diff --git a/arch/arm/mach-imx/mach-imx6sl.c b/arch/arm/mach-imx/mach-imx6sl.c
index c7a1ef180dda..183540e0838b 100644
--- a/arch/arm/mach-imx/mach-imx6sl.c
+++ b/arch/arm/mach-imx/mach-imx6sl.c
@@ -42,7 +42,10 @@ static void __init imx6sl_init_late(void)
 	if (IS_ENABLED(CONFIG_ARM_IMX6Q_CPUFREQ))
 		platform_device_register_simple("imx6q-cpufreq", -1, NULL, 0);
 
-	imx6sl_cpuidle_init();
+	if (cpu_is_imx6sl())
+		imx6sl_cpuidle_init();
+	else
+		imx6sx_cpuidle_init();
 }
 
 static void __init imx6sl_init_machine(void)

commit dee5dee2a5b285d20f55a4758d3a51349691eeea
Author: Bai Ping <ping.bai@nxp.com>
Date:   Thu Mar 8 17:34:55 2018 +0800

    ARM: imx: Add basic msl support for imx6sll
    
    Add basic MSL support for i.MX6SLL.
    
    The i.MX 6SoloLiteLite application processors are NXP's latest
    additions to a growing family of multimedia-focused products
    offering high-performance processing optimized for lowest power
    consumption. The i.MX 6SoloLiteLite processors feature NXP's advanced
    implementation of the ARM Cortex-A9 core, which can be interfaced
    with LPDDR3 and LPDDR2 DRAM memory devices.
    
    Signed-off-by: Bai Ping <ping.bai@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>

diff --git a/arch/arm/mach-imx/mach-imx6sl.c b/arch/arm/mach-imx/mach-imx6sl.c
index 04084900d810..c7a1ef180dda 100644
--- a/arch/arm/mach-imx/mach-imx6sl.c
+++ b/arch/arm/mach-imx/mach-imx6sl.c
@@ -18,6 +18,7 @@
 
 #include "common.h"
 #include "cpuidle.h"
+#include "hardware.h"
 
 static void __init imx6sl_fec_init(void)
 {
@@ -54,7 +55,8 @@ static void __init imx6sl_init_machine(void)
 
 	of_platform_default_populate(NULL, NULL, parent);
 
-	imx6sl_fec_init();
+	if (cpu_is_imx6sl())
+		imx6sl_fec_init();
 	imx_anatop_init();
 	imx6sl_pm_init();
 }
@@ -66,11 +68,15 @@ static void __init imx6sl_init_irq(void)
 	imx_init_l2cache();
 	imx_src_init();
 	irqchip_init();
-	imx6_pm_ccm_init("fsl,imx6sl-ccm");
+	if (cpu_is_imx6sl())
+		imx6_pm_ccm_init("fsl,imx6sl-ccm");
+	else
+		imx6_pm_ccm_init("fsl,imx6sll-ccm");
 }
 
 static const char * const imx6sl_dt_compat[] __initconst = {
 	"fsl,imx6sl",
+	"fsl,imx6sll",
 	NULL,
 };
 

commit 6f888fe31dfcda4cb25018b0af3f50049fcf0b7f
Merge: 5dd0bf621e84 3cc5612b21ba
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Aug 1 18:21:13 2016 -0400

    Merge tag 'armsoc-cleanup' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc
    
    Pull ARM SoC cleanups from Olof Johansson:
     "The cleanup branch keeps going down in size as we've completed a lot
      of the major legacy platform removals and conversions.
    
      A handful of changes this time around, some of the themes or larger
      sets are:
    
       - A bunch of i.MX cleanups around platform detection, init call cleanups
       - Misc fixes of missing/implicit includes
       - Removal of ARCH_[WANT_OPTIONAL|REQUIRE]_GPIOLIB"
    
    * tag 'armsoc-cleanup' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc: (40 commits)
      ARM: mps2: fix typo
      ARM: s3c64xx: avoid warning about 'struct device_node'
      bus: mvebu-mbus: make mvebu_mbus_syscore_ops static
      bus: mvebu-mbus: fix __iomem on register pointers
      ARM: tegra: Remove board_init_funcs array
      ARM: iop: Fix indentation
      ARM: imx: remove cpu_is_mx*()
      ARM: imx: remove last call to cpu_is_mx5*
      ARM: imx: rework mx27_pm_init() call
      ARM: imx: deconstruct mx3_idle
      ARM: imx: deconstruct mxc_rnga initialization
      ARM: imx: remove cpu_is_mx1 check
      ARM: i.MX: Do not explicitly call l2x0_of_init()
      ARM: i.MX: system.c: Tweak prefetch settings for performance
      ARM: i.MX: system.c: Replace magic numbers
      ARM: i.MX: system.c: Remove redundant errata 752271 code
      ARM: i.MX: system.c: Convert goto to if statement
      ARM: Kirkwood: fix kirkwood_pm_init() declaration/type
      ARM: Kirkwood: make kirkwood_disable_mbus_error_propagation() static
      ARM: orion5x: make orion5x_legacy_handle_irq static
      ...

commit 435ebcbc9fee4e8af037d293c89de60be3605c66
Author: Kefeng Wang <wangkefeng.wang@huawei.com>
Date:   Wed Jun 1 14:53:05 2016 +0800

    arm: use of_platform_default_populate() to populate
    
    Use helper of_platform_default_populate() in linux/of_platform
    when possible, instead of calling of_platform_populate() with
    the default match table.
    
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Acked-by: Nicolas Ferre <nicolas.ferre@atmel.com>
    Cc: Nicolas Ferre <nicolas.ferre@atmel.com>
    Cc: Krzysztof Halasa <khalasa@piap.pl>
    Cc: Sekhar Nori <nsekhar@ti.com>
    Cc: Shawn Guo <shawnguo@kernel.org>
    Cc: Russell King <linux@arm.linux.org.uk>
    Cc: Roland Stigge <stigge@antcom.de>
    Cc: Jason Cooper <jason@lakedaemon.net>
    Cc: Ray Jui <rjui@broadcom.com>
    Cc: Viresh Kumar <vireshk@kernel.org>
    Cc: Stephen Warren <swarren@wwwdotorg.org>
    Cc: Rob Herring <robh@kernel.org>
    Cc: Michal Simek <michal.simek@xilinx.com>
    Signed-off-by: Kefeng Wang <wangkefeng.wang@huawei.com>
    Signed-off-by: Rob Herring <robh@kernel.org>

diff --git a/arch/arm/mach-imx/mach-imx6sl.c b/arch/arm/mach-imx/mach-imx6sl.c
index 300326373166..37ae87d6e0e9 100644
--- a/arch/arm/mach-imx/mach-imx6sl.c
+++ b/arch/arm/mach-imx/mach-imx6sl.c
@@ -52,7 +52,7 @@ static void __init imx6sl_init_machine(void)
 	if (parent == NULL)
 		pr_warn("failed to initialize soc device\n");
 
-	of_platform_populate(NULL, of_default_bus_match_table, NULL, parent);
+	of_platform_default_populate(NULL, NULL, parent);
 
 	imx6sl_fec_init();
 	imx_anatop_init();

commit 510aca642040cfb05e392218f6540ea35af51916
Author: Andrey Smirnov <andrew.smirnov@gmail.com>
Date:   Sat Jun 18 18:09:31 2016 -0700

    ARM: i.MX: Do not explicitly call l2x0_of_init()
    
    There's no need to explicitly call l2x0_of_init() since it will be
    called as a part of init_IRQ() (see arch/arm/kernel/irq.c for
    details). This way we can simplify imx_init_l2cache() and ditch the call
    to it on i.MX35 (which does not claim compatibility with
    "arm,pl310-cache") alltogether.
    
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Suggested-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Andrey Smirnov <andrew.smirnov@gmail.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>

diff --git a/arch/arm/mach-imx/mach-imx6sl.c b/arch/arm/mach-imx/mach-imx6sl.c
index 300326373166..f9a9a362a88a 100644
--- a/arch/arm/mach-imx/mach-imx6sl.c
+++ b/arch/arm/mach-imx/mach-imx6sl.c
@@ -75,6 +75,8 @@ static const char * const imx6sl_dt_compat[] __initconst = {
 };
 
 DT_MACHINE_START(IMX6SL, "Freescale i.MX6 SoloLite (Device Tree)")
+	.l2c_aux_val 	= 0,
+	.l2c_aux_mask	= ~0,
 	.init_irq	= imx6sl_init_irq,
 	.init_machine	= imx6sl_init_machine,
 	.init_late      = imx6sl_init_late,

commit 35e2916f70e3be767c5c8ef6cc80bc5398b8914c
Author: Shawn Guo <shawn.guo@linaro.org>
Date:   Wed Apr 29 13:07:03 2015 +0800

    ARM: imx6: initialize CCM_CLPCR_LPM into RUN mode earlier
    
    Commit 4631960d26da ("ARM: imx6: set initial power mode in pm function")
    moves imx6_set_lpm() from clock init function into
    imx6_pm_common_init().  This causes a hang when cpuidle support is
    enabled.  The reason for that is ARM core clock is shut down
    unexpectedly by WAIT mode.  It happens with the following call stack:
    
        cpuidle_register_governor()
            cpuidle_switch_governor()
                cpuidle_uninstall_idle_handler()
                    synchronize_sched()
                        wait_rcu_gp()
                            wait_for_completion()
    
    When wait_for_completion() is called as above, all cores are idle/WFI.
    Hence, the reset value of CCM_CLPCR_LPM - WAIT mode, will trigger a
    hardware shutdown of the ARM core clock.
    
    To fix the regression, we need to ensure that CCM_CLPCR_LPM is
    initialized into RUN mode earlier than cpuidle governor registration,
    which is a postcore_initcall.  This patch creates function
    imx6_pm_ccm_init() to map CCM block and initialize CCM_CLPCR_LPM into
    RUN mode, and have the function called from machine .init_irq hook,
    which should be early enough.
    
    Reported-by: Kevin Hilman <khilman@kernel.org>
    Fixes: 8fb76a07e2cb ("ARM: imx6: set initial power mode in pm function")
    Tested-by: Kevin Hilman <khilman@linaro.org>
    Tested-by: Tyler Baker <tyler.baker@linaro.org>
    Signed-off-by: Shawn Guo <shawn.guo@linaro.org>

diff --git a/arch/arm/mach-imx/mach-imx6sl.c b/arch/arm/mach-imx/mach-imx6sl.c
index 12a1b098fc6a..300326373166 100644
--- a/arch/arm/mach-imx/mach-imx6sl.c
+++ b/arch/arm/mach-imx/mach-imx6sl.c
@@ -66,6 +66,7 @@ static void __init imx6sl_init_irq(void)
 	imx_init_l2cache();
 	imx_src_init();
 	irqchip_init();
+	imx6_pm_ccm_init("fsl,imx6sl-ccm");
 }
 
 static const char * const imx6sl_dt_compat[] __initconst = {

commit 14517564795a5cd22e2da3119037f9883383fae9
Author: Marc Zyngier <marc.zyngier@arm.com>
Date:   Fri Mar 13 16:05:37 2015 +0000

    ARM: imx6: Warn when an old DT is detected
    
    Now that the GPC has been converted to be a full blown irqchip
    (and not a mole on the side of the GIC), booting a new kernel
    with an old DT is likely to result in a rough ride for the user.
    
    This patch makes sure such a situation is promptly detected and
    the user made aware that a DT update is in order.
    
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Acked-by: Jason Cooper <jason@lakedaemon.net>
    Signed-off-by: Shawn Guo <shawn.guo@linaro.org>

diff --git a/arch/arm/mach-imx/mach-imx6sl.c b/arch/arm/mach-imx/mach-imx6sl.c
index d39c274910c5..12a1b098fc6a 100644
--- a/arch/arm/mach-imx/mach-imx6sl.c
+++ b/arch/arm/mach-imx/mach-imx6sl.c
@@ -61,6 +61,7 @@ static void __init imx6sl_init_machine(void)
 
 static void __init imx6sl_init_irq(void)
 {
+	imx_gpc_check_dt();
 	imx_init_revision_from_anatop();
 	imx_init_l2cache();
 	imx_src_init();

commit b923ff6af0d5a806a3996dac6d4393cd9792d0f4
Author: Marc Zyngier <marc.zyngier@arm.com>
Date:   Mon Feb 23 17:45:18 2015 +0000

    ARM: imx6: convert GPC to stacked domains
    
    IMX6 has been (ab)using the gic_arch_extn to provide
    wakeup from suspend, and it makes a lot of sense to convert
    this code to use stacked domains instead.
    
    This patch does just this, updating the DT files to actually
    reflect what the HW provides.
    
    BIG FAT WARNING: because the DTs were so far lying by not
    exposing the fact that the GPC block is actually the first
    interrupt controller in the chain, kernels with this patch
    applied wont have any suspend-resume facility when booted
    with old DTs, and old kernels with updated DTs won't even boot.
    
    Tested-by: Stefan Agner <stefan@agner.ch>
    Acked-by: Stefan Agner <stefan@agner.ch>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Shawn Guo <shawn.guo@linaro.org>

diff --git a/arch/arm/mach-imx/mach-imx6sl.c b/arch/arm/mach-imx/mach-imx6sl.c
index 24bfaaf944c8..d39c274910c5 100644
--- a/arch/arm/mach-imx/mach-imx6sl.c
+++ b/arch/arm/mach-imx/mach-imx6sl.c
@@ -64,7 +64,6 @@ static void __init imx6sl_init_irq(void)
 	imx_init_revision_from_anatop();
 	imx_init_l2cache();
 	imx_src_init();
-	imx_gpc_init();
 	irqchip_init();
 }
 

commit b50e7df946138399832af8f2b067fa6c3256a005
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Fri Nov 14 16:53:57 2014 +0100

    ARM: imx: Remove unneeded .map_io initialization
    
    If machine_desc.map_io is not set, devicemaps_init() in the common ARM
    code will call debug_ll_io_init().
    
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Shawn Guo <shawn.guo@linaro.org>

diff --git a/arch/arm/mach-imx/mach-imx6sl.c b/arch/arm/mach-imx/mach-imx6sl.c
index 65f4b0df9b0a..24bfaaf944c8 100644
--- a/arch/arm/mach-imx/mach-imx6sl.c
+++ b/arch/arm/mach-imx/mach-imx6sl.c
@@ -74,7 +74,6 @@ static const char * const imx6sl_dt_compat[] __initconst = {
 };
 
 DT_MACHINE_START(IMX6SL, "Freescale i.MX6 SoloLite (Device Tree)")
-	.map_io		= debug_ll_io_init,
 	.init_irq	= imx6sl_init_irq,
 	.init_machine	= imx6sl_init_machine,
 	.init_late      = imx6sl_init_late,

commit 08ae9646468c636098f689a72194778b15c9d94a
Author: Jingchang Lu <jingchang.lu@freescale.com>
Date:   Fri Oct 31 17:39:53 2014 +0800

    ARM: imx: clean up machine mxc_arch_reset_init_dt reset init
    
    System restart mechanism has been changed with the introduction
    of "kernel restart handler call chain support". The imx2 watchdog
    based restart handler has been moved to the driver, and these
    restart can be removed from the machine layer.
    
    This patch cleans up the device tree version machine reset init with
    mxc_arch_reset_init_dt and removes corresponding .restart handler,
    for the .init_machine that can be handled by system default after
    removing the mxc_arch_reset_init_dt, the .init_machine is also removed.
    
    Signed-off-by: Jingchang Lu <jingchang.lu@freescale.com>
    Signed-off-by: Shawn Guo <shawn.guo@linaro.org>

diff --git a/arch/arm/mach-imx/mach-imx6sl.c b/arch/arm/mach-imx/mach-imx6sl.c
index ed263a21d928..65f4b0df9b0a 100644
--- a/arch/arm/mach-imx/mach-imx6sl.c
+++ b/arch/arm/mach-imx/mach-imx6sl.c
@@ -48,8 +48,6 @@ static void __init imx6sl_init_machine(void)
 {
 	struct device *parent;
 
-	mxc_arch_reset_init_dt();
-
 	parent = imx_soc_device_init();
 	if (parent == NULL)
 		pr_warn("failed to initialize soc device\n");
@@ -81,5 +79,4 @@ DT_MACHINE_START(IMX6SL, "Freescale i.MX6 SoloLite (Device Tree)")
 	.init_machine	= imx6sl_init_machine,
 	.init_late      = imx6sl_init_late,
 	.dt_compat	= imx6sl_dt_compat,
-	.restart	= mxc_restart,
 MACHINE_END

commit 8756dd924df6f4199368bee426dc8b2da0cfc6d6
Author: Shawn Guo <shawn.guo@freescale.com>
Date:   Tue Jul 1 16:03:00 2014 +0800

    ARM: imx: mark .dt_compat as const
    
    Otherwise GCC will mark the .init.rodata section R/W, which causes
    a compile error once we add other real R/O data.
    
    Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
    Signed-off-by: Shawn Guo <shawn.guo@freescale.com>

diff --git a/arch/arm/mach-imx/mach-imx6sl.c b/arch/arm/mach-imx/mach-imx6sl.c
index ad323385115c..ed263a21d928 100644
--- a/arch/arm/mach-imx/mach-imx6sl.c
+++ b/arch/arm/mach-imx/mach-imx6sl.c
@@ -70,7 +70,7 @@ static void __init imx6sl_init_irq(void)
 	irqchip_init();
 }
 
-static const char *imx6sl_dt_compat[] __initconst = {
+static const char * const imx6sl_dt_compat[] __initconst = {
 	"fsl,imx6sl",
 	NULL,
 };

commit df595746fa69db2e36d89677df26ba51f9706c1b
Author: Anson Huang <b20788@freescale.com>
Date:   Fri Jan 17 11:39:05 2014 +0800

    ARM: imx: add suspend in ocram support for i.mx6q
    
    When system enter suspend, we can set the DDR IO to
    high-Z state to save DDR IOs' power consumption, this
    operation can save many power(from ~26mA@1.5V to ~15mA@1.5V,
    measured on i.MX6Q SabreSD board, R25) of DDR IOs. To
    achieve that, we need to copy the suspend code to ocram
    and run the low level hardware related code(set DDR IOs
    to high-Z state) in ocram.
    
    If there is no ocram space available, then system will
    still do suspend in external DDR, hence no DDR IOs will
    be set to high-Z.
    
    The OCRAM usage layout is as below,
    
    ocram suspend region(4K currently):
    ======================== high address ======================
                                  .
                                  .
                                  .
                                  ^
                                  ^
                                  ^
                          imx6_suspend code
                 PM_INFO structure(imx6_cpu_pm_info)
    ======================== low address =======================
    
    Reviewed-by: Sascha Hauer <s.hauer@pengutronix.de>
    Signed-off-by: Anson Huang <b20788@freescale.com>
    Signed-off-by: Shawn Guo <shawn.guo@linaro.org>

diff --git a/arch/arm/mach-imx/mach-imx6sl.c b/arch/arm/mach-imx/mach-imx6sl.c
index a26fdb2b1a6f..ad323385115c 100644
--- a/arch/arm/mach-imx/mach-imx6sl.c
+++ b/arch/arm/mach-imx/mach-imx6sl.c
@@ -58,8 +58,7 @@ static void __init imx6sl_init_machine(void)
 
 	imx6sl_fec_init();
 	imx_anatop_init();
-	/* Reuse imx6q pm code */
-	imx6q_pm_init();
+	imx6sl_pm_init();
 }
 
 static void __init imx6sl_init_irq(void)

commit 751f7e999afcef157527f5f6f06529c93f8a4022
Author: Anson Huang <b20788@freescale.com>
Date:   Thu Jan 9 16:03:16 2014 +0800

    ARM: imx: add cpuidle support for i.mx6sl
    
    Add cpuidle support for i.MX6SL, currently only support
    two cpuidle levels(ARM wfi and WAIT mode), and add software
    workaround for WAIT mode errata as below:
    
    ERR005311 CCM: After exit from WAIT mode, unwanted interrupt(s) taken
              during WAIT mode entry process could cause cache memory
              corruption.
    
    Software workaround:
        To prevent this issue from occurring, software should ensure that
    the ARM to IPG clock ratio is less than 12:5 (that is < 2.4x), before
    entering WAIT mode.
    
    Signed-off-by: Anson Huang <b20788@freescale.com>
    Signed-off-by: Shawn Guo <shawn.guo@linaro.org>

diff --git a/arch/arm/mach-imx/mach-imx6sl.c b/arch/arm/mach-imx/mach-imx6sl.c
index 0f4fd4c0ab8e..a26fdb2b1a6f 100644
--- a/arch/arm/mach-imx/mach-imx6sl.c
+++ b/arch/arm/mach-imx/mach-imx6sl.c
@@ -17,6 +17,7 @@
 #include <asm/mach/map.h>
 
 #include "common.h"
+#include "cpuidle.h"
 
 static void __init imx6sl_fec_init(void)
 {
@@ -39,6 +40,8 @@ static void __init imx6sl_init_late(void)
 	/* imx6sl reuses imx6q cpufreq driver */
 	if (IS_ENABLED(CONFIG_ARM_IMX6Q_CPUFREQ))
 		platform_device_register_simple("imx6q-cpufreq", -1, NULL, 0);
+
+	imx6sl_cpuidle_init();
 }
 
 static void __init imx6sl_init_machine(void)

commit 1ed4aaebcd2a36b20c3e5c8bd56712b453730090
Author: John Tobias <john.tobias.ph@gmail.com>
Date:   Thu Dec 19 12:35:37 2013 -0800

    ARM: imx: Add cpu frequency scaling support
    
    Re-using iMX6Q driver for cpu frequency scaling.
    
    Signed-off-by: John Tobias <john.tobias.ph@gmail.com>
    Signed-off-by: Shawn Guo <shawn.guo@linaro.org>

diff --git a/arch/arm/mach-imx/mach-imx6sl.c b/arch/arm/mach-imx/mach-imx6sl.c
index cca183a11291..0f4fd4c0ab8e 100644
--- a/arch/arm/mach-imx/mach-imx6sl.c
+++ b/arch/arm/mach-imx/mach-imx6sl.c
@@ -34,6 +34,13 @@ static void __init imx6sl_fec_init(void)
 	}
 }
 
+static void __init imx6sl_init_late(void)
+{
+	/* imx6sl reuses imx6q cpufreq driver */
+	if (IS_ENABLED(CONFIG_ARM_IMX6Q_CPUFREQ))
+		platform_device_register_simple("imx6q-cpufreq", -1, NULL, 0);
+}
+
 static void __init imx6sl_init_machine(void)
 {
 	struct device *parent;
@@ -70,6 +77,7 @@ DT_MACHINE_START(IMX6SL, "Freescale i.MX6 SoloLite (Device Tree)")
 	.map_io		= debug_ll_io_init,
 	.init_irq	= imx6sl_init_irq,
 	.init_machine	= imx6sl_init_machine,
+	.init_late      = imx6sl_init_late,
 	.dt_compat	= imx6sl_dt_compat,
 	.restart	= mxc_restart,
 MACHINE_END

commit df79bc9c274f2a511d350a99439591ea0415aea4
Author: Shawn Guo <shawn.guo@linaro.org>
Date:   Mon Dec 9 14:04:35 2013 +0800

    ARM: imx: use __initconst for const init definition
    
    0-DAY kernel build testing backend reports the following.
    
     scripts/checkpatch.pl 0001-ARM-imx-add-support-code-for-IMX50-based-machines.patch
     # many are suggestions rather than must-fix
    
     ERROR: Use of const init definition must use __initconst
     #80: arch/arm/mach-imx/mach-imx50.c:26:
     +static const char *imx50_dt_board_compat[] __initdata = {
    
    While at it, fix the error globally for IMX platform.
    
    Reported-by: Fengguang Wu <fengguang.wu@intel.com>
    Acked-by: Greg Ungerer <gerg@uclinux.org>
    Signed-off-by: Shawn Guo <shawn.guo@linaro.org>

diff --git a/arch/arm/mach-imx/mach-imx6sl.c b/arch/arm/mach-imx/mach-imx6sl.c
index 2f952e3fcf89..cca183a11291 100644
--- a/arch/arm/mach-imx/mach-imx6sl.c
+++ b/arch/arm/mach-imx/mach-imx6sl.c
@@ -61,7 +61,7 @@ static void __init imx6sl_init_irq(void)
 	irqchip_init();
 }
 
-static const char *imx6sl_dt_compat[] __initdata = {
+static const char *imx6sl_dt_compat[] __initconst = {
 	"fsl,imx6sl",
 	NULL,
 };

commit 9ba64fe3eb461b95bf11436a13db0d9c79465514
Author: Shawn Guo <shawn.guo@linaro.org>
Date:   Thu Oct 17 10:07:09 2013 +0800

    ARM: imx: enable suspend for imx6sl
    
    The imx6sl low power mode implementation inherits imx6q/dl one,
    and pm-imx6q.c can just work for imx6sl with some minor updates.
    Let's enable imx6sl suspend support by reusing pm-imx6q.c and use
    cpu_is_imxXX() to handle the those minor differences between imx6sl
    and imx6q/dl.
    
    Signed-off-by: Shawn Guo <shawn.guo@linaro.org>

diff --git a/arch/arm/mach-imx/mach-imx6sl.c b/arch/arm/mach-imx/mach-imx6sl.c
index f01aaabd3254..2f952e3fcf89 100644
--- a/arch/arm/mach-imx/mach-imx6sl.c
+++ b/arch/arm/mach-imx/mach-imx6sl.c
@@ -47,6 +47,9 @@ static void __init imx6sl_init_machine(void)
 	of_platform_populate(NULL, of_default_bus_match_table, NULL, parent);
 
 	imx6sl_fec_init();
+	imx_anatop_init();
+	/* Reuse imx6q pm code */
+	imx6q_pm_init();
 }
 
 static void __init imx6sl_init_irq(void)

commit a28875462bd493fc1bb041c21f811b4a0577a497
Author: Shawn Guo <shawn.guo@linaro.org>
Date:   Tue Aug 13 16:59:28 2013 +0800

    ARM: imx6: report soc info via soc device
    
    The patch enables soc bus infrastructure and adds a function
    imx_soc_device_init() to report soc info via soc device interface for
    imx6qdl and imx6sl.  With the support, user space can get soc related
    info by looking at sysfs like below.
    
      $ cat /sys/devices/soc0/machine
      Freescale i.MX6 Quad SABRE Smart Device Board
      $ cat /sys/devices/soc0/family
      Freescale i.MX
      $ cat /sys/devices/soc0/soc_id
      i.MX6Q
      $ cat /sys/devices/soc0/revision
      1.2
    
    Signed-off-by: Shawn Guo <shawn.guo@linaro.org>

diff --git a/arch/arm/mach-imx/mach-imx6sl.c b/arch/arm/mach-imx/mach-imx6sl.c
index 4ce9ae58ed0c..f01aaabd3254 100644
--- a/arch/arm/mach-imx/mach-imx6sl.c
+++ b/arch/arm/mach-imx/mach-imx6sl.c
@@ -36,9 +36,15 @@ static void __init imx6sl_fec_init(void)
 
 static void __init imx6sl_init_machine(void)
 {
+	struct device *parent;
+
 	mxc_arch_reset_init_dt();
 
-	of_platform_populate(NULL, of_default_bus_match_table, NULL, NULL);
+	parent = imx_soc_device_init();
+	if (parent == NULL)
+		pr_warn("failed to initialize soc device\n");
+
+	of_platform_populate(NULL, of_default_bus_match_table, NULL, parent);
 
 	imx6sl_fec_init();
 }

commit d8ce823fb34e6b50b1d9cb804c1067546eab9cee
Author: Shawn Guo <shawn.guo@linaro.org>
Date:   Tue Aug 13 16:54:05 2013 +0800

    ARM: imx: use imx_init_revision_from_anatop() on imx6sl
    
    Add imx6sl support into imx_init_revision_from_anatop(), so that it can
    be used to initialize cpu type and revision on imx6sl.
    
    Signed-off-by: Shawn Guo <shawn.guo@linaro.org>

diff --git a/arch/arm/mach-imx/mach-imx6sl.c b/arch/arm/mach-imx/mach-imx6sl.c
index 21cde21daf9b..4ce9ae58ed0c 100644
--- a/arch/arm/mach-imx/mach-imx6sl.c
+++ b/arch/arm/mach-imx/mach-imx6sl.c
@@ -45,6 +45,7 @@ static void __init imx6sl_init_machine(void)
 
 static void __init imx6sl_init_irq(void)
 {
+	imx_init_revision_from_anatop();
 	imx_init_l2cache();
 	imx_src_init();
 	imx_gpc_init();

commit a9aec30dcf2aae5929bc43ada552a33c8d737967
Author: Fugang Duan <B38611@freescale.com>
Date:   Wed Sep 4 10:58:17 2013 +0800

    ARM: imx6sl: config iomux-gpr1 to select clock for fec
    
    Config iomux-gpr1 to select clock source for fec system clock.
    Clear gpr1[14], gpr1[18-17] bit to select the fec clock source
    from internal anatop PLL.
    
    Signed-off-by: Fugang Duan <B38611@freescale.com>
    Signed-off-by: Shawn Guo <shawn.guo@linaro.org>

diff --git a/arch/arm/mach-imx/mach-imx6sl.c b/arch/arm/mach-imx/mach-imx6sl.c
index c70bd7c64974..21cde21daf9b 100644
--- a/arch/arm/mach-imx/mach-imx6sl.c
+++ b/arch/arm/mach-imx/mach-imx6sl.c
@@ -10,16 +10,37 @@
 #include <linux/irqchip.h>
 #include <linux/of.h>
 #include <linux/of_platform.h>
+#include <linux/mfd/syscon.h>
+#include <linux/mfd/syscon/imx6q-iomuxc-gpr.h>
+#include <linux/regmap.h>
 #include <asm/mach/arch.h>
 #include <asm/mach/map.h>
 
 #include "common.h"
 
+static void __init imx6sl_fec_init(void)
+{
+	struct regmap *gpr;
+
+	/* set FEC clock from internal PLL clock source */
+	gpr = syscon_regmap_lookup_by_compatible("fsl,imx6sl-iomuxc-gpr");
+	if (!IS_ERR(gpr)) {
+		regmap_update_bits(gpr, IOMUXC_GPR1,
+			IMX6SL_GPR1_FEC_CLOCK_MUX2_SEL_MASK, 0);
+		regmap_update_bits(gpr, IOMUXC_GPR1,
+			IMX6SL_GPR1_FEC_CLOCK_MUX1_SEL_MASK, 0);
+	} else {
+		pr_err("failed to find fsl,imx6sl-iomux-gpr regmap\n");
+	}
+}
+
 static void __init imx6sl_init_machine(void)
 {
 	mxc_arch_reset_init_dt();
 
 	of_platform_populate(NULL, of_default_bus_match_table, NULL, NULL);
+
+	imx6sl_fec_init();
 }
 
 static void __init imx6sl_init_irq(void)

commit 4d9d18a560a50920691865c1efdad6577616eaa9
Author: Sebastian Hesselbarth <sebastian.hesselbarth@gmail.com>
Date:   Tue Aug 27 14:50:00 2013 +0200

    ARM: imx: remove custom .init_time hook
    
    With arch/arm calling of_clk_init(NULL) from time_init(), we can now
    remove custom .init_time hooks.
    
    Signed-off-by: Sebastian Hesselbarth <sebastian.hesselbarth@gmail.com>
    Acked-by: Shawn Guo <shawn.guo@linaro.org>

diff --git a/arch/arm/mach-imx/mach-imx6sl.c b/arch/arm/mach-imx/mach-imx6sl.c
index 0d75dc54f715..c70bd7c64974 100644
--- a/arch/arm/mach-imx/mach-imx6sl.c
+++ b/arch/arm/mach-imx/mach-imx6sl.c
@@ -7,7 +7,6 @@
  *
  */
 
-#include <linux/clk-provider.h>
 #include <linux/irqchip.h>
 #include <linux/of.h>
 #include <linux/of_platform.h>
@@ -31,11 +30,6 @@ static void __init imx6sl_init_irq(void)
 	irqchip_init();
 }
 
-static void __init imx6sl_timer_init(void)
-{
-	of_clk_init(NULL);
-}
-
 static const char *imx6sl_dt_compat[] __initdata = {
 	"fsl,imx6sl",
 	NULL,
@@ -44,7 +38,6 @@ static const char *imx6sl_dt_compat[] __initdata = {
 DT_MACHINE_START(IMX6SL, "Freescale i.MX6 SoloLite (Device Tree)")
 	.map_io		= debug_ll_io_init,
 	.init_irq	= imx6sl_init_irq,
-	.init_time	= imx6sl_timer_init,
 	.init_machine	= imx6sl_init_machine,
 	.dt_compat	= imx6sl_dt_compat,
 	.restart	= mxc_restart,

commit 73dada7fe7e59e6fa69b8aec4683575638e18411
Author: Shawn Guo <shawn.guo@linaro.org>
Date:   Mon Jul 8 21:52:33 2013 +0800

    ARM: imx: use imx specific L2 init function on imx6sl
    
    The optimized L2 prefect and power setting done in imx_init_l2cache()
    can also benefit imx6sl, so let's call the function on imx6sl as well.
    
    Signed-off-by: Shawn Guo <shawn.guo@linaro.org>
    Acked-by: Dirk Behme <dirk.behme@de.bosch.com>

diff --git a/arch/arm/mach-imx/mach-imx6sl.c b/arch/arm/mach-imx/mach-imx6sl.c
index 132db2609507..0d75dc54f715 100644
--- a/arch/arm/mach-imx/mach-imx6sl.c
+++ b/arch/arm/mach-imx/mach-imx6sl.c
@@ -11,7 +11,6 @@
 #include <linux/irqchip.h>
 #include <linux/of.h>
 #include <linux/of_platform.h>
-#include <asm/hardware/cache-l2x0.h>
 #include <asm/mach/arch.h>
 #include <asm/mach/map.h>
 
@@ -26,7 +25,7 @@ static void __init imx6sl_init_machine(void)
 
 static void __init imx6sl_init_irq(void)
 {
-	l2x0_of_init(0, ~0UL);
+	imx_init_l2cache();
 	imx_src_init();
 	imx_gpc_init();
 	irqchip_init();

commit 53bb71da1c5c14267089218923585840f76e2480
Author: Shawn Guo <shawn.guo@linaro.org>
Date:   Tue May 21 09:58:51 2013 +0800

    ARM: imx6: use common of_clk_init() call to initialize clocks
    
    Instead of explicitly calling clock initialization functions, we can
    declare the functions with CLK_OF_DECLARE() and then call common
    of_clk_init() to have them invoked properly.
    
    Signed-off-by: Shawn Guo <shawn.guo@linaro.org>

diff --git a/arch/arm/mach-imx/mach-imx6sl.c b/arch/arm/mach-imx/mach-imx6sl.c
index 0130ee6284f1..132db2609507 100644
--- a/arch/arm/mach-imx/mach-imx6sl.c
+++ b/arch/arm/mach-imx/mach-imx6sl.c
@@ -7,6 +7,7 @@
  *
  */
 
+#include <linux/clk-provider.h>
 #include <linux/irqchip.h>
 #include <linux/of.h>
 #include <linux/of_platform.h>
@@ -33,7 +34,7 @@ static void __init imx6sl_init_irq(void)
 
 static void __init imx6sl_timer_init(void)
 {
-	imx6sl_clocks_init();
+	of_clk_init(NULL);
 }
 
 static const char *imx6sl_dt_compat[] __initdata = {

commit 31a2fbf70e1cf3fcd6623a928a5547a2c5c6733f
Author: Shawn Guo <shawn.guo@linaro.org>
Date:   Fri May 3 11:24:47 2013 +0800

    ARM: imx: add initial support for imx6sl
    
    Add initial support for i.MX6 SoloLite.
    
    Signed-off-by: Shawn Guo <shawn.guo@linaro.org>

diff --git a/arch/arm/mach-imx/mach-imx6sl.c b/arch/arm/mach-imx/mach-imx6sl.c
new file mode 100644
index 000000000000..0130ee6284f1
--- /dev/null
+++ b/arch/arm/mach-imx/mach-imx6sl.c
@@ -0,0 +1,51 @@
+/*
+ * Copyright 2013 Freescale Semiconductor, Inc.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ *
+ */
+
+#include <linux/irqchip.h>
+#include <linux/of.h>
+#include <linux/of_platform.h>
+#include <asm/hardware/cache-l2x0.h>
+#include <asm/mach/arch.h>
+#include <asm/mach/map.h>
+
+#include "common.h"
+
+static void __init imx6sl_init_machine(void)
+{
+	mxc_arch_reset_init_dt();
+
+	of_platform_populate(NULL, of_default_bus_match_table, NULL, NULL);
+}
+
+static void __init imx6sl_init_irq(void)
+{
+	l2x0_of_init(0, ~0UL);
+	imx_src_init();
+	imx_gpc_init();
+	irqchip_init();
+}
+
+static void __init imx6sl_timer_init(void)
+{
+	imx6sl_clocks_init();
+}
+
+static const char *imx6sl_dt_compat[] __initdata = {
+	"fsl,imx6sl",
+	NULL,
+};
+
+DT_MACHINE_START(IMX6SL, "Freescale i.MX6 SoloLite (Device Tree)")
+	.map_io		= debug_ll_io_init,
+	.init_irq	= imx6sl_init_irq,
+	.init_time	= imx6sl_timer_init,
+	.init_machine	= imx6sl_init_machine,
+	.dt_compat	= imx6sl_dt_compat,
+	.restart	= mxc_restart,
+MACHINE_END
