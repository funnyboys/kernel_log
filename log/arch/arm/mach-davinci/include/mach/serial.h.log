commit 9d6eccb9cce61282a78e62861d958ebb5fb073d2
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Feb 12 22:22:00 2014 +0100

    ARM: davinci: remove tnetv107x support
    
    The tnetv107x support does not compile, and seems to have been broken
    for a while with nobody caring to fix it. So far everyone I asked
    said it's probably dead and completely unused and will never again
    be needed in a future kernel release, so let's delete it.
    
    If someone finds a use for this code later and is able to get it
    to work again, we can always revert the removal.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Sekhar Nori <nsekhar@ti.com>
    Acked-by: Kevin Hilman <khilman@linaro.org>

diff --git a/arch/arm/mach-davinci/include/mach/serial.h b/arch/arm/mach-davinci/include/mach/serial.h
index ce402cd21fa0..d4b4aa87964f 100644
--- a/arch/arm/mach-davinci/include/mach/serial.h
+++ b/arch/arm/mach-davinci/include/mach/serial.h
@@ -23,14 +23,6 @@
 #define DA8XX_UART1_BASE	(IO_PHYS + 0x10c000)
 #define DA8XX_UART2_BASE	(IO_PHYS + 0x10d000)
 
-#define TNETV107X_UART0_BASE	0x08108100
-#define TNETV107X_UART1_BASE	0x08088400
-#define TNETV107X_UART2_BASE	0x08108300
-
-#define TNETV107X_UART0_VIRT	IOMEM(0xfee08100)
-#define TNETV107X_UART1_VIRT	IOMEM(0xfed88400)
-#define TNETV107X_UART2_VIRT	IOMEM(0xfee08300)
-
 /* DaVinci UART register offsets */
 #define UART_DAVINCI_PWREMU		0x0c
 #define UART_DM646X_SCR			0x10

commit 53ed7812841f107786f69e0437831469ffdeeeee
Author: Sekhar Nori <nsekhar@ti.com>
Date:   Tue Sep 10 16:30:21 2013 +0530

    ARM: davinci: fix build breakage with DEBUG_LL
    
    commit fcf7157 ("ARM: davinci: serial: get rid of davinci_uart_config")
    introduced build breakage because of a misplaced
    header file include which cause a bunch of errors when
    the file is included in assembly code (like debug-macro.S)
    
    Fix the build breakage.
    
    Reported-by: Alexander Holler <holler@ahsoftware.de>
    Tested-by: Alexander Holler <holler@ahsoftware.de>
    Signed-off-by: Sekhar Nori <nsekhar@ti.com>

diff --git a/arch/arm/mach-davinci/include/mach/serial.h b/arch/arm/mach-davinci/include/mach/serial.h
index 52b8571b2e70..ce402cd21fa0 100644
--- a/arch/arm/mach-davinci/include/mach/serial.h
+++ b/arch/arm/mach-davinci/include/mach/serial.h
@@ -15,8 +15,6 @@
 
 #include <mach/hardware.h>
 
-#include <linux/platform_device.h>
-
 #define DAVINCI_UART0_BASE	(IO_PHYS + 0x20000)
 #define DAVINCI_UART1_BASE	(IO_PHYS + 0x20400)
 #define DAVINCI_UART2_BASE	(IO_PHYS + 0x20800)
@@ -39,6 +37,8 @@
 #define UART_DM646X_SCR_TX_WATERMARK	0x08
 
 #ifndef __ASSEMBLY__
+#include <linux/platform_device.h>
+
 extern int davinci_serial_init(struct platform_device *);
 #endif
 

commit 323761bb7518d27c62c1514156cb3243930b55c1
Author: Manjunathappa, Prakash <prakash.pm@ti.com>
Date:   Wed Jun 19 14:45:42 2013 +0530

    ARM: davinci: serial: remove davinci_serial_setup_clk()
    
    Get rid of davinci_serial_setup_clk() since its not called
    from multiple places now. Instead initialize clock in
    davinci_serial_init() itself. This also helps get rid of
    "serial_dev" member of struct davinci_soc_info.
    
    Signed-off-by: Manjunathappa, Prakash <prakash.pm@ti.com>
    Suggested-by: Sekhar Nori <nsekhar@ti.com>
    [nsekhar@ti.com: split removal of davinci_serial_setup_clk()
                     into a separate patch.]
    Signed-off-by: Sekhar Nori <nsekhar@ti.com>

diff --git a/arch/arm/mach-davinci/include/mach/serial.h b/arch/arm/mach-davinci/include/mach/serial.h
index 36bf59155f4b..52b8571b2e70 100644
--- a/arch/arm/mach-davinci/include/mach/serial.h
+++ b/arch/arm/mach-davinci/include/mach/serial.h
@@ -40,7 +40,6 @@
 
 #ifndef __ASSEMBLY__
 extern int davinci_serial_init(struct platform_device *);
-extern int davinci_serial_setup_clk(unsigned instance, unsigned int *rate);
 #endif
 
 #endif /* __ASM_ARCH_SERIAL_H */

commit fcf7157ba3b50e57653544421250ebbe81a33d81
Author: Manjunathappa, Prakash <prakash.pm@ti.com>
Date:   Wed Jun 19 14:45:42 2013 +0530

    ARM: davinci: serial: get rid of davinci_uart_config
    
    "struct davinci_uart_config" was introduced to specify
    UART ports brought out or enabled on the board. But
    none of the boards use it for that purpose and we are
    not going to add anymore board files, so remove the
    structure.
    
    Signed-off-by: Manjunathappa, Prakash <prakash.pm@ti.com>
    Suggested-by: Sekhar Nori <nsekhar@ti.com>
    [nsekhar@ti.com: split patch to remove davinci_serial_setup_clk()
                     changes.]
    Signed-off-by: Sekhar Nori <nsekhar@ti.com>

diff --git a/arch/arm/mach-davinci/include/mach/serial.h b/arch/arm/mach-davinci/include/mach/serial.h
index 62ad300440f5..36bf59155f4b 100644
--- a/arch/arm/mach-davinci/include/mach/serial.h
+++ b/arch/arm/mach-davinci/include/mach/serial.h
@@ -15,6 +15,8 @@
 
 #include <mach/hardware.h>
 
+#include <linux/platform_device.h>
+
 #define DAVINCI_UART0_BASE	(IO_PHYS + 0x20000)
 #define DAVINCI_UART1_BASE	(IO_PHYS + 0x20400)
 #define DAVINCI_UART2_BASE	(IO_PHYS + 0x20800)
@@ -37,12 +39,7 @@
 #define UART_DM646X_SCR_TX_WATERMARK	0x08
 
 #ifndef __ASSEMBLY__
-struct davinci_uart_config {
-	/* Bit field of UARTs present; bit 0 --> UART0 */
-	unsigned int enabled_uarts;
-};
-
-extern int davinci_serial_init(struct davinci_uart_config *);
+extern int davinci_serial_init(struct platform_device *);
 extern int davinci_serial_setup_clk(unsigned instance, unsigned int *rate);
 #endif
 

commit d027db132b395dabfac208e52a7e510e441bb9d2
Merge: d01e4afdbb65 5faf7cbb848d
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Dec 12 12:05:15 2012 -0800

    Merge tag 'soc' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc
    
    Pull ARM SoC updates from Olof Johansson:
     "This contains the bulk of new SoC development for this merge window.
    
      Two new platforms have been added, the sunxi platforms (Allwinner A1x
      SoCs) by Maxime Ripard, and a generic Broadcom platform for a new
      series of ARMv7 platforms from them, where the hope is that we can
      keep the platform code generic enough to have them all share one mach
      directory.  The new Broadcom platform is contributed by Christian
      Daudt.
    
      Highbank has grown support for Calxeda's next generation of hardware,
      ECX-2000.
    
      clps711x has seen a lot of cleanup from Alexander Shiyan, and he's
      also taken on maintainership of the platform.
    
      Beyond this there has been a bunch of work from a number of people on
      converting more platforms to IRQ domains, pinctrl conversion, cleanup
      and general feature enablement across most of the active platforms."
    
    Fix up trivial conflicts as per Olof.
    
    * tag 'soc' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc: (174 commits)
      mfd: vexpress-sysreg: Remove LEDs code
      irqchip: irq-sunxi: Add terminating entry for sunxi_irq_dt_ids
      clocksource: sunxi_timer: Add terminating entry for sunxi_timer_dt_ids
      irq: versatile: delete dangling variable
      ARM: sunxi: add missing include for mdelay()
      ARM: EXYNOS: Avoid early use of of_machine_is_compatible()
      ARM: dts: add node for PL330 MDMA1 controller for exynos4
      ARM: EXYNOS: Add support for secondary CPU bring-up on Exynos4412
      ARM: EXYNOS: add UART3 to DEBUG_LL ports
      ARM: S3C24XX: Add clkdev entry for camif-upll clock
      ARM: SAMSUNG: Add s3c24xx/s3c64xx CAMIF GPIO setup helpers
      ARM: sunxi: Add missing sun4i.dtsi file
      pinctrl: samsung: Do not initialise statics to 0
      ARM i.MX6: remove gate_mask from pllv3
      ARM i.MX6: Fix ethernet PLL clocks
      ARM i.MX6: rename PLLs according to datasheet
      ARM i.MX6: Add pwm support
      ARM i.MX51: Add pwm support
      ARM i.MX53: Add pwm support
      ARM: mx5: Replace clk_register_clkdev with clock DT lookup
      ...

commit 5604f69eec0aed392cea2909ee49dd834b782fac
Author: Henrique Camargo <henrique@henriquecamargo.com>
Date:   Thu Sep 13 15:04:36 2012 -0300

    ARM: davinci: serial.h: fix uart number in the comment
    
    The bit 0 of the field is uart0 and the bit 1 is uart1 and so on.
    
    Signed-off-by: Henrique Camargo <henrique@henriquecamargo.com>
    Signed-off-by: Sekhar Nori <nsekhar@ti.com>

diff --git a/arch/arm/mach-davinci/include/mach/serial.h b/arch/arm/mach-davinci/include/mach/serial.h
index 46b3cd11c3c2..86a01fa6d3fe 100644
--- a/arch/arm/mach-davinci/include/mach/serial.h
+++ b/arch/arm/mach-davinci/include/mach/serial.h
@@ -38,7 +38,7 @@
 
 #ifndef __ASSEMBLY__
 struct davinci_uart_config {
-	/* Bit field of UARTs present; bit 0 --> UART1 */
+	/* Bit field of UARTs present; bit 0 --> UART0 */
 	unsigned int enabled_uarts;
 };
 

commit 76d57ce6ef6060f611c14675249b7300a3c96368
Author: Sekhar Nori <nsekhar@ti.com>
Date:   Wed Aug 29 22:48:52 2012 +0530

    ARM: davinci: serial: provide API to initialze UART clocks
    
    Provide an API to initialize a UART clock. Refactor existing
    davinci_serial_init() to separate out the part which enables
    the clock.
    
    This will later be used to help DA850 DT boot support.
    
    Signed-off-by: Sekhar Nori <nsekhar@ti.com>

diff --git a/arch/arm/mach-davinci/include/mach/serial.h b/arch/arm/mach-davinci/include/mach/serial.h
index 46b3cd11c3c2..2d9d921e8b01 100644
--- a/arch/arm/mach-davinci/include/mach/serial.h
+++ b/arch/arm/mach-davinci/include/mach/serial.h
@@ -43,6 +43,7 @@ struct davinci_uart_config {
 };
 
 extern int davinci_serial_init(struct davinci_uart_config *);
+extern int davinci_serial_setup_clk(unsigned instance, unsigned int *rate);
 #endif
 
 #endif /* __ASM_ARCH_SERIAL_H */

commit 477099f189101a6675d93782164446015a3633bd
Author: Uwe Kleine-KÃ¶nig <u.kleine-koenig@pengutronix.de>
Date:   Thu Mar 22 10:29:23 2012 +0100

    ARM: davinci: implement DEBUG_LL port choice
    
    Apart from the necessity to do this change for multi-platform kernels
    the previous logic depended on the zImage decompressor to write the
    physical and virtual address to a magic memory location.
    If the decompressor is unused or not correctly configured for the
    current machid, the addruart macro was an infinite loop. Moreover
    debugging the early zImage code was not possible either.
    
    Signed-off-by: Uwe Kleine-KÃ¶nig <u.kleine-koenig@pengutronix.de>
    [nsekhar@ti.com: add braces in _DEBUG_LL_ENTRY() macro to fix checkpatch
    error. Fix debug port choice config dependency for traditional DaVincis.
    Modify debug port config names and add help text.]
    Signed-off-by: Sekhar Nori <nsekhar@ti.com>

diff --git a/arch/arm/mach-davinci/include/mach/serial.h b/arch/arm/mach-davinci/include/mach/serial.h
index e347d88fef91..46b3cd11c3c2 100644
--- a/arch/arm/mach-davinci/include/mach/serial.h
+++ b/arch/arm/mach-davinci/include/mach/serial.h
@@ -15,16 +15,6 @@
 
 #include <mach/hardware.h>
 
-/*
- * Stolen area that contains debug uart physical and virtual addresses.  These
- * addresses are filled in by the uncompress.h code, and are used by the debug
- * macros in debug-macro.S.
- *
- * This area sits just below the page tables (see arch/arm/kernel/head.S).
- * We define it as a relative offset from start of usable RAM.
- */
-#define DAVINCI_UART_INFO_OFS	0x3ff8
-
 #define DAVINCI_UART0_BASE	(IO_PHYS + 0x20000)
 #define DAVINCI_UART1_BASE	(IO_PHYS + 0x20400)
 #define DAVINCI_UART2_BASE	(IO_PHYS + 0x20800)

commit e020fe34f8fc5cb42c2f518ea120005b4d01923d
Author: Nicolas Pitre <nicolas.pitre@linaro.org>
Date:   Thu Sep 1 20:32:21 2011 -0400

    ARM: mach-davinci: make DAVINCI_UART_INFO into a relative offset
    
    This is the first step to remove PLAT_PHYS_OFFSET usage from the debug
    UART code.
    
    Signed-off-by: Nicolas Pitre <nicolas.pitre@linaro.org>
    Reviewed-by: Kevin Hilman <khilman@ti.com>
    Tested-by: Kevin Hilman <khilman@ti.com>

diff --git a/arch/arm/mach-davinci/include/mach/serial.h b/arch/arm/mach-davinci/include/mach/serial.h
index c9e6ce185a66..e347d88fef91 100644
--- a/arch/arm/mach-davinci/include/mach/serial.h
+++ b/arch/arm/mach-davinci/include/mach/serial.h
@@ -21,8 +21,9 @@
  * macros in debug-macro.S.
  *
  * This area sits just below the page tables (see arch/arm/kernel/head.S).
+ * We define it as a relative offset from start of usable RAM.
  */
-#define DAVINCI_UART_INFO	(PLAT_PHYS_OFFSET + 0x3ff8)
+#define DAVINCI_UART_INFO_OFS	0x3ff8
 
 #define DAVINCI_UART0_BASE	(IO_PHYS + 0x20000)
 #define DAVINCI_UART1_BASE	(IO_PHYS + 0x20400)

commit 5cf4c80a145d79db928ff55226e731de55c87644
Author: Kevin Hilman <khilman@ti.com>
Date:   Tue Apr 19 16:52:56 2011 -0700

    davinci: fix DEBUG_LL code for p2v changes
    
    Fixup davinci UART low-level debug code for new ARM generic p2v changes.
    
    Based on OMAP changes by Tony Lindgren
    
    Cc: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Kevin Hilman <khilman@ti.com>

diff --git a/arch/arm/mach-davinci/include/mach/serial.h b/arch/arm/mach-davinci/include/mach/serial.h
index 8051110b8ac3..c9e6ce185a66 100644
--- a/arch/arm/mach-davinci/include/mach/serial.h
+++ b/arch/arm/mach-davinci/include/mach/serial.h
@@ -22,7 +22,7 @@
  *
  * This area sits just below the page tables (see arch/arm/kernel/head.S).
  */
-#define DAVINCI_UART_INFO	(PHYS_OFFSET + 0x3ff8)
+#define DAVINCI_UART_INFO	(PLAT_PHYS_OFFSET + 0x3ff8)
 
 #define DAVINCI_UART0_BASE	(IO_PHYS + 0x20000)
 #define DAVINCI_UART1_BASE	(IO_PHYS + 0x20400)

commit 38db050e0bfc8c483e5d7b85feef23d46069ec18
Author: Cyril Chemparathy <cyril@ti.com>
Date:   Tue May 18 12:51:18 2010 -0400

    Davinci: tnetv107x decompresser uart definitions
    
    Added definitions for tnetv107x uart base addresses, and modified base address
    selection for kernel decompressor to check for tnetv107x machine type.
    
    Signed-off-by: Cyril Chemparathy <cyril@ti.com>
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-davinci/include/mach/serial.h b/arch/arm/mach-davinci/include/mach/serial.h
index b21ec224b11d..8051110b8ac3 100644
--- a/arch/arm/mach-davinci/include/mach/serial.h
+++ b/arch/arm/mach-davinci/include/mach/serial.h
@@ -32,6 +32,14 @@
 #define DA8XX_UART1_BASE	(IO_PHYS + 0x10c000)
 #define DA8XX_UART2_BASE	(IO_PHYS + 0x10d000)
 
+#define TNETV107X_UART0_BASE	0x08108100
+#define TNETV107X_UART1_BASE	0x08088400
+#define TNETV107X_UART2_BASE	0x08108300
+
+#define TNETV107X_UART0_VIRT	IOMEM(0xfee08100)
+#define TNETV107X_UART1_VIRT	IOMEM(0xfed88400)
+#define TNETV107X_UART2_VIRT	IOMEM(0xfee08300)
+
 /* DaVinci UART register offsets */
 #define UART_DAVINCI_PWREMU		0x0c
 #define UART_DM646X_SCR			0x10

commit dc2eb76c40590a3c080294d1fbd000c8f70d88a9
Author: Cyril Chemparathy <cyril@ti.com>
Date:   Tue May 18 12:51:17 2010 -0400

    Davinci: generalized debug macros
    
    This patch adopts a debug uart selection similar to the OMAP model.  During
    the boot process, the uncompress code determines the physical and virtual base
    addresses of the board-specific debug uart.  These addresses are then passed
    on to the in-kernel debug macros through a small chunk of memory placed just
    below the page tables (@0x80003ff8).
    
    Signed-off-by: Cyril Chemparathy <cyril@ti.com>
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-davinci/include/mach/serial.h b/arch/arm/mach-davinci/include/mach/serial.h
index f6c4f34909a2..b21ec224b11d 100644
--- a/arch/arm/mach-davinci/include/mach/serial.h
+++ b/arch/arm/mach-davinci/include/mach/serial.h
@@ -11,8 +11,19 @@
 #ifndef __ASM_ARCH_SERIAL_H
 #define __ASM_ARCH_SERIAL_H
 
+#include <asm/memory.h>
+
 #include <mach/hardware.h>
 
+/*
+ * Stolen area that contains debug uart physical and virtual addresses.  These
+ * addresses are filled in by the uncompress.h code, and are used by the debug
+ * macros in debug-macro.S.
+ *
+ * This area sits just below the page tables (see arch/arm/kernel/head.S).
+ */
+#define DAVINCI_UART_INFO	(PHYS_OFFSET + 0x3ff8)
+
 #define DAVINCI_UART0_BASE	(IO_PHYS + 0x20000)
 #define DAVINCI_UART1_BASE	(IO_PHYS + 0x20400)
 #define DAVINCI_UART2_BASE	(IO_PHYS + 0x20800)
@@ -26,11 +37,13 @@
 #define UART_DM646X_SCR			0x10
 #define UART_DM646X_SCR_TX_WATERMARK	0x08
 
+#ifndef __ASSEMBLY__
 struct davinci_uart_config {
 	/* Bit field of UARTs present; bit 0 --> UART1 */
 	unsigned int enabled_uarts;
 };
 
 extern int davinci_serial_init(struct davinci_uart_config *);
+#endif
 
 #endif /* __ASM_ARCH_SERIAL_H */

commit da0122ca8b7804b9cd8fa7eff466bafba27f09a3
Author: Cyril Chemparathy <cyril@ti.com>
Date:   Sun May 2 14:28:12 2010 -0400

    Davinci: serial - remove unnecessary define
    
    The uart pdata array is already terminated by a zero flag field.
    
    This patch reuses this terminator and eliminates DAVINCI_MAX_NR_UARTS
    definition.  This way, future platforms can have different number of uarts
    initialized via davinci_serial_init().
    
    Signed-off-by: Cyril Chemparathy <cyril@ti.com>
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-davinci/include/mach/serial.h b/arch/arm/mach-davinci/include/mach/serial.h
index a584697a9e70..f6c4f34909a2 100644
--- a/arch/arm/mach-davinci/include/mach/serial.h
+++ b/arch/arm/mach-davinci/include/mach/serial.h
@@ -13,7 +13,6 @@
 
 #include <mach/hardware.h>
 
-#define DAVINCI_MAX_NR_UARTS	3
 #define DAVINCI_UART0_BASE	(IO_PHYS + 0x20000)
 #define DAVINCI_UART1_BASE	(IO_PHYS + 0x20400)
 #define DAVINCI_UART2_BASE	(IO_PHYS + 0x20800)

commit 9eb7115bcc423ae022ebf1844820d58a77c2d435
Author: Hemant Pedanekar <hemantp@ti.com>
Date:   Wed Jun 24 10:15:47 2009 +0530

    davinci: Move IO device mapping macros from io.h to hardware.h
    
    This patch takes out IO mapping macros from mach/io.h and puts them in
    mach/hardware.h avoiding need to include mach/io.h in various files such as
    serial.h, vmalloc.h etc.
    
    The main reason to avoid inclusion of mach/io.h is, when default in/out macros
    are overridden by machine specific functions (e.g., in case of PCI I/O), they
    result into linker error. An example snippet and error snapshot is listed below.
    
    Following code in mach/io.h:
    
            #define inl(p)  my_inl()
    
            static inline unsigned int my_inl(unsigned int addr)
            {
                    if (IS_PCI_IO(addr))
                            return pci_inl ();
                    else
                            return le32_to_cpu(__raw_readl(__typesafe_io(addr)));
            }
    
    leads to error:
            LD      arch/arm/boot/compressed/vmlinux
            arch/arm/boot/compressed/misc.o: In function `my_inl':
            misc.c:(.text+0x2744): undefined reference to `pci_inl'
            make[2]: *** [arch/arm/boot/compressed/vmlinux] Error 1
    
    This is because mach/io.h gets included in arch/arm/boot/compressed/misc.c
    through mach/serial.h but pci.c file, which defines 'pci_inl' doesn't get built
    into compressed vmlinux.
    
    Signed-off-by: Hemant Pedanekar <hemantp@ti.com>
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-davinci/include/mach/serial.h b/arch/arm/mach-davinci/include/mach/serial.h
index 57e68e610ee9..a584697a9e70 100644
--- a/arch/arm/mach-davinci/include/mach/serial.h
+++ b/arch/arm/mach-davinci/include/mach/serial.h
@@ -11,7 +11,7 @@
 #ifndef __ASM_ARCH_SERIAL_H
 #define __ASM_ARCH_SERIAL_H
 
-#include <mach/io.h>
+#include <mach/hardware.h>
 
 #define DAVINCI_MAX_NR_UARTS	3
 #define DAVINCI_UART0_BASE	(IO_PHYS + 0x20000)

commit 55c79a40e34566e9d198f6205b0cf06e3d89ac0a
Author: Mark A. Greer <mgreer@mvista.com>
Date:   Wed Jun 3 18:36:54 2009 -0700

    davinci: da8xx: Add base DA830/OMAP-L137 SoC support
    
    The da830/omap l137 is a new SoC from TI that is similar
    to the davinci line.  Since its so similar to davinci,
    put the support for the da830 in the same directory as
    the davinci code.
    
    There are differences, however.  Some of those differences
    prevent support for davinci and da830 platforms to work
    in the same kernel binary.  Those differences are:
    
    1) Different physical address for RAM.  This is relevant
       to Makefile.boot addresses and PHYS_OFFSET.  The
       Makefile.boot issue isn't truly a kernel issue but
       it means u-boot won't work with a uImage including
       both architectures.  The PHYS_OFFSET issue is
       addressed by the "Allow for runtime-determined
       PHYS_OFFSET" patch by Lennert Buytenhek but it
       hasn't been accepted yet.
    
    2) Different uart addresses.  This is only an issue
       for the 'addruart' assembly macro when CONFIG_DEBUG_LL
       is enabled.  Since the code in that macro is called
       so early (e.g., by _error_p in kernel/head.S when
       the processor lookup fails), we can't determine what
       platform the kernel is running on at runtime to use
       the correct uart address.
    
    These areas have compile errors intentionally inserted
    to indicate to the builder they're doing something wrong.
    
    A new config variable, CONFIG_ARCH_DAVINCI_DMx, is added
    to distinguish between a true davinci architecture and
    the da830 architecture.
    
    Note that the da830 currently has an issue with writeback
    data cache so CONFIG_CPU_DCACHE_WRITETHROUGH should be
    enabled when building a da830 kernel.
    
    Additional generalizations for future SoCs in the da8xx family done by
    Sudhakar Rajashekhara and Sekhar Nori.
    
    Signed-off-by: Steve Chen <schen@mvista.com>
    Signed-off-by: Mikhail Cherkashin <mcherkashin@ru.mvista.com>
    Signed-off-by: Mark A. Greer <mgreer@mvista.com>
    Cc: Sudhakar Rajashekhara <sudhakar.raj@ti.com>
    Cc: Sekhar Nori <nsekhar@ti.com>
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-davinci/include/mach/serial.h b/arch/arm/mach-davinci/include/mach/serial.h
index 794fa5cf93c1..57e68e610ee9 100644
--- a/arch/arm/mach-davinci/include/mach/serial.h
+++ b/arch/arm/mach-davinci/include/mach/serial.h
@@ -18,6 +18,10 @@
 #define DAVINCI_UART1_BASE	(IO_PHYS + 0x20400)
 #define DAVINCI_UART2_BASE	(IO_PHYS + 0x20800)
 
+#define DA8XX_UART0_BASE	(IO_PHYS + 0x042000)
+#define DA8XX_UART1_BASE	(IO_PHYS + 0x10c000)
+#define DA8XX_UART2_BASE	(IO_PHYS + 0x10d000)
+
 /* DaVinci UART register offsets */
 #define UART_DAVINCI_PWREMU		0x0c
 #define UART_DM646X_SCR			0x10

commit 96ed299fdb572fd694d361dc49285dddc0c87da4
Author: Kevin Hilman <khilman@deeprootsystems.com>
Date:   Thu Apr 30 11:20:24 2009 -0700

    davinci: cleanup: move dm355 UART2 define to dm355.c
    
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-davinci/include/mach/serial.h b/arch/arm/mach-davinci/include/mach/serial.h
index b0c57fa9e4ee..794fa5cf93c1 100644
--- a/arch/arm/mach-davinci/include/mach/serial.h
+++ b/arch/arm/mach-davinci/include/mach/serial.h
@@ -18,8 +18,6 @@
 #define DAVINCI_UART1_BASE	(IO_PHYS + 0x20400)
 #define DAVINCI_UART2_BASE	(IO_PHYS + 0x20800)
 
-#define DM355_UART2_BASE        (IO_PHYS + 0x206000)
-
 /* DaVinci UART register offsets */
 #define UART_DAVINCI_PWREMU		0x0c
 #define UART_DM646X_SCR			0x10

commit 65e866a9741126c678e6dcd5d4fa8c9eca18e945
Author: Mark A. Greer <mgreer@mvista.com>
Date:   Wed Mar 18 12:36:08 2009 -0500

    davinci: Move serial platform_device into SoC-specific files
    
    Currently, there is one set of platform_device and platform_data
    structures for all DaVinci SoCs.  The differences in the data
    between the various SoCs is handled by davinci_serial_init()
    by checking the SoC type.  However, as new SoCs appear, this
    routine will become more & more cluttered.
    
    To clean up the routine and make it easier to add support for new
    SoCs, move the platform_device and platform_data structures into the
    SoC-specific code and use the SoC infrastructure to provide access
    to the data.
    
    In the process, fix a bug where the wrong irq is used for uart2
    of the dm646x.
    
    Signed-off-by: Mark A. Greer <mgreer@mvista.com>
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-davinci/include/mach/serial.h b/arch/arm/mach-davinci/include/mach/serial.h
index 761ab2b483a0..b0c57fa9e4ee 100644
--- a/arch/arm/mach-davinci/include/mach/serial.h
+++ b/arch/arm/mach-davinci/include/mach/serial.h
@@ -30,6 +30,6 @@ struct davinci_uart_config {
 	unsigned int enabled_uarts;
 };
 
-extern void davinci_serial_init(struct davinci_uart_config *);
+extern int davinci_serial_init(struct davinci_uart_config *);
 
 #endif /* __ASM_ARCH_SERIAL_H */

commit 95a3477fe57e0669dcb531516f2930fe1cf27e6b
Author: Kevin Hilman <khilman@deeprootsystems.com>
Date:   Wed Apr 29 12:10:55 2009 -0700

    davinci: DM355: add base SoC and board support
    
    In addition, add board support for the DM355 Evaluation Module (EVM)
    and the DM355 Leopard board.
    
    Original DM355 EVM support done by Sandeep Paulraj, with significant
    updates and improvements by David Brownell.  DM355 Leopord support
    done by Koen Kooi.
    
    Signed-off-by: Sandeep Paulraj <s-paulraj@ti.com>
    Signed-off-by: Koen Kooi <koen@beagleboard.org>
    Cc: David Brownell <dbrownell@users.sourceforge.net>
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-davinci/include/mach/serial.h b/arch/arm/mach-davinci/include/mach/serial.h
index 632847d74a1c..761ab2b483a0 100644
--- a/arch/arm/mach-davinci/include/mach/serial.h
+++ b/arch/arm/mach-davinci/include/mach/serial.h
@@ -18,7 +18,7 @@
 #define DAVINCI_UART1_BASE	(IO_PHYS + 0x20400)
 #define DAVINCI_UART2_BASE	(IO_PHYS + 0x20800)
 
-#define DM355_UART2_BASE	(IO_PHYS + 0x206000)
+#define DM355_UART2_BASE        (IO_PHYS + 0x206000)
 
 /* DaVinci UART register offsets */
 #define UART_DAVINCI_PWREMU		0x0c

commit 617b925f94e0126841164ffd40dd3a8879502b57
Author: Kevin Hilman <khilman@deeprootsystems.com>
Date:   Tue Apr 14 08:04:26 2009 -0500

    davinci: serial: generalize for more SoCs
    
    Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>

diff --git a/arch/arm/mach-davinci/include/mach/serial.h b/arch/arm/mach-davinci/include/mach/serial.h
index fb8cb229bfd2..632847d74a1c 100644
--- a/arch/arm/mach-davinci/include/mach/serial.h
+++ b/arch/arm/mach-davinci/include/mach/serial.h
@@ -13,8 +13,23 @@
 
 #include <mach/io.h>
 
-#define DAVINCI_UART0_BASE   (IO_PHYS + 0x20000)
-#define DAVINCI_UART1_BASE   (IO_PHYS + 0x20400)
-#define DAVINCI_UART2_BASE   (IO_PHYS + 0x20800)
+#define DAVINCI_MAX_NR_UARTS	3
+#define DAVINCI_UART0_BASE	(IO_PHYS + 0x20000)
+#define DAVINCI_UART1_BASE	(IO_PHYS + 0x20400)
+#define DAVINCI_UART2_BASE	(IO_PHYS + 0x20800)
+
+#define DM355_UART2_BASE	(IO_PHYS + 0x206000)
+
+/* DaVinci UART register offsets */
+#define UART_DAVINCI_PWREMU		0x0c
+#define UART_DM646X_SCR			0x10
+#define UART_DM646X_SCR_TX_WATERMARK	0x08
+
+struct davinci_uart_config {
+	/* Bit field of UARTs present; bit 0 --> UART1 */
+	unsigned int enabled_uarts;
+};
+
+extern void davinci_serial_init(struct davinci_uart_config *);
 
 #endif /* __ASM_ARCH_SERIAL_H */

commit a09e64fbc0094e3073dbb09c3b4bfe4ab669244b
Author: Russell King <rmk@dyn-67.arm.linux.org.uk>
Date:   Tue Aug 5 16:14:15 2008 +0100

    [ARM] Move include/asm-arm/arch-* to arch/arm/*/include/mach
    
    This just leaves include/asm-arm/plat-* to deal with.
    
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>

diff --git a/arch/arm/mach-davinci/include/mach/serial.h b/arch/arm/mach-davinci/include/mach/serial.h
new file mode 100644
index 000000000000..fb8cb229bfd2
--- /dev/null
+++ b/arch/arm/mach-davinci/include/mach/serial.h
@@ -0,0 +1,20 @@
+/*
+ * DaVinci serial device definitions
+ *
+ * Author: Kevin Hilman, MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2007 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#ifndef __ASM_ARCH_SERIAL_H
+#define __ASM_ARCH_SERIAL_H
+
+#include <mach/io.h>
+
+#define DAVINCI_UART0_BASE   (IO_PHYS + 0x20000)
+#define DAVINCI_UART1_BASE   (IO_PHYS + 0x20400)
+#define DAVINCI_UART2_BASE   (IO_PHYS + 0x20800)
+
+#endif /* __ASM_ARCH_SERIAL_H */
