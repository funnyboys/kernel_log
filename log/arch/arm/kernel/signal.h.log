commit 83dc1d99429af7d73225294f216a510ba6f58e45
Author: Ben Dooks (Codethink) <ben.dooks@codethink.co.uk>
Date:   Fri Oct 11 13:53:32 2019 +0100

    ARM: 8920/1: share get_signal_page from signal.c to process.c
    
    The get_signal_page() function is defined in signal.c and used in
    process.c but there is no shared definition. Add one in signal.h to
    silence the following warning:
    
    arch/arm/kernel/signal.c:683:13: warning: symbol 'get_signal_page' was not declared. Should it be static?
    
    Signed-off-by: Ben Dooks <ben.dooks@codethink.co.uk>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>

diff --git a/arch/arm/kernel/signal.h b/arch/arm/kernel/signal.h
index b7b838b05229..cb076d30ab38 100644
--- a/arch/arm/kernel/signal.h
+++ b/arch/arm/kernel/signal.h
@@ -9,3 +9,5 @@ struct rt_sigframe {
 	struct siginfo info;
 	struct sigframe sig;
 };
+
+extern struct page *get_signal_page(void);

commit 5c16595353e0743af99294db48549c3145e3a5ad
Author: Nicolas Pitre <nicolas.pitre@linaro.org>
Date:   Wed Aug 9 23:42:51 2017 -0400

    ARM: signal handling support for FDPIC_FUNCPTRS functions
    
    Signal handlers are not direct function pointers but pointers to function
    descriptor in that case. Therefore we must retrieve the actual function
    address and load the GOT value into r9 from the descriptor before branching
    to the actual handler.
    
    If a restorer is provided, we also have to load its address and GOT from
    its descriptor. That descriptor address and the code to load it is pushed
    onto the stack to be executed as soon as the signal handler returns.
    
    However, to be compatible with NX stacks, the FDPIC bounce code is also
    copied to the signal page along with the other code stubs. Therefore this
    code must get at the descriptor address whether it executes from the stack
    or the signal page. To do so we use the stack pointer which points at the
    signal stack frame where the descriptor address was stored. Because the
    rt signal frame is different from the simpler frame, two versions of the
    bounce code are needed, and two variants (ARM and Thumb) as well. The
    asm-offsets facility is used to determine the actual offset in the signal
    frame for each version, meaning that struct sigframe and rt_sigframe had
    to be moved to a separate file.
    
    Signed-off-by: Nicolas Pitre <nico@linaro.org>
    Acked-by: Mickael GUENE <mickael.guene@st.com>
    Tested-by: Vincent Abriou <vincent.abriou@st.com>
    Tested-by: Andras Szemzo <szemzo.andras@gmail.com>

diff --git a/arch/arm/kernel/signal.h b/arch/arm/kernel/signal.h
new file mode 100644
index 000000000000..b7b838b05229
--- /dev/null
+++ b/arch/arm/kernel/signal.h
@@ -0,0 +1,11 @@
+#include <asm/ucontext.h>
+
+struct sigframe {
+	struct ucontext uc;
+	unsigned long retcode[4];
+};
+
+struct rt_sigframe {
+	struct siginfo info;
+	struct sigframe sig;
+};

commit 48be69a026b2c17350a5ef18a1959a919f60be7d
Author: Russell King <rmk+kernel@arm.linux.org.uk>
Date:   Wed Jul 24 00:29:18 2013 +0100

    ARM: move signal handlers into a vdso-like page
    
    Move the signal handlers into a VDSO page rather than keeping them in
    the vectors page.  This allows us to place them randomly within this
    page, and also map the page at a random location within userspace
    further protecting these code fragments from ROP attacks.  The new
    VDSO page is also poisoned in the same way as the vector page.
    
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>

diff --git a/arch/arm/kernel/signal.h b/arch/arm/kernel/signal.h
deleted file mode 100644
index 5ff067b7c752..000000000000
--- a/arch/arm/kernel/signal.h
+++ /dev/null
@@ -1,12 +0,0 @@
-/*
- *  linux/arch/arm/kernel/signal.h
- *
- *  Copyright (C) 2005-2009 Russell King.
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License version 2 as
- * published by the Free Software Foundation.
- */
-#define KERN_SIGRETURN_CODE	(CONFIG_VECTORS_BASE + 0x00000500)
-
-extern const unsigned long sigreturn_codes[7];

commit 8d4150ccbb63419649a69fe04b46120a46d60da2
Author: Will Deacon <will.deacon@arm.com>
Date:   Thu Jul 19 17:47:22 2012 +0100

    ARM: 7471/1: Revert "7442/1: Revert "remove unused restart trampoline""
    
    This reverts commit 3b0c06226783ffc836217eb34f7eca311b1e63f7.
    
    We no longer require the restart trampoline for syscall restarting.
    
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>

diff --git a/arch/arm/kernel/signal.h b/arch/arm/kernel/signal.h
index 6fcfe8398aa4..5ff067b7c752 100644
--- a/arch/arm/kernel/signal.h
+++ b/arch/arm/kernel/signal.h
@@ -8,7 +8,5 @@
  * published by the Free Software Foundation.
  */
 #define KERN_SIGRETURN_CODE	(CONFIG_VECTORS_BASE + 0x00000500)
-#define KERN_RESTART_CODE	(KERN_SIGRETURN_CODE + sizeof(sigreturn_codes))
 
 extern const unsigned long sigreturn_codes[7];
-extern const unsigned long syscall_restart_code[2];

commit 3b0c06226783ffc836217eb34f7eca311b1e63f7
Author: Will Deacon <will.deacon@arm.com>
Date:   Wed Jul 4 18:16:30 2012 +0100

    ARM: 7442/1: Revert "remove unused restart trampoline"
    
    This reverts commit fa18484d0947b976a769d15c83c50617493c81c1.
    
    We need the restart trampoline back so that we can revert a related
    problematic patch 6b5c8045ecc7e726cdaa2a9d9c8e5008050e1252 ("arm: new
    way of handling ERESTART_RESTARTBLOCK").
    
    Acked-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>

diff --git a/arch/arm/kernel/signal.h b/arch/arm/kernel/signal.h
index 5ff067b7c752..6fcfe8398aa4 100644
--- a/arch/arm/kernel/signal.h
+++ b/arch/arm/kernel/signal.h
@@ -8,5 +8,7 @@
  * published by the Free Software Foundation.
  */
 #define KERN_SIGRETURN_CODE	(CONFIG_VECTORS_BASE + 0x00000500)
+#define KERN_RESTART_CODE	(KERN_SIGRETURN_CODE + sizeof(sigreturn_codes))
 
 extern const unsigned long sigreturn_codes[7];
+extern const unsigned long syscall_restart_code[2];

commit fa18484d0947b976a769d15c83c50617493c81c1
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Wed May 2 21:13:45 2012 -0400

    arm: remove unused restart trampoline
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

diff --git a/arch/arm/kernel/signal.h b/arch/arm/kernel/signal.h
index 6fcfe8398aa4..5ff067b7c752 100644
--- a/arch/arm/kernel/signal.h
+++ b/arch/arm/kernel/signal.h
@@ -8,7 +8,5 @@
  * published by the Free Software Foundation.
  */
 #define KERN_SIGRETURN_CODE	(CONFIG_VECTORS_BASE + 0x00000500)
-#define KERN_RESTART_CODE	(KERN_SIGRETURN_CODE + sizeof(sigreturn_codes))
 
 extern const unsigned long sigreturn_codes[7];
-extern const unsigned long syscall_restart_code[2];

commit ab72b00734ae4d0b5ff273a0f6c7abeaa3713c76
Author: Russell King <rmk+kernel@arm.linux.org.uk>
Date:   Sun Oct 25 15:39:37 2009 +0000

    ARM: Fix signal restart issues with NX and OABI compat
    
    The signal restarting code was placed on the user stack when OABI
    compatibility is enabled.  Unfortunately, with an EABI NX executable,
    this results in an attempt to run code from the non-executable stack,
    which segfaults the application.
    
    Fix this by placing the code in the vectors page, along side the
    signal return code, and directing the application to that code.
    
    Reported-by: saeed bishara <saeed.bishara@gmail.com>
    Tested-by: saeed bishara <saeed.bishara@gmail.com>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>

diff --git a/arch/arm/kernel/signal.h b/arch/arm/kernel/signal.h
index 27beece15502..6fcfe8398aa4 100644
--- a/arch/arm/kernel/signal.h
+++ b/arch/arm/kernel/signal.h
@@ -1,12 +1,14 @@
 /*
  *  linux/arch/arm/kernel/signal.h
  *
- *  Copyright (C) 2005 Russell King.
+ *  Copyright (C) 2005-2009 Russell King.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License version 2 as
  * published by the Free Software Foundation.
  */
 #define KERN_SIGRETURN_CODE	(CONFIG_VECTORS_BASE + 0x00000500)
+#define KERN_RESTART_CODE	(KERN_SIGRETURN_CODE + sizeof(sigreturn_codes))
 
 extern const unsigned long sigreturn_codes[7];
+extern const unsigned long syscall_restart_code[2];

commit c760fc1997e8156ebc4134c42c18f68137c689f9
Author: Hyok S. Choi <hyok.choi@samsung.com>
Date:   Mon Mar 27 15:18:50 2006 +0100

    [ARM] nommu: fixups for the exception vectors
    
    The high page vector (0xFFFF0000) does not supported in nommu mode.
    This patch allows the vectors to be 0x00000000 or the begining of DRAM
    in nommu mode.
    
    Signed-off-by: Hyok S. Choi <hyok.choi@samsung.com>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>

diff --git a/arch/arm/kernel/signal.h b/arch/arm/kernel/signal.h
index 9991049c522d..27beece15502 100644
--- a/arch/arm/kernel/signal.h
+++ b/arch/arm/kernel/signal.h
@@ -7,6 +7,6 @@
  * it under the terms of the GNU General Public License version 2 as
  * published by the Free Software Foundation.
  */
-#define KERN_SIGRETURN_CODE	0xffff0500
+#define KERN_SIGRETURN_CODE	(CONFIG_VECTORS_BASE + 0x00000500)
 
 extern const unsigned long sigreturn_codes[7];

commit fcca538b83f2984095f15f0f90f6c7686e3a32d4
Author: Nicolas Pitre <nico@cam.org>
Date:   Wed Jan 18 22:38:47 2006 +0000

    [ARM] 3270/1: ARM EABI: fix sigreturn and rt_sigreturn
    
    Patch from Nicolas Pitre
    
    The signal return path consists of user code provided by the kernel.
    Since a syscall is used, it has to be updated to work with EABI.
    
    Noticed by Daniel Jacobowitz.
    
    Signed-off-by: Nicolas Pitre <nico@cam.org>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>

diff --git a/arch/arm/kernel/signal.h b/arch/arm/kernel/signal.h
index 91d26faca62b..9991049c522d 100644
--- a/arch/arm/kernel/signal.h
+++ b/arch/arm/kernel/signal.h
@@ -9,4 +9,4 @@
  */
 #define KERN_SIGRETURN_CODE	0xffff0500
 
-extern const unsigned long sigreturn_codes[4];
+extern const unsigned long sigreturn_codes[7];

commit e00d349e7781a92cf35b242259c9e5341a9661bb
Author: Russell King <rmk@dyn-67.arm.linux.org.uk>
Date:   Wed Jun 22 20:26:05 2005 +0100

    [PATCH] ARM: Move signal return code into vector page
    
    Move the signal return code into the vector page instead of placing
    it on the user mode stack, which will allow us to avoid flushing
    the instruction cache on signals, as well as eventually allowing
    non-exec stack.
    
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>

diff --git a/arch/arm/kernel/signal.h b/arch/arm/kernel/signal.h
new file mode 100644
index 000000000000..91d26faca62b
--- /dev/null
+++ b/arch/arm/kernel/signal.h
@@ -0,0 +1,12 @@
+/*
+ *  linux/arch/arm/kernel/signal.h
+ *
+ *  Copyright (C) 2005 Russell King.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+#define KERN_SIGRETURN_CODE	0xffff0500
+
+extern const unsigned long sigreturn_codes[4];
