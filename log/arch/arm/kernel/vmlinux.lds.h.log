commit 3fbb96c054e28d9f7d63535ef7df9968d747426e
Author: Marc Zyngier <maz@kernel.org>
Date:   Fri Jan 24 23:11:46 2020 +0000

    arm: Remove HYP/Stage-2 page-table support
    
    Remove all traces of Stage-2 and HYP page table support.
    
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Acked-by: Olof Johansson <olof@lixom.net>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Will Deacon <will@kernel.org>
    Acked-by: Vladimir Murzin <vladimir.murzin@arm.com>
    Acked-by: Catalin Marinas <catalin.marinas@arm.com>
    Acked-by: Linus Walleij <linus.walleij@linaro.org>
    Acked-by: Christoffer Dall <christoffer.dall@arm.com>

diff --git a/arch/arm/kernel/vmlinux.lds.h b/arch/arm/kernel/vmlinux.lds.h
index 8247bc15addc..381a8e105fa5 100644
--- a/arch/arm/kernel/vmlinux.lds.h
+++ b/arch/arm/kernel/vmlinux.lds.h
@@ -31,20 +31,11 @@
 		*(.proc.info.init)					\
 		__proc_info_end = .;
 
-#define HYPERVISOR_TEXT							\
-		__hyp_text_start = .;					\
-		*(.hyp.text)						\
-		__hyp_text_end = .;
-
 #define IDMAP_TEXT							\
 		ALIGN_FUNCTION();					\
 		__idmap_text_start = .;					\
 		*(.idmap.text)						\
 		__idmap_text_end = .;					\
-		. = ALIGN(PAGE_SIZE);					\
-		__hyp_idmap_text_start = .;				\
-		*(.hyp.idmap.text)					\
-		__hyp_idmap_text_end = .;
 
 #define ARM_DISCARD							\
 		*(.ARM.exidx.exit.text)					\
@@ -72,7 +63,6 @@
 		SCHED_TEXT						\
 		CPUIDLE_TEXT						\
 		LOCK_TEXT						\
-		HYPERVISOR_TEXT						\
 		KPROBES_TEXT						\
 		*(.gnu.warning)						\
 		*(.glue_7)						\

commit 8dcf86caa1e3daf4a6ccf38e97f4f752b411f829
Author: Peter Oberparleiter <oberpar@linux.ibm.com>
Date:   Thu Sep 13 12:59:59 2018 +0200

    vmlinux.lds.h: Fix incomplete .text.exit discards
    
    Enabling CONFIG_GCOV_PROFILE_ALL=y causes linker errors on ARM:
    
      `.text.exit' referenced in section `.ARM.exidx.text.exit':
      defined in discarded section `.text.exit'
    
      `.text.exit' referenced in section `.fini_array.00100':
      defined in discarded section `.text.exit'
    
    And related errors on NDS32:
    
      `.text.exit' referenced in section `.dtors.65435':
      defined in discarded section `.text.exit'
    
    The gcov compiler flags cause certain compiler versions to generate
    additional destructor-related sections that are not yet handled by the
    linker script, resulting in references between discarded and
    non-discarded sections.
    
    Since destructors are not used in the Linux kernel, fix this by
    discarding these additional sections.
    
    Reported-by: Arnd Bergmann <arnd@arndb.de>
    Tested-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Reported-by: Greentime Hu <green.hu@gmail.com>
    Tested-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Peter Oberparleiter <oberpar@linux.ibm.com>
    Signed-off-by: Stephen Rothwell <sfr@canb.auug.org.au>

diff --git a/arch/arm/kernel/vmlinux.lds.h b/arch/arm/kernel/vmlinux.lds.h
index ae5fdff18406..8247bc15addc 100644
--- a/arch/arm/kernel/vmlinux.lds.h
+++ b/arch/arm/kernel/vmlinux.lds.h
@@ -49,6 +49,8 @@
 #define ARM_DISCARD							\
 		*(.ARM.exidx.exit.text)					\
 		*(.ARM.extab.exit.text)					\
+		*(.ARM.exidx.text.exit)					\
+		*(.ARM.extab.text.exit)					\
 		ARM_CPU_DISCARD(*(.ARM.exidx.cpuexit.text))		\
 		ARM_CPU_DISCARD(*(.ARM.extab.cpuexit.text))		\
 		ARM_EXIT_DISCARD(EXIT_TEXT)				\

commit 83d41fb9c0eb66b3a97968cbe836e8c4df6af8ec
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Thu May 17 08:01:28 2018 +0100

    ARM: 8774/1: remove no-op macro VMLINUX_SYMBOL()
    
    VMLINUX_SYMBOL() is no-op unless CONFIG_HAVE_UNDERSCORE_SYMBOL_PREFIX
    is defined.  It has ever been selected only by BLACKFIN and METAG.
    VMLINUX_SYMBOL() is unneeded for ARM-specific code.
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>

diff --git a/arch/arm/kernel/vmlinux.lds.h b/arch/arm/kernel/vmlinux.lds.h
index 71281e08e1d4..ae5fdff18406 100644
--- a/arch/arm/kernel/vmlinux.lds.h
+++ b/arch/arm/kernel/vmlinux.lds.h
@@ -27,24 +27,24 @@
 
 #define PROC_INFO							\
 		. = ALIGN(4);						\
-		VMLINUX_SYMBOL(__proc_info_begin) = .;			\
+		__proc_info_begin = .;					\
 		*(.proc.info.init)					\
-		VMLINUX_SYMBOL(__proc_info_end) = .;
+		__proc_info_end = .;
 
 #define HYPERVISOR_TEXT							\
-		VMLINUX_SYMBOL(__hyp_text_start) = .;			\
+		__hyp_text_start = .;					\
 		*(.hyp.text)						\
-		VMLINUX_SYMBOL(__hyp_text_end) = .;
+		__hyp_text_end = .;
 
 #define IDMAP_TEXT							\
 		ALIGN_FUNCTION();					\
-		VMLINUX_SYMBOL(__idmap_text_start) = .;			\
+		__idmap_text_start = .;					\
 		*(.idmap.text)						\
-		VMLINUX_SYMBOL(__idmap_text_end) = .;			\
+		__idmap_text_end = .;					\
 		. = ALIGN(PAGE_SIZE);					\
-		VMLINUX_SYMBOL(__hyp_idmap_text_start) = .;		\
+		__hyp_idmap_text_start = .;				\
 		*(.hyp.idmap.text)					\
-		VMLINUX_SYMBOL(__hyp_idmap_text_end) = .;
+		__hyp_idmap_text_end = .;
 
 #define ARM_DISCARD							\
 		*(.ARM.exidx.exit.text)					\

commit b54290e51accea4f696f5dacef8e609d0ccbe54a
Author: Nicolas Pitre <nicolas.pitre@linaro.org>
Date:   Thu Mar 8 21:12:04 2018 -0500

    ARM: simplify and fix linker script for TCM
    
    Let's put the TCM stuff in the __init section directly. No need for
    a separately freed memory area.
    
    Remove redundant linker sections, as well as comments that were more
    confusing than no comments at all. Finally make it XIP compatible by
    using LOAD_OFFSET in the section LMA specification.
    
    Signed-off-by: Nicolas Pitre <nico@linaro.org>
    Tested-by: Chris Brandt <Chris.Brandt@renesas.com>

diff --git a/arch/arm/kernel/vmlinux.lds.h b/arch/arm/kernel/vmlinux.lds.h
index cf9dabbdbde4..71281e08e1d4 100644
--- a/arch/arm/kernel/vmlinux.lds.h
+++ b/arch/arm/kernel/vmlinux.lds.h
@@ -115,61 +115,21 @@
 	PROVIDE(vector_fiq_offset = vector_fiq - ADDR(.vectors));
 
 #define ARM_TCM								\
-        /*								\
-	 * We align everything to a page boundary so we can		\
-	 * free it after init has commenced and TCM contents have	\
-	 * been copied to its destination.				\
-	 */								\
-	.tcm_start : {							\
-		. = ALIGN(PAGE_SIZE);					\
-		__tcm_start = .;					\
-		__itcm_start = .;					\
-	}								\
-									\
-	/*								\
-	 * Link these to the ITCM RAM					\
-	 *								\
-	 * Put VMA to the TCM address and LMA to the common RAM		\
-	 * and we'll upload the contents from RAM to TCM and free	\
-	 * the used RAM after that.					\
-	 */								\
-	.text_itcm ITCM_OFFSET : AT(__itcm_start)			\
-	{								\
+	__itcm_start = ALIGN(4);					\
+	.text_itcm ITCM_OFFSET : AT(__itcm_start - LOAD_OFFSET) {	\
 		__sitcm_text = .;					\
 		*(.tcm.text)						\
 		*(.tcm.rodata)						\
 		. = ALIGN(4);						\
 		__eitcm_text = .;					\
 	}								\
+	. = __itcm_start + SIZEOF(.text_itcm);				\
 									\
-	/*								\
-	 * Reset the dot pointer, this is needed to create the		\
-	 * relative __dtcm_start below (to be used as extern in code).	\
-	 */								\
-	. = ADDR(.tcm_start) + SIZEOF(.tcm_start) + SIZEOF(.text_itcm);	\
-									\
-	.dtcm_start : {							\
-		__dtcm_start = .;					\
-	}								\
-									\
-	/*								\
-	 * TODO: add remainder of ITCM as well,				\
-	 * that can be used for data!					\
-	 */								\
-	.data_dtcm DTCM_OFFSET : AT(__dtcm_start)			\
-	{								\
-		. = ALIGN(4);						\
+	__dtcm_start = .;						\
+	.data_dtcm DTCM_OFFSET : AT(__dtcm_start - LOAD_OFFSET) {	\
 		__sdtcm_data = .;					\
 		*(.tcm.data)						\
 		. = ALIGN(4);						\
 		__edtcm_data = .;					\
 	}								\
-									\
-	/* Reset the dot pointer or the linker gets confused */		\
-	. = ADDR(.dtcm_start) + SIZEOF(.data_dtcm);			\
-									\
-	/* End marker for freeing TCM copy in linked object */		\
-	.tcm_end : AT(ADDR(.dtcm_start) + SIZEOF(.data_dtcm)){		\
-		. = ALIGN(PAGE_SIZE);					\
-		__tcm_end = .;						\
-	}
+	. = __dtcm_start + SIZEOF(.data_dtcm);

commit c3146c43db4974f4571bd9d42b172ca03a9137c6
Author: Nicolas Pitre <nicolas.pitre@linaro.org>
Date:   Thu Mar 8 20:19:48 2018 -0500

    ARM: linker script: factor out TCM bits
    
    This is a plain move with identical results, and therefore
    still broken in the XIP case.
    
    Signed-off-by: Nicolas Pitre <nico@linaro.org>
    Tested-by: Chris Brandt <Chris.Brandt@renesas.com>

diff --git a/arch/arm/kernel/vmlinux.lds.h b/arch/arm/kernel/vmlinux.lds.h
index 0a4682ecc4ac..cf9dabbdbde4 100644
--- a/arch/arm/kernel/vmlinux.lds.h
+++ b/arch/arm/kernel/vmlinux.lds.h
@@ -113,3 +113,63 @@
 	__stubs_end = .;						\
 									\
 	PROVIDE(vector_fiq_offset = vector_fiq - ADDR(.vectors));
+
+#define ARM_TCM								\
+        /*								\
+	 * We align everything to a page boundary so we can		\
+	 * free it after init has commenced and TCM contents have	\
+	 * been copied to its destination.				\
+	 */								\
+	.tcm_start : {							\
+		. = ALIGN(PAGE_SIZE);					\
+		__tcm_start = .;					\
+		__itcm_start = .;					\
+	}								\
+									\
+	/*								\
+	 * Link these to the ITCM RAM					\
+	 *								\
+	 * Put VMA to the TCM address and LMA to the common RAM		\
+	 * and we'll upload the contents from RAM to TCM and free	\
+	 * the used RAM after that.					\
+	 */								\
+	.text_itcm ITCM_OFFSET : AT(__itcm_start)			\
+	{								\
+		__sitcm_text = .;					\
+		*(.tcm.text)						\
+		*(.tcm.rodata)						\
+		. = ALIGN(4);						\
+		__eitcm_text = .;					\
+	}								\
+									\
+	/*								\
+	 * Reset the dot pointer, this is needed to create the		\
+	 * relative __dtcm_start below (to be used as extern in code).	\
+	 */								\
+	. = ADDR(.tcm_start) + SIZEOF(.tcm_start) + SIZEOF(.text_itcm);	\
+									\
+	.dtcm_start : {							\
+		__dtcm_start = .;					\
+	}								\
+									\
+	/*								\
+	 * TODO: add remainder of ITCM as well,				\
+	 * that can be used for data!					\
+	 */								\
+	.data_dtcm DTCM_OFFSET : AT(__dtcm_start)			\
+	{								\
+		. = ALIGN(4);						\
+		__sdtcm_data = .;					\
+		*(.tcm.data)						\
+		. = ALIGN(4);						\
+		__edtcm_data = .;					\
+	}								\
+									\
+	/* Reset the dot pointer or the linker gets confused */		\
+	. = ADDR(.dtcm_start) + SIZEOF(.data_dtcm);			\
+									\
+	/* End marker for freeing TCM copy in linked object */		\
+	.tcm_end : AT(ADDR(.dtcm_start) + SIZEOF(.data_dtcm)){		\
+		. = ALIGN(PAGE_SIZE);					\
+		__tcm_end = .;						\
+	}

commit 9147095896fb321ae10ec5a5f789079318137ac9
Author: Nicolas Pitre <nicolas.pitre@linaro.org>
Date:   Thu Mar 1 22:17:03 2018 -0500

    ARM: linker script: factor out vectors and stubs
    
    Signed-off-by: Nicolas Pitre <nico@linaro.org>
    Tested-by: Chris Brandt <Chris.Brandt@renesas.com>

diff --git a/arch/arm/kernel/vmlinux.lds.h b/arch/arm/kernel/vmlinux.lds.h
index 566a7b42a02c..0a4682ecc4ac 100644
--- a/arch/arm/kernel/vmlinux.lds.h
+++ b/arch/arm/kernel/vmlinux.lds.h
@@ -92,3 +92,24 @@
 		*(.ARM.extab*)						\
 		__stop_unwind_tab = .;					\
 	}
+
+/*
+ * The vectors and stubs are relocatable code, and the
+ * only thing that matters is their relative offsets
+ */
+#define ARM_VECTORS							\
+	__vectors_start = .;						\
+	.vectors 0xffff0000 : AT(__vectors_start) {			\
+		*(.vectors)						\
+	}								\
+	. = __vectors_start + SIZEOF(.vectors);				\
+	__vectors_end = .;						\
+									\
+	__stubs_start = .;						\
+	.stubs ADDR(.vectors) + 0x1000 : AT(__stubs_start) {		\
+		*(.stubs)						\
+	}								\
+	. = __stubs_start + SIZEOF(.stubs);				\
+	__stubs_end = .;						\
+									\
+	PROVIDE(vector_fiq_offset = vector_fiq - ADDR(.vectors));

commit d9a46e6e714178f6ce7fe2c536c59542a2964f6f
Author: Nicolas Pitre <nicolas.pitre@linaro.org>
Date:   Thu Mar 1 17:32:28 2018 -0500

    ARM: linker script: factor out unwinding table sections
    
    Signed-off-by: Nicolas Pitre <nico@linaro.org>
    Tested-by: Chris Brandt <Chris.Brandt@renesas.com>

diff --git a/arch/arm/kernel/vmlinux.lds.h b/arch/arm/kernel/vmlinux.lds.h
index 0ef86d75a001..566a7b42a02c 100644
--- a/arch/arm/kernel/vmlinux.lds.h
+++ b/arch/arm/kernel/vmlinux.lds.h
@@ -78,3 +78,17 @@
 		. = ALIGN(4);						\
 		*(.got)			/* Global offset table */	\
 		ARM_CPU_KEEP(PROC_INFO)
+
+/* Stack unwinding tables */
+#define ARM_UNWIND_SECTIONS						\
+	. = ALIGN(8);							\
+	.ARM.unwind_idx : {						\
+		__start_unwind_idx = .;					\
+		*(.ARM.exidx*)						\
+		__stop_unwind_idx = .;					\
+	}								\
+	.ARM.unwind_tab : {						\
+		__start_unwind_tab = .;					\
+		*(.ARM.extab*)						\
+		__stop_unwind_tab = .;					\
+	}

commit 47b4c77dc3565993e4925fb1c0cf00790f3b1eee
Author: Nicolas Pitre <nicolas.pitre@linaro.org>
Date:   Mon Mar 5 16:34:03 2018 -0500

    ARM: linker script: factor out stuff for the .text section
    
    Move common entries to vmlinux.lds.h as ARM_TEXT.
    
    Signed-off-by: Nicolas Pitre <nico@linaro.org>
    Tested-by: Chris Brandt <Chris.Brandt@renesas.com>

diff --git a/arch/arm/kernel/vmlinux.lds.h b/arch/arm/kernel/vmlinux.lds.h
index 1258b66487b2..0ef86d75a001 100644
--- a/arch/arm/kernel/vmlinux.lds.h
+++ b/arch/arm/kernel/vmlinux.lds.h
@@ -58,3 +58,23 @@
 		ARM_MMU_DISCARD(*(__ex_table))				\
 		*(.discard)						\
 		*(.discard.*)
+
+#define ARM_TEXT							\
+		IDMAP_TEXT						\
+		__entry_text_start = .;					\
+		*(.entry.text)						\
+		__entry_text_end = .;					\
+		IRQENTRY_TEXT						\
+		SOFTIRQENTRY_TEXT					\
+		TEXT_TEXT						\
+		SCHED_TEXT						\
+		CPUIDLE_TEXT						\
+		LOCK_TEXT						\
+		HYPERVISOR_TEXT						\
+		KPROBES_TEXT						\
+		*(.gnu.warning)						\
+		*(.glue_7)						\
+		*(.glue_7t)						\
+		. = ALIGN(4);						\
+		*(.got)			/* Global offset table */	\
+		ARM_CPU_KEEP(PROC_INFO)

commit ab42fad00953301c0d25d71340bf194868bd3df9
Author: Nicolas Pitre <nicolas.pitre@linaro.org>
Date:   Mon Mar 5 16:34:03 2018 -0500

    ARM: linker script: factor out stuff for the DISCARD section
    
    Move common entries to vmlinux.lds.h and leave XIP and non-XIP entries
    in their respective file. The ARM_NOMMU_KEEP() and ARM_NOMMU_DISCARD()
    macros are added to be usable within the definition of ARM_DISCARD macro.
    
    Signed-off-by: Nicolas Pitre <nico@linaro.org>
    Tested-by: Chris Brandt <Chris.Brandt@renesas.com>

diff --git a/arch/arm/kernel/vmlinux.lds.h b/arch/arm/kernel/vmlinux.lds.h
index 0a86e8a1119e..1258b66487b2 100644
--- a/arch/arm/kernel/vmlinux.lds.h
+++ b/arch/arm/kernel/vmlinux.lds.h
@@ -17,6 +17,14 @@
 #define ARM_EXIT_DISCARD(x)	x
 #endif
 
+#ifdef CONFIG_MMU
+#define ARM_MMU_KEEP(x)		x
+#define ARM_MMU_DISCARD(x)
+#else
+#define ARM_MMU_KEEP(x)
+#define ARM_MMU_DISCARD(x)	x
+#endif
+
 #define PROC_INFO							\
 		. = ALIGN(4);						\
 		VMLINUX_SYMBOL(__proc_info_begin) = .;			\
@@ -38,3 +46,15 @@
 		*(.hyp.idmap.text)					\
 		VMLINUX_SYMBOL(__hyp_idmap_text_end) = .;
 
+#define ARM_DISCARD							\
+		*(.ARM.exidx.exit.text)					\
+		*(.ARM.extab.exit.text)					\
+		ARM_CPU_DISCARD(*(.ARM.exidx.cpuexit.text))		\
+		ARM_CPU_DISCARD(*(.ARM.extab.cpuexit.text))		\
+		ARM_EXIT_DISCARD(EXIT_TEXT)				\
+		ARM_EXIT_DISCARD(EXIT_DATA)				\
+		EXIT_CALL						\
+		ARM_MMU_DISCARD(*(.text.fixup))				\
+		ARM_MMU_DISCARD(*(__ex_table))				\
+		*(.discard)						\
+		*(.discard.*)

commit 2f181e0ba8db654cf9e1b6abe454aebca9587448
Author: Nicolas Pitre <nicolas.pitre@linaro.org>
Date:   Tue Feb 27 22:39:27 2018 -0500

    ARM: linker script: factor out some common definitions between XIP and non-XIP
    
    Lots of duplications between vmlinux.lds.S and vmlinux-xip.lds.S.
    This may lead to one file being updated but not the other. For example,
    SOFTIRQENTRY_TEXT and HYPERVISOR_TEXT were missing from the XIP version.
    
    This creates vmlinux.lds.h where a bunch of common defines are moved.
    
    Signed-off-by: Nicolas Pitre <nico@linaro.org>
    Tested-by: Chris Brandt <Chris.Brandt@renesas.com>

diff --git a/arch/arm/kernel/vmlinux.lds.h b/arch/arm/kernel/vmlinux.lds.h
new file mode 100644
index 000000000000..0a86e8a1119e
--- /dev/null
+++ b/arch/arm/kernel/vmlinux.lds.h
@@ -0,0 +1,40 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+
+#ifdef CONFIG_HOTPLUG_CPU
+#define ARM_CPU_DISCARD(x)
+#define ARM_CPU_KEEP(x)		x
+#else
+#define ARM_CPU_DISCARD(x)	x
+#define ARM_CPU_KEEP(x)
+#endif
+
+#if (defined(CONFIG_SMP_ON_UP) && !defined(CONFIG_DEBUG_SPINLOCK)) || \
+	defined(CONFIG_GENERIC_BUG) || defined(CONFIG_JUMP_LABEL)
+#define ARM_EXIT_KEEP(x)	x
+#define ARM_EXIT_DISCARD(x)
+#else
+#define ARM_EXIT_KEEP(x)
+#define ARM_EXIT_DISCARD(x)	x
+#endif
+
+#define PROC_INFO							\
+		. = ALIGN(4);						\
+		VMLINUX_SYMBOL(__proc_info_begin) = .;			\
+		*(.proc.info.init)					\
+		VMLINUX_SYMBOL(__proc_info_end) = .;
+
+#define HYPERVISOR_TEXT							\
+		VMLINUX_SYMBOL(__hyp_text_start) = .;			\
+		*(.hyp.text)						\
+		VMLINUX_SYMBOL(__hyp_text_end) = .;
+
+#define IDMAP_TEXT							\
+		ALIGN_FUNCTION();					\
+		VMLINUX_SYMBOL(__idmap_text_start) = .;			\
+		*(.idmap.text)						\
+		VMLINUX_SYMBOL(__idmap_text_end) = .;			\
+		. = ALIGN(PAGE_SIZE);					\
+		VMLINUX_SYMBOL(__hyp_idmap_text_start) = .;		\
+		*(.hyp.idmap.text)					\
+		VMLINUX_SYMBOL(__hyp_idmap_text_end) = .;
+
