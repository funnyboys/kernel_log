commit 83dd9a0b664397209a11849c47f9a59901af4da9
Author: Joshua Kinard <kumba@gentoo.org>
Date:   Thu May 14 23:24:22 2020 -0400

    MIPS: SGI-IP27: Use the _AC() macro in spaces.h
    
    The attached patch wraps several of the macros in IP27's spaces.h
    header file with the _AC() macro.  This matches most of the other
    spaces.h files in the MIPS tree.
    
    Signed-off-by: Joshua Kinard <kumba@gentoo.org>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>

diff --git a/arch/mips/include/asm/mach-ip27/spaces.h b/arch/mips/include/asm/mach-ip27/spaces.h
index 24d5e31bcfa6..66421e9a6aa6 100644
--- a/arch/mips/include/asm/mach-ip27/spaces.h
+++ b/arch/mips/include/asm/mach-ip27/spaces.h
@@ -10,17 +10,19 @@
 #ifndef _ASM_MACH_IP27_SPACES_H
 #define _ASM_MACH_IP27_SPACES_H
 
+#include <linux/const.h>
+
 /*
  * IP27 uses the R10000's uncached attribute feature.  Attribute 3 selects
  * uncached memory addressing. Hide the definitions on 32-bit compilation
  * of the compat-vdso code.
  */
 #ifdef CONFIG_64BIT
-#define HSPEC_BASE		0x9000000000000000
-#define IO_BASE			0x9200000000000000
-#define MSPEC_BASE		0x9400000000000000
-#define UNCAC_BASE		0x9600000000000000
-#define CAC_BASE		0xa800000000000000
+#define HSPEC_BASE		_AC(0x9000000000000000, UL)
+#define IO_BASE			_AC(0x9200000000000000, UL)
+#define MSPEC_BASE		_AC(0x9400000000000000, UL)
+#define UNCAC_BASE		_AC(0x9600000000000000, UL)
+#define CAC_BASE		_AC(0xa800000000000000, UL)
 #endif
 
 #define TO_MSPEC(x)		(MSPEC_BASE | ((x) & TO_PHYS_MASK))

commit 1742ac265046f34223e06d5d283496f0291be259
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Jan 17 16:18:36 2017 +0100

    MIPS: VDSO: avoid duplicate CAC_BASE definition
    
    vdso.h includes <spaces.h> implicitly after defining CONFIG_32BITS.
    This defeats the override in mach-ip27/spaces.h, leading to
    a build error that shows up in kernelci.org:
    
    In file included from arch/mips/include/asm/mach-ip27/spaces.h:29:0,
                     from arch/mips/include/asm/page.h:12,
                     from arch/mips/vdso/vdso.h:26,
                     from arch/mips/vdso/gettimeofday.c:11:
    arch/mips/include/asm/mach-generic/spaces.h:28:0: error: "CAC_BASE" redefined [-Werror]
     #define CAC_BASE  _AC(0x80000000, UL)
    
    An earlier patch tried to make the second definition conditional,
    but that patch had the #ifdef in the wrong place, and would lead
    to another warning:
    
    arch/mips/include/asm/io.h: In function 'phys_to_virt':
    arch/mips/include/asm/io.h:138:9: error: cast to pointer from integer of different size [-Werror=int-to-pointer-cast]
    
    For all I can tell, there is no other reason than vdso32 to ever
    include this file with CONFIG_32BITS set, and the vdso itself should
    never refer to the base addresses as it is running in user space,
    so adding an #ifdef here is safe.
    
    Link: https://patchwork.kernel.org/patch/9418187/
    Fixes: 3ffc17d8768b ("MIPS: Adjust MIPS64 CAC_BASE to reflect Config.K0")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Cc: Paul Burton <paul.burton@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Cc: linux-kernel@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/15039/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>

diff --git a/arch/mips/include/asm/mach-ip27/spaces.h b/arch/mips/include/asm/mach-ip27/spaces.h
index 4775a1136a5b..24d5e31bcfa6 100644
--- a/arch/mips/include/asm/mach-ip27/spaces.h
+++ b/arch/mips/include/asm/mach-ip27/spaces.h
@@ -12,14 +12,16 @@
 
 /*
  * IP27 uses the R10000's uncached attribute feature.  Attribute 3 selects
- * uncached memory addressing.
+ * uncached memory addressing. Hide the definitions on 32-bit compilation
+ * of the compat-vdso code.
  */
-
+#ifdef CONFIG_64BIT
 #define HSPEC_BASE		0x9000000000000000
 #define IO_BASE			0x9200000000000000
 #define MSPEC_BASE		0x9400000000000000
 #define UNCAC_BASE		0x9600000000000000
 #define CAC_BASE		0xa800000000000000
+#endif
 
 #define TO_MSPEC(x)		(MSPEC_BASE | ((x) & TO_PHYS_MASK))
 #define TO_HSPEC(x)		(HSPEC_BASE | ((x) & TO_PHYS_MASK))

commit 3ffc17d8768be705e292ac4c2e3ab1f18dc06047
Author: Paul Burton <paul.burton@imgtec.com>
Date:   Wed Oct 5 18:18:18 2016 +0100

    MIPS: Adjust MIPS64 CAC_BASE to reflect Config.K0
    
    On MIPS64 we define the default CAC_BASE as one of the xkphys regions of
    the virtual address space. Since the CCA is encoded in bits 61:59 of
    xkphys addresses, fixing CAC_BASE to any particular one prevents us from
    dynamically changing the CCA as we do for MIPS32 where CAC_BASE is
    placed within kseg0. In order to make the kernel more generic, drop the
    current kludge that gives CAC_BASE CCA=3 if CONFIG_DMA_NONCOHERENT is
    selected (disregarding CONFIG_DMA_MAYBE_COHERENT) & CCA=5 (which is not
    standardised by the architecture) otherwise. Instead read Config.K0 and
    generate the appropriate offset into xkphys, presuming that either the
    bootloader or early kernel code will have configured Config.K0
    appropriately. This seems like the best option for a generic
    implementation.
    
    The ip27 spaces.h is adjusted to set its former value of CAC_BASE, since
    it's the only user of CAC_BASE from assembly (in its smp_slave_setup
    macro). This allows the generic case to focus solely on C code without
    breaking ip27.
    
    Signed-off-by: Paul Burton <paul.burton@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/14351/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>

diff --git a/arch/mips/include/asm/mach-ip27/spaces.h b/arch/mips/include/asm/mach-ip27/spaces.h
index b18802a0b17e..4775a1136a5b 100644
--- a/arch/mips/include/asm/mach-ip27/spaces.h
+++ b/arch/mips/include/asm/mach-ip27/spaces.h
@@ -19,6 +19,7 @@
 #define IO_BASE			0x9200000000000000
 #define MSPEC_BASE		0x9400000000000000
 #define UNCAC_BASE		0x9600000000000000
+#define CAC_BASE		0xa800000000000000
 
 #define TO_MSPEC(x)		(MSPEC_BASE | ((x) & TO_PHYS_MASK))
 #define TO_HSPEC(x)		(HSPEC_BASE | ((x) & TO_PHYS_MASK))

commit 384740dc49ea651ba350704d13ff6be9976e37fe
Author: Ralf Baechle <ralf@linux-mips.org>
Date:   Tue Sep 16 19:48:51 2008 +0200

    MIPS: Move headfiles to new location below arch/mips/include
    
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>

diff --git a/arch/mips/include/asm/mach-ip27/spaces.h b/arch/mips/include/asm/mach-ip27/spaces.h
new file mode 100644
index 000000000000..b18802a0b17e
--- /dev/null
+++ b/arch/mips/include/asm/mach-ip27/spaces.h
@@ -0,0 +1,30 @@
+/*
+ * This file is subject to the terms and conditions of the GNU General Public
+ * License.  See the file "COPYING" in the main directory of this archive
+ * for more details.
+ *
+ * Copyright (C) 1996, 99 Ralf Baechle
+ * Copyright (C) 2000, 2002  Maciej W. Rozycki
+ * Copyright (C) 1990, 1999 by Silicon Graphics, Inc.
+ */
+#ifndef _ASM_MACH_IP27_SPACES_H
+#define _ASM_MACH_IP27_SPACES_H
+
+/*
+ * IP27 uses the R10000's uncached attribute feature.  Attribute 3 selects
+ * uncached memory addressing.
+ */
+
+#define HSPEC_BASE		0x9000000000000000
+#define IO_BASE			0x9200000000000000
+#define MSPEC_BASE		0x9400000000000000
+#define UNCAC_BASE		0x9600000000000000
+
+#define TO_MSPEC(x)		(MSPEC_BASE | ((x) & TO_PHYS_MASK))
+#define TO_HSPEC(x)		(HSPEC_BASE | ((x) & TO_PHYS_MASK))
+
+#define HIGHMEM_START		(~0UL)
+
+#include <asm/mach-generic/spaces.h>
+
+#endif /* _ASM_MACH_IP27_SPACES_H */
