commit c60f99445aed684b5a8d84dcb84f5a06c1f70430
Author: Bjorn Helgaas <bhelgaas@google.com>
Date:   Sun Jul 12 18:11:20 2015 -0500

    MIPS: MT: Remove "weak" from vpe_run() declaration
    
    Weak header file declarations are error-prone because they make every
    definition weak, and the linker chooses one based on link order (see
    10629d711ed7 ("PCI: Remove __weak annotation from pcibios_get_phb_of_node
    decl")).
    
    That's not a problem for vpe_run() because Kconfig ensures there's never
    more than one definition:
    
      - vpe_run() is defined in arch/mips/kernel/vpe-mt.c if
        CONFIG_MIPS_VPE_LOADER_MT=y
    
      - vpe_run() is defined in arch/mips/mti-malta/malta-amon.c if
        CONFIG_MIPS_CMP=y
    
      - CONFIG_MIPS_VPE_LOADER_MT cannot be set if CONFIG_MIPS_CMP=y
    
    But it's simpler to verify correctness if we remove "weak" from the picture
    and test the config symbols directly.
    
    Remove "weak" from the vpe_run() declaration and use #if to test whether a
    definition should be present.
    
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Cc: Andrew Bresticker <abrestic@chromium.org>
    Cc: linux-mips@linux-mips.org
    Cc: James Hogan <james.hogan@imgtec.com>
    Cc: linux-kernel@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/10684/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>

diff --git a/arch/mips/include/asm/vpe.h b/arch/mips/include/asm/vpe.h
index 7849f3978fea..80e70dbd1f64 100644
--- a/arch/mips/include/asm/vpe.h
+++ b/arch/mips/include/asm/vpe.h
@@ -122,7 +122,7 @@ void release_vpe(struct vpe *v);
 void *alloc_progmem(unsigned long len);
 void release_progmem(void *ptr);
 
-int __weak vpe_run(struct vpe *v);
+int vpe_run(struct vpe *v);
 void cleanup_tc(struct tc *tc);
 
 int __init vpe_module_init(void);

commit cdfc83075fb76369a31e6c187d0cebcab9f8b9c8
Merge: 04a24ae45d01 b26a21c1eacd
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Jan 30 17:20:32 2014 -0800

    Merge branch 'upstream' of git://git.linux-mips.org/pub/scm/ralf/upstream-linus
    
    Pull MIPS updates from Ralf Baechle:
     "The most notable new addition inside this pull request is the support
      for MIPS's latest and greatest core called "inter/proAptiv".  The
      patch series describes this core as follows.
    
        "The interAptiv is a power-efficient multi-core microprocessor
         for use in system-on-chip (SoC) applications. The interAptiv combines
         a multi-threading pipeline with a coherence manager to deliver improved
         computational throughput and power efficiency. The interAptiv can
         contain one to four MIPS32R3 interAptiv cores, system level
         coherence manager with L2 cache, optional coherent I/O port,
         and optional floating point unit."
    
      The platform specific patches touch all 3 Broadcom families.  It adds
      support for the new Broadcom/Netlogix XLP9xx Soc, building a common
      BCM63XX SMP kernel for all BCM63XX SoCs regardless of core type/count
      and full gpio button/led descriptions for BCM47xx.
    
      The rest of the series are cleanups and bug fixes that are MIPS
      generic and consist largely of changes that Imgtec/MIPS had published
      in their linux-mti-3.10.git stable tree.  Random other cleanups and
      patches preparing code to be merged in 3.15"
    
    * 'upstream' of git://git.linux-mips.org/pub/scm/ralf/upstream-linus: (139 commits)
      mips: select ARCH_MIGHT_HAVE_PC_SERIO
      mips: delete non-required instances of include <linux/init.h>
      MIPS: KVM: remove shadow_tlb code
      MIPS: KVM: use common EHINV aware UNIQUE_ENTRYHI
      mips/ide: flush dcache also if icache does not snoop dcache
      MIPS: BCM47XX: fix position of cpu_wait disabling
      MIPS: BCM63XX: select correct MIPS_L1_CACHE_SHIFT value
      MIPS: update MIPS_L1_CACHE_SHIFT based on MIPS_L1_CACHE_SHIFT_<N>
      MIPS: introduce MIPS_L1_CACHE_SHIFT_<N>
      MIPS: ZBOOT: gather string functions into string.c
      arch/mips/pci: don't check resource with devm_ioremap_resource
      arch/mips/lantiq/xway: don't check resource with devm_ioremap_resource
      bcma: gpio: don't cast u32 to unsigned long
      ssb: gpio: add own IRQ domain
      MIPS: BCM47XX: fix sparse warnings in board.c
      MIPS: BCM47XX: add board detection for Linksys WRT54GS V1
      MIPS: BCM47XX: fix detection for some boards
      MIPS: BCM47XX: Enable buttons support on SSB
      MIPS: BCM47XX: Convert WNDR4500 to new syntax
      MIPS: BCM47XX: Use "timer" trigger for status LEDs
      ...

commit f58437f1f9161847c636e4fed5569ed5b908af36
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Tue Jan 21 10:28:15 2014 -0800

    MIPS: VPE: Remove vpe_getuid and vpe_getgid
    
    The linux build-bot recently reported a build error in arch/mips/kernel/vpe.c
    
         tree:   git://git.kernel.org/pub/scm/linux/kernel/git/ebiederm/user-namespace.git for-linus
         head:   261000a56b6382f597bcb12000f55c9ff26a1efb
         commit: 261000a56b6382f597bcb12000f55c9ff26a1efb [4/4] userns:  userns: Remove UIDGID_STRICT_TYPE_CHECKS
         config: make ARCH=mips maltaaprp_defconfig
    
         All error/warnings:
    
            arch/mips/kernel/vpe.c: In function 'vpe_open':
         >> arch/mips/kernel/vpe.c:1086:9: error: incompatible types when assigning to type 'unsigned int' from type 'kuid_t'
         >> arch/mips/kernel/vpe.c:1087:9: error: incompatible types when assigning to type 'unsigned int' from type 'kgid_t'
    
         vim +1086 arch/mips/kernel/vpe.c
    
         863abad4 Jesper Juhl   2010-10-30  1080                    return -ENOMEM;
         863abad4 Jesper Juhl   2010-10-30  1081            }
         e01402b1 Ralf Baechle  2005-07-14  1082            v->plen = P_SIZE;
         e01402b1 Ralf Baechle  2005-07-14  1083            v->load_addr = NULL;
         e01402b1 Ralf Baechle  2005-07-14  1084            v->len = 0;
         e01402b1 Ralf Baechle  2005-07-14  1085
         d76b0d9b David Howells 2008-11-14 @1086            v->uid = filp->f_cred->fsuid;
         d76b0d9b David Howells 2008-11-14 @1087            v->gid = filp->f_cred->fsgid;
         2600990e Ralf Baechle  2006-04-05  1088
         2600990e Ralf Baechle  2006-04-05  1089            v->cwd[0] = 0;
         2600990e Ralf Baechle  2006-04-05  1090            ret = getcwd(v->cwd, VPE_PATH_MAX);
    
    When examining the code to see what v->uid and v->gid were used for I
    discovered that the only users in the kernel are vpe_getuid and
    vpe_getgid, and that vpe_getuid and vpe_getgid are never called.
    
    So instead of proposing a conversion to use kuid_t and kgid_t instead
    of unsigned int/int as I normally would let's just kill this dead code
    so no one has to worry about it further.
    
    Deng-Cheng Zhu said:
    
    This is a good catch. vpe_get[u|g]id was originally used by KSPD which
    has been removed.
    
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Reviewed-by: Deng-Cheng Zhu <dengcheng.zhu@imgtec.com>
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>

diff --git a/arch/mips/include/asm/vpe.h b/arch/mips/include/asm/vpe.h
index c6e1b961537d..0880fe8809b1 100644
--- a/arch/mips/include/asm/vpe.h
+++ b/arch/mips/include/asm/vpe.h
@@ -30,8 +30,6 @@ struct vpe_notifications {
 extern int vpe_notify(int index, struct vpe_notifications *notify);
 
 extern void *vpe_get_shared(int index);
-extern int vpe_getuid(int index);
-extern int vpe_getgid(int index);
 extern char *vpe_getcwd(int index);
 
 #endif /* _ASM_VPE_H */

commit 5792bf6438658cb129c3022aa2cf7e9b19b5de3a
Author: Steven J. Hill <Steven.Hill@imgtec.com>
Date:   Wed Jan 1 16:35:32 2014 +0100

    MIPS: APRP: Code formatting clean-ups.
    
    Clean-up code according to the 'checkpatch.pl' script.
    
    Signed-off-by: Steven J. Hill <Steven.Hill@imgtec.com>
    Reviewed-by: Qais Yousef <Qais.Yousef@imgtec.com>
    Patchwork: http://patchwork.linux-mips.org/patch/6097/
    Reviewed-by: John Crispin <blogic@openwrt.org>

diff --git a/arch/mips/include/asm/vpe.h b/arch/mips/include/asm/vpe.h
index becd5554cf5b..e0684f5f0054 100644
--- a/arch/mips/include/asm/vpe.h
+++ b/arch/mips/include/asm/vpe.h
@@ -1,22 +1,11 @@
 /*
+ * This file is subject to the terms and conditions of the GNU General Public
+ * License.  See the file "COPYING" in the main directory of this archive
+ * for more details.
+ *
  * Copyright (C) 2005 MIPS Technologies, Inc.  All rights reserved.
  * Copyright (C) 2013 Imagination Technologies Ltd.
- *
- *  This program is free software; you can distribute it and/or modify it
- *  under the terms of the GNU General Public License (Version 2) as
- *  published by the Free Software Foundation.
- *
- *  This program is distributed in the hope it will be useful, but WITHOUT
- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
- *  for more details.
- *
- *  You should have received a copy of the GNU General Public License along
- *  with this program; if not, write to the Free Software Foundation, Inc.,
- *  59 Temple Place - Suite 330, Boston MA 02111-1307, USA.
- *
  */
-
 #ifndef _ASM_VPE_H
 #define _ASM_VPE_H
 

commit 1a2a6d7e8816ed2b2679a0c4f7ba4019cd31dd62
Author: Deng-Cheng Zhu <dengcheng.zhu@imgtec.com>
Date:   Wed Oct 30 15:52:06 2013 -0500

    MIPS: APRP: Split VPE loader into separate files.
    
    Split the VPE functionality in preparation for adding support
    for CMP platforms. Common functions remain in the original file
    and a new file contains code specific to platforms that do not
    have a CMP present.
    
    Signed-off-by: Deng-Cheng Zhu <dengcheng.zhu@imgtec.com>
    Signed-off-by: Steven J. Hill <Steven.Hill@imgtec.com>
    Reviewed-by: Qais Yousef <Qais.Yousef@imgtec.com>
    Signed-off-by: John Crispin <blogic@openwrt.org>
    Patchwork: http://patchwork.linux-mips.org/patch/6094/

diff --git a/arch/mips/include/asm/vpe.h b/arch/mips/include/asm/vpe.h
index c6e1b961537d..becd5554cf5b 100644
--- a/arch/mips/include/asm/vpe.h
+++ b/arch/mips/include/asm/vpe.h
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 2005 MIPS Technologies, Inc.  All rights reserved.
+ * Copyright (C) 2013 Imagination Technologies Ltd.
  *
  *  This program is free software; you can distribute it and/or modify it
  *  under the terms of the GNU General Public License (Version 2) as
@@ -19,6 +20,88 @@
 #ifndef _ASM_VPE_H
 #define _ASM_VPE_H
 
+#include <linux/init.h>
+#include <linux/list.h>
+#include <linux/smp.h>
+#include <linux/spinlock.h>
+
+#define VPE_MODULE_NAME "vpe"
+#define VPE_MODULE_MINOR 1
+
+/* grab the likely amount of memory we will need. */
+#ifdef CONFIG_MIPS_VPE_LOADER_TOM
+#define P_SIZE (2 * 1024 * 1024)
+#else
+/* add an overhead to the max kmalloc size for non-striped symbols/etc */
+#define P_SIZE (256 * 1024)
+#endif
+
+#define MAX_VPES 16
+#define VPE_PATH_MAX 256
+
+static inline int aprp_cpu_index(void)
+{
+#ifdef CONFIG_MIPS_CMP
+	return setup_max_cpus;
+#else
+	extern int tclimit;
+	return tclimit;
+#endif
+}
+
+enum vpe_state {
+	VPE_STATE_UNUSED = 0,
+	VPE_STATE_INUSE,
+	VPE_STATE_RUNNING
+};
+
+enum tc_state {
+	TC_STATE_UNUSED = 0,
+	TC_STATE_INUSE,
+	TC_STATE_RUNNING,
+	TC_STATE_DYNAMIC
+};
+
+struct vpe {
+	enum vpe_state state;
+
+	/* (device) minor associated with this vpe */
+	int minor;
+
+	/* elfloader stuff */
+	void *load_addr;
+	unsigned long len;
+	char *pbuffer;
+	unsigned long plen;
+	unsigned int uid, gid;
+	char cwd[VPE_PATH_MAX];
+
+	unsigned long __start;
+
+	/* tc's associated with this vpe */
+	struct list_head tc;
+
+	/* The list of vpe's */
+	struct list_head list;
+
+	/* shared symbol address */
+	void *shared_ptr;
+
+	/* the list of who wants to know when something major happens */
+	struct list_head notify;
+
+	unsigned int ntcs;
+};
+
+struct tc {
+	enum tc_state state;
+	int index;
+
+	struct vpe *pvpe;	/* parent VPE */
+	struct list_head tc;	/* The list of TC's with this VPE */
+	struct list_head list;	/* The global list of tc's */
+};
+
 struct vpe_notifications {
 	void (*start)(int vpe);
 	void (*stop)(int vpe);
@@ -26,12 +109,36 @@ struct vpe_notifications {
 	struct list_head list;
 };
 
+struct vpe_control {
+	spinlock_t vpe_list_lock;
+	struct list_head vpe_list;      /* Virtual processing elements */
+	spinlock_t tc_list_lock;
+	struct list_head tc_list;       /* Thread contexts */
+};
+
+extern unsigned long physical_memsize;
+extern struct vpe_control vpecontrol;
+extern const struct file_operations vpe_fops;
+
+int vpe_notify(int index, struct vpe_notifications *notify);
+
+void *vpe_get_shared(int index);
+int vpe_getuid(int index);
+int vpe_getgid(int index);
+char *vpe_getcwd(int index);
+
+struct vpe *get_vpe(int minor);
+struct tc *get_tc(int index);
+struct vpe *alloc_vpe(int minor);
+struct tc *alloc_tc(int index);
+void release_vpe(struct vpe *v);
 
-extern int vpe_notify(int index, struct vpe_notifications *notify);
+void *alloc_progmem(unsigned long len);
+void release_progmem(void *ptr);
 
-extern void *vpe_get_shared(int index);
-extern int vpe_getuid(int index);
-extern int vpe_getgid(int index);
-extern char *vpe_getcwd(int index);
+int __weak vpe_run(struct vpe *v);
+void cleanup_tc(struct tc *tc);
 
+int __init vpe_module_init(void);
+void __exit vpe_module_exit(void);
 #endif /* _ASM_VPE_H */

commit 384740dc49ea651ba350704d13ff6be9976e37fe
Author: Ralf Baechle <ralf@linux-mips.org>
Date:   Tue Sep 16 19:48:51 2008 +0200

    MIPS: Move headfiles to new location below arch/mips/include
    
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>

diff --git a/arch/mips/include/asm/vpe.h b/arch/mips/include/asm/vpe.h
new file mode 100644
index 000000000000..c6e1b961537d
--- /dev/null
+++ b/arch/mips/include/asm/vpe.h
@@ -0,0 +1,37 @@
+/*
+ * Copyright (C) 2005 MIPS Technologies, Inc.  All rights reserved.
+ *
+ *  This program is free software; you can distribute it and/or modify it
+ *  under the terms of the GNU General Public License (Version 2) as
+ *  published by the Free Software Foundation.
+ *
+ *  This program is distributed in the hope it will be useful, but WITHOUT
+ *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+ *  for more details.
+ *
+ *  You should have received a copy of the GNU General Public License along
+ *  with this program; if not, write to the Free Software Foundation, Inc.,
+ *  59 Temple Place - Suite 330, Boston MA 02111-1307, USA.
+ *
+ */
+
+#ifndef _ASM_VPE_H
+#define _ASM_VPE_H
+
+struct vpe_notifications {
+	void (*start)(int vpe);
+	void (*stop)(int vpe);
+
+	struct list_head list;
+};
+
+
+extern int vpe_notify(int index, struct vpe_notifications *notify);
+
+extern void *vpe_get_shared(int index);
+extern int vpe_getuid(int index);
+extern int vpe_getgid(int index);
+extern char *vpe_getcwd(int index);
+
+#endif /* _ASM_VPE_H */
