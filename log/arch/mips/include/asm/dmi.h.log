commit be8fa1cb444cdf3dcab72053939d073394886ff8
Author: Tiezhu Yang <yangtiezhu@loongson.cn>
Date:   Wed Feb 5 12:08:33 2020 +0800

    MIPS: Add support for Desktop Management Interface (DMI)
    
    Enable DMI scanning on the MIPS architecture, this setups DMI identifiers
    (dmi_system_id) for printing it out on task dumps and prepares DIMM entry
    information (dmi_memdev_info) from the SMBIOS table. With this patch, the
    driver can easily match various of mainboards.
    
    In the SMBIOS reference specification, the table anchor string "_SM_" is
    present in the address range 0xF0000 to 0xFFFFF on a 16-byte boundary,
    but there exists a special case for Loongson platform, when call function
    dmi_early_remap, it should specify the start address to 0xFFFE000 due to
    it is reserved for SMBIOS and can be normally access in the BIOS.
    
    This patch works fine on the Loongson 3A3000 platform which belongs to
    MIPS architecture and has no influence on the other architectures such
    as x86 and ARM.
    
    Additionally, in order to avoid the unknown risks on the mips platform
    which is not MACH_LOONGSON64, the DMI config is better to depend on
    MACH_LOONGSON64. If other mips platform also needs this DMI feature in
    the future, the "depends on" condition can be modified.
    
    Co-developed-by: Yinglu Yang <yangyinglu@loongson.cn>
    Signed-off-by: Yinglu Yang <yangyinglu@loongson.cn>
    [jiaxun.yang@flygoat.com: Refine definitions and Kconfig]
    Signed-off-by: Jiaxun Yang <jiaxun.yang@flygoat.com>
    Signed-off-by: Tiezhu Yang <yangtiezhu@loongson.cn>
    Reviewed-by: Huacai Chen <chenhc@lemote.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>

diff --git a/arch/mips/include/asm/dmi.h b/arch/mips/include/asm/dmi.h
new file mode 100644
index 000000000000..27415a288adf
--- /dev/null
+++ b/arch/mips/include/asm/dmi.h
@@ -0,0 +1,20 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+#ifndef _ASM_DMI_H
+#define _ASM_DMI_H
+
+#include <linux/io.h>
+#include <linux/memblock.h>
+
+#define dmi_early_remap(x, l)		ioremap_cache(x, l)
+#define dmi_early_unmap(x, l)		iounmap(x)
+#define dmi_remap(x, l)			ioremap_cache(x, l)
+#define dmi_unmap(x)			iounmap(x)
+
+/* MIPS initialize DMI scan before SLAB is ready, so we use memblock here */
+#define dmi_alloc(l)			memblock_alloc_low(l, PAGE_SIZE)
+
+#if defined(CONFIG_MACH_LOONGSON64)
+#define SMBIOS_ENTRY_POINT_SCAN_START	0xFFFE000
+#endif
+
+#endif /* _ASM_DMI_H */
