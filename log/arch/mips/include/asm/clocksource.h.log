commit 17e46656a82fc4645324043241b3294f6db9a6ce
Author: Vincenzo Frascino <vincenzo.frascino@arm.com>
Date:   Fri Mar 20 14:53:32 2020 +0000

    mips: Introduce asm/vdso/clocksource.h
    
    The vDSO library should only include the necessary headers required for
    a userspace library (UAPI and a minimal set of kernel headers). To make
    this possible it is necessary to isolate from the kernel headers the
    common parts that are strictly necessary to build the library.
    
    Introduce asm/vdso/clocksource.h to contain all the arm64 specific
    functions that are suitable for vDSO inclusion.
    
    This header will be required by a future patch that will generalize
    vdso/clocksource.h.
    
    Signed-off-by: Vincenzo Frascino <vincenzo.frascino@arm.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Paul Burton <paulburton@kernel.org>
    Link: https://lkml.kernel.org/r/20200320145351.32292-8-vincenzo.frascino@arm.com

diff --git a/arch/mips/include/asm/clocksource.h b/arch/mips/include/asm/clocksource.h
index de659cae0d4e..2f1ebbea3d72 100644
--- a/arch/mips/include/asm/clocksource.h
+++ b/arch/mips/include/asm/clocksource.h
@@ -6,8 +6,6 @@
 #ifndef __ASM_CLOCKSOURCE_H
 #define __ASM_CLOCKSOURCE_H
 
-#define VDSO_ARCH_CLOCKMODES	\
-	VDSO_CLOCKMODE_R4K,	\
-	VDSO_CLOCKMODE_GIC
+#include <asm/vdso/clocksource.h>
 
 #endif /* __ASM_CLOCKSOURCE_H */

commit e1bdb22ebe5363ed75ddedf836ca9f19e1195337
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Fri Feb 7 13:38:57 2020 +0100

    mips: vdso: Use generic VDSO clock mode storage
    
    Switch to the generic VDSO clock mode storage.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Vincenzo Frascino <vincenzo.frascino@arm.com>
    Link: https://lkml.kernel.org/r/20200207124403.244684017@linutronix.de

diff --git a/arch/mips/include/asm/clocksource.h b/arch/mips/include/asm/clocksource.h
index cab9ae9f1e14..de659cae0d4e 100644
--- a/arch/mips/include/asm/clocksource.h
+++ b/arch/mips/include/asm/clocksource.h
@@ -3,23 +3,11 @@
  * Copyright (C) 2015 Imagination Technologies
  * Author: Alex Smith <alex.smith@imgtec.com>
  */
-
 #ifndef __ASM_CLOCKSOURCE_H
 #define __ASM_CLOCKSOURCE_H
 
-#include <linux/types.h>
-
-/* VDSO clocksources. */
-#define VDSO_CLOCK_NONE		0	/* No suitable clocksource. */
-#define VDSO_CLOCK_R4K		1	/* Use the coprocessor 0 count. */
-#define VDSO_CLOCK_GIC		2	/* Use the GIC. */
-
-/**
- * struct arch_clocksource_data - Architecture-specific clocksource information.
- * @vdso_clock_mode: Method the VDSO should use to access the clocksource.
- */
-struct arch_clocksource_data {
-	u8 vdso_clock_mode;
-};
+#define VDSO_ARCH_CLOCKMODES	\
+	VDSO_CLOCKMODE_R4K,	\
+	VDSO_CLOCKMODE_GIC
 
 #endif /* __ASM_CLOCKSOURCE_H */

commit 2874c5fd284268364ece81a7bd936f3c8168e567
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon May 27 08:55:01 2019 +0200

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 152
    
    Based on 1 normalized pattern(s):
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license as published by
      the free software foundation either version 2 of the license or at
      your option any later version
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-or-later
    
    has been chosen to replace the boilerplate/reference in 3029 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190527070032.746973796@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/arch/mips/include/asm/clocksource.h b/arch/mips/include/asm/clocksource.h
index 3deb1d0c1a94..cab9ae9f1e14 100644
--- a/arch/mips/include/asm/clocksource.h
+++ b/arch/mips/include/asm/clocksource.h
@@ -1,11 +1,7 @@
+/* SPDX-License-Identifier: GPL-2.0-or-later */
 /*
  * Copyright (C) 2015 Imagination Technologies
  * Author: Alex Smith <alex.smith@imgtec.com>
- *
- * This program is free software; you can redistribute it and/or modify it
- * under the terms of the GNU General Public License as published by the
- * Free Software Foundation;  either version 2 of the  License, or (at your
- * option) any later version.
  */
 
 #ifndef __ASM_CLOCKSOURCE_H

commit a7f4df4e21dd8a8dab96e88acd2c9c5017b83fc6
Author: Alex Smith <alex.smith@imgtec.com>
Date:   Wed Oct 21 09:57:44 2015 +0100

    MIPS: VDSO: Add implementations of gettimeofday() and clock_gettime()
    
    Add user-mode implementations of gettimeofday() and clock_gettime() to
    the VDSO. This is currently usable with 2 clocksources: the CP0 count
    register, which is accessible to user-mode via RDHWR on R2 and later
    cores, or the MIPS Global Interrupt Controller (GIC) timer, which
    provides a "user-mode visible" section containing a mirror of its
    counter registers. This section must be mapped into user memory, which
    is done below the VDSO data page.
    
    When a supported clocksource is not in use, the VDSO functions will
    return -ENOSYS, which causes libc to fall back on the standard syscall
    path.
    
    When support for neither of these clocksources is compiled into the
    kernel at all, the VDSO still provides clock_gettime(), as the coarse
    realtime/monotonic clocks can still be implemented. However,
    gettimeofday() is not provided in this case as nothing can be done
    without a suitable clocksource. This causes the symbol lookup to fail
    in libc and it will then always use the standard syscall path.
    
    This patch includes a workaround for a bug in QEMU which results in
    RDHWR on the CP0 count register always returning a constant (incorrect)
    value. A fix for this has been submitted, and the workaround can be
    removed after the fix has been in stable releases for a reasonable
    amount of time.
    
    A simple performance test which calls gettimeofday() 1000 times in a
    loop and calculates the average execution time gives the following
    results on a Malta + I6400 (running at 20MHz):
    
     - Syscall:    ~31000 ns
     - VDSO (GIC): ~15000 ns
     - VDSO (CP0): ~9500 ns
    
    [markos.chandras@imgtec.com:
    - Minor code re-arrangements in order for mappings to be made
    in the order they appear to the process' address space.
    - Move do_{monotonic, realtime} outside of the MIPS_CLOCK_VSYSCALL ifdef
    - Use gic_get_usm_range so we can do the GIC mapping in the
    arch/mips/kernel/vdso instead of the GIC irqchip driver]
    
    Signed-off-by: Alex Smith <alex.smith@imgtec.com>
    Signed-off-by: Markos Chandras <markos.chandras@imgtec.com>
    Cc: linux-kernel@vger.kernel.org
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/11338/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>

diff --git a/arch/mips/include/asm/clocksource.h b/arch/mips/include/asm/clocksource.h
new file mode 100644
index 000000000000..3deb1d0c1a94
--- /dev/null
+++ b/arch/mips/include/asm/clocksource.h
@@ -0,0 +1,29 @@
+/*
+ * Copyright (C) 2015 Imagination Technologies
+ * Author: Alex Smith <alex.smith@imgtec.com>
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License as published by the
+ * Free Software Foundation;  either version 2 of the  License, or (at your
+ * option) any later version.
+ */
+
+#ifndef __ASM_CLOCKSOURCE_H
+#define __ASM_CLOCKSOURCE_H
+
+#include <linux/types.h>
+
+/* VDSO clocksources. */
+#define VDSO_CLOCK_NONE		0	/* No suitable clocksource. */
+#define VDSO_CLOCK_R4K		1	/* Use the coprocessor 0 count. */
+#define VDSO_CLOCK_GIC		2	/* Use the GIC. */
+
+/**
+ * struct arch_clocksource_data - Architecture-specific clocksource information.
+ * @vdso_clock_mode: Method the VDSO should use to access the clocksource.
+ */
+struct arch_clocksource_data {
+	u8 vdso_clock_mode;
+};
+
+#endif /* __ASM_CLOCKSOURCE_H */
