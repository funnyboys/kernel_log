commit c042be02d730534ee93cb446f194a558b5a84adf
Author: Paul Burton <paul.burton@mips.com>
Date:   Tue Oct 1 21:53:34 2019 +0000

    MIPS: bitops: Use BIT_WORD() & BITS_PER_LONG
    
    Rather than using custom SZLONG_LOG & SZLONG_MASK macros to shift & mask
    a bit index to form word & bit offsets respectively, make use of the
    standard BIT_WORD() & BITS_PER_LONG macros for the same purpose.
    
    volatile is added to the definition of pointers to the long-sized word
    we'll operate on, in order to prevent the compiler complaining that we
    cast away the volatile qualifier of the addr argument. This should have
    no effect on generated code, which in the LL/SC case is inline asm
    anyway & in the non-LLSC case access is constrained by compiler barriers
    provided by raw_local_irq_{save,restore}().
    
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Cc: linux-mips@vger.kernel.org
    Cc: Huacai Chen <chenhc@lemote.com>
    Cc: Jiaxun Yang <jiaxun.yang@flygoat.com>
    Cc: linux-kernel@vger.kernel.org

diff --git a/arch/mips/include/asm/llsc.h b/arch/mips/include/asm/llsc.h
index d240a4a2d1c4..c49738bc3bda 100644
--- a/arch/mips/include/asm/llsc.h
+++ b/arch/mips/include/asm/llsc.h
@@ -12,15 +12,11 @@
 #include <asm/isa-rev.h>
 
 #if _MIPS_SZLONG == 32
-#define SZLONG_LOG 5
-#define SZLONG_MASK 31UL
 #define __LL		"ll	"
 #define __SC		"sc	"
 #define __INS		"ins	"
 #define __EXT		"ext	"
 #elif _MIPS_SZLONG == 64
-#define SZLONG_LOG 6
-#define SZLONG_MASK 63UL
 #define __LL		"lld	"
 #define __SC		"scd	"
 #define __INS		"dins	"

commit ef85d057a605c36063a15345be87a45e0affba88
Author: Paul Burton <paul.burton@mips.com>
Date:   Tue Oct 1 21:53:06 2019 +0000

    MIPS: Use compact branch for LL/SC loops on MIPSr6+
    
    When targeting MIPSr6 or higher make use of a compact branch in LL/SC
    loops, preventing the insertion of a delay slot nop that only serves to
    waste space.
    
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Cc: linux-mips@vger.kernel.org
    Cc: Huacai Chen <chenhc@lemote.com>
    Cc: Jiaxun Yang <jiaxun.yang@flygoat.com>
    Cc: linux-kernel@vger.kernel.org

diff --git a/arch/mips/include/asm/llsc.h b/arch/mips/include/asm/llsc.h
index 9b19f38562ac..d240a4a2d1c4 100644
--- a/arch/mips/include/asm/llsc.h
+++ b/arch/mips/include/asm/llsc.h
@@ -9,6 +9,8 @@
 #ifndef __ASM_LLSC_H
 #define __ASM_LLSC_H
 
+#include <asm/isa-rev.h>
+
 #if _MIPS_SZLONG == 32
 #define SZLONG_LOG 5
 #define SZLONG_MASK 31UL
@@ -32,6 +34,8 @@
  */
 #if R10000_LLSC_WAR
 # define __SC_BEQZ "beqzl	"
+#elif MIPS_ISA_REV >= 6
+# define __SC_BEQZ "beqzc	"
 #else
 # define __SC_BEQZ "beqz	"
 #endif

commit 878f75c7a2530471844a93b01e887f09d24ed57f
Author: Paul Burton <paul.burton@mips.com>
Date:   Tue Oct 1 21:53:05 2019 +0000

    MIPS: Unify sc beqz definition
    
    We currently duplicate the definition of __scbeqz in asm/atomic.h &
    asm/cmpxchg.h. Move it to asm/llsc.h & rename it to __SC_BEQZ to fit
    better with the existing __SC macro provided there.
    
    We include a tab in the string in order to avoid the need for users to
    indent code any further to include whitespace of their own after the
    instruction mnemonic.
    
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Cc: linux-mips@vger.kernel.org
    Cc: Huacai Chen <chenhc@lemote.com>
    Cc: Jiaxun Yang <jiaxun.yang@flygoat.com>
    Cc: linux-kernel@vger.kernel.org

diff --git a/arch/mips/include/asm/llsc.h b/arch/mips/include/asm/llsc.h
index c6d17d171147..9b19f38562ac 100644
--- a/arch/mips/include/asm/llsc.h
+++ b/arch/mips/include/asm/llsc.h
@@ -25,4 +25,15 @@
 #define __EXT		"dext	"
 #endif
 
+/*
+ * Using a branch-likely instruction to check the result of an sc instruction
+ * works around a bug present in R10000 CPUs prior to revision 3.0 that could
+ * cause ll-sc sequences to execute non-atomically.
+ */
+#if R10000_LLSC_WAR
+# define __SC_BEQZ "beqzl	"
+#else
+# define __SC_BEQZ "beqz	"
+#endif
+
 #endif /* __ASM_LLSC_H  */

commit 05490626d5f535baaaec60cdd37167f1a8031a9b
Author: Ralf Baechle <ralf@linux-mips.org>
Date:   Fri Apr 15 10:25:33 2016 +0200

    MIPS: Move definitions for 32/64-bit agonstic inline assembler to new file.
    
    Inspired by Markos Chandras' patch.  I just didn't want do pull bitsops.h
    into pgtable.h.
    
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    References: https://patchwork.linux-mips.org/patch/11052/

diff --git a/arch/mips/include/asm/llsc.h b/arch/mips/include/asm/llsc.h
new file mode 100644
index 000000000000..c6d17d171147
--- /dev/null
+++ b/arch/mips/include/asm/llsc.h
@@ -0,0 +1,28 @@
+/*
+ * This file is subject to the terms and conditions of the GNU General Public
+ * License.  See the file "COPYING" in the main directory of this archive
+ * for more details.
+ *
+ * Macros for 32/64-bit neutral inline assembler
+ */
+
+#ifndef __ASM_LLSC_H
+#define __ASM_LLSC_H
+
+#if _MIPS_SZLONG == 32
+#define SZLONG_LOG 5
+#define SZLONG_MASK 31UL
+#define __LL		"ll	"
+#define __SC		"sc	"
+#define __INS		"ins	"
+#define __EXT		"ext	"
+#elif _MIPS_SZLONG == 64
+#define SZLONG_LOG 6
+#define SZLONG_MASK 63UL
+#define __LL		"lld	"
+#define __SC		"scd	"
+#define __INS		"dins	"
+#define __EXT		"dext	"
+#endif
+
+#endif /* __ASM_LLSC_H  */
