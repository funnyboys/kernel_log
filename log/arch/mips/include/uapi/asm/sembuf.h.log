commit 0fb9dc28679a627f84974165c8011e0630529ece
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Wed Dec 4 16:53:03 2019 -0800

    arch: sembuf.h: make uapi asm/sembuf.h self-contained
    
    Userspace cannot compile <asm/sembuf.h> due to some missing type
    definitions.  For example, building it for x86 fails as follows:
    
        CC      usr/include/asm/sembuf.h.s
      In file included from <command-line>:32:0:
      usr/include/asm/sembuf.h:17:20: error: field `sem_perm' has incomplete type
        struct ipc64_perm sem_perm; /* permissions .. see ipc.h */
                          ^~~~~~~~
      usr/include/asm/sembuf.h:24:2: error: unknown type name `__kernel_time_t'
        __kernel_time_t sem_otime; /* last semop time */
        ^~~~~~~~~~~~~~~
      usr/include/asm/sembuf.h:25:2: error: unknown type name `__kernel_ulong_t'
        __kernel_ulong_t __unused1;
        ^~~~~~~~~~~~~~~~
      usr/include/asm/sembuf.h:26:2: error: unknown type name `__kernel_time_t'
        __kernel_time_t sem_ctime; /* last change time */
        ^~~~~~~~~~~~~~~
      usr/include/asm/sembuf.h:27:2: error: unknown type name `__kernel_ulong_t'
        __kernel_ulong_t __unused2;
        ^~~~~~~~~~~~~~~~
      usr/include/asm/sembuf.h:29:2: error: unknown type name `__kernel_ulong_t'
        __kernel_ulong_t sem_nsems; /* no. of semaphores in array */
        ^~~~~~~~~~~~~~~~
      usr/include/asm/sembuf.h:30:2: error: unknown type name `__kernel_ulong_t'
        __kernel_ulong_t __unused3;
        ^~~~~~~~~~~~~~~~
      usr/include/asm/sembuf.h:31:2: error: unknown type name `__kernel_ulong_t'
        __kernel_ulong_t __unused4;
        ^~~~~~~~~~~~~~~~
    
    It is just a matter of missing include directive.
    
    Include <asm/ipcbuf.h> to make it self-contained, and add it to
    the compile-test coverage.
    
    Link: http://lkml.kernel.org/r/20191030063855.9989-3-yamada.masahiro@socionext.com
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/arch/mips/include/uapi/asm/sembuf.h b/arch/mips/include/uapi/asm/sembuf.h
index 43e1b4a2f68a..ba7fe0c89e7d 100644
--- a/arch/mips/include/uapi/asm/sembuf.h
+++ b/arch/mips/include/uapi/asm/sembuf.h
@@ -2,6 +2,8 @@
 #ifndef _ASM_SEMBUF_H
 #define _ASM_SEMBUF_H
 
+#include <asm/ipcbuf.h>
+
 /*
  * The semid64_ds structure for the MIPS architecture.
  * Note extra padding because this structure is passed back and forth

commit caf5e32d4ea7253820f38dd7c429f8d4a8019c5f
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Nov 4 21:17:26 2019 +0100

    y2038: ipc: remove __kernel_time_t reference from headers
    
    There are two structures based on time_t that conflict between libc and
    kernel: timeval and timespec. Both are now renamed to __kernel_old_timeval
    and __kernel_old_timespec.
    
    For time_t, the old typedef is still __kernel_time_t. There is nothing
    wrong with that name, but it would be nice to not use that going forward
    as this type is used almost only in deprecated interfaces because of
    the y2038 overflow.
    
    In the IPC headers (msgbuf.h, sembuf.h, shmbuf.h), __kernel_time_t is only
    used for the 64-bit variants, which are not deprecated.
    
    Change these to a plain 'long', which is the same type as __kernel_time_t
    on all 64-bit architectures anyway, to reduce the number of users of the
    old type.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>

diff --git a/arch/mips/include/uapi/asm/sembuf.h b/arch/mips/include/uapi/asm/sembuf.h
index 60c89e6cb25b..43e1b4a2f68a 100644
--- a/arch/mips/include/uapi/asm/sembuf.h
+++ b/arch/mips/include/uapi/asm/sembuf.h
@@ -14,8 +14,8 @@
 #ifdef __mips64
 struct semid64_ds {
 	struct ipc64_perm sem_perm;		/* permissions .. see ipc.h */
-	__kernel_time_t sem_otime;		/* last semop time */
-	__kernel_time_t sem_ctime;		/* last change time */
+	long		 sem_otime;		/* last semop time */
+	long		 sem_ctime;		/* last change time */
 	unsigned long	sem_nsems;		/* no. of semaphores in array */
 	unsigned long	__unused1;
 	unsigned long	__unused2;

commit 3f3a4b3fbf2f2bede531b0c9a3ba2baed87cf420
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue May 5 22:53:12 2015 +0200

    y2038: mips: Extend sysvipc data structures
    
    MIPS is the weirdest case for sysvipc, because each of the
    three data structures is done differently:
    
    * msqid64_ds has padding in the right place so we could in theory
      extend this one to just have 64-bit values instead of time_t.
      As this does not work for most of the other combinations,
      we just handle it in the common manner though.
    
    * semid64_ds has no padding for 64-bit time_t, but has two reserved
      'long' fields, which are sufficient to extend the sem_otime
      and sem_ctime fields to 64 bit. In order to do this, the libc
      implementation will have to copy the data into another structure
      that has the fields in a different order. MIPS is the only
      architecture with this problem, so this is best done in MIPS
      specific libc code.
    
    * shmid64_ds is slightly worse than that, because it has three
      time_t fields but only two unused 32-bit words. As a workaround,
      we extend each field only by 16 bits, ending up with 48-bit
      timestamps that user space again has to work around by itself.
    
    The compat versions of the data structures are changed in the
    same way.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>

diff --git a/arch/mips/include/uapi/asm/sembuf.h b/arch/mips/include/uapi/asm/sembuf.h
index 2c0f507ab7d1..60c89e6cb25b 100644
--- a/arch/mips/include/uapi/asm/sembuf.h
+++ b/arch/mips/include/uapi/asm/sembuf.h
@@ -7,10 +7,11 @@
  * Note extra padding because this structure is passed back and forth
  * between kernel and user space.
  *
- * Pad space is left for:
- * - 2 miscellaneous 64-bit values
+ * Pad space is left for 2 miscellaneous 64-bit values on mips64,
+ * but used for the upper 32 bit of the time values on mips32.
  */
 
+#ifdef __mips64
 struct semid64_ds {
 	struct ipc64_perm sem_perm;		/* permissions .. see ipc.h */
 	__kernel_time_t sem_otime;		/* last semop time */
@@ -19,5 +20,15 @@ struct semid64_ds {
 	unsigned long	__unused1;
 	unsigned long	__unused2;
 };
+#else
+struct semid64_ds {
+	struct ipc64_perm sem_perm;		/* permissions .. see ipc.h */
+	unsigned long   sem_otime;		/* last semop time */
+	unsigned long   sem_ctime;		/* last change time */
+	unsigned long	sem_nsems;		/* no. of semaphores in array */
+	unsigned long	sem_otime_high;
+	unsigned long	sem_ctime_high;
+};
+#endif
 
 #endif /* _ASM_SEMBUF_H */

commit 6f52b16c5b29b89d92c0e7236f4655dc8491ad70
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Nov 1 15:08:43 2017 +0100

    License cleanup: add SPDX license identifier to uapi header files with no license
    
    Many user space API headers are missing licensing information, which
    makes it hard for compliance tools to determine the correct license.
    
    By default are files without license information under the default
    license of the kernel, which is GPLV2.  Marking them GPLV2 would exclude
    them from being included in non GPLV2 code, which is obviously not
    intended. The user space API headers fall under the syscall exception
    which is in the kernels COPYING file:
    
       NOTE! This copyright does *not* cover user programs that use kernel
       services by normal system calls - this is merely considered normal use
       of the kernel, and does *not* fall under the heading of "derived work".
    
    otherwise syscall usage would not be possible.
    
    Update the files which contain no license information with an SPDX
    license identifier.  The chosen identifier is 'GPL-2.0 WITH
    Linux-syscall-note' which is the officially assigned identifier for the
    Linux syscall exception.  SPDX license identifiers are a legally binding
    shorthand, which can be used instead of the full boiler plate text.
    
    This patch is based on work done by Thomas Gleixner and Kate Stewart and
    Philippe Ombredanne.  See the previous patch in this series for the
    methodology of how this patch was researched.
    
    Reviewed-by: Kate Stewart <kstewart@linuxfoundation.org>
    Reviewed-by: Philippe Ombredanne <pombredanne@nexb.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/arch/mips/include/uapi/asm/sembuf.h b/arch/mips/include/uapi/asm/sembuf.h
index e1085ac880f2..2c0f507ab7d1 100644
--- a/arch/mips/include/uapi/asm/sembuf.h
+++ b/arch/mips/include/uapi/asm/sembuf.h
@@ -1,3 +1,4 @@
+/* SPDX-License-Identifier: GPL-2.0 WITH Linux-syscall-note */
 #ifndef _ASM_SEMBUF_H
 #define _ASM_SEMBUF_H
 

commit 7034228792cc561e79ff8600f02884bd4c80e287
Author: Ralf Baechle <ralf@linux-mips.org>
Date:   Tue Jan 22 12:59:30 2013 +0100

    MIPS: Whitespace cleanup.
    
    Having received another series of whitespace patches I decided to do this
    once and for all rather than dealing with this kind of patches trickling
    in forever.
    
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>

diff --git a/arch/mips/include/uapi/asm/sembuf.h b/arch/mips/include/uapi/asm/sembuf.h
index 7281a4decaa0..e1085ac880f2 100644
--- a/arch/mips/include/uapi/asm/sembuf.h
+++ b/arch/mips/include/uapi/asm/sembuf.h
@@ -12,8 +12,8 @@
 
 struct semid64_ds {
 	struct ipc64_perm sem_perm;		/* permissions .. see ipc.h */
-	__kernel_time_t	sem_otime;		/* last semop time */
-	__kernel_time_t	sem_ctime;		/* last change time */
+	__kernel_time_t sem_otime;		/* last semop time */
+	__kernel_time_t sem_ctime;		/* last change time */
 	unsigned long	sem_nsems;		/* no. of semaphores in array */
 	unsigned long	__unused1;
 	unsigned long	__unused2;

commit 61730c538f8281efa7ac12596da9f3f9a31b9272
Author: David Howells <dhowells@redhat.com>
Date:   Tue Oct 9 09:47:14 2012 +0100

    UAPI: (Scripted) Disintegrate arch/mips/include/asm
    
    Signed-off-by: David Howells <dhowells@redhat.com>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Michael Kerrisk <mtk.manpages@gmail.com>
    Acked-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Acked-by: Dave Jones <davej@redhat.com>

diff --git a/arch/mips/include/uapi/asm/sembuf.h b/arch/mips/include/uapi/asm/sembuf.h
new file mode 100644
index 000000000000..7281a4decaa0
--- /dev/null
+++ b/arch/mips/include/uapi/asm/sembuf.h
@@ -0,0 +1,22 @@
+#ifndef _ASM_SEMBUF_H
+#define _ASM_SEMBUF_H
+
+/*
+ * The semid64_ds structure for the MIPS architecture.
+ * Note extra padding because this structure is passed back and forth
+ * between kernel and user space.
+ *
+ * Pad space is left for:
+ * - 2 miscellaneous 64-bit values
+ */
+
+struct semid64_ds {
+	struct ipc64_perm sem_perm;		/* permissions .. see ipc.h */
+	__kernel_time_t	sem_otime;		/* last semop time */
+	__kernel_time_t	sem_ctime;		/* last change time */
+	unsigned long	sem_nsems;		/* no. of semaphores in array */
+	unsigned long	__unused1;
+	unsigned long	__unused2;
+};
+
+#endif /* _ASM_SEMBUF_H */
