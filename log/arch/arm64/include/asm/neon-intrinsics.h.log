commit d2912cb15bdda8ba4a5dd73396ad62641af2f520
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Tue Jun 4 10:11:33 2019 +0200

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 500
    
    Based on 2 normalized pattern(s):
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license version 2 as
      published by the free software foundation
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license version 2 as
      published by the free software foundation #
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-only
    
    has been chosen to replace the boilerplate/reference in 4122 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Enrico Weigelt <info@metux.net>
    Reviewed-by: Kate Stewart <kstewart@linuxfoundation.org>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190604081206.933168790@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/arch/arm64/include/asm/neon-intrinsics.h b/arch/arm64/include/asm/neon-intrinsics.h
index 71abfc7612b2..5f13505d39fc 100644
--- a/arch/arm64/include/asm/neon-intrinsics.h
+++ b/arch/arm64/include/asm/neon-intrinsics.h
@@ -1,9 +1,6 @@
+/* SPDX-License-Identifier: GPL-2.0-only */
 /*
  * Copyright (C) 2018 Linaro, Ltd. <ard.biesheuvel@linaro.org>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License version 2 as
- * published by the Free Software Foundation.
  */
 
 #ifndef __ASM_NEON_INTRINSICS_H

commit 0738c8b5915c7eaf1e6007b441008e8f3b460443
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Thu Feb 14 18:39:59 2019 -0700

    arm64/neon: Disable -Wincompatible-pointer-types when building with Clang
    
    After commit cc9f8349cb33 ("arm64: crypto: add NEON accelerated XOR
    implementation"), Clang builds for arm64 started failing with the
    following error message.
    
    arch/arm64/lib/xor-neon.c:58:28: error: incompatible pointer types
    assigning to 'const unsigned long *' from 'uint64_t *' (aka 'unsigned
    long long *') [-Werror,-Wincompatible-pointer-types]
                    v3 = veorq_u64(vld1q_u64(dp1 +  6), vld1q_u64(dp2 + 6));
                                             ^~~~~~~~
    /usr/lib/llvm-9/lib/clang/9.0.0/include/arm_neon.h:7538:47: note:
    expanded from macro 'vld1q_u64'
      __ret = (uint64x2_t) __builtin_neon_vld1q_v(__p0, 51); \
                                                  ^~~~
    
    There has been quite a bit of debate and triage that has gone into
    figuring out what the proper fix is, viewable at the link below, which
    is still ongoing. Ard suggested disabling this warning with Clang with a
    pragma so no neon code will have this type of error. While this is not
    at all an ideal solution, this build error is the only thing preventing
    KernelCI from having successful arm64 defconfig and allmodconfig builds
    on linux-next. Getting continuous integration running is more important
    so new warnings/errors or boot failures can be caught and fixed quickly.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/283
    Suggested-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Acked-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>

diff --git a/arch/arm64/include/asm/neon-intrinsics.h b/arch/arm64/include/asm/neon-intrinsics.h
index 2ba6c6b9541f..71abfc7612b2 100644
--- a/arch/arm64/include/asm/neon-intrinsics.h
+++ b/arch/arm64/include/asm/neon-intrinsics.h
@@ -36,4 +36,8 @@
 #include <arm_neon.h>
 #endif
 
+#ifdef CONFIG_CC_IS_CLANG
+#pragma clang diagnostic ignored "-Wincompatible-pointer-types"
+#endif
+
 #endif /* __ASM_NEON_INTRINSICS_H */

commit 21e28547f613e7ba4f4cb6831a3ead2d723fdf7b
Author: Jackie Liu <liuyun01@kylinos.cn>
Date:   Tue Dec 4 09:43:22 2018 +0800

    arm64/neon: add workaround for ambiguous C99 stdint.h types
    
    In a way similar to ARM commit 09096f6a0ee2 ("ARM: 7822/1: add workaround
    for ambiguous C99 stdint.h types"), this patch redefines the macros that
    are used in stdint.h so its definitions of uint64_t and int64_t are
    compatible with those of the kernel.
    
    This patch comes from: https://patchwork.kernel.org/patch/3540001/
    Wrote by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    
    We mark this file as a private file and don't have to override asm/types.h
    
    Signed-off-by: Jackie Liu <liuyun01@kylinos.cn>
    Reviewed-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>

diff --git a/arch/arm64/include/asm/neon-intrinsics.h b/arch/arm64/include/asm/neon-intrinsics.h
new file mode 100644
index 000000000000..2ba6c6b9541f
--- /dev/null
+++ b/arch/arm64/include/asm/neon-intrinsics.h
@@ -0,0 +1,39 @@
+/*
+ * Copyright (C) 2018 Linaro, Ltd. <ard.biesheuvel@linaro.org>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+
+#ifndef __ASM_NEON_INTRINSICS_H
+#define __ASM_NEON_INTRINSICS_H
+
+#include <asm-generic/int-ll64.h>
+
+/*
+ * In the kernel, u64/s64 are [un]signed long long, not [un]signed long.
+ * So by redefining these macros to the former, we can force gcc-stdint.h
+ * to define uint64_t / in64_t in a compatible manner.
+ */
+
+#ifdef __INT64_TYPE__
+#undef __INT64_TYPE__
+#define __INT64_TYPE__		long long
+#endif
+
+#ifdef __UINT64_TYPE__
+#undef __UINT64_TYPE__
+#define __UINT64_TYPE__		unsigned long long
+#endif
+
+/*
+ * genksyms chokes on the ARM NEON instrinsics system header, but we
+ * don't export anything it defines anyway, so just disregard when
+ * genksyms execute.
+ */
+#ifndef __GENKSYMS__
+#include <arm_neon.h>
+#endif
+
+#endif /* __ASM_NEON_INTRINSICS_H */
