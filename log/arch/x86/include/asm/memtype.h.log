commit 7fa3e10f0f3646108a1018004d0f571c3222dc9f
Author: Christoph Hellwig <hch@lst.de>
Date:   Wed Apr 8 17:27:43 2020 +0200

    x86/mm: Move pgprot2cachemode out of line
    
    This helper is only used by x86 low-level MM code.  Also remove the
    entirely pointless __pte2cachemode_tbl export as that symbol can be
    marked static now.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20200408152745.1565832-3-hch@lst.de

diff --git a/arch/x86/include/asm/memtype.h b/arch/x86/include/asm/memtype.h
index 1e4e99b40711..9ca760e430b9 100644
--- a/arch/x86/include/asm/memtype.h
+++ b/arch/x86/include/asm/memtype.h
@@ -25,5 +25,6 @@ extern void memtype_free_io(resource_size_t start, resource_size_t end);
 extern bool pat_pfn_immune_to_uc_mtrr(unsigned long pfn);
 
 bool x86_has_pat_wp(void);
+enum page_cache_mode pgprot2cachemode(pgprot_t pgprot);
 
 #endif /* _ASM_X86_MEMTYPE_H */

commit 1f6f655e01adebf5bd5e6c3da2e843c104ded051
Author: Christoph Hellwig <hch@lst.de>
Date:   Wed Apr 8 17:27:42 2020 +0200

    x86/mm: Add a x86_has_pat_wp() helper
    
    Abstract the ioremap code away from the caching mode internals.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20200408152745.1565832-2-hch@lst.de

diff --git a/arch/x86/include/asm/memtype.h b/arch/x86/include/asm/memtype.h
index 9c2447b3555d..1e4e99b40711 100644
--- a/arch/x86/include/asm/memtype.h
+++ b/arch/x86/include/asm/memtype.h
@@ -24,4 +24,6 @@ extern void memtype_free_io(resource_size_t start, resource_size_t end);
 
 extern bool pat_pfn_immune_to_uc_mtrr(unsigned long pfn);
 
+bool x86_has_pat_wp(void);
+
 #endif /* _ASM_X86_MEMTYPE_H */

commit 533d49b37a2b532354d3841a142173b8321818df
Author: Ingo Molnar <mingo@kernel.org>
Date:   Wed Nov 20 15:45:32 2019 +0100

    x86/mm/pat: Clean up <asm/memtype.h> externs
    
    Half of the declarations have an 'extern', half of them not,
    use 'extern' consistently.
    
    This makes grepping for APIs easier, such as:
    
      dagon:~/tip> git grep -E '\<memtype_.*\(' arch/x86/ | grep extern
      arch/x86/include/asm/memtype.h:extern int memtype_reserve(u64 start, u64 end,
      arch/x86/include/asm/memtype.h:extern int memtype_free(u64 start, u64 end);
      arch/x86/include/asm/memtype.h:extern int memtype_kernel_map_sync(u64 base, unsigned long size,
      arch/x86/include/asm/memtype.h:extern int memtype_reserve_io(resource_size_t start, resource_size_t end,
      arch/x86/include/asm/memtype.h:extern void memtype_free_io(resource_size_t start, resource_size_t end);
      arch/x86/mm/pat/memtype.h:extern int memtype_check_insert(struct memtype *entry_new,
      arch/x86/mm/pat/memtype.h:extern struct memtype *memtype_erase(u64 start, u64 end);
      arch/x86/mm/pat/memtype.h:extern struct memtype *memtype_lookup(u64 addr);
      arch/x86/mm/pat/memtype.h:extern int memtype_copy_nth_element(struct memtype *entry_out, loff_t pos);
    
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

diff --git a/arch/x86/include/asm/memtype.h b/arch/x86/include/asm/memtype.h
index ec18e38ae391..9c2447b3555d 100644
--- a/arch/x86/include/asm/memtype.h
+++ b/arch/x86/include/asm/memtype.h
@@ -5,8 +5,8 @@
 #include <linux/types.h>
 #include <asm/pgtable_types.h>
 
-bool pat_enabled(void);
-void pat_disable(const char *reason);
+extern bool pat_enabled(void);
+extern void pat_disable(const char *reason);
 extern void pat_init(void);
 extern void init_cache_modes(void);
 
@@ -17,11 +17,11 @@ extern int memtype_free(u64 start, u64 end);
 extern int memtype_kernel_map_sync(u64 base, unsigned long size,
 		enum page_cache_mode pcm);
 
-int memtype_reserve_io(resource_size_t start, resource_size_t end,
+extern int memtype_reserve_io(resource_size_t start, resource_size_t end,
 			enum page_cache_mode *pcm);
 
-void memtype_free_io(resource_size_t start, resource_size_t end);
+extern void memtype_free_io(resource_size_t start, resource_size_t end);
 
-bool pat_pfn_immune_to_uc_mtrr(unsigned long pfn);
+extern bool pat_pfn_immune_to_uc_mtrr(unsigned long pfn);
 
 #endif /* _ASM_X86_MEMTYPE_H */

commit eb243d1d28663c9b92010973a6a3ffa947f682ba
Author: Ingo Molnar <mingo@kernel.org>
Date:   Wed Nov 20 15:33:57 2019 +0100

    x86/mm/pat: Rename <asm/pat.h> => <asm/memtype.h>
    
    pat.h is a file whose main purpose is to provide the memtype_*() APIs.
    
    PAT is the low level hardware mechanism - but the high level abstraction
    is memtype.
    
    So name the header <memtype.h> as well - this goes hand in hand with memtype.c
    and memtype_interval.c.
    
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

diff --git a/arch/x86/include/asm/memtype.h b/arch/x86/include/asm/memtype.h
new file mode 100644
index 000000000000..ec18e38ae391
--- /dev/null
+++ b/arch/x86/include/asm/memtype.h
@@ -0,0 +1,27 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+#ifndef _ASM_X86_MEMTYPE_H
+#define _ASM_X86_MEMTYPE_H
+
+#include <linux/types.h>
+#include <asm/pgtable_types.h>
+
+bool pat_enabled(void);
+void pat_disable(const char *reason);
+extern void pat_init(void);
+extern void init_cache_modes(void);
+
+extern int memtype_reserve(u64 start, u64 end,
+		enum page_cache_mode req_pcm, enum page_cache_mode *ret_pcm);
+extern int memtype_free(u64 start, u64 end);
+
+extern int memtype_kernel_map_sync(u64 base, unsigned long size,
+		enum page_cache_mode pcm);
+
+int memtype_reserve_io(resource_size_t start, resource_size_t end,
+			enum page_cache_mode *pcm);
+
+void memtype_free_io(resource_size_t start, resource_size_t end);
+
+bool pat_pfn_immune_to_uc_mtrr(unsigned long pfn);
+
+#endif /* _ASM_X86_MEMTYPE_H */
