commit 7010adcdd23527f7efef1e7bc0d8c458f6ec0dd2
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon Apr 23 00:02:09 2018 +0200

    x86/jailhouse: Fix incorrect SPDX identifier
    
    GPL2.0 is not a valid SPDX identiier. Replace it with GPL-2.0.
    
    Fixes: 4a362601baa6 ("x86/jailhouse: Add infrastructure for running in non-root cell")
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Jan Kiszka <jan.kiszka@siemens.com>
    Cc: Kate Stewart <kstewart@linuxfoundation.org>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Philippe Ombredanne <pombredanne@nexb.com>
    Link: https://lkml.kernel.org/r/20180422220832.815346488@linutronix.de

diff --git a/arch/x86/include/asm/jailhouse_para.h b/arch/x86/include/asm/jailhouse_para.h
index b885a961a150..a34897aef2c2 100644
--- a/arch/x86/include/asm/jailhouse_para.h
+++ b/arch/x86/include/asm/jailhouse_para.h
@@ -1,4 +1,4 @@
-/* SPDX-License-Identifier: GPL2.0 */
+/* SPDX-License-Identifier: GPL-2.0 */
 
 /*
  * Jailhouse paravirt detection

commit 63338a38db955cb4e0352c11b78732157c78d30b
Author: Jan Kiszka <jan.kiszka@siemens.com>
Date:   Wed Mar 7 08:39:12 2018 +0100

    jailhouse: Provide detection for non-x86 systems
    
    Implement jailhouse_paravirt() via device tree probing on architectures
    != x86. Will be used by the PCI core.
    
    Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Cc: jailhouse-dev@googlegroups.com
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: linux-pci@vger.kernel.org
    Cc: virtualization@lists.linux-foundation.org
    Cc: Andy Shevchenko <andy.shevchenko@gmail.com>
    Cc: Rob Herring <robh+dt@kernel.org>
    Cc: Bjorn Helgaas <bhelgaas@google.com>
    Link: https://lkml.kernel.org/r/dae9fe0c6e63141c28ca90492fa5712b4c33ffb5.1520408357.git.jan.kiszka@siemens.com

diff --git a/arch/x86/include/asm/jailhouse_para.h b/arch/x86/include/asm/jailhouse_para.h
index 875b54376689..b885a961a150 100644
--- a/arch/x86/include/asm/jailhouse_para.h
+++ b/arch/x86/include/asm/jailhouse_para.h
@@ -1,7 +1,7 @@
 /* SPDX-License-Identifier: GPL2.0 */
 
 /*
- * Jailhouse paravirt_ops implementation
+ * Jailhouse paravirt detection
  *
  * Copyright (c) Siemens AG, 2015-2017
  *

commit 4a362601baa6fff92b576d85199f1948cec2fb3b
Author: Jan Kiszka <jan.kiszka@siemens.com>
Date:   Mon Nov 27 09:11:46 2017 +0100

    x86/jailhouse: Add infrastructure for running in non-root cell
    
    The Jailhouse hypervisor is able to statically partition a multicore
    system into multiple so-called cells. Linux is used as boot loader and
    continues to run in the root cell after Jailhouse is enabled. Linux can
    also run in non-root cells.
    
    Jailhouse does not emulate usual x86 devices. It also provides no
    complex ACPI but basic platform information that the boot loader
    forwards via setup data. This adds the infrastructure to detect when
    running in a non-root cell so that the platform can be configured as
    required in succeeding steps.
    
    Support is limited to x86-64 so far, primarily because no boot loader
    stub exists for i386 and, thus, we wouldn't be able to test the 32-bit
    path.
    
    Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: jailhouse-dev@googlegroups.com
    Link: https://lkml.kernel.org/r/7f823d077b38b1a70c526b40b403f85688c137d3.1511770314.git.jan.kiszka@siemens.com

diff --git a/arch/x86/include/asm/jailhouse_para.h b/arch/x86/include/asm/jailhouse_para.h
new file mode 100644
index 000000000000..875b54376689
--- /dev/null
+++ b/arch/x86/include/asm/jailhouse_para.h
@@ -0,0 +1,26 @@
+/* SPDX-License-Identifier: GPL2.0 */
+
+/*
+ * Jailhouse paravirt_ops implementation
+ *
+ * Copyright (c) Siemens AG, 2015-2017
+ *
+ * Authors:
+ *  Jan Kiszka <jan.kiszka@siemens.com>
+ */
+
+#ifndef _ASM_X86_JAILHOUSE_PARA_H
+#define _ASM_X86_JAILHOUSE_PARA_H
+
+#include <linux/types.h>
+
+#ifdef CONFIG_JAILHOUSE_GUEST
+bool jailhouse_paravirt(void);
+#else
+static inline bool jailhouse_paravirt(void)
+{
+	return false;
+}
+#endif
+
+#endif /* _ASM_X86_JAILHOUSE_PARA_H */
