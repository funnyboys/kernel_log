commit 98253a546a468d88b7e782ab67cdf447d3c7bbe2
Author: Jiri Olsa <jolsa@kernel.org>
Date:   Sun Jun 16 16:03:51 2019 +0200

    perf/x86: Add MSR probe interface
    
    Adding perf_msr_probe function to provide interface for
    checking up on MSR register and set the related attribute
    group visibility.
    
    User defines following struct for each MSR register:
    
      struct perf_msr {
           u64                       msr;
           struct attribute_group   *grp;
           bool                    (*test)(int idx, void *data);
           bool                      no_check;
      };
    
    Where:
      msr      - is the MSR address
      attrs    - is attribute groups array to add if the check passed
      test     - is test function pointer
      no_check - is bool that bypass the check and adds the
                  attribute without any test
    
    The array of struct perf_msr is passed into:
    
      perf_msr_probe(struct perf_msr *msr, int cnt, bool zero, void *data)
    
    Together with:
      cnt  - which is the number of struct msr array elements
      data - which is user pointer passed to the test function
      zero - allow counters that returns zero on rdmsr
    
    The perf_msr_probe will executed test code, read the MSR and
    check the value is != 0. If all these tests pass, related
    attribute group is kept visible.
    
    Also adding PMU_EVENT_GROUP macro helper to define attribute
    group for single attribute. It will be used in following patches.
    
    Signed-off-by: Jiri Olsa <jolsa@kernel.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Kan <kan.liang@linux.intel.com>
    Cc: Liang
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Vince Weaver <vincent.weaver@maine.edu>
    Link: https://lkml.kernel.org/r/20190616140358.27799-2-jolsa@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

diff --git a/arch/x86/events/probe.h b/arch/x86/events/probe.h
new file mode 100644
index 000000000000..4c8e0afc5fb5
--- /dev/null
+++ b/arch/x86/events/probe.h
@@ -0,0 +1,29 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+#ifndef __ARCH_X86_EVENTS_PROBE_H__
+#define __ARCH_X86_EVENTS_PROBE_H__
+#include <linux/sysfs.h>
+
+struct perf_msr {
+	u64			  msr;
+	struct attribute_group	 *grp;
+	bool			(*test)(int idx, void *data);
+	bool			  no_check;
+};
+
+unsigned long
+perf_msr_probe(struct perf_msr *msr, int cnt, bool no_zero, void *data);
+
+#define __PMU_EVENT_GROUP(_name)			\
+static struct attribute *attrs_##_name[] = {		\
+	&attr_##_name.attr.attr,			\
+	NULL,						\
+}
+
+#define PMU_EVENT_GROUP(_grp, _name)			\
+__PMU_EVENT_GROUP(_name);				\
+static struct attribute_group group_##_name = {		\
+	.name  = #_grp,					\
+	.attrs = attrs_##_name,				\
+}
+
+#endif /* __ARCH_X86_EVENTS_PROBE_H__ */
