commit b886d83c5b621abc84ff9616f14c529be3f6b147
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Sat Jun 1 10:08:55 2019 +0200

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 441
    
    Based on 1 normalized pattern(s):
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license as published by
      the free software foundation version 2 of the license
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-only
    
    has been chosen to replace the boilerplate/reference in 315 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Reviewed-by: Armijn Hemel <armijn@tjaldur.nl>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190531190115.503150771@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/arch/powerpc/sysdev/fsl_msi.h b/arch/powerpc/sysdev/fsl_msi.h
index a67359d993e5..e2a1bfc7c237 100644
--- a/arch/powerpc/sysdev/fsl_msi.h
+++ b/arch/powerpc/sysdev/fsl_msi.h
@@ -1,14 +1,9 @@
+/* SPDX-License-Identifier: GPL-2.0-only */
 /*
  * Copyright (C) 2007-2008 Freescale Semiconductor, Inc. All rights reserved.
  *
  * Author: Tony Li <tony.li@freescale.com>
  *	   Jason Jin <Jason.jin@freescale.com>
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation; version 2 of the
- * License.
- *
  */
 #ifndef _POWERPC_SYSDEV_FSL_MSI_H
 #define _POWERPC_SYSDEV_FSL_MSI_H

commit ff015659b631621fc9d60403a5dfbdf72c1cd058
Author: Hongtao Jia <hongtao.jia@freescale.com>
Date:   Thu Feb 26 15:23:08 2015 +0800

    powerpc/85xx: workaround for chips with MSI hardware errata
    
    The MPIC version 2.0 has a MSI errata (errata PIC1 of mpc8544), It causes
    that neither MSI nor MSI-X can work fine. This is a workaround to allow
    MSI-X to function properly.
    
    Signed-off-by: Liu Shuo <soniccat.liu@gmail.com>
    Signed-off-by: Li Yang <leoli@freescale.com>
    Signed-off-by: Jia Hongtao <hongtao.jia@freescale.com>
    Signed-off-by: Scott Wood <scottwood@freescale.com>

diff --git a/arch/powerpc/sysdev/fsl_msi.h b/arch/powerpc/sysdev/fsl_msi.h
index 420cfcbdac01..a67359d993e5 100644
--- a/arch/powerpc/sysdev/fsl_msi.h
+++ b/arch/powerpc/sysdev/fsl_msi.h
@@ -27,6 +27,8 @@
 #define FSL_PIC_IP_IPIC   0x00000002
 #define FSL_PIC_IP_VMPIC  0x00000003
 
+#define MSI_HW_ERRATA_ENDIAN 0x00000010
+
 struct fsl_msi_cascade_data;
 
 struct fsl_msi {

commit cb0446c1b625326682ec4f9d1dd10779433646bc
Author: Scott Wood <scottwood@freescale.com>
Date:   Fri Sep 19 15:20:36 2014 -0500

    Revert "powerpc/fsl_msi: spread msi ints across different MSIRs"
    
    This reverts commit c822e73731fce3b49a4887140878d084d8a44c08.
    
    This commit conflicted with a bitmap allocator change that partially
    accomplishes the same thing, but which does so more correctly.  Revert
    this one until it can be respun on top of the correct change.
    
    Signed-off-by: Scott Wood <scottwood@freescale.com>

diff --git a/arch/powerpc/sysdev/fsl_msi.h b/arch/powerpc/sysdev/fsl_msi.h
index 50ec4b04c732..420cfcbdac01 100644
--- a/arch/powerpc/sysdev/fsl_msi.h
+++ b/arch/powerpc/sysdev/fsl_msi.h
@@ -15,7 +15,6 @@
 
 #include <linux/of.h>
 #include <asm/msi_bitmap.h>
-#include <asm/atomic.h>
 
 #define NR_MSI_REG_MSIIR	8  /* MSIIR can index 8 MSI registers */
 #define NR_MSI_REG_MSIIR1	16 /* MSIIR1 can index 16 MSI registers */
@@ -28,8 +27,6 @@
 #define FSL_PIC_IP_IPIC   0x00000002
 #define FSL_PIC_IP_VMPIC  0x00000003
 
-#define FSL_PIC_FTR_MPIC_4_3 0x00000010
-
 struct fsl_msi_cascade_data;
 
 struct fsl_msi {
@@ -40,8 +37,6 @@ struct fsl_msi {
 	u32 msiir_offset; /* Offset of MSIIR, relative to start of CCSR */
 	u32 ibs_shift; /* Shift of interrupt bit select */
 	u32 srs_shift; /* Shift of the shared interrupt register select */
-	u32 msir_num; /* Number of available MSIR regs */
-	atomic_t msi_alloc_cnt; /* Counter for MSI hwirq allocations */
 	void __iomem *msi_regs;
 	u32 feature;
 	struct fsl_msi_cascade_data *cascade_array[NR_MSI_REG_MAX];

commit c822e73731fce3b49a4887140878d084d8a44c08
Author: Tudor Laurentiu <b10716@freescale.com>
Date:   Thu Aug 21 12:33:53 2014 +0300

    powerpc/fsl_msi: spread msi ints across different MSIRs
    
    Allocate msis such that each time a new interrupt is requested,
    the SRS (MSIR register select) to be used is allocated in a
    round-robin fashion.
    The end result is that the msi interrupts will be spread across
    distinct MSIRs with the main benefit that now users can set
    affinity to each msi int through the mpic irq backing up the
    MSIR register.
    This is achieved with the help of a newly introduced msi bitmap
    api that allows specifying the starting point when searching
    for a free msi interrupt.
    
    Signed-off-by: Laurentiu Tudor <Laurentiu.Tudor@freescale.com>
    Cc: Scott Wood <scottwood@freescale.com>
    Cc: Mihai Caraman <mihai.caraman@freescale.com>
    Signed-off-by: Scott Wood <scottwood@freescale.com>

diff --git a/arch/powerpc/sysdev/fsl_msi.h b/arch/powerpc/sysdev/fsl_msi.h
index 420cfcbdac01..50ec4b04c732 100644
--- a/arch/powerpc/sysdev/fsl_msi.h
+++ b/arch/powerpc/sysdev/fsl_msi.h
@@ -15,6 +15,7 @@
 
 #include <linux/of.h>
 #include <asm/msi_bitmap.h>
+#include <asm/atomic.h>
 
 #define NR_MSI_REG_MSIIR	8  /* MSIIR can index 8 MSI registers */
 #define NR_MSI_REG_MSIIR1	16 /* MSIIR1 can index 16 MSI registers */
@@ -27,6 +28,8 @@
 #define FSL_PIC_IP_IPIC   0x00000002
 #define FSL_PIC_IP_VMPIC  0x00000003
 
+#define FSL_PIC_FTR_MPIC_4_3 0x00000010
+
 struct fsl_msi_cascade_data;
 
 struct fsl_msi {
@@ -37,6 +40,8 @@ struct fsl_msi {
 	u32 msiir_offset; /* Offset of MSIIR, relative to start of CCSR */
 	u32 ibs_shift; /* Shift of interrupt bit select */
 	u32 srs_shift; /* Shift of the shared interrupt register select */
+	u32 msir_num; /* Number of available MSIR regs */
+	atomic_t msi_alloc_cnt; /* Counter for MSI hwirq allocations */
 	void __iomem *msi_regs;
 	u32 feature;
 	struct fsl_msi_cascade_data *cascade_array[NR_MSI_REG_MAX];

commit 834952314c8bae7331b0797a071958dda9bec60d
Author: Tudor Laurentiu <b10716@freescale.com>
Date:   Tue Aug 19 14:25:01 2014 +0300

    powerpc/fsl_msi: reorganize structs to improve clarity and flexibility
    
    Store cascade_data in an array inside the driver
    data for later use.
    Get rid of the msi_virq array since now we can
    encapsulate the virqs in the cascade_data
    directly and access them through the array
    mentioned earlier.
    
    Signed-off-by: Laurentiu Tudor <Laurentiu.Tudor@freescale.com>
    Cc: Scott Wood <scottwood@freescale.com>
    Cc: Mihai Caraman <mihai.caraman@freescale.com>
    Signed-off-by: Scott Wood <scottwood@freescale.com>

diff --git a/arch/powerpc/sysdev/fsl_msi.h b/arch/powerpc/sysdev/fsl_msi.h
index df9aa9fe0933..420cfcbdac01 100644
--- a/arch/powerpc/sysdev/fsl_msi.h
+++ b/arch/powerpc/sysdev/fsl_msi.h
@@ -27,6 +27,8 @@
 #define FSL_PIC_IP_IPIC   0x00000002
 #define FSL_PIC_IP_VMPIC  0x00000003
 
+struct fsl_msi_cascade_data;
+
 struct fsl_msi {
 	struct irq_domain *irqhost;
 
@@ -37,7 +39,7 @@ struct fsl_msi {
 	u32 srs_shift; /* Shift of the shared interrupt register select */
 	void __iomem *msi_regs;
 	u32 feature;
-	int msi_virqs[NR_MSI_REG_MAX];
+	struct fsl_msi_cascade_data *cascade_array[NR_MSI_REG_MAX];
 
 	struct msi_bitmap bitmap;
 

commit f31dd9443afd35696a833c2a32d584a9257abd40
Author: Minghuan Lian <Minghuan.Lian@freescale.com>
Date:   Fri Jun 21 18:59:14 2013 +0800

    powerpc/fsl_msi: add MSIIR1 support for MPIC v4.3
    
    The original MPIC MSI bank contains 8 registers, MPIC v4.3 MSI bank
    contains 16 registers, and this patch adds NR_MSI_REG_MAX and
    NR_MSI_IRQS_MAX to describe the maximum capability of MSI bank.
    MPIC v4.3 provides MSIIR1 to index these 16 MSI registers. MSIIR1
    uses different bits definition than MSIIR. This patch adds
    ibs_shift and srs_shift to indicate the bits definition of the
    MSIIR and MSIIR1, so the same code can handle the MSIIR and MSIIR1
    simultaneously.
    
    Signed-off-by: Minghuan Lian <Minghuan.Lian@freescale.com>
    [scottwood@freescale.com: reinstated static on all_avail]
    Signed-off-by: Scott Wood <scottwood@freescale.com>

diff --git a/arch/powerpc/sysdev/fsl_msi.h b/arch/powerpc/sysdev/fsl_msi.h
index 8225f8653f78..df9aa9fe0933 100644
--- a/arch/powerpc/sysdev/fsl_msi.h
+++ b/arch/powerpc/sysdev/fsl_msi.h
@@ -16,9 +16,11 @@
 #include <linux/of.h>
 #include <asm/msi_bitmap.h>
 
-#define NR_MSI_REG		8
+#define NR_MSI_REG_MSIIR	8  /* MSIIR can index 8 MSI registers */
+#define NR_MSI_REG_MSIIR1	16 /* MSIIR1 can index 16 MSI registers */
+#define NR_MSI_REG_MAX		NR_MSI_REG_MSIIR1
 #define IRQS_PER_MSI_REG	32
-#define NR_MSI_IRQS	(NR_MSI_REG * IRQS_PER_MSI_REG)
+#define NR_MSI_IRQS_MAX	(NR_MSI_REG_MAX * IRQS_PER_MSI_REG)
 
 #define FSL_PIC_IP_MASK   0x0000000F
 #define FSL_PIC_IP_MPIC   0x00000001
@@ -31,9 +33,11 @@ struct fsl_msi {
 	unsigned long cascade_irq;
 
 	u32 msiir_offset; /* Offset of MSIIR, relative to start of CCSR */
+	u32 ibs_shift; /* Shift of interrupt bit select */
+	u32 srs_shift; /* Shift of the shared interrupt register select */
 	void __iomem *msi_regs;
 	u32 feature;
-	int msi_virqs[NR_MSI_REG];
+	int msi_virqs[NR_MSI_REG_MAX];
 
 	struct msi_bitmap bitmap;
 

commit bae1d8f19983fbfa25559aa3cb6a81a84aa82a18
Author: Grant Likely <grant.likely@secretlab.ca>
Date:   Tue Feb 14 14:06:50 2012 -0700

    irq_domain/powerpc: Use common irq_domain structure instead of irq_host
    
    This patch drops the powerpc-specific irq_host structures and uses the common
    irq_domain strucutres defined in linux/irqdomain.h.  It also fixes all
    the users to use the new structure names.
    
    Renaming irq_host to irq_domain has been discussed for a long time, and this
    patch is a step in the process of generalizing the powerpc virq code to be
    usable by all architecture.
    
    An astute reader will notice that this patch actually removes the irq_host
    structure instead of renaming it.  This is because the irq_domain structure
    already exists in include/linux/irqdomain.h and has the needed data members.
    
    Signed-off-by: Grant Likely <grant.likely@secretlab.ca>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Milton Miller <miltonm@bga.com>
    Tested-by: Olof Johansson <olof@lixom.net>

diff --git a/arch/powerpc/sysdev/fsl_msi.h b/arch/powerpc/sysdev/fsl_msi.h
index f6c646a52541..8225f8653f78 100644
--- a/arch/powerpc/sysdev/fsl_msi.h
+++ b/arch/powerpc/sysdev/fsl_msi.h
@@ -26,7 +26,7 @@
 #define FSL_PIC_IP_VMPIC  0x00000003
 
 struct fsl_msi {
-	struct irq_host *irqhost;
+	struct irq_domain *irqhost;
 
 	unsigned long cascade_irq;
 

commit 446bc1ffe4f2cac228909fe0ac48884d12700d81
Author: Timur Tabi <timur@freescale.com>
Date:   Tue Dec 13 14:51:59 2011 -0600

    powerpc/fsl: add MSI support for the Freescale hypervisor
    
    Add support for vmpic-msi nodes to the fsl_msi driver.  The MSI is
    virtualized by the hypervisor, so the vmpic-msi does not contain a 'reg'
    property.  Instead, the driver uses hcalls.
    
    Add support for the "msi-address-64" property to the fsl_pci driver.
    The Freescale hypervisor typically puts the virtualized MSIIR register
    in the page after the end of DDR, so we extend the DDR ATMU to cover it.
    Any other location for MSIIR is not supported, for now.
    
    Signed-off-by: Timur Tabi <timur@freescale.com>
    Signed-off-by: Kumar Gala <galak@kernel.crashing.org>

diff --git a/arch/powerpc/sysdev/fsl_msi.h b/arch/powerpc/sysdev/fsl_msi.h
index b5d25ba51311..f6c646a52541 100644
--- a/arch/powerpc/sysdev/fsl_msi.h
+++ b/arch/powerpc/sysdev/fsl_msi.h
@@ -20,9 +20,10 @@
 #define IRQS_PER_MSI_REG	32
 #define NR_MSI_IRQS	(NR_MSI_REG * IRQS_PER_MSI_REG)
 
-#define FSL_PIC_IP_MASK	0x0000000F
-#define FSL_PIC_IP_MPIC	0x00000001
-#define FSL_PIC_IP_IPIC	0x00000002
+#define FSL_PIC_IP_MASK   0x0000000F
+#define FSL_PIC_IP_MPIC   0x00000001
+#define FSL_PIC_IP_IPIC   0x00000002
+#define FSL_PIC_IP_VMPIC  0x00000003
 
 struct fsl_msi {
 	struct irq_host *irqhost;

commit 895d603f945baf7d1680b7657561212890e3a803
Author: Timur Tabi <timur@freescale.com>
Date:   Mon Oct 31 17:06:35 2011 -0500

    powerpc/fsl_msi: add support for the fsl, msi property in PCI nodes
    
    On Freescale parts with multiple MSI controllers, the controllers are
    combined into one "pool" of interrupts.  Whenever a device requests an MSI
    interrupt, the next available interrupt from the pool is selected,
    regardless of which MSI controller the interrupt is from.  This works
    because each PCI bus has an ATMU to all of CCSR, so any PCI device can
    access any MSI interrupt register.
    
    The fsl,msi property is used to specify that a given PCI bus should only
    use a specific MSI device.  This is necessary, for example, with the
    Freescale hypervisor, because the MSI devices are assigned to specific
    partitions.
    
    Ideally, we'd like to be able to assign MSI devices to PCI busses within
    the MSI or PCI layers.  However, there does not appear to be a mechanism
    to do that.  Whenever the MSI layer wants to allocate an MSI interrupt to
    a PCI device, it just calls arch_setup_msi_irqs().  It would be nice if we
    could register an MSI device with a specific PCI bus.
    
    So instead we remember the phandles of each MSI device, and we use that to
    limit our search for an available interrupt.  Whenever we are asked to
    allocate a new interrupt for a PCI device, we check the fsl,msi property
    of the PCI bus for that device.  If it exists, then as we are looping over
    all MSI devices, we skip the ones that don't have a matching phandle.
    
    Signed-off-by: Timur Tabi <timur@freescale.com>
    Signed-off-by: Kumar Gala <galak@kernel.crashing.org>

diff --git a/arch/powerpc/sysdev/fsl_msi.h b/arch/powerpc/sysdev/fsl_msi.h
index 1313abbc5200..b5d25ba51311 100644
--- a/arch/powerpc/sysdev/fsl_msi.h
+++ b/arch/powerpc/sysdev/fsl_msi.h
@@ -13,6 +13,7 @@
 #ifndef _POWERPC_SYSDEV_FSL_MSI_H
 #define _POWERPC_SYSDEV_FSL_MSI_H
 
+#include <linux/of.h>
 #include <asm/msi_bitmap.h>
 
 #define NR_MSI_REG		8
@@ -36,6 +37,8 @@ struct fsl_msi {
 	struct msi_bitmap bitmap;
 
 	struct list_head list;          /* support multiple MSI banks */
+
+	phandle phandle;
 };
 
 #endif /* _POWERPC_SYSDEV_FSL_MSI_H */

commit 2bcd1c0cfcf53a384159c272c972645e7e822140
Author: Timur Tabi <timur@freescale.com>
Date:   Fri Sep 23 12:41:35 2011 -0500

    powerpc/fsl_msi: add support for "msi-address-64" property
    
    Add support for the msi-address-64 property of a PCI node.  This property
    specifies the PCI address of MSIIR (message signaled interrupt index
    register).
    
    In commit 3da34aae ("powerpc/fsl: Support unique MSI addresses per PCIe Root
    Complex"), the msi_addr_hi/msi_addr_lo fields of struct fsl_msi were redefined
    from an actual address to just an offset, but the fields were not renamed
    accordingly.  These fields are replace with a single field, msiir_offset,
    to reflect the new meaning.
    
    Signed-off-by: Timur Tabi <timur@freescale.com>
    Signed-off-by: Kumar Gala <galak@kernel.crashing.org>

diff --git a/arch/powerpc/sysdev/fsl_msi.h b/arch/powerpc/sysdev/fsl_msi.h
index 624580c252d7..1313abbc5200 100644
--- a/arch/powerpc/sysdev/fsl_msi.h
+++ b/arch/powerpc/sysdev/fsl_msi.h
@@ -28,8 +28,7 @@ struct fsl_msi {
 
 	unsigned long cascade_irq;
 
-	u32 msi_addr_lo;
-	u32 msi_addr_hi;
+	u32 msiir_offset; /* Offset of MSIIR, relative to start of CCSR */
 	void __iomem *msi_regs;
 	u32 feature;
 	int msi_virqs[NR_MSI_REG];

commit 480599933a69a8a8dc1390c2164e49e20a1593b9
Author: Li Yang <leoli@freescale.com>
Date:   Thu Apr 22 16:31:39 2010 +0800

    powerpc/fsl_msi: add removal path and probe failing path
    
    Also cleanup the probe function.
    
    Signed-off-by: Li Yang <leoli@freescale.com>
    Signed-off-by: Kumar Gala <galak@kernel.crashing.org>

diff --git a/arch/powerpc/sysdev/fsl_msi.h b/arch/powerpc/sysdev/fsl_msi.h
index 8fc5523d6ee3..624580c252d7 100644
--- a/arch/powerpc/sysdev/fsl_msi.h
+++ b/arch/powerpc/sysdev/fsl_msi.h
@@ -32,6 +32,7 @@ struct fsl_msi {
 	u32 msi_addr_hi;
 	void __iomem *msi_regs;
 	u32 feature;
+	int msi_virqs[NR_MSI_REG];
 
 	struct msi_bitmap bitmap;
 

commit 694a7a3611a1c0e28d99b4955151c6ce68e89752
Author: Li Yang <leoli@freescale.com>
Date:   Thu Apr 22 16:31:36 2010 +0800

    powerpc/fsl_msi: enable msi allocation in all banks
    
    Put all fsl_msi banks in a linked list. The list of banks then can be
    traversed when allocating new msi interrupts.  Also fix failing path
    of fsl_setup_msi_irqs().
    
    Signed-off-by: Zhao Chenhui <b26998@freescale.com>
    Signed-off-by: Li Yang <leoli@freescale.com>
    Signed-off-by: Kumar Gala <galak@kernel.crashing.org>

diff --git a/arch/powerpc/sysdev/fsl_msi.h b/arch/powerpc/sysdev/fsl_msi.h
index 331c7e7025b7..8fc5523d6ee3 100644
--- a/arch/powerpc/sysdev/fsl_msi.h
+++ b/arch/powerpc/sysdev/fsl_msi.h
@@ -34,6 +34,8 @@ struct fsl_msi {
 	u32 feature;
 
 	struct msi_bitmap bitmap;
+
+	struct list_head list;          /* support multiple MSI banks */
 };
 
 #endif /* _POWERPC_SYSDEV_FSL_MSI_H */

commit 7e7ab3677502a0f798f38bfa1a7d53dd22faa0bc
Author: Michael Ellerman <michael@ellerman.id.au>
Date:   Wed Aug 6 09:10:02 2008 +1000

    powerpc: Convert the FSL MSI code to use msi_bitmap
    
    This is 90% straight forward, although we have to change a few
    printk format strings as well because of the change in type of hwirq.
    
    Signed-off-by: Michael Ellerman <michael@ellerman.id.au>
    Signed-off-by: Paul Mackerras <paulus@samba.org>

diff --git a/arch/powerpc/sysdev/fsl_msi.h b/arch/powerpc/sysdev/fsl_msi.h
index 6574550c00a5..331c7e7025b7 100644
--- a/arch/powerpc/sysdev/fsl_msi.h
+++ b/arch/powerpc/sysdev/fsl_msi.h
@@ -13,6 +13,8 @@
 #ifndef _POWERPC_SYSDEV_FSL_MSI_H
 #define _POWERPC_SYSDEV_FSL_MSI_H
 
+#include <asm/msi_bitmap.h>
+
 #define NR_MSI_REG		8
 #define IRQS_PER_MSI_REG	32
 #define NR_MSI_IRQS	(NR_MSI_REG * IRQS_PER_MSI_REG)
@@ -31,8 +33,7 @@ struct fsl_msi {
 	void __iomem *msi_regs;
 	u32 feature;
 
-	unsigned long *fsl_msi_bitmap;
-	spinlock_t bitmap_lock;
+	struct msi_bitmap bitmap;
 };
 
 #endif /* _POWERPC_SYSDEV_FSL_MSI_H */

commit 611cd90c91494d1ff9bd4bc349fe38789828733e
Author: Michael Ellerman <michael@ellerman.id.au>
Date:   Wed Aug 6 09:10:00 2008 +1000

    powerpc: fsl_msi doesn't need it's own of_node
    
    The FSL MSI code keeps a pointer to the of_node from the device
    it represents.  However it also has an irq_host, which contains
    a pointer to the of_node, so use that one instead.
    
    Signed-off-by: Michael Ellerman <michael@ellerman.id.au>
    Signed-off-by: Paul Mackerras <paulus@samba.org>

diff --git a/arch/powerpc/sysdev/fsl_msi.h b/arch/powerpc/sysdev/fsl_msi.h
index a653468521fa..6574550c00a5 100644
--- a/arch/powerpc/sysdev/fsl_msi.h
+++ b/arch/powerpc/sysdev/fsl_msi.h
@@ -22,9 +22,6 @@
 #define FSL_PIC_IP_IPIC	0x00000002
 
 struct fsl_msi {
-	/* Device node of the MSI interrupt*/
-	struct device_node *of_node;
-
 	struct irq_host *irqhost;
 
 	unsigned long cascade_irq;

commit 34e36c1541fe70e5b3842a3278c0e7631d31f4cb
Author: Jason Jin <Jason.jin@freescale.com>
Date:   Fri May 23 16:32:46 2008 +0800

    [POWERPC] fsl: PCIe MSI support for 83xx/85xx/86xx processors.
    
    This MSI driver can be used on 83xx/85xx/86xx board.
    In this driver, virtual interrupt host and chip were
    setup. There are 256 MSI interrupts in this host, Every 32
    MSI interrupts cascaded to one IPIC/MPIC interrupt.
    The chip was treated as edge sensitive and some necessary
    functions were setup for this chip.
    
    Before using the MSI interrupt, PCI/PCIE device need to
    ask for a MSI interrupt in the 256 MSI interrupts. A 256bit
    bitmap show which MSI interrupt was used, reserve bit in
    the bitmap can be used to force the device use some designate
    MSI interrupt in the 256 MSI interrupts. Sometimes this is useful
    for testing the all the MSI interrupts. The msi-available-ranges
    property in the dts file was used for this purpose.
    
    Signed-off-by: Jason Jin <Jason.jin@freescale.com>
    Signed-off-by: Kumar Gala <galak@kernel.crashing.org>

diff --git a/arch/powerpc/sysdev/fsl_msi.h b/arch/powerpc/sysdev/fsl_msi.h
new file mode 100644
index 000000000000..a653468521fa
--- /dev/null
+++ b/arch/powerpc/sysdev/fsl_msi.h
@@ -0,0 +1,42 @@
+/*
+ * Copyright (C) 2007-2008 Freescale Semiconductor, Inc. All rights reserved.
+ *
+ * Author: Tony Li <tony.li@freescale.com>
+ *	   Jason Jin <Jason.jin@freescale.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; version 2 of the
+ * License.
+ *
+ */
+#ifndef _POWERPC_SYSDEV_FSL_MSI_H
+#define _POWERPC_SYSDEV_FSL_MSI_H
+
+#define NR_MSI_REG		8
+#define IRQS_PER_MSI_REG	32
+#define NR_MSI_IRQS	(NR_MSI_REG * IRQS_PER_MSI_REG)
+
+#define FSL_PIC_IP_MASK	0x0000000F
+#define FSL_PIC_IP_MPIC	0x00000001
+#define FSL_PIC_IP_IPIC	0x00000002
+
+struct fsl_msi {
+	/* Device node of the MSI interrupt*/
+	struct device_node *of_node;
+
+	struct irq_host *irqhost;
+
+	unsigned long cascade_irq;
+
+	u32 msi_addr_lo;
+	u32 msi_addr_hi;
+	void __iomem *msi_regs;
+	u32 feature;
+
+	unsigned long *fsl_msi_bitmap;
+	spinlock_t bitmap_lock;
+};
+
+#endif /* _POWERPC_SYSDEV_FSL_MSI_H */
+
