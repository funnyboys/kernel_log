commit 1211ee61b4a8e60d6dc77211cdcf01906915bfba
Author: Laurent Dufour <ldufour@linux.ibm.com>
Date:   Fri Sep 20 15:05:22 2019 +0200

    powerpc/pseries: Read TLB Block Invalidate Characteristics
    
    The PAPR document specifies the TLB Block Invalidate Characteristics
    which tells for each pair of segment base page size, actual page size,
    the size of the block the hcall H_BLOCK_REMOVE supports.
    
    These characteristics are loaded at boot time in a new table
    hblkr_size. The table is separate from the mmu_psize_def because this
    is specific to the pseries platform.
    
    A new init function, pseries_lpar_read_hblkrm_characteristics() is
    added to read the characteristics. It is called from
    pSeries_setup_arch().
    
    Fixes: ba2dd8a26baa ("powerpc/pseries/mm: call H_BLOCK_REMOVE")
    Signed-off-by: Laurent Dufour <ldufour@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20190920130523.20441-2-ldufour@linux.ibm.com

diff --git a/arch/powerpc/platforms/pseries/pseries.h b/arch/powerpc/platforms/pseries/pseries.h
index a6624d4bd9d0..13fa370a87e4 100644
--- a/arch/powerpc/platforms/pseries/pseries.h
+++ b/arch/powerpc/platforms/pseries/pseries.h
@@ -112,5 +112,6 @@ static inline unsigned long cmo_get_page_size(void)
 int dlpar_workqueue_init(void);
 
 void pseries_setup_rfi_flush(void);
+void pseries_lpar_read_hblkrm_characteristics(void);
 
 #endif /* _PSERIES_PSERIES_H */

commit 2874c5fd284268364ece81a7bd936f3c8168e567
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon May 27 08:55:01 2019 +0200

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 152
    
    Based on 1 normalized pattern(s):
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license as published by
      the free software foundation either version 2 of the license or at
      your option any later version
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-or-later
    
    has been chosen to replace the boilerplate/reference in 3029 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190527070032.746973796@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/arch/powerpc/platforms/pseries/pseries.h b/arch/powerpc/platforms/pseries/pseries.h
index 7dee8c5d3363..a6624d4bd9d0 100644
--- a/arch/powerpc/platforms/pseries/pseries.h
+++ b/arch/powerpc/platforms/pseries/pseries.h
@@ -1,10 +1,6 @@
+/* SPDX-License-Identifier: GPL-2.0-or-later */
 /*
  * Copyright 2006 IBM Corporation.
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation; either version
- * 2 of the License, or (at your option) any later version.
  */
 
 #ifndef _PSERIES_PSERIES_H

commit 4c5d87db497832c493ed296157bd1749dddc69f1
Author: Oliver O'Halloran <oohall@gmail.com>
Date:   Mon Oct 15 10:18:27 2018 +1100

    powerpc/pseries: PAPR persistent memory support
    
    This patch implements support for discovering storage class memory
    devices at boot and for handling hotplug of new regions via RTAS
    hotplug events.
    
    Signed-off-by: Oliver O'Halloran <oohall@gmail.com>
    [mpe: Fix CONFIG_MEMORY_HOTPLUG=n build]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

diff --git a/arch/powerpc/platforms/pseries/pseries.h b/arch/powerpc/platforms/pseries/pseries.h
index 72c0b8986536..7dee8c5d3363 100644
--- a/arch/powerpc/platforms/pseries/pseries.h
+++ b/arch/powerpc/platforms/pseries/pseries.h
@@ -65,11 +65,16 @@ int handle_dlpar_errorlog(struct pseries_hp_errorlog *hp_errlog);
 
 #ifdef CONFIG_MEMORY_HOTPLUG
 int dlpar_memory(struct pseries_hp_errorlog *hp_elog);
+int dlpar_hp_pmem(struct pseries_hp_errorlog *hp_elog);
 #else
 static inline int dlpar_memory(struct pseries_hp_errorlog *hp_elog)
 {
 	return -EOPNOTSUPP;
 }
+static inline int dlpar_hp_pmem(struct pseries_hp_errorlog *hp_elog)
+{
+	return -EOPNOTSUPP;
+}
 #endif
 
 #ifdef CONFIG_HOTPLUG_CPU

commit fd12527a1da42dcb906b694e01794e8d438f7d10
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Mon Sep 10 09:57:07 2018 -0500

    powerpc/pseries: Remove unneeded uses of dlpar work queue
    
    There are three instances in which dlpar hotplug events are invoked;
    handling a hotplug interrupt (in a kvm guest), handling a dlpar
    request through sysfs, and updating LMB affinity when handling a
    PRRN event. Only in the case of handling a hotplug interrupt do we
    have to put the work on a workqueue, the other cases can handle the
    dlpar request directly.
    
    This patch exports the handle_dlpar_errorlog() function so that
    dlpar hotplug events can be handled directly and updates the two
    instances mentioned above to use the direct invocation.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

diff --git a/arch/powerpc/platforms/pseries/pseries.h b/arch/powerpc/platforms/pseries/pseries.h
index 619f8f3fa173..72c0b8986536 100644
--- a/arch/powerpc/platforms/pseries/pseries.h
+++ b/arch/powerpc/platforms/pseries/pseries.h
@@ -60,8 +60,9 @@ extern int dlpar_detach_node(struct device_node *);
 extern int dlpar_acquire_drc(u32 drc_index);
 extern int dlpar_release_drc(u32 drc_index);
 
-void queue_hotplug_event(struct pseries_hp_errorlog *hp_errlog,
-			 struct completion *hotplug_done, int *rc);
+void queue_hotplug_event(struct pseries_hp_errorlog *hp_errlog);
+int handle_dlpar_errorlog(struct pseries_hp_errorlog *hp_errlog);
+
 #ifdef CONFIG_MEMORY_HOTPLUG
 int dlpar_memory(struct pseries_hp_errorlog *hp_elog);
 #else

commit a43c1590426c44a5c6bbaf51b70a36a5c6d86914
Author: Mahesh Salgaonkar <mahesh@linux.vnet.ibm.com>
Date:   Tue Sep 11 19:57:00 2018 +0530

    powerpc/pseries: Flush SLB contents on SLB MCE errors.
    
    On pseries, as of today system crashes if we get a machine check
    exceptions due to SLB errors. These are soft errors and can be fixed
    by flushing the SLBs so the kernel can continue to function instead of
    system crash. We do this in real mode before turning on MMU. Otherwise
    we would run into nested machine checks. This patch now fetches the
    rtas error log in real mode and flushes the SLBs on SLB/ERAT errors.
    
    Signed-off-by: Mahesh Salgaonkar <mahesh@linux.vnet.ibm.com>
    Signed-off-by: Michal Suchanek <msuchanek@suse.com>
    Reviewed-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

diff --git a/arch/powerpc/platforms/pseries/pseries.h b/arch/powerpc/platforms/pseries/pseries.h
index 60db2ee511fb..619f8f3fa173 100644
--- a/arch/powerpc/platforms/pseries/pseries.h
+++ b/arch/powerpc/platforms/pseries/pseries.h
@@ -24,6 +24,7 @@ struct pt_regs;
 
 extern int pSeries_system_reset_exception(struct pt_regs *regs);
 extern int pSeries_machine_check_exception(struct pt_regs *regs);
+extern long pseries_machine_check_realmode(struct pt_regs *regs);
 
 #ifdef CONFIG_SMP
 extern void smp_init_pseries(void);

commit 921bc6cf807ceb2ab8005319cf39f33494d6b100
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Wed Mar 14 19:40:42 2018 -0300

    powerpc/rfi-flush: Call setup_rfi_flush() after LPM migration
    
    We might have migrated to a machine that uses a different flush type,
    or doesn't need flushing at all.
    
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Mauricio Faria de Oliveira <mauricfo@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

diff --git a/arch/powerpc/platforms/pseries/pseries.h b/arch/powerpc/platforms/pseries/pseries.h
index c73351cea276..60db2ee511fb 100644
--- a/arch/powerpc/platforms/pseries/pseries.h
+++ b/arch/powerpc/platforms/pseries/pseries.h
@@ -108,4 +108,6 @@ static inline unsigned long cmo_get_page_size(void)
 
 int dlpar_workqueue_init(void);
 
+void pseries_setup_rfi_flush(void);
+
 #endif /* _PSERIES_PSERIES_H */

commit 16560e88320d276036b393d4ba51cf0184f6caca
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Thu Mar 8 13:54:39 2018 +1100

    powerpc/pseries: Move smp_query_cpu_stopped() etc. out of plpar_wrappers.h
    
    smp_query_cpu_stopped() and related #defines are currently in
    plpar_wrappers.h. The function actually does an RTAS call, not an
    hcall, and basically has nothing to do with plpar_wrappers.h
    
    Move it into pseries.h, where it can easily be used by the only two
    callers in pseries/smp.c and pseries/hotplug-cpu.c.
    
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

diff --git a/arch/powerpc/platforms/pseries/pseries.h b/arch/powerpc/platforms/pseries/pseries.h
index 1ae1d9f4dbe9..c73351cea276 100644
--- a/arch/powerpc/platforms/pseries/pseries.h
+++ b/arch/powerpc/platforms/pseries/pseries.h
@@ -27,6 +27,14 @@ extern int pSeries_machine_check_exception(struct pt_regs *regs);
 
 #ifdef CONFIG_SMP
 extern void smp_init_pseries(void);
+
+/* Get state of physical CPU from query_cpu_stopped */
+int smp_query_cpu_stopped(unsigned int pcpu);
+#define QCSS_STOPPED 0
+#define QCSS_STOPPING 1
+#define QCSS_NOT_STOPPED 2
+#define QCSS_HARDWARE_ERROR -1
+#define QCSS_HARDWARE_BUSY -2
 #else
 static inline void smp_init_pseries(void) { };
 #endif

commit e2d5915293ffdff977ddcfc12b817b08c53ffa7a
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Mon Jan 8 14:54:32 2018 +1100

    powerpc/pseries: Make RAS IRQ explicitly dependent on DLPAR WQ
    
    The hotplug code uses its own workqueue to handle IRQ requests
    (pseries_hp_wq), however that workqueue is initialized after
    init_ras_IRQ(). That can lead to a kernel panic if any hotplug
    interrupts fire after init_ras_IRQ() but before pseries_hp_wq is
    initialised. eg:
    
      UDP-Lite hash table entries: 2048 (order: 0, 65536 bytes)
      NET: Registered protocol family 1
      Unpacking initramfs...
      (qemu) object_add memory-backend-ram,id=mem1,size=10G
      (qemu) device_add pc-dimm,id=dimm1,memdev=mem1
      Unable to handle kernel paging request for data at address 0xf94d03007c421378
      Faulting instruction address: 0xc00000000012d744
      Oops: Kernel access of bad area, sig: 11 [#1]
      LE SMP NR_CPUS=2048 NUMA pSeries
      Modules linked in:
      CPU: 0 PID: 1 Comm: swapper/0 Not tainted 4.15.0-rc2-ziviani+ #26
      task:         (ptrval) task.stack:         (ptrval)
      NIP:  c00000000012d744 LR: c00000000012d744 CTR: 0000000000000000
      REGS:         (ptrval) TRAP: 0380   Not tainted  (4.15.0-rc2-ziviani+)
      MSR:  8000000000009033 <SF,EE,ME,IR,DR,RI,LE>  CR: 28088042  XER: 20040000
      CFAR: c00000000012d3c4 SOFTE: 0
      ...
      NIP [c00000000012d744] __queue_work+0xd4/0x5c0
      LR [c00000000012d744] __queue_work+0xd4/0x5c0
      Call Trace:
      [c0000000fffefb90] [c00000000012d744] __queue_work+0xd4/0x5c0 (unreliable)
      [c0000000fffefc70] [c00000000012dce4] queue_work_on+0xb4/0xf0
    
    This commit makes the RAS IRQ registration explicitly dependent on the
    creation of the pseries_hp_wq.
    
    Reported-by: Min Deng <mdeng@redhat.com>
    Reported-by: Daniel Henrique Barboza <danielhb@linux.vnet.ibm.com>
    Tested-by: Jose Ricardo Ziviani <joserz@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Reviewed-by: David Gibson <david@gibson.dropbear.id.au>

diff --git a/arch/powerpc/platforms/pseries/pseries.h b/arch/powerpc/platforms/pseries/pseries.h
index 4470a3194311..1ae1d9f4dbe9 100644
--- a/arch/powerpc/platforms/pseries/pseries.h
+++ b/arch/powerpc/platforms/pseries/pseries.h
@@ -98,4 +98,6 @@ static inline unsigned long cmo_get_page_size(void)
 	return CMO_PageSize;
 }
 
+int dlpar_workqueue_init(void);
+
 #endif /* _PSERIES_PSERIES_H */

commit 215ee763f8cb9a2912d411f96f6f67a35d644c6b
Author: Rob Herring <robh@kernel.org>
Date:   Mon Aug 21 10:16:49 2017 -0500

    powerpc: pseries: remove dlpar_attach_node dependency on full path
    
    In preparation to stop storing the full node path in full_name, remove the
    dependency on full_name from dlpar_attach_node(). Callers of
    dlpar_attach_node() already have the parent device_node, so just pass the
    parent node into dlpar_attach_node instead of the path. This avoids doing
    a lookup of the parent node by the path.
    
    Signed-off-by: Rob Herring <robh@kernel.org>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: linuxppc-dev@lists.ozlabs.org
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

diff --git a/arch/powerpc/platforms/pseries/pseries.h b/arch/powerpc/platforms/pseries/pseries.h
index 1361a9db534b..4470a3194311 100644
--- a/arch/powerpc/platforms/pseries/pseries.h
+++ b/arch/powerpc/platforms/pseries/pseries.h
@@ -46,7 +46,7 @@ extern void dlpar_free_cc_nodes(struct device_node *);
 extern void dlpar_free_cc_property(struct property *);
 extern struct device_node *dlpar_configure_connector(__be32,
 						struct device_node *);
-extern int dlpar_attach_node(struct device_node *);
+extern int dlpar_attach_node(struct device_node *, struct device_node *);
 extern int dlpar_detach_node(struct device_node *);
 extern int dlpar_acquire_drc(u32 drc_index);
 extern int dlpar_release_drc(u32 drc_index);

commit 8f272a5dd6826f14e47110eccd37b6782bf74901
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Mon Nov 14 16:28:10 2016 +1100

    powerpc/pseries: Move CMO code from plapr_wrappers.h to platforms/pseries
    
    Currently there's some CMO (Cooperative Memory Overcommit) code, in
    plpar_wrappers.h. Some of it is #ifdef CONFIG_PSERIES and some of it
    isn't. The end result being if a file includes plpar_wrappers.h it won't
    build with CONFIG_PSERIES=n.
    
    Fix it by moving the CMO code into platforms/pseries. The two hcall
    wrappers can just be moved into their only caller, cmm.c, and the
    accessors can go in pseries.h.
    
    Note we need the accessors because cmm.c can be built as a module, so
    there needs to be a split between the built-in code vs the module, and
    that's achieved by using those accessors.
    
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

diff --git a/arch/powerpc/platforms/pseries/pseries.h b/arch/powerpc/platforms/pseries/pseries.h
index b1be7b713fe6..1361a9db534b 100644
--- a/arch/powerpc/platforms/pseries/pseries.h
+++ b/arch/powerpc/platforms/pseries/pseries.h
@@ -79,4 +79,23 @@ extern struct pci_controller_ops pseries_pci_controller_ops;
 
 unsigned long pseries_memory_block_size(void);
 
+extern int CMO_PrPSP;
+extern int CMO_SecPSP;
+extern unsigned long CMO_PageSize;
+
+static inline int cmo_get_primary_psp(void)
+{
+	return CMO_PrPSP;
+}
+
+static inline int cmo_get_secondary_psp(void)
+{
+	return CMO_SecPSP;
+}
+
+static inline unsigned long cmo_get_page_size(void)
+{
+	return CMO_PageSize;
+}
+
 #endif /* _PSERIES_PSERIES_H */

commit 3808a88985b4f5f5e947c364debce4441a380fb8
Author: Benjamin Herrenschmidt <benh@kernel.crashing.org>
Date:   Tue Jul 5 15:03:48 2016 +1000

    powerpc: Move FW feature probing out of pseries probe()
    
    We move the function itself to pseries/firmware.c and call it along
    with almost all other flat device-tree parsers from early_init_devtree()
    
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    [mpe: Move #ifdefs into the header by providing pseries_probe_fw_features()]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

diff --git a/arch/powerpc/platforms/pseries/pseries.h b/arch/powerpc/platforms/pseries/pseries.h
index bba32853c468..b1be7b713fe6 100644
--- a/arch/powerpc/platforms/pseries/pseries.h
+++ b/arch/powerpc/platforms/pseries/pseries.h
@@ -20,11 +20,6 @@ extern void request_event_sources_irqs(struct device_node *np,
 
 #include <linux/of.h>
 
-extern void __init fw_hypertas_feature_init(const char *hypertas,
-					    unsigned long len);
-extern void __init fw_vec5_feature_init(const char *hypertas,
-					unsigned long len);
-
 struct pt_regs;
 
 extern int pSeries_system_reset_exception(struct pt_regs *regs);

commit b7d9eb397b8764c1f1c53d504aa70f85ce0e212f
Author: John Allen <jallen@linux.vnet.ibm.com>
Date:   Thu Jul 7 10:03:44 2016 -0500

    powerpc/pseries: Add support for hotplug interrupt source
    
    Add handler for new hotplug interrupt. For memory and CPU hotplug events,
    we will add the hotplug errorlog to the hotplug workqueue. Since PCI
    hotplug is not currently supported in the kernel, PCI hotplug events are
    written to the rtas_log_bug and are handled by rtas_errd.
    
    Signed-off-by: John Allen <jallen@linux.vnet.ibm.com>
    Reviewed-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

diff --git a/arch/powerpc/platforms/pseries/pseries.h b/arch/powerpc/platforms/pseries/pseries.h
index ddb9aa51aad6..bba32853c468 100644
--- a/arch/powerpc/platforms/pseries/pseries.h
+++ b/arch/powerpc/platforms/pseries/pseries.h
@@ -56,6 +56,8 @@ extern int dlpar_detach_node(struct device_node *);
 extern int dlpar_acquire_drc(u32 drc_index);
 extern int dlpar_release_drc(u32 drc_index);
 
+void queue_hotplug_event(struct pseries_hp_errorlog *hp_errlog,
+			 struct completion *hotplug_done, int *rc);
 #ifdef CONFIG_MEMORY_HOTPLUG
 int dlpar_memory(struct pseries_hp_errorlog *hp_elog);
 #else

commit d739d2caa3d3e283ca4d41716cd317684e066ef9
Author: Rashmica Gupta <rashmicy@gmail.com>
Date:   Mon May 30 16:18:13 2016 +1000

    powerpc/pseries: Remove MPIC from pseries kexec
    
    MPIC was only used by Power3 which is now unsupported, so remove MPIC
    code. XICS is now the only supported interrupt controller for
    pSeries so do some cleanups too.
    
    Signed-off-by: Rashmica Gupta <rashmicy@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

diff --git a/arch/powerpc/platforms/pseries/pseries.h b/arch/powerpc/platforms/pseries/pseries.h
index edeaec74b656..ddb9aa51aad6 100644
--- a/arch/powerpc/platforms/pseries/pseries.h
+++ b/arch/powerpc/platforms/pseries/pseries.h
@@ -36,13 +36,7 @@ extern void smp_init_pseries(void);
 static inline void smp_init_pseries(void) { };
 #endif
 
-#ifdef CONFIG_KEXEC
-extern void setup_kexec_cpu_down_xics(void);
-extern void setup_kexec_cpu_down_mpic(void);
-#else
-static inline void setup_kexec_cpu_down_xics(void) { }
-static inline void setup_kexec_cpu_down_mpic(void) { }
-#endif
+extern void pseries_kexec_cpu_down(int crash_shutdown, int secondary);
 
 extern void pSeries_final_fixup(void);
 

commit 86425bedd5b69ea5969ff11bb07c8e5ff7117976
Author: Rashmica Gupta <rashmicy@gmail.com>
Date:   Mon May 30 16:18:12 2016 +1000

    powerpc/pseries: Remove MPIC from pseries smp
    
    MPIC was only used by Power3 which is now unsupported, so remove MPIC
    code. XICS is now the only supported interrupt controller for
    pSeries so do some cleanups too.
    
    Signed-off-by: Rashmica Gupta <rashmicy@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

diff --git a/arch/powerpc/platforms/pseries/pseries.h b/arch/powerpc/platforms/pseries/pseries.h
index 7aa83f00ac62..edeaec74b656 100644
--- a/arch/powerpc/platforms/pseries/pseries.h
+++ b/arch/powerpc/platforms/pseries/pseries.h
@@ -31,11 +31,9 @@ extern int pSeries_system_reset_exception(struct pt_regs *regs);
 extern int pSeries_machine_check_exception(struct pt_regs *regs);
 
 #ifdef CONFIG_SMP
-extern void smp_init_pseries_mpic(void);
-extern void smp_init_pseries_xics(void);
+extern void smp_init_pseries(void);
 #else
-static inline void smp_init_pseries_mpic(void) { };
-static inline void smp_init_pseries_xics(void) { };
+static inline void smp_init_pseries(void) { };
 #endif
 
 #ifdef CONFIG_KEXEC

commit ac71380071d19d4ac7cd5f9fe4168d7109902cd5
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Wed Dec 16 14:54:05 2015 -0600

    powerpc/pseries: Add CPU dlpar remove functionality
    
    Add the ability to dlpar remove CPUs via hotplug rtas events, either by
    specifying the drc-index of the CPU to remove or providing a count of cpus
    to remove.
    
    To remove multiple cpus in a single request we create a list of possible
    DR (Dynamic Reconfiguration) cpus and their drc indexes that can be
    removed.  We can then traverse the list remove each cpu and easily clean
    up in any cases of failure.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

diff --git a/arch/powerpc/platforms/pseries/pseries.h b/arch/powerpc/platforms/pseries/pseries.h
index 8411c27293e4..7aa83f00ac62 100644
--- a/arch/powerpc/platforms/pseries/pseries.h
+++ b/arch/powerpc/platforms/pseries/pseries.h
@@ -73,6 +73,15 @@ static inline int dlpar_memory(struct pseries_hp_errorlog *hp_elog)
 }
 #endif
 
+#ifdef CONFIG_HOTPLUG_CPU
+int dlpar_cpu(struct pseries_hp_errorlog *hp_elog);
+#else
+static inline int dlpar_cpu(struct pseries_hp_errorlog *hp_elog)
+{
+	return -EOPNOTSUPP;
+}
+#endif
+
 /* PCI root bridge prepare function override for pseries */
 struct pci_host_bridge;
 int pseries_root_bridge_prepare(struct pci_host_bridge *bridge);

commit 3a29dd6d6f445212ddbcf43a2ba6352127ce9ee8
Merge: f7e9e3583625 51925fb3c5c9
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Mon Apr 13 15:29:36 2015 +1000

    Merge branch 'next-dlpar' of git://git.kernel.org/pub/scm/linux/kernel/git/benh/powerpc into next
    
    Merge series from Nathan Fontenot to do memory hotplug in the kernel.

commit 38ae9ec40f06f3aef5c25314f432113cf2c1340a
Author: Daniel Axtens <dja@axtens.net>
Date:   Tue Mar 31 16:00:50 2015 +1100

    powerpc/pseries: Move controller ops from ppc_md to controller_ops
    
    This moves the pSeries platform to use the pci_controller_ops structure,
    rather than ppc_md for PCI controller operations.
    
    Signed-off-by: Daniel Axtens <dja@axtens.net>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

diff --git a/arch/powerpc/platforms/pseries/pseries.h b/arch/powerpc/platforms/pseries/pseries.h
index 1796c5438cc6..cd64672e24f8 100644
--- a/arch/powerpc/platforms/pseries/pseries.h
+++ b/arch/powerpc/platforms/pseries/pseries.h
@@ -65,6 +65,8 @@ extern int dlpar_detach_node(struct device_node *);
 struct pci_host_bridge;
 int pseries_root_bridge_prepare(struct pci_host_bridge *bridge);
 
+extern struct pci_controller_ops pseries_pci_controller_ops;
+
 unsigned long pseries_memory_block_size(void);
 
 #endif /* _PSERIES_PSERIES_H */

commit 999e2dadb6058568b8bcffec44da2a07952d84fe
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Tue Feb 10 13:47:02 2015 -0600

    powerpc/pseries: Create new device hotplug entry point
    
    The current hotplug (or dlpar) of devices (the process is generally the
    same for memory, cpu, and pci) on PowerVM systems is initiated
    from the HMC, which communicates the request to the partitions through
    the RSCT framework. The RSCT framework then invokes the drmgr command.
    The drmgr command performs the hotplug operation by doing some pieces,
    such as most of the rtas calls and device tree parsing, in userspace
    and make requests to the kernel to online/offline the device, update the
    device tree and add/remove the device.
    
    For PowerKVM the approach for device hotplug is to follow what is currently
    being done for pci hotplug. A hotplug request is initiated from the host.
    QEMU then generates an EPOW interrupt to the guest which causes the guest
    to make the rtas,check-exception call. In QEMU, the rtas,check-exception call
    returns a rtas hotplug event to the guest.
    
    Please note that the current pci hotplug path for PowerKVM involves the
    kernel receiving the rtas hotplug event, passing it to rtas_errd in
    userspace, and having rtas_errd invoke drmgr. The drmgr command then
    handles the request as described above for PowerVM systems.
    
    There is no need for this circuitous route, we should just handle the entire
    hotplug of devices in the kernel. What I am planning is to enable this
    by moving the code to handle hotplug from drmgr into the kernel to
    provide a single path for handling device hotplug for both PowerVM and
    PowerKVM systems. This patch provides the common iframework and entry point.
    For PowerKVM a future update to the kernel rtas code will recognize rtas
    hotplug events returned from rtas,check-exception calls and use the common
    entry point to handle hotplug of the device.
    
    For PowerVM systems, This patch creates /sys/kernel/dlpar that can be
    used by the drmgr command to initiate hotplug requests. In order to do
    this a string of the format "<resource> <action> <id_type> <id>" is
    written to this file. The string consists of a resource (cpu, memory, pci,
    phb), an action (add or remove), an id_type (count, drc index, drc name),
    and the corresponding id. The kernel will parse the string and create a
    rtas hotplug section that can be passed to the common entry point for
    handling hotplug requests.
    
    It should be noted that there is no chance of updating how we receive
    hotplug (dlpar) requests from the HMC on PowerVM systems.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>

diff --git a/arch/powerpc/platforms/pseries/pseries.h b/arch/powerpc/platforms/pseries/pseries.h
index b760c9c45055..2d261fc56c42 100644
--- a/arch/powerpc/platforms/pseries/pseries.h
+++ b/arch/powerpc/platforms/pseries/pseries.h
@@ -11,6 +11,7 @@
 #define _PSERIES_PSERIES_H
 
 #include <linux/interrupt.h>
+#include <asm/rtas.h>
 
 struct device_node;
 
@@ -63,6 +64,15 @@ extern int dlpar_detach_node(struct device_node *);
 extern int dlpar_acquire_drc(u32 drc_index);
 extern int dlpar_release_drc(u32 drc_index);
 
+#ifdef CONFIG_MEMORY_HOTPLUG
+int dlpar_memory(struct pseries_hp_errorlog *hp_elog);
+#else
+static inline int dlpar_memory(struct pseries_hp_errorlog *hp_elog)
+{
+	return -EOPNOTSUPP;
+}
+#endif
+
 /* PCI root bridge prepare function override for pseries */
 struct pci_host_bridge;
 int pseries_root_bridge_prepare(struct pci_host_bridge *bridge);

commit 5e51d3c2a46b0131d31594b33aacdff5aa99f0f3
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Tue Feb 10 13:45:01 2015 -0600

    powerpc/pseries: Declare the acquire/release drc index routines
    
    Add declarations for dlpar_{acquire,release}_drc(...)
    
    They are already marked non-static but were missing a prototype/
    
    [BenH: Added extern to be consistent with the rest of the file]
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>

diff --git a/arch/powerpc/platforms/pseries/pseries.h b/arch/powerpc/platforms/pseries/pseries.h
index 1796c5438cc6..b760c9c45055 100644
--- a/arch/powerpc/platforms/pseries/pseries.h
+++ b/arch/powerpc/platforms/pseries/pseries.h
@@ -60,6 +60,8 @@ extern struct device_node *dlpar_configure_connector(__be32,
 						struct device_node *);
 extern int dlpar_attach_node(struct device_node *);
 extern int dlpar_detach_node(struct device_node *);
+extern int dlpar_acquire_drc(u32 drc_index);
+extern int dlpar_release_drc(u32 drc_index);
 
 /* PCI root bridge prepare function override for pseries */
 struct pci_host_bridge;

commit d6f1e7abdb95a7ea031e7604829e4b5514d7e2c1
Author: Bharata B Rao <bharata@linux.vnet.ibm.com>
Date:   Tue Sep 16 15:15:45 2014 -0500

    powerpc/pseries: Make CPU hotplug path endian safe
    
    - ibm,rtas-configure-connector should treat the RTAS data as big endian.
    - Treat ibm,ppc-interrupt-server#s as big-endian when setting
      smp_processor_id during hotplug.
    
    Signed-off-by: Bharata B Rao <bharata@linux.vnet.ibm.com>
    Signed-off-by: Thomas Falcon <tlfalcon@linux.vnet.ibm.com>
    Acked-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

diff --git a/arch/powerpc/platforms/pseries/pseries.h b/arch/powerpc/platforms/pseries/pseries.h
index 361add62abf1..1796c5438cc6 100644
--- a/arch/powerpc/platforms/pseries/pseries.h
+++ b/arch/powerpc/platforms/pseries/pseries.h
@@ -56,7 +56,8 @@ extern void hvc_vio_init_early(void);
 /* Dynamic logical Partitioning/Mobility */
 extern void dlpar_free_cc_nodes(struct device_node *);
 extern void dlpar_free_cc_property(struct property *);
-extern struct device_node *dlpar_configure_connector(u32, struct device_node *);
+extern struct device_node *dlpar_configure_connector(__be32,
+						struct device_node *);
 extern int dlpar_attach_node(struct device_node *);
 extern int dlpar_detach_node(struct device_node *);
 

commit a5d862576a64cb3e0c22dc9cc2170e4d750714f9
Author: Anton Blanchard <anton@au1.ibm.com>
Date:   Wed Jun 4 17:50:47 2014 +1000

    powerpc: Allow ppc_md platform hook to override memory_block_size_bytes
    
    The pseries platform code unconditionally overrides
    memory_block_size_bytes regardless of the running platform.
    
    Create a ppc_md hook that so each platform can choose to
    do what it wants.
    
    Signed-off-by: Anton Blanchard <anton@samba.org>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>

diff --git a/arch/powerpc/platforms/pseries/pseries.h b/arch/powerpc/platforms/pseries/pseries.h
index 99219530ea4a..361add62abf1 100644
--- a/arch/powerpc/platforms/pseries/pseries.h
+++ b/arch/powerpc/platforms/pseries/pseries.h
@@ -64,4 +64,6 @@ extern int dlpar_detach_node(struct device_node *);
 struct pci_host_bridge;
 int pseries_root_bridge_prepare(struct pci_host_bridge *bridge);
 
+unsigned long pseries_memory_block_size(void);
+
 #endif /* _PSERIES_PSERIES_H */

commit 8d5ff320766f051341835c761a2fc125e5b24e9f
Author: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>
Date:   Wed Aug 14 22:23:50 2013 -0700

    powerpc/pseries: Make dlpar_configure_connector parent node aware
    
    Currently the device nodes created in the device subtree returned by a call to
    dlpar_configure_connector are all named in the root node. This is because the
    the node name in the work area returned by ibm,configure-connector rtas call
    only contains the node name and not the entire node path. Passing the parent
    node where the new subtree will be created to dlpar_configure_connector allows
    the correct node path to be prefixed in the full_name field.
    
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>
    Acked-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>

diff --git a/arch/powerpc/platforms/pseries/pseries.h b/arch/powerpc/platforms/pseries/pseries.h
index d1b07e645302..99219530ea4a 100644
--- a/arch/powerpc/platforms/pseries/pseries.h
+++ b/arch/powerpc/platforms/pseries/pseries.h
@@ -56,7 +56,7 @@ extern void hvc_vio_init_early(void);
 /* Dynamic logical Partitioning/Mobility */
 extern void dlpar_free_cc_nodes(struct device_node *);
 extern void dlpar_free_cc_property(struct property *);
-extern struct device_node *dlpar_configure_connector(u32);
+extern struct device_node *dlpar_configure_connector(u32, struct device_node *);
 extern int dlpar_attach_node(struct device_node *);
 extern int dlpar_detach_node(struct device_node *);
 

commit 9b3fbd6c2a9bc8c9acdab70542783fcce52619e2
Author: Deepthi Dharwar <deepthi@linux.vnet.ibm.com>
Date:   Thu Aug 22 15:23:42 2013 +0530

    pseries/cpuidle: Remove dependency of pseries.h file
    
    As a part of pseries_idle cleanup to make the backend driver
    code common to both pseries and powernv.
    Remove non-essential smt_snooze_delay declaration in pseries.h
    header file and pseries.h file inclusion in
    pseries/processor_idle.c
    
    Signed-off-by: Deepthi Dharwar <deepthi@linux.vnet.ibm.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>

diff --git a/arch/powerpc/platforms/pseries/pseries.h b/arch/powerpc/platforms/pseries/pseries.h
index c2a3a258001c..d1b07e645302 100644
--- a/arch/powerpc/platforms/pseries/pseries.h
+++ b/arch/powerpc/platforms/pseries/pseries.h
@@ -60,9 +60,6 @@ extern struct device_node *dlpar_configure_connector(u32);
 extern int dlpar_attach_node(struct device_node *);
 extern int dlpar_detach_node(struct device_node *);
 
-/* Snooze Delay, pseries_idle */
-DECLARE_PER_CPU(long, smt_snooze_delay);
-
 /* PCI root bridge prepare function override for pseries */
 struct pci_host_bridge;
 int pseries_root_bridge_prepare(struct pci_host_bridge *bridge);

commit d82fb31abc46620b7c22758c75707069f2763646
Author: Kleber Sacilotto de Souza <klebers@linux.vnet.ibm.com>
Date:   Fri May 3 12:43:12 2013 +0000

    powerpc/pseries: Perform proper max_bus_speed detection
    
    On pseries machines the detection for max_bus_speed should be done
    through an OpenFirmware property. This patch adds a function to perform
    this detection and a hook to perform dynamic adding of the function only
    for pseries. This is done by overwriting the weak
    pcibios_root_bridge_prepare function which is called by
    pci_create_root_bus().
    
    From: Lucas Kannebley Tavares <lucaskt@linux.vnet.ibm.com>
    Signed-off-by: Kleber Sacilotto de Souza <klebers@linux.vnet.ibm.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>

diff --git a/arch/powerpc/platforms/pseries/pseries.h b/arch/powerpc/platforms/pseries/pseries.h
index 8af71e4cc17f..c2a3a258001c 100644
--- a/arch/powerpc/platforms/pseries/pseries.h
+++ b/arch/powerpc/platforms/pseries/pseries.h
@@ -63,4 +63,8 @@ extern int dlpar_detach_node(struct device_node *);
 /* Snooze Delay, pseries_idle */
 DECLARE_PER_CPU(long, smt_snooze_delay);
 
+/* PCI root bridge prepare function override for pseries */
+struct pci_host_bridge;
+int pseries_root_bridge_prepare(struct pci_host_bridge *bridge);
+
 #endif /* _PSERIES_PSERIES_H */

commit f0ff7eb483b4c9b24b83aa682c4f42db256f9bdb
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Wed Apr 24 05:57:18 2013 +0000

    powerpc/pseries: Update firmware_has_feature() to check architecture vector 5 bits
    
    The firmware_has_feature() function makes it easy to check for supported
    features of the hypervisor. This patch extends the capability of
    firmware_has_feature() to include checking for specified bits
    in vector 5 of the architecture vector as reported in the device tree.
    
    As part of this the #defines used for the architecture vector are re-defined
    such that each option has the index into vector 5 and the feature bit encoded
    into it. This makes checking for architecture bits when initiating data
    for firmware_has_feature much easier.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>

diff --git a/arch/powerpc/platforms/pseries/pseries.h b/arch/powerpc/platforms/pseries/pseries.h
index 9a3dda07566f..8af71e4cc17f 100644
--- a/arch/powerpc/platforms/pseries/pseries.h
+++ b/arch/powerpc/platforms/pseries/pseries.h
@@ -19,7 +19,10 @@ extern void request_event_sources_irqs(struct device_node *np,
 
 #include <linux/of.h>
 
-extern void __init fw_feature_init(const char *hypertas, unsigned long len);
+extern void __init fw_hypertas_feature_init(const char *hypertas,
+					    unsigned long len);
+extern void __init fw_vec5_feature_init(const char *hypertas,
+					unsigned long len);
 
 struct pt_regs;
 

commit 707827f3387d9b260d50fa697885a4042cea3bf4
Author: Deepthi Dharwar <deepthi@linux.vnet.ibm.com>
Date:   Wed Nov 30 02:46:42 2011 +0000

    powerpc/cpuidle: cpuidle driver for pSeries
    
    This patch implements a back-end cpuidle driver for pSeries
    based on pseries_dedicated_idle_loop and pseries_shared_idle_loop
    routines.  The driver is built only if CONFIG_CPU_IDLE is set. This
    cpuidle driver uses global registration of idle states and
    not per-cpu.
    
    Signed-off-by: Deepthi Dharwar <deepthi@linux.vnet.ibm.com>
    Signed-off-by: Trinabh Gupta <g.trinabh@gmail.com>
    Signed-off-by: Arun R Bharadwaj <arun.r.bharadwaj@gmail.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>

diff --git a/arch/powerpc/platforms/pseries/pseries.h b/arch/powerpc/platforms/pseries/pseries.h
index 24c7162f11d9..9a3dda07566f 100644
--- a/arch/powerpc/platforms/pseries/pseries.h
+++ b/arch/powerpc/platforms/pseries/pseries.h
@@ -57,4 +57,7 @@ extern struct device_node *dlpar_configure_connector(u32);
 extern int dlpar_attach_node(struct device_node *);
 extern int dlpar_detach_node(struct device_node *);
 
+/* Snooze Delay, pseries_idle */
+DECLARE_PER_CPU(long, smt_snooze_delay);
+
 #endif /* _PSERIES_PSERIES_H */

commit 4d2bb3f5003617cb42b89faefd0009c505c3abd5
Author: Benjamin Herrenschmidt <benh@kernel.crashing.org>
Date:   Thu May 12 13:46:38 2011 +1000

    powerpc/pseries: Re-implement HVSI as part of hvc_vio
    
    On pseries machines, consoles are provided by the hypervisor using
    a low level get_chars/put_chars type interface. However, this is
    really just a transport to the service processor which implements
    them either as "raw" console (networked consoles, HMC, ...) or as
    "hvsi" serial ports.
    
    The later is a simple packet protocol on top of the raw character
    interface that is supposed to convey additional "serial port" style
    semantics. In practice however, all it does is provide a way to
    read the CD line and set/clear our DTR line, that's it.
    
    We currently implement the "raw" protocol as an hvc console backend
    (/dev/hvcN) and the "hvsi" protocol using a separate tty driver
    (/dev/hvsi0).
    
    However this is quite impractical. The arbitrary difference between
    the two type of devices has been a major source of user (and distro)
    confusion. Additionally, there's an additional mini -hvsi implementation
    in the pseries platform code for our low level debug console and early
    boot kernel messages, which means code duplication, though that low
    level variant is impractical as it's incapable of doing the initial
    protocol negociation to establish the link to the FSP.
    
    This essentially replaces the dedicated hvsi driver and the platform
    udbg code completely by extending the existing hvc_vio backend used
    in "raw" mode so that:
    
     - It now supports HVSI as well
     - We add support for hvc backend providing tiocm{get,set}
     - It also provides a udbg interface for early debug and boot console
    
    This is overall less code, though this will only be obvious once we
    remove the old "hvsi" driver, which is still available for now. When
    the old driver is enabled, the new code still kicks in for the low
    level udbg console, replacing the old mini implementation in the platform
    code, it just doesn't provide the higher level "hvc" interface.
    
    In addition to producing generally simler code, this has several benefits
    over our current situation:
    
     - The user/distro only has to deal with /dev/hvcN for the hypervisor
    console, avoiding all sort of confusion that has plagued us in the past
    
     - The tty, kernel and low level debug console all use the same code
    base which supports the full protocol establishment process, thus the
    console is now available much earlier than it used to be with the
    old HVSI driver. The kernel console works much earlier and udbg is
    available much earlier too. Hackers can enable a hard coded very-early
    debug console as well that works with HVSI (previously that was only
    supported for the "raw" mode).
    
    I've tried to keep the same semantics as hvsi relative to how I react
    to things like CD changes, with some subtle differences though:
    
     - I clear DTR on close if HUPCL is set
    
     - Current hvsi triggers a hangup if it detects a up->down transition
       on CD (you can still open a console with CD down). My new implementation
       triggers a hangup if the link to the FSP is severed, and severs it upon
       detecting a up->down transition on CD.
    
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>

diff --git a/arch/powerpc/platforms/pseries/pseries.h b/arch/powerpc/platforms/pseries/pseries.h
index e9f6d2859c3c..24c7162f11d9 100644
--- a/arch/powerpc/platforms/pseries/pseries.h
+++ b/arch/powerpc/platforms/pseries/pseries.h
@@ -47,7 +47,8 @@ extern void pSeries_final_fixup(void);
 /* Poweron flag used for enabling auto ups restart */
 extern unsigned long rtas_poweron_auto;
 
-extern void find_udbg_vterm(void);
+/* Provided by HVC VIO */
+extern void hvc_vio_init_early(void);
 
 /* Dynamic logical Partitioning/Mobility */
 extern void dlpar_free_cc_nodes(struct device_node *);

commit 206489748b64510d655e5c99193426667463dd15
Author: Nathan Fontenot <nfont@austin.ibm.com>
Date:   Fri Sep 10 09:40:32 2010 +0000

    powerpc/pseries: Export device tree updating routines
    
    Export routines associated with adding and removing device tree nodes on
    pseries needed for device tree updating.
    
    Signed-off-by: Nathan Fontenot <nfont@austin.ibm.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>

diff --git a/arch/powerpc/platforms/pseries/pseries.h b/arch/powerpc/platforms/pseries/pseries.h
index 40c93cad91d2..e9f6d2859c3c 100644
--- a/arch/powerpc/platforms/pseries/pseries.h
+++ b/arch/powerpc/platforms/pseries/pseries.h
@@ -17,6 +17,8 @@ struct device_node;
 extern void request_event_sources_irqs(struct device_node *np,
 				       irq_handler_t handler, const char *name);
 
+#include <linux/of.h>
+
 extern void __init fw_feature_init(const char *hypertas, unsigned long len);
 
 struct pt_regs;
@@ -47,4 +49,11 @@ extern unsigned long rtas_poweron_auto;
 
 extern void find_udbg_vterm(void);
 
+/* Dynamic logical Partitioning/Mobility */
+extern void dlpar_free_cc_nodes(struct device_node *);
+extern void dlpar_free_cc_property(struct property *);
+extern struct device_node *dlpar_configure_connector(u32);
+extern int dlpar_attach_node(struct device_node *);
+extern int dlpar_detach_node(struct device_node *);
+
 #endif /* _PSERIES_PSERIES_H */

commit 32c96f7765b881ab1f6ab8ff04b733e4cf157239
Author: Mark Nelson <markn@au1.ibm.com>
Date:   Tue May 18 22:51:00 2010 +0000

    powerpc/pseries: Make request_ras_irqs() available to other pseries code
    
    At the moment only the RAS code uses event-sources interrupts (for EPOW
    events and internal errors) so request_ras_irqs() (which actually requests
    the event-sources interrupts) is found in ras.c and is static.
    
    We want to be able to use event-sources interrupts in other pseries code,
    so let's rename request_ras_irqs() to request_event_sources_irqs() and
    move it to event_sources.c.
    
    This will be used in an upcoming patch that adds support for IO Event
    interrupts that come through as event sources.
    
    Signed-off-by: Mark Nelson <markn@au1.ibm.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>

diff --git a/arch/powerpc/platforms/pseries/pseries.h b/arch/powerpc/platforms/pseries/pseries.h
index 9e17c0d2a0c8..40c93cad91d2 100644
--- a/arch/powerpc/platforms/pseries/pseries.h
+++ b/arch/powerpc/platforms/pseries/pseries.h
@@ -10,6 +10,13 @@
 #ifndef _PSERIES_PSERIES_H
 #define _PSERIES_PSERIES_H
 
+#include <linux/interrupt.h>
+
+struct device_node;
+
+extern void request_event_sources_irqs(struct device_node *np,
+				       irq_handler_t handler, const char *name);
+
 extern void __init fw_feature_init(const char *hypertas, unsigned long len);
 
 struct pt_regs;

commit 21cf91338fabe649ae3744429e13b61da2a17a6a
Author: Michael Ellerman <michael@ellerman.id.au>
Date:   Wed Apr 16 13:51:48 2008 +1000

    [POWERPC] Move prototype for find_udbg_vterm() into a header file
    
    Move the prototype for find_udbg_vterm() into pseries.h, removing
    it from setup.c.
    
    Signed-off-by: Michael Ellerman <michael@ellerman.id.au>
    Signed-off-by: Paul Mackerras <paulus@samba.org>

diff --git a/arch/powerpc/platforms/pseries/pseries.h b/arch/powerpc/platforms/pseries/pseries.h
index 61136d019554..9e17c0d2a0c8 100644
--- a/arch/powerpc/platforms/pseries/pseries.h
+++ b/arch/powerpc/platforms/pseries/pseries.h
@@ -38,4 +38,6 @@ extern void pSeries_final_fixup(void);
 /* Poweron flag used for enabling auto ups restart */
 extern unsigned long rtas_poweron_auto;
 
+extern void find_udbg_vterm(void);
+
 #endif /* _PSERIES_PSERIES_H */

commit ca8ffc974d43033be6e1d4277a45822d2c3656f4
Author: Michael Neuling <mikey@neuling.org>
Date:   Thu Jul 19 07:56:32 2007 +1000

    [POWERPC] Fix future firmware feature fixups function failure
    
    Move firmware feature initialisation from pSeries_init_early to the
    earlier pSeries_probe_hypertas so they are initialised before firmware
    feature fixups are applied.
    
    Currently firmware feature sections are only used for iSeries which
    initialises the these features much earlier.  This is a bug in waiting
    on pSeries.
    
    Also adds some whitespace fixups.
    
    Signed-off-by: Michael Neuling <mikey@neuling.org>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Paul Mackerras <paulus@samba.org>

diff --git a/arch/powerpc/platforms/pseries/pseries.h b/arch/powerpc/platforms/pseries/pseries.h
index 61e19f78b923..61136d019554 100644
--- a/arch/powerpc/platforms/pseries/pseries.h
+++ b/arch/powerpc/platforms/pseries/pseries.h
@@ -10,7 +10,7 @@
 #ifndef _PSERIES_PSERIES_H
 #define _PSERIES_PSERIES_H
 
-extern void __init fw_feature_init(void);
+extern void __init fw_feature_init(const char *hypertas, unsigned long len);
 
 struct pt_regs;
 

commit 3d5134ee8341bffc4f539049abb9e90d469b448d
Author: Benjamin Herrenschmidt <benh@kernel.crashing.org>
Date:   Mon Jun 4 15:15:36 2007 +1000

    [POWERPC] Rewrite IO allocation & mapping on powerpc64
    
    This rewrites pretty much from scratch the handling of MMIO and PIO
    space allocations on powerpc64.  The main goals are:
    
     - Get rid of imalloc and use more common code where possible
     - Simplify the current mess so that PIO space is allocated and
       mapped in a single place for PCI bridges
     - Handle allocation constraints of PIO for all bridges including
       hot plugged ones within the 2GB space reserved for IO ports,
       so that devices on hotplugged busses will now work with drivers
       that assume IO ports fit in an int.
     - Cleanup and separate tracking of the ISA space in the reserved
       low 64K of IO space. No ISA -> Nothing mapped there.
    
    I booted a cell blade with IDE on PIO and MMIO and a dual G5 so
    far, that's it :-)
    
    With this patch, all allocations are done using the code in
    mm/vmalloc.c, though we use the low level __get_vm_area with
    explicit start/stop constraints in order to manage separate
    areas for vmalloc/vmap, ioremap, and PCI IOs.
    
    This greatly simplifies a lot of things, as you can see in the
    diffstat of that patch :-)
    
    A new pair of functions pcibios_map/unmap_io_space() now replace
    all of the previous code that used to manipulate PCI IOs space.
    The allocation is done at mapping time, which is now called from
    scan_phb's, just before the devices are probed (instead of after,
    which is by itself a bug fix). The only other caller is the PCI
    hotplug code for hot adding PCI-PCI bridges (slots).
    
    imalloc is gone, as is the "sub-allocation" thing, but I do beleive
    that hotplug should still work in the sense that the space allocation
    is always done by the PHB, but if you unmap a child bus of this PHB
    (which seems to be possible), then the code should properly tear
    down all the HPTE mappings for that area of the PHB allocated IO space.
    
    I now always reserve the first 64K of IO space for the bridge with
    the ISA bus on it. I have moved the code for tracking ISA in a separate
    file which should also make it smarter if we ever are capable of
    hot unplugging or re-plugging an ISA bridge.
    
    This should have a side effect on platforms like powermac where VGA IOs
    will no longer work. This is done on purpose though as they would have
    worked semi-randomly before. The idea at this point is to isolate drivers
    that might need to access those and fix them by providing a proper
    function to obtain an offset to the legacy IOs of a given bus.
    
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Paul Mackerras <paulus@samba.org>

diff --git a/arch/powerpc/platforms/pseries/pseries.h b/arch/powerpc/platforms/pseries/pseries.h
index 2729d559fd91..61e19f78b923 100644
--- a/arch/powerpc/platforms/pseries/pseries.h
+++ b/arch/powerpc/platforms/pseries/pseries.h
@@ -33,6 +33,8 @@ static inline void setup_kexec_cpu_down_xics(void) { }
 static inline void setup_kexec_cpu_down_mpic(void) { }
 #endif
 
+extern void pSeries_final_fixup(void);
+
 /* Poweron flag used for enabling auto ups restart */
 extern unsigned long rtas_poweron_auto;
 

commit f7c0d13b9430c4bb4b6f8507ed19d7cc7971dfa5
Author: Stephen Rothwell <sfr@canb.auug.org.au>
Date:   Wed May 16 13:21:09 2007 +1000

    [POWERPC] Fix warning on UP
    
    arch/powerpc/platforms/pseries/pseries.h:24: warning: return type defaults to 'int'
    arch/powerpc/platforms/pseries/pseries.h:25: warning: return type defaults to 'int'
    arch/powerpc/platforms/pseries/pseries.h:24: warning: control reaches end of non-void function
    arch/powerpc/platforms/pseries/pseries.h:25: warning: control reaches end of non-void function
    
    Signed-off-by: Stephen Rothwell <sfr@canb.auug.org.au>
    Signed-off-by: Paul Mackerras <paulus@samba.org>

diff --git a/arch/powerpc/platforms/pseries/pseries.h b/arch/powerpc/platforms/pseries/pseries.h
index 22bc01989749..2729d559fd91 100644
--- a/arch/powerpc/platforms/pseries/pseries.h
+++ b/arch/powerpc/platforms/pseries/pseries.h
@@ -21,8 +21,8 @@ extern int pSeries_machine_check_exception(struct pt_regs *regs);
 extern void smp_init_pseries_mpic(void);
 extern void smp_init_pseries_xics(void);
 #else
-static inline smp_init_pseries_mpic(void) { };
-static inline smp_init_pseries_xics(void) { };
+static inline void smp_init_pseries_mpic(void) { };
+static inline void smp_init_pseries_xics(void) { };
 #endif
 
 #ifdef CONFIG_KEXEC

commit 5d30bf309717a518d0c4180af41650d4dcd3bb38
Author: Manish Ahuja <ahuja@austin.ibm.com>
Date:   Thu Feb 8 16:01:17 2007 -0600

    [POWERPC] pseries: Enabling auto poweron after power is restored.
    
    During power outages, the UPS notifies the system for a shutdown.
    In the current setup, it isn't possible to poweron when power is
    restored.  This patch fixes the issue by calling the right
    ibm,power-off-ups token during such events.  It also adds a sysfs
    interface so userspace can specify whether or not to power on when
    power is restored.
    
    Signed-off-by: Manish Ahuja <ahuja@austin.ibm.com>
    Signed-off-by: Paul Mackerras <paulus@samba.org>

diff --git a/arch/powerpc/platforms/pseries/pseries.h b/arch/powerpc/platforms/pseries/pseries.h
index 35264f9af0ff..22bc01989749 100644
--- a/arch/powerpc/platforms/pseries/pseries.h
+++ b/arch/powerpc/platforms/pseries/pseries.h
@@ -33,4 +33,7 @@ static inline void setup_kexec_cpu_down_xics(void) { }
 static inline void setup_kexec_cpu_down_mpic(void) { }
 #endif
 
+/* Poweron flag used for enabling auto ups restart */
+extern unsigned long rtas_poweron_auto;
+
 #endif /* _PSERIES_PSERIES_H */

commit 8c0238b3f1a7849b89707ac6b7b0c84e1ed2df70
Author: Michael Ellerman <michael@ellerman.id.au>
Date:   Wed Feb 14 16:08:05 2007 +1100

    [POWERPC] Fix cut and paste breakage in arch/powerpc/platforms/pseries/pseries.h
    
    My "cleanup" patch (dce623e0827e8d0ad60ce7f385c3394bf1b0bae0) had a cut
    and paste error for the !CONFIG_KEXEC case. Fifty lashes for me.
    
    Signed-off-by: Michael Ellerman <michael@ellerman.id.au>
    Signed-off-by: Paul Mackerras <paulus@samba.org>

diff --git a/arch/powerpc/platforms/pseries/pseries.h b/arch/powerpc/platforms/pseries/pseries.h
index b43f1397a5b6..35264f9af0ff 100644
--- a/arch/powerpc/platforms/pseries/pseries.h
+++ b/arch/powerpc/platforms/pseries/pseries.h
@@ -29,8 +29,8 @@ static inline smp_init_pseries_xics(void) { };
 extern void setup_kexec_cpu_down_xics(void);
 extern void setup_kexec_cpu_down_mpic(void);
 #else
-static inline setup_kexec_cpu_down_xics(void) { };
-static inline setup_kexec_cpu_down_mpic(void) { };
+static inline void setup_kexec_cpu_down_xics(void) { }
+static inline void setup_kexec_cpu_down_mpic(void) { }
 #endif
 
 #endif /* _PSERIES_PSERIES_H */

commit dce623e0827e8d0ad60ce7f385c3394bf1b0bae0
Author: Michael Ellerman <michael@ellerman.id.au>
Date:   Thu Feb 8 18:33:55 2007 +1100

    [POWERPC] Cleanup pseries kexec code
    
    Move all the pseries kexec code into one file, platforms/pseries/kexec.c
    Provide helpers for setting up ppc_md.kexec_cpu_down, so that we don't
    have to have #ifdef CONFIG_KEXEC in setup.c
    
    Move the initialisation of the ppc_md kexec callbacks into an init routine.
    This is well and truly early enough to cause no change in behaviour, we
    can't kexec until userspace has given us a kernel to kexec into.
    
    Signed-off-by: Michael Ellerman <michael@ellerman.id.au>
    Signed-off-by: Paul Mackerras <paulus@samba.org>

diff --git a/arch/powerpc/platforms/pseries/pseries.h b/arch/powerpc/platforms/pseries/pseries.h
index 36c791572682..b43f1397a5b6 100644
--- a/arch/powerpc/platforms/pseries/pseries.h
+++ b/arch/powerpc/platforms/pseries/pseries.h
@@ -25,4 +25,12 @@ static inline smp_init_pseries_mpic(void) { };
 static inline smp_init_pseries_xics(void) { };
 #endif
 
+#ifdef CONFIG_KEXEC
+extern void setup_kexec_cpu_down_xics(void);
+extern void setup_kexec_cpu_down_mpic(void);
+#else
+static inline setup_kexec_cpu_down_xics(void) { };
+static inline setup_kexec_cpu_down_mpic(void) { };
+#endif
+
 #endif /* _PSERIES_PSERIES_H */

commit 8feaeca23ab8f520e7af2a862fd6ea8e7bfd8854
Author: Michael Ellerman <michael@ellerman.id.au>
Date:   Thu Feb 8 18:33:55 2007 +1100

    [POWERPC] Cleanup pseries smp initialisation code
    
    Move some extern declarations from setup.c into the new pseries.h.
    While we're at it, provide dummy implementations for !SMP, to avoid
    cluttering the C file with more #ifdefs.
    
    Signed-off-by: Michael Ellerman <michael@ellerman.id.au>
    Signed-off-by: Paul Mackerras <paulus@samba.org>

diff --git a/arch/powerpc/platforms/pseries/pseries.h b/arch/powerpc/platforms/pseries/pseries.h
index 37618cb896cb..36c791572682 100644
--- a/arch/powerpc/platforms/pseries/pseries.h
+++ b/arch/powerpc/platforms/pseries/pseries.h
@@ -17,4 +17,12 @@ struct pt_regs;
 extern int pSeries_system_reset_exception(struct pt_regs *regs);
 extern int pSeries_machine_check_exception(struct pt_regs *regs);
 
+#ifdef CONFIG_SMP
+extern void smp_init_pseries_mpic(void);
+extern void smp_init_pseries_xics(void);
+#else
+static inline smp_init_pseries_mpic(void) { };
+static inline smp_init_pseries_xics(void) { };
+#endif
+
 #endif /* _PSERIES_PSERIES_H */

commit 577830b034bc11c93d4b9e21e8782900d5485e7f
Author: Michael Ellerman <michael@ellerman.id.au>
Date:   Thu Feb 8 18:33:51 2007 +1100

    [POWERPC] Consolidate pseries platform header files into pseries.h
    
    Following the example of platforms/pasemi, consolidate a couple of
    tiny header files in platforms/pseries into pseries.h.
    
    This gives us a convenient place to put things that need to be
    available to the platform code, but not public. And hopefully will
    help people resist the temptation of sticking externs in C files.
    
    Signed-off-by: Michael Ellerman <michael@ellerman.id.au>
    Signed-off-by: Paul Mackerras <paulus@samba.org>

diff --git a/arch/powerpc/platforms/pseries/pseries.h b/arch/powerpc/platforms/pseries/pseries.h
new file mode 100644
index 000000000000..37618cb896cb
--- /dev/null
+++ b/arch/powerpc/platforms/pseries/pseries.h
@@ -0,0 +1,20 @@
+/*
+ * Copyright 2006 IBM Corporation.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version
+ * 2 of the License, or (at your option) any later version.
+ */
+
+#ifndef _PSERIES_PSERIES_H
+#define _PSERIES_PSERIES_H
+
+extern void __init fw_feature_init(void);
+
+struct pt_regs;
+
+extern int pSeries_system_reset_exception(struct pt_regs *regs);
+extern int pSeries_machine_check_exception(struct pt_regs *regs);
+
+#endif /* _PSERIES_PSERIES_H */
