commit 65fddcfca8ad14778f71a57672fd01e8112d30fa
Author: Mike Rapoport <rppt@linux.ibm.com>
Date:   Mon Jun 8 21:32:42 2020 -0700

    mm: reorder includes after introduction of linux/pgtable.h
    
    The replacement of <asm/pgrable.h> with <linux/pgtable.h> made the include
    of the latter in the middle of asm includes.  Fix this up with the aid of
    the below script and manual adjustments here and there.
    
            import sys
            import re
    
            if len(sys.argv) is not 3:
                print "USAGE: %s <file> <header>" % (sys.argv[0])
                sys.exit(1)
    
            hdr_to_move="#include <linux/%s>" % sys.argv[2]
            moved = False
            in_hdrs = False
    
            with open(sys.argv[1], "r") as f:
                lines = f.readlines()
                for _line in lines:
                    line = _line.rstrip('
    ')
                    if line == hdr_to_move:
                        continue
                    if line.startswith("#include <linux/"):
                        in_hdrs = True
                    elif not moved and in_hdrs:
                        moved = True
                        print hdr_to_move
                    print line
    
    Signed-off-by: Mike Rapoport <rppt@linux.ibm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Cain <bcain@codeaurora.org>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Chris Zankel <chris@zankel.net>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Geert Uytterhoeven <geert@linux-m68k.org>
    Cc: Greentime Hu <green.hu@gmail.com>
    Cc: Greg Ungerer <gerg@linux-m68k.org>
    Cc: Guan Xuetao <gxt@pku.edu.cn>
    Cc: Guo Ren <guoren@kernel.org>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: Helge Deller <deller@gmx.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Ley Foon Tan <ley.foon.tan@intel.com>
    Cc: Mark Salter <msalter@redhat.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Matt Turner <mattst88@gmail.com>
    Cc: Max Filippov <jcmvbkbc@gmail.com>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Michal Simek <monstr@monstr.eu>
    Cc: Nick Hu <nickhu@andestech.com>
    Cc: Paul Walmsley <paul.walmsley@sifive.com>
    Cc: Richard Weinberger <richard@nod.at>
    Cc: Rich Felker <dalias@libc.org>
    Cc: Russell King <linux@armlinux.org.uk>
    Cc: Stafford Horne <shorne@gmail.com>
    Cc: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Vincent Chen <deanbo422@gmail.com>
    Cc: Vineet Gupta <vgupta@synopsys.com>
    Cc: Will Deacon <will@kernel.org>
    Cc: Yoshinori Sato <ysato@users.sourceforge.jp>
    Link: http://lkml.kernel.org/r/20200514170327.31389-4-rppt@kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
index 3b82bb594436..6aa8defb5857 100644
--- a/arch/powerpc/platforms/85xx/corenet_generic.c
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -12,11 +12,11 @@
 #include <linux/kdev_t.h>
 #include <linux/delay.h>
 #include <linux/interrupt.h>
+#include <linux/pgtable.h>
 
 #include <asm/time.h>
 #include <asm/machdep.h>
 #include <asm/pci-bridge.h>
-#include <linux/pgtable.h>
 #include <asm/ppc-pci.h>
 #include <mm/mmu_decl.h>
 #include <asm/prom.h>

commit ca5999fde0a1761665a38e4c9a72dbcd7d190a81
Author: Mike Rapoport <rppt@linux.ibm.com>
Date:   Mon Jun 8 21:32:38 2020 -0700

    mm: introduce include/linux/pgtable.h
    
    The include/linux/pgtable.h is going to be the home of generic page table
    manipulation functions.
    
    Start with moving asm-generic/pgtable.h to include/linux/pgtable.h and
    make the latter include asm/pgtable.h.
    
    Signed-off-by: Mike Rapoport <rppt@linux.ibm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Cain <bcain@codeaurora.org>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Chris Zankel <chris@zankel.net>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Geert Uytterhoeven <geert@linux-m68k.org>
    Cc: Greentime Hu <green.hu@gmail.com>
    Cc: Greg Ungerer <gerg@linux-m68k.org>
    Cc: Guan Xuetao <gxt@pku.edu.cn>
    Cc: Guo Ren <guoren@kernel.org>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: Helge Deller <deller@gmx.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Ley Foon Tan <ley.foon.tan@intel.com>
    Cc: Mark Salter <msalter@redhat.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Matt Turner <mattst88@gmail.com>
    Cc: Max Filippov <jcmvbkbc@gmail.com>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Michal Simek <monstr@monstr.eu>
    Cc: Nick Hu <nickhu@andestech.com>
    Cc: Paul Walmsley <paul.walmsley@sifive.com>
    Cc: Richard Weinberger <richard@nod.at>
    Cc: Rich Felker <dalias@libc.org>
    Cc: Russell King <linux@armlinux.org.uk>
    Cc: Stafford Horne <shorne@gmail.com>
    Cc: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Vincent Chen <deanbo422@gmail.com>
    Cc: Vineet Gupta <vgupta@synopsys.com>
    Cc: Will Deacon <will@kernel.org>
    Cc: Yoshinori Sato <ysato@users.sourceforge.jp>
    Link: http://lkml.kernel.org/r/20200514170327.31389-3-rppt@kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
index 27ac38f7e1a9..3b82bb594436 100644
--- a/arch/powerpc/platforms/85xx/corenet_generic.c
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -16,7 +16,7 @@
 #include <asm/time.h>
 #include <asm/machdep.h>
 #include <asm/pci-bridge.h>
-#include <asm/pgtable.h>
+#include <linux/pgtable.h>
 #include <asm/ppc-pci.h>
 #include <mm/mmu_decl.h>
 #include <asm/prom.h>

commit 4e0e161d3cc403823159b2c15b6f4c9f642fd1d3
Author: Rasmus Villemoes <linux@rasmusvillemoes.dk>
Date:   Thu Nov 28 15:55:17 2019 +0100

    soc: fsl: qe: move calls of qe_ic_init out of arch/powerpc/
    
    Having to call qe_ic_init() from platform-specific code makes it
    awkward to allow building the QE drivers for ARM. It's also a needless
    duplication of code, and slightly error-prone: Instead of the caller
    needing to know the details of whether the QUICC Engine High and QUICC
    Engine Low are actually the same interrupt (see e.g. the machine_is()
    in mpc85xx_mds_qeic_init), just let the init function choose the
    appropriate handlers after it has parsed the DT and figured it out. If
    the two interrupts are distinct, use separate handlers, otherwise use
    the handler which first checks the CHIVEC register (for the high
    priority interrupts), then the CIVEC.
    
    All existing callers pass 0 for flags, so continue to do that from the
    new single caller. Later cleanups will remove that argument
    from qe_ic_init and simplify the body, as well as make qe_ic_init into
    a proper init function for an IRQCHIP_DECLARE, eliminating the need to
    manually look up the fsl,qe-ic node.
    
    Reviewed-by: Timur Tabi <timur@kernel.org>
    Signed-off-by: Rasmus Villemoes <linux@rasmusvillemoes.dk>
    Signed-off-by: Li Yang <leoyang.li@nxp.com>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
index a328a741b457..27ac38f7e1a9 100644
--- a/arch/powerpc/platforms/85xx/corenet_generic.c
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -24,7 +24,6 @@
 #include <asm/mpic.h>
 #include <asm/ehv_pic.h>
 #include <asm/swiotlb.h>
-#include <soc/fsl/qe/qe_ic.h>
 
 #include <linux/of_platform.h>
 #include <sysdev/fsl_soc.h>
@@ -38,8 +37,6 @@ void __init corenet_gen_pic_init(void)
 	unsigned int flags = MPIC_BIG_ENDIAN | MPIC_SINGLE_DEST_CPU |
 		MPIC_NO_RESET;
 
-	struct device_node *np;
-
 	if (ppc_md.get_irq == mpic_get_coreint_irq)
 		flags |= MPIC_ENABLE_COREINT;
 
@@ -47,13 +44,6 @@ void __init corenet_gen_pic_init(void)
 	BUG_ON(mpic == NULL);
 
 	mpic_init(mpic);
-
-	np = of_find_compatible_node(NULL, NULL, "fsl,qe-ic");
-	if (np) {
-		qe_ic_init(np, 0, qe_ic_cascade_low_mpic,
-				qe_ic_cascade_high_mpic);
-		of_node_put(np);
-	}
 }
 
 /*

commit 3e4282e484b3b45f1de3f2e9e6c8b192d3ac9fcf
Author: Rasmus Villemoes <linux@rasmusvillemoes.dk>
Date:   Wed Oct 23 14:54:48 2019 +0200

    powerpc/85xx: remove mostly pointless mpc85xx_qe_init()
    
    Since commit 302c059f2e7b (QE: use subsys_initcall to init qe),
    mpc85xx_qe_init() has done nothing apart from possibly emitting a
    pr_err(). As part of reducing the amount of QE-related code in
    arch/powerpc/ (and eventually support QE on other architectures),
    remove this low-hanging fruit.
    
    Signed-off-by: Rasmus Villemoes <linux@rasmusvillemoes.dk>
    Signed-off-by: Scott Wood <oss@buserror.net>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
index 7ee2c6628f64..a328a741b457 100644
--- a/arch/powerpc/platforms/85xx/corenet_generic.c
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -66,8 +66,6 @@ void __init corenet_gen_setup_arch(void)
 	swiotlb_detect_4g();
 
 	pr_info("%s board\n", ppc_md.name);
-
-	mpc85xx_qe_init();
 }
 
 static const struct of_device_id of_device_ids[] = {

commit 2874c5fd284268364ece81a7bd936f3c8168e567
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon May 27 08:55:01 2019 +0200

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 152
    
    Based on 1 normalized pattern(s):
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license as published by
      the free software foundation either version 2 of the license or at
      your option any later version
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-or-later
    
    has been chosen to replace the boilerplate/reference in 3029 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190527070032.746973796@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
index 785e9641220d..7ee2c6628f64 100644
--- a/arch/powerpc/platforms/85xx/corenet_generic.c
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -1,14 +1,10 @@
+// SPDX-License-Identifier: GPL-2.0-or-later
 /*
  * Corenet based SoC DS Setup
  *
  * Maintained by Kumar Gala (see MAINTAINERS for contact information)
  *
  * Copyright 2009-2011 Freescale Semiconductor Inc.
- *
- * This program is free software; you can redistribute  it and/or modify it
- * under  the terms of  the GNU General  Public License as published by the
- * Free Software Foundation;  either version 2 of the  License, or (at your
- * option) any later version.
  */
 
 #include <linux/kernel.h>

commit 4a605e2d1a69f5aea06da10d81e22802a90812a3
Author: Christoph Hellwig <hch@lst.de>
Date:   Wed Feb 13 08:01:33 2019 +0100

    powerpc/dma: trim the fat from <asm/dma-mapping.h>
    
    There is no need to provide anything but get_arch_dma_ops to
    <linux/dma-mapping.h>.  More the remaining declarations to <asm/iommu.h>
    and drop all the includes.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Tested-by: Christian Zigotzky <chzigotzky@xenosoft.de>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
index 808da1e9c0a7..785e9641220d 100644
--- a/arch/powerpc/platforms/85xx/corenet_generic.c
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -27,6 +27,7 @@
 #include <asm/udbg.h>
 #include <asm/mpic.h>
 #include <asm/ehv_pic.h>
+#include <asm/swiotlb.h>
 #include <soc/fsl/qe/qe_ic.h>
 
 #include <linux/of_platform.h>

commit 68005b67d15a1ee5b5ddff965175728e65fa73e7
Author: Christoph Hellwig <hch@lst.de>
Date:   Wed Feb 13 08:01:30 2019 +0100

    powerpc/dma: use the generic direct mapping bypass
    
    Now that we've switched all the powerpc nommu and swiotlb methods to
    use the generic dma_direct_* calls we can remove these ops vectors
    entirely and rely on the common direct mapping bypass that avoids
    indirect function calls entirely.  This also allows to remove a whole
    lot of boilerplate code related to setting up these operations.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Tested-by: Christian Zigotzky <chzigotzky@xenosoft.de>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
index b0dac307bebf..808da1e9c0a7 100644
--- a/arch/powerpc/platforms/85xx/corenet_generic.c
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -223,7 +223,3 @@ define_machine(corenet_generic) {
 };
 
 machine_arch_initcall(corenet_generic, corenet_gen_publish_devices);
-
-#ifdef CONFIG_SWIOTLB
-machine_arch_initcall(corenet_generic, swiotlb_setup_bus_notifier);
-#endif

commit 25078dc1f74be16b858e914f52cc8f4d03c2271a
Author: Christoph Hellwig <hch@lst.de>
Date:   Sun Dec 16 17:53:49 2018 +0100

    powerpc: use mm zones more sensibly
    
    Powerpc has somewhat odd usage where ZONE_DMA is used for all memory on
    common 64-bit configfs, and ZONE_DMA32 is used for 31-bit schemes.
    
    Move to a scheme closer to what other architectures use (and I dare to
    say the intent of the system):
    
     - ZONE_DMA: optionally for memory < 31-bit (64-bit embedded only)
     - ZONE_NORMAL: everything addressable by the kernel
     - ZONE_HIGHMEM: memory > 32-bit for 32-bit kernels
    
    Also provide information on how ZONE_DMA is used by defining
    ARCH_ZONE_DMA_BITS.
    
    Contains various fixes from Benjamin Herrenschmidt.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
index ac191a7a1337..b0dac307bebf 100644
--- a/arch/powerpc/platforms/85xx/corenet_generic.c
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -68,16 +68,6 @@ void __init corenet_gen_setup_arch(void)
 
 	swiotlb_detect_4g();
 
-#if defined(CONFIG_FSL_PCI) && defined(CONFIG_ZONE_DMA32)
-	/*
-	 * Inbound windows don't cover the full lower 4 GiB
-	 * due to conflicts with PCICSRBAR and outbound windows,
-	 * so limit the DMA32 zone to 2 GiB, to allow consistent
-	 * allocations to succeed.
-	 */
-	limit_zone_pfn(ZONE_DMA32, 1UL << (31 - PAGE_SHIFT));
-#endif
-
 	pr_info("%s board\n", ppc_md.name);
 
 	mpc85xx_qe_init();

commit fdc8c4adb6a465b5873df97fcbd1cb332ade019b
Author: Valentin Longchamp <valentin.longchamp@keymile.com>
Date:   Thu Dec 15 14:22:28 2016 +0100

    powerpc/corenet: add support for the kmcent2 board
    
    This board is built around Freescale's T1040 SoC.
    
    The peripherals used by this design are:
    - DDR3 RAM with SPD support
    - parallel NOR Flash as boot medium
    - 1 PCIe bus (PCIe1 x1)
    - 3 FMAN Ethernet devices (FMAN1 DTSEC1/2/5)
    - 4 IFC bus devices:
      - NOR flash
      - NAND flash
      - QRIO reset/power mgmt CPLD
      - BFTIC chassis management CPLD
    - 2 I2C buses
    - 1 SPI bus
    - HDLC bus with the QE's UCC1
    - last but not least, the mandatory serial port
    
    The board can be used with the corenet32_smp_defconfig.
    
    Signed-off-by: Valentin Longchamp <valentin.longchamp@keymile.com>
    Signed-off-by: Scott Wood <oss@buserror.net>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
index 6c0ba75fb256..ac191a7a1337 100644
--- a/arch/powerpc/platforms/85xx/corenet_generic.c
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -157,6 +157,7 @@ static const char * const boards[] __initconst = {
 	"fsl,T1040RDB",
 	"fsl,T1042RDB",
 	"fsl,T1042RDB_PI",
+	"keymile,kmcent2",
 	"keymile,kmcoge4",
 	"varisys,CYRUS",
 	NULL

commit ae6021d4fc2bcc9e3193a007b2c9d31392ac641b
Author: Madalin Bucur <madalin.bucur@nxp.com>
Date:   Mon Dec 19 22:42:44 2016 +0200

    powerpc: fsl/fman: remove fsl,fman from of_device_ids[]
    
    The fsl/fman drivers will use of_platform_populate() on all
    supported platforms. Call of_platform_populate() to probe the
    FMan sub-nodes.
    
    Signed-off-by: Igal Liberman <igal.liberman@freescale.com>
    Signed-off-by: Madalin Bucur <madalin.bucur@nxp.com>
    Acked-by: Scott Wood <oss@buserror.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
index 3803b0addf65..6c0ba75fb256 100644
--- a/arch/powerpc/platforms/85xx/corenet_generic.c
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -117,9 +117,6 @@ static const struct of_device_id of_device_ids[] = {
 	{
 		.compatible	= "fsl,qe",
 	},
-	{
-		.compatible    = "fsl,fman",
-	},
 	/* The following two are for the Freescale hypervisor */
 	{
 		.name		= "hypervisor",

commit da6658859b9c734fee36570f3a7d51764c6c3838
Author: Thiago Jung Bauermann <bauerman@linux.vnet.ibm.com>
Date:   Tue Nov 29 23:45:50 2016 +1100

    powerpc: Change places using CONFIG_KEXEC to use CONFIG_KEXEC_CORE instead.
    
    Commit 2965faa5e03d ("kexec: split kexec_load syscall from kexec core
    code") introduced CONFIG_KEXEC_CORE so that CONFIG_KEXEC means whether
    the kexec_load system call should be compiled-in and CONFIG_KEXEC_FILE
    means whether the kexec_file_load system call should be compiled-in.
    These options can be set independently from each other.
    
    Since until now powerpc only supported kexec_load, CONFIG_KEXEC and
    CONFIG_KEXEC_CORE were synonyms. That is not the case anymore, so we
    need to make a distinction. Almost all places where CONFIG_KEXEC was
    being used should be using CONFIG_KEXEC_CORE instead, since
    kexec_file_load also needs that code compiled in.
    
    Signed-off-by: Thiago Jung Bauermann <bauerman@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
index 1179115a4b5c..3803b0addf65 100644
--- a/arch/powerpc/platforms/85xx/corenet_generic.c
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -220,7 +220,7 @@ define_machine(corenet_generic) {
  *
  * Likewise, problems have been seen with kexec when coreint is enabled.
  */
-#if defined(CONFIG_HOTPLUG_CPU) || defined(CONFIG_KEXEC)
+#if defined(CONFIG_HOTPLUG_CPU) || defined(CONFIG_KEXEC_CORE)
 	.get_irq		= mpic_get_irq,
 #else
 	.get_irq		= mpic_get_coreint_irq,

commit 7120438e5d82f445acbfe131a1b58eab7e83fa33
Author: Andrey Smirnov <andrew.smirnov@gmail.com>
Date:   Thu Jul 28 16:07:18 2016 -0700

    powerpc: Convert fsl_rstcr_restart to a reset handler
    
    Convert fsl_rstcr_restart into a function to be registered with
    register_reset_handler().
    
    Signed-off-by: Andrey Smirnov <andrew.smirnov@gmail.com>
    [scottwood: Converted mvme7100 as well]
    Signed-off-by: Scott Wood <oss@buserror.net>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
index 3a6a84f07f43..1179115a4b5c 100644
--- a/arch/powerpc/platforms/85xx/corenet_generic.c
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -225,7 +225,6 @@ define_machine(corenet_generic) {
 #else
 	.get_irq		= mpic_get_coreint_irq,
 #endif
-	.restart		= fsl_rstcr_restart,
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
 #ifdef CONFIG_PPC64

commit 565713840445b7ccafb28dc1230d57d40bcb42a5
Author: Benjamin Herrenschmidt <benh@kernel.crashing.org>
Date:   Tue Jul 5 15:04:05 2016 +1000

    powerpc: Move 32-bit probe() machine to later in the boot process
    
    This converts all the 32-bit platforms to use the expanded device-tree
    which is a pretty mechanical change. Unlike 64-bit, the 32-bit kernel
    didn't rely on platform initializations to setup the MMU since it
    sets it up entirely before probe_machine() so the move has comparatively
    less consequences though it's a bigger patch.
    
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
index a2b0bc859de0..3a6a84f07f43 100644
--- a/arch/powerpc/platforms/85xx/corenet_generic.c
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -170,20 +170,19 @@ static const char * const boards[] __initconst = {
  */
 static int __init corenet_generic_probe(void)
 {
-	unsigned long root = of_get_flat_dt_root();
 	char hv_compat[24];
 	int i;
 #ifdef CONFIG_SMP
 	extern struct smp_ops_t smp_85xx_ops;
 #endif
 
-	if (of_flat_dt_match(root, boards))
+	if (of_device_compatible_match(of_root, boards))
 		return 1;
 
 	/* Check if we're running under the Freescale hypervisor */
 	for (i = 0; boards[i]; i++) {
 		snprintf(hv_compat, sizeof(hv_compat), "%s-hv", boards[i]);
-		if (of_flat_dt_is_compatible(root, hv_compat)) {
+		if (of_machine_is_compatible(hv_compat)) {
 			ppc_md.init_IRQ = ehv_pic_init;
 
 			ppc_md.get_irq = ehv_pic_get_irq;

commit 7aa1aa6ecec2af19d9aa85430ce3e56119e21626
Author: Zhao Qiang <qiang.zhao@freescale.com>
Date:   Mon Nov 30 10:48:57 2015 +0800

    QE: Move QE from arch/powerpc to drivers/soc
    
    ls1 has qe and ls1 has arm cpu.
    move qe from arch/powerpc to drivers/soc/fsl
    to adapt to powerpc and arm
    
    Signed-off-by: Zhao Qiang <qiang.zhao@freescale.com>
    Signed-off-by: Scott Wood <scottwood@freescale.com>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
index 46d05c94add6..a2b0bc859de0 100644
--- a/arch/powerpc/platforms/85xx/corenet_generic.c
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -27,7 +27,7 @@
 #include <asm/udbg.h>
 #include <asm/mpic.h>
 #include <asm/ehv_pic.h>
-#include <asm/qe_ic.h>
+#include <soc/fsl/qe/qe_ic.h>
 
 #include <linux/of_platform.h>
 #include <sysdev/fsl_soc.h>

commit 9f640bf5321dff6af69016d8fe753efa6b2f3e72
Author: Scott Wood <scottwood@freescale.com>
Date:   Tue Oct 6 22:48:06 2015 -0500

    powerpc/fsl-corenet: Disable coreint if kexec is enabled
    
    Problems have been observed in coreint (EPR) mode if interrupts are
    left pending (due to the lack of device quiescence with kdump) after
    having tried to deliver to a CPU but unable to deliver due to MSR[EE]
    -- interrupts no longer get reliably delivered in the new kernel.  I
    tried various ways of fixing it up inside the crash kernel itself, and
    none worked (including resetting the entire mpic).  Masking all
    interrupts and issuing EOIs in the crashing kernel did help a lot of
    the time, but the behavior was not consistent.
    
    Thus, stick to standard IACK mode when kdump is a possibility.
    
    Signed-off-by: Scott Wood <scottwood@freescale.com>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
index 3a8be47c0e3a..46d05c94add6 100644
--- a/arch/powerpc/platforms/85xx/corenet_generic.c
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -216,10 +216,12 @@ define_machine(corenet_generic) {
 	.pcibios_fixup_phb      = fsl_pcibios_fixup_phb,
 #endif
 /*
- * Core reset may cause issue if using the proxy mode of MPIC.
+ * Core reset may cause issues if using the proxy mode of MPIC.
  * So, use the mixed mode of MPIC if enabling CPU hotplug.
+ *
+ * Likewise, problems have been seen with kexec when coreint is enabled.
  */
-#ifdef CONFIG_HOTPLUG_CPU
+#if defined(CONFIG_HOTPLUG_CPU) || defined(CONFIG_KEXEC)
 	.get_irq		= mpic_get_irq,
 #else
 	.get_irq		= mpic_get_coreint_irq,

commit c383ee84e1d575b09d167185d15df24bde25eb15
Author: Andy Fleming <afleming@gmail.com>
Date:   Wed Sep 2 13:07:58 2015 -0500

    powerpc/85xx: Add support for Varisys Cyrus board
    
    This board uses a P5020 chip, and boots just fine using
    the corenet_generic code. The device tree is very similar to the
    P5020DS, except that there is no Flash memory. The environment is,
    instead, stored on an MMC card on the motherboard.
    
    Signed-off-by: Andy Fleming <afleming@gmail.com>
    [scottwood: fixed trailing whitespace]
    Signed-off-by: Scott Wood <scottwood@freescale.com>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
index 99412b32586d..3a8be47c0e3a 100644
--- a/arch/powerpc/platforms/85xx/corenet_generic.c
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -161,6 +161,7 @@ static const char * const boards[] __initconst = {
 	"fsl,T1042RDB",
 	"fsl,T1042RDB_PI",
 	"keymile,kmcoge4",
+	"varisys,CYRUS",
 	NULL
 };
 

commit 881ea7d3f55bf7b8834c81d86c4dcb3d5f786f15
Author: chenhui zhao <chenhui.zhao@freescale.com>
Date:   Thu Jul 23 11:55:45 2015 +0800

    powerpc/corenet: use the mixed mode of MPIC when enabling CPU hotplug
    
    Core reset may cause issue if using the proxy mode of MPIC.
    Use the mixed mode of MPIC if enabling CPU hotplug.
    
    Signed-off-by: Chenhui Zhao <chenhui.zhao@freescale.com>
    Signed-off-by: Scott Wood <scottwood@freescale.com>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
index b39557120cbb..99412b32586d 100644
--- a/arch/powerpc/platforms/85xx/corenet_generic.c
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -214,7 +214,15 @@ define_machine(corenet_generic) {
 	.pcibios_fixup_bus	= fsl_pcibios_fixup_bus,
 	.pcibios_fixup_phb      = fsl_pcibios_fixup_phb,
 #endif
+/*
+ * Core reset may cause issue if using the proxy mode of MPIC.
+ * So, use the mixed mode of MPIC if enabling CPU hotplug.
+ */
+#ifdef CONFIG_HOTPLUG_CPU
+	.get_irq		= mpic_get_irq,
+#else
 	.get_irq		= mpic_get_coreint_irq,
+#endif
 	.restart		= fsl_rstcr_restart,
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,

commit 0d748ec5eaedfa0802e02df6b5912d32c752f88e
Author: Priyanka Jain <Priyanka.Jain@freescale.com>
Date:   Thu Jul 30 10:33:55 2015 +0530

    powerpc/fsl-booke: Add T1040D4RDB/T1042D4RDB board support
    
    T1040D4RDB/T1042D4RDB are Freescale Reference Design Board
    which can support T1040/T1042 QorIQ Power
    Architecture™ processor respectively
    
    T1040D4RDB/T1042D4RDB board Overview
    -------------------------------------
    - SERDES Connections, 8 lanes supporting:
            - PCI
            - SGMII
            - SATA 2.0
            - QSGMII(only for T1040D4RDB)
        - DDR Controller
            - Supports rates of up to 1600 MHz data-rate
            - Supports one DDR4 UDIMM
        -IFC/Local Bus
            - NAND flash: 1GB 8-bit NAND flash
            - NOR: 128MB 16-bit NOR Flash
        - Ethernet
            - Two on-board RGMII 10/100/1G ethernet ports.
            - PHY #0 remains powered up during deep-sleep
        - CPLD
        - Clocks
            - System and DDR clock (SYSCLK, “DDRCLK”)
            - SERDES clocks
        - Power Supplies
        - USB
            - Supports two USB 2.0 ports with integrated PHYs
            - Two type A ports with 5V@1.5A per port.
        - SDHC
            - SDHC/SDXC connector
        - SPI
            - On-board 64MB SPI flash
        - I2C
            - Devices connected: EEPROM, thermal monitor, VID controller
        - Other IO
            - Two Serial ports
            - ProfiBus port
    
        Add support for T1040/T1042D4RDB board:
        -add device tree
        -Add entry in corenet_generic.c
    
    Signed-off-by: Priyanka Jain <Priyanka.Jain@freescale.com>
    Signed-off-by: Scott Wood <scottwood@freescale.com>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
index bd839dc287fe..b39557120cbb 100644
--- a/arch/powerpc/platforms/85xx/corenet_generic.c
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -153,6 +153,8 @@ static const char * const boards[] __initconst = {
 	"fsl,T1023RDB",
 	"fsl,T1024QDS",
 	"fsl,T1024RDB",
+	"fsl,T1040D4RDB",
+	"fsl,T1042D4RDB",
 	"fsl,T1040QDS",
 	"fsl,T1042QDS",
 	"fsl,T1040RDB",

commit 65bf2a057021b009ff9924b59203993bdff82ecc
Author: Shengzhou Liu <Shengzhou.Liu@freescale.com>
Date:   Thu Apr 9 16:07:45 2015 +0800

    powerpc/fsl-booke: Add T1023 RDB board support
    
    T1023RDB is a Freescale Reference Design Board that hosts T1023 SoC.
    
    T1023RDB board Overview
    -----------------------
    - T1023 SoC integrating two 64-bit e5500 cores up to 1.4GHz
    - CoreNet fabric supporting coherent and noncoherent transactions with
      prioritization and bandwidth allocation
    - Memory: 2GB Micron MT40A512M8HX unbuffered 32-bit fixed DDR4 without ECC
    - Accelerator: DPAA components consist of FMan, BMan, QMan, DCE and SEC
    - Ethernet interfaces:
      - one 1G RGMII port on-board(RTL8211F PHY)
      - one 1G SGMII port on-board(RTL8211F PHY)
      - one 2.5G SGMII port on-board(AQR105 PHY)
    - PCIe: Two Mini-PCIe connectors on-board.
    - SerDes: 4 lanes up to 10.3125GHz
    - NOR:  128MB S29GL01GS110TFIV10 Spansion NOR Flash
    - NAND: 512MB S34MS04G200BFI000 Spansion NAND Flash
    - eSPI: 64MB S25FL512SAGMFI010 Spansion SPI flash
    - USB: one Type-A USB 2.0 port with internal PHY
    - eSDHC: support SD/MMC card and eMMC flash on-board
    - 256Kbit M24256 I2C EEPROM
    - RTC: Real-time clock DS1339 on I2C bus
    - UART: one serial port on-board with RJ45 connector
    - Debugging: JTAG/COP for T1023 debugging
    
    Signed-off-by: Shengzhou Liu <Shengzhou.Liu@freescale.com>
    Signed-off-by: Scott Wood <scottwood@freescale.com>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
index d7c1b4d4254a..bd839dc287fe 100644
--- a/arch/powerpc/platforms/85xx/corenet_generic.c
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -150,6 +150,7 @@ static const char * const boards[] __initconst = {
 	"fsl,B4860QDS",
 	"fsl,B4420QDS",
 	"fsl,B4220QDS",
+	"fsl,T1023RDB",
 	"fsl,T1024QDS",
 	"fsl,T1024RDB",
 	"fsl,T1040QDS",

commit 5afe13fd48c72be61342edbc6ede6e60f6153227
Author: Shengzhou Liu <Shengzhou.Liu@freescale.com>
Date:   Thu Apr 9 16:07:44 2015 +0800

    powerpc/fsl-booke: Add T1024 RDB board support
    
    T1024RDB is a Freescale Reference Design Board that hosts the T1024 SoC.
    
    Signed-off-by: Shengzhou Liu <Shengzhou.Liu@freescale.com>
    [scottwood:  vendor prefix: s/at24/atmel/ and trimmed detailed
     board description with too-long lines]
    Signed-off-by: Scott Wood <scottwood@freescale.com>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
index f61f47780486..d7c1b4d4254a 100644
--- a/arch/powerpc/platforms/85xx/corenet_generic.c
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -151,6 +151,7 @@ static const char * const boards[] __initconst = {
 	"fsl,B4420QDS",
 	"fsl,B4220QDS",
 	"fsl,T1024QDS",
+	"fsl,T1024RDB",
 	"fsl,T1040QDS",
 	"fsl,T1042QDS",
 	"fsl,T1040RDB",

commit 2b6029e2e026771fb4e2add9b38e91f34725813c
Author: Shengzhou Liu <Shengzhou.Liu@freescale.com>
Date:   Thu Apr 9 16:07:43 2015 +0800

    powerpc/fsl-booke: Add T1024 QDS board support
    
    Add support for Freescale T1024/T1023 QorIQ Development System Board.
    
    T1024QDS is a high-performance computing evaluation, development and
    test platform for T1024 QorIQ Power Architecture processor.
    
    Signed-off-by: Shengzhou Liu <Shengzhou.Liu@freescale.com>
    [scottwood: vendor prefix: s/at24/atmel/ and trimmed detailed
     board description with too-long lines]
    Signed-off-by: Scott Wood <scottwood@freescale.com>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
index 9824d2cf79bd..f61f47780486 100644
--- a/arch/powerpc/platforms/85xx/corenet_generic.c
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -150,6 +150,7 @@ static const char * const boards[] __initconst = {
 	"fsl,B4860QDS",
 	"fsl,B4420QDS",
 	"fsl,B4220QDS",
+	"fsl,T1024QDS",
 	"fsl,T1040QDS",
 	"fsl,T1042QDS",
 	"fsl,T1040RDB",

commit 2e6e99666de1005fb2d201320082bd89442b7b14
Author: Shruti Kanetkar <Kanetkar.Shruti@gmail.com>
Date:   Fri Feb 27 09:59:22 2015 -0600

    powerpc/corenet: Enable muxing MDIO buses via FPGA
    
    Signed-off-by: Andy Fleming <afleming@gmail.com>
    Signed-off-by: Shaohui Xie <Shaohui.Xie@freescale.com>
    Signed-off-by: Shruti Kanetkar <Kanetkar.Shruti@gmail.com>
    Signed-off-by: Emil Medve <Emilian.Medve@Freescale.com>
    Signed-off-by: Scott Wood <scottwood@freescale.com>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
index 382058908910..9824d2cf79bd 100644
--- a/arch/powerpc/platforms/85xx/corenet_generic.c
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -90,6 +90,12 @@ static const struct of_device_id of_device_ids[] = {
 	{
 		.compatible	= "mdio-mux-gpio"
 	},
+	{
+		.compatible	= "fsl,fpga-ngpixis"
+	},
+	{
+		.compatible	= "fsl,fpga-qixis"
+	},
 	{
 		.compatible	= "fsl,srio",
 	},

commit a189243cb76217e44838fe11bad8af47ab81c722
Author: Andy Fleming <afleming@gmail.com>
Date:   Fri Feb 27 09:57:55 2015 -0600

    powerpc/corenet: Enable muxing MDIO buses via GPIO
    
    Signed-off-by: Andy Fleming <afleming@gmail.com>
    Signed-off-by: Shaohui Xie <Shaohui.Xie@freescale.com>
    Signed-off-by: Shruti Kanetkar <Kanetkar.Shruti@gmail.com>
    Signed-off-by: Emil Medve <Emilian.Medve@Freescale.com>
    Signed-off-by: Scott Wood <scottwood@freescale.com>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
index 902358d4c832..382058908910 100644
--- a/arch/powerpc/platforms/85xx/corenet_generic.c
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -87,6 +87,9 @@ static const struct of_device_id of_device_ids[] = {
 	{
 		.compatible	= "simple-bus"
 	},
+	{
+		.compatible	= "mdio-mux-gpio"
+	},
 	{
 		.compatible	= "fsl,srio",
 	},

commit 7dea9ec5a039555376af62e718547852117aced1
Author: Igal Liberman <Igal.Liberman@freescale.com>
Date:   Wed Feb 18 16:04:45 2015 +0200

    powerpc/mpc85xx: Add FMan platform support
    
    Get the FMan devices/sub-nodes (MAC, MDIO, etc.) auto-probed
    
    Signed-off-by: Igal Liberman <Igal.Liberman@freescale.com>
    Signed-off-by: Scott Wood <scottwood@freescale.com>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
index 1f309ccb096e..902358d4c832 100644
--- a/arch/powerpc/platforms/85xx/corenet_generic.c
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -108,6 +108,9 @@ static const struct of_device_id of_device_ids[] = {
 	{
 		.compatible	= "fsl,qe",
 	},
+	{
+		.compatible    = "fsl,fman",
+	},
 	/* The following two are for the Freescale hypervisor */
 	{
 		.name		= "hypervisor",

commit 9178ba294b6839eeff1a91bed95515d783f3ee6c
Author: Alexander Graf <agraf@suse.de>
Date:   Mon Oct 13 16:01:09 2014 +0200

    powerpc: Convert power off logic to pm_power_off
    
    The generic Linux framework to power off the machine is a function pointer
    called pm_power_off. The trick about this pointer is that device drivers can
    potentially implement it rather than board files.
    
    Today on powerpc we set pm_power_off to invoke our generic full machine power
    off logic which then calls ppc_md.power_off to invoke machine specific power
    off.
    
    However, when we want to add a power off GPIO via the "gpio-poweroff" driver,
    this card house falls apart. That driver only registers itself if pm_power_off
    is NULL to ensure it doesn't override board specific logic. However, since we
    always set pm_power_off to the generic power off logic (which will just not
    power off the machine if no ppc_md.power_off call is implemented), we can't
    implement power off via the generic GPIO power off driver.
    
    To fix this up, let's get rid of the ppc_md.power_off logic and just always use
    pm_power_off as was intended. Then individual drivers such as the GPIO power off
    driver can implement power off logic via that function pointer.
    
    With this patch set applied and a few patches on top of QEMU that implement a
    power off GPIO on the virt e500 machine, I can successfully turn off my virtual
    machine after halt.
    
    Signed-off-by: Alexander Graf <agraf@suse.de>
    [mpe: Squash into one patch and update changelog based on cover letter]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
index e56b89a792ed..1f309ccb096e 100644
--- a/arch/powerpc/platforms/85xx/corenet_generic.c
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -170,7 +170,7 @@ static int __init corenet_generic_probe(void)
 
 			ppc_md.get_irq = ehv_pic_get_irq;
 			ppc_md.restart = fsl_hv_restart;
-			ppc_md.power_off = fsl_hv_halt;
+			pm_power_off = fsl_hv_halt;
 			ppc_md.halt = fsl_hv_halt;
 #ifdef CONFIG_SMP
 			/*

commit 667680f6841bb5cc239382fea916bf4ab6803842
Author: Priyanka Jain <Priyanka.Jain@freescale.com>
Date:   Fri Sep 5 16:15:00 2014 +0530

    powerpc/fsl-booke: Add initial T1042RDB_PI board support
    
    T1042RDB_PI is Freescale Reference Design Board supporting the T1042
    QorIQ Power Architecture™ processor. T1042 is a reduced personality
    of T1040 SoC without Integrated 8-port Gigabit. The board is designed
    with low power features targeted for Printing Image Market.
    
    T1042RDB_PI is  similar to T1040RDB board with few differences like
    it has video interface, supports T1042 personality only
    
    T1042RDB_PI board Overview
    -----------------------
    - SERDES Connections, 8 lanes supporting:
            - PCI
            - SATA 2.0
    - DDR Controller
            - Supports rates of up to 1600 MHz data-rate
            - Supports one DDR3LP UDIMM
    -IFC/Local Bus
            - NAND flash: 1GB 8-bit NAND flash
            - NOR: 128MB 16-bit NOR Flash
    - Ethernet
            - Two on-board RGMII 10/100/1G ethernet ports.
            - PHY #0 remains powered up during deep-sleep
    - CPLD
    - Clocks
            - System and DDR clock (SYSCLK, “DDRCLK”)
            - SERDES clocks
    - Power Supplies
    - USB
            - Supports two USB 2.0 ports with integrated PHYs
            - Two type A ports with 5V@1.5A per port.
    - SDHC
            - SDHC/SDXC connector
    - SPI
            - On-board 64MB SPI flash
    - I2C
            - Device connected: EEPROM, thermal monitor, VID controller, RTC
    - Other IO
            - Two Serial ports
            - ProfiBus port
    
    Add support for T1042RDB_PI board:
        -add device tree
        -Add entry in corenet_generic.c, as it is similar to other corenet platforms
    
    Signed-off-by: Poonam Aggrwal <poonam.aggrwal@freescale.com>
    Signed-off-by: Prabhakar Kushwaha <prabhakar@freescale.com>
    Signed-off-by: Priyanka Jain <Priyanka.Jain@freescale.com>
    Signed-off-by: Scott Wood <scottwood@freescale.com>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
index cc289783dbfe..e56b89a792ed 100644
--- a/arch/powerpc/platforms/85xx/corenet_generic.c
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -142,6 +142,7 @@ static const char * const boards[] __initconst = {
 	"fsl,T1042QDS",
 	"fsl,T1040RDB",
 	"fsl,T1042RDB",
+	"fsl,T1042RDB_PI",
 	"keymile,kmcoge4",
 	NULL
 };

commit 0babcd1c1489ae31bf0cea34fad24b3f047ad79c
Author: Priyanka Jain <Priyanka.Jain@freescale.com>
Date:   Fri Sep 5 16:14:40 2014 +0530

    powerpc/fsl-booke: Add initial T1040/T1042 RDB board support
    
    T1040/T1042RDB is Freescale Reference Design Board.
    The board can support both T1040/T1042 QorIQ Power Architecture™ processor.
    
    T1040/T1042RDB board Overview
    -----------------------
    - SERDES Connections, 8 lanes supporting:
            - PCI
            - SGMII
            - QSGMII
            - SATA 2.0
    - DDR Controller
            - Supports rates of up to 1600 MHz data-rate
            - Supports one DDR3LP UDIMM
    -IFC/Local Bus
            - NAND flash: 1GB 8-bit NAND flash
            - NOR: 128MB 16-bit NOR Flash
    - Ethernet
            - Two on-board RGMII 10/100/1G ethernet ports.
            - PHY #0 remains powered up during deep-sleep
    - CPLD
    - Clocks
            - System and DDR clock (SYSCLK, “DDRCLK”)
            - SERDES clocks
    - Power Supplies
    - USB
            - Supports two USB 2.0 ports with integrated PHYs
            - Two type A ports with 5V@1.5A per port.
    - SDHC
            - SDHC/SDXC connector
    - SPI
            - On-board 64MB SPI flash
    - I2C
            - Devices connected: EEPROM, thermal monitor, VID controller
    - Other IO
            - Two Serial ports
            - ProfiBus port
    
    Add support for T1040/T1042 RDB board:
        -add device tree
        -add entry in Kconfig to build
        -Add entry in corenet_generic.c, as it is similar to other corenet platforms
    
    Signed-off-by: Priyanka Jain <Priyanka.Jain@freescale.com>
    Signed-off-by: Poonam Aggrwal <poonam.aggrwal@freescale.com>
    Signed-off-by: Prabhakar Kushwaha <prabhakar@freescale.com>
    Signed-off-by: Scott Wood <scottwood@freescale.com>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
index c2adb00228c5..cc289783dbfe 100644
--- a/arch/powerpc/platforms/85xx/corenet_generic.c
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -140,6 +140,8 @@ static const char * const boards[] __initconst = {
 	"fsl,B4220QDS",
 	"fsl,T1040QDS",
 	"fsl,T1042QDS",
+	"fsl,T1040RDB",
+	"fsl,T1042RDB",
 	"keymile,kmcoge4",
 	NULL
 };

commit 84f44cc56c0994df7778bde55c8d5e9aa9fff8f5
Author: Scott Wood <scottwood@freescale.com>
Date:   Fri Aug 8 18:40:45 2014 -0500

    powerpc/fsl-pci: Limit ZONE_DMA32 to 2GiB on 64-bit platforms
    
    FSL PCI cannot directly address the whole lower 4 GiB due to
    conflicts with PCICSRBAR and outbound windows.  By the time
    max_direct_dma_addr is set to the precise limit, it will be too late to
    alter the zone limits, but we should always have at least 2 GiB mapped
    (unless RAM is smaller than that).
    
    Signed-off-by: Scott Wood <scottwood@freescale.com>
    Cc: Shaohui Xie <Shaohui.Xie@freescale.com>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
index d22dd85e50bf..c2adb00228c5 100644
--- a/arch/powerpc/platforms/85xx/corenet_generic.c
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -20,6 +20,7 @@
 #include <asm/time.h>
 #include <asm/machdep.h>
 #include <asm/pci-bridge.h>
+#include <asm/pgtable.h>
 #include <asm/ppc-pci.h>
 #include <mm/mmu_decl.h>
 #include <asm/prom.h>
@@ -67,6 +68,16 @@ void __init corenet_gen_setup_arch(void)
 
 	swiotlb_detect_4g();
 
+#if defined(CONFIG_FSL_PCI) && defined(CONFIG_ZONE_DMA32)
+	/*
+	 * Inbound windows don't cover the full lower 4 GiB
+	 * due to conflicts with PCICSRBAR and outbound windows,
+	 * so limit the DMA32 zone to 2 GiB, to allow consistent
+	 * allocations to succeed.
+	 */
+	limit_zone_pfn(ZONE_DMA32, 1UL << (31 - PAGE_SHIFT));
+#endif
+
 	pr_info("%s board\n", ppc_md.name);
 
 	mpc85xx_qe_init();

commit 78eb9094ca08a40b8f9d3e113a2b88e0b7dbad1d
Author: Shengzhou Liu <Shengzhou.Liu@freescale.com>
Date:   Tue Jul 8 14:52:33 2014 +0800

    powerpc/t2080rdb: Add T2080RDB board support
    
    T2080PCIe-RDB is a Freescale Reference Design Board that hosts T2080 SoC.
    The board feature overview:
    Processor:
     - T2080 SoC integrating four 64-bit dual-threads e6500 cores up to 1.8GHz
    DDR Memory:
     - Single memory controller capable of supporting DDR3 and DDR3-LP devices
     - 72bit 4GB DDR3-LP SODIMM in slot
    Ethernet interfaces:
     - Two 1Gbps RGMII ports on-board
     - Two 10Gbps SFP+ ports on-board
     - Two 10Gbps Base-T ports on-board
    Accelerator:
     - DPAA components consist of FMan, BMan, QMan, PME, DCE and SEC
    IFC/Local Bus
     - NOR:  128MB 16-bit NOR flash
     - NAND: 1GB 8-bit NAND flash
     - CPLD: for system controlling with programable header on-board
    eSPI:
     - 64MB N25Q512 SPI flash
    USB:
     - Two USB2.0 ports with internal PHY (both Type-A)
    PCIe:
     - One PCIe x4 goldfinger(support SR-IOV)
     - One PCIe x4 slot
     - One PCIe x2 end-point device (C293 crypto co-processor)
    SATA:
     - Two SATA 2.0 ports on-board
    SDHC:
     - support a MicroSD/TF card on-board
    I2C:
     - Four I2C controllers.
    UART:
     - Dual 4-pins UART serial ports
    
    Signed-off-by: Shengzhou Liu <Shengzhou.Liu@freescale.com>
    Signed-off-by: Scott Wood <scottwood@freescale.com>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
index 4f22ad1e14ac..d22dd85e50bf 100644
--- a/arch/powerpc/platforms/85xx/corenet_generic.c
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -120,6 +120,7 @@ static const char * const boards[] __initconst = {
 	"fsl,P5020DS",
 	"fsl,P5040DS",
 	"fsl,T2080QDS",
+	"fsl,T2080RDB",
 	"fsl,T2081QDS",
 	"fsl,T4240QDS",
 	"fsl,T4240RDB",

commit cd1154770ba984f4c766cac5ea42c38880080b1d
Author: Laurentiu TUDOR <Laurentiu.Tudor@freescale.com>
Date:   Wed Jun 11 18:13:19 2014 +0300

    powerpc/85xx: drop hypervisor specific board compatibles
    
    They're almost a duplicate of the boards array
    and we can build them at run-time.
    
    Signed-off-by: Laurentiu Tudor <Laurentiu.Tudor@freescale.com>
    Signed-off-by: Scott Wood <scottwood@freescale.com>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
index b2cda69ba1dc..4f22ad1e14ac 100644
--- a/arch/powerpc/platforms/85xx/corenet_generic.c
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -132,31 +132,14 @@ static const char * const boards[] __initconst = {
 	NULL
 };
 
-static const char * const hv_boards[] __initconst = {
-	"fsl,P2041RDB-hv",
-	"fsl,P3041DS-hv",
-	"fsl,OCA4080-hv",
-	"fsl,P4080DS-hv",
-	"fsl,P5020DS-hv",
-	"fsl,P5040DS-hv",
-	"fsl,T2080QDS-hv",
-	"fsl,T2081QDS-hv",
-	"fsl,T4240QDS-hv",
-	"fsl,T4240RDB-hv",
-	"fsl,B4860QDS-hv",
-	"fsl,B4420QDS-hv",
-	"fsl,B4220QDS-hv",
-	"fsl,T1040QDS-hv",
-	"fsl,T1042QDS-hv",
-	NULL
-};
-
 /*
  * Called very early, device-tree isn't unflattened
  */
 static int __init corenet_generic_probe(void)
 {
 	unsigned long root = of_get_flat_dt_root();
+	char hv_compat[24];
+	int i;
 #ifdef CONFIG_SMP
 	extern struct smp_ops_t smp_85xx_ops;
 #endif
@@ -165,21 +148,26 @@ static int __init corenet_generic_probe(void)
 		return 1;
 
 	/* Check if we're running under the Freescale hypervisor */
-	if (of_flat_dt_match(root, hv_boards)) {
-		ppc_md.init_IRQ = ehv_pic_init;
-		ppc_md.get_irq = ehv_pic_get_irq;
-		ppc_md.restart = fsl_hv_restart;
-		ppc_md.power_off = fsl_hv_halt;
-		ppc_md.halt = fsl_hv_halt;
+	for (i = 0; boards[i]; i++) {
+		snprintf(hv_compat, sizeof(hv_compat), "%s-hv", boards[i]);
+		if (of_flat_dt_is_compatible(root, hv_compat)) {
+			ppc_md.init_IRQ = ehv_pic_init;
+
+			ppc_md.get_irq = ehv_pic_get_irq;
+			ppc_md.restart = fsl_hv_restart;
+			ppc_md.power_off = fsl_hv_halt;
+			ppc_md.halt = fsl_hv_halt;
 #ifdef CONFIG_SMP
-		/*
-		 * Disable the timebase sync operations because we can't write
-		 * to the timebase registers under the hypervisor.
-		  */
-		smp_85xx_ops.give_timebase = NULL;
-		smp_85xx_ops.take_timebase = NULL;
+			/*
+			 * Disable the timebase sync operations because we
+			 * can't write to the timebase registers under the
+			 * hypervisor.
+			 */
+			smp_85xx_ops.give_timebase = NULL;
+			smp_85xx_ops.take_timebase = NULL;
 #endif
-		return 1;
+			return 1;
+		}
 	}
 
 	return 0;

commit 4c18be2bf55747c6eb178069dc9f0c32cacbfc09
Author: Shengzhou Liu <Shengzhou.Liu@freescale.com>
Date:   Wed Jun 11 18:10:05 2014 +0800

    powerpc/fsl-booke: Add initial T208x QDS board support
    
    Add support for Freescale T2080/T2081 QDS Development System Board.
    
    The T2080QDS Development System is a high-performance computing,
    evaluation, and development platform that supports T2080 QorIQ
    Power Architecture processor, with following major features:
    
    T2080QDS feature overview:
    Processor:
     - T2080 SoC integrating four 64-bit dual-threads e6500 cores up to 1.8GHz
    Memory:
     - Single memory controller capable of supporting DDR3 and DDR3-LP
     - Dual DIMM slots up 2133MT/s with ECC
    Ethernet interfaces:
     - Two 1Gbps RGMII on-board ports
     - Four 10Gbps XFI on-board cages
     - 1Gbps/2.5Gbps SGMII Riser card
     - 10Gbps XAUI Riser card
    Accelerator:
     - DPAA components consist of FMan, BMan, QMan, PME, DCE and SEC
    SerDes:
     - 16 lanes up to 10.3125GHz
     - Supports Aurora debug, PEX, SATA, SGMII, sRIO, HiGig, XFI and XAUI
    IFC:
     - 128MB NOR Flash, 512MB NAND Flash, PromJet debug port and FPGA
    eSPI:
     - Three SPI flash (16MB N25Q128A + 8MB EN25S64 + 512KB SST25WF040)
    USB:
     - Two USB2.0 ports with internal PHY (one Type-A + one micro Type-AB)
    PCIE:
     - Four PCI Express controllers (two PCIe 2.0 and two PCIe 3.0, SR-IOV)
    SATA:
     - Two SATA 2.0 ports on-board
    SRIO:
     - Two Serial RapidIO 2.0 ports up to 5 GHz
    eSDHC:
     - Supports SD/MMC/eMMC Card
    DMA:
     - Three 8-channels DMA controllers
    I2C:
     - Four I2C controllers.
    UART:
     - Dual 4-pins UART serial ports
    System Logic:
     - QIXIS-II FPGA system controll
    
    T2081QDS board shares the same PCB with T1040QDS with some differences.
    
    Signed-off-by: Shengzhou Liu <Shengzhou.Liu@freescale.com>
    Signed-off-by: Scott Wood <scottwood@freescale.com>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
index 69498c5d0bbd..b2cda69ba1dc 100644
--- a/arch/powerpc/platforms/85xx/corenet_generic.c
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -119,6 +119,8 @@ static const char * const boards[] __initconst = {
 	"fsl,P4080DS",
 	"fsl,P5020DS",
 	"fsl,P5040DS",
+	"fsl,T2080QDS",
+	"fsl,T2081QDS",
 	"fsl,T4240QDS",
 	"fsl,T4240RDB",
 	"fsl,B4860QDS",
@@ -137,6 +139,8 @@ static const char * const hv_boards[] __initconst = {
 	"fsl,P4080DS-hv",
 	"fsl,P5020DS-hv",
 	"fsl,P5040DS-hv",
+	"fsl,T2080QDS-hv",
+	"fsl,T2081QDS-hv",
 	"fsl,T4240QDS-hv",
 	"fsl,T4240RDB-hv",
 	"fsl,B4860QDS-hv",

commit 36a2a09d5770523fa82c31d48c676a5ff77944e5
Author: Chunhe Lan <Chunhe.Lan@freescale.com>
Date:   Tue Jun 3 18:25:14 2014 +0800

    powerpc/85xx: Add T4240RDB board support
    
    T4240RDB board Specification
    ----------------------------
    Memory subsystem:
         6GB DDR3
         128MB NOR flash
         2GB NAND flash
    Ethernet:
         Eight 1G SGMII ports
         Four 10Gbps SFP+ ports
    PCIe:
         Two PCIe slots
    USB:
         Two USB2.0 Type A ports
    SDHC:
         One SD-card port
    SATA:
         One SATA port
    UART:
         Dual RJ45 ports
    
    Signed-off-by: Chunhe Lan <Chunhe.Lan@freescale.com>
    Cc: Scott Wood <scottwood@freescale.com>
    Signed-off-by: Scott Wood <scottwood@freescale.com>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
index 5db1e117fdde..69498c5d0bbd 100644
--- a/arch/powerpc/platforms/85xx/corenet_generic.c
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -120,6 +120,7 @@ static const char * const boards[] __initconst = {
 	"fsl,P5020DS",
 	"fsl,P5040DS",
 	"fsl,T4240QDS",
+	"fsl,T4240RDB",
 	"fsl,B4860QDS",
 	"fsl,B4420QDS",
 	"fsl,B4220QDS",
@@ -137,6 +138,7 @@ static const char * const hv_boards[] __initconst = {
 	"fsl,P5020DS-hv",
 	"fsl,P5040DS-hv",
 	"fsl,T4240QDS-hv",
+	"fsl,T4240RDB-hv",
 	"fsl,B4860QDS-hv",
 	"fsl,B4420QDS-hv",
 	"fsl,B4220QDS-hv",

commit 0c0fc4d3a955c0159a64b5eb66da70927d35513a
Author: Prabhakar Kushwaha <prabhakar@freescale.com>
Date:   Mon Apr 21 17:04:45 2014 +0530

    powerpc/fsl-booke: Add initial T104x_QDS board support
    
    Add support for T104x board in board file t104x_qds.c, It is common for
     both T1040 and T1042 as they share same QDS board.
    
     T1040QDS board Overview
     -----------------------
     - SERDES Connections, 8 lanes supporting:
          — PCI Express: supporting Gen 1 and Gen 2;
          — SGMII
          — QSGMII
          — SATA 2.0
          — Aurora debug with dedicated connectors (T1040 only)
     - DDR Controller
         - Supports rates of up to 1600 MHz data-rate
         - Supports one DDR3LP UDIMM/RDIMMs, of single-, dual- or quad-rank types.
     -IFC/Local Bus
         - NAND flash: 8-bit, async, up to 2GB.
         - NOR: 8-bit or 16-bit, non-multiplexed, up to 512MB
         - GASIC: Simple (minimal) target within Qixis FPGA
         - PromJET rapid memory download support
     - Ethernet
         - Two on-board RGMII 10/100/1G ethernet ports.
         - PHY #0 remains powered up during deep-sleep (T1040 only)
     - QIXIS System Logic FPGA
     - Clocks
         - System and DDR clock (SYSCLK, “DDRCLK”)
         - SERDES clocks
     - Power Supplies
     - Video
         - DIU supports video at up to 1280x1024x32bpp
     - USB
         - Supports two USB 2.0 ports with integrated PHYs
         — Two type A ports with 5V@1.5A per port.
         — Second port can be converted to OTG mini-AB
     - SDHC
         - SDHC port connects directly to an adapter card slot, featuring:
         - Supporting SD slots for: SD, SDHC (1x, 4x, 8x) and/or MMC
         — Supporting eMMC memory devices
     - SPI
        -  On-board support of 3 different devices and sizes
     - Other IO
        - Two Serial ports
        - ProfiBus port
        - Four I2C ports
    
    Add T104xQDS support in Kconfig and Makefile. Also create device tree.
    Following features are currently not implmented.
      - SerDes: Aurora
      - IFC: GASIC, Promjet
      - QIXIS
      - Ethernet
      - DIU
      - power supplies management
      - ProfiBus
    
    Signed-off-by: Priyanka Jain <Priyanka.Jain@freescale.com>
    Signed-off-by: Poonam Aggrwal <poonam.aggrwal@freescale.com>
    Signed-off-by: Prabhakar Kushwaha <prabhakar@freescale.com>
    Signed-off-by: Scott Wood <scottwood@freescale.com>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
index 477c182e4ba5..5db1e117fdde 100644
--- a/arch/powerpc/platforms/85xx/corenet_generic.c
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -123,6 +123,8 @@ static const char * const boards[] __initconst = {
 	"fsl,B4860QDS",
 	"fsl,B4420QDS",
 	"fsl,B4220QDS",
+	"fsl,T1040QDS",
+	"fsl,T1042QDS",
 	"keymile,kmcoge4",
 	NULL
 };
@@ -138,6 +140,8 @@ static const char * const hv_boards[] __initconst = {
 	"fsl,B4860QDS-hv",
 	"fsl,B4420QDS-hv",
 	"fsl,B4220QDS-hv",
+	"fsl,T1040QDS-hv",
+	"fsl,T1042QDS-hv",
 	NULL
 };
 

commit 2b09c6038941b8ba6ee9b3851c7be50a9f3acedf
Author: Martijn de Gouw <martijn.de.gouw@prodrive.nl>
Date:   Tue Apr 15 19:51:46 2014 +0200

    powerpc/85xx: Add OCA4080 board support
    
    OCA4080 overview:
    - 1.466 GHz Freescale QorIQ P4080E Processor
    - 4Gbyte DDR3 on board
    - 8Mbyte Nor flash
    - Serial RapidIO 1.2
    - 1 x 10/100/1000 BASE-T front ethernet
    - 1 x 1000 BASE-BX ethernet on AMC connector
    
    Signed-off-by: Martijn de Gouw <martijn.de.gouw@prodrive.nl>
    [scottwood@freescale.com: minor conflict-related changes]
    Signed-off-by: Scott Wood <scottwood@freescale.com>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
index ceb0dac32ade..477c182e4ba5 100644
--- a/arch/powerpc/platforms/85xx/corenet_generic.c
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -115,6 +115,7 @@ int __init corenet_gen_publish_devices(void)
 static const char * const boards[] __initconst = {
 	"fsl,P2041RDB",
 	"fsl,P3041DS",
+	"fsl,OCA4080",
 	"fsl,P4080DS",
 	"fsl,P5020DS",
 	"fsl,P5040DS",
@@ -129,6 +130,7 @@ static const char * const boards[] __initconst = {
 static const char * const hv_boards[] __initconst = {
 	"fsl,P2041RDB-hv",
 	"fsl,P3041DS-hv",
+	"fsl,OCA4080-hv",
 	"fsl,P4080DS-hv",
 	"fsl,P5020DS-hv",
 	"fsl,P5040DS-hv",

commit 497c8b6096ac49ffa13c4bc2a0f48cb3fbb6ba59
Author: Valentin Longchamp <valentin.longchamp@keymile.com>
Date:   Tue Apr 22 11:30:31 2014 +0200

    powerpc/mpc85xx: add support for Keymile's kmcoge4 board
    
    This patch introduces the support for Keymile's kmcoge4 board which is
    the internal reference design for boards based on Freescale's
    P2040/P2041 SoCs. This internal reference design is named kmp204x.
    
    The peripherals used on this board are:
    - SPI NOR Flash as bootloader medium
    - NAND Flash with a ubi partition
    - 2 PCIe busses (hosts 1 and 3)
    - 3 FMAN Ethernet devices (FMAN1 DTSEC1/2/5)
    - 4 Local Bus windows, with one dedicated to the QRIO reset/power mgmt
      CPLD
    - 2 I2C busses
    - last but not least, the mandatory serial port
    
    The patch also adds a defconfig file for this reference design that is
    necessary because of the lowmem option that must be set higher due to
    the number of PCIe devices with big ioremapped mem ranges on the boad.
    
    Signed-off-by: Valentin Longchamp <valentin.longchamp@keymile.com>
    Signed-off-by: Scott Wood <scottwood@freescale.com>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
index 8e4b1e1a4911..ceb0dac32ade 100644
--- a/arch/powerpc/platforms/85xx/corenet_generic.c
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -67,7 +67,7 @@ void __init corenet_gen_setup_arch(void)
 
 	swiotlb_detect_4g();
 
-	pr_info("%s board from Freescale Semiconductor\n", ppc_md.name);
+	pr_info("%s board\n", ppc_md.name);
 
 	mpc85xx_qe_init();
 }
@@ -122,6 +122,7 @@ static const char * const boards[] __initconst = {
 	"fsl,B4860QDS",
 	"fsl,B4420QDS",
 	"fsl,B4220QDS",
+	"keymile,kmcoge4",
 	NULL
 };
 

commit 48b16180d0d91324e5d2423c6d53d97bbe3dcc14
Author: Wang Dongsheng <dongsheng.wang@freescale.com>
Date:   Thu Mar 20 11:19:37 2014 +0800

    fsl/pci: The new pci suspend/resume implementation
    
    If we do nothing in suspend/resume, some platform PCIe ip-block
    can't guarantee the link back to L0 state from sleep, then, when
    we read the EP device will hang. Only we send pme turnoff message
    in pci controller suspend, and send pme exit message in resume, the
    link state will be normal.
    
    When we send pme turnoff message in pci controller suspend, the
    links will into l2/l3 ready, then, host cannot communicate with
    ep device, but pci-driver will call back EP device to save them
    state. So we need to change platform_driver->suspend/resume to
    syscore->suspend/resume.
    
    So the new suspend/resume implementation, send pme turnoff message
    in suspend, and send pme exit message in resume. And add a PME handler,
    to response PME & message interrupt.
    
    Change platform_driver->suspend/resume to syscore->suspend/resume.
    pci-driver will call back EP device, to save EP state in
    pci_pm_suspend_noirq, so we need to keep the link, until
    pci_pm_suspend_noirq finish.
    
    Signed-off-by: Wang Dongsheng <dongsheng.wang@freescale.com>
    Signed-off-by: Scott Wood <scottwood@freescale.com>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
index a8877c4e10ad..8e4b1e1a4911 100644
--- a/arch/powerpc/platforms/85xx/corenet_generic.c
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -179,6 +179,7 @@ define_machine(corenet_generic) {
 	.init_IRQ		= corenet_gen_pic_init,
 #ifdef CONFIG_PCI
 	.pcibios_fixup_bus	= fsl_pcibios_fixup_bus,
+	.pcibios_fixup_phb      = fsl_pcibios_fixup_phb,
 #endif
 	.get_irq		= mpic_get_coreint_irq,
 	.restart		= fsl_rstcr_restart,

commit 0f5a869600141a0d5575e3190af01a050c081b07
Author: Zhao Qiang <B45475@freescale.com>
Date:   Thu Mar 6 09:39:24 2014 +0800

    Corenet: Add QE platform support for Corenet
    
    There is QE on platform T104x, add support.
    Call funcs qe_ic_init and qe_init if CONFIG_QUICC_ENGINE is defined.
    
    Signed-off-by: Zhao Qiang <B45475@freescale.com>
    [scottwood@freesacle.com: whitespace fix]
    Signed-off-by: Scott Wood <scottwood@freescale.com>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
index fbd871e69754..a8877c4e10ad 100644
--- a/arch/powerpc/platforms/85xx/corenet_generic.c
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -26,11 +26,13 @@
 #include <asm/udbg.h>
 #include <asm/mpic.h>
 #include <asm/ehv_pic.h>
+#include <asm/qe_ic.h>
 
 #include <linux/of_platform.h>
 #include <sysdev/fsl_soc.h>
 #include <sysdev/fsl_pci.h>
 #include "smp.h"
+#include "mpc85xx.h"
 
 void __init corenet_gen_pic_init(void)
 {
@@ -38,6 +40,8 @@ void __init corenet_gen_pic_init(void)
 	unsigned int flags = MPIC_BIG_ENDIAN | MPIC_SINGLE_DEST_CPU |
 		MPIC_NO_RESET;
 
+	struct device_node *np;
+
 	if (ppc_md.get_irq == mpic_get_coreint_irq)
 		flags |= MPIC_ENABLE_COREINT;
 
@@ -45,6 +49,13 @@ void __init corenet_gen_pic_init(void)
 	BUG_ON(mpic == NULL);
 
 	mpic_init(mpic);
+
+	np = of_find_compatible_node(NULL, NULL, "fsl,qe-ic");
+	if (np) {
+		qe_ic_init(np, 0, qe_ic_cascade_low_mpic,
+				qe_ic_cascade_high_mpic);
+		of_node_put(np);
+	}
 }
 
 /*
@@ -57,6 +68,8 @@ void __init corenet_gen_setup_arch(void)
 	swiotlb_detect_4g();
 
 	pr_info("%s board from Freescale Semiconductor\n", ppc_md.name);
+
+	mpc85xx_qe_init();
 }
 
 static const struct of_device_id of_device_ids[] = {
@@ -81,6 +94,9 @@ static const struct of_device_id of_device_ids[] = {
 	{
 		.compatible	= "fsl,qoriq-pcie-v3.0",
 	},
+	{
+		.compatible	= "fsl,qe",
+	},
 	/* The following two are for the Freescale hypervisor */
 	{
 		.name		= "hypervisor",

commit befe7c123ee4546316bb9aa9952c0e2f7c0d9c48
Author: Kevin Hao <haokexin@gmail.com>
Date:   Thu Sep 26 09:42:27 2013 +0800

    powerpc/85xx: rename the corenet_ds.c to corenet_generic.c
    
    This file is also used by some RDB and QDS boards. So the name seems
    not so accurate. Rename it to corenet_generic.c. Also update the
    function names in this file according to the change.
    
    Signed-off-by: Kevin Hao <haokexin@gmail.com>

diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c
new file mode 100644
index 000000000000..fbd871e69754
--- /dev/null
+++ b/arch/powerpc/platforms/85xx/corenet_generic.c
@@ -0,0 +1,182 @@
+/*
+ * Corenet based SoC DS Setup
+ *
+ * Maintained by Kumar Gala (see MAINTAINERS for contact information)
+ *
+ * Copyright 2009-2011 Freescale Semiconductor Inc.
+ *
+ * This program is free software; you can redistribute  it and/or modify it
+ * under  the terms of  the GNU General  Public License as published by the
+ * Free Software Foundation;  either version 2 of the  License, or (at your
+ * option) any later version.
+ */
+
+#include <linux/kernel.h>
+#include <linux/pci.h>
+#include <linux/kdev_t.h>
+#include <linux/delay.h>
+#include <linux/interrupt.h>
+
+#include <asm/time.h>
+#include <asm/machdep.h>
+#include <asm/pci-bridge.h>
+#include <asm/ppc-pci.h>
+#include <mm/mmu_decl.h>
+#include <asm/prom.h>
+#include <asm/udbg.h>
+#include <asm/mpic.h>
+#include <asm/ehv_pic.h>
+
+#include <linux/of_platform.h>
+#include <sysdev/fsl_soc.h>
+#include <sysdev/fsl_pci.h>
+#include "smp.h"
+
+void __init corenet_gen_pic_init(void)
+{
+	struct mpic *mpic;
+	unsigned int flags = MPIC_BIG_ENDIAN | MPIC_SINGLE_DEST_CPU |
+		MPIC_NO_RESET;
+
+	if (ppc_md.get_irq == mpic_get_coreint_irq)
+		flags |= MPIC_ENABLE_COREINT;
+
+	mpic = mpic_alloc(NULL, 0, flags, 0, 512, " OpenPIC  ");
+	BUG_ON(mpic == NULL);
+
+	mpic_init(mpic);
+}
+
+/*
+ * Setup the architecture
+ */
+void __init corenet_gen_setup_arch(void)
+{
+	mpc85xx_smp_init();
+
+	swiotlb_detect_4g();
+
+	pr_info("%s board from Freescale Semiconductor\n", ppc_md.name);
+}
+
+static const struct of_device_id of_device_ids[] = {
+	{
+		.compatible	= "simple-bus"
+	},
+	{
+		.compatible	= "fsl,srio",
+	},
+	{
+		.compatible	= "fsl,p4080-pcie",
+	},
+	{
+		.compatible	= "fsl,qoriq-pcie-v2.2",
+	},
+	{
+		.compatible	= "fsl,qoriq-pcie-v2.3",
+	},
+	{
+		.compatible	= "fsl,qoriq-pcie-v2.4",
+	},
+	{
+		.compatible	= "fsl,qoriq-pcie-v3.0",
+	},
+	/* The following two are for the Freescale hypervisor */
+	{
+		.name		= "hypervisor",
+	},
+	{
+		.name		= "handles",
+	},
+	{}
+};
+
+int __init corenet_gen_publish_devices(void)
+{
+	return of_platform_bus_probe(NULL, of_device_ids, NULL);
+}
+
+static const char * const boards[] __initconst = {
+	"fsl,P2041RDB",
+	"fsl,P3041DS",
+	"fsl,P4080DS",
+	"fsl,P5020DS",
+	"fsl,P5040DS",
+	"fsl,T4240QDS",
+	"fsl,B4860QDS",
+	"fsl,B4420QDS",
+	"fsl,B4220QDS",
+	NULL
+};
+
+static const char * const hv_boards[] __initconst = {
+	"fsl,P2041RDB-hv",
+	"fsl,P3041DS-hv",
+	"fsl,P4080DS-hv",
+	"fsl,P5020DS-hv",
+	"fsl,P5040DS-hv",
+	"fsl,T4240QDS-hv",
+	"fsl,B4860QDS-hv",
+	"fsl,B4420QDS-hv",
+	"fsl,B4220QDS-hv",
+	NULL
+};
+
+/*
+ * Called very early, device-tree isn't unflattened
+ */
+static int __init corenet_generic_probe(void)
+{
+	unsigned long root = of_get_flat_dt_root();
+#ifdef CONFIG_SMP
+	extern struct smp_ops_t smp_85xx_ops;
+#endif
+
+	if (of_flat_dt_match(root, boards))
+		return 1;
+
+	/* Check if we're running under the Freescale hypervisor */
+	if (of_flat_dt_match(root, hv_boards)) {
+		ppc_md.init_IRQ = ehv_pic_init;
+		ppc_md.get_irq = ehv_pic_get_irq;
+		ppc_md.restart = fsl_hv_restart;
+		ppc_md.power_off = fsl_hv_halt;
+		ppc_md.halt = fsl_hv_halt;
+#ifdef CONFIG_SMP
+		/*
+		 * Disable the timebase sync operations because we can't write
+		 * to the timebase registers under the hypervisor.
+		  */
+		smp_85xx_ops.give_timebase = NULL;
+		smp_85xx_ops.take_timebase = NULL;
+#endif
+		return 1;
+	}
+
+	return 0;
+}
+
+define_machine(corenet_generic) {
+	.name			= "CoreNet Generic",
+	.probe			= corenet_generic_probe,
+	.setup_arch		= corenet_gen_setup_arch,
+	.init_IRQ		= corenet_gen_pic_init,
+#ifdef CONFIG_PCI
+	.pcibios_fixup_bus	= fsl_pcibios_fixup_bus,
+#endif
+	.get_irq		= mpic_get_coreint_irq,
+	.restart		= fsl_rstcr_restart,
+	.calibrate_decr		= generic_calibrate_decr,
+	.progress		= udbg_progress,
+#ifdef CONFIG_PPC64
+	.power_save		= book3e_idle,
+#else
+	.power_save		= e500_idle,
+#endif
+};
+
+machine_arch_initcall(corenet_generic, corenet_gen_publish_devices);
+
+#ifdef CONFIG_SWIOTLB
+machine_arch_initcall(corenet_generic, swiotlb_setup_bus_notifier);
+#endif
