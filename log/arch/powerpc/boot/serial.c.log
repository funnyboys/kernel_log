commit 7ade8495dcfd788a76e6877c9ea86f5207369ea4
Author: Michal Simek <michal.simek@xilinx.com>
Date:   Thu May 21 16:55:52 2020 +0000

    powerpc: Remove Xilinx PPC405/PPC440 support
    
    The latest Xilinx design tools called ISE and EDK has been released in
    October 2013. New tool doesn't support any PPC405/PPC440 new designs.
    These platforms are no longer supported and tested.
    
    PowerPC 405/440 port is orphan from 2013 by
    commit cdeb89943bfc ("MAINTAINERS: Fix incorrect status tag") and
    commit 19624236cce1 ("MAINTAINERS: Update Grant's email address and maintainership")
    that's why it is time to remove the support fot these platforms.
    
    Signed-off-by: Michal Simek <michal.simek@xilinx.com>
    Signed-off-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/8c593895e2cb57d232d85ce4d8c3a1aa7f0869cc.1590079968.git.christophe.leroy@csgroup.eu

diff --git a/arch/powerpc/boot/serial.c b/arch/powerpc/boot/serial.c
index 9457863147f9..0bfa7e87e546 100644
--- a/arch/powerpc/boot/serial.c
+++ b/arch/powerpc/boot/serial.c
@@ -132,11 +132,6 @@ int serial_console_init(void)
 	else if (dt_is_compatible(devp, "fsl,mpc5200-psc-uart"))
 		rc = mpc5200_psc_console_init(devp, &serial_cd);
 #endif
-#ifdef CONFIG_XILINX_VIRTEX
-	else if (dt_is_compatible(devp, "xlnx,opb-uartlite-1.00.b") ||
-		 dt_is_compatible(devp, "xlnx,xps-uartlite-1.00.a"))
-		rc = uartlite_console_init(devp, &serial_cd);
-#endif
 #ifdef CONFIG_PPC64_BOOT_WRAPPER
 	else if (dt_is_compatible(devp, "ibm,opal-console-raw"))
 		rc = opal_console_init(devp, &serial_cd);

commit 4ba7f80f42563903b0e26d30175808db7d07e664
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Fri Jul 5 19:01:44 2019 +0900

    powerpc/boot: pass CONFIG options in a simpler and more robust way
    
    Commit 5e9dcb6188a4 ("powerpc/boot: Expose Kconfig symbols to wrapper")
    was wrong, but commit e41b93a6be57 ("powerpc/boot: Fix build failures
    with -j 1") was also wrong.
    
    The correct dependency is:
    
      $(obj)/serial.o: $(obj)/autoconf.h
    
    However, I do not see the reason why we need to copy autoconf.h to
    arch/power/boot/. Nor do I see consistency in the way of passing
    CONFIG options.
    
    decompress.c references CONFIG_KERNEL_GZIP and CONFIG_KERNEL_XZ, which
    are passed via the command line.
    
    serial.c includes autoconf.h to reference a couple of CONFIG options,
    but this is fragile because we often forget to include "autoconf.h"
    from source files.
    
    In fact, it is already broken.
    
    ppc_asm.h references CONFIG_PPC_8xx, but utils.S is not given any way
    to access CONFIG options. So, CONFIG_PPC_8xx is never defined here.
    
    Pass $(LINUXINCLUDE) to make sure CONFIG options are accessible from
    all .c and .S files in arch/powerpc/boot/.
    
    I also removed the -traditional flag to make include/linux/kconfig.h
    work. This flag makes the preprocessor imitate the behavior of the
    pre-standard C compiler, but I do not understand why it is necessary.
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20190705100144.28785-2-yamada.masahiro@socionext.com

diff --git a/arch/powerpc/boot/serial.c b/arch/powerpc/boot/serial.c
index b0491b8c0199..9457863147f9 100644
--- a/arch/powerpc/boot/serial.c
+++ b/arch/powerpc/boot/serial.c
@@ -18,7 +18,6 @@
 #include "stdio.h"
 #include "io.h"
 #include "ops.h"
-#include "autoconf.h"
 
 static int serial_open(void)
 {

commit 9bbc7e4ce47ecefa142fcba55eef7754af1b0213
Author: Oliver O'Halloran <oohall@gmail.com>
Date:   Mon Mar 19 16:14:03 2018 +1100

    powerpc/zImage: Also check for stdout-path
    
    The /chosen/linux,stdout-path is "deprecated" in favour of
    /chosen/stdout-path so we should be checking for both.
    
    Signed-off-by: Oliver O'Halloran <oohall@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

diff --git a/arch/powerpc/boot/serial.c b/arch/powerpc/boot/serial.c
index f045f8494bf9..b0491b8c0199 100644
--- a/arch/powerpc/boot/serial.c
+++ b/arch/powerpc/boot/serial.c
@@ -93,7 +93,8 @@ static void *serial_get_stdout_devp(void)
 	if (devp == NULL)
 		goto err_out;
 
-	if (getprop(devp, "linux,stdout-path", path, MAX_PATH_LEN) > 0) {
+	if (getprop(devp, "linux,stdout-path", path, MAX_PATH_LEN) > 0 ||
+		getprop(devp, "stdout-path", path, MAX_PATH_LEN) > 0) {
 		devp = finddevice(path);
 		if (devp == NULL)
 			goto err_out;

commit 5e9dcb6188a40e604e66dc30fab30c2be89aa1cc
Author: Joel Stanley <joel@jms.id.au>
Date:   Wed Oct 10 09:58:02 2018 +1030

    powerpc/boot: Expose Kconfig symbols to wrapper
    
    Currently the wrapper is built without including anything in
    $(src)/include/, which means there are no CONFIG_ symbols defined.
    This means the platform specific serial drivers were never enabled.
    
    We now copy the definitions into the boot directory, so any C file can
    now include autoconf.h to depend on configuration options.
    
    Fixes: 866bfc75f40e ("powerpc: conditionally compile platform-specific serial drivers")
    Signed-off-by: Joel Stanley <joel@jms.id.au>
    [mpe: Fix to use $(objtree) to find autoconf.h]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

diff --git a/arch/powerpc/boot/serial.c b/arch/powerpc/boot/serial.c
index 48e3743faedf..f045f8494bf9 100644
--- a/arch/powerpc/boot/serial.c
+++ b/arch/powerpc/boot/serial.c
@@ -18,6 +18,7 @@
 #include "stdio.h"
 #include "io.h"
 #include "ops.h"
+#include "autoconf.h"
 
 static int serial_open(void)
 {

commit 30f4bbe0472a9644d79a1624fde7f7ba4e44df68
Author: Mark Greer <mgreer@animalcreek.com>
Date:   Thu Apr 5 18:17:17 2018 -0700

    powerpc/boot: Remove support for Marvell MPSC serial controller
    
    There are no longer any platforms that use Marvell's MPSC serial
    controller so remove its driver.
    
    Signed-off-by: Mark Greer <mgreer@animalcreek.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

diff --git a/arch/powerpc/boot/serial.c b/arch/powerpc/boot/serial.c
index 88955095ec07..48e3743faedf 100644
--- a/arch/powerpc/boot/serial.c
+++ b/arch/powerpc/boot/serial.c
@@ -120,10 +120,6 @@ int serial_console_init(void)
 	if (dt_is_compatible(devp, "ns16550") ||
 	    dt_is_compatible(devp, "pnpPNP,501"))
 		rc = ns16550_console_init(devp, &serial_cd);
-#ifdef CONFIG_EMBEDDED6xx
-	else if (dt_is_compatible(devp, "marvell,mv64360-mpsc"))
-		rc = mpsc_console_init(devp, &serial_cd);
-#endif
 #ifdef CONFIG_CPM
 	else if (dt_is_compatible(devp, "fsl,cpm1-scc-uart") ||
 	         dt_is_compatible(devp, "fsl,cpm1-smc-uart") ||

commit c3bb690dc61282bebc8474429ac941f42747da15
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Wed Nov 8 22:05:29 2017 +1100

    powerpc/boot: Only build CPM code when necessary
    
    As far as I can tell CONFIG_CPM is the right symbol to use to
    conditionally compile the cpm-serial.c code.
    
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

diff --git a/arch/powerpc/boot/serial.c b/arch/powerpc/boot/serial.c
index 6f2b2ecf10bd..88955095ec07 100644
--- a/arch/powerpc/boot/serial.c
+++ b/arch/powerpc/boot/serial.c
@@ -124,11 +124,13 @@ int serial_console_init(void)
 	else if (dt_is_compatible(devp, "marvell,mv64360-mpsc"))
 		rc = mpsc_console_init(devp, &serial_cd);
 #endif
+#ifdef CONFIG_CPM
 	else if (dt_is_compatible(devp, "fsl,cpm1-scc-uart") ||
 	         dt_is_compatible(devp, "fsl,cpm1-smc-uart") ||
 	         dt_is_compatible(devp, "fsl,cpm2-scc-uart") ||
 	         dt_is_compatible(devp, "fsl,cpm2-smc-uart"))
 		rc = cpm_console_init(devp, &serial_cd);
+#endif
 #ifdef CONFIG_PPC_MPC52XX
 	else if (dt_is_compatible(devp, "fsl,mpc5200-psc-uart"))
 		rc = mpc5200_psc_console_init(devp, &serial_cd);

commit f8e8e69cea4934485e2dd3d25005c68d671167d9
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Wed Nov 8 22:05:28 2017 +1100

    powerpc/boot: Only build OPAL code when necessary
    
    Only build the OPAL console code in when necessary. This looks like it
    should use CONFIG_PPC_POWERNV, but because the opal-call.S code is
    64-bit only, we must only build it when we're building the boot
    wrapper 64-bit.
    
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

diff --git a/arch/powerpc/boot/serial.c b/arch/powerpc/boot/serial.c
index 71d062b48c1b..6f2b2ecf10bd 100644
--- a/arch/powerpc/boot/serial.c
+++ b/arch/powerpc/boot/serial.c
@@ -138,8 +138,10 @@ int serial_console_init(void)
 		 dt_is_compatible(devp, "xlnx,xps-uartlite-1.00.a"))
 		rc = uartlite_console_init(devp, &serial_cd);
 #endif
+#ifdef CONFIG_PPC64_BOOT_WRAPPER
 	else if (dt_is_compatible(devp, "ibm,opal-console-raw"))
 		rc = opal_console_init(devp, &serial_cd);
+#endif
 
 	/* Add other serial console driver calls here */
 

commit 3d6bf693d8bc63f2e5eca7373916c4871f8ffd66
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Wed Nov 8 22:05:27 2017 +1100

    powerpc/boot: Only build uartlite if XILINX_VIRTEX=y
    
    The serial code in uartlite.c only matches if we find one of two
    Xilinx (xlnx) nodes in the device tree, there's no need to build or
    link the code on other platforms.
    
    As far as I can tell CONFIG_XILINX_VIRTEX is the appropriate symbol to
    use to conditionally compile the code.
    
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

diff --git a/arch/powerpc/boot/serial.c b/arch/powerpc/boot/serial.c
index 7b5c02b1afd0..71d062b48c1b 100644
--- a/arch/powerpc/boot/serial.c
+++ b/arch/powerpc/boot/serial.c
@@ -133,9 +133,11 @@ int serial_console_init(void)
 	else if (dt_is_compatible(devp, "fsl,mpc5200-psc-uart"))
 		rc = mpc5200_psc_console_init(devp, &serial_cd);
 #endif
+#ifdef CONFIG_XILINX_VIRTEX
 	else if (dt_is_compatible(devp, "xlnx,opb-uartlite-1.00.b") ||
 		 dt_is_compatible(devp, "xlnx,xps-uartlite-1.00.a"))
 		rc = uartlite_console_init(devp, &serial_cd);
+#endif
 	else if (dt_is_compatible(devp, "ibm,opal-console-raw"))
 		rc = opal_console_init(devp, &serial_cd);
 

commit 866bfc75f40e4f8a00d268f73f3a02f572e6c082
Author: Hannes Reinecke <hare@suse.de>
Date:   Tue Jun 27 16:29:51 2017 +0200

    powerpc: conditionally compile platform-specific serial drivers
    
    mpsc.c and mpc52xx-psc.c are platform-specific serial drivers, and
    should be compiled for the respective platforms only.
    
    Signed-off-by: Hannes Reinecke <hare@suse.com>
    Reviewed-by: Torsten Duwe <duwe@suse.de>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

diff --git a/arch/powerpc/boot/serial.c b/arch/powerpc/boot/serial.c
index e04c1e4063ae..7b5c02b1afd0 100644
--- a/arch/powerpc/boot/serial.c
+++ b/arch/powerpc/boot/serial.c
@@ -120,15 +120,19 @@ int serial_console_init(void)
 	if (dt_is_compatible(devp, "ns16550") ||
 	    dt_is_compatible(devp, "pnpPNP,501"))
 		rc = ns16550_console_init(devp, &serial_cd);
+#ifdef CONFIG_EMBEDDED6xx
 	else if (dt_is_compatible(devp, "marvell,mv64360-mpsc"))
 		rc = mpsc_console_init(devp, &serial_cd);
+#endif
 	else if (dt_is_compatible(devp, "fsl,cpm1-scc-uart") ||
 	         dt_is_compatible(devp, "fsl,cpm1-smc-uart") ||
 	         dt_is_compatible(devp, "fsl,cpm2-scc-uart") ||
 	         dt_is_compatible(devp, "fsl,cpm2-smc-uart"))
 		rc = cpm_console_init(devp, &serial_cd);
+#ifdef CONFIG_PPC_MPC52XX
 	else if (dt_is_compatible(devp, "fsl,mpc5200-psc-uart"))
 		rc = mpc5200_psc_console_init(devp, &serial_cd);
+#endif
 	else if (dt_is_compatible(devp, "xlnx,opb-uartlite-1.00.b") ||
 		 dt_is_compatible(devp, "xlnx,xps-uartlite-1.00.a"))
 		rc = uartlite_console_init(devp, &serial_cd);

commit 656ad58ef19e2a763fa5c938b20ae0f6b8d67242
Author: Oliver O'Halloran <oohall@gmail.com>
Date:   Fri Jul 1 00:34:37 2016 +1000

    powerpc/boot: Add OPAL console to epapr wrappers
    
    This patch adds an OPAL console backend to the powerpc boot wrapper so
    that decompression failures inside the wrapper can be reported to the
    user. This is important since it typically indicates data corruption in
    the firmware and other nasty things.
    
    Currently this only works when building a little endian kernel. When
    compiling a 64 bit BE kernel the wrapper is always build 32 bit to be
    compatible with some 32 bit firmwares. BE support will be added at a
    later date. Another limitation of this is that only the "raw" type of
    OPAL console is supported, however machines that provide a hvsi console
    also provide a raw console so this is not an issue in practice.
    
    Actually-written-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Oliver O'Halloran <oohall@gmail.com>
    [mpe: Move #ifdef __powerpc64__ to avoid warnings on 32-bit]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

diff --git a/arch/powerpc/boot/serial.c b/arch/powerpc/boot/serial.c
index 167ee9433de6..e04c1e4063ae 100644
--- a/arch/powerpc/boot/serial.c
+++ b/arch/powerpc/boot/serial.c
@@ -132,6 +132,8 @@ int serial_console_init(void)
 	else if (dt_is_compatible(devp, "xlnx,opb-uartlite-1.00.b") ||
 		 dt_is_compatible(devp, "xlnx,xps-uartlite-1.00.a"))
 		rc = uartlite_console_init(devp, &serial_cd);
+	else if (dt_is_compatible(devp, "ibm,opal-console-raw"))
+		rc = opal_console_init(devp, &serial_cd);
 
 	/* Add other serial console driver calls here */
 

commit 4b4b13d5fec8a82ed2780c487e49cfc4321a8c14
Author: Simon Kagstrom <simon.kagstrom@netinsight.net>
Date:   Tue Oct 28 12:19:00 2014 +0100

    powerpc/boot: Parse chosen/cmdline-timeout parameter
    
    On some platforms a 5 second timeout during boot might be quite long, so
    make it configurable. Run the loop at least once to let the user stop
    the boot by holding a key pressed. If the timeout is set to 0, don't
    wait for input, which can be used as a workaround if the boot hangs on
    random data coming in on the serial port.
    
    Signed-off-by: Simon Kagstrom <simon.kagstrom@netinsight.net>
    [mpe: Changelog wording & whitespace]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

diff --git a/arch/powerpc/boot/serial.c b/arch/powerpc/boot/serial.c
index f2156f07571f..167ee9433de6 100644
--- a/arch/powerpc/boot/serial.c
+++ b/arch/powerpc/boot/serial.c
@@ -33,7 +33,7 @@ static void serial_write(const char *buf, int len)
 		scdp->putc(*buf++);
 }
 
-static void serial_edit_cmdline(char *buf, int len)
+static void serial_edit_cmdline(char *buf, int len, unsigned int timeout)
 {
 	int timer = 0, count;
 	char ch, *cp;
@@ -44,7 +44,7 @@ static void serial_edit_cmdline(char *buf, int len)
 	cp = &buf[count];
 	count++;
 
-	while (timer++ < 5*1000) {
+	do {
 		if (scdp->tstc()) {
 			while (((ch = scdp->getc()) != '\n') && (ch != '\r')) {
 				/* Test for backspace/delete */
@@ -70,7 +70,7 @@ static void serial_edit_cmdline(char *buf, int len)
 			break;  /* Exit 'timer' loop */
 		}
 		udelay(1000);  /* 1 msec */
-	}
+	} while (timer++ < timeout);
 	*cp = 0;
 }
 

commit 8f23735d8f8cfd4d46e3aa336690f52b8b5d3c75
Author: Gerhard Pircher <gerhard_pircher@gmx.net>
Date:   Tue Feb 10 12:26:11 2009 +0000

    powerpc/amigaone: Bootwrapper and serial console support for AmigaOne
    
    This adds the bootwrapper for the cuImage target and a compatible property
    check for "pnpPNP,501" to the generic serial console support code.
    The default link address for the cuImage target is set to 0x800000. This
    allows to boot the kernel with AmigaOS4's second level bootloader, which
    always loads a uImage at 0x500000.
    
    Signed-off-by: Gerhard Pircher <gerhard_pircher@gmx.net>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>

diff --git a/arch/powerpc/boot/serial.c b/arch/powerpc/boot/serial.c
index 8b3607cb53fb..f2156f07571f 100644
--- a/arch/powerpc/boot/serial.c
+++ b/arch/powerpc/boot/serial.c
@@ -117,7 +117,8 @@ int serial_console_init(void)
 	if (devp == NULL)
 		goto err_out;
 
-	if (dt_is_compatible(devp, "ns16550"))
+	if (dt_is_compatible(devp, "ns16550") ||
+	    dt_is_compatible(devp, "pnpPNP,501"))
 		rc = ns16550_console_init(devp, &serial_cd);
 	else if (dt_is_compatible(devp, "marvell,mv64360-mpsc"))
 		rc = mpsc_console_init(devp, &serial_cd);

commit a1810b44c2d52392cd63e17fc208783cf6be6215
Author: Mark A. Greer <mgreer@mvista.com>
Date:   Tue Apr 8 08:09:03 2008 +1000

    [POWERPC] mv64x60: Fix FDT compatible names: mv64x60 => mv64360
    
    Compatible names should refer to a specific version of the hardware,
    without wildcards.  Change each instance of mv64x60 to mv64360, which
    is the oldest version we currently support.
    
    Signed-off-by: Mark A. Greer <mgreer@mvista.com>
    Signed-off-by: Dale Farnsworth <dale@farnsworth.org>
    Signed-off-by: Paul Mackerras <paulus@samba.org>

diff --git a/arch/powerpc/boot/serial.c b/arch/powerpc/boot/serial.c
index 9960421eb6b9..8b3607cb53fb 100644
--- a/arch/powerpc/boot/serial.c
+++ b/arch/powerpc/boot/serial.c
@@ -119,7 +119,7 @@ int serial_console_init(void)
 
 	if (dt_is_compatible(devp, "ns16550"))
 		rc = ns16550_console_init(devp, &serial_cd);
-	else if (dt_is_compatible(devp, "marvell,mpsc"))
+	else if (dt_is_compatible(devp, "marvell,mv64360-mpsc"))
 		rc = mpsc_console_init(devp, &serial_cd);
 	else if (dt_is_compatible(devp, "fsl,cpm1-scc-uart") ||
 	         dt_is_compatible(devp, "fsl,cpm1-smc-uart") ||

commit 24ce6bc4a2b75509b29372f1e5e7e0fe51d98e66
Author: Grant Likely <grant.likely@secretlab.ca>
Date:   Thu Jan 24 22:25:31 2008 -0700

    [POWERPC] mpc5200: make dts files conform to generic names recommended practice
    
    Modify mpc5200 dts files to match Open Firmware's Generic Names recommended
    practice.
    
    Signed-off-by: Grant Likely <grant.likely@secretlab.ca>

diff --git a/arch/powerpc/boot/serial.c b/arch/powerpc/boot/serial.c
index b6c68ef46809..9960421eb6b9 100644
--- a/arch/powerpc/boot/serial.c
+++ b/arch/powerpc/boot/serial.c
@@ -126,7 +126,7 @@ int serial_console_init(void)
 	         dt_is_compatible(devp, "fsl,cpm2-scc-uart") ||
 	         dt_is_compatible(devp, "fsl,cpm2-smc-uart"))
 		rc = cpm_console_init(devp, &serial_cd);
-	else if (dt_is_compatible(devp, "mpc5200-psc-uart"))
+	else if (dt_is_compatible(devp, "fsl,mpc5200-psc-uart"))
 		rc = mpc5200_psc_console_init(devp, &serial_cd);
 	else if (dt_is_compatible(devp, "xlnx,opb-uartlite-1.00.b") ||
 		 dt_is_compatible(devp, "xlnx,xps-uartlite-1.00.a"))

commit c35a8fb2f2467c93fe402b1d4b1e124341d0da13
Author: Stephen Neuendorffer <stephen.neuendorffer@xilinx.com>
Date:   Wed Jan 9 06:35:08 2008 +1100

    [POWERPC] Xilinx: updated device tree compatibility to match uboot bsp generator.
    
    Missed this one in the boot loader before.
    
    Signed-off-by: Stephen Neuendorffer <stephen.neuendorffer@xilinx.com>
    Signed-off-by: Grant Likely <grant.likely@secretlab.ca>

diff --git a/arch/powerpc/boot/serial.c b/arch/powerpc/boot/serial.c
index cafeece20ac7..b6c68ef46809 100644
--- a/arch/powerpc/boot/serial.c
+++ b/arch/powerpc/boot/serial.c
@@ -128,7 +128,8 @@ int serial_console_init(void)
 		rc = cpm_console_init(devp, &serial_cd);
 	else if (dt_is_compatible(devp, "mpc5200-psc-uart"))
 		rc = mpc5200_psc_console_init(devp, &serial_cd);
-	else if (dt_is_compatible(devp, "xilinx,uartlite"))
+	else if (dt_is_compatible(devp, "xlnx,opb-uartlite-1.00.b") ||
+		 dt_is_compatible(devp, "xlnx,xps-uartlite-1.00.a"))
 		rc = uartlite_console_init(devp, &serial_cd);
 
 	/* Add other serial console driver calls here */

commit 7ddc5f978b16c024b6c1fcecbda6815d3d3222ef
Author: Grant Likely <grant.likely@secretlab.ca>
Date:   Tue Oct 2 12:15:13 2007 +1000

    [POWERPC] Virtex: Add uartlite bootwrapper driver
    
    Allows the bootwrapper to use the uartlite device for console output.
    
    Signed-off-by: Grant Likely <grant.likely@secretlab.ca>
    Signed-off-by: Josh Boyer <jwboyer@linux.vnet.ibm.com>

diff --git a/arch/powerpc/boot/serial.c b/arch/powerpc/boot/serial.c
index 95e08e4ddcd2..cafeece20ac7 100644
--- a/arch/powerpc/boot/serial.c
+++ b/arch/powerpc/boot/serial.c
@@ -128,6 +128,8 @@ int serial_console_init(void)
 		rc = cpm_console_init(devp, &serial_cd);
 	else if (dt_is_compatible(devp, "mpc5200-psc-uart"))
 		rc = mpc5200_psc_console_init(devp, &serial_cd);
+	else if (dt_is_compatible(devp, "xilinx,uartlite"))
+		rc = uartlite_console_init(devp, &serial_cd);
 
 	/* Add other serial console driver calls here */
 

commit 85498ae87c7d789de613b7e21bd539577142c3cb
Author: Grant Likely <grant.likely@secretlab.ca>
Date:   Sat Sep 1 03:34:37 2007 +1000

    [POWERPC] mpc5200: Add cuimage support for mpc5200 boards
    
    Signed-off-by: Grant Likely <grant.likely@secretlab.ca>
    Acked-by: David Gibson <david@gibson.dropbear.id.au>
    Signed-off-by: Paul Mackerras <paulus@samba.org>

diff --git a/arch/powerpc/boot/serial.c b/arch/powerpc/boot/serial.c
index d47f8e0b4b81..95e08e4ddcd2 100644
--- a/arch/powerpc/boot/serial.c
+++ b/arch/powerpc/boot/serial.c
@@ -126,6 +126,8 @@ int serial_console_init(void)
 	         dt_is_compatible(devp, "fsl,cpm2-scc-uart") ||
 	         dt_is_compatible(devp, "fsl,cpm2-smc-uart"))
 		rc = cpm_console_init(devp, &serial_cd);
+	else if (dt_is_compatible(devp, "mpc5200-psc-uart"))
+		rc = mpc5200_psc_console_init(devp, &serial_cd);
 
 	/* Add other serial console driver calls here */
 

commit d0f53fafc016b3f4f20f63ecf52f6df8774bcb3c
Author: Scott Wood <scottwood@freescale.com>
Date:   Tue Aug 21 03:39:57 2007 +1000

    [POWERPC] bootwrapper: Add CPM serial driver
    
    This serial port is used on all 8xx, many 82xx, and some 85xx chips.
    
    The driver requires that the port has already been set up by the firmware
    and/or platform code.
    
    Signed-off-by: Scott Wood <scottwood@freescale.com>
    Acked-by: David Gibson <david@gibson.dropbear.id.au>
    Signed-off-by: Paul Mackerras <paulus@samba.org>

diff --git a/arch/powerpc/boot/serial.c b/arch/powerpc/boot/serial.c
index 944f0ee5bc0f..d47f8e0b4b81 100644
--- a/arch/powerpc/boot/serial.c
+++ b/arch/powerpc/boot/serial.c
@@ -121,6 +121,11 @@ int serial_console_init(void)
 		rc = ns16550_console_init(devp, &serial_cd);
 	else if (dt_is_compatible(devp, "marvell,mpsc"))
 		rc = mpsc_console_init(devp, &serial_cd);
+	else if (dt_is_compatible(devp, "fsl,cpm1-scc-uart") ||
+	         dt_is_compatible(devp, "fsl,cpm1-smc-uart") ||
+	         dt_is_compatible(devp, "fsl,cpm2-scc-uart") ||
+	         dt_is_compatible(devp, "fsl,cpm2-smc-uart"))
+		rc = cpm_console_init(devp, &serial_cd);
 
 	/* Add other serial console driver calls here */
 

commit 3ee9b7abafc36a9377af6f036f50c3450954884c
Author: Scott Wood <scottwood@freescale.com>
Date:   Tue Aug 21 03:39:55 2007 +1000

    [POWERPC] bootwrapper: Declare udelay() in ops.h
    
    Declarations in various users are removed.
    
    Signed-off-by: Scott Wood <scottwood@freescale.com>
    Signed-off-by: Paul Mackerras <paulus@samba.org>

diff --git a/arch/powerpc/boot/serial.c b/arch/powerpc/boot/serial.c
index 3ce7f651ab34..944f0ee5bc0f 100644
--- a/arch/powerpc/boot/serial.c
+++ b/arch/powerpc/boot/serial.c
@@ -19,8 +19,6 @@
 #include "io.h"
 #include "ops.h"
 
-extern void udelay(long delay);
-
 static int serial_open(void)
 {
 	struct serial_console_data *scdp = console_ops.data;

commit dc4f397d6e385c4ea0fe9732df911a86f1a78c9a
Author: Scott Wood <scottwood@freescale.com>
Date:   Tue Aug 21 03:39:54 2007 +1000

    [POWERPC] bootwrapper: serial_console_init() fixes
    
    1. Search the entire compatible list for serial devices.
    
    The serial code previously did a simple strcmp on the compatible
    node; this fails when the match string is not the first compatible
    listed.  Use dt_is_compatible() instead.
    
    2. Don't call serial_edit_cmdline if getc isn't defined.
    
    Signed-off-by: Scott Wood <scottwood@freescale.com>
    Acked-by: David Gibson <david@gibson.dropbear.id.au>
    Signed-off-by: Paul Mackerras <paulus@samba.org>

diff --git a/arch/powerpc/boot/serial.c b/arch/powerpc/boot/serial.c
index eaa0d3ae3518..3ce7f651ab34 100644
--- a/arch/powerpc/boot/serial.c
+++ b/arch/powerpc/boot/serial.c
@@ -114,18 +114,14 @@ int serial_console_init(void)
 {
 	void *devp;
 	int rc = -1;
-	char compat[MAX_PROP_LEN];
 
 	devp = serial_get_stdout_devp();
 	if (devp == NULL)
 		goto err_out;
 
-	if (getprop(devp, "compatible", compat, sizeof(compat)) < 0)
-		goto err_out;
-
-	if (!strcmp(compat, "ns16550"))
+	if (dt_is_compatible(devp, "ns16550"))
 		rc = ns16550_console_init(devp, &serial_cd);
-	else if (!strcmp(compat, "marvell,mpsc"))
+	else if (dt_is_compatible(devp, "marvell,mpsc"))
 		rc = mpsc_console_init(devp, &serial_cd);
 
 	/* Add other serial console driver calls here */
@@ -133,10 +129,12 @@ int serial_console_init(void)
 	if (!rc) {
 		console_ops.open = serial_open;
 		console_ops.write = serial_write;
-		console_ops.edit_cmdline = serial_edit_cmdline;
 		console_ops.close = serial_close;
 		console_ops.data = &serial_cd;
 
+		if (serial_cd.getc)
+			console_ops.edit_cmdline = serial_edit_cmdline;
+
 		return 0;
 	}
 err_out:

commit b96fbb6e1eb81bb21a8c3462773a0056e12de427
Author: Geoff Levand <geoffrey.levand@am.sony.com>
Date:   Sat Jun 16 08:06:40 2007 +1000

    [POWERPC] Fix constantness of bootwrapper arg
    
    Fixes the constantness of the powerpc bootwrapper's console_ops.write
    routine.  Allows printing of constant strings.
    
    Signed-off-by: Geoff Levand <geoffrey.levand@am.sony.com>
    Signed-off-by: Paul Mackerras <paulus@samba.org>

diff --git a/arch/powerpc/boot/serial.c b/arch/powerpc/boot/serial.c
index 7fd32330a9a5..eaa0d3ae3518 100644
--- a/arch/powerpc/boot/serial.c
+++ b/arch/powerpc/boot/serial.c
@@ -27,7 +27,7 @@ static int serial_open(void)
 	return scdp->open();
 }
 
-static void serial_write(char *buf, int len)
+static void serial_write(const char *buf, int len)
 {
 	struct serial_console_data *scdp = console_ops.data;
 

commit e12deb840ceed7051ab4799ae71b675a83c58c7c
Author: Mark A. Greer <mgreer@mvista.com>
Date:   Sat May 12 10:54:31 2007 +1000

    [POWERPC] Add bootwrapper support for Marvell MPSC
    
    The bootwrapper requires a serial driver to allow cmdline editing
    and information reporting on the console.  This driver is required
    by platforms that boot a zImage and use the MPSC for the console.
    
    Signed-off-by: Mark A. Greer <mgreer@mvista.com>
    Signed-off-by: Paul Mackerras <paulus@samba.org>

diff --git a/arch/powerpc/boot/serial.c b/arch/powerpc/boot/serial.c
index e8de4cf59be7..7fd32330a9a5 100644
--- a/arch/powerpc/boot/serial.c
+++ b/arch/powerpc/boot/serial.c
@@ -125,6 +125,8 @@ int serial_console_init(void)
 
 	if (!strcmp(compat, "ns16550"))
 		rc = ns16550_console_init(devp, &serial_cd);
+	else if (!strcmp(compat, "marvell,mpsc"))
+		rc = mpsc_console_init(devp, &serial_cd);
 
 	/* Add other serial console driver calls here */
 

commit 0c176fa80fdfa9b4e0753e37223b056994c818d2
Author: Mark A. Greer <mgreer@mvista.com>
Date:   Mon Oct 16 13:52:09 2006 -0700

    [POWERPC] Add non-OF serial console support
    
    Add serial console support for non-OF systems.  There is a generic serial
    console layer which calls a serial console driver.  Included is the serial
    console driver for the ns16550 class of uarts.  Necessary support routines
    are added as well.
    
    Signed-off-by: Mark A. Greer <mgreer@mvista.com>
    Signed-off-by: Paul Mackerras <paulus@samba.org>

diff --git a/arch/powerpc/boot/serial.c b/arch/powerpc/boot/serial.c
new file mode 100644
index 000000000000..e8de4cf59be7
--- /dev/null
+++ b/arch/powerpc/boot/serial.c
@@ -0,0 +1,142 @@
+/*
+ * Generic serial console support
+ *
+ * Author: Mark A. Greer <mgreer@mvista.com>
+ *
+ * Code in serial_edit_cmdline() copied from <file:arch/ppc/boot/simple/misc.c>
+ * and was written by Matt Porter <mporter@kernel.crashing.org>.
+ *
+ * 2001,2006 (c) MontaVista Software, Inc.  This file is licensed under
+ * the terms of the GNU General Public License version 2.  This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <stdarg.h>
+#include <stddef.h>
+#include "types.h"
+#include "string.h"
+#include "stdio.h"
+#include "io.h"
+#include "ops.h"
+
+extern void udelay(long delay);
+
+static int serial_open(void)
+{
+	struct serial_console_data *scdp = console_ops.data;
+	return scdp->open();
+}
+
+static void serial_write(char *buf, int len)
+{
+	struct serial_console_data *scdp = console_ops.data;
+
+	while (*buf != '\0')
+		scdp->putc(*buf++);
+}
+
+static void serial_edit_cmdline(char *buf, int len)
+{
+	int timer = 0, count;
+	char ch, *cp;
+	struct serial_console_data *scdp = console_ops.data;
+
+	cp = buf;
+	count = strlen(buf);
+	cp = &buf[count];
+	count++;
+
+	while (timer++ < 5*1000) {
+		if (scdp->tstc()) {
+			while (((ch = scdp->getc()) != '\n') && (ch != '\r')) {
+				/* Test for backspace/delete */
+				if ((ch == '\b') || (ch == '\177')) {
+					if (cp != buf) {
+						cp--;
+						count--;
+						printf("\b \b");
+					}
+				/* Test for ^x/^u (and wipe the line) */
+				} else if ((ch == '\030') || (ch == '\025')) {
+					while (cp != buf) {
+						cp--;
+						count--;
+						printf("\b \b");
+					}
+				} else if (count < len) {
+						*cp++ = ch;
+						count++;
+						scdp->putc(ch);
+				}
+			}
+			break;  /* Exit 'timer' loop */
+		}
+		udelay(1000);  /* 1 msec */
+	}
+	*cp = 0;
+}
+
+static void serial_close(void)
+{
+	struct serial_console_data *scdp = console_ops.data;
+
+	if (scdp->close)
+		scdp->close();
+}
+
+static void *serial_get_stdout_devp(void)
+{
+	void *devp;
+	char devtype[MAX_PROP_LEN];
+	char path[MAX_PATH_LEN];
+
+	devp = finddevice("/chosen");
+	if (devp == NULL)
+		goto err_out;
+
+	if (getprop(devp, "linux,stdout-path", path, MAX_PATH_LEN) > 0) {
+		devp = finddevice(path);
+		if (devp == NULL)
+			goto err_out;
+
+		if ((getprop(devp, "device_type", devtype, sizeof(devtype)) > 0)
+				&& !strcmp(devtype, "serial"))
+			return devp;
+	}
+err_out:
+	return NULL;
+}
+
+static struct serial_console_data serial_cd;
+
+/* Node's "compatible" property determines which serial driver to use */
+int serial_console_init(void)
+{
+	void *devp;
+	int rc = -1;
+	char compat[MAX_PROP_LEN];
+
+	devp = serial_get_stdout_devp();
+	if (devp == NULL)
+		goto err_out;
+
+	if (getprop(devp, "compatible", compat, sizeof(compat)) < 0)
+		goto err_out;
+
+	if (!strcmp(compat, "ns16550"))
+		rc = ns16550_console_init(devp, &serial_cd);
+
+	/* Add other serial console driver calls here */
+
+	if (!rc) {
+		console_ops.open = serial_open;
+		console_ops.write = serial_write;
+		console_ops.edit_cmdline = serial_edit_cmdline;
+		console_ops.close = serial_close;
+		console_ops.data = &serial_cd;
+
+		return 0;
+	}
+err_out:
+	return -1;
+}
