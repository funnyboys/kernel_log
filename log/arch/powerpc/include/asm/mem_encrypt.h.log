commit 2efbc58f157a39ad9e9199b92d9c47736023a2fe
Author: Anshuman Khandual <khandual@linux.vnet.ibm.com>
Date:   Mon Aug 19 23:13:24 2019 -0300

    powerpc/pseries/svm: Force SWIOTLB for secure guests
    
    SWIOTLB checks range of incoming CPU addresses to be bounced and sees if
    the device can access it through its DMA window without requiring bouncing.
    In such cases it just chooses to skip bouncing. But for cases like secure
    guests on powerpc platform all addresses need to be bounced into the shared
    pool of memory because the host cannot access it otherwise. Hence the need
    to do the bouncing is not related to device's DMA window and use of bounce
    buffers is forced by setting swiotlb_force.
    
    Also, connect the shared memory conversion functions into the
    ARCH_HAS_MEM_ENCRYPT hooks and call swiotlb_update_mem_attributes() to
    convert SWIOTLB's memory pool to shared memory.
    
    Signed-off-by: Anshuman Khandual <khandual@linux.vnet.ibm.com>
    [ bauerman: Use ARCH_HAS_MEM_ENCRYPT hooks to share swiotlb memory pool. ]
    Signed-off-by: Thiago Jung Bauermann <bauerman@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20190820021326.6884-15-bauerman@linux.ibm.com

diff --git a/arch/powerpc/include/asm/mem_encrypt.h b/arch/powerpc/include/asm/mem_encrypt.h
new file mode 100644
index 000000000000..ba9dab07c1be
--- /dev/null
+++ b/arch/powerpc/include/asm/mem_encrypt.h
@@ -0,0 +1,26 @@
+/* SPDX-License-Identifier: GPL-2.0+ */
+/*
+ * SVM helper functions
+ *
+ * Copyright 2018 IBM Corporation
+ */
+
+#ifndef _ASM_POWERPC_MEM_ENCRYPT_H
+#define _ASM_POWERPC_MEM_ENCRYPT_H
+
+#include <asm/svm.h>
+
+static inline bool mem_encrypt_active(void)
+{
+	return is_secure_guest();
+}
+
+static inline bool force_dma_unencrypted(struct device *dev)
+{
+	return is_secure_guest();
+}
+
+int set_memory_encrypted(unsigned long addr, int numpages);
+int set_memory_decrypted(unsigned long addr, int numpages);
+
+#endif /* _ASM_POWERPC_MEM_ENCRYPT_H */
