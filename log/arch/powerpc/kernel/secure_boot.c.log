commit 2702809a4a1ab414d75c00936cda70ea77c8234e
Author: Nayna Jain <nayna@linux.ibm.com>
Date:   Tue Nov 5 17:02:07 2019 -0600

    powerpc: Detect the trusted boot state of the system
    
    While secure boot permits only properly verified signed kernels to be
    booted, trusted boot calculates the file hash of the kernel image and
    stores the measurement prior to boot, that can be subsequently
    compared against good known values via attestation services.
    
    This patch reads the trusted boot state of a PowerNV system. The state
    is used to conditionally enable additional measurement rules in the
    IMA arch-specific policies.
    
    Signed-off-by: Nayna Jain <nayna@linux.ibm.com>
    Signed-off-by: Eric Richter <erichte@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/e9eeee6b-b9bf-1e41-2954-61dbd6fbfbcf@linux.ibm.com

diff --git a/arch/powerpc/kernel/secure_boot.c b/arch/powerpc/kernel/secure_boot.c
index 583c2c4edaf0..4b982324d368 100644
--- a/arch/powerpc/kernel/secure_boot.c
+++ b/arch/powerpc/kernel/secure_boot.c
@@ -33,3 +33,18 @@ bool is_ppc_secureboot_enabled(void)
 
 	return enabled;
 }
+
+bool is_ppc_trustedboot_enabled(void)
+{
+	struct device_node *node;
+	bool enabled = false;
+
+	node = get_ppc_fw_sb_node();
+	enabled = of_property_read_bool(node, "trusted-enabled");
+
+	of_node_put(node);
+
+	pr_info("Trusted boot mode %s\n", enabled ? "enabled" : "disabled");
+
+	return enabled;
+}

commit 1a8916ee3ac29054322cdac687d36e1b5894d272
Author: Nayna Jain <nayna@linux.ibm.com>
Date:   Tue Nov 5 17:00:22 2019 -0600

    powerpc: Detect the secure boot mode of the system
    
    This patch defines a function to detect the secure boot state of a
    PowerNV system.
    
    The PPC_SECURE_BOOT config represents the base enablement of secure
    boot for powerpc.
    
    Signed-off-by: Nayna Jain <nayna@linux.ibm.com>
    Signed-off-by: Eric Richter <erichte@linux.ibm.com>
    [mpe: Fold in change from Nayna to add "ibm,secureboot" to ids]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/46b003b9-3225-6bf7-9101-ed6580bb748c@linux.ibm.com

diff --git a/arch/powerpc/kernel/secure_boot.c b/arch/powerpc/kernel/secure_boot.c
new file mode 100644
index 000000000000..583c2c4edaf0
--- /dev/null
+++ b/arch/powerpc/kernel/secure_boot.c
@@ -0,0 +1,35 @@
+// SPDX-License-Identifier: GPL-2.0
+/*
+ * Copyright (C) 2019 IBM Corporation
+ * Author: Nayna Jain
+ */
+#include <linux/types.h>
+#include <linux/of.h>
+#include <asm/secure_boot.h>
+
+static struct device_node *get_ppc_fw_sb_node(void)
+{
+	static const struct of_device_id ids[] = {
+		{ .compatible = "ibm,secureboot", },
+		{ .compatible = "ibm,secureboot-v1", },
+		{ .compatible = "ibm,secureboot-v2", },
+		{},
+	};
+
+	return of_find_matching_node(NULL, ids);
+}
+
+bool is_ppc_secureboot_enabled(void)
+{
+	struct device_node *node;
+	bool enabled = false;
+
+	node = get_ppc_fw_sb_node();
+	enabled = of_property_read_bool(node, "os-secureboot-enforcing");
+
+	of_node_put(node);
+
+	pr_info("Secure boot mode %s\n", enabled ? "enabled" : "disabled");
+
+	return enabled;
+}
