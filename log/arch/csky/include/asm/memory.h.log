commit f136008f31e91060d6b6e6e031cb2c827448e280
Author: Guo Ren <guoren@linux.alibaba.com>
Date:   Sun Dec 1 22:34:19 2019 +0800

    csky: Separate fixaddr_init from highmem
    
    After fixaddr_init is separated from highmem, we could use tcm
    without highmem selected. (610 (abiv1) don't support highmem,
    but it could use tcm now.)
    
    Signed-off-by: Guo Ren <guoren@linux.alibaba.com>

diff --git a/arch/csky/include/asm/memory.h b/arch/csky/include/asm/memory.h
index cdffbd0a500b..a65c6759f537 100644
--- a/arch/csky/include/asm/memory.h
+++ b/arch/csky/include/asm/memory.h
@@ -9,6 +9,9 @@
 #include <linux/sizes.h>
 
 #define FIXADDR_TOP	_AC(0xffffc000, UL)
+#define PKMAP_BASE	_AC(0xff800000, UL)
+#define VMALLOC_START	_AC(0xc0008000, UL)
+#define VMALLOC_END	(PKMAP_BASE - (PAGE_SIZE * 2))
 
 #ifdef CONFIG_HAVE_TCM
 #ifdef CONFIG_HAVE_DTCM

commit f525bb2c9e7cf1e3c43ab57704c9e1c836d30b34
Author: Guo Ren <guoren@linux.alibaba.com>
Date:   Wed Nov 27 08:44:33 2019 +0800

    csky: Tightly-Coupled Memory or Sram support
    
    The implementation are not only used by TCM but also used by sram on
    SOC bus. It follow existed linux tcm software interface, so that old
    tcm application codes could be re-used directly.
    
    Software interface list in asm/tcm.h:
     - Variables/Const:     __tcmdata, __tcmconst
     - Functions:           __tcmfunc, __tcmlocalfunc
     - Malloc/Free:         tcm_alloc, tcm_free
    
    In linux menuconfig:
     - Choose a TCM contain instrctions + data or separated in ITCM/DTCM.
     - Determine TCM_BASE (DTCM_BASE) in phyiscal address.
     - Determine size of TCM or ITCM(DTCM) in page counts.
    
    Here is hello tcm example from Documentation/arm/tcm.rst which could
    be directly used:
    
    /* Uninitialized data */
    static u32 __tcmdata tcmvar;
    /* Initialized data */
    static u32 __tcmdata tcmassigned = 0x2BADBABEU;
    /* Constant */
    static const u32 __tcmconst tcmconst = 0xCAFEBABEU;
    
    static void __tcmlocalfunc tcm_to_tcm(void)
    {
            int i;
            for (i = 0; i < 100; i++)
                    tcmvar ++;
    }
    
    static void __tcmfunc hello_tcm(void)
    {
            /* Some abstract code that runs in ITCM */
            int i;
            for (i = 0; i < 100; i++) {
                    tcmvar ++;
            }
            tcm_to_tcm();
    }
    
    static void __init test_tcm(void)
    {
            u32 *tcmem;
            int i;
    
            hello_tcm();
            printk("Hello TCM executed from ITCM RAM\n");
    
            printk("TCM variable from testrun: %u @ %p\n", tcmvar, &tcmvar);
            tcmvar = 0xDEADBEEFU;
            printk("TCM variable: 0x%x @ %p\n", tcmvar, &tcmvar);
    
            printk("TCM assigned variable: 0x%x @ %p\n", tcmassigned, &tcmassigned);
    
            printk("TCM constant: 0x%x @ %p\n", tcmconst, &tcmconst);
    
            /* Allocate some TCM memory from the pool */
            tcmem = tcm_alloc(20);
            if (tcmem) {
                    printk("TCM Allocated 20 bytes of TCM @ %p\n", tcmem);
                    tcmem[0] = 0xDEADBEEFU;
                    tcmem[1] = 0x2BADBABEU;
                    tcmem[2] = 0xCAFEBABEU;
                    tcmem[3] = 0xDEADBEEFU;
                    tcmem[4] = 0x2BADBABEU;
                    for (i = 0; i < 5; i++)
                            printk("TCM tcmem[%d] = %08x\n", i, tcmem[i]);
                    tcm_free(tcmem, 20);
            }
    }
    
    TODO:
     - Separate fixup mapping from highmem
     - Support abiv1
    
    Signed-off-by: Guo Ren <guoren@linux.alibaba.com>

diff --git a/arch/csky/include/asm/memory.h b/arch/csky/include/asm/memory.h
new file mode 100644
index 000000000000..cdffbd0a500b
--- /dev/null
+++ b/arch/csky/include/asm/memory.h
@@ -0,0 +1,22 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+
+#ifndef __ASM_CSKY_MEMORY_H
+#define __ASM_CSKY_MEMORY_H
+
+#include <linux/compiler.h>
+#include <linux/const.h>
+#include <linux/types.h>
+#include <linux/sizes.h>
+
+#define FIXADDR_TOP	_AC(0xffffc000, UL)
+
+#ifdef CONFIG_HAVE_TCM
+#ifdef CONFIG_HAVE_DTCM
+#define TCM_NR_PAGES	(CONFIG_ITCM_NR_PAGES + CONFIG_DTCM_NR_PAGES)
+#else
+#define TCM_NR_PAGES	(CONFIG_ITCM_NR_PAGES)
+#endif
+#define FIXADDR_TCM	_AC(FIXADDR_TOP - (TCM_NR_PAGES * PAGE_SIZE), UL)
+#endif
+
+#endif
