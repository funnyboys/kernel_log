commit 89a3927a775c0a7212e2e3c4e2d42cd48895bee0
Author: Guo Ren <guoren@linux.alibaba.com>
Date:   Tue Feb 18 20:27:39 2020 +0800

    csky: Implement ftrace with regs
    
    This patch implements FTRACE_WITH_REGS for csky, which allows a traced
    function's arguments (and some other registers) to be captured into a
    struct pt_regs, allowing these to be inspected and/or modified.
    
    Signed-off-by: Guo Ren <guoren@linux.alibaba.com>

diff --git a/arch/csky/include/asm/ftrace.h b/arch/csky/include/asm/ftrace.h
index ba35d93ecda2..fae72b0b1374 100644
--- a/arch/csky/include/asm/ftrace.h
+++ b/arch/csky/include/asm/ftrace.h
@@ -10,6 +10,8 @@
 
 #define HAVE_FUNCTION_GRAPH_RET_ADDR_PTR
 
+#define ARCH_SUPPORTS_FTRACE_OPS 1
+
 #define MCOUNT_ADDR	((unsigned long)_mcount)
 
 #ifndef __ASSEMBLY__

commit 28bb030f93334495ddc64ade0bff18721bf7023d
Author: Guo Ren <ren_guo@c-sky.com>
Date:   Fri Mar 1 08:50:36 2019 +0800

    csky/ftrace: Add dynamic function tracer (include graph tracer)
    
    Support dynamic ftrace including dynamic graph tracer. Gcc-csky with -pg
    will produce call site in every function prologue and we can use these
    call site to hook trace function.
    
    gcc with -pg origin call site:
            push    lr
            jbsr    _mcount
            nop32
            nop32
    
    If the (callee - caller)'s offset is in range of bsr instruction, we'll
    modify code with:
            push    lr
            bsr     _mcount
            nop32
            nop32
    Else if the (callee - caller)'s offset is out of bsr instrunction, we'll
    modify code with:
            push    lr
            movih   r26, ...
            ori     r26, ...
            jsr     r26
    
    (r26 is reserved for jsr link reg in csky abiv2 spec.)
    
    Signed-off-by: Guo Ren <ren_guo@c-sky.com>

diff --git a/arch/csky/include/asm/ftrace.h b/arch/csky/include/asm/ftrace.h
index 7547c45312a8..ba35d93ecda2 100644
--- a/arch/csky/include/asm/ftrace.h
+++ b/arch/csky/include/asm/ftrace.h
@@ -4,10 +4,26 @@
 #ifndef __ASM_CSKY_FTRACE_H
 #define __ASM_CSKY_FTRACE_H
 
-#define MCOUNT_INSN_SIZE 4
+#define MCOUNT_INSN_SIZE	14
 
 #define HAVE_FUNCTION_GRAPH_FP_TEST
 
 #define HAVE_FUNCTION_GRAPH_RET_ADDR_PTR
 
+#define MCOUNT_ADDR	((unsigned long)_mcount)
+
+#ifndef __ASSEMBLY__
+
+extern void _mcount(unsigned long);
+
+extern void ftrace_graph_call(void);
+
+static inline unsigned long ftrace_call_adjust(unsigned long addr)
+{
+	return addr;
+}
+
+struct dyn_arch_ftrace {
+};
+#endif /* !__ASSEMBLY__ */
 #endif /* __ASM_CSKY_FTRACE_H */

commit d7950be145c84ca5094c52bc1ad1e7f1893d0f19
Author: Guo Ren <ren_guo@c-sky.com>
Date:   Sat Dec 15 21:04:27 2018 +0800

    csky: ftrace call graph supported.
    
    With csky-gcc -pg -mbacktrace, ftrace call graph supported.
    
    Signed-off-by: Guo Ren <ren_guo@c-sky.com>

diff --git a/arch/csky/include/asm/ftrace.h b/arch/csky/include/asm/ftrace.h
index 1d22a1787b8b..7547c45312a8 100644
--- a/arch/csky/include/asm/ftrace.h
+++ b/arch/csky/include/asm/ftrace.h
@@ -4,6 +4,10 @@
 #ifndef __ASM_CSKY_FTRACE_H
 #define __ASM_CSKY_FTRACE_H
 
-extern void _mcount(unsigned long from_pc);
+#define MCOUNT_INSN_SIZE 4
+
+#define HAVE_FUNCTION_GRAPH_FP_TEST
+
+#define HAVE_FUNCTION_GRAPH_RET_ADDR_PTR
 
 #endif /* __ASM_CSKY_FTRACE_H */

commit 230c77a5e92a29bf21e98ee35e22b0537f61c55b
Author: Guo Ren <ren_guo@c-sky.com>
Date:   Sun Dec 9 14:29:59 2018 +0800

    csky: basic ftrace supported
    
    When gcc with -pg, it'll add _mcount stub in every function. We need
    implement the _mcount in kernel and ftrace depends on stackstrace.
    
    To do: call-graph, dynamic ftrace
    
    Signed-off-by: Guo Ren <ren_guo@c-sky.com>

diff --git a/arch/csky/include/asm/ftrace.h b/arch/csky/include/asm/ftrace.h
new file mode 100644
index 000000000000..1d22a1787b8b
--- /dev/null
+++ b/arch/csky/include/asm/ftrace.h
@@ -0,0 +1,9 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+// Copyright (C) 2018 Hangzhou C-SKY Microsystems co.,ltd.
+
+#ifndef __ASM_CSKY_FTRACE_H
+#define __ASM_CSKY_FTRACE_H
+
+extern void _mcount(unsigned long from_pc);
+
+#endif /* __ASM_CSKY_FTRACE_H */
