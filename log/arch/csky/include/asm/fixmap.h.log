commit f136008f31e91060d6b6e6e031cb2c827448e280
Author: Guo Ren <guoren@linux.alibaba.com>
Date:   Sun Dec 1 22:34:19 2019 +0800

    csky: Separate fixaddr_init from highmem
    
    After fixaddr_init is separated from highmem, we could use tcm
    without highmem selected. (610 (abiv1) don't support highmem,
    but it could use tcm now.)
    
    Signed-off-by: Guo Ren <guoren@linux.alibaba.com>

diff --git a/arch/csky/include/asm/fixmap.h b/arch/csky/include/asm/fixmap.h
index 4350578faa1c..81f9477d5330 100644
--- a/arch/csky/include/asm/fixmap.h
+++ b/arch/csky/include/asm/fixmap.h
@@ -27,4 +27,8 @@ enum fixed_addresses {
 
 #include <asm-generic/fixmap.h>
 
+extern void fixrange_init(unsigned long start, unsigned long end,
+	pgd_t *pgd_base);
+extern void __init fixaddr_init(void);
+
 #endif /* __ASM_CSKY_FIXMAP_H */

commit f525bb2c9e7cf1e3c43ab57704c9e1c836d30b34
Author: Guo Ren <guoren@linux.alibaba.com>
Date:   Wed Nov 27 08:44:33 2019 +0800

    csky: Tightly-Coupled Memory or Sram support
    
    The implementation are not only used by TCM but also used by sram on
    SOC bus. It follow existed linux tcm software interface, so that old
    tcm application codes could be re-used directly.
    
    Software interface list in asm/tcm.h:
     - Variables/Const:     __tcmdata, __tcmconst
     - Functions:           __tcmfunc, __tcmlocalfunc
     - Malloc/Free:         tcm_alloc, tcm_free
    
    In linux menuconfig:
     - Choose a TCM contain instrctions + data or separated in ITCM/DTCM.
     - Determine TCM_BASE (DTCM_BASE) in phyiscal address.
     - Determine size of TCM or ITCM(DTCM) in page counts.
    
    Here is hello tcm example from Documentation/arm/tcm.rst which could
    be directly used:
    
    /* Uninitialized data */
    static u32 __tcmdata tcmvar;
    /* Initialized data */
    static u32 __tcmdata tcmassigned = 0x2BADBABEU;
    /* Constant */
    static const u32 __tcmconst tcmconst = 0xCAFEBABEU;
    
    static void __tcmlocalfunc tcm_to_tcm(void)
    {
            int i;
            for (i = 0; i < 100; i++)
                    tcmvar ++;
    }
    
    static void __tcmfunc hello_tcm(void)
    {
            /* Some abstract code that runs in ITCM */
            int i;
            for (i = 0; i < 100; i++) {
                    tcmvar ++;
            }
            tcm_to_tcm();
    }
    
    static void __init test_tcm(void)
    {
            u32 *tcmem;
            int i;
    
            hello_tcm();
            printk("Hello TCM executed from ITCM RAM\n");
    
            printk("TCM variable from testrun: %u @ %p\n", tcmvar, &tcmvar);
            tcmvar = 0xDEADBEEFU;
            printk("TCM variable: 0x%x @ %p\n", tcmvar, &tcmvar);
    
            printk("TCM assigned variable: 0x%x @ %p\n", tcmassigned, &tcmassigned);
    
            printk("TCM constant: 0x%x @ %p\n", tcmconst, &tcmconst);
    
            /* Allocate some TCM memory from the pool */
            tcmem = tcm_alloc(20);
            if (tcmem) {
                    printk("TCM Allocated 20 bytes of TCM @ %p\n", tcmem);
                    tcmem[0] = 0xDEADBEEFU;
                    tcmem[1] = 0x2BADBABEU;
                    tcmem[2] = 0xCAFEBABEU;
                    tcmem[3] = 0xDEADBEEFU;
                    tcmem[4] = 0x2BADBABEU;
                    for (i = 0; i < 5; i++)
                            printk("TCM tcmem[%d] = %08x\n", i, tcmem[i]);
                    tcm_free(tcmem, 20);
            }
    }
    
    TODO:
     - Separate fixup mapping from highmem
     - Support abiv1
    
    Signed-off-by: Guo Ren <guoren@linux.alibaba.com>

diff --git a/arch/csky/include/asm/fixmap.h b/arch/csky/include/asm/fixmap.h
index 380ff0a307df..4350578faa1c 100644
--- a/arch/csky/include/asm/fixmap.h
+++ b/arch/csky/include/asm/fixmap.h
@@ -5,12 +5,16 @@
 #define __ASM_CSKY_FIXMAP_H
 
 #include <asm/page.h>
+#include <asm/memory.h>
 #ifdef CONFIG_HIGHMEM
 #include <linux/threads.h>
 #include <asm/kmap_types.h>
 #endif
 
 enum fixed_addresses {
+#ifdef CONFIG_HAVE_TCM
+	FIX_TCM = TCM_NR_PAGES,
+#endif
 #ifdef CONFIG_HIGHMEM
 	FIX_KMAP_BEGIN,
 	FIX_KMAP_END = FIX_KMAP_BEGIN + (KM_TYPE_NR * NR_CPUS) - 1,
@@ -18,7 +22,6 @@ enum fixed_addresses {
 	__end_of_fixed_addresses
 };
 
-#define FIXADDR_TOP	0xffffc000
 #define FIXADDR_SIZE	(__end_of_fixed_addresses << PAGE_SHIFT)
 #define FIXADDR_START	(FIXADDR_TOP - FIXADDR_SIZE)
 

commit 013de2d6671d89de3397904749c86a69ac0686f7
Author: Guo Ren <ren_guo@c-sky.com>
Date:   Wed Sep 5 14:25:12 2018 +0800

    csky: MMU and page table management
    
    This patch adds files related to memory management and here is our
    memory-layout:
    
       Fixmap       : 0xffc02000 – 0xfffff000       (4 MB - 12KB)
       Pkmap        : 0xff800000 – 0xffc00000       (4 MB)
       Vmalloc      : 0xf0200000 – 0xff000000       (238 MB)
       Lowmem       : 0x80000000 – 0xc0000000       (1GB)
    
    abiv1 CPU (CK610) is VIPT cache and it doesn't support highmem.
    abiv2 CPUs are all PIPT cache and they could support highmem.
    
    Lowmem is directly mapped by msa0 & msa1 reg, and we needn't setup
    memory page table for it.
    
    Link:https://lore.kernel.org/lkml/20180518215548.GH17671@n2100.armlinux.org.uk/
    Signed-off-by: Guo Ren <ren_guo@c-sky.com>
    Cc: Christoph Hellwig <hch@infradead.org>
    Reviewed-by: Arnd Bergmann <arnd@arndb.de>

diff --git a/arch/csky/include/asm/fixmap.h b/arch/csky/include/asm/fixmap.h
new file mode 100644
index 000000000000..380ff0a307df
--- /dev/null
+++ b/arch/csky/include/asm/fixmap.h
@@ -0,0 +1,27 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+// Copyright (C) 2018 Hangzhou C-SKY Microsystems co.,ltd.
+
+#ifndef __ASM_CSKY_FIXMAP_H
+#define __ASM_CSKY_FIXMAP_H
+
+#include <asm/page.h>
+#ifdef CONFIG_HIGHMEM
+#include <linux/threads.h>
+#include <asm/kmap_types.h>
+#endif
+
+enum fixed_addresses {
+#ifdef CONFIG_HIGHMEM
+	FIX_KMAP_BEGIN,
+	FIX_KMAP_END = FIX_KMAP_BEGIN + (KM_TYPE_NR * NR_CPUS) - 1,
+#endif
+	__end_of_fixed_addresses
+};
+
+#define FIXADDR_TOP	0xffffc000
+#define FIXADDR_SIZE	(__end_of_fixed_addresses << PAGE_SHIFT)
+#define FIXADDR_START	(FIXADDR_TOP - FIXADDR_SIZE)
+
+#include <asm-generic/fixmap.h>
+
+#endif /* __ASM_CSKY_FIXMAP_H */
