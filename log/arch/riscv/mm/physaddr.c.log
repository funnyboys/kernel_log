commit 6435f773d81f02193228685a7e3fe65c983c5de0
Author: Zong Li <zong.li@sifive.com>
Date:   Thu Jan 2 11:12:39 2020 +0800

    riscv: mm: add support for CONFIG_DEBUG_VIRTUAL
    
    This patch implements CONFIG_DEBUG_VIRTUAL to do additional checks on
    virt_to_phys and __pa_symbol calls. virt_to_phys used for linear mapping
    check, and __pa_symbol used for kernel symbol check. In current RISC-V,
    kernel image maps to linear mapping area. If CONFIG_DEBUG_VIRTUAL is
    disable, these two functions calculate the offset on the address feded
    directly without any checks.
    
    The result of test_debug_virtual as follows:
    
    [    0.358456] ------------[ cut here ]------------
    [    0.358738] virt_to_phys used for non-linear address: (____ptrval____) (0xffffffd000000000)
    [    0.359174] WARNING: CPU: 0 PID: 1 at arch/riscv/mm/physaddr.c:16 __virt_to_phys+0x3c/0x50
    [    0.359409] Modules linked in:
    [    0.359630] CPU: 0 PID: 1 Comm: swapper/0 Not tainted 5.5.0-rc3-00002-g5133c5c0ca13 #57
    [    0.359861] epc: ffffffe000253d1a ra : ffffffe000253d1a sp : ffffffe03aa87da0
    [    0.360019]  gp : ffffffe000ae03b0 tp : ffffffe03aa88000 t0 : ffffffe000af2660
    [    0.360175]  t1 : 0000000000000064 t2 : 00000000000000b7 s0 : ffffffe03aa87dc0
    [    0.360330]  s1 : ffffffd000000000 a0 : 000000000000004f a1 : 0000000000000000
    [    0.360492]  a2 : 0000000000000000 a3 : 0000000000000000 a4 : ffffffe000a84358
    [    0.360672]  a5 : 0000000000000000 a6 : 0000000000000000 a7 : 0000000000000000
    [    0.360876]  s2 : ffffffe000ae0600 s3 : ffffffe00000fc7c s4 : ffffffe0000224b0
    [    0.361067]  s5 : ffffffe000030890 s6 : ffffffe000022470 s7 : 0000000000000008
    [    0.361267]  s8 : ffffffe0000002c4 s9 : ffffffe000ae0640 s10: ffffffe000ae0630
    [    0.361453]  s11: 0000000000000000 t3 : 0000000000000000 t4 : 000000000001e6d0
    [    0.361636]  t5 : ffffffe000ae0a18 t6 : ffffffe000aee54e
    [    0.361806] status: 0000000000000120 badaddr: 0000000000000000 cause: 0000000000000003
    [    0.362056] ---[ end trace aec0bf78d4978122 ]---
    [    0.362404] PA: 0xfffffff080200000 for VA: 0xffffffd000000000
    [    0.362607] PA: 0x00000000baddd2d0 for VA: 0xffffffe03abdd2d0
    
    Signed-off-by: Zong Li <zong.li@sifive.com>
    Reviewed-by: Paul Walmsley <paul.walmsley@sifive.com>
    Tested-by: Paul Walmsley <paul.walmsley@sifive.com>
    Signed-off-by: Palmer Dabbelt <palmerdabbelt@google.com>

diff --git a/arch/riscv/mm/physaddr.c b/arch/riscv/mm/physaddr.c
new file mode 100644
index 000000000000..e8e4dcd39fed
--- /dev/null
+++ b/arch/riscv/mm/physaddr.c
@@ -0,0 +1,37 @@
+// SPDX-License-Identifier: GPL-2.0
+
+#include <linux/types.h>
+#include <linux/mmdebug.h>
+#include <linux/mm.h>
+#include <asm/page.h>
+#include <asm/sections.h>
+
+phys_addr_t __virt_to_phys(unsigned long x)
+{
+	phys_addr_t y = x - PAGE_OFFSET;
+
+	/*
+	 * Boundary checking aginst the kernel linear mapping space.
+	 */
+	WARN(y >= KERN_VIRT_SIZE,
+	     "virt_to_phys used for non-linear address: %pK (%pS)\n",
+	     (void *)x, (void *)x);
+
+	return __va_to_pa_nodebug(x);
+}
+EXPORT_SYMBOL(__virt_to_phys);
+
+phys_addr_t __phys_addr_symbol(unsigned long x)
+{
+	unsigned long kernel_start = (unsigned long)PAGE_OFFSET;
+	unsigned long kernel_end = (unsigned long)_end;
+
+	/*
+	 * Boundary checking aginst the kernel image mapping.
+	 * __pa_symbol should only be used on kernel symbol addresses.
+	 */
+	VIRTUAL_BUG_ON(x < kernel_start || x > kernel_end);
+
+	return __va_to_pa_nodebug(x);
+}
+EXPORT_SYMBOL(__phys_addr_symbol);
