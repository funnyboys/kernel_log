commit 50acfb2b76e19f73270fef9a32726c7e18d08ec3
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed May 29 07:18:00 2019 -0700

    treewide: Replace GPLv2 boilerplate/reference with SPDX - rule 286
    
    Based on 1 normalized pattern(s):
    
      this program is free software you can redistribute it and or modify
      it under the terms of the gnu general public license as published by
      the free software foundation version 2 this program is distributed
      in the hope that it will be useful but without any warranty without
      even the implied warranty of merchantability or fitness for a
      particular purpose see the gnu general public license for more
      details
    
    extracted by the scancode license scanner the SPDX license identifier
    
      GPL-2.0-only
    
    has been chosen to replace the boilerplate/reference in 97 file(s).
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Allison Randal <allison@lohutok.net>
    Reviewed-by: Alexios Zavras <alexios.zavras@intel.com>
    Cc: linux-spdx@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190529141901.025053186@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/arch/riscv/include/asm/unistd.h b/arch/riscv/include/asm/unistd.h
index 073ee80fdf74..977ee6181dab 100644
--- a/arch/riscv/include/asm/unistd.h
+++ b/arch/riscv/include/asm/unistd.h
@@ -1,14 +1,6 @@
+/* SPDX-License-Identifier: GPL-2.0-only */
 /*
  * Copyright (C) 2012 Regents of the University of California
- *
- *   This program is free software; you can redistribute it and/or
- *   modify it under the terms of the GNU General Public License
- *   as published by the Free Software Foundation, version 2.
- *
- *   This program is distributed in the hope that it will be useful,
- *   but WITHOUT ANY WARRANTY; without even the implied warranty of
- *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *   GNU General Public License for more details.
  */
 
 /*

commit 45ef1aa8a0e3b0da449c619035b0841f28abca63
Author: David Abdurachmanov <david.abdurachmanov@gmail.com>
Date:   Mon Dec 10 21:43:54 2018 +0100

    riscv: define NR_syscalls in unistd.h
    
    This macro is used by kernel/trace/{trace.h,trace_syscalls.c} if we
    have CONFIG_FTRACE_SYSCALLS enabled.
    
    Signed-off-by: David Abdurachmanov <david.abdurachmanov@gmail.com>
    Fixes: b78002b395b4 ("riscv: add HAVE_SYSCALL_TRACEPOINTS to Kconfig")
    Signed-off-by: Palmer Dabbelt <palmer@sifive.com>

diff --git a/arch/riscv/include/asm/unistd.h b/arch/riscv/include/asm/unistd.h
index fef96f117b4d..073ee80fdf74 100644
--- a/arch/riscv/include/asm/unistd.h
+++ b/arch/riscv/include/asm/unistd.h
@@ -19,3 +19,5 @@
 #define __ARCH_WANT_SYS_CLONE
 
 #include <uapi/asm/unistd.h>
+
+#define NR_syscalls (__NR_syscalls)

commit 27f8899d6002e11a6e2d995e29b8deab5aa9cc25
Author: David Abdurachmanov <david.abdurachmanov@gmail.com>
Date:   Thu Nov 8 20:02:39 2018 +0100

    riscv: add asm/unistd.h UAPI header
    
    Marcin Juszkiewicz reported issues while generating syscall table for riscv
    using 4.20-rc1. The patch refactors our unistd.h files to match some other
    architectures.
    
    - Add asm/unistd.h UAPI header, which has __ARCH_WANT_NEW_STAT only for 64-bit
    - Remove asm/syscalls.h UAPI header and merge to asm/unistd.h
    - Adjust kernel asm/unistd.h
    
    So now asm/unistd.h UAPI header should show all syscalls for riscv.
    
    Before this, Makefile simply put `#include <asm-generic/unistd.h>` into
    generated asm/unistd.h UAPI header thus user didn't see:
    
    - __NR_riscv_flush_icache
    - __NR_newfstatat
    - __NR_fstat
    
    which are supported by riscv kernel.
    
    Signed-off-by: David Abdurachmanov <david.abdurachmanov@gmail.com>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Marcin Juszkiewicz <marcin.juszkiewicz@linaro.org>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Fixes: 67314ec7b025 ("RISC-V: Request newstat syscalls")
    Signed-off-by: David Abdurachmanov <david.abdurachmanov@gmail.com>
    Acked-by: Olof Johansson <olof@lixom.net>
    Signed-off-by: Palmer Dabbelt <palmer@sifive.com>

diff --git a/arch/riscv/include/asm/unistd.h b/arch/riscv/include/asm/unistd.h
index eff7aa9aa163..fef96f117b4d 100644
--- a/arch/riscv/include/asm/unistd.h
+++ b/arch/riscv/include/asm/unistd.h
@@ -13,10 +13,9 @@
 
 /*
  * There is explicitly no include guard here because this file is expected to
- * be included multiple times.  See uapi/asm/syscalls.h for more info.
+ * be included multiple times.
  */
 
-#define __ARCH_WANT_NEW_STAT
 #define __ARCH_WANT_SYS_CLONE
+
 #include <uapi/asm/unistd.h>
-#include <uapi/asm/syscalls.h>

commit 67314ec7b0250290cc85eaa7a2f88a8ddb9e8547
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Wed Sep 5 07:36:06 2018 -0700

    RISC-V: Request newstat syscalls
    
    Since commit 82b355d161c9 ("y2038: Remove newstat family from default
    syscall set"), riscv images fail to boot with the following error.
    
    /sbin/init: error while loading shared libraries: libc.so.6:
            cannot stat shared object: Error 38
    Kernel panic - not syncing: Attempted to kill init! exitcode=0x00007f00
    
    Explicitly request newstat syscalls to fix the problem.
    
    Fixes: 82b355d161c9 ("y2038: Remove newstat family from default syscall set")
    Cc: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>

diff --git a/arch/riscv/include/asm/unistd.h b/arch/riscv/include/asm/unistd.h
index 0caea01d5cca..eff7aa9aa163 100644
--- a/arch/riscv/include/asm/unistd.h
+++ b/arch/riscv/include/asm/unistd.h
@@ -16,6 +16,7 @@
  * be included multiple times.  See uapi/asm/syscalls.h for more info.
  */
 
+#define __ARCH_WANT_NEW_STAT
 #define __ARCH_WANT_SYS_CLONE
 #include <uapi/asm/unistd.h>
 #include <uapi/asm/syscalls.h>

commit e45c7aca4914efc8bcdd8fc231efadcdc87ae2e5
Author: Palmer Dabbelt <palmer@sifive.com>
Date:   Fri Aug 3 12:27:19 2018 -0700

    RISC-V: Don't use a global include guard for uapi/asm/syscalls.h
    
    This file is expected to be included multiple times in the same file in
    order to allow the __SYSCALL macro to generate system call tables.  With
    a global include guard we end up missing __NR_riscv_flush_icache in the
    syscall table, which results in icache flushes that escape the vDSO call
    to not actually do anything.
    
    The fix is to move to per-#define include guards, which allows the
    system call tables to actually be populated.  Thanks to Macrus Comstedt
    for finding and fixing the bug!
    
    Cc: Marcus Comstedt <marcus@mc.pp.se>
    Signed-off-by: Palmer Dabbelt <palmer@sifive.com>

diff --git a/arch/riscv/include/asm/unistd.h b/arch/riscv/include/asm/unistd.h
index 080fb28061de..0caea01d5cca 100644
--- a/arch/riscv/include/asm/unistd.h
+++ b/arch/riscv/include/asm/unistd.h
@@ -11,6 +11,11 @@
  *   GNU General Public License for more details.
  */
 
+/*
+ * There is explicitly no include guard here because this file is expected to
+ * be included multiple times.  See uapi/asm/syscalls.h for more info.
+ */
+
 #define __ARCH_WANT_SYS_CLONE
 #include <uapi/asm/unistd.h>
 #include <uapi/asm/syscalls.h>

commit 0b5030c8c0520ec310bf8ca8f16d56541e80cf5c
Author: Tobias Klauser <tklauser@distanz.ch>
Date:   Thu Jan 25 11:00:00 2018 +0100

    riscv: remove unused __ARCH_HAVE_MMU define
    
    The __ARCH_HAVE_MMU define is (and was) used nowhere in the tree and
    also doesn't appear to be used by any libc.
    
    Signed-off-by: Tobias Klauser <tklauser@distanz.ch>
    Signed-off-by: Palmer Dabbelt <palmer@sifive.com>

diff --git a/arch/riscv/include/asm/unistd.h b/arch/riscv/include/asm/unistd.h
index 2f704a5c4196..080fb28061de 100644
--- a/arch/riscv/include/asm/unistd.h
+++ b/arch/riscv/include/asm/unistd.h
@@ -11,7 +11,6 @@
  *   GNU General Public License for more details.
  */
 
-#define __ARCH_HAVE_MMU
 #define __ARCH_WANT_SYS_CLONE
 #include <uapi/asm/unistd.h>
 #include <uapi/asm/syscalls.h>

commit 9e49a4ed072ab67b17238c5a45d7cba7f848659e
Author: Palmer Dabbelt <palmer@dabbelt.com>
Date:   Tue Dec 26 19:11:22 2017 -0800

    RISC-V: Make __NR_riscv_flush_icache visible to userspace
    
    We were hoping to avoid making this visible to userspace, but it looks
    like we're going to have to because QEMU's user-mode emulation doesn't
    want to emulate a vDSO.  Having vDSO-only system calls was a bit
    unothodox anyway, so I think in this case it's OK to just make the
    actual system call number public.
    
    This patch simply moves the definition of __NR_riscv_flush_icache
    availiable to userspace, which results in the deletion of the now empty
    vdso-syscalls.h.
    
    Changes since v1:
    
    * I've moved the definition into uapi/asm/syscalls.h rathen than
      uapi/asm/unistd.h.  This allows me to keep asm/unistd.h, so we can
      keep the syscall table macros sane.
    * As a side effect of the above, this no longer disables all system
      calls on RISC-V.  Whoops!
    
    Signed-off-by: Palmer Dabbelt <palmer@sifive.com>

diff --git a/arch/riscv/include/asm/unistd.h b/arch/riscv/include/asm/unistd.h
index 9f250ed007cd..2f704a5c4196 100644
--- a/arch/riscv/include/asm/unistd.h
+++ b/arch/riscv/include/asm/unistd.h
@@ -14,3 +14,4 @@
 #define __ARCH_HAVE_MMU
 #define __ARCH_WANT_SYS_CLONE
 #include <uapi/asm/unistd.h>
+#include <uapi/asm/syscalls.h>

commit e2c0cdfba7f69925afc92b20cd9835d81e11a4f1
Author: Palmer Dabbelt <palmer@dabbelt.com>
Date:   Mon Jul 10 18:07:09 2017 -0700

    RISC-V: User-facing API
    
    This patch contains code that is in some way visible to the user:
    including via system calls, the VDSO, module loading and signal
    handling.  It also contains some generic code that is ABI visible.
    
    Signed-off-by: Palmer Dabbelt <palmer@dabbelt.com>

diff --git a/arch/riscv/include/asm/unistd.h b/arch/riscv/include/asm/unistd.h
new file mode 100644
index 000000000000..9f250ed007cd
--- /dev/null
+++ b/arch/riscv/include/asm/unistd.h
@@ -0,0 +1,16 @@
+/*
+ * Copyright (C) 2012 Regents of the University of California
+ *
+ *   This program is free software; you can redistribute it and/or
+ *   modify it under the terms of the GNU General Public License
+ *   as published by the Free Software Foundation, version 2.
+ *
+ *   This program is distributed in the hope that it will be useful,
+ *   but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *   GNU General Public License for more details.
+ */
+
+#define __ARCH_HAVE_MMU
+#define __ARCH_WANT_SYS_CLONE
+#include <uapi/asm/unistd.h>
