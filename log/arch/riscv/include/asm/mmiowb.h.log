commit ed1ed4c0da5447c5e322481ce2ef9f03336c6ffb
Author: Kefeng Wang <wangkefeng.wang@huawei.com>
Date:   Mon May 11 10:20:01 2020 +0800

    riscv: mmiowb: Fix implicit declaration of function 'smp_processor_id'
    
    In file included from ./../include/linux/compiler_types.h:68,
                     from <command-line>:
    ../include/asm-generic/mmiowb.h: In function ‘mmiowb_set_pending’:
    ../include/asm-generic/percpu.h:34:38: error: implicit declaration of function ‘smp_processor_id’; did you mean ‘raw_smp_processor_id’? [-Werror=implicit-function-declaration]
     #define my_cpu_offset per_cpu_offset(smp_processor_id())
                                          ^~~~~~~~~~~~~~~~
    ../include/linux/compiler-gcc.h:58:26: note: in definition of macro ‘RELOC_HIDE’
      (typeof(ptr)) (__ptr + (off));     \
                              ^~~
    ../include/linux/percpu-defs.h:249:2: note: in expansion of macro ‘SHIFT_PERCPU_PTR’
      SHIFT_PERCPU_PTR(ptr, my_cpu_offset);    \
      ^~~~~~~~~~~~~~~~
    ../include/asm-generic/percpu.h:34:23: note: in expansion of macro ‘per_cpu_offset’
     #define my_cpu_offset per_cpu_offset(smp_processor_id())
                           ^~~~~~~~~~~~~~
    ../include/linux/percpu-defs.h:249:24: note: in expansion of macro ‘my_cpu_offset’
      SHIFT_PERCPU_PTR(ptr, my_cpu_offset);    \
                            ^~~~~~~~~~~~~
    ../include/asm-generic/mmiowb.h:30:26: note: in expansion of macro ‘this_cpu_ptr’
     #define __mmiowb_state() this_cpu_ptr(&__mmiowb_state)
                              ^~~~~~~~~~~~
    ../include/asm-generic/mmiowb.h:37:28: note: in expansion of macro ‘__mmiowb_state’
      struct mmiowb_state *ms = __mmiowb_state();
                                ^~~~~~~~~~~~~~
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Kefeng Wang <wangkefeng.wang@huawei.com>
    Signed-off-by: Palmer Dabbelt <palmerdabbelt@google.com>

diff --git a/arch/riscv/include/asm/mmiowb.h b/arch/riscv/include/asm/mmiowb.h
index bb4091ff4a21..0b2333e71fdc 100644
--- a/arch/riscv/include/asm/mmiowb.h
+++ b/arch/riscv/include/asm/mmiowb.h
@@ -9,6 +9,7 @@
  */
 #define mmiowb()	__asm__ __volatile__ ("fence o,w" : : : "memory");
 
+#include <linux/smp.h>
 #include <asm-generic/mmiowb.h>
 
 #endif	/* _ASM_RISCV_MMIOWB_H */

commit 6b57ba8ed48a3ee3d6b53294ccbf02b8cb83c604
Author: Zong Li <zong.li@sifive.com>
Date:   Mon Oct 28 00:42:47 2019 -0700

    riscv: clean up the macro format in each header file
    
    There are many different formats in each header now, such as
    _ASM_XXX_H, __ASM_XXX_H, _ASM_RISCV_XXX_H, RISCV_XXX_H, etc., This patch
    tries to unify the format by using _ASM_RISCV_XXX_H, because the most
    header use it now. This patch also adds the conditional to the headers
    if they lost it.
    
    Signed-off-by: Zong Li <zong.li@sifive.com>
    Signed-off-by: Paul Walmsley <paul.walmsley@sifive.com>

diff --git a/arch/riscv/include/asm/mmiowb.h b/arch/riscv/include/asm/mmiowb.h
index 5d7e3a2b4e3b..bb4091ff4a21 100644
--- a/arch/riscv/include/asm/mmiowb.h
+++ b/arch/riscv/include/asm/mmiowb.h
@@ -11,4 +11,4 @@
 
 #include <asm-generic/mmiowb.h>
 
-#endif	/* ASM_RISCV_MMIOWB_H */
+#endif	/* _ASM_RISCV_MMIOWB_H */

commit b012980d1c6e27f5c4adf0c19defca8658956820
Author: Will Deacon <will.deacon@arm.com>
Date:   Fri Feb 22 14:45:42 2019 +0000

    riscv/mmiowb: Hook up mmwiob() implementation to asm-generic code
    
    In a bid to kill off explicit mmiowb() usage in driver code, hook up
    the asm-generic mmiowb() tracking code for riscv, so that an mmiowb()
    is automatically issued from spin_unlock() if an I/O write was performed
    in the critical section.
    
    Reviewed-by: Palmer Dabbelt <palmer@sifive.com>
    Acked-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>

diff --git a/arch/riscv/include/asm/mmiowb.h b/arch/riscv/include/asm/mmiowb.h
new file mode 100644
index 000000000000..5d7e3a2b4e3b
--- /dev/null
+++ b/arch/riscv/include/asm/mmiowb.h
@@ -0,0 +1,14 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+
+#ifndef _ASM_RISCV_MMIOWB_H
+#define _ASM_RISCV_MMIOWB_H
+
+/*
+ * "o,w" is sufficient to ensure that all writes to the device have completed
+ * before the write to the spinlock is allowed to commit.
+ */
+#define mmiowb()	__asm__ __volatile__ ("fence o,w" : : : "memory");
+
+#include <asm-generic/mmiowb.h>
+
+#endif	/* ASM_RISCV_MMIOWB_H */
