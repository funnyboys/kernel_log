commit 98a93b0b561c571153b7cd6953e882bc3fd8cfcd
Author: Mao Han <han_mao@c-sky.com>
Date:   Thu Sep 5 11:46:35 2019 +0800

    riscv: Add support for perf registers sampling
    
    This patch implements the perf registers sampling and validation API
    for the riscv arch. The valid registers and their register ID are
    defined in perf_regs.h. Perf tool can backtrace in userspace with
    unwind library and the registers/user stack dump support.
    
    Signed-off-by: Mao Han <han_mao@c-sky.com>
    Cc: Paul Walmsley <paul.walmsley@sifive.com>
    Cc: Greentime Hu <green.hu@gmail.com>
    Cc: Palmer Dabbelt <palmer@sifive.com>
    Cc: linux-riscv <linux-riscv@lists.infradead.org>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Guo Ren <guoren@kernel.org>
    Tested-by: Greentime Hu <greentime.hu@sifive.com>
    [paul.walmsley@sifive.com: minor patch description fix]
    Signed-off-by: Paul Walmsley <paul.walmsley@sifive.com>

diff --git a/arch/riscv/kernel/perf_regs.c b/arch/riscv/kernel/perf_regs.c
new file mode 100644
index 000000000000..04a38fbeb9c7
--- /dev/null
+++ b/arch/riscv/kernel/perf_regs.c
@@ -0,0 +1,44 @@
+// SPDX-License-Identifier: GPL-2.0
+/* Copyright (C) 2019 Hangzhou C-SKY Microsystems co.,ltd. */
+
+#include <linux/errno.h>
+#include <linux/kernel.h>
+#include <linux/perf_event.h>
+#include <linux/bug.h>
+#include <asm/perf_regs.h>
+#include <asm/ptrace.h>
+
+u64 perf_reg_value(struct pt_regs *regs, int idx)
+{
+	if (WARN_ON_ONCE((u32)idx >= PERF_REG_RISCV_MAX))
+		return 0;
+
+	return ((unsigned long *)regs)[idx];
+}
+
+#define REG_RESERVED (~((1ULL << PERF_REG_RISCV_MAX) - 1))
+
+int perf_reg_validate(u64 mask)
+{
+	if (!mask || mask & REG_RESERVED)
+		return -EINVAL;
+
+	return 0;
+}
+
+u64 perf_reg_abi(struct task_struct *task)
+{
+#if __riscv_xlen == 64
+	return PERF_SAMPLE_REGS_ABI_64;
+#else
+	return PERF_SAMPLE_REGS_ABI_32;
+#endif
+}
+
+void perf_get_regs_user(struct perf_regs *regs_user,
+			struct pt_regs *regs,
+			struct pt_regs *regs_user_copy)
+{
+	regs_user->regs = task_pt_regs(current);
+	regs_user->abi = perf_reg_abi(current);
+}
