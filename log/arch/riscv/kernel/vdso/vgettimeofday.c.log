commit e93b327dbf3d37f0dfb123b58f9627ad17be652e
Author: Vincent Chen <vincent.chen@sifive.com>
Date:   Tue Jun 23 13:40:21 2020 +0800

    riscv: Add extern declarations for vDSO time-related functions
    
    Add extern declarations for vDSO time-related functions to notify the
    compiler these functions will be used in somewhere to avoid
    "no previous prototype" compile warning.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Vincent Chen <vincent.chen@sifive.com>
    Signed-off-by: Palmer Dabbelt <palmerdabbelt@google.com>

diff --git a/arch/riscv/kernel/vdso/vgettimeofday.c b/arch/riscv/kernel/vdso/vgettimeofday.c
index d264943e2e47..cc0d80699c31 100644
--- a/arch/riscv/kernel/vdso/vgettimeofday.c
+++ b/arch/riscv/kernel/vdso/vgettimeofday.c
@@ -9,16 +9,22 @@
 #include <linux/time.h>
 #include <linux/types.h>
 
+extern
+int __vdso_clock_gettime(clockid_t clock, struct __kernel_timespec *ts);
 int __vdso_clock_gettime(clockid_t clock, struct __kernel_timespec *ts)
 {
 	return __cvdso_clock_gettime(clock, ts);
 }
 
+extern
+int __vdso_gettimeofday(struct __kernel_old_timeval *tv, struct timezone *tz);
 int __vdso_gettimeofday(struct __kernel_old_timeval *tv, struct timezone *tz)
 {
 	return __cvdso_gettimeofday(tv, tz);
 }
 
+extern
+int __vdso_clock_getres(clockid_t clock_id, struct __kernel_timespec *res);
 int __vdso_clock_getres(clockid_t clock_id, struct __kernel_timespec *res)
 {
 	return __cvdso_clock_getres(clock_id, res);

commit ad5d1122b82fbd6a816d1b9d26ee01a6dbc2d757
Author: Vincent Chen <vincent.chen@sifive.com>
Date:   Tue Jun 9 22:14:48 2020 +0800

    riscv: use vDSO common flow to reduce the latency of the time-related functions
    
    Even if RISC-V has supported the vDSO feature, the latency of the functions
    for obtaining the system time is still expensive. It is because these
    functions still trigger a corresponding system call in the process, which
    slows down the response time. If we want to remove the system call to
    reduce the latency, the kernel should have the ability to output the system
    clock information to userspace. This patch introduces the vDSO common flow
    to enable the kernel to achieve the above feature and uses "rdtime"
    instruction to obtain the current time in the user space. Under this
    condition, the latency cost by the ecall from U-mode to S-mode can be
    eliminated. After applying this patch, the latency of gettimeofday()
    measured on the HiFive unleashed board can be reduced by %61.
    
    Signed-off-by: Vincent Chen <vincent.chen@sifive.com>
    Reviewed-by: Atish Patra <atish.patra@wdc.com>
    Signed-off-by: Palmer Dabbelt <palmerdabbelt@google.com>

diff --git a/arch/riscv/kernel/vdso/vgettimeofday.c b/arch/riscv/kernel/vdso/vgettimeofday.c
new file mode 100644
index 000000000000..d264943e2e47
--- /dev/null
+++ b/arch/riscv/kernel/vdso/vgettimeofday.c
@@ -0,0 +1,25 @@
+// SPDX-License-Identifier: GPL-2.0
+/*
+ * Copied from arch/arm64/kernel/vdso/vgettimeofday.c
+ *
+ * Copyright (C) 2018 ARM Ltd.
+ * Copyright (C) 2020 SiFive
+ */
+
+#include <linux/time.h>
+#include <linux/types.h>
+
+int __vdso_clock_gettime(clockid_t clock, struct __kernel_timespec *ts)
+{
+	return __cvdso_clock_gettime(clock, ts);
+}
+
+int __vdso_gettimeofday(struct __kernel_old_timeval *tv, struct timezone *tz)
+{
+	return __cvdso_gettimeofday(tv, tz);
+}
+
+int __vdso_clock_getres(clockid_t clock_id, struct __kernel_timespec *res)
+{
+	return __cvdso_clock_getres(clock_id, res);
+}
