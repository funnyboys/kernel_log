commit d0e20fd4c1db7cb28874402f78f39870d84398e9
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Sun Apr 5 21:33:57 2020 +0200

    um: Fix xor.h include
    
    Two independent changes here ended up going into the tree
    one after another, without a necessary rename, fix that.
    
    Reported-by: Thomas Meyer <thomas@m3y3r.de>
    Fixes: f185063bff91 ("um: Move timer-internal.h to non-shared")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Reviewed-by: Brendan Higgins <brendanhiggins@google.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>

diff --git a/arch/um/include/asm/xor.h b/arch/um/include/asm/xor.h
index 7a3208c47cfc..36b33d62a35d 100644
--- a/arch/um/include/asm/xor.h
+++ b/arch/um/include/asm/xor.h
@@ -1,6 +1,6 @@
 /* SPDX-License-Identifier: GPL-2.0 */
 #include <asm-generic/xor.h>
-#include <shared/timer-internal.h>
+#include <linux/time-internal.h>
 
 /* pick an arbitrary one - measuring isn't possible with inf-cpu */
 #define XOR_SELECT_TEMPLATE(x)	\

commit d65197ad52494bed3b5e64708281b8295f76c391
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Fri Dec 13 10:01:28 2019 +0100

    um: Fix time-travel=inf-cpu with xor/raid6
    
    Today, I erroneously built a time-travel configuration with btrfs
    enabled, and noticed it cannot boot in time-travel=inf-cpu mode,
    both xor and raid6 speed measurement gets stuck.
    
    For xor, work around it by picking the first algorithm if inf-cpu
    mode is enabled.
    
    For raid6, I didn't find such a workaround, so disallow enabling
    time-travel mode if RAID6_PQ_BENCHMARK is enabled.
    
    With this, and RAID6_PQ_BENCHMARK disabled, I can boot a kernel
    that has btrfs enabled in time-travel=inf-cpu mode.
    
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Acked-by: Anton Ivanov <anton.ivanov@cambridgegreys.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>

diff --git a/arch/um/include/asm/xor.h b/arch/um/include/asm/xor.h
new file mode 100644
index 000000000000..7a3208c47cfc
--- /dev/null
+++ b/arch/um/include/asm/xor.h
@@ -0,0 +1,7 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+#include <asm-generic/xor.h>
+#include <shared/timer-internal.h>
+
+/* pick an arbitrary one - measuring isn't possible with inf-cpu */
+#define XOR_SELECT_TEMPLATE(x)	\
+	(time_travel_mode == TT_MODE_INFCPU ? &xor_block_8regs : NULL)

commit f5e900770f387d7a4c633b7cef105039f32a85c1
Author: Al Viro <viro@ftp.linux.org.uk>
Date:   Thu Aug 18 20:13:10 2011 +0100

    um: switch to generic-y
    
    kill wrapper headers
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Richard Weinberger <richard@nod.at>

diff --git a/arch/um/include/asm/xor.h b/arch/um/include/asm/xor.h
deleted file mode 100644
index a19db3e17241..000000000000
--- a/arch/um/include/asm/xor.h
+++ /dev/null
@@ -1,6 +0,0 @@
-#ifndef __UM_XOR_H
-#define __UM_XOR_H
-
-#include "asm-generic/xor.h"
-
-#endif

commit 8ede0bdb63305d3353efd97e9af6210afb05734e
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Sun Aug 17 19:13:17 2008 -0400

    x86, um: initial part of asm-um move
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

diff --git a/arch/um/include/asm/xor.h b/arch/um/include/asm/xor.h
new file mode 100644
index 000000000000..a19db3e17241
--- /dev/null
+++ b/arch/um/include/asm/xor.h
@@ -0,0 +1,6 @@
+#ifndef __UM_XOR_H
+#define __UM_XOR_H
+
+#include "asm-generic/xor.h"
+
+#endif
