commit 7938e6315c9af3d4a40185b537733bbce842305a
Author: Nick Hu <nickhu@andestech.com>
Date:   Wed Oct 24 18:14:32 2018 +0800

    nds32: Power management for nds32
    
    There are three sleep states in nds32:
            suspend to idle,
            suspend to standby,
            suspend to ram
    
    In suspend to ram, we use the 'standby' instruction to emulate
    power management device to hang the system util wakeup source
    send wakeup events to break the loop.
    
    First, we push the general purpose registers and system registers
    to stack. Second, we translate stack pointer to physical address
    and store to memory to save the stack pointer. Third, after write
    back and invalid the cache we hang in 'standby' intruction.
    When wakeup source trigger wake up events, the loop will be break
    and resume the system.
    
    Signed-off-by: Nick Hu <nickhu@andestech.com>
    Acked-by: Pavel Machek <pavel@ucw.cz>
    Acked-by: Greentime Hu <greentime@andestech.com>
    Signed-off-by: Greentime Hu <greentime@andestech.com>

diff --git a/arch/nds32/include/asm/suspend.h b/arch/nds32/include/asm/suspend.h
new file mode 100644
index 000000000000..6ed2418af1ac
--- /dev/null
+++ b/arch/nds32/include/asm/suspend.h
@@ -0,0 +1,11 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+// Copyright (C) 2008-2017 Andes Technology Corporation
+
+#ifndef __ASM_NDS32_SUSPEND_H
+#define __ASM_NDS32_SUSPEND_H
+
+extern void suspend2ram(void);
+extern void cpu_resume(void);
+extern unsigned long wake_mask;
+
+#endif
