commit 4726dd6082bc960a20b761428eafb34b8af075b5
Author: Michal Simek <michal.simek@xilinx.com>
Date:   Mon Feb 3 10:25:40 2020 +0100

    microblaze: Convert headers to SPDX license
    
    Covert all headers to SPDX.
    
    Signed-off-by: Michal Simek <michal.simek@xilinx.com>
    Reviewed-by: Stefan Asserhall <stefan.asserhall@xilinx.com>
    Reviewed-by: Arnd Bergmann <arnd@arndb.de>

diff --git a/arch/microblaze/include/asm/delay.h b/arch/microblaze/include/asm/delay.h
index ea2a9cd9b159..05fe9e3e0039 100644
--- a/arch/microblaze/include/asm/delay.h
+++ b/arch/microblaze/include/asm/delay.h
@@ -1,10 +1,5 @@
+/* SPDX-License-Identifier: GPL-2.0 */
 /*
- * include/asm-microblaze/delay.h
- *
- * This file is subject to the terms and conditions of the GNU General Public
- * License. See the file "COPYING" in the main directory of this archive
- * for more details.
- *
  * Copyright (C) 2008 Michal Simek
  * Copyright (C) 2007 John Williams
  * Copyright (C) 2006 Atmark Techno, Inc.

commit b6db0a56218c38455e52780338ad61e284a67e4c
Author: Michal Simek <michal.simek@xilinx.com>
Date:   Thu Dec 18 15:51:30 2014 +0100

    microblaze: Change extern inline to static inline
    
    With compilers which follow the C99 standard (like modern versions of gcc and
    clang), "extern inline" does the opposite thing from older versions of gcc
    (emits code for an externally linkable version of the inline function).
    
    "static inline" does the intended behavior in all cases instead.
    
    Description taken from:
    "staging, rtl8192e, LLVMLinux: Change extern inline to static inline"
    (sha1: 6d91857d4826b382b3fd4fad95f52713be646f96)
    
    The patch removes compilation warnings W=1:
    ./arch/microblaze/include/asm/delay.h:18:20: warning: no previous
    prototype for '__delay' [-Wmissing-prototypes]
     extern inline void __delay(unsigned long loops)
    ./arch/microblaze/include/asm/delay.h:46:20: warning: no previous
    prototype for '__udelay' [-Wmissing-prototypes]
     extern inline void __udelay(unsigned int x)
    ./arch/microblaze/include/asm/pgalloc.h:63:22: warning: no previous
    prototype for 'get_pgd_slow' [-Wmissing-prototypes]
     extern inline pgd_t *get_pgd_slow(void)
    ./arch/microblaze/include/asm/pgalloc.h:73:22: warning: no previous
    prototype for 'get_pgd_fast' [-Wmissing-prototypes]
     extern inline pgd_t *get_pgd_fast(void)
    ./arch/microblaze/include/asm/pgalloc.h:87:20: warning: no previous
    prototype for 'free_pgd_fast' [-Wmissing-prototypes]
     extern inline void free_pgd_fast(pgd_t *pgd)
    ./arch/microblaze/include/asm/pgalloc.h:94:20: warning: no previous
    prototype for 'free_pgd_slow' [-Wmissing-prototypes]
     extern inline void free_pgd_slow(pgd_t *pgd)
    ./arch/microblaze/include/asm/pgalloc.h:149:20: warning: no previous
    prototype for 'pte_free_fast' [-Wmissing-prototypes]
     extern inline void pte_free_fast(pte_t *pte)
    ./arch/microblaze/include/asm/pgalloc.h:156:20: warning: no previous
    prototype for 'pte_free_kernel' [-Wmissing-prototypes]
     extern inline void pte_free_kernel(struct mm_struct *mm, pte_t *pte)
    ./arch/microblaze/include/asm/pgalloc.h:161:20: warning: no previous
    prototype for 'pte_free_slow' [-Wmissing-prototypes]
     extern inline void pte_free_slow(struct page *ptepage)
    
    Signed-off-by: Michal Simek <michal.simek@xilinx.com>

diff --git a/arch/microblaze/include/asm/delay.h b/arch/microblaze/include/asm/delay.h
index 60cb39deb533..ea2a9cd9b159 100644
--- a/arch/microblaze/include/asm/delay.h
+++ b/arch/microblaze/include/asm/delay.h
@@ -15,7 +15,7 @@
 
 #include <linux/param.h>
 
-extern inline void __delay(unsigned long loops)
+static inline void __delay(unsigned long loops)
 {
 	asm volatile ("# __delay		\n\t"		\
 			"1: addi	%0, %0, -1\t\n"		\
@@ -43,7 +43,7 @@ extern inline void __delay(unsigned long loops)
 
 extern unsigned long loops_per_jiffy;
 
-extern inline void __udelay(unsigned int x)
+static inline void __udelay(unsigned int x)
 {
 
 	unsigned long long tmp =

commit ad1d4358e0fdc16017a809ed54f532e68e3c26b6
Author: Michal Simek <michal.simek@xilinx.com>
Date:   Wed Jul 9 13:23:55 2014 +0200

    microblaze: delay.h fix udelay and ndelay for 8 bit args
    
    Based on:
    "asm-generic: delay.h fix udelay and ndelay for 8 bit args"
    (sha1: a87e553fabe8ceadc6f90889066559234cf194c7)
    
    Signed-off-by: Michal Simek <michal.simek@xilinx.com>

diff --git a/arch/microblaze/include/asm/delay.h b/arch/microblaze/include/asm/delay.h
index 66fc24c24238..60cb39deb533 100644
--- a/arch/microblaze/include/asm/delay.h
+++ b/arch/microblaze/include/asm/delay.h
@@ -61,13 +61,29 @@ extern inline void __udelay(unsigned int x)
 extern void __bad_udelay(void);		/* deliberately undefined */
 extern void __bad_ndelay(void);		/* deliberately undefined */
 
-#define udelay(n) (__builtin_constant_p(n) ? \
-	((n) > __MAX_UDELAY ? __bad_udelay() : __udelay((n) * (19 * HZ))) : \
-	__udelay((n) * (19 * HZ)))
+#define udelay(n)						\
+	({							\
+		if (__builtin_constant_p(n)) {			\
+			if ((n) / __MAX_UDELAY >= 1)		\
+				__bad_udelay();			\
+			else					\
+				__udelay((n) * (19 * HZ));	\
+		} else {					\
+			__udelay((n) * (19 * HZ));		\
+		}						\
+	})
 
-#define ndelay(n) (__builtin_constant_p(n) ? \
-	((n) > __MAX_NDELAY ? __bad_ndelay() : __udelay((n) * HZ)) : \
-	__udelay((n) * HZ))
+#define ndelay(n)						\
+	({							\
+		if (__builtin_constant_p(n)) {			\
+			if ((n) / __MAX_NDELAY >= 1)		\
+				__bad_ndelay();			\
+			else					\
+				__udelay((n) * HZ);		\
+		} else {					\
+			__udelay((n) * HZ);			\
+		}						\
+	})
 
 #define muldiv(a, b, c)		(((a)*(b))/(c))
 

commit ac1566ece497b2a37667cc5d4258edb0bf3b6836
Author: Michal Simek <michal.simek@xilinx.com>
Date:   Thu Jan 30 15:25:37 2014 +0100

    microblaze: Fix missing HZ macro
    
    Add missing param.h header because of HZ macro.
    It is causing compilation failure:
    In file included from include/linux/delay.h:14:0,
                        from drivers/clk/qcom/reset.c:18:
    drivers/clk/qcom/reset.c: In function 'qcom_reset':
    arch/microblaze/include/asm/delay.h:39:35: error: 'HZ'
     undeclared (first use in this function)
    
    Signed-off-by: Michal Simek <michal.simek@xilinx.com>

diff --git a/arch/microblaze/include/asm/delay.h b/arch/microblaze/include/asm/delay.h
index 05b7d39e4391..66fc24c24238 100644
--- a/arch/microblaze/include/asm/delay.h
+++ b/arch/microblaze/include/asm/delay.h
@@ -13,6 +13,8 @@
 #ifndef _ASM_MICROBLAZE_DELAY_H
 #define _ASM_MICROBLAZE_DELAY_H
 
+#include <linux/param.h>
+
 extern inline void __delay(unsigned long loops)
 {
 	asm volatile ("# __delay		\n\t"		\

commit 216f03481d2fca7094f5f982a65acfc2ca14fa85
Author: Michal Simek <monstr@monstr.eu>
Date:   Fri Mar 27 14:25:27 2009 +0100

    microblaze_v8: delay.h, timex.h
    
    Reviewed-by: Ingo Molnar <mingo@elte.hu>
    Acked-by: Stephen Neuendorffer <stephen.neuendorffer@xilinx.com>
    Acked-by: John Linn <john.linn@xilinx.com>
    Acked-by: John Williams <john.williams@petalogix.com>
    Signed-off-by: Michal Simek <monstr@monstr.eu>

diff --git a/arch/microblaze/include/asm/delay.h b/arch/microblaze/include/asm/delay.h
new file mode 100644
index 000000000000..05b7d39e4391
--- /dev/null
+++ b/arch/microblaze/include/asm/delay.h
@@ -0,0 +1,72 @@
+/*
+ * include/asm-microblaze/delay.h
+ *
+ * This file is subject to the terms and conditions of the GNU General Public
+ * License. See the file "COPYING" in the main directory of this archive
+ * for more details.
+ *
+ * Copyright (C) 2008 Michal Simek
+ * Copyright (C) 2007 John Williams
+ * Copyright (C) 2006 Atmark Techno, Inc.
+ */
+
+#ifndef _ASM_MICROBLAZE_DELAY_H
+#define _ASM_MICROBLAZE_DELAY_H
+
+extern inline void __delay(unsigned long loops)
+{
+	asm volatile ("# __delay		\n\t"		\
+			"1: addi	%0, %0, -1\t\n"		\
+			"bneid	%0, 1b		\t\n"		\
+			"nop			\t\n"
+			: "=r" (loops)
+			: "0" (loops));
+}
+
+/*
+ * Note that 19 * 226 == 4294 ==~ 2^32 / 10^6, so
+ * loops = (4294 * usecs * loops_per_jiffy * HZ) / 2^32.
+ *
+ * The mul instruction gives us loops = (a * b) / 2^32.
+ * We choose a = usecs * 19 * HZ and b = loops_per_jiffy * 226
+ * because this lets us support a wide range of HZ and
+ * loops_per_jiffy values without either a or b overflowing 2^32.
+ * Thus we need usecs * HZ <= (2^32 - 1) / 19 = 226050910 and
+ * loops_per_jiffy <= (2^32 - 1) / 226 = 19004280
+ * (which corresponds to ~3800 bogomips at HZ = 100).
+ * -- paulus
+ */
+#define __MAX_UDELAY	(226050910UL/HZ)	/* maximum udelay argument */
+#define __MAX_NDELAY	(4294967295UL/HZ)	/* maximum ndelay argument */
+
+extern unsigned long loops_per_jiffy;
+
+extern inline void __udelay(unsigned int x)
+{
+
+	unsigned long long tmp =
+		(unsigned long long)x * (unsigned long long)loops_per_jiffy \
+			* 226LL;
+	unsigned loops = tmp >> 32;
+
+/*
+	__asm__("mulxuu %0,%1,%2" : "=r" (loops) :
+		"r" (x), "r" (loops_per_jiffy * 226));
+*/
+	__delay(loops);
+}
+
+extern void __bad_udelay(void);		/* deliberately undefined */
+extern void __bad_ndelay(void);		/* deliberately undefined */
+
+#define udelay(n) (__builtin_constant_p(n) ? \
+	((n) > __MAX_UDELAY ? __bad_udelay() : __udelay((n) * (19 * HZ))) : \
+	__udelay((n) * (19 * HZ)))
+
+#define ndelay(n) (__builtin_constant_p(n) ? \
+	((n) > __MAX_NDELAY ? __bad_ndelay() : __udelay((n) * HZ)) : \
+	__udelay((n) * HZ))
+
+#define muldiv(a, b, c)		(((a)*(b))/(c))
+
+#endif /* _ASM_MICROBLAZE_DELAY_H */
