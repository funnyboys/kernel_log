commit e5adbd6ec480164fe30ee65c94426cb12d64bc99
Merge: 70fbdfef4ba6 a67cd1fb660d
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Apr 5 11:57:12 2020 -0700

    Merge tag 'irq-urgent-2020-04-05' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull irq fixes from Thomas Gleixner:
     "Two reverts addressing regressions of the Xilinx interrupt controller
      driver which affected the PPC users"
    
    * tag 'irq-urgent-2020-04-05' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      Revert "irqchip/xilinx: Enable generic irq multi handler"
      Revert "irqchip/xilinx: Do not call irq_set_default_host()"

commit 4cea749d56bec9409f3bd126d2b2f949dc6c66e2
Author: Marc Zyngier <maz@kernel.org>
Date:   Mon Mar 30 10:43:59 2020 +0100

    Revert "irqchip/xilinx: Enable generic irq multi handler"
    
    This reverts commit a0789993bf8266e62fea6b4613945ba081c71e7d, which
    breaks a number of PPC platforms.
    
    Reported-by: Stephen Rothwell <sfr@canb.auug.org.au>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/44b64be7-9240-fd52-af90-e0245220f38b@xilinx.com

diff --git a/arch/microblaze/include/asm/irq.h b/arch/microblaze/include/asm/irq.h
index 5166f0893e2b..eac2fb4b3fb9 100644
--- a/arch/microblaze/include/asm/irq.h
+++ b/arch/microblaze/include/asm/irq.h
@@ -14,4 +14,7 @@
 struct pt_regs;
 extern void do_IRQ(struct pt_regs *regs);
 
+/* should be defined in each interrupt controller driver */
+extern unsigned int xintc_get_irq(void);
+
 #endif /* _ASM_MICROBLAZE_IRQ_H */

commit a8222fd5b80c7ec83f257060670becbeea9b50b9
Merge: cad18da0afb1 9fd1a1c9b3f2
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Mar 31 09:58:07 2020 -0700

    Merge tag 'microblaze-v5.7-rc1' of git://git.monstr.eu/linux-2.6-microblaze
    
    Pull microblaze updates from Michal Simek:
    
     - convert license headers to SPDX
    
     - cleanup header handling and use asm-generic one
    
     - get rid of earlyprintk residues
    
     - define barriers and use it in the code
    
     - get rid of setup_irq() for timer
    
     - various small addons and fixes
    
    * tag 'microblaze-v5.7-rc1' of git://git.monstr.eu/linux-2.6-microblaze:
      microblaze: Replace setup_irq() by request_irq()
      microblaze: Stop printing the virtual memory layout
      microblaze: Use asm generic cmpxchg.h for !SMP case
      microblaze: Define percpu sestion in linker file
      microblaze: Remove unused boot_cpuid variable
      microblaze: Add missing irqflags.h header
      microblaze: Add sync to tlb operations
      microblaze: Define microblaze barrier
      microblaze: Remove empty headers
      microblaze: Remove early printk setup
      microblaze: Remove architecture tlb.h and use generic one
      microblaze: Convert headers to SPDX license
      microblaze: Fix _reset() function
      microblaze: Kernel parameters should be parsed earlier

commit a0789993bf8266e62fea6b4613945ba081c71e7d
Author: Michal Simek <michal.simek@xilinx.com>
Date:   Tue Mar 17 18:25:59 2020 +0530

    irqchip/xilinx: Enable generic irq multi handler
    
    Register default arch handler via driver instead of directly pointing to
    xilinx intc controller. This patch makes architecture code more generic.
    
    Driver calls generic domain specific irq handler which does the most of
    things self. Also get rid of concurrent_irq counting which hasn't been
    exported anywhere.
    Based on this loop was also optimized by using do/while loop instead of
    goto loop.
    
    Signed-off-by: Michal Simek <michal.simek@xilinx.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Reviewed-by: Stefan Asserhall <stefan.asserhall@xilinx.com>
    Link: https://lore.kernel.org/r/20200317125600.15913-4-mubin.usman.sayyed@xilinx.com

diff --git a/arch/microblaze/include/asm/irq.h b/arch/microblaze/include/asm/irq.h
index eac2fb4b3fb9..5166f0893e2b 100644
--- a/arch/microblaze/include/asm/irq.h
+++ b/arch/microblaze/include/asm/irq.h
@@ -14,7 +14,4 @@
 struct pt_regs;
 extern void do_IRQ(struct pt_regs *regs);
 
-/* should be defined in each interrupt controller driver */
-extern unsigned int xintc_get_irq(void);
-
 #endif /* _ASM_MICROBLAZE_IRQ_H */

commit 4726dd6082bc960a20b761428eafb34b8af075b5
Author: Michal Simek <michal.simek@xilinx.com>
Date:   Mon Feb 3 10:25:40 2020 +0100

    microblaze: Convert headers to SPDX license
    
    Covert all headers to SPDX.
    
    Signed-off-by: Michal Simek <michal.simek@xilinx.com>
    Reviewed-by: Stefan Asserhall <stefan.asserhall@xilinx.com>
    Reviewed-by: Arnd Bergmann <arnd@arndb.de>

diff --git a/arch/microblaze/include/asm/irq.h b/arch/microblaze/include/asm/irq.h
index eac2fb4b3fb9..0a28e80bbab0 100644
--- a/arch/microblaze/include/asm/irq.h
+++ b/arch/microblaze/include/asm/irq.h
@@ -1,9 +1,6 @@
+/* SPDX-License-Identifier: GPL-2.0 */
 /*
  * Copyright (C) 2006 Atmark Techno, Inc.
- *
- * This file is subject to the terms and conditions of the GNU General Public
- * License. See the file "COPYING" in the main directory of this archive
- * for more details.
  */
 
 #ifndef _ASM_MICROBLAZE_IRQ_H

commit 6bf8be7ff7793213609d60acdda943c258e27bb9
Author: Michal Simek <michal.simek@xilinx.com>
Date:   Tue Aug 8 16:06:52 2017 +0200

    microblaze: Enable SPARSE_IRQ
    
    Enabling SPARSE_IRQ to use dynamically allocated irq descriptors.
    
    Signed-off-by: Mubin Sayyed <mubinusm@xilinx.com>
    Signed-off-by: Michal Simek <michal.simek@xilinx.com>

diff --git a/arch/microblaze/include/asm/irq.h b/arch/microblaze/include/asm/irq.h
index d785defeeed5..eac2fb4b3fb9 100644
--- a/arch/microblaze/include/asm/irq.h
+++ b/arch/microblaze/include/asm/irq.h
@@ -9,7 +9,6 @@
 #ifndef _ASM_MICROBLAZE_IRQ_H
 #define _ASM_MICROBLAZE_IRQ_H
 
-#define NR_IRQS		(32 + 1)
 #include <asm-generic/irq.h>
 
 struct pt_regs;

commit 2120a43527f3bd0efba0e893799acdd1486c2d1b
Author: Zubair Lutfullah Kakakhel <Zubair.Kakakhel@imgtec.com>
Date:   Mon Nov 14 12:13:48 2016 +0000

    irqchip/xilinx: Rename get_irq to xintc_get_irq
    
    Now that the driver is generic and used by multiple archs,
    get_irq is too generic.
    
    Rename get_irq to xintc_get_irq to avoid any conflicts
    
    Acked-by: Michal Simek <michal.simek@xilinx.com>
    Signed-off-by: Zubair Lutfullah Kakakhel <Zubair.Kakakhel@imgtec.com>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>

diff --git a/arch/microblaze/include/asm/irq.h b/arch/microblaze/include/asm/irq.h
index bab3b1393ad4..d785defeeed5 100644
--- a/arch/microblaze/include/asm/irq.h
+++ b/arch/microblaze/include/asm/irq.h
@@ -16,6 +16,6 @@ struct pt_regs;
 extern void do_IRQ(struct pt_regs *regs);
 
 /* should be defined in each interrupt controller driver */
-extern unsigned int get_irq(void);
+extern unsigned int xintc_get_irq(void);
 
 #endif /* _ASM_MICROBLAZE_IRQ_H */

commit 2462bacd0334d918f9fcd79fc59c403b76b36f8a
Author: Grant Likely <grant.likely@secretlab.ca>
Date:   Thu Jan 26 14:10:13 2012 -0700

    irq_domain/microblaze: Convert microblaze to use irq_domains
    
    This patch converts Microblaze to use the irq_domain remapper and get
    away from hard coding the offset between hwirq number and the linux irq
    number space.  This also paves the way for multiple interrupt controllers.
    
    v2: Don't enable SPARSE_IRQ and keep NR_IRQS set to 33
    
    Signed-off-by: Grant Likely <grant.likely@secretlab.ca>
    Signed-off-by: Michal Simek <monstr@monstr.eu>
    Cc: Rob Herring <rob.herring@calxeda.com>
    Cc: John Williams <john.williams@petalogix.com>
    Cc: John Linn <john.linn@xilinx.com>

diff --git a/arch/microblaze/include/asm/irq.h b/arch/microblaze/include/asm/irq.h
index 7798ad14c610..bab3b1393ad4 100644
--- a/arch/microblaze/include/asm/irq.h
+++ b/arch/microblaze/include/asm/irq.h
@@ -9,49 +9,13 @@
 #ifndef _ASM_MICROBLAZE_IRQ_H
 #define _ASM_MICROBLAZE_IRQ_H
 
-
-/*
- * Linux IRQ# is currently offset by one to map to the hardware
- * irq number. So hardware IRQ0 maps to Linux irq 1.
- */
-#define NO_IRQ_OFFSET	1
-#define IRQ_OFFSET	NO_IRQ_OFFSET
-#define NR_IRQS		(32 + IRQ_OFFSET)
+#define NR_IRQS		(32 + 1)
 #include <asm-generic/irq.h>
 
-/* This type is the placeholder for a hardware interrupt number. It has to
- * be big enough to enclose whatever representation is used by a given
- * platform.
- */
-typedef unsigned long irq_hw_number_t;
-
-extern unsigned int nr_irq;
-
 struct pt_regs;
 extern void do_IRQ(struct pt_regs *regs);
 
-/** FIXME - not implement
- * irq_dispose_mapping - Unmap an interrupt
- * @virq: linux virq number of the interrupt to unmap
- */
-static inline void irq_dispose_mapping(unsigned int virq)
-{
-	return;
-}
-
-struct irq_domain;
-
-/**
- * irq_create_mapping - Map a hardware interrupt into linux virq space
- * @host: host owning this hardware interrupt or NULL for default host
- * @hwirq: hardware irq number in that host space
- *
- * Only one mapping per hardware interrupt is permitted. Returns a linux
- * virq number.
- * If the sense/trigger is to be specified, set_irq_type() should be called
- * on the number returned from that call.
- */
-extern unsigned int irq_create_mapping(struct irq_domain *host,
-					irq_hw_number_t hwirq);
+/* should be defined in each interrupt controller driver */
+extern unsigned int get_irq(void);
 
 #endif /* _ASM_MICROBLAZE_IRQ_H */

commit 644bd954313254b54e08b69077e16831b6e04dfa
Author: Grant Likely <grant.likely@secretlab.ca>
Date:   Tue Feb 14 14:06:49 2012 -0700

    irq_domain: convert microblaze from irq_host to irq_domain
    
    Trivial change, microblaze doesn't use irq remapping yet.
    
    Signed-off-by: Grant Likely <grant.likely@secretlab.ca>
    Cc: Michal Simek <monstr@monstr.eu>
    Cc: Thomas Gleixner <tglx@linutronix.de>

diff --git a/arch/microblaze/include/asm/irq.h b/arch/microblaze/include/asm/irq.h
index a175132e4496..7798ad14c610 100644
--- a/arch/microblaze/include/asm/irq.h
+++ b/arch/microblaze/include/asm/irq.h
@@ -39,7 +39,7 @@ static inline void irq_dispose_mapping(unsigned int virq)
 	return;
 }
 
-struct irq_host;
+struct irq_domain;
 
 /**
  * irq_create_mapping - Map a hardware interrupt into linux virq space
@@ -51,7 +51,7 @@ struct irq_host;
  * If the sense/trigger is to be specified, set_irq_type() should be called
  * on the number returned from that call.
  */
-extern unsigned int irq_create_mapping(struct irq_host *host,
+extern unsigned int irq_create_mapping(struct irq_domain *host,
 					irq_hw_number_t hwirq);
 
 #endif /* _ASM_MICROBLAZE_IRQ_H */

commit 18e3b1075b1bc4a6027a6612fe70a5c81c209ec7
Author: Michal Simek <monstr@monstr.eu>
Date:   Wed Dec 21 13:10:24 2011 +0100

    microblaze: Remove NO_IRQ from architecture
    
    NO_IRQ shouldn't be used by any driver. All Microblaze
    drivers are fixed that's why NO_IRQ can be removed.
    
    Also fix pci-common.c which has references to NO_IRQ removed.
    
    Signed-off-by: Michal Simek <monstr@monstr.eu>
    Reviewed-by: Ryan Mallon <rmallon@gmail.com>
    Acked-by: Grant Likely <grant.likely@secretlab.ca>
    CC: Benjamin Herrenschmidt <benh@kernel.crashing.org>

diff --git a/arch/microblaze/include/asm/irq.h b/arch/microblaze/include/asm/irq.h
index b116a825de77..a175132e4496 100644
--- a/arch/microblaze/include/asm/irq.h
+++ b/arch/microblaze/include/asm/irq.h
@@ -27,8 +27,6 @@ typedef unsigned long irq_hw_number_t;
 
 extern unsigned int nr_irq;
 
-#define NO_IRQ 0
-
 struct pt_regs;
 extern void do_IRQ(struct pt_regs *regs);
 

commit 6c7a2676f594ca9a30203b4fd5dc26b53682cffe
Author: Michal Simek <monstr@monstr.eu>
Date:   Fri Dec 9 10:45:20 2011 +0100

    microblaze: Change NO_IRQ to 0
    
    As has been discussed many times[1], Using NO_IRQ set to anything other
    than 0 is bug waiting to happen since many drivers follow the pattern
    "if (!irq)" for testing whether or not an irq has been set.
    
    This patch changes the Microblaze NO_IRQ setting from -1 to 0 to bring
    it in line with most of the rest of the kernel.  It also prepares for
    Microblaze eventually supporting multiple interrupt controllers by
    breaking the assumption that hwirq# == Linux IRQ#.  The Linux IRQ
    number is just a cookie with no guarantee of a direct relationship
    with the hardware irq arrangement.
    
    At this point, Microblaze interrupt handling only supports only one
    instance of one kind of interrupt controller (xilinx_intc).  This change
    shouldn't affect any architecture code outside of the interrupt
    controller driver and the irq_of mapping.
    
    Updated to 3.2 and to use irq_data.hwirq by Rob Herring.
    Tested and fixed by Michal Simek.
    
    [1] http://lkml.org/lkml/2005/11/21/221
    
    Signed-off-by: Grant Likely <grant.likely@secretlab.ca>
    Signed-off-by: Rob Herring <rob.herring@calxeda.com>
    Signed-off-by: Michal Simek <monstr@monstr.eu>

diff --git a/arch/microblaze/include/asm/irq.h b/arch/microblaze/include/asm/irq.h
index cc54187f3d38..b116a825de77 100644
--- a/arch/microblaze/include/asm/irq.h
+++ b/arch/microblaze/include/asm/irq.h
@@ -9,7 +9,14 @@
 #ifndef _ASM_MICROBLAZE_IRQ_H
 #define _ASM_MICROBLAZE_IRQ_H
 
-#define NR_IRQS 32
+
+/*
+ * Linux IRQ# is currently offset by one to map to the hardware
+ * irq number. So hardware IRQ0 maps to Linux irq 1.
+ */
+#define NO_IRQ_OFFSET	1
+#define IRQ_OFFSET	NO_IRQ_OFFSET
+#define NR_IRQS		(32 + IRQ_OFFSET)
 #include <asm-generic/irq.h>
 
 /* This type is the placeholder for a hardware interrupt number. It has to
@@ -20,7 +27,7 @@ typedef unsigned long irq_hw_number_t;
 
 extern unsigned int nr_irq;
 
-#define NO_IRQ (-1)
+#define NO_IRQ 0
 
 struct pt_regs;
 extern void do_IRQ(struct pt_regs *regs);

commit caa66ce9055d15fb319075ebcf30fbc666b41665
Author: Michal Simek <monstr@monstr.eu>
Date:   Thu Mar 10 10:39:51 2011 +0100

    microblaze: Fix circular headers dependency when ftrace is enabled.
    
    Remove compilation failure when ftrace in enabled.
    
    Error log:
      CC      kernel/trace/power-traces.o
    In file included from arch/microblaze/include/asm/irq.h:15,
                     from include/linux/irq.h:27,
                     from include/asm-generic/hardirq.h:12,
                     from arch/microblaze/include/asm/hardirq.h:15,
                     from include/linux/hardirq.h:7,
                     from include/linux/ftrace_event.h:7,
                     from include/trace/ftrace.h:19,
                     from include/trace/define_trace.h:96,
                     from include/trace/events/power.h:240,
                     from kernel/trace/power-traces.c:14:
    include/linux/interrupt.h: In function '__raise_softirq_irqoff':
    include/linux/interrupt.h:413: error: implicit declaration of function 'trace_softirq_raise'
    In file included from include/trace/ftrace.h:554,
                     from include/trace/define_trace.h:96,
                     from include/trace/events/power.h:240,
                     from kernel/trace/power-traces.c:14:
    include/trace/events/irq.h: In function 'ftrace_test_probe_irq_handler_entry':
    include/trace/events/irq.h:37: error: implicit declaration of function 'check_trace_callback_type_irq_handler_entry'
    include/trace/events/irq.h: In function 'ftrace_test_probe_irq_handler_exit':
    include/trace/events/irq.h:67: error: implicit declaration of function 'check_trace_callback_type_irq_handler_exit'
    include/trace/events/irq.h: In function 'ftrace_test_probe_softirq_entry':
    include/trace/events/irq.h:112: error: implicit declaration of function 'check_trace_callback_type_softirq_entry'
    include/trace/events/irq.h: In function 'ftrace_test_probe_softirq_exit':
    include/trace/events/irq.h:126: error: implicit declaration of function 'check_trace_callback_type_softirq_exit'
    include/trace/events/irq.h: In function 'ftrace_test_probe_softirq_raise':
    include/trace/events/irq.h:140: error: implicit declaration of function 'check_trace_callback_type_softirq_raise'
    make[5]: *** [kernel/trace/power-traces.o] Error 1
    make[4]: *** [kernel/trace] Error 2
    make[3]: *** [kernel] Error 2
    
    Suggested-by: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Michal Simek <monstr@monstr.eu>

diff --git a/arch/microblaze/include/asm/irq.h b/arch/microblaze/include/asm/irq.h
index ec5583d6111c..cc54187f3d38 100644
--- a/arch/microblaze/include/asm/irq.h
+++ b/arch/microblaze/include/asm/irq.h
@@ -12,8 +12,6 @@
 #define NR_IRQS 32
 #include <asm-generic/irq.h>
 
-#include <linux/interrupt.h>
-
 /* This type is the placeholder for a hardware interrupt number. It has to
  * be big enough to enclose whatever representation is used by a given
  * platform.

commit e3873444990dd6f8a095d1f72b5ad45192f8c506
Author: Grant Likely <grant.likely@secretlab.ca>
Date:   Fri Jun 18 11:09:59 2010 -0600

    of/irq: Move irq_of_parse_and_map() to common code
    
    Merge common code between PowerPC and Microblaze.  SPARC implements
    irq_of_parse_and_map(), but the implementation is different, so it
    does not use this code.
    
    Signed-off-by: Grant Likely <grant.likely@secretlab.ca>
    Acked-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Michal Simek <monstr@monstr.eu>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Stephen Rothwell <sfr@canb.auug.org.au>
    Cc: Jeremy Kerr <jeremy.kerr@canonical.com>

diff --git a/arch/microblaze/include/asm/irq.h b/arch/microblaze/include/asm/irq.h
index 31a35c33df63..ec5583d6111c 100644
--- a/arch/microblaze/include/asm/irq.h
+++ b/arch/microblaze/include/asm/irq.h
@@ -27,17 +27,6 @@ extern unsigned int nr_irq;
 struct pt_regs;
 extern void do_IRQ(struct pt_regs *regs);
 
-/**
- * irq_of_parse_and_map - Parse and Map an interrupt into linux virq space
- * @device: Device node of the device whose interrupt is to be mapped
- * @index: Index of the interrupt to map
- *
- * This function is a wrapper that chains of_irq_map_one() and
- * irq_create_of_mapping() to make things easier to callers
- */
-struct device_node;
-extern unsigned int irq_of_parse_and_map(struct device_node *dev, int index);
-
 /** FIXME - not implement
  * irq_dispose_mapping - Unmap an interrupt
  * @virq: linux virq number of the interrupt to unmap
@@ -62,17 +51,4 @@ struct irq_host;
 extern unsigned int irq_create_mapping(struct irq_host *host,
 					irq_hw_number_t hwirq);
 
-/**
- * irq_create_of_mapping - Map a hardware interrupt into linux virq space
- * @controller: Device node of the interrupt controller
- * @inspec: Interrupt specifier from the device-tree
- * @intsize: Size of the interrupt specifier from the device-tree
- *
- * This function is identical to irq_create_mapping except that it takes
- * as input informations straight from the device-tree (typically the results
- * of the of_irq_map_*() functions.
- */
-extern unsigned int irq_create_of_mapping(struct device_node *controller,
-					u32 *intspec, unsigned int intsize);
-
 #endif /* _ASM_MICROBLAZE_IRQ_H */

commit c6ba01a4c7806d134c8d483525997559071d0990
Author: Michal Simek <monstr@monstr.eu>
Date:   Thu Jan 14 15:16:31 2010 +0100

    microblaze: Add irq_create_{of_,}mapping functions
    
    Support function for PCI. We don't use any advance mapping mechanism
    that's why implementation is simple.
    
    Signed-off-by: Michal Simek <monstr@monstr.eu>

diff --git a/arch/microblaze/include/asm/irq.h b/arch/microblaze/include/asm/irq.h
index 90f050535ebe..31a35c33df63 100644
--- a/arch/microblaze/include/asm/irq.h
+++ b/arch/microblaze/include/asm/irq.h
@@ -14,6 +14,12 @@
 
 #include <linux/interrupt.h>
 
+/* This type is the placeholder for a hardware interrupt number. It has to
+ * be big enough to enclose whatever representation is used by a given
+ * platform.
+ */
+typedef unsigned long irq_hw_number_t;
+
 extern unsigned int nr_irq;
 
 #define NO_IRQ (-1)
@@ -21,7 +27,8 @@ extern unsigned int nr_irq;
 struct pt_regs;
 extern void do_IRQ(struct pt_regs *regs);
 
-/* irq_of_parse_and_map - Parse and Map an interrupt into linux virq space
+/**
+ * irq_of_parse_and_map - Parse and Map an interrupt into linux virq space
  * @device: Device node of the device whose interrupt is to be mapped
  * @index: Index of the interrupt to map
  *
@@ -40,4 +47,32 @@ static inline void irq_dispose_mapping(unsigned int virq)
 	return;
 }
 
+struct irq_host;
+
+/**
+ * irq_create_mapping - Map a hardware interrupt into linux virq space
+ * @host: host owning this hardware interrupt or NULL for default host
+ * @hwirq: hardware irq number in that host space
+ *
+ * Only one mapping per hardware interrupt is permitted. Returns a linux
+ * virq number.
+ * If the sense/trigger is to be specified, set_irq_type() should be called
+ * on the number returned from that call.
+ */
+extern unsigned int irq_create_mapping(struct irq_host *host,
+					irq_hw_number_t hwirq);
+
+/**
+ * irq_create_of_mapping - Map a hardware interrupt into linux virq space
+ * @controller: Device node of the interrupt controller
+ * @inspec: Interrupt specifier from the device-tree
+ * @intsize: Size of the interrupt specifier from the device-tree
+ *
+ * This function is identical to irq_create_mapping except that it takes
+ * as input informations straight from the device-tree (typically the results
+ * of the of_irq_map_*() functions.
+ */
+extern unsigned int irq_create_of_mapping(struct device_node *controller,
+					u32 *intspec, unsigned int intsize);
+
 #endif /* _ASM_MICROBLAZE_IRQ_H */

commit 0a58458341fd571e521be542ff746a4a8995980c
Author: Remis Lima Baima <remis.developer@googlemail.com>
Date:   Thu Jun 18 19:55:33 2009 +0200

    microblaze: convert all simple headers to use asm-generic
    
    All the simple microblaze header files were adapted to use their
    asm-generic implementations. These files are more simple and were quite
    straightforward to change.
    
    fb.h, vga.h and parport.h previously did not exist, using
    the generic version makes it possible to build more drivers
    successfully in allyesonfig.
    
    Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Michal Simek <monstr@monstr.eu>

diff --git a/arch/microblaze/include/asm/irq.h b/arch/microblaze/include/asm/irq.h
index db515deaa720..90f050535ebe 100644
--- a/arch/microblaze/include/asm/irq.h
+++ b/arch/microblaze/include/asm/irq.h
@@ -10,6 +10,7 @@
 #define _ASM_MICROBLAZE_IRQ_H
 
 #define NR_IRQS 32
+#include <asm-generic/irq.h>
 
 #include <linux/interrupt.h>
 
@@ -17,11 +18,6 @@ extern unsigned int nr_irq;
 
 #define NO_IRQ (-1)
 
-static inline int irq_canonicalize(int irq)
-{
-	return irq;
-}
-
 struct pt_regs;
 extern void do_IRQ(struct pt_regs *regs);
 

commit eedbdab99fffb8ed71cac75a722088b8ace2583c
Author: Michal Simek <monstr@monstr.eu>
Date:   Fri Mar 27 14:25:49 2009 +0100

    microblaze_v8: Interrupt handling and timer support
    
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Ingo Molnar <mingo@elte.hu>
    Reviewed-by: Stephen Neuendorffer <stephen.neuendorffer@xilinx.com>
    Acked-by: John Linn <john.linn@xilinx.com>
    Acked-by: John Williams <john.williams@petalogix.com>
    Signed-off-by: Michal Simek <monstr@monstr.eu>

diff --git a/arch/microblaze/include/asm/irq.h b/arch/microblaze/include/asm/irq.h
new file mode 100644
index 000000000000..db515deaa720
--- /dev/null
+++ b/arch/microblaze/include/asm/irq.h
@@ -0,0 +1,47 @@
+/*
+ * Copyright (C) 2006 Atmark Techno, Inc.
+ *
+ * This file is subject to the terms and conditions of the GNU General Public
+ * License. See the file "COPYING" in the main directory of this archive
+ * for more details.
+ */
+
+#ifndef _ASM_MICROBLAZE_IRQ_H
+#define _ASM_MICROBLAZE_IRQ_H
+
+#define NR_IRQS 32
+
+#include <linux/interrupt.h>
+
+extern unsigned int nr_irq;
+
+#define NO_IRQ (-1)
+
+static inline int irq_canonicalize(int irq)
+{
+	return irq;
+}
+
+struct pt_regs;
+extern void do_IRQ(struct pt_regs *regs);
+
+/* irq_of_parse_and_map - Parse and Map an interrupt into linux virq space
+ * @device: Device node of the device whose interrupt is to be mapped
+ * @index: Index of the interrupt to map
+ *
+ * This function is a wrapper that chains of_irq_map_one() and
+ * irq_create_of_mapping() to make things easier to callers
+ */
+struct device_node;
+extern unsigned int irq_of_parse_and_map(struct device_node *dev, int index);
+
+/** FIXME - not implement
+ * irq_dispose_mapping - Unmap an interrupt
+ * @virq: linux virq number of the interrupt to unmap
+ */
+static inline void irq_dispose_mapping(unsigned int virq)
+{
+	return;
+}
+
+#endif /* _ASM_MICROBLAZE_IRQ_H */
