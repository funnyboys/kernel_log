commit d590284419b1d7cc2dc646e9bdde4da19061cf0f
Merge: 1e24aaabdee9 2735913c1079
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Sep 17 14:04:43 2019 -0700

    Merge tag 's390-5.4-1' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux
    
    Pull s390 updates from Vasily Gorbik:
    
     - Add support for IBM z15 machines.
    
     - Add SHA3 and CCA AES cipher key support in zcrypt and pkey
       refactoring.
    
     - Move to arch_stack_walk infrastructure for the stack unwinder.
    
     - Various kasan fixes and improvements.
    
     - Various command line parsing fixes.
    
     - Improve decompressor phase debuggability.
    
     - Lift no bss usage restriction for the early code.
    
     - Use refcount_t for reference counters for couple of places in mm
       code.
    
     - Logging improvements and return code fix in vfio-ccw code.
    
     - Couple of zpci fixes and minor refactoring.
    
     - Remove some outdated documentation.
    
     - Fix secure boot detection.
    
     - Other various minor code clean ups.
    
    * tag 's390-5.4-1' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux: (48 commits)
      s390: remove pointless drivers-y in drivers/s390/Makefile
      s390/cpum_sf: Fix line length and format string
      s390/pci: fix MSI message data
      s390: add support for IBM z15 machines
      s390/crypto: Support for SHA3 via CPACF (MSA6)
      s390/startup: add pgm check info printing
      s390/crypto: xts-aes-s390 fix extra run-time crypto self tests finding
      vfio-ccw: fix error return code in vfio_ccw_sch_init()
      s390: vfio-ap: fix warning reset not completed
      s390/base: remove unused s390_base_mcck_handler
      s390/sclp: Fix bit checked for has_sipl
      s390/zcrypt: fix wrong handling of cca cipher keygenflags
      s390/kasan: add kdump support
      s390/setup: avoid using strncmp with hardcoded length
      s390/sclp: avoid using strncmp with hardcoded length
      s390/module: avoid using strncmp with hardcoded length
      s390/pci: avoid using strncmp with hardcoded length
      s390/kaslr: reserve memory for kasan usage
      s390/mem_detect: provide single get_mem_detect_end
      s390/cmma: reuse kstrtobool for option value parsing
      ...

commit 724dc336b79ff965bd5773257642685cf33ed9af
Author: Vasily Gorbik <gor@linux.ibm.com>
Date:   Thu Aug 8 20:09:08 2019 +0200

    s390/startup: add pgm check info printing
    
    Try to print out startup pgm check info including exact linux kernel
    version, pgm interruption code and ilc, psw and general registers. Like
    the following:
    
    Linux version 5.3.0-rc7-07282-ge7b4d41d61bd-dirty (gor@tuxmaker) #3 SMP PREEMPT Thu Sep 5 16:07:34 CEST 2019
    Kernel fault: interruption code 0005 ilc:2
    PSW : 0000000180000000 0000000000012e52
          R:0 T:0 IO:0 EX:0 Key:0 M:0 W:0 P:0 AS:0 CC:0 PM:0 RI:0 EA:3
    GPRS: 0000000000000000 00ffffffffffffff 0000000000000000 0000000000019a58
          000000000000bf68 0000000000000000 0000000000000000 0000000000000000
          0000000000000000 0000000000000000 000000000001a041 0000000000000000
          0000000004c9c000 0000000000010070 0000000000012e42 000000000000beb0
    
    This info makes it apparent that kernel startup failed and might help
    to understand what went wrong without actual standalone dump.
    
    Printing code runs on its own stack of 1 page (at unused 0x5000), which
    should be sufficient for sclp_early_printk usage (typical stack usage
    observed has been around 512 bytes).
    
    The code has pgm check recursion prevention, despite pgm check info
    printing failure (follow on pgm check) or success it restores original
    faulty psw and gprs and does disabled wait.
    
    Reviewed-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>

diff --git a/arch/s390/boot/boot.h b/arch/s390/boot/boot.h
index 082905d97309..1f7a8d4aff28 100644
--- a/arch/s390/boot/boot.h
+++ b/arch/s390/boot/boot.h
@@ -9,6 +9,7 @@ void setup_boot_command_line(void);
 void parse_boot_command_line(void);
 void setup_memory_end(void);
 void print_missing_facilities(void);
+void print_pgm_check_info(void);
 unsigned long get_random_base(unsigned long safe_addr);
 
 extern int kaslr_enabled;

commit 868202ce15a7b52534257426a94f40b6d9f6150f
Author: Vasily Gorbik <gor@linux.ibm.com>
Date:   Wed Jul 17 19:38:42 2019 +0200

    s390/boot: add missing declarations and includes
    
    Add __swsusp_reset_dma declaration to avoid the following sparse warnings:
    arch/s390/kernel/setup.c:107:15: warning: symbol '__swsusp_reset_dma' was not declared. Should it be static?
    arch/s390/boot/startup.c:52:15: warning: symbol '__swsusp_reset_dma' was not declared. Should it be static?
    
    Add verify_facilities declaration to avoid the following sparse warning:
    arch/s390/boot/als.c:105:6: warning: symbol 'verify_facilities' was not declared. Should it be static?
    
    Include "boot.h" into arch/s390/boot/kaslr.c to expose get_random_base
    function declaration and avoid the following sparse warning:
    arch/s390/boot/kaslr.c:90:15: warning: symbol 'get_random_base' was not declared. Should it be static?
    
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>

diff --git a/arch/s390/boot/boot.h b/arch/s390/boot/boot.h
index 082905d97309..1c3b2b257637 100644
--- a/arch/s390/boot/boot.h
+++ b/arch/s390/boot/boot.h
@@ -8,6 +8,7 @@ void store_ipl_parmblock(void);
 void setup_boot_command_line(void);
 void parse_boot_command_line(void);
 void setup_memory_end(void);
+void verify_facilities(void);
 void print_missing_facilities(void);
 unsigned long get_random_base(unsigned long safe_addr);
 

commit 6abe28197024f732f1e298b1a593505282505857
Author: Vasily Gorbik <gor@linux.ibm.com>
Date:   Mon Jul 15 15:30:33 2019 +0200

    s390: enable detection of kernel version from bzImage
    
    Extend "parmarea" to include an offset of the version string, which is
    stored as 8-byte big endian value.
    
    To retrieve version string from bzImage reliably, one should check the
    presence of "S390EP" ascii string at 0x10008 (available since v3.2),
    then read the version string offset from 0x10428 (which has been 0
    since v3.2 up to now). The string is null terminated.
    
    Could be retrieved with the following "file" command magic (requires
    file v5.34):
    8 string \x02\x00\x00\x18\x60\x00\x00\x50\x02\x00\x00\x68\x60\x00\x00\x50\x40\x40\x40\x40\x40\x40\x40\x40 Linux S390
    >0x10008       string          S390EP
    >>0x10428      bequad          >0
    >>>(0x10428.Q) string          >\0             \b, version %s
    
    Reported-by: Petr Tesarik <ptesarik@suse.com>
    Suggested-by: Petr Tesarik <ptesarik@suse.com>
    Reviewed-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>

diff --git a/arch/s390/boot/boot.h b/arch/s390/boot/boot.h
index ad57c2205a71..082905d97309 100644
--- a/arch/s390/boot/boot.h
+++ b/arch/s390/boot/boot.h
@@ -12,6 +12,7 @@ void print_missing_facilities(void);
 unsigned long get_random_base(unsigned long safe_addr);
 
 extern int kaslr_enabled;
+extern const char kernel_version[];
 
 unsigned long read_ipl_report(unsigned long safe_offset);
 

commit b2d24b97b2a9691351920e700bfda4368c177232
Author: Gerald Schaefer <gerald.schaefer@de.ibm.com>
Date:   Sun Feb 3 21:37:20 2019 +0100

    s390/kernel: add support for kernel address space layout randomization (KASLR)
    
    This patch adds support for relocating the kernel to a random address.
    The random kernel offset is obtained from cpacf, using either TRNG, PRNO,
    or KMC_PRNG, depending on supported MSA level.
    
    KERNELOFFSET is added to vmcoreinfo, for crash --kaslr support.
    
    Signed-off-by: Gerald Schaefer <gerald.schaefer@de.ibm.com>
    Reviewed-by: Philipp Rudo <prudo@linux.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>

diff --git a/arch/s390/boot/boot.h b/arch/s390/boot/boot.h
index ca395fcff15e..ad57c2205a71 100644
--- a/arch/s390/boot/boot.h
+++ b/arch/s390/boot/boot.h
@@ -9,6 +9,9 @@ void setup_boot_command_line(void);
 void parse_boot_command_line(void);
 void setup_memory_end(void);
 void print_missing_facilities(void);
+unsigned long get_random_base(unsigned long safe_addr);
+
+extern int kaslr_enabled;
 
 unsigned long read_ipl_report(unsigned long safe_offset);
 

commit 9641b8cc733f70a5400aa7e6831de4542c46a94c
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Thu Feb 21 14:23:04 2019 +0100

    s390/ipl: read IPL report at early boot
    
    Read the IPL Report block provided by secure-boot, add the entries
    of the certificate list to the system key ring and print the list
    of components.
    
    PR: Adjust to Vasilys bootdata_preserved patch set. Preserve ipl_cert_list
    for later use in kexec_file.
    
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Philipp Rudo <prudo@linux.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>

diff --git a/arch/s390/boot/boot.h b/arch/s390/boot/boot.h
index 82bc06346e05..ca395fcff15e 100644
--- a/arch/s390/boot/boot.h
+++ b/arch/s390/boot/boot.h
@@ -10,4 +10,6 @@ void parse_boot_command_line(void);
 void setup_memory_end(void);
 void print_missing_facilities(void);
 
+unsigned long read_ipl_report(unsigned long safe_offset);
+
 #endif /* BOOT_BOOT_H */

commit 6d85dac2ab9292956b5864daee8e11c4e158a566
Author: Vasily Gorbik <gor@linux.ibm.com>
Date:   Wed Feb 27 17:36:35 2019 +0100

    s390: warn about clearing als implied facilities
    
    Add a warning about removing required architecture level set facilities
    via "facilities=" command line option.
    
    Reviewed-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>

diff --git a/arch/s390/boot/boot.h b/arch/s390/boot/boot.h
index 8665497fd335..82bc06346e05 100644
--- a/arch/s390/boot/boot.h
+++ b/arch/s390/boot/boot.h
@@ -8,5 +8,6 @@ void store_ipl_parmblock(void);
 void setup_boot_command_line(void);
 void parse_boot_command_line(void);
 void setup_memory_end(void);
+void print_missing_facilities(void);
 
 #endif /* BOOT_BOOT_H */

commit b5e804598d594934407a1a8548d7b65341fe2617
Author: Vasily Gorbik <gor@linux.ibm.com>
Date:   Wed Feb 27 16:52:42 2019 +0100

    s390: allow overriding facilities via command line
    
    Add "facilities=" command line option which allows to override
    facility bits returned by stfle. The main purpose of that is debugging
    aids which allows to test specific kernel behaviour depending on
    specific facilities presence. It also affects CPU alternatives.
    
    "facilities=" command line option format is comma separated list of
    integer values to be additionally set or cleared (if value is starting
    with "!"). Values ranges are also supported. e.g.:
    
    facilities=!130-160,159,167-169
    
    Reviewed-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>

diff --git a/arch/s390/boot/boot.h b/arch/s390/boot/boot.h
index fc41e2277ea8..8665497fd335 100644
--- a/arch/s390/boot/boot.h
+++ b/arch/s390/boot/boot.h
@@ -6,6 +6,7 @@ void startup_kernel(void);
 void detect_memory(void);
 void store_ipl_parmblock(void);
 void setup_boot_command_line(void);
+void parse_boot_command_line(void);
 void setup_memory_end(void);
 
 #endif /* BOOT_BOOT_H */

commit 49698745e53c417370ac5cfe8b849bb65d62f129
Author: Vasily Gorbik <gor@linux.ibm.com>
Date:   Tue May 15 13:28:53 2018 +0200

    s390: move ipl block and cmd line handling to early boot phase
    
    To distinguish zfcpdump case and to be able to parse some of the kernel
    command line arguments early (e.g. mem=) ipl block retrieval and command
    line construction code is moved to the early boot phase.
    
    "memory_end" is set up correctly respecting "mem=" and hsa_size in case
    of the zfcpdump.
    
    arch/s390/boot/string.c is introduced to provide string handling and
    command line parsing functions to early boot phase code for the compressed
    kernel image case.
    
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>

diff --git a/arch/s390/boot/boot.h b/arch/s390/boot/boot.h
index 808154b99a5d..fc41e2277ea8 100644
--- a/arch/s390/boot/boot.h
+++ b/arch/s390/boot/boot.h
@@ -4,5 +4,8 @@
 
 void startup_kernel(void);
 void detect_memory(void);
+void store_ipl_parmblock(void);
+void setup_boot_command_line(void);
+void setup_memory_end(void);
 
 #endif /* BOOT_BOOT_H */

commit 6966d604e2ec4ecf5691aea953538f63597a250d
Author: Vasily Gorbik <gor@linux.ibm.com>
Date:   Wed Apr 11 11:56:55 2018 +0200

    s390/mem_detect: move tprot loop to early boot phase
    
    Move memory detection to early boot phase. To store online memory
    regions "struct mem_detect_info" has been introduced together with
    for_each_mem_detect_block iterator. mem_detect_info is later converted
    to memblock.
    
    Also introduces sclp_early_get_meminfo function to get maximum physical
    memory and maximum increment number.
    
    Reviewed-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Reviewed-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>

diff --git a/arch/s390/boot/boot.h b/arch/s390/boot/boot.h
index 36c93e6cbc3f..808154b99a5d 100644
--- a/arch/s390/boot/boot.h
+++ b/arch/s390/boot/boot.h
@@ -3,5 +3,6 @@
 #define BOOT_BOOT_H
 
 void startup_kernel(void);
+void detect_memory(void);
 
 #endif /* BOOT_BOOT_H */

commit 8f75582a2fb6e2c5afc5252b6d6932f61a79c939
Author: Vasily Gorbik <gor@linux.ibm.com>
Date:   Thu Jul 19 13:11:28 2018 +0200

    s390: remove decompressor's head.S
    
    Decompressor's head.S provided "data mover" sole purpose of which has
    been to safely move uncompressed kernel at 0x100000 and jump to it.
    
    With current bzImage layout entire decompressor's code guaranteed to be
    in a safe location under 0x100000, and hence could not be overwritten
    during kernel move. For that reason head.S could be replaced with simple
    memmove function. To do so introduce early boot code phase which is
    executed from arch/s390/boot/head.S after "verify_facilities" and takes
    care of optional kernel image decompression and transition to it.
    
    Reviewed-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>

diff --git a/arch/s390/boot/boot.h b/arch/s390/boot/boot.h
new file mode 100644
index 000000000000..36c93e6cbc3f
--- /dev/null
+++ b/arch/s390/boot/boot.h
@@ -0,0 +1,7 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+#ifndef BOOT_BOOT_H
+#define BOOT_BOOT_H
+
+void startup_kernel(void);
+
+#endif /* BOOT_BOOT_H */
