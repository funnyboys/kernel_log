commit 287d6070acbb2529e24462faffca46663885dddc
Author: Philipp Rudo <prudo@linux.ibm.com>
Date:   Wed Jun 27 12:03:43 2018 +0200

    s390/purgatory: Remove duplicate variable definitions
    
    Currently there are some variables in the purgatory (e.g. kernel_entry)
    which are defined twice, once in assembler- and once in c-code. The reason
    for this is that these variables are set during purgatory load, where
    sanity checks on the corresponding Elf_Sym's are made, while they are used
    in assembler-code. Thus adding a second definition in c-code is a handy
    workaround to guarantee correct Elf_Sym's are created.
    
    When the purgatory is compiled with -fcommon (default for gcc on s390) this
    is no problem because both symbols are merged by the linker. However this
    is not required by ISO C and when the purgatory is built with -fno-common
    the linker fails with errors like
    
    arch/s390/purgatory/purgatory.o:(.bss+0x18): multiple definition of `kernel_entry'
    arch/s390/purgatory/head.o:/.../arch/s390/purgatory/head.S:230: first defined here
    
    Thus remove the duplicate definitions and add the required size and type
    information to the assembler definition. Also add -fno-common to the
    command line options to prevent similar hacks in the future.
    
    Signed-off-by: Philipp Rudo <prudo@linux.ibm.com>
    Acked-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>

diff --git a/arch/s390/include/asm/purgatory.h b/arch/s390/include/asm/purgatory.h
index 6090670df51f..e297bcfc476f 100644
--- a/arch/s390/include/asm/purgatory.h
+++ b/arch/s390/include/asm/purgatory.h
@@ -13,11 +13,5 @@
 
 int verify_sha256_digest(void);
 
-extern u64 kernel_entry;
-extern u64 kernel_type;
-
-extern u64 crash_start;
-extern u64 crash_size;
-
 #endif	/* __ASSEMBLY__ */
 #endif /* _S390_PURGATORY_H_ */

commit 598d76562cc2329ef2fdd95475e287b60ba9463f
Author: Sebastian Ott <sebott@linux.ibm.com>
Date:   Wed Apr 25 12:39:06 2018 +0200

    s390/kexec_file: add declaration of purgatory related globals
    
    Fix the following sparse complaints:
    
    arch/s390/purgatory/purgatory.c:18:5: warning: symbol 'kernel_entry' was not declared. Should it be static?
    arch/s390/purgatory/purgatory.c:19:5: warning: symbol 'kernel_type' was not declared. Should it be static?
    arch/s390/purgatory/purgatory.c:21:5: warning: symbol 'crash_start' was not declared. Should it be static?
    arch/s390/purgatory/purgatory.c:22:5: warning: symbol 'crash_size' was not declared. Should it be static?
    
    Signed-off-by: Sebastian Ott <sebott@linux.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>

diff --git a/arch/s390/include/asm/purgatory.h b/arch/s390/include/asm/purgatory.h
index e297bcfc476f..6090670df51f 100644
--- a/arch/s390/include/asm/purgatory.h
+++ b/arch/s390/include/asm/purgatory.h
@@ -13,5 +13,11 @@
 
 int verify_sha256_digest(void);
 
+extern u64 kernel_entry;
+extern u64 kernel_type;
+
+extern u64 crash_start;
+extern u64 crash_size;
+
 #endif	/* __ASSEMBLY__ */
 #endif /* _S390_PURGATORY_H_ */

commit 840798a1f52994c172270893bd2ec6013cc92e40
Author: Philipp Rudo <prudo@linux.vnet.ibm.com>
Date:   Mon Aug 28 15:32:36 2017 +0200

    s390/kexec_file: Add purgatory
    
    The common code expects the architecture to have a purgatory that runs
    between the two kernels. Add it now. For simplicity first skip crash
    support.
    
    Signed-off-by: Philipp Rudo <prudo@linux.vnet.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>

diff --git a/arch/s390/include/asm/purgatory.h b/arch/s390/include/asm/purgatory.h
new file mode 100644
index 000000000000..e297bcfc476f
--- /dev/null
+++ b/arch/s390/include/asm/purgatory.h
@@ -0,0 +1,17 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+/*
+ * Copyright IBM Corp. 2018
+ *
+ * Author(s): Philipp Rudo <prudo@linux.vnet.ibm.com>
+ */
+
+#ifndef _S390_PURGATORY_H_
+#define _S390_PURGATORY_H_
+#ifndef __ASSEMBLY__
+
+#include <linux/purgatory.h>
+
+int verify_sha256_digest(void);
+
+#endif	/* __ASSEMBLY__ */
+#endif /* _S390_PURGATORY_H_ */
